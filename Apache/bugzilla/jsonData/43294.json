[{"count": 0, "tags": [], "text": "XPath Extractor unconditionally sets namespace=false in the document factory \ncall; it should be settable in the GUI.\n\nThere is also a problem resolving namespaces defined in child elements - xalan \nappears to only understand XPath namespaces if they are defined at the top-\nlevel.\n\nFor example, xpathns1.xml defines the namespace \"ns\" on the first use of the \nns namespace - XPath cannot handle //ns:result as the namespace is not defined.\n\nWhereas xpathns2.xml defines the namespace \"ns\" on the root node, \nand //ns:result works OK - once the document factory namespace is set true.\n\nxpathns.jmx is a test plan showing the problem (requires namespace=true)", "is_private": false, "id": 107652, "creation_time": "2007-09-03T05:36:17Z", "time": "2007-09-03T05:36:17Z", "creator": "sebb@apache.org", "bug_id": 43294, "attachment_id": null}, {"count": 1, "text": "Created attachment 20760\nxpathns1.xml - ns defined on 1st use", "bug_id": 43294, "is_private": false, "id": 107653, "time": "2007-09-03T05:37:21Z", "creator": "sebb@apache.org", "creation_time": "2007-09-03T05:37:21Z", "tags": [], "attachment_id": 20760}, {"count": 2, "tags": [], "bug_id": 43294, "attachment_id": 20761, "text": "Created attachment 20761\nxpathns2.xml - ns defined at top level", "id": 107654, "time": "2007-09-03T05:37:52Z", "creator": "sebb@apache.org", "creation_time": "2007-09-03T05:37:52Z", "is_private": false}, {"count": 3, "text": "Created attachment 20762\nxpathns.jmx - test plan", "bug_id": 43294, "attachment_id": 20762, "id": 107655, "time": "2007-09-03T05:38:26Z", "creator": "sebb@apache.org", "creation_time": "2007-09-03T05:38:26Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "is_private": false, "id": 149505, "time": "2011-09-19T21:04:38Z", "bug_id": 43294, "creation_time": "2011-09-19T21:04:38Z", "text": "Hello,\nIt seems first part of this is already impl\u00e9mented, ie checkbox for namespace.\nFor the other one , it seems we must create a table where user Will map pr\u00e9fix to full namespace\nAnd then use Namespace resolver.\nDoes this seems ok for you ?\n\nRegards\nPhilippe Mouawad"}, {"count": 5, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "is_private": false, "id": 149514, "time": "2011-09-20T07:15:00Z", "bug_id": 43294, "creation_time": "2011-09-20T07:15:00Z", "text": "Hello,\nI tested quickly this approach by replacing current code of\nXPathExtractor#getValuesForXPath by this code:\n----------------------------------------------------------------------\n   private void getValuesForXPath(Document d,String query, List<String>\nmatchStrings)\n        throws TransformerException, XPathExpressionException {\n        String val = null;\n        final PrefixResolver resolver = new PrefixResolverDefault(d\n                .getDocumentElement());\n        NamespaceContext ctx = new NamespaceContext() {\n            public String getNamespaceURI(String prefix) {\n                String uri= null;\n// HARD CODED PREFIX THAT WOULD BE REPLACED BY TABLE INPUT OF USER\n                if (prefix.equals(\"ns\"))\n                    return \"http://biz.aol.com/schema/2006-12-18\";\n                else\n                    return resolver.getNamespaceForPrefix(prefix);\n            }\n\n            // Dummy implementation - not used!\n            public Iterator getPrefixes(String val) {\n                return null;\n            }\n\n            // Dummy implemenation - not used!\n            public String getPrefix(String uri) {\n                return null;\n            }\n        };\n\n        XPathFactory xpathFact = XPathFactory.newInstance();\n        XPath xpath = xpathFact.newXPath();\n        xpath.setNamespaceContext(ctx);\n        XPathExpression expr = xpath.compile(query);\n        NodeList nodeList = (NodeList) expr.evaluate(d,\nXPathConstants.NODESET);\n        int length = nodeList.getLength();\n        for (int i = 0 ; i < length; i++) {\n            Node match = nodeList.item(i);\n            if ( match instanceof Element){\n                if (getFragment()){\n                    val = getValueForNode(match);\n                } else {\n                    // elements have empty nodeValue, but we are usually\ninterested in their content\n                    final Node firstChild = match.getFirstChild();\n                    if (firstChild != null) {\n                        val = firstChild.getNodeValue();\n                    } else {\n                        val = match.getNodeValue(); // TODO is this correct?\n                    }\n                }\n            } else {\n               val = match.getNodeValue();\n            }\n            matchStrings.add(val);\n        }\n}\n\n---------------------------------------------------------------------------\nAnd it works.\n\nDo you agree with it ? \nIf so what would be the best :\n- Adding a table to input prefix=full namespace values to XPath Extractor ?\n- Adding a table to input prefix=full namespace values to XPath Extractor\nConfig element ?\n\nThank you for your answers.\nRegards\nPhilippe Mouawad"}, {"count": 6, "tags": [], "text": "I suspect it is quite a rare use-case, so I'm inclined to leave the code as it is and just document it.\n\nSeems wrong for JMeter to add a work-round for problems in Xalan which may one day be resolved.\n\nIt would probably be more useful to ensure that the XPath elements can use an alternate parser.\n\nIf the use-case turns out to be more frequent, and alternate parsers cannot help, then it would probably be worthwhile adding the work-round.", "attachment_id": null, "id": 151367, "creation_time": "2011-11-10T13:37:41Z", "time": "2011-11-10T13:37:41Z", "creator": "sebb@apache.org", "bug_id": 43294, "is_private": false}, {"count": 7, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "is_private": false, "id": 151394, "time": "2011-11-11T13:56:05Z", "bug_id": 43294, "creation_time": "2011-11-11T13:56:05Z", "text": "The issue is that if we don't use Xalan, then we don't have the ability to evaluate XPath expression without knowing their return type.\nI mean in standard java XPath, evaluate methods expect a second parameter which gives the expected return type otherwise it uses a String return type.\nI tried using standard Java XPath and I faced this issue.\n\n\nSecond, examining Xalan , Dom4j and jaxen: \nhttp://flrt.free.fr/jython/testjava/xpath_ns.html\n\nit seems giving them the prefix mapping is mandatory.\n\n\nSo with first issue we are stuck with Xalan (unless you see a solution).\nWith second it seems using a configuration element may be the only solution."}, {"count": 8, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 151410, "time": "2011-11-11T16:46:47Z", "bug_id": 43294, "creation_time": "2011-11-11T16:46:47Z", "is_private": false, "text": "I'd not realised that we used any Xalan-specific classes, but I see now that we use XPathAPI.\n\nWe should perhaps work towards removing that dependency ... seems like it is not very efficient anyway.\n\nAs a work-round, the simplest would be to allow the user to supply a properties file to provide the additional NS mappings.\n\nIf we do go down this route, we should probably provide the additional mappings for use with all other XPath elements, e.g. the XPath function."}, {"count": 9, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "is_private": false, "id": 151670, "time": "2011-11-20T20:55:47Z", "bug_id": 43294, "creation_time": "2011-11-20T20:55:47Z", "text": "Date: Sun Nov 20 20:55:08 2011\nNew Revision: 1204254\n\nURL: http://svn.apache.org/viewvc?rev=1204254&view=rev\nLog:\nBug 43294 - XPath Extractor namespace problems\nFirst part: Put in XPathUtil everything related to XPath computations\n\nModified:\n   jmeter/trunk/src/components/org/apache/jmeter/assertions/XPathAssertion.java\n   jmeter/trunk/src/components/org/apache/jmeter/assertions/gui/XPathPanel.java\n   jmeter/trunk/src/components/org/apache/jmeter/extractor/XPathExtractor.java\n   jmeter/trunk/src/core/org/apache/jmeter/util/XPathUtil.java\n   jmeter/trunk/src/functions/org/apache/jmeter/functions/XPathFileContainer.java"}, {"count": 10, "text": "Date: Sun Nov 20 22:11:36 2011\nNew Revision: 1204280\n\nURL: http://svn.apache.org/viewvc?rev=1204280&view=rev\nLog:\nBug 43294 - XPath Extractor namespace problems\n\nAdded:\n   jmeter/trunk/src/core/org/apache/jmeter/util/PropertiesBasedPrefixResolver.java   (with props)\nModified:\n   jmeter/trunk/src/core/org/apache/jmeter/util/XPathUtil.java\n   jmeter/trunk/xdocs/changes.xml\n   jmeter/trunk/xdocs/usermanual/component_reference.xml\n\n\nDate: Sun Nov 20 22:16:51 2011\nNew Revision: 1204281\n\nURL: http://svn.apache.org/viewvc?rev=1204281&view=rev\nLog:\nBug 43294 - XPath Extractor namespace problems\n\nModified:\n   jmeter/trunk/bin/jmeter.properties", "bug_id": 43294, "attachment_id": null, "id": 151676, "time": "2011-11-20T22:17:27Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-11-20T22:17:27Z", "tags": [], "is_private": false}]