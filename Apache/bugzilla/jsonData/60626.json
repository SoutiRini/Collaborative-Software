[{"count": 0, "tags": [], "bug_id": 60626, "attachment_id": 34663, "is_private": false, "id": 196307, "time": "2017-01-23T08:32:46Z", "creator": "pik@uniquare.com", "creation_time": "2017-01-23T08:32:46Z", "text": "Created attachment 34663\nVML file that causes the problem\n\nI have an Excel file that can't be loaded. I found that EvilUnclosedBRFixingInputStream has a problem with a VML file with was part of my Excel file. \n\nThe following sample code reproduces the problem:\n\nString xmlFile = \"vmlDrawing3.vml\";\nbyte[] data = Files.readAllBytes(Paths.get(xmlFile));\nByteArrayInputStream bis = new ByteArrayInputStream(data);\nEvilUnclosedBRFixingInputStream is = new EvilUnclosedBRFixingInputStream(bis);\nDocumentHelper.readDocument(is);\n\nThe following Exception is thrown, however not in all Operating Systems/JDK Versions:\n\n   Caused by: java.lang.ArrayIndexOutOfBoundsException: 2048\n     at org.apache.xerces.impl.io.UTF8Reader.read(UTF8Reader.java:336)\n     at org.apache.xerces.impl.XMLEntityScanner.load(XMLEntityScanner.java:1753)\n     at org.apache.xerces.impl.XMLEntityScanner.scanLiteral(XMLEntityScanner.java:834)\n     at org.apache.xerces.impl.XMLScanner.scanAttributeValue(XMLScanner.java:772)\n     at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanAttribute(XMLNSDocumentScannerImpl.java:529)\n     at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:181)\n     at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1653)\n     at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:324)\n     at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:875)\n     at org.apache.xerces.parsers.XML11Configuration.parse(XML11Configuration.java:798)\n     at org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:108)\n     at org.apache.xerces.parsers.DOMParser.parse(DOMParser.java:230)\n     at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:298)\n     at javax.xml.parsers.DocumentBuilder.parse(DocumentBuilder.java:121)\n     at org.apache.poi.util.DocumentHelper.readDocument(DocumentHelper.java:137)\n\t..."}, {"count": 1, "tags": [], "creator": "pik@uniquare.com", "is_private": false, "text": "I used a FilterInputStream to test if it works with another EvilUnclosedBRFixingInputStream implementation, and it did. I have attached the file, but not tested it any further.", "id": 196308, "time": "2017-01-23T08:34:52Z", "bug_id": 60626, "creation_time": "2017-01-23T08:34:52Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "pik@uniquare.com", "text": "Created attachment 34664\nAlternative implementation of EvilUnclosedBRFixingInputStream", "id": 196309, "time": "2017-01-23T08:36:02Z", "bug_id": 60626, "creation_time": "2017-01-23T08:36:02Z", "is_private": false, "attachment_id": 34664}, {"count": 3, "tags": [], "creator": "kiwiwings@apache.org", "text": "Not sure who copied from whom, but if this wasn't yours first, it would be nice if you've posted the source:\n\nhttp://stackoverflow.com/a/40941512/2066598\n\nhttps://github.com/Inbot/inbot-utils/blob/master/src/main/java/io/inbot/utils/ReplacingInputStream.java\n\nBtw. I'm facing exactly the same with some user input and from the looks of it, the new implementation looks cleaner ...", "id": 196572, "time": "2017-01-31T00:37:03Z", "bug_id": 60626, "creation_time": "2017-01-31T00:37:03Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "kiwiwings@apache.org", "text": "The old implementation was somehow affected by the amount of bytes which were  read ... although there was a test for different buffer sizes.\n\nI've updated the license references - but it should be ok, because the MIT license is compatible [1]\n\nfixed with r1782095 \n\n[1] https://www.apache.org/legal/resolved#category-a", "id": 196833, "time": "2017-02-08T01:26:50Z", "bug_id": 60626, "creation_time": "2017-02-08T01:26:50Z", "is_private": false, "attachment_id": null}]