[{"count": 0, "tags": [], "bug_id": 48087, "text": "This class extends XSSFSheet, but fails to initialize any of that class' member fields in its #read(InputStream is) method.\n\nThis means reading in any excel file with a chart sheet results in a Sheet instance that throws NPEs from just about any method.", "id": 131501, "time": "2009-10-29T11:53:12Z", "creator": "robin.salkeld@sap.com", "creation_time": "2009-10-29T11:53:12Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "yegor@dinom.ru", "text": "\nIt is not broken, rather not implemented. \n \nInitializing of the superclass is skipped intentionally. Chart sheets don't have rows/columns and most of methods from XSSFSheet don't make sense for XSSFChartSheet. \n\nCan you post a use-case that results in NPE? What methods are you calling? \n\nI agree that NPE is not appropriate. get* methods of the Sheet interface that don't make sense should either return an empty iterator or false or 0:\nAt least, the code below should NOT throw NPE:\nfor(Row row : chartSheet)\nfor(int i=0; i < chartSheet.getPhysicalNumberOfRows()) \n\nset* modifiers should either do nothing or throw \"Not supported for charts\".\n\n\nYegor", "count": 1, "id": 131506, "time": "2009-10-30T01:07:18Z", "bug_id": 48087, "creation_time": "2009-10-30T01:07:18Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "robin.salkeld@sap.com", "text": "(In reply to comment #1)\n> It is not broken, rather not implemented. \n> \n> Initializing of the superclass is skipped intentionally. Chart sheets don't\n> have rows/columns and most of methods from XSSFSheet don't make sense for\n> XSSFChartSheet. \n> \n> Can you post a use-case that results in NPE? What methods are you calling? \n> \n> I agree that NPE is not appropriate. get* methods of the Sheet interface that\n> don't make sense should either return an empty iterator or false or 0:\n> At least, the code below should NOT throw NPE:\n> for(Row row : chartSheet)\n> for(int i=0; i < chartSheet.getPhysicalNumberOfRows()) \n> \n> set* modifiers should either do nothing or throw \"Not supported for charts\".\n> \n> \n> Yegor\n\nNearly any method related to the data will do it, since all the fields are null. For a use case, let's say getFirstRowNum or getLastRowNum, since you'd need to call them at least to discover that a chart sheet has no actual data (or getPhysicalNumberOfRows() as you mentioned). Are you looking for a concrete test case?\n\nI should also point out that the implicit no argument constructor is inconsistent with the deserialization method (i.e. XSSFChartSheet(PackagePart part, PackageRelationship rel) followed by a call to #read), since the former actually DOES initialize the superclass.", "count": 2, "id": 131510, "time": "2009-10-30T10:26:36Z", "bug_id": 48087, "creation_time": "2009-10-30T10:26:36Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 48087, "is_private": false, "text": "Fixed in r832622\n\nThe simplest way to fix it is to initialize the superclass with a blank worksheet:\n\n    protected void read(InputStream is) throws IOException {\n        //initialize the supeclass with a blank worksheet\n        super.read(new ByteArrayInputStream(BLANK_WORKSHEET));\n\n        try {\n            chartsheet = ChartsheetDocument.Factory.parse(is).getChartsheet();\n        } catch (XmlException e){\n            throw new POIXMLException(e);\n        }\n    }\n\nThis way all get* methods of the superclass work.\n\nYegor", "id": 131650, "time": "2009-11-03T16:11:51Z", "creator": "yegor@dinom.ru", "creation_time": "2009-11-03T16:11:51Z", "attachment_id": null}]