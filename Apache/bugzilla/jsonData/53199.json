[{"count": 0, "tags": [], "creator": "patric@rufflar.com", "text": "ConnectionPool should be refactored to use a ScheduledExecutorService instead of a TimerTask.\n\nThis would enable providing a custom ScheduledExecutorService to jdbc pool to reduce expensive thread creation in certain environments\n(in my case: junit tests, where each test case will get a new environment, including a ConnectionPool)", "id": 158883, "time": "2012-05-07T16:15:31Z", "bug_id": 53199, "creation_time": "2012-05-07T16:15:31Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 53199, "is_private": false, "id": 158888, "attachment_id": null, "creator": "fhanik@apache.org", "creation_time": "2012-05-07T19:24:03Z", "time": "2012-05-07T19:24:03Z", "text": "hi Patric, I'm all for this. If you have a patch for this to get us started that would be great.\n\nThe requirements for the default implementation are\n\n1. No more than 1 thread should ever be started for this task\n\n2. The thread has to be created with the class loader of the library, not of the thread (context classloader)\n\n3. When the last pool is closed that is using the cleaner is closed, the thread should also go away"}, {"count": 2, "tags": [], "bug_id": 53199, "is_private": false, "id": 162406, "attachment_id": null, "creator": "patric@rufflar.com", "creation_time": "2012-09-26T11:28:43Z", "time": "2012-09-26T11:28:43Z", "text": "I just want to add that the current (TimerTask) implementation seems to have a bug which causes that the PoolCleaner Thread will not be terminated/canceled in some cases.\nI am currently unable to reproduce this but I saw this issue several times."}]