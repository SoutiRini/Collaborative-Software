[{"count": 0, "tags": [], "bug_id": 46721, "attachment_id": null, "id": 124894, "time": "2009-02-17T08:36:05Z", "creator": "amram@free.fr", "creation_time": "2009-02-17T08:36:05Z", "is_private": false, "text": "Hello,\n\nLine 106 of SVGFeOffsetElementBridge states:\n\n        float dx = convertNumber(filterElement, SVG_DX_ATTRIBUTE, 0, ctx);\n        float dy = convertNumber(filterElement, SVG_DY_ATTRIBUTE, 0, ctx);\n>       AffineTransform at = AffineTransform.getTranslateInstance(dx, dy);\n\n\nHowever, this sets an offset filter in userSpace coordinates, not in objectBoundingBox units.\n\nThe translation should take into account the object bounding box (as required by spec http://www.w3.org/TR/SVG/filters.html#feOffsetElement),\nwhich is available in \n  filteredElement.geometryBounds \nin this method.\n\nI suggest in case of objectBoundingBox units to rather set:\n\n>       AffineTransform at = AffineTransform.getTranslateInstance(\n          dx * filteredElement.geometryBounds.getWidth() , \n          dy * filteredElement.geometryBounds.getHeight() );\n\nBeing new to Batik, I don't master all the implications, so decide what's best!\n\nCongrats for Batik, this great piece of work!\n\n-----------------------------------------\n\nTest case:\n\nApply the following filter to any <svg>\n\n\n  <defs>\n  \t<filter id=\"CenteringFilter\" filterUnits=\"objectBoundingBox\" primitiveUnits=\"objectBoundingBox\" x=\"-0.5\" y=\"-0.5\" width=\"1.5\" height=\"1.5\">\n  \t\t<feOffset in=\"SourceGraphic\" dx=\"-0.5\" dy=\"-0.5\" /> <!-- FIXME dx & dy !!! -->\n  \t</filter>\n  </defs>\n\n\n-----------------------------------------\n\nNote: this works fine with Adove Viewer but not with Batik."}, {"count": 1, "tags": [], "bug_id": 46721, "text": "Patch that works for me (to be checked !!) :\n\n\t\tfloat dx = convertNumber(filterElement, SVG_DX_ATTRIBUTE, 0, ctx);\n\t\tfloat dy = convertNumber(filterElement, SVG_DY_ATTRIBUTE, 0, ctx);\n\n\t\t// -------------------------------------------------------------\n\t\t// ERIC'S PATCH for <filter primitiveUnits=\"objectBoundingBox\" >\n\t\t// 'primitiveUnits' - default is userSpaceOnUse\n\t\tString units = \"\";\n\t\tif ( filterElement != null && filterElement.getParentNode() != null ) {\n\t\t\tunits = SVGUtilities.getChainableAttributeNS( (Element)filterElement.getParentNode(), null, SVG_PRIMITIVE_UNITS_ATTRIBUTE, ctx );\n\t\t}\n\t\tif ( SVG_OBJECT_BOUNDING_BOX_VALUE.equals(units) )\n\t\t{\n\t\t\t// Here we are, correct, the shot!\n\t\t\tdx *= filteredNode.getGeometryBounds().getWidth();\n\t\t\tdy *= filteredNode.getGeometryBounds().getHeight();\n\t\t}\n\n\t\t// -------------------------------------------------------------\n\t\tAffineTransform at = AffineTransform.getTranslateInstance(dx, dy);\n\n\n", "id": 124896, "time": "2009-02-17T10:17:45Z", "creator": "amram@free.fr", "creation_time": "2009-02-17T10:17:45Z", "is_private": false, "attachment_id": null}]