[{"count": 0, "tags": [], "bug_id": 51280, "attachment_id": 27079, "id": 146700, "time": "2011-05-28T08:52:50Z", "creator": "shafiexp@gmail.com", "creation_time": "2011-05-28T08:52:50Z", "is_private": false, "text": "Created attachment 27079\nThe Corrupted Excel File\n\nHi,\n\nI'm opening the existing excel file(Which contains String data and images(.jpg) and do the following operations.\n\n1.adding new data to the existing file---its adding \n2.adding new image to the existing file -the previous image is corrupted\n\n\nGive me the solutionnnnnn\n\nThe code I have Wriiten\n\n\npackage tfib.excel;\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\nimport org.apache.poi.hssf.usermodel.HSSFCell;\nimport org.apache.poi.hssf.usermodel.HSSFPatriarch;\nimport org.apache.poi.hssf.usermodel.HSSFRichTextString;\nimport org.apache.poi.hssf.usermodel.HSSFRow;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.poifs.filesystem.POIFSFileSystem;\nimport org.apache.poi.ss.usermodel.ClientAnchor;\nimport org.apache.poi.ss.usermodel.Picture;\n\npublic class WriteExcel2 {\n\t\n\tprivate HSSFWorkbook workBook;\n\tprivate HSSFSheet sheet;\n\tprivate HSSFRow excelRow;\n\tprivate HSSFCell cell;\n\t\n\tprivate String excelFileName;\n\tprivate String sheetName;\n\tpublic WriteExcel2(String excelFileName,String sheetName) throws IOException\n\t{\n\t\tthis.excelFileName=excelFileName;\n\t\tthis.sheetName=sheetName;\n\t\tSystem.out.println(\"CHecking Whether the File exists\");\n\t\t\n\t\tFile fileIn=new File(excelFileName);\n\t\tSystem.out.println(\"The Input File Name:\"+fileIn);\n\t\tFileInputStream fInputStream;\n\t\tif(fileIn.exists())\n\t\t{\n\t\t\tSystem.out.println(\"WorkBook is Exist / Getting the Existing Workbook\");\n\t\t\t\n\t\t\t\n\t\t\t\tfInputStream = new FileInputStream(fileIn);\n\t\t\t\tPOIFSFileSystem poiStream=new POIFSFileSystem(fInputStream);\n\t\t\t\tworkBook=new HSSFWorkbook(poiStream);\n\t\t\t\tSystem.out.println(\"Getting The Existing Sheet From the Existing Workbook\");\n\t\t\t\tsheet=workBook.getSheet(sheetName);\n\t\t\t\tSystem.out.println(\"THe WorkBook: \"+workBook);\n\t\t\t\tSystem.out.println(\"THe Sheet: \"+sheet);\n//\t\t\t\tSystem.out.println(\"THe Sheet: \"+sheet.getSheetName());\n//\t\t\t\tsheet.getDrawingPatriarch();\n\t\t\t\tif(sheet==null)\n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(\"Creating New Sheet in the Existing Workbook\");\n\t\t\t\t\tsheet=workBook.createSheet(sheetName);\n\t\t\t\t}\n\t\t\t\t\n\t\t \n\t\t}\n\t\telse\n\t\t{\n\t\t\tSystem.out.println(\"Creating New WorkBook and New Sheet\");\n\t\t\tworkBook=new HSSFWorkbook();\n\t\t\tsheet=workBook.createSheet(sheetName);\n\t\t\tSystem.out.println(\"THe WorkBook: \"+workBook);\n\t\t\tSystem.out.println(\"THe Sheet: \"+sheet);\n\t\t\tSystem.out.println(\"THe Sheet: \"+sheet.getSheetName());\n\t\t}\n\t}\n\tpublic void insertData(int row,int col,String data)\n\t{\n\t\tSystem.out.println(\"Creating Row,Cell and inserting Data into WorkSheet\");\n\t\t\n\t\t\tif(sheet!=null)\n\t\t\t{\n\t\t\t\tif(sheet.getRow(row)!=null)\n\t\t\t\t{\n\t\t\t\t\texcelRow=sheet.getRow(row);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\texcelRow=sheet.createRow(row);\n\t\t\t\t}\n\n\t\t\t\tcell=excelRow.createCell(col);\n\t\t\t\tcell.setCellType(HSSFCell.CELL_TYPE_STRING);\n\t\t\t\tcell.setCellValue(new HSSFRichTextString(data));\n\t\t\t\tsheet.autoSizeColumn(col);\n\t\t\t\tSystem.out.println(\"The Data is inserted successfully in WorkSheet\");\n\t\t\t}\n\t}\n\tpublic void insertImage(int startRow,int startCol,int endRow,int endCol,String imgPath) throws IOException\n\t{\n\t\tSystem.out.println(\"Inserting Picture into WorkSheet\");\n\t\tClientAnchor anchor;\n\t\tHSSFPatriarch patriarch;\n\t\tPicture picture;\n\t\tFileInputStream fileInput=new FileInputStream(imgPath);\n\t\tByteArrayOutputStream img_bytes=new ByteArrayOutputStream();\n\t\tint b;\n\t\twhile((b=fileInput.read())!=-1)\n\t\timg_bytes.write(b);\n\t\tfileInput.close();\n\t\tanchor=workBook.getCreationHelper().createClientAnchor();\n\t\tint picIndex=workBook.addPicture(img_bytes.toByteArray(), HSSFWorkbook.PICTURE_TYPE_JPEG);\n\t\tanchor.setCol1(startCol);\n\t\tanchor.setRow1(startRow);\n\t\tanchor.setCol2(endCol);\n\t\tanchor.setRow2(endRow);\n\t\tanchor.setAnchorType(1);\n\t\t\n\t\tSystem.out.println(\"The Worbook  : \"+workBook);\n\t\tSystem.out.println(\"The Sheet  : \"+sheet);\n\t\t\n\t\tSystem.out.println(\"THe Existing Sheet Patriarch: \"+sheet.getDrawingPatriarch());\n\t\t\n\t\tpatriarch=sheet.createDrawingPatriarch();\n\t\t\n\t\tSystem.out.println(\"THe PAtrich Val: \"+patriarch);\n\t\t\n\t\tpicture=patriarch.createPicture(anchor, picIndex);\n//\t\tpic.resize();\n\t\tSystem.out.println(\"The Image is inserted Successfully in workSheet\");\n\t}\n\n\tpublic void writeDataToExcel() throws IOException \n\t{\t\n\t\tFileOutputStream outputExcelFile;\n\t\tSystem.out.println(\"Writing the workbook(cintains data) to Output Excel File\");\n\t\t\tSystem.out.println(excelFileName);\n\t\t\tSystem.out.println(\"The length of excel file : \"+excelFileName.length());\n\t\t\toutputExcelFile=new FileOutputStream(new File(this.excelFileName));\n\t\t\tworkBook.write(outputExcelFile);\n\t\t\tSystem.out.println(\"THe Workbook is succesfully written to Output Excel File\");\t\n\t\t\t\t\n\t\t\tif(outputExcelFile!=null)\n\t\t\t{\n\t\t\t\toutputExcelFile.flush();\n\t\t\t\toutputExcelFile.close();\n\t\t\t} \n\t\t}\n\t}"}, {"count": 1, "tags": [], "bug_id": 51280, "attachment_id": null, "id": 146703, "time": "2011-05-28T10:18:10Z", "creator": "apache@gagravarr.org", "creation_time": "2011-05-28T10:18:10Z", "is_private": false, "text": "It's not currently possible with HSSF, sorry. See the warnings on the two key methods:\n\nhttp://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFSheet.html#createDrawingPatriarch%28%29\nhttp://poi.apache.org/apidocs/org/apache/poi/hssf/usermodel/HSSFSheet.html#getDrawingPatriarch%28%29\n\nYou should either place all your images in in one go, or switch to XSSF (where the file format makes it easier to support)"}, {"count": 2, "tags": [], "bug_id": 51280, "text": "*** Bug 51281 has been marked as a duplicate of this bug. ***", "id": 146705, "time": "2011-05-28T10:18:38Z", "creator": "apache@gagravarr.org", "creation_time": "2011-05-28T10:18:38Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 146739, "time": "2011-05-29T18:26:18Z", "bug_id": 51280, "creation_time": "2011-05-29T18:26:18Z", "text": "*** Bug 51290 has been marked as a duplicate of this bug. ***"}, {"count": 4, "tags": [], "creator": "superrubiroyd@gmail.com", "attachment_id": null, "is_private": false, "id": 161301, "time": "2012-08-12T12:44:14Z", "bug_id": 51280, "creation_time": "2012-08-12T12:44:14Z", "text": "This problem should be fixed in trunk.\n\nPlease try with a nightly build - see download links on http://poi.apache.org/\nor build yourself from SVN trunk, see http://poi.apache.org/subversion.html"}]