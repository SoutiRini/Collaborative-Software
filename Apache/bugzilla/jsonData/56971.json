[{"count": 0, "tags": [], "text": "Created attachment 32005\none of many ArcGIS TIFs that result in Internal Server Error\n\nArcGIS TIF images created by ArcGIS 10.2 results in \"Internal Server Error\n\nThe server encountered an internal error or misconfiguration and was unable to complete your request.\"  \n\n(No error code given in resulting response)\n\nRunning apache web server 2.2.25 on Centos 6.4.  Version 2.2.25 is latest version available via yum on either Centos or RedHat Enterprise.  Our httpd configuration is essentially standard, except that we force all traffic through https, using digest authentication to verify users before allowing access beyond main page.\n\n(Note:  Issue is not \"critical\" for us;  workaround was to create tarball with all images, and have collaborators download tarball for viewing in their own copy of ArcGIS.  However, would be preferable to be able to provide individual images without collaborators getting \"Internal Server Error\".  Updating to \"latest\" apache httpd is not desirable because we try to keep our Centos system identical with RHEL systems, and updating RHEL systems with later versions of software than RedHat supports causes problems with their support team.)\n\n\nWeb server has no problem with TIFs from other sources, or with the same images written from ArcGIS as PNG format.\n\nAttempt to download file via right-click & Save Link As results in a text file containing the same error message.\n\nTIFs are apparently not standard TIFs -- they cannot be viewed properly in any image viewer I have tried (irfanview, Mac Preview, Adobe Photoshop...)  They either are reported as corrupt or display as garbage.  However, they are readable by ArcGIS, and display properly in ArcGIS, and the EXIF header information appears valid.\n\nI believe Esri (providers of ArcGIS) are using the TIFF header format ( 0x49492a...) and general TIF framework, but adding some proprietary additional information.\n\nUnderlying problem may be that httpd sees file format as an image format, but incorrect formatting causes problems.  However, apache should do something a little less catastrophic than \"Internal Server Error\" when provided with badly formatted image data.\n\nContact with Esri support resulted in: \" I spoke with a server analyst and unfortunately we cannot support this particular issue as you hosting image files on your own Apache Web Sever.  \"\n\nLooking in the logs: (some directory information replaced w/ xxxxx for security) \n\nssl_error_log reports:\n[Thu Sep 11 18:00:55 2014] [error] [client 75.16.167.245] Syntax error in type map, no ':' in /home/xxxxx/public_html/bioclim/cmip5/GeoTIF/10.year.averages/bioclim1.AnnMeanTemp/CCSM4.r6i1p1.rcp45.SouthWest.1950s.bioclim.var.1.tif for header ii*, referer: https://temagami.ttu.edu/~khayhoe/bioclim/cmip5/GeoTIF/10.year.averages/bioclim1.AnnMeanTemp/\n\nssl_access_log reports:\nssl_access_log:75.16.167.245 - zzzzz [11/Sep/2014:18:00:55 -0500] \"GET /xxxxx/bioclim/cmip5/GeoTIF/10.year.averages/bioclim1.AnnMeanTemp/CCSM4.r6i1p1.rcp45.SouthWest.1950s.bioclim.var.1.tif HTTP/1.1\" 401 468\nssl_access_log:75.16.167.245 - zzzzz [11/Sep/2014:18:00:55 -0500] \"GET /xxxxx/bioclim/cmip5/GeoTIF/10.year.averages/bioclim1.AnnMeanTemp/CCSM4.r6i1p1.rcp45.SouthWest.1950s.bioclim.var.1.tif HTTP/1.1\" 500 601\n\nssl_request_log reports:\nssl_request_log:[11/Sep/2014:17:53:35 -0500] 75.16.167.245 TLSv1.2 DHE-RSA-AES128-SHA \"GET /xxxxx/bioclim/cmip5/GeoTIF/10.year.averages/bioclim1.AnnMeanTemp/CCSM4.r6i1p1.rcp45.SouthWest.1950s.bioclim.var.1.tif HTTP/1.1\" 601\nssl_request_log:[11/Sep/2014:18:00:55 -0500] 75.16.167.245 TLSv1.2 DHE-RSA-AES128-SHA \"GET /xxxxx/bioclim/cmip5/GeoTIF/10.year.averages/bioclim1.AnnMeanTemp/CCSM4.r6i1p1.rcp45.SouthWest.1950s.bioclim.var.1.tif HTTP/1.1\" 468\n\nAm attaching ArcGIS TIF which causes the error.", "is_private": false, "bug_id": 56971, "id": 177773, "time": "2014-09-11T23:46:13Z", "creator": "ian.scott-fleming@ttu.edu", "creation_time": "2014-09-11T23:46:13Z", "attachment_id": 32005}, {"count": 1, "tags": [], "bug_id": 56971, "attachment_id": null, "id": 177774, "time": "2014-09-11T23:50:56Z", "creator": "covener@gmail.com", "creation_time": "2014-09-11T23:50:56Z", "is_private": false, "text": "It's just the \".var\" in the filename, right?  You should turn off negotiation / or remove the AddHandler/SetHandler in your configuration in such directories if you're not using it\n\nhttp://httpd.apache.org/docs/2.2/mod/mod_negotiation.html#typemaps\nhttp://httpd.apache.org/docs/2.2/content-negotiation.html"}, {"count": 2, "tags": [], "text": "Indeed, that does seem to be the issue.  Renaming the files without \".var.\" in the middle of the filename does allow the TIFs to be downloaded.\n\nBut the documentation says that the AddHandler is for files with an *EXTENSION\" of .var , not for files with \".var\" elsewhere in the filename.  Note that the problem files all have extensions of .tif , not .var .\n\nInterpreting any file with .var elsewhere in the filename would cause problems for anyone wanting or needing to have \".var\" in the filename.  (In this case, the researcher is using \".var.10.\" in order to identify the images with data from variable 10 in a table of climate variables being analyzed.", "is_private": false, "bug_id": 56971, "id": 177776, "time": "2014-09-12T01:04:53Z", "creator": "ian.scott-fleming@ttu.edu", "creation_time": "2014-09-12T01:04:53Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "text": "> But the documentation says that the AddHandler is for files with an\n> *EXTENSION\" of .var , not for files with \".var\" elsewhere in the filename. \n> Note that the problem files all have extensions of .tif , not .var .\n> \n\nAll of the extension-based things in httpd consider all dot-separated things as extensions.", "id": 177777, "time": "2014-09-12T01:27:30Z", "bug_id": 56971, "creation_time": "2014-09-12T01:27:30Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 56971, "text": "Thanks for your suggestions.  Adding\n\n    RemoveHandler .var\n\nto the <directory /home/*/public_html> section of httpd.conf appears to solve the problem.  \n\nThe need for this is somewhat troubling, as it appears to disable a standard feature of the apache web server.  The \"var\" handler appears to be a default for  apache httpd, and is defined in the default httpd.conf .  The comments in our httpd.conf state:\n\n   # For type maps (negotiated resources):\n   # (This is enabled by default to allow the Apache \"It Worked\" page\n   #  to be distributed in multiple languages.)\n   #\n   AddHandler type-map var\n\n \n> All of the extension-based things in httpd consider all dot-separated things as extensions.\n\nThis is rather counter-intuitive, as using \".\" to delimit parts of a filename or directoryname is common usage for linux users.    Httpd's treating all embedded periods (rather than just the last one) places unexpected restrictions on filenames for users -- not using a string anywhere in the filename that matches any filehandlers defined for their web server.  \n\nOne can hardly expect typical users to read and understand the httpd.conf file before deciding on filenames for files they want to publish on their web pages.  This results in the type of problem we just encountered.  \n\nIn our case, there are important reasons for the user to have chosen her filenames the way she did -- using \".var.10.\" in the filename identifies the source of the data, following common file naming conventions used in our field of research.  \n\n\nPlease pardon my grumbles, and many thanks for your assistance.", "id": 177778, "time": "2014-09-12T02:09:25Z", "creator": "ian.scott-fleming@ttu.edu", "creation_time": "2014-09-12T02:09:25Z", "is_private": false, "attachment_id": null}]