[{"count": 0, "attachment_id": null, "creator": "trustin@gmail.com", "text": "Currently, org.apache.tomcat.jni.Stdlib provides only memory allocation, deallocation and primitive access methods.\n\nIt would be much more useful if there's a method that creates a new ByteBuffer from the memory region allocated by Stdlib.malloc(), like the following example code:\n\n// Stdlib.asByteBuffer(long mem, int sz)\nlong addr = Stdlib.malloc(1024);\nByteBuffer buf = Stdlib.asByteBuffer(addr, 1024);\n\nOptionally exposing a method that returns the address of the ByteBuffer will be very useful:\n\n// Stdlib.address(ByteBuffer buf)\nlong addr = Stdlib.address(buf);\nStdlib.free(addr);", "id": 115379, "time": "2008-04-07T10:25:26Z", "bug_id": 44769, "creation_time": "2008-04-07T10:25:26Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 44769, "text": "This looks pretty usable.\nIt's a simple call to NewDirectByteBuffer\n\nThink it can be done in one call, I mean\nallocation and creation of ByteBuffer (much faster)\n\nso\n\nByteBuffer bb = Stdlib.newDirectByteBuffer(size)\n...\nStdlib.freeByteBuffer(bb)\n\nOf course other option would be to use single Stdlib.malloc\nof higher size and then create ByteBuffers on slices.\n\nSo this\n\nlong addr = Stdlib.malloc(1024 * 16)\n\nByteBuffer bba = Stdlib.asByteBuffer(addr, 1024);\nByteBuffer bbb = Stdlib.asByteBuffer(addr + 1024, 1024);\n\n...\nStdlib.free(addr)\n\nhas meaning only if you need to have addr of longer\nlife then ByteBuffer and you wish to have your\nmemory manager, which can be very useful in case\nyou need to create/destroy many objects (malloc is time expensive).\n\nIn other case the first one will do.\nA Stdlib.getByteBufferAddress(bb) will return the memory\nthat you can use with Stdlib.memread, memset, etc.\n\nThink I'll implement all options\n", "id": 115380, "time": "2008-04-07T12:05:02Z", "creator": "mturk@apache.org", "creation_time": "2008-04-07T12:05:02Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "mturk@apache.org", "text": "Commited to the trunk.\nSee if the API fits the needs.\nThink we'll need the minor version bump for that new class", "id": 115447, "time": "2008-04-09T00:53:05Z", "bug_id": 44769, "creation_time": "2008-04-09T00:53:05Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 44769, "text": "I'm looking into here:\nhttp://svn.apache.org/viewvc/tomcat/trunk/java/org/apache/tomcat/jni/Stdlib.java?view=markup\n\nbut couldn't find the change.  Where's the correct location?", "id": 115448, "time": "2008-04-09T01:14:49Z", "creator": "trustin@gmail.com", "creation_time": "2008-04-09T01:14:49Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "It's in a new Buffer class, but I see no real reason for putting this stuff in a new class.", "id": 115453, "time": "2008-04-09T02:45:07Z", "bug_id": 44769, "creation_time": "2008-04-09T02:45:07Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 44769, "text": "Ah, it's here:\n\nhttp://svn.apache.org/viewvc/tomcat/connectors/trunk/jni/java/org/apache/tomcat/jni/Buffer.java?view=markup\n\nLooks very good to me!", "id": 115454, "time": "2008-04-09T02:59:02Z", "creator": "trustin@gmail.com", "creation_time": "2008-04-09T02:59:02Z", "is_private": false, "attachment_id": null}]