[{"count": 0, "attachment_id": null, "bug_id": 16510, "text": "Index: ./src/java/org/apache/tools/ant/gui/acs/ACSFactory.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-ant-\nantidote/src/java/org/apache/tools/ant/gui/acs/ACSFactory.java,v\nretrieving revision 1.4\ndiff -r1.4 ACSFactory.java\n85c85\n<  * @author Simeon Fitch, Christoph Wilhelms<a \nhref=\"mailto:christoph.wilhelms@t-online.de\">christoph.wilhelms@t-online.de</a>\n---\n>  * @author Simeon Fitch, Christoph Wilhelms<a \nhref=\"mailto:christoph.wilhelms@t-online.de\">christoph.wilhelms@t-\nonline.de</a>, Craig Campbell\n187,188c187,188\n< //                    info._attributes.put(name, type);  // for debug \npurpose only\n<                     info._attributes.put(name, \"\");\n---\n>                     info._attributes.put(name, type);  // type is now needed \nfor associating attribute name with a custom editor\n> //                    info._attributes.put(name, \"\");\n402a403,409\n> \n> /*\n> Change log:\n> \n> 1/28/2003 (CC) -  added the type value to the attributes so that we can \nlater use that type\n>         to create a customized editor.\n> */\nIndex: ./src/java/org/apache/tools/ant/gui/customizer/FilePropertyEditor.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-ant-\nantidote/src/java/org/apache/tools/ant/gui/customizer/FilePropertyEditor.java,v\nretrieving revision 1.1\ndiff -r1.1 FilePropertyEditor.java\n70c70\n<  * @author Simeon Fitch \n---\n>  * @author Simeon Fitch, Craig Campbell\n93c93,94\n<         JButton b = new JButton(\"Browse...\");\n---\n>         JButton b = new JButton(\"...\");\n>         b.setBorder(BorderFactory.createEtchedBorder());\n213a215,222\n> \n> /*\n> Change log:\n> 1/28/2003 (CC) - changed the text on the button from \"Browse\" to an elipse \n(...) and changed\n>         the border around the button to etched to create make it less \nintrusive. As well as\n>         made it so there does not have to any translation for this component \nto work outside\n>         english speaking countries.\n> */\nIndex: ./src/java/org/apache/tools/ant/gui/modules/edit/AttributePropertyEditor\n.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-ant-\nantidote/src/java/org/apache/tools/ant/gui/modules/edit/AttributePropertyEditor\n.java,v\nretrieving revision 1.1\ndiff -r1.1 AttributePropertyEditor.java\n61,63d60\n< import java.awt.event.ActionEvent;\n< import java.awt.event.ActionListener;\n< \n76a74,76\n> import java.beans.PropertyChangeEvent;\n> import java.beans.PropertyChangeListener;\n> \n77a78\n> import org.apache.tools.ant.gui.customizer.DynamicTableCellEditor;\n84c85\n<  * @author Christoph Wilhelms<a href=\"mailto:christoph.wilhelms@t-\nonline.de\">Christoph Wilhelms</a>\n---\n>  * @author Christoph Wilhelms<a href=\"mailto:christoph.wilhelms@t-\nonline.de\">Christoph Wilhelms</a>, Craig Campbell\n176,186c177,197\n<         // When the combo box is updated, update the table.\n<         /*\n<         _combo.addActionListener(new ActionListener() {\n<             public void actionPerformed(ActionEvent e) {\n<                 JComboBox cb = (JComboBox)e.getSource();\n<                 String newSelection = (String)cb.getSelectedItem();\n< \n<                 // Should we update the table?\n<                 if (newSelection != null && _table.getEditingRow() > 0) {\n<                     _table.getModel().setValueAt(newSelection,\n<                         _table.getEditingRow(), _table.getEditingColumn() );\n---\n>         // Set the second column to use a DynamicEditor\n>         TableColumn secondCol = _table.getColumnModel().getColumn(1);\n>         final DynamicTableCellEditor cellEditor = new DynamicTableCellEditor\n();\n>         secondCol.setCellEditor(cellEditor);\n> \n>         // Listen for property changes to update the cell editor with\n>         // registered types for editing.\n>         _table.addPropertyChangeListener(new PropertyChangeListener() {\n>             public void propertyChange(PropertyChangeEvent e) {\n>                 String selection = (String)_table.getModel().getValueAt(\n>                                 _table.getSelectedRow(), 0);\n> \n>                 if(selection != null && !selection.equals(\"\")) {\n> \n>                     Class type = null;\n>                     try {\n>                         type = _attributes.getType(selection);\n>                         cellEditor.register(selection, type);\n>                     } catch (ClassNotFoundException exp) {\n>                         exp.printStackTrace();\n>                     }\n190d200\n<          */\n319c329\n<             if(row < _attributes.size()) {\n---\n>             if(((row < _attributes.size())  && (row < _keys.size())) && row \n> -1) {\n394a405,415\n> \n> /*\n> Change log:\n> \n> 1/28/2003 (CC) - Added to the second column of the table a dynmaic table \ncell editor.  This\n>         editor will examine the type of attribute the user selects and find \nthe appropriate\n>         editor (StringPropertyEditor, FilePropertyEditor, \nBooleanPropertyEditor...).  Added\n>         as well a property listener to catch the changes made in the table \nso the attributes\n>         will have editors if they exist.\n> \n> */\nIndex: ./src/java/org/apache/tools/ant/gui/xml/DOMAttributes.java\n===================================================================\nRCS file: /home/cvspublic/jakarta-ant-\nantidote/src/java/org/apache/tools/ant/gui/xml/DOMAttributes.java,v\nretrieving revision 1.1\ndiff -r1.1 DOMAttributes.java\n57,58d56\n< import java.io.IOException;\n< \n60d57\n< import java.util.Enumeration;\n68c65\n<  * @author Christoph Wilhelms<a href=\"mailto:christoph.wilhelms@t-\nonline.de\">christoph.wilhelms@t-online.de</a>\n---\n>  * @author Christoph Wilhelms<a href=\"mailto:christoph.wilhelms@t-\nonline.de\">christoph.wilhelms@t-online.de</a>, Craig Campbell\n71a69\n>     private Map _mapElements = null;\n84c82\n<      * @param element provides information about possible attributes.\n---\n>      * @param elements provides information about possible attributes.\n95a94,95\n>             \n>             _mapElements = elements; // save for searching for type.\n114a115,135\n>     \n>     /**\n>      * Allow the searching of type for individual attributes\n>      *\n>      * @param name attribute name\n>      * @return Class - associated type.\n>      */\n>     public Class getType(String name) throws ClassNotFoundException   {\n>         if(name == null)\n>             return null;\n> \n>         String typeName = (String)_mapElements.get(name);\n>         if(typeName.equals(\"boolean\"))\n>             return boolean.class;\n>         else if(typeName.equals(\"int\"))\n>             return double.class;\n>         else if(typeName.equals(\"double\"))\n>             return int.class;\n>         else\n>             return Class.forName(typeName);\n>     }\n115a137,142\n> \n> /*\n> Change log:\n> 1/28/2003 (CC) - added getType method to object to return the type of class \nthe\n>         attribute is associated with.\n> */", "id": 30201, "time": "2003-01-28T20:34:04Z", "creator": "ccampbell@novell.com", "creation_time": "2003-01-28T20:34:04Z", "tags": [], "is_private": false}, {"attachment_id": 4602, "tags": [], "bug_id": 16510, "is_private": false, "count": 1, "id": 30202, "time": "2003-01-28T20:36:39Z", "creator": "ccampbell@novell.com", "creation_time": "2003-01-28T20:36:39Z", "text": "Created attachment 4602\nzipped source for editor patches"}, {"attachment_id": null, "tags": [], "bug_id": 16510, "is_private": false, "count": 2, "id": 30209, "time": "2003-01-28T22:06:50Z", "creator": "christoph.wilhelms@t-online.de", "creation_time": "2003-01-28T22:06:50Z", "text": "Applied Craigs Fix with some manual fixes..."}]