[{"count": 0, "attachment_id": null, "bug_id": 9002, "text": "I have the following target\n\n\t<target name=\"tapi\" depends=\"compile\">\n\t\t<exec executable=\"javah\">\n\t\t\t<arg value=' -classpath R:\\Development\\ETB-\nadmin\\build ' />\n\t\t\t<arg value=' -d src ' />\n\t\t\t<arg value=' pkgname.CallHandler ' />\n\t\t</exec>\n\t</target>\n\nand the class-file pkgname.CallHandler is available in the build-dir. When i \nexecute it with ant -v tapi i get this error\n\ntapi:\n     [exec] Current OS is Windows 2000\n     [exec] Executing 'javah' with arguments:\n     [exec] ' -classpath R:\\Development\\ETB-admin\\build '\n     [exec] ' -d src '\n     [exec] ' de.steilmann.etb.ressources.CallHandler '\n     [exec] The ' characters around the executable and arguments are\n     [exec] not part of the command.\n     [exec] Error: Class  -classpath R:\\Development\\ETB-admin\\build  could not \nbe found.\n     [exec] Result: 15\n\nwhen i use as target\n\n\t<target name=\"tapi\" depends=\"compile\">\n\t\t<exec executable=\"javah\">\n\t\t\t<arg value='-classpath R:\\Development\\ETB-\nadmin\\build' />\n\t\t\t<arg value='-d src' />\n\t\t\t<arg value='pkgname.CallHandler' />\n\t\t</exec>\n\t</target>\n\nwithout the leading and trailing spaces i get \n\ntapi:\n     [exec] Current OS is Windows 2000\n     [exec] Executing 'javah' with arguments:\n     [exec] '-classpath R:\\Development\\ETB-admin\\build'\n     [exec] '-d src'\n     [exec] 'pkgname.CallHandler'\n     [exec] The ' characters around the executable and arguments are\n     [exec] not part of the command.\n     [exec] Error: -classpath R:\\Development\\ETB-admin\\build is an illegal \nargument\n\n     [exec] Usage: javah [options] <classes>\n\n     [exec] where [options] include:\n\n     [exec]     -help                 Print this help message\n     [exec]     -classpath <path>     Path from which to load classes\n     [exec]     -bootclasspath <path> Path from which to load bootstrap classes\n     [exec]     -d <dir>              Output directory\n     [exec]     -o <file>             Output file (only one of -d or -o may be \nused)\n     [exec]     -jni                  Generate JNI-style header file (default)\n     [exec]     -old                  Generate old JDK1.0-style header file\n     [exec]     -stubs                Generate a stubs file\n     [exec]     -version              Print version information\n     [exec]     -verbose              Enable verbose output\n     [exec]     -force                Always write output files\n\n     [exec] <classes> are specified with their fully qualified names (for\n     [exec] instance, java.lang.Object).\n\n     [exec] Result: 15\n\nThis behaviour takes place independent of using \" and ', my guess would be that \nthe exec implementation fools around with the arg values and the spaces \ncontained in it and/or the order of the args is mishandled.", "id": 15952, "time": "2002-05-11T23:10:38Z", "creator": "lothar.hegebart@naiads.org", "creation_time": "2002-05-11T23:10:38Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 9002, "attachment_id": null, "id": 15954, "time": "2002-05-12T01:14:41Z", "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-05-12T01:14:41Z", "is_private": false, "text": "Just out of curiosity, whats wrong with Ant's optional <javah> task?"}, {"count": 2, "tags": [], "bug_id": 9002, "attachment_id": null, "id": 15955, "time": "2002-05-12T02:41:08Z", "creator": "steve_l@iseran.com", "creation_time": "2002-05-12T02:41:08Z", "is_private": false, "text": "not a bug in ant, bug in your use of task. You should have one <arg> per \nargument sent to the program, and you are trying to stuff two in \n\n<arg value=' -classpath R:\\Development\\ETB-admin\\build ' />\n\njavah gets this as a single arg, and of course it cant parse it"}, {"count": 3, "attachment_id": null, "bug_id": 9002, "is_private": false, "id": 15956, "time": "2002-05-12T09:20:24Z", "creator": "lothar.hegebart@naiads.org", "creation_time": "2002-05-12T09:20:24Z", "tags": [], "text": "I missed the javah task, thanks for the pointer. it worked fine.\nafter misusing arg in the exec task by stuffing 2 arguments in it i played \naround with it a bit more, but still couldn't get it to work properly. a \ndifference in behaviour could be noted by differences in the usage of spaces in \narg value.\n\ncase 1:\n\t<target name=\"lhe\">\n\t\t\t<exec executable=\"javah\">\n\t\t\t\t<arg value=\"-classpath \" />\n\t\t\t\t<arg value=\"r:\\development\\etb-\nadmin\\classes \" />\n\t\t\t\t<arg value=\"-d \" />\n\t\t\t\t<arg value=\"r:\\development\\etb-admin\\src \" />\n\t\t\t\t<arg value=\"pkgname.CallHandler\" />\n\t\t</exec>\n\t</target>\n\nNote that there is a whitespace after every arg. Result was\n     [exec] Current OS is Windows 2000\n     [exec] Executing 'javah' with arguments:\n     [exec] '-classpath '\n     [exec] 'r:\\development\\etb-admin\\classes '\n     [exec] '-d '\n     [exec] 'r:\\development\\etb-admin\\src '\n     [exec] 'pkgname.CallHandler'\n     [exec] The ' characters around the executable and arguments are\n     [exec] not part of the command.\n     [exec] Error: -classpath  is an illegal argument\n\n     [exec] Usage: javah [options] <classes>\n\nCase 2: \n\t<target name=\"lhe\">\n\t\t\t<exec executable=\"javah\">\n\t\t\t\t<arg value=\" -classpath \" />\n\t\t\t\t<arg value=\"r:\\development\\etb-\nadmin\\classes \" />\n\t\t\t\t<arg value=\"-d \" />\n\t\t\t\t<arg value=\"r:\\development\\etb-admin\\src \" />\n\t\t\t\t<arg value=\"pkgname.CallHandler\" />\n\t\t</exec>\n\t</target>\none more whitespace before -classpath arg. Result was\nlhe:\n     [exec] Current OS is Windows 2000\n     [exec] Executing 'javah' with arguments:\n     [exec] ' -classpath '\n     [exec] 'r:\\development\\etb-admin\\classes '\n     [exec] '-d '\n     [exec] 'r:\\development\\etb-admin\\src '\n     [exec] 'pkgname.CallHandler'\n     [exec] The ' characters around the executable and arguments are\n     [exec] not part of the command.\n     [exec] Error: Class  -classpath  could not be found.\n     [exec] Result: 15\n\nCase 3:\n\t<target name=\"lhe\">\n\t\t\t<exec executable=\"javah\">\n\t\t\t\t<arg value=\"-classpath\" />\n\t\t\t\t<arg value=\" r:\\development\\etb-\nadmin\\classes\" />\n\t\t\t\t<arg value=\"-d\" />\n\t\t\t\t<arg value=\" r:\\development\\etb-admin\\src\" />\n\t\t\t\t<arg value=\"pkgname.CallHandler\" />\n\t\t</exec>\n\t</target>\n\nlhe:\n     [exec] Current OS is Windows 2000\n     [exec] Executing 'javah' with arguments:\n     [exec] '-classpath'\n     [exec] ' r:\\development\\etb-admin\\classes'\n     [exec] '-d'\n     [exec] ' r:\\development\\etb-admin\\src'\n     [exec] 'pkgname.CallHandler'\n     [exec] The ' characters around the executable and arguments are\n     [exec] not part of the command.\n     [exec] Error: The directory  r:\\development\\etb-admin\\src could not be \ncreate for output.\n     [exec] Result: 15\n\nwell, the directory exists as i keep my sources in there, so i couldn't make a \nlot of sense out of that error. especially as an identical javah commandline \ncall worked flawlessly (as did in all cases 1-3 btw). as there is the javah \ntask i guess it won't be of a lot of interest, just thought you'd like to know."}, {"count": 4, "tags": [], "creator": "steve_l@iseran.com", "attachment_id": null, "text": "you are still  misusing <arg>. Dont put spaces in the arguments. We are not \nbuilding a command line from the arguments; we are feeding the list straight \nto the OS with each argument already split up. Look at system.exec() for more \ninfo.\n\n-Steve", "id": 15966, "time": "2002-05-12T20:38:34Z", "bug_id": 9002, "creation_time": "2002-05-12T20:38:34Z", "is_private": false}]