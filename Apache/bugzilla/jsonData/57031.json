[{"count": 0, "text": "Created attachment 32066\ndocx\n\nI'm getting OOM when trying to extract text from attached files.\n\n\npublic class POITest\n{\n  public static void main( String[] args ) throws Exception\n  {\n    String filePath = \"/Users/lguoyu/Downloads/HW13_SA.docx\";\n    FileInputStream inputStream = new FileInputStream( filePath );\n\n    POITextExtractor pTextExtract;\n    try\n    {\n      pTextExtract = ExtractorFactory.createExtractor( inputStream );\n      String text = pTextExtract.getText();\n\n      System.out.println( text );\n    }\n    catch ( Throwable e )\n    {\n      e.printStackTrace();\n    }\n  }\n}", "creator": "li.guoyu@yahoo.com", "attachment_id": 32066, "id": 178153, "time": "2014-09-28T13:41:33Z", "bug_id": 57031, "creation_time": "2014-09-28T13:41:33Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "li.guoyu@yahoo.com", "attachment_id": null, "id": 178154, "time": "2014-09-28T13:45:05Z", "bug_id": 57031, "creation_time": "2014-09-28T13:45:05Z", "is_private": false, "text": "It seems the infinite loop is causing the OOM.\n\nStack trace:\n\n\njava.lang.OutOfMemoryError: Java heap space\n\tat org.apache.xmlbeans.impl.store.CharUtil.allocate(CharUtil.java:397)\n\tat org.apache.xmlbeans.impl.store.CharUtil.saveChars(CharUtil.java:506)\n\tat org.apache.xmlbeans.impl.store.CharUtil.saveChars(CharUtil.java:419)\n\tat org.apache.xmlbeans.impl.store.CharUtil.saveChars(CharUtil.java:489)\n\tat org.apache.xmlbeans.impl.store.Cur$CurLoadContext.text(Cur.java:2927)\n\tat org.apache.xmlbeans.impl.store.Cur$CurLoadContext.stripText(Cur.java:3130)\n\tat org.apache.xmlbeans.impl.store.Cur$CurLoadContext.text(Cur.java:3143)\n\tat org.apache.xmlbeans.impl.store.Locale$SaxHandler.characters(Locale.java:3291)\n\tat org.apache.xmlbeans.impl.piccolo.xml.Piccolo.reportCdata(Piccolo.java:992)\n\tat org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer.parseXMLNS(PiccoloLexer.java:1290)\n\tat org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer.parseXML(PiccoloLexer.java:1261)\n\tat org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer.yylex(PiccoloLexer.java:4812)\n\tat org.apache.xmlbeans.impl.piccolo.xml.Piccolo.yylex(Piccolo.java:1290)\n\tat org.apache.xmlbeans.impl.piccolo.xml.Piccolo.yyparse(Piccolo.java:1400)\n\tat org.apache.xmlbeans.impl.piccolo.xml.Piccolo.parse(Piccolo.java:714)\n\tat org.apache.xmlbeans.impl.store.Locale$SaxLoader.load(Locale.java:3479)\n\tat org.apache.xmlbeans.impl.store.Locale.parseToXmlObject(Locale.java:1277)\n\tat org.apache.xmlbeans.impl.store.Locale.parseToXmlObject(Locale.java:1264)\n\tat org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase.parse(SchemaTypeLoaderBase.java:345)\n\tat org.openxmlformats.schemas.wordprocessingml.x2006.main.DocumentDocument$Factory.parse(Unknown Source)\n\tat org.apache.poi.xwpf.usermodel.XWPFDocument.onDocumentRead(XWPFDocument.java:136)\n\tat org.apache.poi.POIXMLDocument.load(POIXMLDocument.java:166)\n\tat org.apache.poi.xwpf.usermodel.XWPFDocument.<init>(XWPFDocument.java:118)\n\tat org.apache.poi.xwpf.extractor.XWPFWordExtractor.<init>(XWPFWordExtractor.java:59)\n\tat org.apache.poi.extractor.ExtractorFactory.createExtractor(ExtractorFactory.java:181)\n\tat org.apache.poi.extractor.ExtractorFactory.createExtractor(ExtractorFactory.java:153)\n\tat test.POITest.main(POITest.java:19)"}, {"count": 2, "tags": [], "creator": "apache@gagravarr.org", "text": "See the FAQ - http://poi.apache.org/faq.html#faq-N10109", "id": 178155, "time": "2014-09-28T16:56:00Z", "bug_id": 57031, "creation_time": "2014-09-28T16:56:00Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 57031, "is_private": false, "id": 178159, "attachment_id": null, "creator": "li.guoyu@yahoo.com", "creation_time": "2014-09-29T00:59:30Z", "time": "2014-09-29T00:59:30Z", "text": "Hi Nick,\n\nThanks for the quick response.\n\nI don't think this was caused by my environment. I run the code on my MBP(2.3G i7, 16G RAM, SSD), JDK 7. I tried to set max heap size to 10G and there was also OOM.\n\nI guess the doc structure is causing the issue, the issue disappeared after I remove one character in the document.\n\nCan you please run the code with attached document?\n\nThanks,\nGuoyu"}, {"count": 4, "text": "Reopen to verify", "bug_id": 57031, "is_private": false, "id": 178162, "time": "2014-09-29T05:29:07Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2014-09-29T05:29:07Z", "tags": [], "attachment_id": null}, {"count": 5, "text": "Can reproduce this, the following steps suffice to cause OOM, seems reading the 900k file fails in the Piccolo-XMLParser that is used inside XMLBeans:\n\n        String filePath = \"test-data/document/57031.docx\";\n        \n        ZipFile zf = new ZipFile(filePath);\n        ZipEntry entry = zf.getEntry(\"word/document.xml\");\n        \n        DocumentDocument document = DocumentDocument.Factory.parse(zf.getInputStream(entry));\n        assertNotNull(document);\n        \n        zf.close();", "creator": "dominik.stadler@gmx.at", "attachment_id": null, "id": 178402, "time": "2014-10-12T19:59:00Z", "bug_id": 57031, "creation_time": "2014-10-12T19:59:00Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 57031, "is_private": false, "id": 185578, "attachment_id": null, "creator": "vkleinschmidt@blackboard.com", "creation_time": "2015-10-01T19:42:44Z", "time": "2015-10-01T19:42:44Z", "text": "Any progress on this? OOMs are a critical problem, and it's been a year since this has been verified, without further progress being made."}, {"count": 7, "tags": [], "bug_id": 57031, "is_private": false, "id": 185580, "attachment_id": null, "creator": "dominik.stadler@gmx.at", "creation_time": "2015-10-02T09:33:15Z", "time": "2015-10-02T09:33:15Z", "text": "Please note that nobody is paid to work on POI, only volunteers who look at things in their free time. \n\nThe best way to help a bug report see progress is to provide more information if available or supply patches together with unit-tests.\n\nSee e.g. http://poi.apache.org/guidelines.html#SubmittingPatches for more information about providing patches."}, {"count": 8, "tags": [], "creator": "tallison@mitre.org", "attachment_id": null, "id": 188774, "time": "2016-02-24T18:21:20Z", "bug_id": 57031, "creation_time": "2016-02-24T18:21:20Z", "is_private": false, "text": "*** Bug 59058 has been marked as a duplicate of this bug. ***"}, {"count": 9, "tags": [], "bug_id": 57031, "attachment_id": null, "text": "Over on 59058, I found that if we use xerces instead of piccolo, this problem goes away.\n\nWould switching parsers in XWPFDocument open up too great a can of worms?", "id": 188775, "time": "2016-02-24T18:25:13Z", "creator": "tallison@mitre.org", "creation_time": "2016-02-24T18:25:13Z", "is_private": false}, {"count": 10, "text": "Created attachment 33591\nswitch out piccolo parser for xerces\n\nI tried to mimic our SAXHelper.  Any feedback?  Is this a reasonable approach?", "creator": "tallison@mitre.org", "attachment_id": 33591, "id": 188781, "time": "2016-02-24T20:22:52Z", "bug_id": 57031, "creation_time": "2016-02-24T20:22:52Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 57031, "is_private": false, "id": 188784, "attachment_id": null, "creator": "dominik.stadler@gmx.at", "creation_time": "2016-02-24T21:17:06Z", "time": "2016-02-24T21:17:06Z", "text": "As we are on Java 6+, we can expect an XML Parser to be present as part of the Java platform itself. There are some versions of IBM Java 6 that did not manage to do this correctly, but we direct users of that JDK to upgrade to IBM Java 7 anyway as we are using the bundled XML Parser elsewhere already anyway.\n\nChanging the XML parser sounds like a change that can have quite some side-effects. So I would postpone it at least after a 3.14 release if possible, albeit I don't know much about the use of the Piccolo parser in POI, so it might be a smaller change than I think.\n\nHowever I think we should at least do some larger testing of it, i.e. performance, memory consumption, ... to verify that we do not introduce some bigger degradation here.\n\nAnd BTW, we already have a class DocumentHelper which does very similar things than StaxHelper, wouldn't it make sense to combine those two?"}, {"count": 12, "tags": [], "creator": "tallison@mitre.org", "attachment_id": null, "text": "Thank you, Dominik.  \n\nMakes sense to wait. Will do. \n\nI'm also leery of changing the xml parser without serious testing.\n\nI just finished downloading and adding lots of doc[xm] files with your CommonCrawlDocumentDownload code.  Will run regression testing on that corpus in addition to the few we had in our regular govdocx1+othercommoncrawl corpus.", "id": 188792, "time": "2016-02-25T01:48:07Z", "bug_id": 57031, "creation_time": "2016-02-25T01:48:07Z", "is_private": false}, {"count": 13, "tags": [], "creator": "tallison@mitre.org", "text": "Thanks to Dominik's commoncrawl download tool, I found a pptx that shows similar symptoms.  I've posted the file on TIKA-1866.  \n\nWhen we fix this for docx, we should also fix it for pptx and xlsx...with serious regression testing after the \"fix\". :)", "id": 189027, "time": "2016-03-02T19:45:29Z", "bug_id": 57031, "creation_time": "2016-03-02T19:45:29Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "creator": "kiwiwings@apache.org", "text": "(In reply to Tim Allison from comment #13)\n> When we fix this for docx, we should also fix it for pptx and xlsx...with\n> serious regression testing after the \"fix\". :)\n\nI've tried to debug the piccolo parser, but it hangs somewhere for ages while parsing slide6 of the pptx.\nI try now to remove the piccolo parser invocations, but I'm also for postponing the potential fix after poi 3.14 is out.", "id": 189038, "time": "2016-03-02T23:12:58Z", "bug_id": 57031, "creation_time": "2016-03-02T23:12:58Z", "is_private": false, "attachment_id": null}, {"text": "(In reply to Andreas Beeker from comment #14)\nY, absolutely nothing until 3.14.  Thank you for investigating!\n\n> (In reply to Tim Allison from comment #13)\n> > When we fix this for docx, we should also fix it for pptx and xlsx...with\n> > serious regression testing after the \"fix\". :)\n> \n> I've tried to debug the piccolo parser, but it hangs somewhere for ages\n> while parsing slide6 of the pptx.\n> I try now to remove the piccolo parser invocations, but I'm also for\n> postponing the potential fix after poi 3.14 is out.", "tags": [], "bug_id": 57031, "is_private": false, "count": 15, "id": 189040, "time": "2016-03-02T23:46:07Z", "creator": "tallison@mitre.org", "creation_time": "2016-03-02T23:46:07Z", "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 57031, "attachment_id": null, "text": "I've removed the piccolo parser classes from the xmlbeans jar and modified the \nfailing classes -\nso this is a poi wide patch.\nThere was also a problem with EvilUnclosedBRFixingInputStream.\nAnd I've added an error handler to workaround those system out messages.\n\nIt would be interesting how much slower jaxp vs. piccolo is and if this is \nstill an issue with newer Java versions.\n\nAnother point would be, if we change the ant build to permanently remove the \npiccolo classes.", "id": 189076, "time": "2016-03-04T00:11:18Z", "creator": "kiwiwings@apache.org", "creation_time": "2016-03-04T00:11:18Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 57031, "attachment_id": 33621, "is_private": false, "id": 189077, "time": "2016-03-04T00:11:22Z", "creator": "kiwiwings@apache.org", "creation_time": "2016-03-04T00:11:22Z", "text": "Created attachment 33621\nWorkaround piccolo invocations"}, {"count": 18, "tags": [], "creator": "kiwiwings@apache.org", "attachment_id": null, "text": "patched via r1734182\nand r1734184\n\nI'm also concerned about performance ... best would be, to check the common crawl statistics ... depending on the difference, we might need to test other approaches instead of the documenthelper -> documentbuilder, e.g. Tims approach with the XMLStreamReader\n\ni'm closing this for now ... feel free to reopen it, if the statistics are bad ...", "id": 189282, "time": "2016-03-09T01:34:48Z", "bug_id": 57031, "creation_time": "2016-03-09T01:34:48Z", "is_private": false}, {"count": 19, "tags": [], "bug_id": 57031, "is_private": false, "id": 189903, "attachment_id": null, "creator": "zmircmircea@gmail.com", "creation_time": "2016-04-01T21:19:03Z", "time": "2016-04-01T21:19:03Z", "text": "*** Bug 58963 has been marked as a duplicate of this bug. ***"}]