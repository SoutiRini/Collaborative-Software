[{"count": 0, "attachment_id": null, "creator": "d.trombetta@mbm.it", "is_private": false, "id": 116242, "time": "2008-05-05T07:37:27Z", "bug_id": 44933, "creation_time": "2008-05-05T07:37:27Z", "tags": [], "text": "I found this bug reported for all versions.\nIt has been marked as fixed, but I still got the same behaveiour.\n\n\n+++ This bug was initially created as a clone of Bug #6178 +++\n\nThe color palette of .bmp files with 1 bit/pixel is not used when loading image.\nExample of a bmp header I've received from Alchemy on Unix:\n\n0000  424DAE8E01000000 00003E0000002800\n0010  000016030000FC03 0000010001000000\n0020  0000708E0100C21E 0000C21E00000000\n0030  000000000000FFFF FF00000000000000\n0040  0000000000000000 0000000000000000\n\nThe palette is inverted (why, I don't know). So a 0 bit means a white pixel and \na 1 bit means a black pixel.\nIn class org.apache.fop.image.BmpImage, method loadImage ignores the palette in \nthat case (it's not even constructed). For FOP, a 0 bit means always black \npixel and a 1 bit means always white pixel.\nSo my image appears in Acrobat Reader as inverted video.\n\nI have fixed the bug with the following statements :\n\nif (headermap[28] == 4 || headermap[28] == 8 || headermap[28] == 1) {\n\nto always build the palette and \n\nfor (int countr = 0; countr < 8 && x < this.m_width;\n\t\tcountr++) {\n\tif ((p & 0x80) != 0) {\n\t\tthis.m_bitmaps[3 * (i * this.m_width + x)] =\n//\t\t\t(byte)0xFF;\n\t\t\tpalette[3];\n\t\tthis.m_bitmaps[3 * (i * this.m_width + x) + 1] =\n//\t\t\t(byte)0xFF;\n\t\t\tpalette[4];\n\t\tthis.m_bitmaps[3 * (i * this.m_width + x) + 2] =\n//\t\t\t(byte)0xFF;\n\t\t\tpalette[5];\n\t} else {\n\t\tthis.m_bitmaps[3 * (i * this.m_width + x)] =\n//\t\t\t(byte)0;\n\t\t\tpalette[0];\n\t\tthis.m_bitmaps[3 * (i * this.m_width + x) + 1] =\n//\t\t\t(byte)0;\n\t\t\tpalette[1];\n\t\tthis.m_bitmaps[3 * (i * this.m_width + x) + 2] =\n//\t\t\t(byte)0;\n\t\t\tpalette[2];\n}\n\nto use it.\nI think it could help.\n\nFr\u00e9d\u00e9ric."}, {"count": 1, "tags": [], "text": "Would you please retest with FOP 0.95beta? This version has a completely new image loading framework. The problem may not appear anymore. If it still does, please attach a (legally unproblematic) sample image to this issue so we have a test case. Thanks.", "attachment_id": null, "id": 116320, "creator": "jeremias@apache.org", "time": "2008-05-07T00:13:31Z", "bug_id": 44933, "creation_time": "2008-05-07T00:13:31Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 44933, "text": "I've manually created a 1-bit image with a non-regular palette. It was properly picked up by FOP 0.95beta. BMP support needs JAI Image I/O Tools to be present in the classpath: http://xmlgraphics.apache.org/fop/0.95/graphics.html#bmp", "id": 117236, "time": "2008-06-02T02:49:13Z", "creator": "jeremias@apache.org", "creation_time": "2008-06-02T02:49:13Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 44933, "attachment_id": null, "text": "batch transition to closed remaining pre-FOP1.0 resolved bugs", "id": 156985, "time": "2012-04-01T13:55:56Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T13:55:56Z", "is_private": false}]