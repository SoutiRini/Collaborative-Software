[{"count": 0, "tags": [], "creator": "apache.org@schildbach.de", "is_private": false, "text": "when i use the java task to execute a class, i frequently have got problems to \nload classes. for example: when i do a Class.forName(), a \njava.lang.NoClassDefFoundError is thrown. i double-checked that the class is in \nthe classpath. the strange thing is when i emulate the java task by an exec \ntask (running java.exe \"by hand\"), everything works fine.\nthis problem has been present at least since ant 1.3 final.", "id": 4616, "time": "2001-08-17T09:49:46Z", "bug_id": 3158, "creation_time": "2001-08-17T09:49:46Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 3158, "attachment_id": null, "text": "This sort of behaviour can usually be explained or investigated but we will \nneed more information. We need to know your system classpath, the classpath you \nare using with your Java task and even the ant-debug output which will show the \nactivity of the Ant classloader.\n", "id": 4621, "time": "2001-08-18T23:26:49Z", "creator": "conor@apache.org", "creation_time": "2001-08-18T23:26:49Z", "is_private": false}, {"count": 2, "tags": [], "creator": "apache.org@schildbach.de", "text": "Created attachment 434\ndemonstration of the (maybe) bug", "id": 4681, "time": "2001-08-21T07:33:24Z", "bug_id": 3158, "creation_time": "2001-08-21T07:33:24Z", "is_private": false, "attachment_id": 434}, {"count": 3, "tags": [], "bug_id": 3158, "attachment_id": null, "is_private": false, "id": 4911, "time": "2001-08-27T07:06:58Z", "creator": "conor@apache.org", "creation_time": "2001-08-27T07:06:58Z", "text": "I have improved the error reporting in the classloader for this but ultimately \nthis bug comes from the interaction of the classloader and the fact that the VM \nnow includes many classes from outside the java/javax namespaces. The error now \nreported is this\n\njava.lang.NoClassDefFoundError: org/xml/sax/helpers/DefaultHandler\n        at java.lang.ClassLoader.defineClass0(Native Method)\n\nAnt's classloader for <java> tasks tries to minimize the chance of Linkage \nerrors by only allowing java.* classes to be loaded from the parent \nclassloader. Thus when your class tries to load \norg.xml.sax.helpers.DefaultHandler, Ant's loader says no and tries to resolve \nthe class in the classpath it has been given. \n\nThat hueristic is OK under JDK 1.3 for most cases (CORBA maybe an exception), \nbut is going to breakdown under JDK 1.4 for a larger number of situations (XML \nparsing).\n\nThis will require more thought since it affects the whole classloading strategy \nwhich needs to be redesigned to more cleanly separate the classes available to \nthe Ant core, the tasks, and tasks like <java>, while avoiding linkage errors. "}, {"count": 4, "tags": [], "bug_id": 3158, "attachment_id": null, "text": "Didn't mean to close this one", "id": 4912, "time": "2001-08-27T07:07:39Z", "creator": "conor@apache.org", "creation_time": "2001-08-27T07:07:39Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 3158, "attachment_id": 629, "is_private": false, "id": 6304, "time": "2001-10-03T07:16:21Z", "creator": "jasongilman@m2methods.net", "creation_time": "2001-10-03T07:16:21Z", "text": "Created attachment 629\nThe targer \"run_fail\" demonstrates failure to load a resource. The target \"run_ok\" forks a new VM and successfully finds the resource."}, {"count": 6, "attachment_id": null, "bug_id": 3158, "is_private": false, "id": 10811, "time": "2002-02-16T18:17:47Z", "creator": "steve_l@iseran.com", "creation_time": "2002-02-16T18:17:47Z", "tags": [], "text": "-Changed the title to emphasise java1.4 nature. I'd have made it a keyword but \nI cant. Now that 1.4 is out we should address this somehow. "}, {"count": 7, "tags": [], "creator": "holtdl@yahoo.com", "text": "Conor, Steve -- do you know if this is still a problem? (I don't have Java1.4)", "id": 12600, "time": "2002-04-01T02:58:01Z", "bug_id": 3158, "creation_time": "2002-04-01T02:58:01Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "steve_l@iseran.com", "is_private": false, "text": "The problem conor refers to (things like org.w3c) in the base classloader \nstill exist and need fixing. \n\nBut, I had a look at the attachment from Jason; his problem is that\nClassLoader.getSystemClassLoader().getResource( \"Test2.class\" ) fails\n\n...probably because he is using the wrong classloader, right? The system \nclassloader when fork=false cant see the test2.class; he should be using \nthis.getClass().getClassloader() or something similar.", "id": 15489, "time": "2002-05-05T05:46:19Z", "bug_id": 3158, "creation_time": "2002-05-05T05:46:19Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 3158, "text": "*** Bug 10682 has been marked as a duplicate of this bug. ***", "id": 19431, "time": "2002-07-12T17:28:18Z", "creator": "stevel@apache.org", "creation_time": "2002-07-12T17:28:18Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 3158, "attachment_id": null, "text": "I got an NoClassDefFoundError when using reflecation in combination with the\njava task. I get a NoClassDefFoundError when I instanciate the same class more\nthan 5 times via reflection-api.\n\nI've attached a small reproduction.", "id": 21213, "time": "2002-08-18T01:18:01Z", "creator": "kohlhaas@informatik.uni-bonn.de", "creation_time": "2002-08-18T01:18:01Z", "is_private": false}, {"count": 11, "attachment_id": 2751, "bug_id": 3158, "is_private": false, "id": 21214, "time": "2002-08-18T01:20:58Z", "creator": "kohlhaas@informatik.uni-bonn.de", "creation_time": "2002-08-18T01:20:58Z", "tags": [], "text": "Created attachment 2751\nBug report"}, {"count": 12, "tags": [], "creator": "steve@jetcafe.org", "attachment_id": 3924, "is_private": false, "id": 26815, "time": "2002-11-22T19:10:54Z", "bug_id": 3158, "creation_time": "2002-11-22T19:10:54Z", "text": "Created attachment 3924\nJava test that fails when not forked"}, {"count": 13, "attachment_id": 3925, "bug_id": 3158, "text": "Created attachment 3925\nbuild.xml file for myTest.java", "id": 26817, "time": "2002-11-22T19:13:45Z", "creator": "steve@jetcafe.org", "creation_time": "2002-11-22T19:13:45Z", "tags": [], "is_private": false}, {"text": "I have provided two attachments for this bug in the hopes that they \nwill help to find and fix it.  myTest.java and myBuild.xml.  If you \ncomment out any one of the six tests in myTest.java, it will run \neither forked or non-forked.  If you leave all six in place, it will \nfail with a NoClassDefFound error when not forked but will run when \nforked.", "tags": [], "creator": "steve@jetcafe.org", "is_private": false, "count": 14, "id": 26820, "time": "2002-11-22T19:17:50Z", "bug_id": 3158, "creation_time": "2002-11-22T19:17:50Z", "attachment_id": null}, {"count": 15, "tags": [], "text": "On at least some VMs, may work to use ClassLoader.systemClassLoader.parent; on\nmy Sun 1.4.1 VM, this is the extension loader (with parent null == bootstrap\nloader). That will load from rt.jar (incl. org.xml.sax.** etc.) as well as\nregistered extensions (jre/lib/ext/). But I'm not at all sure this is guaranteed\nto work, especially on JDK 1.1.", "attachment_id": null, "id": 27259, "creation_time": "2002-12-02T16:47:04Z", "time": "2002-12-02T16:47:04Z", "creator": "jesse.glick@netbeans.com", "bug_id": 3158, "is_private": false}, {"count": 16, "attachment_id": null, "bug_id": 3158, "is_private": false, "id": 30038, "time": "2003-01-25T11:10:12Z", "creator": "conor@apache.org", "creation_time": "2003-01-25T11:10:12Z", "tags": [], "text": "Summary\n========\nAndreas - your example works on Ant 1.6 alpha\n\nJason - your example fails and will always fail. By asking for the System\nclassloader, you are getting Ant's system loader. The <java> task with fork=\"no\"\nprovides an imperfect approximation of running your class in its own VM. Things\nlike fiddling with System.out and using System resources such as the System\nLoader will generally cause problems. You need to either change your loading\napproach to something like\n\nURL url = Test2.class.getClassLoader().getResource( \"Test2.class\" );\n\nwhich will work when not forked or accept the fact that some things need to be\nforked.\n\nChristopher - your bug is fascinating - the first four iterations work - the 5th\nfails. Anyway, under Ant 1.6Alpha, this works correctly.\n\nSteve - your example also displays the weird behaviour of Christoper's example\nand it too works under Ant 1.6alpha\n\nor, in other works we have FIXED, WONTFIX, FIXED, FIXED. \n\nI'm going to close as FIXED.\n\n"}]