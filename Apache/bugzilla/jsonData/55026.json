[{"count": 0, "tags": [], "bug_id": 55026, "attachment_id": null, "text": "Hi POI team,\n\nMy enhancement is related to ContentType support in the openxml4j part of the POI library.\nIn the current 3.9 version, ContentType  containing parameters throw a \"malformed content type\" exception when parsing the OPC document.\nSuch ContentType could be of the form \"application/xml;key1=value1;key2=value2\"\n\nThere's already code to support this format in the ContentType class but it's commented out !\n\nIs it possible to activate this ContentType format in a future version ?\n\nThank you,\nSebastien.", "id": 167476, "time": "2013-05-29T14:20:49Z", "creator": "sebastien.schneider@ifpen.fr", "creation_time": "2013-05-29T14:20:49Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 55026, "attachment_id": null, "id": 167477, "time": "2013-05-29T14:35:28Z", "creator": "apache@gagravarr.org", "creation_time": "2013-05-29T14:35:28Z", "is_private": false, "text": "Do you have a sample file that has parameters in it? And if so, could you please upload it, ideally along with a short unit test that shows you trying to load + read them?"}, {"count": 2, "tags": [], "bug_id": 55026, "text": "Created attachment 30341\nOPC file with Content_Types.xml containing parameters\n\nI attach a very simple OPC file with a \"Content_Types.xml\" which contains parameters:\nContentType=\"application/x-resqml+xml;version=2.0;type=obj_global2dCrs\"\n\nThe only line of code I need to highlight the problem is the OPCPackage.open method call like that:\nOPCPackage p = OPCPackage.open(\"opc_contenttype_test_wparams.opc\", PackageAccess.READ);\n\nThis call throw the following exception:\norg.apache.poi.openxml4j.exceptions.InvalidFormatException: The specified content type 'application/x-resqml+xml;version=2.0;type=obj_global1dCrs' is not compliant with RFC 2616: malformed content type.\n\nI think that it's because the code from the /[Apache-SVN]/poi/trunk/src/ooxml/java/org/apache/poi/openxml4j/opc/internal/ContentType.java doesn't support such ContentType string format.\n\nThank you,\ncheers,\nSebastien.", "id": 167489, "time": "2013-05-29T20:43:27Z", "creator": "sebastien.schneider@ifpen.fr", "creation_time": "2013-05-29T20:43:27Z", "is_private": false, "attachment_id": 30341}, {"count": 3, "attachment_id": null, "creator": "apache@gagravarr.org", "is_private": false, "id": 167491, "time": "2013-05-29T22:24:54Z", "bug_id": 55026, "creation_time": "2013-05-29T22:24:54Z", "tags": [], "text": "In r1487657 I have added your unit test, and stubbed out the unit tests we'll need\n\nThe next step is to review the ooxml spec, then write the unit tests for valid parameters based on the stubbed out bits\n\nFinally, we can then try to enable the parameter logic\n\nIf you have some time to have on part #2, that'd be great!"}, {"count": 4, "tags": [], "creator": "sebastien.schneider@ifpen.fr", "attachment_id": null, "id": 167495, "time": "2013-05-30T07:29:07Z", "bug_id": 55026, "creation_time": "2013-05-30T07:29:07Z", "is_private": false, "text": "Unfortunately I won't have time to work on that now. I hope to be able to help a little bit next month ...\n\n\n(In reply to Nick Burch from comment #3)\n> In r1487657 I have added your unit test, and stubbed out the unit tests\n> we'll need\n> \n> The next step is to review the ooxml spec, then write the unit tests for\n> valid parameters based on the stubbed out bits\n> \n> Finally, we can then try to enable the parameter logic\n> \n> If you have some time to have on part #2, that'd be great!"}, {"count": 5, "tags": [], "bug_id": 55026, "attachment_id": null, "id": 167497, "time": "2013-05-30T09:39:02Z", "creator": "sebastien.schneider@ifpen.fr", "creation_time": "2013-05-30T09:39:02Z", "is_private": false, "text": "I just reviewed the ooxml spec from the document ISO_IEC_29500-2_2012.pdf, the ContentType format is specified in 9.1.2 by referencing the RFC2616, paragraph 3.7. The format of the media-type defined by ContentType is as follows:\nmedia-type = type \"/\" subtype *( \";\" parameter )\nwhere parameter is expressed as\nattribute \"=\" value\n\nNow needs to complete unit test and enable the corresponding code in ContentType.java parsing implementation.\n\nSebastien.\n\n\n(In reply to Nick Burch from comment #3)\n> In r1487657 I have added your unit test, and stubbed out the unit tests\n> we'll need\n> \n> The next step is to review the ooxml spec, then write the unit tests for\n> valid parameters based on the stubbed out bits\n> \n> Finally, we can then try to enable the parameter logic\n> \n> If you have some time to have on part #2, that'd be great!"}, {"count": 6, "tags": [], "bug_id": 55026, "attachment_id": 30782, "id": 169806, "time": "2013-08-29T16:01:10Z", "creator": "sebastien.schneider@ifpen.fr", "creation_time": "2013-08-29T16:01:10Z", "is_private": false, "text": "Created attachment 30782\nPatch for both files ContentType.java and TestContentType.java\n\nI propose you the fix for this bug. I complete the unit test with hard coded parameterized content type but I don't implement the file unit test.\n\nI had an issue with the Java pattern matcher that do not handle multiple group when matching automatically, so I had to add a second matcher specialized to process parameters.\n\nIt works well on my files.\n\nThank you in advance for integration and feel free to modify it the proper way."}, {"count": 7, "tags": [], "bug_id": 55026, "attachment_id": null, "id": 173380, "time": "2014-02-19T23:36:07Z", "creator": "apache@gagravarr.org", "creation_time": "2014-02-19T23:36:07Z", "is_private": false, "text": "Thanks for this patch, and sorry it got forgotten\n\nI've done some work on this myself, and then incorporated much of your logic and tests too. As of r1569976 we're now able to process these content types without error, and we have a lot more testing around it all.\n\nThanks for your help!"}]