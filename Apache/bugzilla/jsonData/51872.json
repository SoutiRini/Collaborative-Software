[{"count": 0, "tags": [], "bug_id": 51872, "text": "request.getRemoteAddr() sometimes returning IP address from the previous request.  We have compared the IP address returned from the getRemoteHost() and from the headers with getRemoteAddr() and getRemoteAddr is returning wrong IP address.  We believe that this may come from the \"pooled\" request objects where it is sometimes sees the previous value of the remote IP.  The problem doesn't occur all the time. \n\nWe are heavily relying on the getRemoteAddr to verify the remote client for some of our authentication.  Can this be fixed?\n\n2011-09-22 16:49:55,713 DEBUG [yjava.tomcat.valves.YahooConnectionValve] THREADID:1262 YahooConnectionValve invoked\n2011-09-22 16:49:55,826 DEBUG [yjava.tomcat.valves.YahooConnectionValve] THREADID:1262 YahooConnectionValve\nrequest.getInfo(): org.apache.coyote.catalina.CoyoteRequest/1.0\n2011-09-22 16:49:56,013 DEBUG [yjava.tomcat.valves.YahooConnectionValve] THREADID:1262 YahooConnectionValve\nrequest.getRemoteAddr(): 98.138.85.230\n2011-09-22 16:49:56,014 DEBUG [yjava.tomcat.valves.YahooConnectionValve] THREADID:1262 YahooConnectionValve\nrequest.getRemoteHost(): web120016.mail.ne1.yahoo.com\n\n   [][~]$ nslookup web120016.mail.ne1.yahoo.com\n   Server:              10.72.226.8\n   Address:     10.72.226.8#53\n\n   Name:        web120016.mail.ne1.yahoo.com\n   Address: 98.138.85.143\n\n2011-09-22 16:49:56,014 DEBUG [yjava.tomcat.valves.YahooConnectionValve] THREADID:1262 YahooConnectionValve\nrequest.getRequestedSessionId(): null\n2011-09-22 16:49:56,015 DEBUG [yjava.tomcat.valves.YahooConnectionValve] THREADID:1262 YahooConnectionValve\nrequest.getHeader(): accept:*/* host:ls100.mail.vip.ne1.yahoo.com:4080 content-type:application/x-ypy\nyahoo-app-auth:v=1;a=yahoo.mail.acl.yca.lsg-prod;h=98.138.85.143;t=1319282225;\ncontent-length:574\n2011-09-22 16:49:56,015 DEBUG [yjava.filter.address.RemoteIPTranslator] THREADID:1262 Got remote address\n'98.138.85.230' and port '46663'", "id": 149641, "time": "2011-09-22T17:52:57Z", "creator": "charlesk40@yahoo.com", "creation_time": "2011-09-22T17:52:57Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "Is it with HTTP connector or AJP connector?\nIs it standalone Tomcat, or fronted by some other HTTP server?\n\nWhat connector implementations are you observing this with (BIO/NIO/APR)? It is shown in the logs when Tomcat starts up.\n\nDo you have RemoteIpValve configured?\n\nIs it reproducible with a simple web application?", "id": 149644, "time": "2011-09-22T18:17:11Z", "bug_id": 51872, "creation_time": "2011-09-22T18:17:11Z", "is_private": false}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "I've double checked the Tomcat 7 code and remote host and remote address are recycled at exactly the same point. If one failed to recycle, so would the other and both would be wrong. I am therefore doubtful that this is a Tomcat bug. To add to Konstantin's questions, how confident are you that the IP address in the auth header is correct?", "id": 149645, "time": "2011-09-22T18:22:18Z", "bug_id": 51872, "creation_time": "2011-09-22T18:22:18Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 51872, "text": "It's standalone.  No mod_jk. We have ran various packet captures to verify that the IP address in the auth header is correct.  Since the IP address in the header and the IP address from the getRemoteHost match, we believe that that getRemoteAddr is wrong.  Difficult part of this is that we can not reproduce this in our test environments.\n\nConnector:\n    <Connector allowTrace=\"true\" asyncTimeout=\"10000\" enableLookups=\"true\" maxPostSize=\"2097152\" maxSavePostSize=\"4096\" parseBodyMethods=\"POST\" redirectPort=\"-1\" scheme=\"http\" secure=\"false\" URIEncoding=\"UTF-8\" xpoweredBy=\"false\" acceptCount=\"100\" acceptorThreadCount=\"1\" address=\"0.0.0.0\" bindOnInit=\"true\" socketBuffer=\"9000\" compressableMimeType=\"text/html,text/xml,text/plain\" compression=\"off\" compressionMinSize=\"2048\" connectionLinger=\"-1\" connectionTimeout=\"60000\" connectionUploadTimeout=\"60000\" disableUploadTimeout=\"true\" executor=\"\" keepAliveTimeout=\"20000\" maxConnections=\"200\" maxHttpHeaderSize=\"8192\" maxKeepAliveRequests=\"1\" maxThreads=\"200\" maxTrailerSize=\"8192\" minSpareThreads=\"10\" noCompressionUserAgents=\"\" processorCache=\"200\" port=\"4080\" restrictedUserAgents=\"\" server=\"Apache\" SSLEnabled=\"false\" tcpNoDelay=\"true\" sslImplemenationName=\"org.apache.tomcat.util.net.jsse.JSSEImplementation\" clientCertProvider=\"\" keyPass=\"changeit\" sslEnabledProtocols=\"\" trustManagerClassName=\"\" trustMaxCertLength=\"5\" truststoreAlgorithm=\"\"/>\n \nValves:\n\n <Valve className=\"yjava.tomcat.valves.YahooConnectionValve\"/>\n\n     <Valve className=\"com.yahoo.yjava.YahooLogValve\" directory=\"/home/y/logs/yjava_tomcat/\" yahooOpts=\"gmrswZX\" prefix=\"access.\" resolveHosts=\"false\" suffix=\".log\" rotatable=\"true\" buffered=\"false\" fileDateFormat=\"yyyy-MM-dd.HH\"/>\n \n\n\n\nMore debugs.\n\n2011-09-22 18:12:53,576 INFO  [org.apache.coyote.http11.Http11Protocol] Starting ProtocolHandler [\"http-bio-/0.0.0.0-4080\"]\n2011-09-22 18:12:53,586 DEBUG [org.apache.catalina.connector.MapperListener] Register Wrapper [default] in Context [] for connector [Connector[HTTP/1.1-4080]]\n2011-09-22 18:12:53,586 DEBUG [org.apache.catalina.connector.MapperListener] Register Wrapper [jsp] in Context [] for connector [Connector[HTTP/1.1-4080]]\n2011-09-22 18:12:53,586 DEBUG [org.apache.catalina.connector.MapperListener] Register Context [] for connector [Connector[HTTP/1.1-4080]]\n2011-09-22 18:12:53,586 DEBUG [org.apache.catalina.connector.MapperListener] Register Wrapper [default] in Context [/yjava_ws_examples_filters] for connector [Connector[HTTP/1.1-4080]]\n2011-09-22 18:12:53,587 DEBUG [org.apache.catalina.connector.MapperListener] Register Wrapper [jsp] in Context [/yjava_ws_examples_filters] for connector [Connector[HTTP/1.1-4080]]\n2011-09-22 18:12:53,587 DEBUG [org.apache.catalina.connector.MapperListener] Register Wrapper [jersey] in Context [/yjava_ws_examples_filters] for connector [Connector[HTTP/1.1-4080]]\n2011-09-22 18:12:53,587 DEBUG [org.apache.catalina.connector.MapperListener] Register Wrapper [noop] in Context [/yjava_ws_examples_filters] for connector [Connector[HTTP/1.1-4080]]\n2011-09-22 18:12:53,587 DEBUG [org.apache.catalina.connector.MapperListener] Register Wrapper [requestparams] in Context [/yjava_ws_examples_filters] for connector [Connector[HTTP/1.1-4080]]\n2011-09-22 18:12:53,587 DEBUG [org.apache.catalina.connector.MapperListener] Register Context [/yjava_ws_examples_filters] for connector [Connector[HTTP/1.1-4080]]\n2011-09-22 18:12:53,587 DEBUG [org.apache.catalina.connector.MapperListener] Register host [localhost] at domain [null] for connector [Connector[HTTP/1.1-4080]]\n2011-09-22 18:15:06,149 DEBUG [org.apache.coyote.http11.Http11Protocol] Register Catalina:type=RequestProcessor,worker=\"http-bio-/0.0.0.0-4080\",name=HttpRequest1\n2011-09-22 18:15:06,226 DEBUG [org.apache.catalina.connector.CoyoteAdapter] The variable [uriBC] has value [/yjava_ws_examples_filters/v1/yiv/hello]\n2011-09-22 18:15:06,226 DEBUG [org.apache.catalina.connector.CoyoteAdapter] The variable [semicolon] has value [-1]\n2011-09-22 18:15:06,226 DEBUG [org.apache.catalina.connector.CoyoteAdapter] The variable [enc] has value [UTF-8]", "id": 149646, "time": "2011-09-22T18:36:22Z", "creator": "charlesk40@yahoo.com", "creation_time": "2011-09-22T18:36:22Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 51872, "attachment_id": null, "id": 149649, "time": "2011-09-22T19:35:41Z", "creator": "charlesk40@yahoo.com", "creation_time": "2011-09-22T19:35:41Z", "is_private": false, "text": "I don't see remoteAddrMB being recycled.\n\nprivate MessageBytes remoteAddrMB = MessageBytes.newInstance();\n\n\n   // -------------------- Recycling -------------------- \n\n\n    public void recycle() {\n        bytesRead=0;\n\n        contentLength = -1;\n        contentTypeMB = null;\n        charEncoding = null;\n        headers.recycle();\n        serverNameMB.recycle();\n        serverPort=-1;\n        localPort = -1;\n        remotePort = -1;\n        available = 0;\n\n        cookies.recycle();\n        parameters.recycle();\n\n        unparsedURIMB.recycle();\n        uriMB.recycle(); \n        decodedUriMB.recycle();\n        queryMB.recycle();\n        methodMB.recycle();\n        protoMB.recycle();\n\n        schemeMB.recycle();\n\n        instanceId.recycle();\n        remoteUser.recycle();\n        authType.recycle();\n        attributes.clear();\n    }"}, {"count": 5, "tags": [], "bug_id": 51872, "attachment_id": null, "id": 149651, "time": "2011-09-22T19:53:10Z", "creator": "charlesk40@yahoo.com", "creation_time": "2011-09-22T19:53:10Z", "is_private": false, "text": "Where in Tomcat 6, its being recycled. \n\nhttp://svn.apache.org/repos/asf/tomcat/tc6.0.x/trunk/java/org/apache/tomcat/util/http/BaseRequest.java\n\nMessageBytes remoteAddr = MessageBytes.newInstance();\n\n\n/**\n     * Recycles this object and readies it further use.\n     */\n    public void recycle() {\n        method.recycle();\n        protocol.recycle();\n        requestURI.recycle();\n        remoteAddr.recycle();\n        remoteHost.recycle();\n        serverName.recycle();\n        serverPort = 80;\n        remoteUser.recycle();\n        authType.recycle();\n        queryString.recycle();\n        authorization.recycle();\n        scheme = SCHEME_HTTP;\n        secure = false;\n        contentLength = 0;\n        contentType.recycle();\n        headers.recycle();\n        cookies.recycle();\n        attributes.clear();\n        tomcatInstanceId.recycle();\n    }"}, {"count": 6, "text": "I don't think that is it.\n\nThe remoteHost MessageBytes aren't recycled either in Tomcat 7 and that doesn't have the same issue. Also, I don't see how the remoteAddr MessageBytes could be accessed without first having been set.\n\nI am extremely reluctant to start changing code without a clear explanation of why making the change will fix the observed problem. I don't mind if I can't reproduce the problem but there does need to be a logical explanation of why the change fixes the observed issue.", "creator": "markt@apache.org", "attachment_id": null, "id": 149654, "time": "2011-09-22T20:28:06Z", "bug_id": 51872, "creation_time": "2011-09-22T20:28:06Z", "tags": [], "is_private": false}, {"count": 7, "text": "If the application is retaining a reference to the request object there is a possible race condition that could lead to the behaviour you see here.\n\nIf during the call to AbstractHttp11Processor.recycle() - triggered at the end of request processing - if there is a call to Request.getRemoteAddr() after AbstractHttp11Processor.remoteAddr has been set to null but before recycleInternal() is called then remoteAddr will end up being populated with the IP address of the previous connection.\n\nThe way to test this is to set set the following system property:\norg.apache.catalina.connector.RECYCLE_FACADES=true\n\nPlease let us know how you get on with testing using this setting.", "creator": "markt@apache.org", "attachment_id": null, "id": 149669, "time": "2011-09-22T21:55:46Z", "bug_id": 51872, "creation_time": "2011-09-22T21:55:46Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Looking at this again this morning, if the problem is in a Valve RECYCLE_FACADES won't help since Valves have direct access to the Request object rather than using the Facade.\n\nThe patch below can be used to see if a Valve (or similar) is accessing the request after it has been recycled. In addition to logging an error, it can either return null or throw an exception if this happens. Just comment out the one you don't want.\n\n\nIndex: java/org/apache/catalina/connector/Request.java\n===================================================================\n--- java/org/apache/catalina/connector/Request.java\t(revision 1174344)\n+++ java/org/apache/catalina/connector/Request.java\t(working copy)\n@@ -508,7 +508,8 @@\n         }\n \n         mappingData.recycle();\n-\n+        remoteAddr = null;\n+        \n         if (Globals.IS_SECURITY_ENABLED || Connector.RECYCLE_FACADES) {\n             if (facade != null) {\n                 facade.clear();\n@@ -1263,6 +1264,12 @@\n      */\n     @Override\n     public String getRemoteAddr() {\n+        if (mappingData.host == null) {\n+            String msg = \"Access to Request at invalid point in lifecycle\";\n+            log.error(msg);\n+            // throw new IllegalStateException(msg);\n+            return null;\n+        }\n         if (remoteAddr == null) {\n             coyoteRequest.action\n                 (ActionCode.REQ_HOST_ADDR_ATTRIBUTE, coyoteRequest);", "id": 149682, "time": "2011-09-23T08:09:32Z", "bug_id": 51872, "creation_time": "2011-09-23T08:09:32Z", "is_private": false}, {"count": 9, "tags": [], "creator": "charlesk40@yahoo.com", "attachment_id": null, "text": "Yes, RECYCLE_FACADES=true didn't work for us.\nWe will try the patch from the comment 8 and let you know.\nThanks.", "id": 149702, "time": "2011-09-23T15:14:21Z", "bug_id": 51872, "creation_time": "2011-09-23T15:14:21Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 51872, "attachment_id": null, "id": 149716, "time": "2011-09-24T03:44:49Z", "creator": "charlesk40@yahoo.com", "creation_time": "2011-09-24T03:44:49Z", "is_private": false, "text": "Mark,\nAfter applying the patch from comment 8, we get these in our logs (quite a alot).  But we no longer have our problem of getting the previous IP address.\n\n03:17:04,436 ERROR [Request] THREADID:292###PATCH###: Access to Request at invalid point in lifecycle.  Returning null\nfor getRemoteAddr()."}, {"count": 11, "tags": [], "bug_id": 51872, "attachment_id": null, "id": 149860, "time": "2011-09-27T20:19:03Z", "creator": "markt@apache.org", "creation_time": "2011-09-27T20:19:03Z", "is_private": false, "text": "Fixed in trunk and 7.0.x and will be included in 7.0.22 onwards.\n\nI also fixed a related issue discovered during testing that meant requests with multiple errors could trigger multiple entries in the access log."}, {"count": 12, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "Fixed in 6.0 with r1185998 and will be in 6.0.34 onwards.", "id": 150744, "time": "2011-10-19T07:18:24Z", "bug_id": 51872, "creation_time": "2011-10-19T07:18:24Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 51872, "attachment_id": null, "id": 151168, "time": "2011-11-03T22:38:12Z", "creator": "bhanlon@vilabs.com", "creation_time": "2011-11-03T22:38:12Z", "is_private": false, "text": "We are seeing the same issue when Tomcat 7.0.22 is under heavier load (in our case servicing >30 incoming POST requests per second). \n\nrequest.getRemoteAddr() is periodically (though not consistently) returning an IP address from the previous request."}, {"count": 14, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "This issue has been fixed. There are multiple possible causes of the symptom described here and the vast majority of them are application bugs. Please follow-up on the users-mailing list.", "id": 151169, "time": "2011-11-03T22:41:37Z", "bug_id": 51872, "creation_time": "2011-11-03T22:41:37Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 51872, "attachment_id": null, "id": 154935, "time": "2012-03-15T15:08:24Z", "creator": "michael.hauck@maxviva.com", "creation_time": "2012-03-15T15:08:24Z", "is_private": false, "text": "Mark,\n\nwe upgraded from 6.0.29 to 7.0.23 and have exactly the same problem. I can certainly exclude an application bug. This method is fundamental!"}, {"count": 16, "tags": [], "bug_id": 51872, "attachment_id": null, "id": 154950, "time": "2012-03-15T19:07:55Z", "creator": "markt@apache.org", "creation_time": "2012-03-15T19:07:55Z", "is_private": false, "text": "(In reply to comment #15)\n> Mark,\n> \n> we upgraded from 6.0.29 to 7.0.23 and have exactly the same problem. I can\n> certainly exclude an application bug. This method is fundamental!\n\nAgain. *This* issue has been fixed. There are multiple possible causes of the symptom described here and the vast majority of them are application bugs. Please follow-up on the users-mailing list.\n\nFeel free to create a new bug (since this specific issue is fixed) once you have one of the following:\n- an explanation based on an analysis of the source code of why requests are getting mixed up\n- a reproducible test case that demonstrates the issue"}, {"count": 17, "tags": [], "creator": "T.J.Hunt@open.ac.uk", "attachment_id": null, "text": "I just want to note that, like others, we are still seeing these symptoms, and I created bug 58289. I have not yet had time to create a minimal test-case, but I want to if I can.", "id": 185315, "time": "2015-09-17T14:52:22Z", "bug_id": 51872, "creation_time": "2015-09-17T14:52:22Z", "is_private": false}]