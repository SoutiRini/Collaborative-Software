[{"count": 0, "tags": [], "text": "When I insert the following function in a cell:\n\n=IF(AND(ISBLANK(A10),ISBLANK(B10)),\"\",CONCATENATE(A10,\"-\",B10))\n\nusing:\n\ncell.setCellFormula(\n\t\t\"IF(AND(ISBLANK(A10),\" +\n\t\t\"ISBLANK(B10)),\\\"\\\",\" + \n\t\t\"CONCATENATE(A10,\\\"-\\\",B10))\");\n\nExcel complains about it (#VALUE!) when the workbook is first opened. However, it is enough just to press F2, Enter on a cell for the function to start evaluating properly. Interestingly, this problem does not appear in OpenOffice.", "attachment_id": null, "bug_id": 48043, "id": 131326, "time": "2009-10-23T07:07:04Z", "creator": "alamothe@gmail.com", "creation_time": "2009-10-23T07:07:04Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "suatgonul@gmail.com", "is_private": false, "count": 1, "id": 131729, "time": "2009-11-05T08:09:59Z", "bug_id": 48043, "creation_time": "2009-11-05T08:09:59Z", "text": "I have the same problem and the code causing this problem looks like the following one:\n\nString formula = \"IF(F2<>\\\"\\\",CONCATENATE(F2,\\\" \\\",G2),G2)\";\ncell.setCellType(HSSFCell.CELL_TYPE_FORMULA);\ncell.setCellFormula(formula);\n\nIn detail, when both F2 and G2 cells are filled with some text, the problem occurs but when F2 contains empty string, the problem does not occur.\n\nI add a text into F2 cell with a code like in the following:\n\nString str = \"foo\";\ncell.setCellType(HSSFCell.CELL_TYPE_STRING);\ncell.setCellValue(str);\n\nPS: all cell variables have the type of HSSFCell.\nPS2: I open the file I created; enter some text into F2 manually; press enter; and the formula cell again has #VALUE!. After clicking the formula cell, it shows the correct value."}, {"count": 2, "tags": [], "bug_id": 48043, "attachment_id": null, "text": "I encountered some problems with HSSF component when using \"CONCATENATE\" function inside an excel formula. In particular, it seems this function doesn't work when inside other function or instructions-for example inside an IF. I post some code examples to better explain the problem:\n\ncellFormula.setFormula(\"IF(true, CONCATENATE(B2,B3), \\\"\\\")\");\n\ncellFormula.setFormula(\"CONCATENATE(IF(C2=\\\"X\\\",CONCATENATE(B2,\\\" \\\"),\\\"\\\"),IF(C3=\\\"X\\\",CONCATENATE(B3,\\\" \\\"),\\\"\\\"),IF(C4=\\\"X\\\",CONCATENATE(B4,\\\" \\\"),\\\"\\\"))\");\n\nThe issue is the classic \"#VALUE!\" that appears when trying to evaluate the formula. \n\nI was wondering if as happened with \"Bug 50384\" you are providing to fix it in Dev versions.", "id": 145567, "time": "2011-04-05T12:17:32Z", "creator": "ivano.diana@ext.bhuman.it", "creation_time": "2011-04-05T12:17:32Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 48043, "text": "(In reply to comment #2)\n> cellFormula.setFormula(\"IF(true, CONCATENATE(B2,B3), \\\"\\\")\");\n\nTo confirm, if you set this formula and then run the formula evaluator, it'll show as #VALUE! in excel? And if so, what does POI evaluate the cell too, is that the correct string or not?", "id": 145647, "time": "2011-04-08T11:12:34Z", "creator": "apache@gagravarr.org", "creation_time": "2011-04-08T11:12:34Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 48043, "text": "(In reply to comment #3)\n> (In reply to comment #2)\n> > cellFormula.setFormula(\"IF(true, CONCATENATE(B2,B3), \\\"\\\")\");\n> \n> To confirm, if you set this formula and then run the formula evaluator, it'll\n> show as #VALUE! in excel? And if so, what does POI evaluate the cell too, is\n> that the correct string or not?\n\nOf course, even if I run the formula evaluator what i obtain in excel is \"#VALUE!\". However if i try to read the cell with POI what i retrieve is the expected value.\nif we're going wrong, any suggestion is welcome.", "count": 4, "id": 145684, "time": "2011-04-11T03:06:23Z", "creator": "ivano.diana@ext.bhuman.it", "creation_time": "2011-04-11T03:06:23Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 48043, "attachment_id": null, "id": 185681, "time": "2015-10-07T09:55:35Z", "creator": "onealj@apache.org", "creation_time": "2015-10-07T09:55:35Z", "is_private": false, "text": "Make sure you're using some evaluation that will cache the formula result in the cell, such as FormulaEvaluator.evaluateInCell(Cell). FormulaEvaluator.evaluate(Cell) returns the formula result but leaves the Cell unmodified. Perhaps this is why you were still getting #VALUE! errors when you opened the workbook in Excel.\n\nCould you post the code you used to evaluate the formula after setting the formula but before saving the workbook?\n\nAlternatively, you might be able to try Workbook. \tsetForceFormulaRecalculation(true) before saving the workbook, which tells Excel to recalculate all the formulas next time it opens the workbook."}]