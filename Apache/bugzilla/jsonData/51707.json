[{"count": 0, "tags": [], "text": "mod_proxy uses a per-dir config to store everything, including ProxyPassReverse. ProxyPassReverse, by necessity actually operates on the real domain (the right-hand side) rather than the fake (the left-hand side or <Location> path).\n\nThis means that for the use of ProxyPassReverse inside <Location> unless the request that caused the 301 or 302 comes from inside the Location, the ProxyPassReverse can never trigger.\n\nAs well as this, the ProxyPassReverse walk is first-match (proxy_util.c:\n    for (i = 0; i < conf->raliases->nelts; i++) {\n[...]\n            if (l1 >= l2 && strncasecmp(real, url, l2) == 0) {\n                u = apr_pstrcat(r->pool, ent[i].fake, &url[l2], NULL);\n                return ap_construct_url(r->pool, u, r);\n            }\n[...]\n    }\n), and when we merge the per-dir config (mod_proxy.c:\nstatic void *merge_proxy_dir_config(apr_pool_t *p, void *basev, void *addv)\n{\n    proxy_dir_conf *new = (proxy_dir_conf *) apr_pcalloc(p, sizeof(proxy_dir_conf));\n    proxy_dir_conf *add = (proxy_dir_conf *) addv;\n    proxy_dir_conf *base = (proxy_dir_conf *) basev;\n[...]\n    new->raliases = apr_array_append(p, base->raliases, add->raliases);\n), we helpfully append the more specific ProxyPassReverses after the less specific ones, meaning that they'll never override properly.\n\nUnfortunately I can see both sides of the argument for ProxyPassReverse to be Location-specific. (the same proxy may be used by two different things), but either way, the ordering of the append above must be wrong.\n\nI've been wondering instead about having a single insertion-sorted list so that most-specific always comes first, but then there is the difficulty above. Perhaps you insert into both, and then if you have a per-dir thing you use that, but if you don't you fall back to the global list, which then takes both sides and has the most expected behaviour.", "attachment_id": null, "id": 148769, "creator": "matthew.byng-maddick@bbc.co.uk", "time": "2011-08-22T17:40:34Z", "bug_id": 51707, "creation_time": "2011-08-22T17:40:34Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 51707, "attachment_id": null, "id": 148778, "time": "2011-08-23T07:27:22Z", "creator": "matthew.byng-maddick@bbc.co.uk", "creation_time": "2011-08-23T07:27:22Z", "is_private": false, "text": "Obviously, the second half of the problems described below can be solved by the trivial change of:\n-    new->raliases = apr_array_append(p, base->raliases, add->raliases);\n+    new->raliases = apr_array_append(p, add->raliases, base->raliases);\n\nCheers\n\nMBM"}]