[{"count": 0, "tags": [], "bug_id": 54205, "text": "I am currently developing a JAVA Serialization sampler. I have 2 issues : \n1) My current implementation is a 'clone' of the SoapSampler. The current use is the following\n  1) Add in lib/ext the JAR of the class you will have to Serialize/Unserialize \n  2) Do a recording of the scenario with the proxy . The Content-type for the binary types must be set to the Content-type used by the application to send the serialized POST\n  3) Replace the HTTP Sampler by a Java Serialized sampler \n  3.1) Load the file POST*.binary ( for example POST9192898739932004659.binary) in the file. It generate the Xstream stream\n  3.2) Put variable in the Xstream stream\nWhen the test plan is run, the java object are dynamically generated\n\nIn order to automate this process, the proxy should recognize this stream : \n+ The current solution for SamplerCreatorFactory relies on Content-type \n+ The SamplerCreator interface splits between \n   - createSampler : creates the sampler with (currently) only parses the header \n   - populateSampler : fill more fields with a full parsing (header+Body)\n\nI could like to create different Sampler not on the content-type basis but on a content basis. \nFor example, for Java Serialized sampler, I would choose to create this sampler with the following pseudo-code\n\n\nisserial=0\nif ( content_type is in allowed_content_type_for_Java_ser && request_type == POST){\n   try{\n\tpost_body.readObject()\n\tisserial=1\n   }catch {\n\n   }\nif (isserial == 1){\n   create Java Serial Sampler\n}\n\nso only post with a valid body for Sampler is allowed \n\nThe disadvantage of this method is that we have to (fully) parse the request to choose the type.\n\nWhat is your preferred method to implement the integration in the proxy ? \n\nRegards,", "id": 163651, "time": "2012-11-25T20:05:58Z", "creator": "etienne.carriere@gmail.com", "creation_time": "2012-11-25T20:05:58Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 54205, "is_private": false, "text": "Created attachment 29632\nJavaSerializedSampler.java", "id": 163652, "time": "2012-11-25T20:08:02Z", "creator": "etienne.carriere@gmail.com", "creation_time": "2012-11-25T20:08:02Z", "attachment_id": 29632}, {"count": 2, "attachment_id": 29633, "creator": "etienne.carriere@gmail.com", "is_private": false, "id": 163653, "time": "2012-11-25T20:08:22Z", "bug_id": 54205, "creation_time": "2012-11-25T20:08:22Z", "tags": [], "text": "Created attachment 29633\nJavaSerializedSamplerGui.java"}, {"count": 3, "tags": [], "bug_id": 54205, "attachment_id": 29634, "is_private": false, "id": 163654, "time": "2012-11-25T20:09:10Z", "creator": "etienne.carriere@gmail.com", "creation_time": "2012-11-25T20:09:10Z", "text": "Created attachment 29634\nPatch"}, {"count": 4, "tags": [], "bug_id": 54205, "attachment_id": null, "is_private": false, "id": 163720, "time": "2012-11-29T06:06:08Z", "creator": "etienne.carriere@gmail.com", "creation_time": "2012-11-29T06:06:08Z", "text": "Hi,\n\nI completed my first version of the Java Serialization implementation . You can find attached the full patch with : \n- Specific Sampler\n- Specific SamplerGui\n- Specific SamplerCreator which try to recognize the Java Serialized Object and if it fails it calls DefaultSamplerCreator. It is a simple method but it could be better to throw an exception in specific Creator and then use the DefaultSamplerCreator.\n- Specific message.properties \n\nIt currently does not contains the documentation. \n\nIt we want to merge this sampler into HTTP Sampler, I would like to discuss how to define the Gui : \n+ a third panel \"Java Serialized Object\" with the two first \"Parameters\" and \"Post Body\" and integrate into the HTTP Sampler class\n+ Retake the URLConfigGui and extend it with only 2 panels \"Parameters\" and \"Post Body\" and having a separate Sampler class \n\nThanks for your comments,"}, {"count": 5, "tags": [], "text": "Created attachment 29652\nPatch for Java Serialization v1", "is_private": false, "id": 163721, "creator": "etienne.carriere@gmail.com", "time": "2012-11-29T06:14:28Z", "bug_id": 54205, "creation_time": "2012-11-29T06:14:28Z", "attachment_id": 29652}, {"count": 6, "tags": [], "bug_id": 54205, "is_private": false, "id": 187215, "creation_time": "2015-12-29T15:43:22Z", "time": "2015-12-29T15:43:22Z", "creator": "p.mouawad@ubik-ingenierie.com", "text": "Niche technology nowadays.\nClosing as WONTFIX", "attachment_id": null}]