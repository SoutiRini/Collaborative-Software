[{"count": 0, "tags": [], "creator": "bugs@mark.ziesemer.com", "text": "I'd like to contribute towards Ant - an enhancement to the rmic task is in the \nworks, and I'd like to see more, but getting Ant configured as a project in \nEclipse is a near show-stopper for me.  (See \nhttps://bugs.eclipse.org/bugs/show_bug.cgi?id=105373.)\n\nYes, I can build Ant using Ant, but only by loosing all the features of a great \nIDE.  Eclipse only views all the Java files as regular files - none of the JDT \nfeatures are active.  I can attempt to convert it to a Java project, but get \n987 errors in my workspace due to missing libraries.\n\nIf anyone has a solution to my dilemma, please let me know, and this ticket can \nprobably be closed.\n\nClearly, whoever releases the official Ant builds has all these libraries, as \nall the .jar's in lib are complete - far different than my local build.  But \nevidently, these can't be redistributed as they are 3rd party components.  This \nalso seems troublesome, as it'd be possible for a developer to make a change to \none of these components and never realize it, because these classes are never \neven compiled.\n\nI would propose creating a separate source tree, something like src/3rdParty, \nand throw everything that requires non-redistributable libraries in there.  Ant \ncould easily still be built using the sum of the two directories.  Eclipse \ncould handle adding /src/main as a Java source folder and also be happy.  \n(Ideally, there\u2019d be separate trees for each optional component \u2013 VAJ, \nStarTeam, etc.)\n\nHopefully someone already has an answer for me.  Otherwise, I welcome any \nquestions/feedback.  Thanks!", "id": 78615, "time": "2005-08-18T06:30:13Z", "bug_id": 36235, "creation_time": "2005-08-18T06:30:13Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "stevel@apache.org", "text": "-its stuff in tasks.optional and types.optional that depends on optional stuff.\n\n-CVS_HEAD ant has a file, fetch.xml that will pull down many of the dependent\nlibraries.\n\n-Its not our fault that eclipse has a compile-everything-all-the-time worldview.\nIDEA and netbeans work with ant as is. What is important is that you compile Ant\nvia the command line/bootstrap mechanism, not via the IDE", "id": 78622, "time": "2005-08-18T11:20:35Z", "bug_id": 36235, "creation_time": "2005-08-18T11:20:35Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "bugs@mark.ziesemer.com", "is_private": false, "id": 78633, "attachment_id": null, "bug_id": 36235, "creation_time": "2005-08-18T15:43:14Z", "time": "2005-08-18T15:43:14Z", "text": "Agreed, any final compiles should by done by the command line/bootstrap.  \nThough I understand this to mean that Eclipse isn't supported as an IDE for \nthis project.  Guess I'll have to look into using a different IDE...\n\nI would still think that even though we have a cool tool like Ant, the source \nfolders could still be organized better.\n\nI tried fetch, but it seems to be having some issues, but I'll look into it and \ntry it again..."}, {"count": 3, "tags": [], "bug_id": 36235, "attachment_id": null, "id": 78634, "time": "2005-08-18T15:45:17Z", "creator": "stevel@apache.org", "creation_time": "2005-08-18T15:45:17Z", "is_private": false, "text": "there shouldnt be anything to stop you editing in eclipse, just turn of the\nautocompile feature. "}, {"count": 4, "tags": [], "text": "Unfortunately, it's not that easy.  Configured as a JDT project, all the errors \nand such will still assert themselves, with auto compile enabled or not.  I'm \nforced to either ignore and live with the errors, or keep it as a non-JDT \nproject, and let Eclipse be nothing more than a text editor.\n\nThanks for the input.  I'll just have to try out another IDE later...", "is_private": false, "bug_id": 36235, "id": 78660, "time": "2005-08-18T21:18:14Z", "creator": "bugs@mark.ziesemer.com", "creation_time": "2005-08-18T21:18:14Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "I actually think we should move every optional thingy into its own little\npackage, so you can selectively exclude various packages, instead of having to\nexclude specific stuff by name. \n\nhowever, this would mean writing a facade class for every class we move, because\nwe dont know who/what imports and uses the original. And then those facades\nwouldnt compile unless they used reflection/java1.5 dynamic proxy generation to\ntalk to the implementation classes...", "is_private": false, "id": 78692, "creation_time": "2005-08-19T11:05:28Z", "time": "2005-08-19T11:05:28Z", "creator": "stevel@apache.org", "bug_id": 36235, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "alexeys@inventigo.com", "is_private": false, "count": 6, "id": 78715, "time": "2005-08-19T18:31:47Z", "bug_id": 36235, "creation_time": "2005-08-19T18:31:47Z", "text": "I think it will be simple once SVN migration is done."}, {"count": 7, "tags": [], "text": "Now that's the spirit!  Sounds good, thanks!", "is_private": false, "bug_id": 36235, "id": 78742, "time": "2005-08-20T02:14:55Z", "creator": "bugs@mark.ziesemer.com", "creation_time": "2005-08-20T02:14:55Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "I don't see why you think that Eclipse can not be used to develop Ant.\n\nUsing 3.1 I was able to setup projects for 1.5.4, 1.6.2 and 1.6.5 without any of\nthe optional libraries and it compiles just fine. Use exclusion filters to\nexclude source/packages that you don't want to build.\n\nIt's not neccessary to reorganize the Ant source tree to get Ant building in\nEclipse.", "is_private": false, "id": 78833, "creation_time": "2005-08-22T18:43:35Z", "time": "2005-08-22T18:43:35Z", "creator": "carej@us.ibm.com", "bug_id": 36235, "attachment_id": null}, {"count": 9, "tags": [], "text": "Thanks, Jeff!  That's _exactly_ what I was looking for!  I remember seeing that \nfeature in Eclipse, but honestly, I hadn't used it before, so I didn't recall \nit as a solution.  Just as I was starting to get used to NetBeans...  (But I \nstill favor Eclipse!  :-)\n\nI still think that optional tasks w/out the necessary included libraries should \nat least be separated out into their own project, possibly individual \nprojects.  It just seems to promote better organization of the code, and the \nidea that they are not part of the core classes.  In a project-oriented IDE \nlike Eclipse, the \"optional\" project would depend upon \"core\", but not the \nother way around - making it impossible to link to \"optional\" code without \nmoving it into the \"core\" package.  This, however, is only my $0.02, and it's \nbarely worth that now that I have a feasible way to develop from my regular IDE.\n\nThis ticket can be closed if desired, but the comments from Steve and Alexey \nsounded like they were coming towards agreement on the idea.\n\nThanks!", "is_private": false, "id": 78845, "creator": "bugs@mark.ziesemer.com", "time": "2005-08-22T23:05:56Z", "bug_id": 36235, "creation_time": "2005-08-22T23:05:56Z", "attachment_id": null}, {"count": 10, "tags": [], "creator": "carej@us.ibm.com", "attachment_id": null, "id": 78846, "time": "2005-08-22T23:22:12Z", "bug_id": 36235, "creation_time": "2005-08-22T23:22:12Z", "is_private": false, "text": "I understand the concept & the desire; I disagree on the importance.\n\nMy point is: Would you have committers spending time & energy diddling around\nreorganizing the source tree (and the endless discussion & votes to follow on\nhow *exactly* to do it), or would you rather see them working on new function /\nfixing *real* bugs?\n\nMy personal vote would be for the latter."}, {"count": 11, "tags": [], "text": "Point taken, thanks.", "is_private": false, "bug_id": 36235, "id": 78860, "time": "2005-08-23T01:01:50Z", "creator": "bugs@mark.ziesemer.com", "creation_time": "2005-08-23T01:01:50Z", "attachment_id": null}]