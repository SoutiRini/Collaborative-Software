[{"attachment_id": 34714, "tags": [], "creator": "felix.schumacher@internetallee.de", "text": "Created attachment 34714\nUse a bounded fifo buffer for the log events and update LoggerPanel periodically instead of directly\n\nThe LoggerPanel gets every LogEvent added in the AWT thread. This can lead to contention of the AWT event queue, which renders the UI unusable.\n\nThe attached patch passes the LogEvents into a bounded fifo buffer, that is used periodically to update the LoggerPanel. This takes a lot of stress from the AWT event queue.", "count": 0, "id": 196691, "time": "2017-02-03T18:21:28Z", "bug_id": 60687, "creation_time": "2017-02-03T18:21:28Z", "is_private": false}, {"count": 1, "tags": [], "text": "Comment on attachment 34714\nUse a bounded fifo buffer for the log events and update LoggerPanel periodically instead of directly\n\nIt looks good to me.\nThanks", "attachment_id": 34714, "id": 196693, "creation_time": "2017-02-03T22:33:20Z", "time": "2017-02-03T22:33:20Z", "creator": "p.mouawad@ubik-ingenierie.com", "bug_id": 60687, "is_private": false}, {"count": 2, "attachment_id": 34715, "bug_id": 60687, "text": "Created attachment 34715\nUse a bounded fifo buffer for the log events and update LoggerPanel periodically instead of directly\n\nMinor cleanups compared to the last patch.", "id": 196718, "time": "2017-02-04T15:24:55Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-02-04T15:24:55Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 60687, "attachment_id": 34716, "id": 196720, "time": "2017-02-04T15:27:47Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-02-04T15:27:47Z", "is_private": false, "text": "Created attachment 34716\nIn SummaryReport: Move calculations out of AWT thread and refresh GUI only periodically.\n\nBasically the same idea as in the other thread. Move the data manipulation out of the AWT thread and check for changes periodically.\n\nA simple test case with 500 threads and a single JSR-223 groovy sampler (that does nothing) and a SummaryReport showed an increase of requests from 15.000 req/s to 19.000 req/s."}, {"count": 4, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "id": 196722, "time": "2017-02-04T15:36:28Z", "bug_id": 60687, "creation_time": "2017-02-04T15:36:28Z", "is_private": false, "text": "(In reply to Felix Schumacher from comment #3)\n> Created attachment 34716 [details]\n> In SummaryReport: Move calculations out of AWT thread and refresh GUI only\n> periodically.\n> \n> Basically the same idea as in the other thread. Move the data manipulation\n> out of the AWT thread and check for changes periodically.\n> \n> A simple test case with 500 threads and a single JSR-223 groovy sampler\n> (that does nothing) and a SummaryReport showed an increase of requests from\n> 15.000 req/s to 19.000 req/s.\nGreat !\nMaybe rename bugzilla."}, {"count": 5, "tags": [], "bug_id": 60687, "attachment_id": 34717, "text": "Created attachment 34717\nGuard clearance of buffer and only set text in logger panel in one way.", "id": 196723, "time": "2017-02-04T15:37:08Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-02-04T15:37:08Z", "is_private": false}, {"count": 6, "tags": [], "creator": "support@ubikloadpack.com", "attachment_id": null, "id": 196745, "time": "2017-02-06T08:00:38Z", "bug_id": 60687, "creation_time": "2017-02-06T08:00:38Z", "is_private": false, "text": "+1 for patches.\nNote that View Results Tree is probably the biggest danger for JMeter stability in GUI mode.\n\nRegards"}, {"count": 7, "tags": [], "creator": "sitnikov.vladimir@gmail.com", "text": "Felix, would you please share the JMX you use to benchmark the changes?\n\nIt might be even better to include the JMX right into the patch itself.", "id": 196747, "time": "2017-02-06T08:37:47Z", "bug_id": 60687, "creation_time": "2017-02-06T08:37:47Z", "is_private": false, "attachment_id": null}, {"count": 8, "attachment_id": 34736, "bug_id": 60687, "text": "Created attachment 34736\nUpdate View Results Tree only periodically\n\nIn order to keep the GUI responsive, update the View Results Tree periodically, only. As a plus, keep only the last 'x' samples to protect ourselve against OOM exceptions.", "id": 196849, "time": "2017-02-08T11:45:48Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-02-08T11:45:48Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 60687, "text": "Created attachment 34737\nSimple test case to torture the LoggerPanel and View Results Tree", "id": 196850, "time": "2017-02-08T11:46:46Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-02-08T11:46:46Z", "is_private": false, "attachment_id": 34737}, {"count": 10, "tags": [], "text": "Created attachment 34738\nUse a bounded fifo buffer for the log events and update LoggerPanel periodically instead of directly", "attachment_id": 34738, "id": 196851, "creation_time": "2017-02-08T11:48:59Z", "time": "2017-02-08T11:48:59Z", "creator": "felix.schumacher@internetallee.de", "bug_id": 60687, "is_private": false}, {"count": 11, "tags": [], "text": "Date: Wed Feb  8 18:47:24 2017\nNew Revision: 1782227\n\nURL: http://svn.apache.org/viewvc?rev=1782227&view=rev\nLog:\nKeep GUI responsive when many events are processed by View Results Tree, Summary Table and Log Panel.\nThis is part one of three with the changes to Log Panel.\n\nBugzilla Id: 60687\n\nModified:\n    jmeter/trunk/bin/jmeter.properties\n    jmeter/trunk/src/core/org/apache/jmeter/gui/LoggerPanel.java\n    jmeter/trunk/xdocs/changes.xml\n    jmeter/trunk/xdocs/usermanual/properties_reference.xml\n\nDate: Wed Feb  8 18:49:05 2017\nNew Revision: 1782228\n\nURL: http://svn.apache.org/viewvc?rev=1782228&view=rev\nLog:\nKeep GUI responsive when many events are processed by View Results Tree, Summary Report and Log Panel.\nThis is part two of three with the changes to Summary Report.\n\nBugzilla Id: 60687\n\n\nModified:\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/SummaryReport.java\n\n\nDate: Wed Feb  8 19:00:26 2017\nNew Revision: 1782229\n\nURL: http://svn.apache.org/viewvc?rev=1782229&view=rev\nLog:\nKeep GUI responsive when many events are processed by View Results Tree, Summary Report and Log Panel.\nThis is part three of three with the changes to View Results Tree.\n\nBugzilla Id: 60687\n\n\nModified:\n    jmeter/trunk/bin/jmeter.properties\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/ViewResultsFullVisualizer.java\n    jmeter/trunk/xdocs/usermanual/properties_reference.xml", "attachment_id": null, "id": 196860, "creator": "felix.schumacher@internetallee.de", "time": "2017-02-08T19:01:53Z", "bug_id": 60687, "creation_time": "2017-02-08T19:01:53Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 60687, "attachment_id": null, "id": 196915, "time": "2017-02-10T19:47:21Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-02-10T19:47:21Z", "is_private": false, "text": "Date: Fri Feb 10 19:46:02 2017\nNew Revision: 1782509\n\nURL: http://svn.apache.org/viewvc?rev=1782509&view=rev\nLog:\nSimplify implementation.\n\nBugzilla Id: 60687\n\nModified:\n    jmeter/trunk/src/core/org/apache/jmeter/gui/LoggerPanel.java"}, {"count": 13, "tags": [], "creator": "felix.schumacher@internetallee.de", "text": "Date: Fri Feb 10 20:04:58 2017\nNew Revision: 1782515\n\nURL: http://svn.apache.org/viewvc?rev=1782515&view=rev\nLog:\nSimplify code and implement the option to keep all results in the view (even if it will consume a lot of memory).\n\nBugzilla Id: 60687\n\nModified:\n    jmeter/trunk/bin/jmeter.properties\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/ViewResultsFullVisualizer.java\n    jmeter/trunk/xdocs/usermanual/properties_reference.xml", "id": 196916, "time": "2017-02-10T20:05:30Z", "bug_id": 60687, "creation_time": "2017-02-10T20:05:30Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "text": "I think SummaryReport uses unsafe approach of updating ObjectTableModel in the sampling threads.\n\nDoes it make sense to decouple stats collection from stat visualization?\n\nIf I get it right, we should avoid using swing.* as a stat collection/aggregation facility.\nOtherwise we have to use Swing.invokeLater on the hot path.", "attachment_id": null, "id": 196948, "creator": "sitnikov.vladimir@gmail.com", "time": "2017-02-12T17:37:58Z", "bug_id": 60687, "creation_time": "2017-02-12T17:37:58Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 60687, "attachment_id": null, "text": "(In reply to Vladimir Sitnikov from comment #14)\n> I think SummaryReport uses unsafe approach of updating ObjectTableModel in\n> the sampling threads.\n\nCould you be a bit more specific here? I think the only problem we have is visibility, as the swing thread locks on lock and the other threads on lock and rows. So I think of it as a kind of eventual visibility.\n\n> \n> Does it make sense to decouple stats collection from stat visualization?\n\nThat was my first thought, but it would introduce another thread. We could drop the row locks, though.\n\n> \n> If I get it right, we should avoid using swing.* as a stat\n> collection/aggregation facility.\n> Otherwise we have to use Swing.invokeLater on the hot path.\n\nRight. Get swing out of the path and be happy.", "id": 196953, "time": "2017-02-13T10:12:08Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-02-13T10:12:08Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 60687, "attachment_id": null, "text": "Felix> Could you be a bit more specific here?\n\nFor instance,\n1) Things like \"model.insertRow\" do require to be executed on the AWT thread.\nI'm not sure how hard it could break, however accessing UI thread on the hot path is bad.\n\n2) Table rendering code (that is run on the UI thread) accesses computed values without any synchronization. This might result in word tearing, stale values, unexpected division by zero, etc.\n\n\nFelix> Right. Get swing out of the path and be happy.\n\nThis kind of change would likely to heal 1 above, however it might look like a \"complete rewrite of the relevant listener code\".\n\nEven if we move swing calls out of hot path, we would still need some fast way to aggregate values.\nFor instance, \"Total\" row could be computed \"on UI refresh\" to avoid global synchronization of all the threads.\n\nFrom one point of view this might look like a over engineering, on the other hand, that might be reused for \"non-gui console mode\" listeners.", "id": 196955, "time": "2017-02-13T12:58:54Z", "creator": "sitnikov.vladimir@gmail.com", "creation_time": "2017-02-13T12:58:54Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 60687, "attachment_id": null, "text": "Hello,\n\nThere might be another place where GUI is impacted, it's in:\n- MainFrame#ErrorsAndFatalsCounterLogTarget\n- And less importantly MainFrame#updateCounts\n\nRegards", "id": 196982, "time": "2017-02-13T21:32:17Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-02-13T21:32:17Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 60687, "attachment_id": null, "text": "(In reply to Vladimir Sitnikov from comment #16)\n> Felix> Could you be a bit more specific here?\n> \n> For instance,\n> 1) Things like \"model.insertRow\" do require to be executed on the AWT thread.\n\nIndeed, good catch. Particularly knowing that insertRow calls fireTableRowsInserted.\n\nCan't we just collect rows in a list and insert in model from Timer ? But it will take more time.\n\n> I'm not sure how hard it could break, however accessing UI thread on the hot\n> path is bad.\n> \n> 2) Table rendering code (that is run on the UI thread) accesses computed\n> values without any synchronization. This might result in word tearing, stale\n> values, unexpected division by zero, etc.\n> \n> \n> Felix> Right. Get swing out of the path and be happy.\n> \n> This kind of change would likely to heal 1 above, however it might look like\n> a \"complete rewrite of the relevant listener code\".\n> \n> Even if we move swing calls out of hot path, we would still need some fast\n> way to aggregate values.\n> For instance, \"Total\" row could be computed \"on UI refresh\" to avoid global\n> synchronization of all the threads.\n> \n> From one point of view this might look like a over engineering, on the other\n> hand, that might be reused for \"non-gui console mode\" listeners.\n\nSo this means we have a blocker for 3.2 now.", "id": 197046, "time": "2017-02-15T20:52:51Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-02-15T20:52:51Z", "is_private": false}, {"count": 19, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "id": 197048, "time": "2017-02-15T21:50:19Z", "bug_id": 60687, "creation_time": "2017-02-15T21:50:19Z", "is_private": false, "text": "With below improvement, passed from 3566 samples / sec to 4100/sec\n\n\n\nAuthor: pmouawad\nDate: Wed Feb 15 21:45:23 2017\nNew Revision: 1783153\n\nURL: http://svn.apache.org/viewvc?rev=1783153&view=rev\nLog:\nBug 60687 - Make GUI more responsive when it gets a lot of events\nImprove errrors indicator management\nBugzilla Id: 60687\n\nModified:\n    jmeter/trunk/src/core/org/apache/jmeter/gui/MainFrame.java"}, {"count": 20, "tags": [], "text": "Philippe> With below improvement\n\nShould the timer be stopped at some point like computeTestDurationTimer is stopped in testEnded ?", "attachment_id": null, "bug_id": 60687, "id": 197064, "time": "2017-02-16T12:06:08Z", "creator": "sitnikov.vladimir@gmail.com", "creation_time": "2017-02-16T12:06:08Z", "is_private": false}, {"count": 21, "attachment_id": null, "bug_id": 60687, "text": "(In reply to Vladimir Sitnikov from comment #20)\n> Philippe> With below improvement\n> \n> Should the timer be stopped at some point like computeTestDurationTimer is\n> stopped in testEnded ?\n\nI don't think so as it's tightly related to Jmeter gui so it looked ok to me to not stop it and just wait for exit.\n\n\nbut if you think we should feel free to apend my code. thx", "id": 197065, "time": "2017-02-16T12:17:27Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-02-16T12:17:27Z", "tags": [], "is_private": false}, {"count": 22, "tags": [], "creator": "felix.schumacher@internetallee.de", "attachment_id": null, "id": 197080, "time": "2017-02-16T18:51:56Z", "bug_id": 60687, "creation_time": "2017-02-16T18:51:56Z", "is_private": false, "text": "@Vladimir, do you think this solution is better suited?\n\nDate: Thu Feb 16 18:41:11 2017\nNew Revision: 1783270\n\nURL: http://svn.apache.org/viewvc?rev=1783270&view=rev\nLog:\nKeep GUI responsive when many events are processed by View Results Tree, Summary Report and Log Panel.\nModify the model only, when we are in the AWT thread. Use more features of ConcurrentHashMap.\n\nBugzilla Id: 60687\n\n\nModified:\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/SummaryReport.java"}, {"count": 23, "tags": [], "bug_id": 60687, "attachment_id": null, "id": 197137, "time": "2017-02-18T14:09:14Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-02-18T14:09:14Z", "is_private": false, "text": "Date: Sat Feb 18 14:06:36 2017\nNew Revision: 1783556\n\nURL: http://svn.apache.org/viewvc?rev=1783556&view=rev\nLog:\nMake GUI more responsive when it gets a lot of events.\nConvert Aggregate Graph to use a queue, when new rows are to be inserted.\nUpdate the model (or at least notify the gui) only periodically.\nThat way we get the update of the model out of the busy path of the swing\nevent loop.\n\nBugzilla Id: 60687\n\nModified:\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/StatGraphVisualizer.java"}, {"count": 24, "tags": [], "text": "Date: Sat Feb 18 14:31:45 2017\nNew Revision: 1783558\n\nURL: http://svn.apache.org/viewvc?rev=1783558&view=rev\nLog:\nMake GUI more responsive when it gets a lot of events.\nConvert Aggregate Report to use a queue, when new rows are to be inserted.\nUpdate the model (or at least notify the gui) only periodically.\nThat way we get the update of the model out of the busy path of the swing\nevent loop.\n\nBugzilla Id: 60687\n\nModified:\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/StatVisualizer.java", "attachment_id": null, "id": 197138, "creator": "felix.schumacher@internetallee.de", "time": "2017-02-18T14:32:34Z", "bug_id": 60687, "creation_time": "2017-02-18T14:32:34Z", "is_private": false}, {"count": 25, "tags": [], "bug_id": 60687, "attachment_id": null, "text": "Date: Sat Feb 18 18:58:08 2017\nNew Revision: 1783577\n\nURL: http://svn.apache.org/viewvc?rev=1783577&view=rev\nLog:\nRecurse into add method before changing into the runSafe method.\n\nBugzilla Id: 60687\n\nModified:\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/TableVisualizer.java\n\nDate: Sat Feb 18 19:22:40 2017\nNew Revision: 1783579\n\nURL: http://svn.apache.org/viewvc?rev=1783579&view=rev\nLog:\nMake GUI more responsive when it gets a lot of events.\nConvert Table Visualizer to use a queue, when new rows are to be inserted.\nUpdate the model (or at least notify the gui) only periodically.\nThat way we get the update of the model out of the busy path of the swing\nevent loop. Note, that this will not save us from OOM exceptions.\n\nBugzilla Id: 60687\n\n\nModified:\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/TableVisualizer.java", "id": 197144, "time": "2017-02-18T19:23:21Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-02-18T19:23:21Z", "is_private": false}, {"count": 26, "attachment_id": null, "bug_id": 60687, "text": "Date: Sat Feb 18 21:10:09 2017\nNew Revision: 1783590\n\nURL: http://svn.apache.org/viewvc?rev=1783590&view=rev\nLog:\nMake the interval period configurable by one property for all listeners.\n\nBugzilla Id: 60687\n\nModified:\n    jmeter/trunk/bin/jmeter.properties\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/GraphVisualizer.java\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/StatGraphVisualizer.java\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/StatVisualizer.java\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/TableVisualizer.java\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/ViewResultsFullVisualizer.java\n    jmeter/trunk/src/core/org/apache/jmeter/gui/LoggerPanel.java\n    jmeter/trunk/xdocs/usermanual/properties_reference.xml", "id": 197146, "time": "2017-02-18T21:11:11Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2017-02-18T21:11:11Z", "tags": [], "is_private": false}, {"count": 27, "tags": [], "bug_id": 60687, "text": "*** Bug 59258 has been marked as a duplicate of this bug. ***", "id": 197551, "time": "2017-03-08T21:01:31Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-03-08T21:01:31Z", "is_private": false, "attachment_id": null}, {"count": 28, "tags": [], "creator": "felix.schumacher@internetallee.de", "text": "Date: Fri Mar 10 18:58:51 2017\nNew Revision: 1786417\n\nURL: http://svn.apache.org/viewvc?rev=1786417&view=rev\nLog:\nUse jmeter.gui.refresh_period to configure period of refresh for Summary Report.\n\nBugzilla Id: 60687\n\nModified:\n    jmeter/trunk/src/components/org/apache/jmeter/visualizers/SummaryReport.java", "id": 197589, "time": "2017-03-10T18:59:17Z", "bug_id": 60687, "creation_time": "2017-03-10T18:59:17Z", "is_private": false, "attachment_id": null}, {"count": 29, "tags": [], "bug_id": 60687, "attachment_id": null, "id": 198190, "time": "2017-04-06T13:59:42Z", "creator": "logox01@gmx.at", "creation_time": "2017-04-06T13:59:42Z", "is_private": false, "text": "(JMeter 3.2 rc2)\nThe latest changes in the ViewResultsTree listener lead to selections getting lost as soon as new items show up in the results tree."}, {"count": 30, "tags": [], "bug_id": 60687, "text": "Fixed within Bug 60961", "id": 200602, "time": "2017-09-02T19:22:39Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-09-02T19:22:39Z", "is_private": false, "attachment_id": null}]