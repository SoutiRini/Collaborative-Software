[{"count": 0, "tags": [], "bug_id": 51864, "attachment_id": null, "text": "RFC 2616, section 14.35.3 Range Retrieval Requests states:\n\n   If a proxy that supports ranges receives a Range request, forwards\n   the request to an inbound server, and receives an entire entity in\n   reply, it SHOULD only return the requested range to its client. It\n   SHOULD store the entire received response in its cache if that is\n   consistent with its cache allocation policies.\n\nThis does not occur.  Instead, if the entity is expired or uncached, and the origin server is contacted with the range request and returns the entire entity, the entire entity is forwarded to the client.  I have tested this with mod_proxy_http/mod_disk_cache, md_proxy_http/mod_mem_cache, mod_proxy_ajp/mod_disk_cache, and mod_proxy_ajp/mod_mem_cache, all with similar results.  All combinations were tried both with an empty cache, an unexpired entity in the cache, and with an expired entity in the cache.  In all cases, the empty and expired entity attempts returned the entire response instead of the requested partial entity, and the unexpired entity returned only the requested range.\n\nI am running ubuntu 10.04.3 LTS, running the Apache 2.2.14 package in the Ubuntu repositories:\n\nzanfur@rbatteylaptop:~$ lsb_release -d\nDescription:\tUbuntu 10.04.3 LTS\nzanfur@rbatteylaptop:~$ apache2 -V\nServer version: Apache/2.2.14 (Ubuntu)\nServer built:   Sep  1 2011 09:52:34\nServer's Module Magic Number: 20051115:23\nServer loaded:  APR 1.3.8, APR-Util 1.3.9\nCompiled using: APR 1.3.8, APR-Util 1.3.9\nArchitecture:   64-bit\nServer MPM:     Worker\n  threaded:     yes (fixed thread count)\n    forked:     yes (variable process count)\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/worker\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=128\n -D HTTPD_ROOT=\"\"\n -D SUEXEC_BIN=\"/usr/lib/apache2/suexec\"\n -D DEFAULT_PIDLOG=\"/var/run/apache2.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"/etc/apache2/mime.types\"\n -D SERVER_CONFIG_FILE=\"/etc/apache2/apache2.conf\"\n\nAlthough this is not the latest version, I have gone through the diff of the modules/cache directory between versions 2.2.14 and 2.2.21 (current), and there were no changes remotely relating to this behavior.\n\nThis bug makes the proxy useless for, for instance, mobile phones attempting to resume a download failed due to a network blip over a slow network.\n\nHere are the debug cache logs for an attempt to get a range request for a cached entity that has expired with mod_mem_cache:\n\n[Wed Sep 21 17:23:51 2011] [debug] cache_storage.c(272): Cached response for /http/skserver/downloadClient.jsp/SK_918791555016_69650117.apk isn't fresh.  Adding/replacing conditional request headers.\n[Wed Sep 21 17:23:51 2011] [debug] mod_cache.c(131): Adding CACHE_SAVE filter for /http/skserver/downloadClient.jsp/SK_918791555016_69650117.apk\n[Wed Sep 21 17:23:51 2011] [debug] mod_cache.c(138): Adding CACHE_REMOVE_URL filter for /http/skserver/downloadClient.jsp/SK_918791555016_69650117.apk\n[Wed Sep 21 17:23:51 2011] [debug] mod_cache.c(663): cache: Caching url: /http/skserver/downloadClient.jsp/SK_918791555016_69650117.apk?msisdn=918791555016&cc=69650117&icid=22&deviceTypeName=Samsung%20GT-I9000_ext&imei=Samsung%20GT-I9000_ext_FAKE_918791555016&seg1=3&format=html\n[Wed Sep 21 17:23:51 2011] [debug] mod_cache.c(669): cache: Removing CACHE_REMOVE_URL filter.\n[Wed Sep 21 17:23:58 2011] [info] mem_cache: Cached url: http://tatadasfprod.tatadocomo.com:80/http/skserver/downloadClient.jsp/SK_918791555016_69650117.apk?\n\nSimilarly for mod_disk_cache:\n\n[Wed Sep 21 17:29:00 2011] [debug] mod_disk_cache.c(758): disk_cache: Recalled headers for URL http://tatadasfprod.tatadocomo.com:80/http/skserver/downloadClient.jsp/SK_918791555016_69650117.apk?\n[Wed Sep 21 17:29:00 2011] [debug] cache_storage.c(272): Cached response for /http/skserver/downloadClient.jsp/SK_918791555016_69650117.apk isn't fresh.  Adding/replacing conditional request headers.\n[Wed Sep 21 17:29:00 2011] [debug] mod_cache.c(131): Adding CACHE_SAVE filter for /http/skserver/downloadClient.jsp/SK_918791555016_69650117.apk\n[Wed Sep 21 17:29:00 2011] [debug] mod_cache.c(138): Adding CACHE_REMOVE_URL filter for /http/skserver/downloadClient.jsp/SK_918791555016_69650117.apk\n[Wed Sep 21 17:29:01 2011] [debug] mod_cache.c(663): cache: Caching url: /http/skserver/downloadClient.jsp/SK_918791555016_69650117.apk?msisdn=918791555016&cc=69650117&icid=22&deviceTypeName=Samsung%20GT-I9000_ext&imei=Samsung%20GT-I9000_ext_FAKE_918791555016&seg1=3&format=html\n[Wed Sep 21 17:29:01 2011] [debug] mod_cache.c(669): cache: Removing CACHE_REMOVE_URL filter.\n[Wed Sep 21 17:29:01 2011] [debug] mod_disk_cache.c(977): disk_cache: Stored headers for URL http://tatadasfprod.tatadocomo.com:80/http/skserver/downloadClient.jsp/SK_918791555016_69650117.apk?\n[Wed Sep 21 17:29:09 2011] [debug] mod_disk_cache.c(1066): disk_cache: Body for URL http://tatadasfprod.tatadocomo.com:80/http/skserver/downloadClient.jsp/SK_918791555016_69650117.apk? cached.\n\nSteps to reproduce are below, hopefully with enough information.  If more information is required, and and ye shall receive.\n\n\nHOW TO REPRODUCE\n\nConfigure Apache to load the following modules:\n* mod_proxy\n* mod_proxy_http or mod_proxy_ajp\n* mod_cache\n* mod_cache_disk or mod_cache_mem\n\nFind a link that ignores Range headers in requests.\n\nConfigure Apache so that it does the following:\n* Reverse proxies the above link using a ProxyPass or Rewrite [P] rule\n* Caches successful downloads of the link (sizes in range, etc)\n\nRequest the entity in the above link with a valid Range request (wget -c is useful for this, though I just typed it in a \"telnet localhost 80\" window)\n\nWatch it get the entire entity for you instead. (no entity in cache)\n\nRequest it again, with the exact same request.\n\nWatch it only give you the requested range. (unexpired entity in cache)\n\nWait for the entity to expire (I manually set the expiry time to 60 seconds, so I didn't have to wait long...)\n\nRequest it again, exactly the same as the previous two times. \n\nWatch as the entire entity is downloaded again. (expired entity in cache)", "id": 149604, "time": "2011-09-22T00:43:38Z", "creator": "apache@zanfur.com", "creation_time": "2011-09-22T00:43:38Z", "is_private": false}]