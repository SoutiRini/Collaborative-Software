[{"count": 0, "tags": [], "bug_id": 38745, "text": "Version: Tomcat 5.5 used in JBoss, CVSTag=JBoss_4_0_2 date=20050502 2023)\nComponent: Coyote\nPlatform: happened on win32, but probably applies to all platforms.\nJVM: JDK 1.5.0_06\nWeb Server: JBoss 4.0.2sp1\n\nHi all,\n\nI'm working on a solution that needs to make use of URL rewriting for session \nID's. I'm using response.encodeURL(url) in order to do this. The server uses \nport 8080.\n\nWhen accessing the site through Firefox, all is fine. All my URL's get \nrewritten perfectly and there are no issues.\n\nI'm also using wfetch.exe and this always failed to rewrite on the same access \nURL and the same code, also on 8080. I inspected the conversation and noticed \nthat the client application incorrectly uses the \"Host\" header.\n\nThe spec clearly says that Host should always be included for HTTP/1.1 and \nthat if port is not specified, 80 is assumed. The only difference was \nthis \"Host\" header in this case, all the other headers, parameters, URI was \nthe same.\n\nI've looked into the JVM using a debugger. When the clients access the system, \nthere is a 'CoyoteRequest' object that has a further 'request' variable in it. \nThe latter request variable contains an attribute called 'serverPort', which \nis used in the \"isEncodeable\" method of \"CoyoteResponse\". If the port that \nTomcat thinks the request was initiated on is equal to the request on the URL, \nthe rewriting is carried out. Otherwise it is not.\n\nIm not sure whether this may create some security issues later on. I would \nhave expected the container to use the port setting inside the context when it \ncomes to URL rewriting, since the container can determine this easily and does \nnot have to depend on the Host header (as Tomcat seems to depend).\n\nCan anyone confirm this is happening as I stated and whether this behaviour is \ncorrect?  Because as I have just shown, this may also cause other issues for \nother people somehow.", "id": 86064, "time": "2006-02-22T01:36:17Z", "creator": "gwat@cesar.org.br", "creation_time": "2006-02-22T01:36:17Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 38745, "is_private": false, "text": "(In reply to comment #0)\n> Can anyone confirm this is happening as I stated and whether this behaviour \nis \n> correct?  Because as I have just shown, this may also cause other issues for \n> other people somehow.\n\nYes, this is what is happening, and yes this behaviour is not only correct, \nbut required by the servlet spec (see the javadocs for \nServletRequest#getServerPort in section 14.2.16 of the spec).\n\nIf Tomcat used the actual Connector port (i.e. request.getLocalPort), then \nweird things would start to happen when the Tomcat port is being natted, or \nTomcat is behind a proxy.  This would be much worse than just trying to handle \none buggy client.\n\nOf course, since you are on Windows, there is nothing stopping you from simply \nrunning Tomcat on the default port 80.  Then all of your problems would be \nsolved :).\n\n", "id": 86067, "time": "2006-02-22T05:05:45Z", "creator": "william.barker@wilshire.com", "creation_time": "2006-02-22T05:05:45Z", "attachment_id": null}]