[{"count": 0, "tags": [], "bug_id": 58806, "attachment_id": 33409, "is_private": false, "id": 187398, "time": "2016-01-05T17:16:39Z", "creator": "luke@sce.net", "creation_time": "2016-01-05T17:16:39Z", "text": "Created attachment 33409\nmod_status output\n\nI have recently enabled HTTP/2 via the mod_http2 module. I have noticed that soon after doing so, the number of httpd processes increases. Looking at the server status page it appears that the processes are remaining alive because a thread is listed in KeepAlive status. I am enclosing a slightly sanitized copy of the server status page.\n\nThis occurs with both the worker and event MPMs, running on Linux - v3.11.10-29-default, (amd64 platform). Each worker process is set to terminate after 10240 connections, via the following config entries:\n\nStartServers             1\nMinSpareThreads          2\nMaxSpareThreads         20\nThreadsPerChild         16\nMaxRequestWorkers      256\nMaxConnectionsPerChild 10240\n\nIf I disable mod_http2, this situation goes away and the workers are recycled properly."}, {"count": 1, "tags": [], "bug_id": 58806, "is_private": false, "id": 187409, "attachment_id": null, "creator": "stefan@eissing.org", "creation_time": "2016-01-06T10:30:22Z", "time": "2016-01-06T10:30:22Z", "text": "Thanks for the detailed description. The keepalive timing is, unfortunately, in 2.4.18 totally left to the client. mod_http2 will not close the connection on its own and occupy a worker thread for it.\n\nI am working on a new release that honors the default KeepAliveTimeout and also, optionally offers a separate H2KeepAliveTimeout. A new Apache httpd release will take some time however. Would you be interested in building an interim release of the module? I publish such test releases on github (https://github.com/icing/mod_h2).\n\n-Stefan"}, {"count": 2, "tags": [], "creator": "luke@sce.net", "is_private": false, "text": "I build httpd from source so I would be happy to help out here. Let me know what I can do.", "id": 187454, "time": "2016-01-07T04:05:39Z", "bug_id": 58806, "creation_time": "2016-01-07T04:05:39Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 58806, "is_private": false, "id": 187506, "attachment_id": null, "creator": "stefan@eissing.org", "creation_time": "2016-01-08T16:22:52Z", "time": "2016-01-08T16:22:52Z", "text": "Please give https://github.com/icing/mod_h2 release v1.1.0 a try. Just configure it with your apxs, compile and you can drop it as a replacement of the 2.4.18 mod_http2. Hope this helps."}, {"count": 4, "tags": [], "text": "Thank you. I have compiled it and reloaded Apache. We will see what happens as the workers roll over this weekend.\n\nIf it works properly, is it safe to switch over the MPM to event?", "is_private": false, "id": 187520, "creator": "luke@sce.net", "time": "2016-01-09T19:52:13Z", "bug_id": 58806, "creation_time": "2016-01-09T19:52:13Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 58806, "text": "I let it run overnight, and it seems better - there were only two lingering Apache processes rather than 3 or 4. What's interesting is that the Apache status page said that the remaining connections were in \"W\" state, or writing. I have the status HTML saved if you want to see it, but unfortunately I didn't run netstat to see if there was an open connection. One was IPv6, one was IPv4 so I don't think that makes a difference. Both were HTTP/2 requests.\n\nLet me know if you need any more info. It almost seems like mod_http2 isn't communicating back the status of a thread and therefore the master process is keeping the child alive indefinitely.", "id": 187529, "time": "2016-01-10T16:00:35Z", "creator": "luke@sce.net", "creation_time": "2016-01-10T16:00:35Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 58806, "attachment_id": null, "text": "It is currently save to use mod_http2 v1.1.0 and higher with mpm_event. Several people have done this and reported no problems.\n\nIf you have processes hanging, no longer accepting connections, they try to shut down and some http2 connection does not let them. That was frequently the case in pre 1.1.0 versions.\n\nIf that still happens with the newer versions, I'd be interested to learn what configuration you use in regard to timeouts and maxconnections and other related directives. Thx.", "id": 187821, "time": "2016-01-19T10:48:36Z", "creator": "stefan@eissing.org", "creation_time": "2016-01-19T10:48:36Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 58806, "attachment_id": null, "is_private": false, "id": 187845, "time": "2016-01-20T05:09:21Z", "creator": "luke@sce.net", "creation_time": "2016-01-20T05:09:21Z", "text": "I have reenabled HTTP/2 with the following options:\n\nH2MaxWorkerIdleSeconds  15\nH2KeepAliveTimeout      10\nH2MaxWorkers            16\n\nStartServers             1\nMinSpareThreads          2\nMaxSpareThreads         20\nThreadsPerChild         16\nMaxRequestWorkers      256\nMaxConnectionsPerChild 10240\n\nMPM: worker\n\nIf things are hung tomorrow I will post the server status. Looks like the threads are now hanging in \"W\" state, but looking at netstat it suggests that the connections are closed but the scoreboard (?) is not being updated, and the master httpd process will not kill the child."}, {"count": 8, "tags": [], "creator": "stefan@eissing.org", "text": "Just ran a smoke test here with that configuration for half an hour. Nothing blocking. server-status ok. Curious...", "id": 187850, "time": "2016-01-20T11:03:10Z", "bug_id": 58806, "creation_time": "2016-01-20T11:03:10Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "text": "I have a stuck child after running overnight, using worker mpm.\n\nBased on my testing, I can limit the frequency of this happening using a higher value of MaxConnectionsPerChild. You may want to experiment by setting this to a very low value and seeing what happens.\n\nMy suspicion is that this is related to Apache terminating a child when this threshold has been reached. I am going to drop MaxConnectionsPerChild to 256 and see what happens.", "is_private": false, "id": 187854, "creator": "luke@sce.net", "time": "2016-01-20T17:32:11Z", "bug_id": 58806, "creation_time": "2016-01-20T17:32:11Z", "attachment_id": null}, {"count": 10, "tags": [], "creator": "luke@sce.net", "text": "Interesting. After I told Apache to do a graceful restart when I changed MaxConnectionsPerChild, I had a thread in Keep-Alive status for an HTTP/2 connection; it's now stuck in K (rather than W for the others).\n\nDoes the MaxConnectionsPerChild limit use the same signalling as apachectl graceful? It looks like if there's a thread still alive serving an HTTP/2 request when either situation occurs, it doesn't update the scoreboard properly and the child never dies.", "id": 187855, "time": "2016-01-20T17:35:48Z", "bug_id": 58806, "creation_time": "2016-01-20T17:35:48Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "(In reply to Luke Kolin from comment #10)\n> Interesting. After I told Apache to do a graceful restart when I changed\n> MaxConnectionsPerChild, I had a thread in Keep-Alive status for an HTTP/2\n> connection; it's now stuck in K (rather than W for the others).\n> \n> Does the MaxConnectionsPerChild limit use the same signalling as apachectl\n> graceful? It looks like if there's a thread still alive serving an HTTP/2\n> request when either situation occurs, it doesn't update the scoreboard\n> properly and the child never dies.\n\nCould you apply attachment 33158 (from bug 53555) which could address an issue possibly leveraged by mod_http2?", "id": 187862, "time": "2016-01-20T22:51:53Z", "bug_id": 58806, "creation_time": "2016-01-20T22:51:53Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 58806, "text": "Would the patch have any effect if not using the event MPM? I am currently using worker.", "id": 187876, "time": "2016-01-21T16:29:37Z", "creator": "luke@sce.net", "creation_time": "2016-01-21T16:29:37Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 58806, "text": "Created attachment 33516\nmod_status output with alive child and stuck slot 2-12\n\nNote slot 2-12", "id": 188171, "time": "2016-02-02T22:31:10Z", "creator": "luke@sce.net", "creation_time": "2016-02-02T22:31:10Z", "is_private": false, "attachment_id": 33516}, {"count": 14, "tags": [], "bug_id": 58806, "is_private": false, "text": "Some more information. I pulled the latest Master from GitHub and enabled mod_http2 again. It looks like the scoreboard issue isn't on restart, but earlier. Look at slot 2-12; it looks like it is still marked as \"W\" even though the worker is still running. This is the slot that stays alive in the second status after the child has stopped accepting new requests.\n\nHope this helps track things down.", "id": 188172, "time": "2016-02-02T22:31:27Z", "creator": "luke@sce.net", "creation_time": "2016-02-02T22:31:27Z", "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 58806, "text": "Created attachment 33517\nmod_status output with stuck slot 2-12\n\nThis is mod_status with the child no longer accepting new requests", "id": 188173, "attachment_id": 33517, "creator": "luke@sce.net", "creation_time": "2016-02-02T22:32:16Z", "time": "2016-02-02T22:32:16Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 58806, "text": "The latest version from Github appears to have resolved this problem - all the threads are being correctly marked completed and the children are recycling properly.\n\nThanks!", "id": 188293, "time": "2016-02-08T19:12:04Z", "creator": "luke@sce.net", "creation_time": "2016-02-08T19:12:04Z", "is_private": false, "attachment_id": null}]