[{"count": 0, "tags": [], "creator": "mattinger@yahoo.com", "attachment_id": null, "text": "When trying to use the <sshexec> task, i am getting the following error:\n\n     [exec] cvsup:\n     [exec]   [sshexec] Connecting to ind-cvs:22\n\n     [exec] BUILD FAILED\n     [exec] E:\\build-utilities\\new-web-interface\\dist\\scripts\\cvsup.xml:42: com.\njcraft.jsch.JSchException: reject HostKey\n\n     [exec] Total time: 3 seconds\n\nregister.finish:\n      [sql] Executing commands\n      [sql] 1 of 1 SQL statements executed successfully\n\nBUILD SUCCESSFUL\nTotal time: 5 seconds\n\n\n\nI am trying to run a command via ssh, with the following ant spec:\n\n        <sshexec\n            host=\"${cvsup.host}\"\n            port=\"${cvsup.port}\"\n            username=\"${cvsup.username}\"\n            password=\"${cvsup.password}\"\n            command=\"${cvsup.command}\" />\n\nFrom what i've tried, i've seen this error when using JSch directly,\nand the following code eliminates that error:\n\n        Hashtable config = new Hashtable();\n        config.put(\"StrictHostKeyChecking\", \"no\");\n        session.setConfig(config);\n\nHowever, the <sshexec> task does not allow any option for this.\nIt would be nice if there were a property which could be set on\nthe task to enable the setting of this configuration item.\n\nOther than that config item, i have not found a way to use password\nauthentication.  If there are suggestions, that would be nice.\n\nI am willing to make this fix myself, and contribute the patch if\nit is indeed the proper way to handle this.", "id": 70214, "time": "2005-01-28T00:32:52Z", "bug_id": 33279, "creation_time": "2005-01-28T00:32:52Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 33279, "text": "The error you get is \"jcraft.jsch.JSchException: reject HostKey\". This does not \nhave anything to do with the fact that you are using password authentication. \nYou need to either set the knownhosts attribute to point to a knownhosts files \nthat contains the remote servers public key, or set the trust attribute to \ntrue. See the manual for an explaination of these two attributes I mentioned.\n\n-Rob A", "id": 70215, "time": "2005-01-28T00:39:13Z", "creator": "riznob@hotmail.com", "creation_time": "2005-01-28T00:39:13Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 33279, "text": "OK.  I guess I misunderstood the trust attribute.  I took it to mean\ntrust that the host is who it says it is, which to me implies the\nsetting of that flag to not do any additional authentication.  I guess\nmaybe the documentation could be a bit clearer.", "id": 70219, "time": "2005-01-28T05:31:56Z", "creator": "mattinger@yahoo.com", "creation_time": "2005-01-28T05:31:56Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "riznob@hotmail.com", "attachment_id": null, "text": "The trust attribute does mean you trust that the remote host is who it says it \nis. Otherwise you need to set the knownhosts attribute to a knownhosts file, \nwhere the remote hosts identity can be verified by comparing it's public key to \na previously cached public key from the same host. When you first connect to a \nhost via ssh, you are prompted to accept the remote hosts public key. Setting \ntrust=\"true\" means that you are accepting the remote hosts public key or you \nare skipping the comparison of the remote hosts key with a previously cached \nkey from the remote host. The OpenSSH manpage says\n     \"This authentication method closes security holes due to IP spoofing,\n      DNS spoofing and routing spoof-ing.\"\nHowever, regardless of how you choose to verify that the remote host is who you \nthink it is, the remote host does not trust that you are who you say you are, \nunless you provide the right password or key+passphrase. There are bassically \ntwo authentications that take place.\n1) You authenticate the remote hosts via knownhosts and public key, to be sure \nthat you are connecting to the machine that you think you are connecting to. \n(disabled by setting trust=\"true\")\n2) The remote host authenticates you via password or key+passphrase.\n\nI hope this helps clear things up.\n\n-Rob A", "id": 70231, "time": "2005-01-28T19:54:38Z", "bug_id": 33279, "creation_time": "2005-01-28T19:54:38Z", "is_private": false}]