[{"count": 0, "tags": [], "bug_id": 19445, "attachment_id": null, "text": "When I install tomcat 5 on mac os x 10.2.5 running jdk 1.4.1_01-14 mixed mode\ntomcat comes up the first time. However if I stop the server and restart it then\nI get the following exception. The server doesn't stop however I get a \"document\n contains no data\" error when I try to access any page.\nCreated Listener\nStandardServer.await: create[8005]: java.net.SocketException: Too many open files\njava.net.SocketException: Too many open files\n        at java.net.ServerSocket.createImpl(ServerSocket.java:245)\n        at java.net.ServerSocket.getImpl(ServerSocket.java:203)\n        at java.net.ServerSocket.bind(ServerSocket.java:309)\n        at java.net.ServerSocket.<init>(ServerSocket.java:183)\n        at org.apache.catalina.core.StandardServer.await(StandardServer.java:523)\n        at org.apache.catalina.startup.Catalina.await(Catalina.java:625)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:587)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:297)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:394)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at org.apache.commons.launcher.ChildMain.run(ChildMain.java:269)\njava.lang.NullPointerException\n        at\norg.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.java:483)\n        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:468)\n        at org.apache.catalina.startup.HostConfig.run(HostConfig.java:968)\n        at java.lang.Thread.run(Thread.java:554)", "id": 36340, "time": "2003-04-29T22:50:25Z", "creator": "rajiv.mordani@sun.com", "creation_time": "2003-04-29T22:50:25Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rajiv.mordani@sun.com", "attachment_id": null, "id": 37520, "time": "2003-05-21T06:59:40Z", "bug_id": 19445, "creation_time": "2003-05-21T06:59:40Z", "is_private": false, "text": "Note this exception doesn't happen on Mac os only. If you deploy a lot of\nwars(about 40 or so) on tomcat 5 then this also happens on solaris 8 and other\nplatforms as well."}, {"count": 2, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 39394, "time": "2003-06-25T08:16:18Z", "bug_id": 19445, "creation_time": "2003-06-25T08:16:18Z", "is_private": false, "text": "Tomcat now tries to avoid opening lots of files (without guarantees), and\ndoesn't leak file descriptor. However, I think this bug is trying to prove that\nan OS global shared VM is bad for server environments."}, {"count": 3, "attachment_id": null, "bug_id": 19445, "text": "Mac OS X imposes a low limit on the number of open file descriptors a process\nmay have, specifically 256 by default.  There is no easy way to fix this from\nJava, but in the catalina shell script, you should probably add a call to the sh\nbuiltin  ulimit to increase the number of allowed open files. For example:\n\nulimit -n 1024\n\nThis solved the problem in my application and probably would solve the problem\nin tomcat.", "id": 50664, "time": "2004-01-16T20:45:14Z", "creator": "jonathan@hessemma.com", "creation_time": "2004-01-16T20:45:14Z", "tags": [], "is_private": false}]