[{"count": 0, "tags": [], "creator": "gregor@apache.org", "text": "It should be possible to automate a lot of the small changes required to make a\n1.2 publication work in 1.4.\n\nsvn diff https://svn.apache.org/repos/a\nsf/lenya/branches/BRANCH_1_2_X/src/webapp/lenya/pubs https://svn.apache.org/repo\ns/asf/lenya/trunk/src/webapp/lenya/pubs > diff.txt\n\nto ensure that patches apply cleanly to custom publications, it may be necessary\nto use xmldiff or a similar tool.", "id": 72707, "time": "2005-03-19T20:22:38Z", "bug_id": 34088, "creation_time": "2005-03-19T20:22:38Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "gregor@apache.org", "attachment_id": null, "id": 72708, "time": "2005-03-19T20:47:10Z", "bug_id": 34088, "creation_time": "2005-03-19T20:47:10Z", "is_private": false, "text": "it may be useful to create patch files in either xupdate of xpatch format (since\nthey both ship with lenya already)"}, {"count": 2, "tags": [], "bug_id": 34088, "is_private": false, "text": "Created attachment 14522\nPatch to upgrade publications based on the default publication from 1.2 to 1.4. Patch is relative to the root of the default publication", "id": 72735, "time": "2005-03-20T23:35:37Z", "creator": "gregor@apache.org", "creation_time": "2005-03-20T23:35:37Z", "attachment_id": 14522}, {"count": 3, "tags": [], "creator": "gregor@apache.org", "attachment_id": null, "id": 72736, "time": "2005-03-20T23:38:20Z", "bug_id": 34088, "creation_time": "2005-03-20T23:38:20Z", "is_private": false, "text": "(In reply to comment #2)\n> Created an attachment (id=14522) [edit]\n> Patch to upgrade publications based on the default publication from 1.2 to 1.4\n> \n\nthe above patch is a first cut at a patch to upgrade an instance of a 1.2\npublication based on the default publication to 1.4. it has the following\nchanges relative to a straight diff between the two branches:\n\n* ignores content files\n* removes default/ prefix to enable patching of publications with other names\n\nideally, someone would give it a try.."}, {"count": 4, "tags": [], "creator": "gregor@apache.org", "text": "solprovider@gmail.com wrote:\n\n> 5) Upgrading causes headaches.\n> This is difficult for all software.  Some companies/projects just\n> announce old implementations will not work with the latest release;\n> those companies tend to disappear.\n> \n> My company details how each code change will affect the previous\n> release, and if so, requires the patch to fix the upgrade process too.\n>  We do require upgrades to every release; each upgrade only handles\n> the last release; but we release seldom enough (and the upgrades are\n> free) so all of our customers have upgraded before the next release.\n> \n> Lenya is more complicated because of parallel development.  Will\n> everybody need to upgrade 1.2.2 to 1.2.3 to 1.2.4 to be able to\n> upgrade to 1.4?  This could be required if upgrades were easy, but the\n> 1.2.2 to 1.2.3 upgrade issues will hurt.  Lenya1.4 needs upgrade code\n> for each 1.2 release starting with 1.2.2.  There will be milestone\n> releases where all the upgrade code is discarded.\n> \n> Our process loops through each document, and calls the appropriate\n> upgrade function.  The functions only deal with one type of document. \n> Lenya should have an upgrade process for XSL, XSP, JS, XMAP, IML and\n> GML, various XCONF, siteree.xml, content XML, Flow Form XML, and more.\n>  Each file should be considered as a data during upgrade.  Some is\n> easy.  Modifications outside a publication should be discarded; anyone\n> who customizes the main program must remember their changes, except\n> maybe the publication \"upgrade XSL\" could be applied to the global XSL\n> (for \"login\" and \"choose publication\") XSL if those documents have not\n> changed much.  Creating a framework for this is a chore, but it should\n> only need to done once.  Hopefully Lenya can implement something\n> similar, and figure out how to make it mandatory for each patch to\n> keep it current.", "id": 76130, "time": "2005-06-07T15:59:21Z", "bug_id": 34088, "creation_time": "2005-06-07T15:59:21Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "solprovider@gmail.com", "attachment_id": null, "id": 76136, "time": "2005-06-07T18:15:05Z", "bug_id": 34088, "creation_time": "2005-06-07T18:15:05Z", "is_private": false, "text": "Upgrade process should attempt to upgrade all publications.  First line of the\nupgrade instructions should be \"1. Backup your old installation, including all\npublications, now!\"\n\nEven better would be to copy all pubs from the \"pubs\" directory to a\n\"pubs-{oldversion}\" directory before upgrading.  If the upgrade fails, they can\nreinstall the last version and just copy the old pubs directory to regain\nusefulness.  That may require a choice from the user; if they already backed up\neverything, they may not want to waste disk space, or even have it to be wasted."}, {"count": 6, "attachment_id": null, "bug_id": 34088, "is_private": false, "id": 102379, "time": "2007-04-25T10:27:06Z", "creator": "nettings@apache.org", "creation_time": "2007-04-25T10:27:06Z", "tags": [], "text": "just a warning: everything here is very likely totally outdated. should we\nreally try and provide an automated migration path? sounds hard if not impossible.\n"}, {"count": 7, "tags": [], "creator": "andreas@apache.org", "text": "We could certainly provide a migration tool for the content, but not for the\npublication \"infrastructure\" (sitemaps, XSLTs etc.).", "id": 102417, "time": "2007-04-26T00:07:19Z", "bug_id": 34088, "creation_time": "2007-04-26T00:07:19Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "nettings@apache.org", "text": "(In reply to comment #7)\n> We could certainly provide a migration tool for the content, but not for the\n> publication \"infrastructure\" (sitemaps, XSLTs etc.).\n\nwill your migration test be adaptable to this?\nas to the infrastructure, we should make sure that once the content has been\nmigrated, the user immediately sees something, i.e. the websites should render\nsomehow (maybe display a prettyprinted source), and the GUI should not produce\nNPEs when the user clicks around... will this be a target for 2.0 or afterwards?\n", "id": 106221, "time": "2007-08-02T14:25:36Z", "bug_id": 34088, "creation_time": "2007-08-02T14:25:36Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "text": "(In reply to comment #8)\n> (In reply to comment #7)\n> > We could certainly provide a migration tool for the content, but not for the\n> > publication \"infrastructure\" (sitemaps, XSLTs etc.).\n> \n> will your migration test be adaptable to this?\n\nYes, provided that the publication doesn't use a custom DocumentIdToPathMapper.\n\n> as to the infrastructure, we should make sure that once the content has been\n> migrated, the user immediately sees something, i.e. the websites should render\n> somehow (maybe display a prettyprinted source), and the GUI should not produce\n> NPEs when the user clicks around... will this be a target for 2.0 or afterwards?\n\nGood question. I'm quite busy at the moment, so I can't promise to deliver any\ncode soon. If you'd like to give it a try, please don't hesitate.\n\n", "attachment_id": null, "bug_id": 34088, "id": 106238, "time": "2007-08-03T01:39:15Z", "creator": "andreas@apache.org", "creation_time": "2007-08-03T01:39:15Z", "is_private": false}, {"count": 10, "tags": [], "creator": "nettings@apache.org", "text": "removed the [PATCH] from the subject since it's ages old and won't be any use\nfor the current 2.0 trunk.", "id": 109909, "time": "2007-10-29T10:13:16Z", "bug_id": 34088, "creation_time": "2007-10-29T10:13:16Z", "is_private": false, "attachment_id": null}]