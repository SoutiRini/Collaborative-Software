[{"count": 0, "tags": [], "text": "I build servers as follows (and with exception of disable option checking to corect the newer automake issues) I've built apache this way for years on  hundreds of servers:\n\n./configure --prefix=/usr/local/apache --enable-so --enable-modules=all --disable-dav --enable-suexec --with-suexec-docroot=/var/www --with-suexec-caller=apache --with-suexec-logfile=/var/log/apache/suexec_log --with-included-apr --disable-option-checking --with-mysql\n\nThis works with all server builds, until httpd.conf is given a loadmodule statement (like adding php) then the server creates internal server error on auth attempts, and on stopping of apache it segfaults, if I remove the php module, it works again.\n\nIf I build it with --disable-util-dso   it all works fine (this is how I've built all 2.2.9's since its release, I was trying to do it the newer apr way of not building all auth modules into apache, like was previously by default in apache builds.\n\nI can load mod_perl without issues, I do consider this likely an apache bug since, as mentioned, the options above have always worked and if I disable util-dso in apache, apache behaves.\n\nThis has been replicated on 2 separate development boxes, so is not isolated event.\n\nThe only log entry is:\n[Sun Aug 24 19:18:01 2008] [notice] caught SIGTERM, shutting down\n[Sun Aug 24 19:18:01 2008] [notice] seg fault or similar nasty error detected in the parent process", "is_private": false, "bug_id": 45681, "id": 120052, "time": "2008-08-24T02:48:06Z", "creator": "bugs@ausics.net", "creation_time": "2008-08-24T02:48:06Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 45681, "attachment_id": null, "is_private": false, "id": 120263, "time": "2008-09-01T16:49:01Z", "creator": "bugs@ausics.net", "creation_time": "2008-09-01T16:49:01Z", "text": "Has been confirmed by another person using OpenBSD, so is not Slackware specific"}, {"count": 2, "tags": [], "bug_id": 45681, "is_private": false, "id": 120264, "attachment_id": null, "creator": "sander@temme.net", "creation_time": "2008-09-01T16:58:09Z", "time": "2008-09-01T16:58:09Z", "text": "Could you post a backtrace? See http://httpd.apache.org/dev/debugging.html#crashes on how to get a core dump."}, {"count": 3, "tags": [], "bug_id": 45681, "attachment_id": null, "id": 120302, "time": "2008-09-02T17:45:11Z", "creator": "bugs@ausics.net", "creation_time": "2008-09-02T17:45:11Z", "is_private": false, "text": "GNU gdb 6.8\nCopyright (C) 2008 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>This is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"i486-slackware-linux\"...\nusr/local/apache/bin/httpd: No such file or directory.\n(no debugging symbols found)\nCore was generated by `/usr/local/apache/bin/httpd -k stop'.\nProgram terminated with signal 11, Segmentation fault.\n[New process 29589]\n#0  0xb76e65c0 in ?? ()\n(gdb)\n bt full\n#0  0xb76e65c0 in ?? ()\nNo symbol table info available.\n\nI'm also unable to know how to reproduce for you the error in which SQL causes apache to 500 only when php module is loaded, they work OK, on their own, but not together unless use disable-util-dso, then all works, and this segfaulting does not occur either.\n"}, {"count": 4, "tags": [], "text": "This is almost certainly incompatible binaries - we know it works fine for millions.\n\nIn the unlikely event that the OP is still suffering a problem, I suggest posting to the apache users list, and reopen with sufficient detail to reproduce it in the even more unlikely event of it being a real apache bug and not resolved.", "attachment_id": null, "id": 138526, "creator": "nick@webthing.com", "time": "2010-07-19T19:29:43Z", "bug_id": 45681, "creation_time": "2010-07-19T19:29:43Z", "is_private": false}]