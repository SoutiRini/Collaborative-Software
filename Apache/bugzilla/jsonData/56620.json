[{"count": 0, "tags": [], "bug_id": 56620, "is_private": false, "text": "This issue is reproducible with the current trunk (@1602359),\nplus I added the following lines to AbstractAccessLogValve.log() after line 630, to help me debug this issue:\n[[[\n         long start = request.getCoyoteRequest().getStartTime();\n+        if (start == -1) {\n+            // Request processing has not started yet\n+            log.warn(\"Unexpected timestamp\", new Throwable());\n+        }\n         Date date = getDate(start + time);\n]]]\n\nTo reproduce, run \"org.apache.jasper.compiler.TestGenerator\" test with access log being enabled. Run it with NIO connector. I use the following configuration in build.properties:\n[[[\ntest.accesslog=true\ntest.entry=org.apache.jasper.compiler.TestGenerator\n]]]\n\nDepending on your luck, there will be one or several of the following lines in access_log.$DATE file produced by the tests:\n[[[\n127.0.0.1 - - [01/Jan/1970:02:59:59 +0300] \"-\" 503 - null 0\n]]]\n\nThe entry is bogus, as in this particular test there is one request per test asking for a JSP page. Those requests are processed and properly logged.\n\nThanks to the log.warn patch above it logs the following stacktrace:\n[[[\n13-Jun-2014 15:01:37.441 WARNING [http-nio-127.0.0.1-auto-2-exec-1] org.apache.catalina.valves.AbstractAccessLogValve.log Unexpected timestamp\n java.lang.Throwable\n\tat org.apache.catalina.valves.AbstractAccessLogValve.log(AbstractAccessLogValve.java:633)\n\tat org.apache.catalina.core.AccessLogAdapter.log(AccessLogAdapter.java:51)\n\tat org.apache.catalina.core.StandardEngine.logAccess(StandardEngine.java:342)\n\tat org.apache.catalina.connector.CoyoteAdapter.log(CoyoteAdapter.java:674)\n\tat org.apache.coyote.http11.Http11NioProcessor.handleIncompleteRequestLineRead(Http11NioProcessor.java:240)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:992)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:655)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:222)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1565)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1522)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n]]]\n\nThe issue is that logging is invoked at\norg.apache.coyote.http11.Http11NioProcessor.handleIncompleteRequestLineRead(Http11NioProcessor.java:240)\n\nAs that time Tomcat runs a keep-alive loop, and the loop is interrupted because connector is paused.\n\nExpected behaviour\n-------------------\n1. If none characters from the request line have been read, then do not log anything. There was no request coming.\n2. If some characters from the request line have been read, then create an access log entry, but one must call req.setStartTime() to initialize the tine value.\n\nIn \"2.\" the request line will be truncated, but there might be some (though small) worth in logging it.", "id": 175800, "time": "2014-06-13T12:37:17Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-06-13T12:37:17Z", "attachment_id": null}, {"count": 1, "attachment_id": 31711, "bug_id": 56620, "is_private": false, "id": 175801, "time": "2014-06-13T12:40:10Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-06-13T12:40:10Z", "tags": [], "text": "Created attachment 31711\n2014-06-13_tc8_56620_debug.patch\n\nDebug logging statement for AbstractAccessLogValve, as mentioned in description.\nNot for production."}, {"count": 2, "tags": [], "bug_id": 56620, "is_private": false, "text": "Created attachment 31712\naccess_log.2014-06-13\n\nAccess log file from the test run, demonstrating the issue", "id": 175802, "time": "2014-06-13T12:41:27Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-06-13T12:41:27Z", "attachment_id": 31712}, {"attachment_id": 31713, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "Created attachment 31713\nTEST-org.apache.jasper.compiler.TestGenerator.NIO.txt\n\nTest log file from the test run, demonstrating the issue", "count": 3, "id": 175803, "time": "2014-06-13T12:42:27Z", "bug_id": 56620, "creation_time": "2014-06-13T12:42:27Z", "is_private": false}, {"count": 4, "tags": [], "text": "Testing org.apache.coyote.http11.TestInternalInputBuffer + test.accesslog=true\nIts \"testNewLinesExcessive\" test generates an error 400 entry with bogus date.\n\n127.0.0.1 - - [01/Jan/1970:02:59:59 +0300] \"-\" 400 - null 0", "attachment_id": null, "id": 175836, "creator": "knst.kolinko@gmail.com", "time": "2014-06-16T11:23:01Z", "bug_id": 56620, "creation_time": "2014-06-16T11:23:01Z", "is_private": false}, {"count": 5, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "I was just about to close this when you posted the additional issue.\n\nI've modified the fix so it is more general and should fix all cases of request start times back in the 1970's.\n\nThis is fixed in 8.0.x for 8.0.9 onwards and in 7.0.x for 7.0.55 onwards.", "id": 175844, "time": "2014-06-16T20:00:17Z", "bug_id": 56620, "creation_time": "2014-06-16T20:00:17Z", "is_private": false}, {"count": 6, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "Looks good.\n\nFor a record:\nProcessing time for HTTP connectors is now measured starting from when the first byte of the next request is read. (r1602956)\n\nThe old implementation measured it starting from when the whole HTTP request line was read.\n\nI think the new implementation is the correct one. I am just noting it here, as sometimes people ask on the users mailing list about how the timing is measured.\n\nIn any case I expect that for usual requests the difference between the two implementations is rather small.", "id": 175854, "time": "2014-06-17T15:43:36Z", "bug_id": 56620, "creation_time": "2014-06-17T15:43:36Z", "is_private": false}]