[{"count": 0, "tags": [], "creator": "ftz@rmb.co.za", "attachment_id": 32637, "id": 182271, "time": "2015-04-08T08:24:21Z", "bug_id": 57798, "creation_time": "2015-04-08T08:24:21Z", "is_private": false, "text": "Created attachment 32637\nxlsx version\n\nThe method cell.getCachedFormulaResultType() returns an exception when the cell is part of an array formula and is not the first cell of the array formula.\n\nThis exception is not occurring with a HSSFWorkbook.\n\nSee sample code below and file attached.\nYou'll need to save the .xlsx version as .xls in Excel to run the working test case.\n\n\n\nimport java.io.FileInputStream;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.ss.usermodel.WorkbookFactory;\n\npublic class TestXssf {\n\n    public static void main(String[] args) throws Exception {\n\n        String fileName = \"Test.xlsx\";\n//        String fileName = \"Test.xls\";\n\n        FileInputStream inputStream = new FileInputStream(fileName);\n        Workbook workbook = WorkbookFactory.create(inputStream);\n\n        Sheet sheet = workbook.getSheet(\"Sheet1\");\n\n        // *******************************\n        // First cell of array formula, OK\n        int rowId = 0;\n        int cellId = 1;\n        System.out.println(\"Reading row \" + rowId + \", col \" + cellId);\n\n        Row row = sheet.getRow(rowId);\n        Cell cell = row.getCell(cellId);\n\n        System.out.println(\"Formula:\" + cell.getCellFormula());\n        if (Cell.CELL_TYPE_FORMULA == cell.getCellType()) {\n            int formulaResultType = cell.getCachedFormulaResultType();\n            System.out.println(\"Formual Result Type:\" + formulaResultType);\n        }\n\n        // *******************************\n        // Second cell of array formula, NOT OK for xlsx files  \n        rowId = 1;\n        cellId = 1;\n        System.out.println(\"Reading row \" + rowId + \", col \" + cellId);\n\n        row = sheet.getRow(rowId);\n        cell = row.getCell(cellId);\n        System.out.println(\"Formula:\" + cell.getCellFormula());\n\n        if (Cell.CELL_TYPE_FORMULA == cell.getCellType()) {\n            int formulaResultType = cell.getCachedFormulaResultType();\n            System.out.println(\"Formual Result Type:\" + formulaResultType);\n        }\n\n        workbook.close();\n\n    }\n}"}, {"count": 1, "tags": [], "creator": "ftz@rmb.co.za", "attachment_id": 32638, "id": 182272, "time": "2015-04-08T08:25:10Z", "bug_id": 57798, "creation_time": "2015-04-08T08:25:10Z", "is_private": false, "text": "Created attachment 32638\nxls version"}, {"count": 2, "tags": [], "creator": "dominik.stadler@gmx.at", "text": "I could not reproduce this with the latest trunk, can you try if it was actually fixed by some change already now?", "id": 191173, "time": "2016-05-22T20:30:50Z", "bug_id": 57798, "creation_time": "2016-05-22T20:30:50Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "I have added a uni-test which verifies that this works for us, see r1746624 for the test. Please reopen this bug if this is still a problem for you with the latest version of POI.", "attachment_id": null, "bug_id": 57798, "id": 191376, "time": "2016-06-02T20:11:11Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-06-02T20:11:11Z", "is_private": false}]