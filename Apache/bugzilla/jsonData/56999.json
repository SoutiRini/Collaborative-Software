[{"count": 0, "tags": [], "bug_id": 56999, "is_private": false, "id": 177990, "creation_time": "2014-09-21T05:52:02Z", "time": "2014-09-21T05:52:02Z", "creator": "saipraveen.sai9@gmail.com", "text": "Hi ,\n\nI am using Apache POI 3.10 Final version to generate an excel document as per my application requirement. My application runs on JDK 1.5 version and it is producing an unreadable xlsx document saying \" Excel found unreadable content in XXX.XLSX. Do you want to recover the contents of the workbook?\"\n\nPlease find the simulation of code i have used\n\npublic static void main(String[] args) {\n\t\n\tSXSSFWorkbook workbook = new SXSSFWorkbook(300);\n\n\tSXSSFSheet sheet = (SXSSFSheet)   workbook.createSheet(\"Teller_Discrepancy\");   \n\t\n\t\tMap<String, Object[]> data = new HashMap<String, Object[]>(); \n\t\t\n\t\t final String[] titles = {\n\t\t\t\t \"Col1\",\"Col2\",\"Col3\",.......,\"Col15\"\n\t    };\n\n\t\t createHeaderRow(workbook, sheet, titles);\n\t\t writeToExcel(sheet, data, getColumnStyle(workbook));\n\t\t sheet.setDefaultColumnWidth(15);\n\n\t\tFileOutputStream out = new FileOutputStream(new File(\"C:\\Temp\"));     \n\t\tworkbook.write(out);     \n\t\tout.close();   \n\n}\n\nprivate void writeToExcel(SXSSFSheet sheet, Map<String, Object[]> data, CellStyle columnStyle){\n\t\tSet<String> keyset = data.keySet(); \n\t\tint rownum = 1; \n\t\tfor (String key : keyset) {     \n\t\t\tSXSSFRow row = (SXSSFRow) sheet.createRow(rownum++);     \n\t\t\tObject [] objArr = data.get(key);     \n\t\t\tint cellnum = 0;     \n\t\t\tfor (Object obj : objArr) {         \n\t\t\t\tSXSSFCell cell = (SXSSFCell) row.createCell(cellnum++); \n\t\t\t\tcell.setCellStyle(columnStyle);\n\t\t\t\tif (obj == null) {\n\t\t\t\t\tcell.setCellValue(\"\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcell.setCellValue(String.valueOf(obj));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate void createHeaderRow(SXSSFWorkbook workbook, SXSSFSheet sheet, String[] titles) {\n\t\t// Setting Title Font properties\n\t     Font titleFont = workbook.createFont();\n\t     titleFont.setFontHeightInPoints((short)9);\n\t     titleFont.setBoldweight(Font.BOLDWEIGHT_BOLD);\n\t     \n\t     // Setting Header Style\n\t     CellStyle style = workbook.createCellStyle();\n\t     style.setAlignment(CellStyle.ALIGN_CENTER);\n\t     style.setVerticalAlignment(CellStyle.VERTICAL_CENTER);\n\t     style.setFillForegroundColor(IndexedColors.YELLOW.getIndex());\n\t     style.setFillPattern(CellStyle.SOLID_FOREGROUND);\n\t     style.setFont(titleFont);\n\t     style.setWrapText(true);\n\t     style.setBorderBottom(CellStyle.BORDER_THIN);\n\t     style.setBottomBorderColor(IndexedColors.BLACK.getIndex());\n\t     style.setBorderLeft(CellStyle.BORDER_THIN);\n\t     style.setLeftBorderColor(IndexedColors.BLACK.getIndex());\n\t     style.setBorderRight(CellStyle.BORDER_THIN);\n\t     style.setRightBorderColor(IndexedColors.BLACK.getIndex());\n\t     style.setBorderTop(CellStyle.BORDER_THIN);\n\t     style.setTopBorderColor(IndexedColors.BLACK.getIndex());\n\t    \n\t     \n\t     // Creating Header Row\n\t\tSXSSFRow headerRow = (SXSSFRow) sheet.createRow(0);\n\t\theaderRow.setHeightInPoints(40);\n\t\tSXSSFCell headerCell;\n\t\t\tfor (int i = 0; i < titles.length; i++) {\n\t\t         headerCell = (SXSSFCell) headerRow.createCell(i);\n\t\t         headerCell.setCellValue(titles[i]);\n\t\t         headerCell.setCellStyle(style);\n\t\t\t}\n\t}\n\t\n\tprivate CellStyle getColumnStyle(SXSSFWorkbook workbook) {\n\t\t CellStyle columnStyle = workbook.createCellStyle();\n\t     columnStyle.setAlignment(CellStyle.ALIGN_CENTER);\n\t     columnStyle.setVerticalAlignment(CellStyle.VERTICAL_CENTER);\n\t     columnStyle.setBorderBottom(CellStyle.BORDER_THIN);\n\t     columnStyle.setBottomBorderColor(IndexedColors.BLACK.getIndex());\n\t     columnStyle.setBorderLeft(CellStyle.BORDER_THIN);\n\t     columnStyle.setLeftBorderColor(IndexedColors.BLACK.getIndex());\n\t     columnStyle.setBorderRight(CellStyle.BORDER_THIN);\n\t     columnStyle.setRightBorderColor(IndexedColors.BLACK.getIndex());\n\t     columnStyle.setBorderTop(CellStyle.BORDER_THIN);\n\t     columnStyle.setTopBorderColor(IndexedColors.BLACK.getIndex());\n\t     return columnStyle;\n\t}", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "saipraveen.sai9@gmail.com", "is_private": false, "count": 1, "id": 177998, "time": "2014-09-21T09:54:56Z", "bug_id": 56999, "creation_time": "2014-09-21T09:54:56Z", "text": "The server is mainframe Z/OS"}, {"count": 2, "text": "If i run the same in my local system which is windows XP, it is working absolutely fine. Kindly help me as soon as possible.", "bug_id": 56999, "is_private": false, "id": 177999, "time": "2014-09-21T09:55:54Z", "creator": "saipraveen.sai9@gmail.com", "creation_time": "2014-09-21T09:55:54Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 56999, "text": "What's the difference between the file generated on Z/OS and Windows?\n(linebreaks,character encoding,...)", "id": 178000, "time": "2014-09-21T10:10:33Z", "creator": "kiwiwings@apache.org", "creation_time": "2014-09-21T10:10:33Z", "is_private": false, "attachment_id": null}, {"count": 4, "text": "I am not sure about it.. I guess encoding is EBCDIC in Z/OS. Bit when i have used XSSFWorkbook , it worked fine. The reason i have shifted to SXSSFWorkbook is i have faced heap memory exception if number of records are more.", "bug_id": 56999, "is_private": false, "id": 178004, "time": "2014-09-21T11:08:52Z", "creator": "saipraveen.sai9@gmail.com", "creation_time": "2014-09-21T11:08:52Z", "tags": [], "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 56999, "text": "> I am not sure about it.. \nYou can find the difference when you unzip the files and diff the directories.\nAlternatively you can attach both .xlsx to this bug entry.\n\nBefore we investigate what's wrong with SXSSF, we need to know which artifact is malformed. The next problem would be, that we probably won't provide a patch for 3.10-final. Is jdk 1.6 available in your Z/OS environment?", "id": 178007, "time": "2014-09-21T11:47:06Z", "creator": "kiwiwings@apache.org", "creation_time": "2014-09-21T11:47:06Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 56999, "is_private": false, "id": 178026, "creation_time": "2014-09-22T12:21:29Z", "time": "2014-09-22T12:21:29Z", "creator": "saipraveen.sai9@gmail.com", "text": "The below patch has worked for me.\n\nhttps://issues.apache.org/bugzilla/attachment.cgi?id=31421&action=diff", "attachment_id": null}, {"count": 7, "text": "\n\n*** This bug has been marked as a duplicate of bug 55594 ***", "bug_id": 56999, "is_private": false, "id": 178027, "time": "2014-09-22T13:44:13Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2014-09-22T13:44:13Z", "tags": [], "attachment_id": null}]