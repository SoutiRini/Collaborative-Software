[{"attachment_id": null, "tags": [], "creator": "j.g.holman@qmul.ac.uk", "text": "Once a user is authenticated a Principal object is supposed to be cached for \nthe duration of the user's session. This is especially important when using \nJDBCRealm or JNDIRealm to reduce the load on external authentication services.\n\nMost authenticators (BasicAuthenticator, SSLAuthenticator and \nDigestAuthenticator) call AuthenticatorBase.register()to cache the Principal. \nHowever register() does nothing if a session object does not already exist, so \ncaching does not occur when the application does not create a session object \nitself. The problem can be seen by setting a security constraint on tomcat-docs \nand then browsing the Tomcat documentation - the external authentication \nservice is hit on every request.\n\nThe problem does not occur with form based login, because FormAuthenticator \ncaches the Principal itself and creates a new session if necessary to do it.\n\nProbably the best fix would be to change AuthenticatorBase.register() to create \na new session by calling getSession(request, true) instead of getSession\n(request, false). However, perhaps there is a reason why this is not being \ndone - though if so I cannot see what it is.\n\nAn alternative is to change the concrete authentication classes to make sure a \nsession exists before calling register(), e.g.\n\n--- BasicAuthenticator.java     23 Mar 2002 17:52:16 -0000      1.12\n+++ BasicAuthenticator.java     6 Jul 2002 12:46:30 -0000\n@@ -160,6 +160,7 @@\n         String password = parsePassword(authorization);\n         principal = context.getRealm().authenticate(username, password);\n         if (principal != null) {\n+           Session session = getSession(request, true);\n             register(request, response, principal, Constants.BASIC_METHOD,\n                      username, password);\n             return (true);\n\nSimilar patches would be required for SSLAuthenticator and DigestAuthenticator \nof course.", "count": 0, "id": 19084, "time": "2002-07-06T13:11:40Z", "bug_id": 10526, "creation_time": "2002-07-06T13:11:40Z", "is_private": false}, {"count": 1, "tags": [], "creator": "medthomas@ntlworld.com", "attachment_id": null, "text": "After a quick discussion on tomcat-dev, the conclusion is that this is by \ndesign. The patch proposed (to always create the session) will not be applied \nas it is not desirable in all circumstances to have a session created for \nevery authenticated user.\n\nHowever, if this was made a configurable option (defaulting to off) then this \nwould be acceptable.\n\nI am therefore marking this report as an enhancement request.\n\nIn the absence of the enhancement, there is always the option to create the \nsession in your web application.", "id": 49935, "time": "2004-01-01T18:45:57Z", "bug_id": 10526, "creation_time": "2004-01-01T18:45:57Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 10526, "attachment_id": null, "is_private": false, "id": 142746, "time": "2010-12-15T11:41:47Z", "creator": "markt@apache.org", "creation_time": "2010-12-15T11:41:47Z", "text": "Fixed in 7.0.x and will be in 7.0.6 onwards."}]