[{"count": 0, "tags": [], "bug_id": 32114, "text": "It would be very useful if the javadoc task supported selection of packages \nimplicitly from the set of classes defined in the nested fileset (to avoid \ngetting other packages being listed as empty - I just don't want them to \nappear at all).", "id": 66605, "time": "2004-11-08T10:12:35Z", "creator": "phil.weighill-smith@volantis.com", "creation_time": "2004-11-08T10:12:35Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "bodewig@apache.org", "is_private": false, "id": 67121, "time": "2004-11-18T10:48:38Z", "bug_id": 32114, "creation_time": "2004-11-18T10:48:38Z", "tags": [], "text": "Can't you use a <packageset> instead of a <fileset>?"}, {"count": 2, "attachment_id": null, "creator": "phil.weighill-smith@volantis.com", "is_private": false, "id": 67127, "time": "2004-11-18T14:36:34Z", "bug_id": 32114, "creation_time": "2004-11-18T14:36:34Z", "tags": [], "text": "The problem I have is that I'm running a doclet that only generates Javadoc for\nspecifically annotated classes. I don't want to have to maintain an explicity\ndefined packageset as developers are very likely to forget to update this when\nadding new classes that have this annotation.\n\nWhat I want to do is define the fileset to use a selector that only lists the\nsource files that have the specific annotation within them and only have the\npackages that those files exist within get generated to the final Javadoc output."}, {"count": 3, "tags": [], "bug_id": 32114, "is_private": false, "text": "I guess I don't understand... From you description, looks like you have your \nown doclet that processes some annotated classes. What have packages have to do \nwith that? I do something similar (as shown below), the doclet gets a bunch of \nclasses, that's all. If your doclet wants to additionally organize the classes \nit receives in packages, then simply do it, no?\n\nOr maybe you want to look into taglets instead of doclets? --DD\n\n    <javadoc source=\"1.4\" public=\"true\">\n      <doclet name=\"com/lgc/buildmagic/util/BeanInfoDoclet\">\n        <path> <!-- the classpath to load the doclet --> ... </path>\n        <param name=\"-manifest\" value=\"${beaninfo}/beans.xml\" />\n      </doclet>\n\n      <fileset dir=\"src\">\n        <include name=\"com/lgc/infra/**/*.java\" />\n        <contains text=\"@beaninfo.class\" />\n      </fileset>\n\n      <classpath refid=\"classpath\" />\n    </javadoc>", "id": 67138, "time": "2004-11-18T15:52:17Z", "creator": "ddevienne@lgc.com", "creation_time": "2004-11-18T15:52:17Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 32114, "is_private": false, "text": "Our doclet is a very slight \"modification\" of the standard doclet that simply\nknows to include or exclude classes from the javadoc (and inheritance hierarchy\nby \"pulling down\" methods from \"hidden\" classes into \"visible\" specializations)\nso that we can describe our classes in a manner appropriate for \"public\" use. We\nalso want to include the package.html for those packages that contain \"visible\"\nclasses.\n\nI didn't write our doclet so can't say for sure whether we can do what you\nsuggest. Having the ability in Ant to specify packages via the set of packages\nfor the selected classes or via a selector seems like a generally useful feature\nanyway.", "id": 67491, "time": "2004-11-26T12:46:40Z", "creator": "phil.weighill-smith@volantis.com", "creation_time": "2004-11-26T12:46:40Z", "attachment_id": null}]