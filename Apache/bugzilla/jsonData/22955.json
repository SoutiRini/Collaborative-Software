[{"count": 0, "tags": [], "bug_id": 22955, "text": "In the code below, theres a small race window between when we do a semget and \nwhen we try and set the mutex value to 1. Its possible for a different process \nto prematurely call and succeed in the _acquire() in this window..\n\nstatic apr_status_t proc_mutex_sysv_create(apr_proc_mutex_t *new_mutex,\n                                           const char *fname)\n{\n    union semun ick;\n    apr_status_t rv;\n\n    new_mutex->interproc = apr_palloc(new_mutex->pool, sizeof(*new_mutex-\n>interproc));\n    new_mutex->interproc->filedes = semget(IPC_PRIVATE, 1, IPC_CREAT | 0600);\n\n    if (new_mutex->interproc->filedes < 0) {\n        rv = errno;\n        proc_mutex_sysv_cleanup(new_mutex);\n        return rv;\n    }\n    ick.val = 1;\n    if (semctl(new_mutex->interproc->filedes, 0, SETVAL, ick) < 0) {\n        rv = errno;\n        proc_mutex_sysv_cleanup(new_mutex);\n        return rv;\n    }\n    new_mutex->curr_locked = 0;\n    apr_pool_cleanup_register(new_mutex->pool,\n                              (void *)new_mutex, apr_proc_mutex_cleanup,\n                              apr_pool_cleanup_null);\n    return APR_SUCCESS;\n}", "id": 43786, "time": "2003-09-06T07:23:25Z", "creator": "arvind_gopalan@yahoo.com", "creation_time": "2003-09-06T07:23:25Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 22955, "text": "This is not a flaw because semget(IPC_PRIVATE,... is grabbing a unique mutex.\n\nNobody else knows of this semaphore until the function returns.\n\nIf this were a named (by-id) semaphore then you would be correct.", "id": 85568, "time": "2006-02-07T22:44:41Z", "creator": "wrowe@apache.org", "creation_time": "2006-02-07T22:44:41Z", "is_private": false, "attachment_id": null}]