[{"count": 0, "tags": [], "bug_id": 2035, "attachment_id": null, "id": 2765, "time": "2001-06-06T14:37:16Z", "creator": "mhuffman@ca.ibm.com", "creation_time": "2001-06-06T14:37:16Z", "is_private": false, "text": "When using xsi:type=\"myType\" to set the type (simpleType or complexType) of an \nelement's data in an instance document, \"myType\" must either be the same as or \nvalidly derived from the actual type definition of the element in the schema.\n\nHere's an example schema, and 2 example instance documents where xsi:type is \nused incorrectly and no errors are reported by the parser. In 1 case, the \nactual type is simple and the xsi:type is complex. In the other case, this is \nreversed.\n\nPLS NOTE: I have run similar tests where the actual type and the xsi:type are \nBOTH simpleTypes or BOTH complexTypes, and these tests work OK. Maybe this info \nwill help.  Thanks.\n\n2_6ii02.xsd\n===========\n<?xml version=\"1.0\"?>\n<schema xmlns          =\"http://www.w3.org/2001/XMLSchema\"\n        targetNamespace=\"http://www.schemaTest.org/2_6ii\"\n        xmlns:ii       =\"http://www.schemaTest.org/2_6ii\">\n\n<simpleType name=\"longType\">\n  <restriction base=\"string\">\n    <minLength value=\"1\"/>\n    <maxLength value=\"80\"/>\n  </restriction>\n</simpleType>\n\n<simpleType name=\"shortType\">\n  <restriction base=\"ii:longType\">\n    <maxLength value=\"40\"/>\n  </restriction>\n</simpleType>\n\n<complexType name=\"nickType\">\n  <simpleContent>\n    <extension base=\"ii:longType\">\n      <attribute name=\"nickname\" type=\"ii:shortType\"/>\n    </extension>\n  </simpleContent>\n</complexType>\n\n<element name=\"Label\">\n  <complexType>\n    <choice>\n      <element name=\"LongName\" type=\"ii:longType\"/>\n      <element name=\"ShortName\" type=\"ii:shortType\"/>\n      <element name=\"NickName\" type=\"ii:nickType\"/>\n    </choice>\n  </complexType>\n</element>\n\n<element name=\"MailList\">\n  <complexType>\n    <sequence>\n      <element ref=\"ii:Label\" maxOccurs=\"unbounded\"/>\n    </sequence>\n  </complexType>\n</element>\n\n</schema>\n\n2_6ii02c.xml\n============\n<?xml version=\"1.0\"?>\n<ii:MailList xmlns:xsi         =\"http://www.w3.org/2001/XMLSchema-instance\"\n             xmlns:ii          =\"http://www.schemaTest.org/2_6ii\"\n             xsi:schemaLocation=\"http://www.schemaTest.org/2_6ii\n                                 2_6ii02.xsd\">\n<ii:Label>\n  <ShortName xsi:type=\"ii:nickType\">Wild Bill</ShortName>\n</ii:Label>\n\n</ii:MailList>\n\n2_6ii02d.xml\n============\n<?xml version=\"1.0\"?>\n<ii:MailList xmlns:xsi         =\"http://www.w3.org/2001/XMLSchema-instance\"\n             xmlns:ii          =\"http://www.schemaTest.org/2_6ii\"\n             xsi:schemaLocation=\"http://www.schemaTest.org/2_6ii\n                                 2_6ii02.xsd\">\n<ii:Label>\n  <NickName xsi:type=\"ii:longType\">Wild Bill</NickName>\n</ii:Label>\n\n</ii:MailList>"}, {"count": 1, "attachment_id": null, "creator": "mhuffman@ca.ibm.com", "is_private": false, "id": 2957, "time": "2001-06-13T14:19:45Z", "bug_id": 2035, "creation_time": "2001-06-13T14:19:45Z", "tags": [], "text": "Re-tested OK."}]