[{"count": 0, "tags": [], "bug_id": 38355, "attachment_id": null, "is_private": false, "id": 84885, "time": "2006-01-23T11:31:43Z", "creator": "jacob.rief@tiscover.com", "creation_time": "2006-01-23T11:31:43Z", "text": "This feature enhancement for mod_rewrite adds support for an external\nrewrite-program which links dynamically to mod_rewrite instead of communicating\nthrough a pipe, such as RewriteMap prg:/path/to/map_program\nThis feature can be useful in conditions, where external rewrite programs may\nhang. And if they hang, all of the httpd-processes which have to consult the\nexternal mapping programm will hang too, causing a denial of service. Using\ndso-support for RewriteMap allows to write more complicated and time consuming\nmapping-applications, for instance to connect to database-servers and/or to\nsearch objects on Squid-Caches using ICP."}, {"count": 1, "tags": [], "bug_id": 38355, "attachment_id": null, "is_private": false, "id": 84886, "time": "2006-01-23T12:05:47Z", "creator": "nd@perlig.de", "creation_time": "2006-01-23T12:05:47Z", "text": "I don't understand. Since httpd 2.0 it is possible to write regular modules (dso\nor static) which extend mod_rewrite. How is that different?"}, {"count": 2, "tags": [], "bug_id": 38355, "text": "(In reply to comment #0)\n> This feature enhancement for mod_rewrite adds support for an external\n> rewrite-program which links dynamically to mod_rewrite instead of communicating\n> through a pipe, such as RewriteMap prg:/path/to/map_program\n> This feature can be useful in conditions, where external rewrite programs may\n> hang. And if they hang, all of the httpd-processes which have to consult the\n> external mapping programm will hang too, causing a denial of service. Using\n> dso-support for RewriteMap allows to write more complicated and time consuming\n> mapping-applications, for instance to connect to database-servers and/or to\n> search objects on Squid-Caches using ICP.\n\n(In reply to comment #1)\n> I don't understand. Since httpd 2.0 it is possible to write regular modules (dso\n> or static) which extend mod_rewrite. How is that different?\n\n(In reply to comment #2)\nUsing RewriteMap dso:/path/to/module.so is much easier, than writing a full\nApache module. Have a look at the example on the associated webpage. Writing\nsuch modules is just as easy as writing an external program, however without the\nrestriction such external programs have. The Squid-Cache for instance allows to\nspawn more than one external rewrite-program, and pipes the request to the next\nidle program. Apache on the other side allows only one such program, which when\nbusy, blocks all the other Apache-slots requireing a dynamic rewriting. Remember\nwhat is written about the external rewrite program in the 'URL Rewriting Guide'\n---\nbe very careful:\n   1. ``Keep it simple, stupid'' (KISS), because if this program hangs it will\nhang the Apache server when the rule occurs.\n   2. Avoid one common mistake: never do buffered I/O on stdout! This will cause\na deadloop! Hence the ``$|=1'' in the above example...\n   3. Use the RewriteLock directive to define a lockfile mod_rewrite can use to\nsynchronize the communication to the program. By default no such synchronization\ntakes place.\n---\nwith this modrewrite-dso-patch you can bypass item 1, 2 and 3.", "id": 84887, "time": "2006-01-23T13:32:33Z", "creator": "jacob.rief@tiscover.com", "creation_time": "2006-01-23T13:32:33Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 38355, "text": "Hmm, I think, we have a misunderstanding here. I'm NOT talking about external\nprograms, but ordinary httpd modules, which may or may not be DSOs. You can\nwrite a module, which defines additional rewrite maps (available via int:\nspecifier) and have the full power of being an apache module (configuration,\nhooks, etc). So... I don't see an advantage of building another way of doing the\nsame -- as a matter of fact, it's basically duplicating code of mod_so ;-)\n\n(By the way, there are APR functions for loading DSOs portably, one should never\nuse dlopen/dlsym directly in common httpd modules.)", "id": 84888, "time": "2006-01-23T13:57:12Z", "creator": "nd@perlig.de", "creation_time": "2006-01-23T13:57:12Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "Ok, but the Apache-documentation (1.3, 2.0 and 2.2) says:\n\"Internal Function\nMapType: int, MapSource: Internal Apache function\nHere the source is an internal Apache function. Currently you cannot create your\nown, but the following functions already exists:\"\n\nThe mod_rewrite_dso-patch is written to allow the writing of such an internal\nfunction using an external module. So if this feature is already implemented in\nan alternative way, it seems to be a documentation bug.", "is_private": false, "id": 84889, "creator": "jacob.rief@tiscover.com", "time": "2006-01-23T14:51:10Z", "bug_id": 38355, "creation_time": "2006-01-23T14:51:10Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Yep, it's clearly missing in the documentation.", "is_private": false, "id": 84890, "creator": "nd@perlig.de", "time": "2006-01-23T14:53:45Z", "bug_id": 38355, "creation_time": "2006-01-23T14:53:45Z", "attachment_id": null}, {"count": 6, "text": "I would like to document this feature, however searching the web did not point\nme onto any related document. Is there any working example on how to extend the\ninternal mapping function with a self-written Apache module?", "bug_id": 38355, "is_private": false, "id": 84977, "time": "2006-01-25T09:17:37Z", "creator": "jacob.rief@tiscover.com", "creation_time": "2006-01-25T09:17:37Z", "tags": [], "attachment_id": null}, {"count": 7, "tags": [], "creator": "jacob.rief@tiscover.com", "text": "Adding a customized\nRewriteMap int:mymapper\nstill is not possible, not even if one writes its own httpd-module. So\nunfortunately this is not some missing documentation, it is still a missing\nfeature. The problem is, that a module-writer would have to register its\ncustomized mapper-function with  'ap_register_rewrite_mapfunc' which however is\nnot available to other httpd-modules. It might be enough to remove the 'static'\nkeyword and make the function available via a .h-file to other modules.", "id": 86457, "time": "2006-03-03T15:33:37Z", "bug_id": 38355, "creation_time": "2006-03-03T15:33:37Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "text": "we have a misunderstanding here. I'm NOT talking about external\nprograms, but ordinary httpd modules, which may or may not be DSOs.I don't understand. Since httpd 2.0 it is possible to write regular modules (dso\nor static) which extend mod_rewrite. How is that different?This feature enhancement for mod_rewrite adds support for an external\nrewrite-program which links dynamically to mod_rewrite instead of communicating\nthrough a pipe.", "is_private": false, "id": 141149, "creator": "jacksonjones1780@gmail.com", "time": "2010-10-29T04:46:20Z", "bug_id": 38355, "creation_time": "2010-10-29T04:46:20Z", "attachment_id": null}]