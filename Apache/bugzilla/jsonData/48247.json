[{"count": 0, "tags": [], "text": "Created attachment 24571\nThe patch file for apr-1.3.5/network_io/sockets.c\n\nProblem description:\nThe issue occurred when I used Apache HTTP server 2.2.11 and apr1.3.5 under PPC platform. The Apache HTTP server couldn't respond the HEAD message under following environment:\n1. Apache HTTP server is configured with multiple ports.\n2. When compiling APR, with APR_O_NONBLOCK_INHERITED enabled.\n3. Apache HTTP server is running on PPC platform.\n\nRoot Cause:\nAfter investigation, I found that there is a small bug when accepting a new conneciton. \nIn function apr_socket_accept of file apr-1.3.5/network_io/sockets.c, if the new socket finds its father socket is in non-blocking mode, it calls apr_set_option to change the non-blocking mode. However, the function apr_set_option only changes the value in struct apr_socket_t, and the real non-blocking mode of the socket has not been modified. So I think we'd better call function apr_socket_opt_set to set the real non-blocking mode of the new socket.\n\nPlease see attached for the patched file.\n\nThanks,\nTony", "is_private": false, "id": 132161, "creator": "dongliqian@gmail.com", "time": "2009-11-20T03:49:30Z", "bug_id": 48247, "creation_time": "2009-11-20T03:49:30Z", "attachment_id": 24571}, {"count": 1, "tags": [], "bug_id": 48247, "attachment_id": null, "text": "Problem description:\nThe issue occurred when I used Apache HTTP server 2.2.11 and apr1.3.5 under PPC\nplatform. The Apache HTTP server couldn't respond the HEAD message under\nfollowing environment:\n1. Apache HTTP server is configured with multiple ports.\n2. When compiling APR, with APR_O_NONBLOCK_INHERITED enabled.\n3. Apache HTTP server is running on PPC platform.\n\nRoot Cause:\nAfter investigation, I found that there is a small bug when accepting a new\nconneciton. \nIn function apr_socket_accept of file apr-1.3.5/network_io/sockets.c, if the\nnew socket finds its father socket is in non-blocking mode, it calls\napr_set_option to change the non-blocking mode. However, the function\napr_set_option only changes the value in struct apr_socket_t, and the real\nnon-blocking mode of the socket has not been modified. So I think we'd better\ncall function apr_socket_opt_set to set the real non-blocking mode of the new\nsocket.\n\nPlease see attached for the patched file.\n\nThanks,\nTony", "id": 133362, "time": "2010-01-05T23:29:37Z", "creator": "dongliqian@gmail.com", "creation_time": "2010-01-05T23:29:37Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 48247, "is_private": false, "text": "What exactly do you mean by \n\n>2. When compiling APR, with APR_O_NONBLOCK_INHERITED enabled.\n\nDid you set that yourself?  If so, that's invalid.  It isn't intended as a user setting except in the theoretical exceptional situation where APR configure doesn't set it properly.\n\nOn my 2.6.27-someubuntufoo kernel APR sets it automatically to 0.  I expect it should have the same setting on any somewhat modern Linux kernel regardless of architecture.", "id": 134072, "time": "2010-01-31T07:25:51Z", "creator": "trawick@apache.org", "creation_time": "2010-01-31T07:25:51Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 48247, "is_private": false, "text": "Hi Jeff,\n\nThanks for your attention.\nI haven't set it myself. After running cnofigure` command, I found the macro has been set as 1.\nI guess maybe it's because I compiled it on the powerpc platform.\nAnd I still think it's a bug, because the function apr_set_option only set the flag in the structure apr_socket_t, and the non-blocking mode recorded by operating system hasn't been modified. I think here we should call function apr_socket_opt_set to set the non-blocking mode. This function can modify the real non-blocking mode.\n\nThanks,\nTony", "id": 134212, "time": "2010-02-04T00:31:53Z", "creator": "dongliqian@gmail.com", "creation_time": "2010-02-04T00:31:53Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 48247, "attachment_id": null, "is_private": false, "id": 134218, "time": "2010-02-04T04:37:14Z", "creator": "trawick@apache.org", "creation_time": "2010-02-04T04:37:14Z", "text": ">I haven't set it myself. After running cnofigure` command, I found the macro\n>has been set as 1.\n\nThanks for the clarification.\n\n>I guess maybe it's because I compiled it on the powerpc platform.\n\nWho knows?\n\n>And I still think it's a bug,\nSure; the behavior you see, and comparison with other Linux boxes, indicates that the macro should have been set to 0 by configure.\n\n> because the function apr_set_option only set the\n>flag in the structure apr_socket_t, and the non-blocking mode recorded by\n>operating system hasn't been modified.\n\nNote that this logic is controlled by the configure-time detection, so it is that detection we need to explore.\n\nWork-around:\n\nSet this in your environment before running configure:\n\n export ac_cv_o_nonblock_inherited=\"no\"\n\n(make sure you run \"make distclean\" between different build attempts)\n\nFinding the problem:\n\nLook for the message starting with \"checking if O_NONBLOCK setting\" in your config.log.  Here's what that section looks like in my Linux build.  Please post your version.\n\nconfigure:45431: checking if O_NONBLOCK setting is inherited from listening sockets\nconfigure:45550: /usr/bin/gcc -m32 -o conftest  -O0 -g -Wall -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations -pthread -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE  conftest.c -lrt -lcrypt  -lpthread -ldl >&5\nconftest.c: In function 'main':\nconftest.c:218: warning: implicit declaration of function 'exit'\nconftest.c:218: warning: incompatible implicit declaration of built-in function 'exit'\nconftest.c:220: warning: implicit declaration of function 'memset'\nconftest.c:220: warning: incompatible implicit declaration of built-in function 'memset'\nconftest.c:229: warning: incompatible implicit declaration of built-in function 'exit'\nconftest.c:236: warning: incompatible implicit declaration of built-in function 'exit'\nconftest.c:242: warning: incompatible implicit declaration of built-in function 'exit'\nconftest.c:247: warning: incompatible implicit declaration of built-in function 'exit'\nconftest.c:252: warning: incompatible implicit declaration of built-in function 'exit'\nconftest.c:264: warning: incompatible implicit declaration of built-in function 'exit'\nconftest.c:270: warning: incompatible implicit declaration of built-in function 'exit'\nconftest.c:275: warning: incompatible implicit declaration of built-in function 'exit'\nconftest.c:279: warning: incompatible implicit declaration of built-in function 'exit'\nconfigure:45553: $? = 0\nconfigure:45559: ./conftest\nO_NONBLOCK is not set in the child.\nconfigure:45562: $? = 1"}]