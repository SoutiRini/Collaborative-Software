[{"count": 0, "tags": [], "bug_id": 57867, "text": "Documentation should reflect a change made in Java SE 5.0 that affects creation of documents that depend on the \"org.apache\" project. The following incompatibility i was extracted from Java SE 5.0 release notes:\n\n\"Apache - The org.apache classes, which have never been supported J2SE APIs but are used by the javax.xml package, have moved in 5.0 to com.sun.org.apache. package.internal so that they won't clash with more recent, developer-downloaded versions of the classes. Any applications that depend on the org.apache classes being part of the J2SE release must do one of the following to work in 5.0:\n\nCode the application so it uses only the supported interfaces that are part of JAXP.\nDownload the org.apache.xalan classes from Apache.\"\n\nThis should be documented as an external dependency of the POI jars since Xalan is not provided with the POI distribution.", "id": 182698, "time": "2015-04-28T16:32:47Z", "creator": "hector.j.fontanez@gmail.com", "creation_time": "2015-04-28T16:32:47Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 57867, "text": "Current versions of Apache POI requires Java 6, so I'm not sure this applies/matters to us?\n\n(There are no org.apache.xalan references to be found in the current codebase either)", "id": 182700, "attachment_id": null, "creator": "apache@gagravarr.org", "creation_time": "2015-04-28T18:11:16Z", "time": "2015-04-28T18:11:16Z", "is_private": false}, {"count": 2, "tags": [], "creator": "hector.j.fontanez@gmail.com", "attachment_id": null, "id": 182714, "time": "2015-04-28T23:21:17Z", "bug_id": 57867, "creation_time": "2015-04-28T23:21:17Z", "is_private": false, "text": "(In reply to Nick Burch from comment #1)\n> Current versions of Apache POI requires Java 6, so I'm not sure this\n> applies/matters to us?\n> \n> (There are no org.apache.xalan references to be found in the current\n> codebase either)\n\nPrecisely for that reason the documentation must be updated. Since Java SE 5.0, the \"org.apache\" packages have been relocated. Therefore, you must download Xalan from Apache.  Because that change in Java, this is an external dependency of POI products that depend on code in that package."}, {"count": 3, "tags": [], "bug_id": 57867, "text": "I can't find any references to org.apache.xalan in our codebase or documentation, sorry. Any chance you could point me to the place where they are, so we can get them updated?\n\nIdeally, if you could also provide a unit test (that fails on trunk without the fix) to highlight the problem, that'd be handy too!", "id": 182715, "time": "2015-04-29T00:06:06Z", "creator": "apache@gagravarr.org", "creation_time": "2015-04-29T00:06:06Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 57867, "attachment_id": null, "text": "(In reply to Nick Burch from comment #3)\n> I can't find any references to org.apache.xalan in our codebase or\n> documentation, sorry. Any chance you could point me to the place where they\n> are, so we can get them updated?\n> \n> Ideally, if you could also provide a unit test (that fails on trunk without\n> the fix) to highlight the problem, that'd be handy too!\n\nThe following code works with xalan.jar in the classpath, but throws an exception without it:\n\n      Workbook wb = new XSSFWorkbook();\n      FileOutputStream fileOut = new FileOutputStream(\"workbook.xlsx\");\n      wb.write(fileOut); // Fails here (uncaught exception)\n      fileOut.close();\n\nUsing HSSFWorkbook works with our without Xalan because they don't use OOXML. My development environment uses Java SE 6 and was failing on the call to the write method until I downloaded (as recommended by Java) Xalan with all the additional JARs (serializer.jar, xercesImpl.jar, xml-apis.jar). Removing the xalan.jar (and leaving the other updated ones) results in following error: java.lang.NoClassDefFoundError: org/w3c/dom/ElementTraversal.", "id": 182726, "time": "2015-04-29T14:49:01Z", "creator": "hector.j.fontanez@gmail.com", "creation_time": "2015-04-29T14:49:01Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 57867, "attachment_id": null, "text": "You haven't said what version of Apache POI you are using. As long as it's something recent (eg 3.11 or 3.12 beta 1), no additional jars are required beyond those shipped in the binary packages. \n\nThe code you have given in your snippet works just fine for me on trunk, with no additional jars needed, so my hunch is that you're using an old version of POI, either knowingly or by accident", "id": 182727, "time": "2015-04-29T14:54:26Z", "creator": "apache@gagravarr.org", "creation_time": "2015-04-29T14:54:26Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 57867, "text": "(In reply to Nick Burch from comment #5)\n> You haven't said what version of Apache POI you are using. As long as it's\n> something recent (eg 3.11 or 3.12 beta 1), no additional jars are required\n> beyond those shipped in the binary packages. \n> \n> The code you have given in your snippet works just fine for me on trunk,\n> with no additional jars needed, so my hunch is that you're using an old\n> version of POI, either knowingly or by accident\n\nI am using Apache POI 3.11. I updated the bug information. When I upgraded to 3.11, I added the following JARs and removed the old ones from classpath:\n\n\tpoi-3.11-20141221.jar\n\tpoi-ooxml-3.11-20141221.jar\n\tpoi-ooxml-schemas-3.11-20141221.jar\n\txmlbeans-2.6.0.jar\n\nIn my particular case, when I wrote using HSSF, it worked fine. However, after changing to XSSF, I could not create even a blank file without an error. Once I added the JARs I mentioned before, the problem went away.  Reading operations were unaffected by this.", "id": 182736, "attachment_id": null, "creator": "hector.j.fontanez@gmail.com", "creation_time": "2015-04-29T20:30:23Z", "time": "2015-04-29T20:30:23Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 57867, "attachment_id": null, "text": "1. Can you run the following to see where the XSSFWorkbook is loaded, just to make sure that there is not a version of POI loaded from somewhere:\n\nSystem.out.println(Thread.currentThread().getContextClassLoader().getResource(XSSFWorkbook.class.getName().replace(\".\", \"/\") + \".class\"));\n\n2. Another thing that could happen is that you have some other jar-file in the classpath which tries to pull in Xalan/Xerces and via the service-files in META-INF \"install\" Xerces as default XML Parser. \n\n3. Also which exact JDK is this? If it is the IBM JDK, I would strongly suggest to upgrade to 1.7 as 1.6 has various problems, see also the FAQ at http://poi.apache.org/faq.html#faq-N1017E\n\n=> Can you try this in a newly created project which only has POI? This way we eliminate the first two possible causes?", "id": 182770, "time": "2015-04-30T19:29:43Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-04-30T19:29:43Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 57867, "text": "No response for a long time, thus closing this bug for now, please reopen with more information if this is still a problem for you.", "id": 198128, "attachment_id": null, "creator": "dominik.stadler@gmx.at", "creation_time": "2017-04-03T14:06:37Z", "time": "2017-04-03T14:06:37Z", "is_private": false}]