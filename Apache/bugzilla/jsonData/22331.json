[{"count": 0, "tags": [], "bug_id": 22331, "attachment_id": null, "text": "I occasionally get the following exception:\n\n2218592 [Thread-65] WARN indexer.ValueIndexer  - add\njava.lang.NullPointerException\n\tat org.apache.xindice.core.filer.BTree$BTreeNode.addValue\n(BTree.java:633)\n\tat org.apache.xindice.core.filer.BTree$BTreeNode.addValue\n(BTree.java:633)\n\tat org.apache.xindice.core.filer.BTree.addValue(BTree.java:189)\n\tat org.apache.xindice.core.indexer.ValueIndexer.add\n(ValueIndexer.java:373)\n\tat org.apache.xindice.core.indexer.IndexManager$SAXHandler.processEntry\n(IndexManager.java:543)\n\tat org.apache.xindice.core.indexer.IndexManager$SAXHandler.endElement\n(IndexManager.java:583)\n\tat org.apache.xindice.xml.sax.SAXEventGenerator.processContainer\n(SAXEventGenerator.java:458)\n\tat org.apache.xindice.xml.sax.SAXEventGenerator.processContainer\n(SAXEventGenerator.java:388)\n\tat org.apache.xindice.xml.sax.SAXEventGenerator.processContainer\n(SAXEventGenerator.java:388)\n\tat org.apache.xindice.xml.sax.SAXEventGenerator.processContainer\n(SAXEventGenerator.java:388)\n\tat org.apache.xindice.xml.sax.SAXEventGenerator.processContainer\n(SAXEventGenerator.java:388)\n\tat org.apache.xindice.xml.sax.SAXEventGenerator.start\n(SAXEventGenerator.java:476)\n\tat org.apache.xindice.core.indexer.IndexManager$SAXHandler.<init>\n(IndexManager.java:485)\n\tat org.apache.xindice.core.indexer.IndexManager$SAXHandler.<init>\n(IndexManager.java:502)\n\tat org.apache.xindice.core.indexer.IndexManager.addDocument\n(IndexManager.java:413)\n\tat org.apache.xindice.core.Collection.putDocument(Collection.java:1206)\n\tat org.apache.xindice.core.Collection.insertDocument\n(Collection.java:992)\n\tat org.apache.xindice.client.xmldb.embed.CollectionImpl.storeResource\n(CollectionImpl.java:233)\n\tat [MY CODE]\n\nIt doesn't seem to cause too many problems at runtime, but I suspect that it \nmeans that some data doesn't ever make it in the index (this is a '*@*' \nindex).  Quickly looking at it in a debugger, the value of the local \nvariable 'idx' looks valid (16, which corresponds to a valid index \nin 'values'), but getChildNode(idx) returns null.\n\n(P.S. The line numbers in ValueIndexer.java and BTree.java might be off by one \nor two as I had to add traces).", "id": 42589, "time": "2003-08-11T22:54:16Z", "creator": "mcormier@miranda.com", "creation_time": "2003-08-11T22:54:16Z", "is_private": false}, {"count": 1, "tags": [], "text": "Mario,\n\nCan you provide sample data / steps to follow to reproduce the issue?\n\nThanks\nVadim", "is_private": false, "bug_id": 22331, "id": 49014, "time": "2003-12-12T21:46:15Z", "creator": "vgritsenko@apache.org", "creation_time": "2003-12-12T21:46:15Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "This happened while adding documents and querying collections on multiple \nthreads (adding lots of small documents).  We had to stop using Xindice for \nthat part of our application, so I don't see it anymore (all accesses to \nXindice -- much more infrequent -- are now serialized).  In case it matters, \nthe code that added documents looked like this, and was called without \nsynchronization (under the assumption that Xindice is thread-safe):\n\n         StringBuffer xml = new StringBuffer();\n         xml.append(\n            \"<entry timestamp='\").append(timestamp).append(\"' \" +\n                   \"deviceURI='\").append(deviceURI).append(\"' \" +\n                   \"deviceClass='\").append(deviceClass).append(\"' \" +\n                   \"alarmURI='\").append(alarmURI).append(\"' \" +\n                   \"alarmName='\").append(friendlyName).append(\"' \" +\n                   \"eventTypeID='\").append(eventTypeID);\n                     if (principal != null) {\n                        xml.append(\"' user='\").append(principal);\n                     }\n               xml.append(\"'><group path=\\\"\");\n               String path[] = desc.getPath();\n               for (int i=0; i<path.length; i++) {\n                  xml.append(path[i]);\n                  if (i < path.length-1) {\n                     xml.append('/');\n                  }\n               }\n               xml.append(\"\\\" />\" +\n               \"<extra>\" + extraInfo + \"</extra>\" +\n            \"</entry>\");\n\n         String entryName = col.createId();\n\n         Resource entry = col.createResource(entryName, \"XMLResource\");\n         entry.setContent(\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\"\n                             + xml.toString());\n         col.storeResource(entry);\n\nI couldn't isolate a pattern other than the fact that under heavy load, it was \nquite likely to happen.  The exception is logged and ignored by ValueIndexer, \nbut I couldn't determine why it is ignored and whether it would cause a \nproblem.  It certainly doesn't look harmless.\n\nI assume we should have a test case that tries to add (or at least index) LOTS \nof documents in parallel to the database and verify that no such exceptions are \ngenerated.  Not quite obvious to generate a test case for a problem that \ndoesn't always happen.\n\nI'm sorry I can't be much more specific at this point.  If this doesn't help, \nI'll try and make the time to reproduce the problem in a simple test \napplication.", "is_private": false, "id": 49019, "creator": "mcormier@miranda.com", "time": "2003-12-12T22:23:25Z", "bug_id": 22331, "creation_time": "2003-12-12T22:23:25Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 22331, "text": "Thanks Mario,\n\n> This happened while adding documents\n\nI have been able to reproduce some multithreading problem with BTreeFiler. It\nmight be the same problem or similar, I don't know yet. See Bug #25534\n\nVadim\n", "id": 49132, "time": "2003-12-15T14:50:17Z", "creator": "vgritsenko@apache.org", "creation_time": "2003-12-15T14:50:17Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 22331, "attachment_id": null, "text": "Mario,\n\nCan you test against current CVS and see if this issue was solved (with recent\nchanges) or not?\n\nThanks,\nVadim", "id": 49406, "time": "2003-12-19T02:45:24Z", "creator": "vgritsenko@apache.org", "creation_time": "2003-12-19T02:45:24Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "vgritsenko@apache.org", "is_private": false, "count": 5, "id": 49685, "time": "2003-12-25T04:04:00Z", "bug_id": 22331, "creation_time": "2003-12-25T04:04:00Z", "text": "Closing. Please reopen if issue can be reproduced with current CVS."}]