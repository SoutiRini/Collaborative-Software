[{"count": 0, "attachment_id": null, "bug_id": 25272, "is_private": false, "id": 48641, "time": "2003-12-07T19:46:33Z", "creator": "john@integerservices.no-ip.com", "creation_time": "2003-12-07T19:46:33Z", "tags": [], "text": "Running the following command from the 'root' directory of Fop 1.0dev throws\na FileNotFoundException. (The directory containing 'build.xml' and 'build.sh'.)\n\nReason: Fop does not use the directory of the foFile or foURL as the base \ndirectory for external files. \n\nFor example:\n\n<fo:external-graphic width=\"100pt\" height=\"100pt\" content-width=\"50pt\"\ncontent-height=\"50pt\" src=\"file:logo.jpg\"/>\n\n\njava -Xms100m -Xmx200m -cp\n.:build/fop.jar:lib/avalon-framework-4.1.4.jar:lib/batik.jar:lib/commons-io-dev-20030703.jar\norg.apache.fop.apps.Fop -fo test/resources/fop/image/align.fo -pdf /tmp/17350.pdf\n[INFO] 1.0dev\n[ERROR] Error while opening stream for (file:logo.jpg): .logo.jpg (No such file\nor directory)\njava.io.FileNotFoundException: .logo.jpg (No such file or directory)\n        at java.io.FileInputStream.open(Native Method)\n        at java.io.FileInputStream.<init>(FileInputStream.java:106)\n        at java.io.FileInputStream.<init>(FileInputStream.java:66)\n\nNotes:\n\nThis problem was found running org.apache.fop.apps.Fop but should also be\npresent for programs running embedded Fop. \n\nA File or URL is passed to FOFileHandler which encapsulates an InputSource for \nSAX. The base directory needs to be remembered somewhere in the FOFileHandler \nand clients need to find it when they wish to access external files.\n\nI'm not quite ready to offer up a patch for this because I don't have the full \ndesign history of this."}, {"count": 1, "tags": [], "text": "Created attachment 9434\nFull log of problem creation", "attachment_id": 9434, "id": 48642, "creator": "john@integerservices.no-ip.com", "time": "2003-12-07T19:59:29Z", "bug_id": 25272, "creation_time": "2003-12-07T19:59:29Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 25272, "text": "A suggested correction:\n\nThere is only ever ONE current input source (file or URL) active at a time and \nfiles nest in a 'stackable' fashion. It would appear that a Singleton containing\na Stack could model this nicely.\n\n1) When you establish the input source, store the fully qualified basename and\n   filename in the singleton by pushing it on to the stack.\n\n2) When you go to open a relative filename or URL, get the basename from the \n   singleton.\n\n3) If you ever nest input sources, this extends nicely.\n\n4) This avoids the impure possibility of using 'Global' data.", "count": 2, "id": 48646, "time": "2003-12-07T21:42:59Z", "creator": "john@integerservices.no-ip.com", "creation_time": "2003-12-07T21:42:59Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 25272, "text": "Your suggestion seems to make sense--I'm surprised we don't get more requests \nfor this.  I'd like to see how Xalan handles this--they may have already a good \nimplementation for their imports/includes that we can use.  Also the Batik \ngroup may have implemented something similar as well.\n\nIIRC we recently added this option to our ant task in 1.0 so that may provide \nan option to avoid the FNF errors.  (For the ant task, we are just setting a \nsetBaseDir() or similarly simple to make the change, possibly getting rid of \nthe need for the stack you mention below.)\n\nThanks,\nGlen", "count": 3, "id": 48693, "time": "2003-12-08T20:59:58Z", "creator": "glenmazza@yahoo.com", "creation_time": "2003-12-08T20:59:58Z", "is_private": false}, {"count": 4, "tags": [], "text": "Created attachment 9489\nClass to manager directory context for FO file processing", "is_private": false, "id": 48808, "creator": "john@integerservices.no-ip.com", "time": "2003-12-10T14:58:14Z", "bug_id": 25272, "creation_time": "2003-12-10T14:58:14Z", "attachment_id": 9489}, {"count": 5, "tags": [], "text": "Created attachment 9490\nChanges to employ SurrentSourceManager", "is_private": false, "id": 48809, "creator": "john@integerservices.no-ip.com", "time": "2003-12-10T14:59:05Z", "bug_id": 25272, "creation_time": "2003-12-10T14:59:05Z", "attachment_id": 9490}, {"count": 6, "tags": [], "bug_id": 25272, "text": "Created attachment 9491\nChanges to org.apache.fop.image.ImageFactory.java", "id": 48810, "time": "2003-12-10T14:59:54Z", "creator": "john@integerservices.no-ip.com", "creation_time": "2003-12-10T14:59:54Z", "is_private": false, "attachment_id": 9491}, {"count": 7, "tags": [], "creator": "john@integerservices.no-ip.com", "attachment_id": null, "text": "I have written and tested a possible solution to this problem.\n\nThe fix makes use of a new class org.apache.fop.apps.CurrentSourceManager and \nchanges two existing classes org.apache.fop.apps.FOFileHandler and\norg.apache.fop.image.ImageFactory.\n\nI have tested this with the same command I used to discover the problem:\n\nfind test -type f -name \"*.fo\" -print -exec ./test.sh {} \\;\n\nand test.sh contains:\n\n#--------------------------------------------------------------------------\njava -Xms100m -Xmx200m -cp\n.:build/fop.jar:lib/avalon-framework-4.1.4.jar:lib/batik.jar:lib/commons-io-dev-20030703.jar\norg.apache.fop.apps.Fop -fo ${1} -pdf /tmp/$$.pdf\n#--------------------------------------------------------------------------\n\nI have also tested with \n find examples -type f -name \"*.fo\" -print -exec ./test.sh {} \\;\n\n\nNote: I am not certain that CurrentSourceManager belongs in the apps package\nbut it seems to belong with FOFileHandler which is currently in that package.\n", "id": 48811, "time": "2003-12-10T15:02:44Z", "bug_id": 25272, "creation_time": "2003-12-10T15:02:44Z", "is_private": false}, {"count": 8, "tags": [], "creator": "glenmazza@yahoo.com", "attachment_id": null, "text": "Could you also attach a testcase FO file (simple one would be OK)?\n\nThanks,\nGlen", "id": 48816, "time": "2003-12-10T15:59:30Z", "bug_id": 25272, "creation_time": "2003-12-10T15:59:30Z", "is_private": false}, {"count": 9, "tags": [], "creator": "john@integerservices.no-ip.com", "attachment_id": 9496, "text": "Created attachment 9496\nFile is all ready part of FOP. Throws FNF described in this issue.", "id": 48821, "time": "2003-12-10T16:20:56Z", "bug_id": 25272, "creation_time": "2003-12-10T16:20:56Z", "is_private": false}, {"count": 10, "tags": [], "text": "Is there anything more to be done for this ?", "attachment_id": null, "id": 49353, "creator": "john@integerservices.no-ip.com", "time": "2003-12-18T14:22:54Z", "bug_id": 25272, "creation_time": "2003-12-18T14:22:54Z", "is_private": false}, {"count": 11, "tags": [], "text": "John,\n\nPlease stop rushing the committers.  This is not a trivial task.  The problem \ndomain has to be fully explored, then your work vs. what we already have in \nFOP's Ant Task has to be checked, then we (probably) have to compare your work \nvs. what is already done by Batik and Xalan to see if anything has been \nmissed.  \n\nIn the meantime, you may wish to redo your code patches:  use no tabs, 4 spaces \nonly, and follow the coding conventions, particularily in spacing, given on our \nweb site and based on the Sun guidelines.  CurrentSourceManager in particular \nneeds several changes--you should not have sent this to us in its current state.\n\nThanks,\nGlen\n", "is_private": false, "id": 49404, "creator": "glenmazza@yahoo.com", "time": "2003-12-19T02:04:52Z", "bug_id": 25272, "creation_time": "2003-12-19T02:04:52Z", "attachment_id": null}, {"count": 12, "tags": [], "text": "Sorry to come in late on this but I see a problem with the proposed changes: \nThey don't work in a multi-threaded environment. One of the goals in the \ntransition from the old maintenance branch to the redesign is get rid of as \nmany statics as possible to avoid any multi-threading problems.\n\nURL resolution would better be done through the Document class (there's one \nfor each currently rendered document) or through the FOUserAgent although the \nlatter is configuration-dependant and not \"run\"-dependant (as Document is).\n\nAnother important thing to respect in this context is the proper resolution of \nURIs. We should be able to make use of an XML Resolver \n(http://xml.apache.org/commons/components/resolver/index.html) and the whole \nthing should be easily pluggable into Cocoon (which uses Avalon's \nSourceResolver concept, http://avalon.apache.org/excalibur/sourceresolve-\nindex.html).", "attachment_id": null, "bug_id": 25272, "id": 49417, "time": "2003-12-19T07:18:46Z", "creator": "jeremias@apache.org", "creation_time": "2003-12-19T07:18:46Z", "is_private": false}, {"count": 13, "tags": [], "creator": "john@integerservices.no-ip.com", "attachment_id": null, "text": "Singleton was selected because the state needs a place to live. If there is\na logical home for the state information that is thread-safe, that is the place\nto put it. I'll have a look at that on the weekend. \n\nAs to the use of the commons or avalon resolvers, I don't mind either approach\nbut it brings the phrase 'not invented here' to mind. They probably work better\nthan \nthe core Java class but they add to the learning curve.\n\n(\"Lucky we didn\u2019t say anything about the dirty knife.\").  \n", "id": 49426, "time": "2003-12-19T11:54:37Z", "bug_id": 25272, "creation_time": "2003-12-19T11:54:37Z", "is_private": false}, {"count": 14, "tags": [], "creator": "john@integerservices.no-ip.com", "attachment_id": null, "text": "Feedback accepted.\n\nThe only place that needs to change to fix this problem, is the\nImageFactory method:\n    protected static InputStream openStream(String href, FOUserAgent ua)\n\nThe current state of the input stream is set in the constructors of\nFOFileHandler which is called normally from CommandLineOptions and \na couple of other less critical places.\n\nAlso, FOUserAgent hold a reference to a logger and there is a bit of code that \nneeds to have logging support added. So I shall amend my suggested fix.\n\n", "id": 49430, "time": "2003-12-19T14:05:05Z", "bug_id": 25272, "creation_time": "2003-12-19T14:05:05Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 25272, "text": "On further examination, the command line application uses FOFileHandler to\nread FO from a file but embedded apps can use something like the following:\n\n\tFile pdfFile = new File( namePart + \".pdf\" );\n\n\tDriver driver = new Driver();\n\tLogger logger = new ConsoleLogger( ConsoleLogger.LEVEL_INFO ); \n\t//driver.setLogger( logger );\n\tdriver.setRenderer( Driver.RENDER_PDF );\n\ttry {\n\t    driver.setOutputStream( new java.io.FileOutputStream( pdfFile ) );\n\t    Result res = new SAXResult(driver.getContentHandler());\n\t    trans2.transform( xmlSource2, res );\n\t}\n\nAnd Driver sets the ContentHandler to an instance of FOTreeBuilder. So I'll need \nto crawl through some more innards to complete a fix.\n\nNew Year's resolution:\n\nTo learn as much every day, as I did after making yesterday's tactless remark.\nWITHOUT being tactless.\n", "count": 15, "id": 49448, "time": "2003-12-19T17:43:28Z", "creator": "john@integerservices.no-ip.com", "creation_time": "2003-12-19T17:43:28Z", "is_private": false}, {"count": 16, "tags": [], "text": "Today, we have a flexible URI resolution scheme using JAXP's URIResolver in FOP\n0.93. Furthermore, the directory of the input FO file is set as the base\ndirectory for the transformation if no other base directory is set (see\nInputHandler). I think we can close this issue.", "attachment_id": null, "id": 98935, "creator": "jeremias@apache.org", "time": "2007-02-03T12:26:03Z", "bug_id": 25272, "creation_time": "2007-02-03T12:26:03Z", "is_private": false}, {"count": 17, "attachment_id": null, "bug_id": 25272, "is_private": false, "id": 156699, "time": "2012-04-01T13:51:35Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T13:51:35Z", "tags": [], "text": "batch transition to closed remaining pre-FOP1.0 resolved bugs"}]