[{"count": 0, "attachment_id": null, "creator": "mick@mickandwendy.com", "text": "We are running apache 2.048 on AIX 4.33 using the worker MPM. We start the \nserver with ./apachectl startssl.  \n\nWe have configued the MPM to only allow 1 client with many threads, this is a \nrequirement of the application I am working on.  When stopping the server \nwith ./apachectl stop my application gets a stop signal and closes, the client \nprocess is no longer showing but the parent process keeps running.  Any ideas \nwhat could be happening.\n\nMick", "id": 52499, "time": "2004-02-18T16:46:47Z", "bug_id": 27038, "creation_time": "2004-02-18T16:46:47Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 27038, "attachment_id": null, "text": "attach to whatever httpd process is still running and get backtraces of all the\nthreads (probably just one)\n\ndbx -a PID\n(dbx) thread\n(thread table displayed here)\n(dbx) thread current 1\n(dbx) where\n(dbx) thread current 2\n(dbx) where\netc. etc. for each thread displayed in the thread table\n\n(dbx) detach\n\nDoes this happen even if no 3rd party modules are loaded?\n", "id": 52504, "time": "2004-02-18T18:08:32Z", "creator": "trawick@apache.org", "creation_time": "2004-02-18T18:08:32Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "mick@mickandwendy.com", "text": "Here is the back trace\n\n0xd0011b54 (_pthread_ksleep+0x9c) 80410014        lwz   r2,0x14(r1)\n(dbx) thread\n thread  state-k     wchan    state-u    k-tid   mode held scope function\n $t1     run                  running  1231777     k   no   sys  _ptrgl\n $t4     wait      0xe603ccbc blocked   248883     k   no   sys  _pthread_ksleep\n>$t3     run                  blocked   276763     k   no   sys  _pthread_ksleep\n(dbx) thread current 1\n(dbx) where\nptrgl._ptrgl() at 0xd0170f90\nraise.nsleep(??, ??) at 0xd018876c\nraise.nsleep(??, ??) at 0xd018876c\nutimer.usleep(??) at 0xd01883a8\nsleepMilliseconds(int)(0x64), line 73 in \"BRunnble.cpp\"\n~TimedTrafficLight()(0x310ee100, 0x2, 0x0), line 32 in \"TimedTrafficLight.cpp\"\n~Operator()(0x310ee0fc, 0x2, 0x0), line 37 in \"WebServerControl.cpp\"\n~WebServerControl()(0x310edf60, 0x2), line 59 in \"WebServerControl.cpp\"\nWebServerControl.__srterm__0()(), line 59 in \"WebServerControl.cpp\"\n__sterm80000000_x_2fvobs_2fwsdev_2fsrc_2fwsControl_2fWebServerControl_2ecpp()\n(), line 35 in \"WebServerControl.cpp\"\nterminate_one_library__FP7libDesc() at 0xd09942e8\nterminate_libs__FCPii() at 0xd09932f8\nunload_libs__FPFv_i() at 0xd0994d0c\nterminateAndUnload() at 0xd09927a4\ndlclose(??) at 0xd023f57c\ndso_cleanup(??), line 110 in \"dso.c\"\nrun_cleanups(??), line 1994 in \"apr_pools.c\"\napr_pool_destroy(??), line 763 in \"apr_pools.c\"\napr_pool_destroy(??), line 760 in \"apr_pools.c\"\ndestroy_and_exit_process(process = 0x30026f90, process_exit_value = 0), line \n253 in \"main.c\"\nmain(argc = 4, argv = 0x2ff226c0), line 678 in \"main.c\"\n(dbx) thread current 2\n'$t2' is not an existing thread.\n(dbx) thread current 3\n(dbx) where\nevt._pthread_ksleep(??, ??, ??, ??, ??) at 0xd0011b54\nevt._pthread_event_wait(??) at 0xd0011fb0\ncond._cond_wait_local(??, ??, ??) at 0xd000dfa0\ncond._cond_wait(??, ??, ??) at 0xd000e41c\ncond.pthread_cond_wait(??, ??) at 0xd000f070\ndce_ptdexc_cond_wait(??, ??) at 0xd0971f98\nunnamed block $b1652, line 531 in \"cnrcvr.c\"\nunnamed block $b1650, line 531 in \"cnrcvr.c\"\nrpc__cn_network_receiver(0x313f3eb8), line 531 in \"cnrcvr.c\"\npthread._pthread_body(??) at 0xd00080c8\n(dbx) thread current 4\n(dbx) where\nevt._pthread_ksleep(0x31431a50, 0x0, 0xffffffff, 0x0, 0xffffffff) at 0xd0011ab8\nevt._pthread_event_wait(??) at 0xd0011fb0\nevt._pthread_event_wait(??) at 0xd0011fb0\ncond._cond_wait_local(??, ??, ??) at 0xd000dfa0\ncond._cond_wait(??, ??, ??) at 0xd000e41c\ncond.pthread_cond_wait(??, ??) at 0xd000f070\ndce_ptdexc_cond_wait(??, ??) at 0xd0971f98\nunnamed block $b961, line 393 in \"rpctimer.c\"\nunnamed block $b960, line 393 in \"rpctimer.c\"\ntimer_loop(), line 393 in \"rpctimer.c\"\npthread._pthread_body(??) at 0xd00080c8\n(dbx)", "id": 52531, "time": "2004-02-19T08:45:49Z", "bug_id": 27038, "creation_time": "2004-02-19T08:45:49Z", "tags": [], "is_private": false}, {"count": 3, "attachment_id": null, "creator": "mick@mickandwendy.com", "is_private": false, "id": 52547, "time": "2004-02-19T11:04:35Z", "bug_id": 27038, "creation_time": "2004-02-19T11:04:35Z", "tags": [], "text": "OK,  I have sorted this problem by move some initialisation from post config to \nchild init,  The problem I have now is not knowing how to close the server down \nif a child init function fails as this is a void function.\n\nAny help?\n\nMick"}, {"text": "MPMs close down the server in their child init functions in some catastrophic\nsituations (e.g., can't perform child initialization of the accept mutex) by\nexiting the process via \"exit(APEXIT_CHILDFATAL)\" but they do it from an orderly\nshutdown function that is not available to modules (clean_child_exit()).  I\ndon't know what the repercussions would be if you exit() directly.\n\nPotentially this is something that could be improved upon in Apache 2.1-dev by\nmaking an API change to allow child-init to bring down the server in a\nrelatively orderly manner.\n\n(discussion on dev@httpd, not here ;) )\n", "tags": [], "bug_id": 27038, "is_private": false, "count": 4, "id": 52548, "time": "2004-02-19T11:26:39Z", "creator": "trawick@apache.org", "creation_time": "2004-02-19T11:26:39Z", "attachment_id": null}]