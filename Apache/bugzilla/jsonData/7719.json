[{"count": 0, "tags": [], "bug_id": 7719, "attachment_id": null, "id": 12760, "time": "2002-04-03T14:58:15Z", "creator": "ghouston@iss.net", "creation_time": "2002-04-03T14:58:15Z", "is_private": false, "text": "Ant does not allow the user to create filesets or filelists and then refer to \nthem by id.  This would be a very great feature because it would enable \ngeneralization of tasks.\n\nFor example, I could create a \"smartjar\" task that would check dependencies and \njar if anything has changed...\n\n  <target name=\"smartJar\" description=\"helper target\">\n\t<!--\n\t* Creates a jar if any of it's source files have been updated\n\t*   Parameters:\n\t*     sourceFileset = a refid to the source fileset\n\t*     jarFile       = a refid to a filelist containing\n        *                     the jar file to create\n\t-->\n\n\t<dependset>\n\t  <srcfileset refid=\"${sourceFileset}\"/>\n\t  <targetfilelist refid=\"${jarFile}\"/>\n\t</dependset>\n\n\t<jar jarfilerefid=\"${jarFile}\">\n\t  <fileset refid=\"${sourceFileset}\"/>\n\t</jar>\n  </target> <!-- smartJar -->\n\nThen call it as follows...\n\n\n  <fileset id=\"classfiles.production\" dir=\"classes\">\n    <include name=\"**/*.class\"/>\n    <exclude name=\"**/test/*\" />\n  </fileset>\n\n  <filelist id=\"jarfile.production\" dir=\"release\" files=\"myApplication.jar\">\n\n <antcall target=\"smartJar\">\n    <param name=\"sourceFileset\" value=\"classfiles.production\"/>\n    <param name=\"jarFile\" value=\"jarfile.production\"/>\n </antcall>\n\n  <fileset id=\"classfiles.unittests\" dir=\"classes\">\n    <include name=\"**/test/*.class\"/>\n  </fileset>\n\n  <filelist id=\"jarfile.unittests\" dir=\"release\" files=\"unittests.jar\">\n\n <antcall target=\"smartJar\">\n    <param name=\"sourceFileset\" value=\"classfiles.unittests\"/>\n    <param name=\"jarFile\" value=\"unittests.jar\"/>\n </antcall>"}, {"count": 1, "tags": [], "bug_id": 7719, "attachment_id": null, "id": 12762, "time": "2002-04-03T15:11:06Z", "creator": "bodewig@apache.org", "creation_time": "2002-04-03T15:11:06Z", "is_private": false, "text": "You can ref filesets or filelists - the reason why it doesn't work for you\nis that you use <antcall> and Ant doesn't transport references to child builds.\n\nNow the good news, in the current CVS version, you can do what you want, you\nneed could use <ant> and set inheritRefs to true.\n\nYou can even control which references will be passed down (and change the ids\non the fly).\n\nRewriting your example for Ant 1.5:\n\n<target name=\"smartJar\" description=\"helper target\">\n  <dependset>\n    <srcfileset refid=\"sourceFileset\"/>\n    <targetfilelist refid=\"jarFile\"/>\n  </dependset>\n\n  <jar jarfilerefid=\"${jarFile}\">\n    <fileset refid=\"sourceFileset\"/>\n  </jar>\n</target>\n\nand\n\n<fileset id=\"classfiles.production\" dir=\"classes\">\n  <include name=\"**/*.class\"/>\n  <exclude name=\"**/test/*\" />\n</fileset>\n\n<filelist id=\"jarfile.production\" dir=\"release\" files=\"myApplication.jar\">\n\n<antcall target=\"smartJar\">\n  <reference toid=\"sourceFileset\" refid=\"classfiles.production\"/>\n  <reference toid=\"jarFile\" refid=\"jarfile.production\"/>\n</antcall>\n\n<fileset id=\"classfiles.unittests\" dir=\"classes\">\n  <include name=\"**/test/*.class\"/>\n</fileset>\n\n<filelist id=\"jarfile.unittests\" dir=\"release\" files=\"unittests.jar\">\n\n<antcall target=\"smartJar\">\n  <reference toid=\"sourceFileset\" refid=\"classfiles.unittests\"/>\n  <reference toid=\"jarFile\" refid=\"unittests.jar\"/>\n</antcall>"}, {"count": 2, "tags": [], "bug_id": 7719, "attachment_id": null, "id": 12763, "time": "2002-04-03T15:16:47Z", "creator": "bodewig@apache.org", "creation_time": "2002-04-03T15:16:47Z", "is_private": false, "text": "OK, you still need to specify another property for the name of the jar file,\nsorry."}]