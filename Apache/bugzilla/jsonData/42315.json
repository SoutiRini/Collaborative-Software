[{"count": 0, "text": "Consider the following content as part of the server.xml\n\n-------------------------------------------------\n<Host name=\"www.example.com\" appBase=\"C:/Example/Webapp\" unpackWARs=\"false\" \nautoDeploy=\"true\" xmlValidation=\"false\" xmlNamespaceAware=\"false\">\n\t<Context path=\"/\"  docBase=\".\" reloadable=\"false\" privileged=\"false\">\n\t\t<Manager \nclassName=\"org.apache.catalina.session.StandardManager\" \npathname=\"C:/Example/Webapp/WEB-INF/httpsessions.ser\"/>\n\t</Context>\n</Host>\n-------------------------------------------------\n\nIn order to make that host available in a local machine, you should \nadd \"example.com\" to your hosts file (in windows, it's located at \nC:\\WINDOWS\\system32\\drivers\\etc\\hosts)\n\nConsider the following web.xml for the context defined above:\n\n-------------------------------------------------\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE web-app PUBLIC \"-//Sun Microsystems, Inc.//DTD Web Application \n2.3//EN\" \"http://java.sun.com/dtd/web-app_2_3.dtd\">\n<web-app>\n\n  \t<servlet>\n\t\t<servlet-name>Controller</servlet-name>\n\t\t<servlet-class>com.example.Controller</servlet-class>\n\t\t<load-on-startup>1</load-on-startup>\n\t</servlet>\n\n  \t<servlet-mapping>\n    \t        <servlet-name>Controller</servlet-name>\n      \t        <url-pattern>/</url-pattern>\n  \t</servlet-mapping>\n\n    <error-page>\n        <error-code>500</error-code>\n        <location>/errors/500.htm</location>\n    </error-page>\n    \n</web-app>\n-------------------------------------------------\n\nAs you can see, a request made to http://www.example.com will be served by \nthe \"Controller\" servlet, as its \"url-pattern\" property is set to \"/\". If I \npoint my browser to http://www.example.com/errors/500.htm Tomcat serves me the \nright static html file.\nHowever, when a ServletException occurs (error 500), instead of showing the \nstatic error page defined in the previous web.xml, I get the default Error 500 \nTomcat page, and the Catalina.out file shows this:\n\n-------------------------------------------------\nSEVERE: Exception Processing ErrorPage[errorCode=500, location=/errors/500.htm]\n-------------------------------------------------\n\nIn order to reproduce this bug, consider the following servlet as the \nController.java :\n\n-------------------------------------------------\npackage com.example;\n\nimport javax.servlet.*;\nimport javax.servlet.http.*;\n\npublic class Controller extends HttpServlet{\n\n\tpublic void init(ServletConfig conf) throws ServletException{\n\t\tsuper.init(conf);\n        }\n\n\tpublic void destroy(){\n\t}\n\n\tpublic void doGet(HttpServletRequest req,HttpServletResponse res) \nthrows ServletException{\n                doPost(req,res);\n\t}\n\n\tpublic void doPost(HttpServletRequest req,HttpServletResponse res) \nthrows ServletException{\n                throw new ServletException(\"Force Error 500\");\n\t}\n}\n-------------------------------------------------\n\nI think this is strange bug, as calling the full \nhttp://www.example.com/errors/500.htm gives me the page it should be shown \nwhen an error 500 occurs, which means Tomcat can access perfectly to that \nfile, but at the time of showing that page as a result of an exception, then \nit can't access to that location.\n\nIn order to resolve that issue, I've added the following content to my web.xml \nfile as temporary fix to this issue:\n\n-------------------------------------------------\n<servlet>\n\t<servlet-name>Error500</servlet-name>\n\t<servlet-class>com.example.Error500</servlet-class>\n\t<load-on-startup>2</load-on-startup>\n</servlet>\n\n<servlet-mapping>\n\t<servlet-name>Error500</servlet-name>\n  \t<url-pattern>/errors/*</url-pattern>\n</servlet-mapping>\n-------------------------------------------------\n\nThis would be the content of the Error500 servlet:\n\n-------------------------------------------------\npackage com.example;\n\nimport javax.servlet.*;\nimport javax.servlet.http.*;\n\npublic class Error500 extends HttpServlet{\n\n\tpublic void init(ServletConfig conf) throws ServletException{\n\t\tsuper.init(conf);\n\t}\n\n\tpublic void destroy(){\n\t}\n\n\tpublic void doGet(HttpServletRequest req,HttpServletResponse res) \nthrows ServletException{\n\t\tdoPost(req,res);\n\t}\n\n\tpublic void doPost(HttpServletRequest req,HttpServletResponse res) \nthrows ServletException{\n\t\ttry{\n\t\t\tres.sendRedirect(\"/errors/500.htm\");\n\t\t}\n\t\tcatch(Exception ignored){}\n\t}\n}\n-------------------------------------------------\n\nI've tested this on 5.5.23 and 5.5.20.\n\nThanks!", "bug_id": 42315, "is_private": false, "id": 102734, "time": "2007-05-02T02:57:02Z", "creator": "rh3_sp@yahoo.es", "creation_time": "2007-05-02T02:57:02Z", "tags": [], "attachment_id": null}, {"count": 1, "text": "Please see section SRV.11 of the Servlet specification for an explanation.", "bug_id": 42315, "is_private": false, "id": 103145, "time": "2007-05-13T10:06:50Z", "creator": "markt@apache.org", "creation_time": "2007-05-13T10:06:50Z", "tags": [], "attachment_id": null}, {"count": 2, "text": "Mark,\n\nI had already checked SRV.11 specs before posting this bug. Sorry, but it \nmakes no sense that when you point your browser to \nhttp://www.example.com/errors/500.htm Tomcat serves the page prefectly, but \nwhen an Exception occurs on the default servlet it can't access to that same \nlocation and the log shows the following:\n\nSEVERE: Exception Processing ErrorPage[errorCode=500, location=/errors/500.htm\n\nThe SRV.11 specs need to be ALWAYS fulfilled in the same way. If I can access \nto a static ressource by pointing my browser to a certain page, that same page \nshould also be served when stated as an error-page of that webapp.\n\nPlease, could you re-check the config details I provided? I may be wrong, but \nI continue to think that it's a bug.\n\nThanks!", "bug_id": 42315, "is_private": false, "id": 103207, "time": "2007-05-14T16:55:16Z", "creator": "rh3_sp@yahoo.es", "creation_time": "2007-05-14T16:55:16Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 103209, "time": "2007-05-14T18:20:04Z", "bug_id": 42315, "creation_time": "2007-05-14T18:20:04Z", "is_private": false, "text": "Your configuration is invalid. appBase == docBase is not supported. The docs\naren't 100% clear on this point and there are some updates included in the next\nrelease that will address this.\n\nThe /errors directory in your appBase is being treated as a separate webapp,\nhence why the request for /errors/500.htm works.\n\nOnce you fix your directory structure, this still won't work. All requests for\nthe root webapp will be serviced by the Controller Servlet since it has been\nconfigured as the default Servlet (as per SRV.11). Your Servlet throws the error\nwhich triggers the request for /errors/500.htm (within the current webapp) which\nfails because all requests for the ROOT webapp are handled by the Controller\nServlet.\n\nPlease use the users list for further assistance."}, {"count": 4, "tags": [], "creator": "rh3_sp@yahoo.es", "attachment_id": null, "is_private": false, "id": 103211, "time": "2007-05-14T19:42:01Z", "bug_id": 42315, "creation_time": "2007-05-14T19:42:01Z", "text": "Ok, now I see the light. Thanks for the explanation and the time you dedicated \nto this issue."}]