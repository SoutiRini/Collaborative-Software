[{"count": 0, "tags": [], "creator": "janekdb@yahoo.co.uk", "attachment_id": null, "text": "Lifecycle.java documents the methods start and stop as throwing an\nIllegalStateException if invoked when already started/stopped. This contradicts\nthe majority of the implementations.\n\nOf the 20 classes in org.apache.catalina (and subpackages) which implement\nLifecycle, 16 throw LifecycleException instead of the documented\nIllegalStateException. It seems as if the docs in Lifecycle.java are in error\nand the 16 classes are correct.\n\n\nThese classes will throw LifecycleExceptions from start () and stop ():\n\n    authenticator/AuthenticatorBase.java\n    authenticator/SingleSignOn.java\n    cluster/StandardCluster.java\n    core/ContainerBase.java\n    core/FastEngineMapper.java\n    core/StandardPipeline.java\n    core/StandardServer.java\n    core/StandardService.java\n    logger/FileLogger.java\n    realm/MemoryRealm.java\n    session/PersistentManagerBase.java\n    session/StandardManager.java\n    session/StoreBase.java\n    startup/Embedded.java\n    valves/AccessLogValve.java\n    valves/CertificatesValve.java\n\nThese classes will throw IllegalStateExceptions from start () and stop ():\n\n    realm/RealmBase.java\n    realm/JAASRealm.java\n    realm/JDBCRealm.java\n    realm/UserDatabaseRealm.java\n\nDocs from Lifecycle.java\n\n    /**\n     * Prepare for the beginning of active use of the public methods of this\n     * component.  This method should be called before any of the public\n     * methods of this component are utilized.  It should also send a\n     * LifecycleEvent of type START_EVENT to any registered listeners.\n     *\n     * @exception IllegalStateException if this component has already been\n     *  started\n     * @exception LifecycleException if this component detects a fatal error\n     *  that prevents this component from being used\n     */\n    public void start() throws LifecycleException;\n\n\n    /**\n     * Gracefully terminate the active use of the public methods of this\n     * component.  This method should be the last one called on a given\n     * instance of this component.  It should also send a LifecycleEvent\n     * of type STOP_EVENT to any registered listeners.\n     *\n     * @exception IllegalStateException if this component has not been started\n     * @exception LifecycleException if this component detects a fatal error\n     *  that needs to be reported\n     */\n    public void stop() throws LifecycleException;", "id": 10277, "time": "2002-02-04T00:23:00Z", "bug_id": 6206, "creation_time": "2002-02-04T00:23:00Z", "is_private": false}, {"count": 1, "tags": [], "text": "This has been resolved (in 4.1.x) in favor of always throwing\nLifecycleException, which is the only exception type that is then caught. All\nothers are for unexpected/unhandled/fatal exceptions.\nThe fix will be in 4.1.4.", "attachment_id": null, "id": 17451, "creator": "remm@apache.org", "time": "2002-06-09T02:21:57Z", "bug_id": 6206, "creation_time": "2002-06-09T02:21:57Z", "is_private": false}]