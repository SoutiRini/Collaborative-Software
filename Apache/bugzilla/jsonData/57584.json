[{"count": 0, "tags": [], "bug_id": 57584, "attachment_id": null, "text": "The following issue requested that the extension functionality of AddHandler be changed.\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=10768\nIt was closed as invalid due to the definition of \"extension\" in httpd.  A filename is interpreted as being able to have _multiple_ extensions.\nSee\nhttp://httpd.apache.org/docs/2.2/mod/mod_mime.html#multipleext\nand\nhttp://httpd.apache.org/docs/current/mod/directive-dict.html\nunder \"extension\".\n\nThis is a frequent cause of problems when the AddHandler etc. directives are used.  I would like to suggest a couple possible remedies to assist users in more quickly understanding httpd's behavior.\n\n1. Don't use the word \"extension\" in the AddHandler etc. documentation.  Instead, use a word like \"substring\", which is more accurate, and also more intuitively in line with readers' expectations.\n2. Alternatively, add a brief note in the directive documentation mentioning the unusual definition of extension used in httpd, and link to further details.\n\nI would also like to suggest that the section describing files with multiple extensions, at\nhttp://httpd.apache.org/docs/2.2/mod/mod_mime.html#multipleext\ninclude a note about the suggested solution with FilesMatch.  It could be helpful to note that that example will match (potentially unexpectedly) the hidden file \".cgi\".", "id": 181057, "time": "2015-02-13T17:52:14Z", "creator": "apache@chrispennello.com", "creation_time": "2015-02-13T17:52:14Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rbowen@apache.org", "text": "Fixed the FilesMatch so that it no longer matches the file '.cgi' in r1673954", "id": 182407, "time": "2015-04-15T20:57:34Z", "bug_id": 57584, "creation_time": "2015-04-15T20:57:34Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "rbowen@apache.org", "attachment_id": null, "id": 182408, "time": "2015-04-15T21:02:41Z", "bug_id": 57584, "creation_time": "2015-04-15T21:02:41Z", "is_private": false, "text": "I am tempted to close this \"wontfix\", but I'll seek input from other folks before doing so.\n\nThe use of 'extension' is consistent with how it is used in the computing world at large, and, in particular, in the *nix world. What we're talking about is called a file extension, and files can have multiple file extensions.\n\nwhatever.tar.gz files, for example, have been around forever, and tar and gz are talked about as the two file extensions.\n\nUsing 'substring' would be using a new term for an old concept.\n\nThis is not an \"unusual definition of extension\". It's standard."}, {"count": 3, "attachment_id": null, "bug_id": 57584, "text": "http://httpd.apache.org/docs/2.4/mod/mod_mime.html#multipleext seems clear to me.\n\nThe httpd documentation is aimed at technically minded people rather than end users of websites.\n\nIn >6 years of commercial technical support I helped some webmasters who didn't realise that files could have more than one extension. When discussing it, that was the phrasing: \u201cmore than one extension\u201d.\n\nFilenames certainly can have more than one *substring*. I feel that \u201cstring\u201d, and hence \u201csubstring\u201d, is actually less clear than the term \u201cextension\u201d \u2013 the latter at least suggest that it's something that goes onto the end.", "id": 182410, "time": "2015-04-15T21:10:46Z", "creator": "isoma@c8h10n4o2.org.uk", "creation_time": "2015-04-15T21:10:46Z", "tags": [], "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 57584, "text": "An alternative also widely in use is \"suffix\".  Does Guillaume d'Occam like that?", "id": 182411, "time": "2015-04-15T21:12:29Z", "creator": "coar@apache.org", "creation_time": "2015-04-15T21:12:29Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "creator": "sebastian@pipping.org", "text": "(In reply to Rich Bowen from comment #2)\n> whatever.tar.gz files, for example, have been around forever, and tar and gz\n> are talked about as the two file extensions.\n\nOne could also say that \"(.)tar.gz\" or \"(.)gz\" is the extension of that file.  it's a matter of view and a matter of past exposure.\nMost software cares about a single file extension only (file browsers, image viewers, ..) and unlike users of Linux who are familiar with .tar.gz, Windows users may not have seen any files with multiple extensions before.  Other than .en.html and .tar.gz, is there anything common with multiple extension even that users could have been run into before meeting Apache?", "id": 182412, "time": "2015-04-15T21:28:00Z", "bug_id": 57584, "creation_time": "2015-04-15T21:28:00Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "sebastian@pipping.org", "attachment_id": null, "id": 182413, "time": "2015-04-15T21:37:05Z", "bug_id": 57584, "creation_time": "2015-04-15T21:37:05Z", "is_private": false, "text": "(In reply to Rich Bowen from comment #1)\n> Fixed the FilesMatch so that it no longer matches the file '.cgi' in r1673954\n\nIs that change meant to be about hidden file in general?  I would expect something like \"^[^.].*\\.cgi$\" (or \"^[^/.].*\\.cgi$\"?) rather than \".+\\.cgi$\" in that case.  Right now, would '...cgi' still be hidden and executed?"}, {"count": 7, "tags": [], "creator": "rbowen@apache.org", "text": "Well, yes, that's true, if ... improbable.\n\nI'm always reluctant to make simple docs into regex soup for the sake of a bizarre edge case like \"...cgi\"  Do you feel that's really a common enough scenario that we should care? Or is this perceived as a security consideration?", "id": 182430, "time": "2015-04-16T15:38:11Z", "bug_id": 57584, "creation_time": "2015-04-16T15:38:11Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "rbowen@apache.org", "text": "I've extended this to [^.]+\\.cgi in r1674099\n\nDoes that address the concern?", "id": 182431, "time": "2015-04-16T15:47:18Z", "bug_id": 57584, "creation_time": "2015-04-16T15:47:18Z", "is_private": false, "attachment_id": null}, {"count": 9, "text": "(In reply to Rich Bowen from comment #8)\n> I've extended this to [^.]+\\.cgi in r1674099\n> \n> Does that address the concern?\n\nIt should protect against execution of \n* hidden files and\n* files with other extensions before the final \".cgi\" extension.\n\nDoesn't sound too bad.", "bug_id": 57584, "attachment_id": null, "id": 182490, "time": "2015-04-19T20:22:01Z", "creator": "sebastian@pipping.org", "creation_time": "2015-04-19T20:22:01Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "creator": "rbowen@apache.org", "attachment_id": null, "id": 182495, "time": "2015-04-20T12:51:52Z", "bug_id": 57584, "creation_time": "2015-04-20T12:51:52Z", "is_private": false, "text": "Thanks. Closing."}, {"count": 11, "text": "(In reply to Rich Bowen from comment #10)\n> Thanks. Closing.\n\nI'm actually not sure if the core of this bug is fixed yet.\nThe core as shown by the title is that the documentation on \"extensions\" could be considered unintuitive to larger groups of the user base.\nLooking at <https://httpd.apache.org/docs/current/mod/directive-dict.html> for instance, it still reads\n\n  \"extension: In general, this is the part of the filename which follows\n  the last dot. [..]\"\n\nbefore it goes on to (re)define what an extension is to Apache.\nWith that first sentence and previous background, it would make perfect sense to stop reading after that first sentence.  My vote for more changes in that area.\n\nChris, where are you? :)", "bug_id": 57584, "attachment_id": null, "id": 182496, "time": "2015-04-20T12:59:34Z", "creator": "sebastian@pipping.org", "creation_time": "2015-04-20T12:59:34Z", "tags": [], "is_private": false}, {"count": 12, "attachment_id": null, "bug_id": 57584, "text": "(In reply to sebastian from comment #11)\n> Chris, where are you? :)\nHello.  :]\n\n> (In reply to Rich Bowen from comment #10)\n> > Thanks. Closing.\n> \n> I'm actually not sure if the core of this bug is fixed yet.\n> The core as shown by the title is that the documentation on \"extensions\"\n> could be considered unintuitive to larger groups of the user base.\n> Looking at <https://httpd.apache.org/docs/current/mod/directive-dict.html>\n> for instance, it still reads\n> \n>   \"extension: In general, this is the part of the filename which follows\n>   the last dot. [..]\"\n> \n> before it goes on to (re)define what an extension is to Apache.\n> With that first sentence and previous background, it would make perfect\n> sense to stop reading after that first sentence.  My vote for more changes\n> in that area.\nI'm generally agreed.  I tried to provide two actionable recommendations given that it doesn't sound like the behavior itself will change any time soon.  (See the first link I mentioned in the OP.)\n\nIf we're intent on continuing to use the word \"extension\" in the AddHandler, etc. documentation, then I suggest adding a note in the AddHandler, etc. directive documentation regarding the unusual definition used in Apache, and link to further details.  Furthermore, it might be helpful to provide an example that doesn't lead to as many unexpected consequences when naively (as is frequently the case) followed.", "id": 182501, "time": "2015-04-20T17:03:13Z", "creator": "apache@chrispennello.com", "creation_time": "2015-04-20T17:03:13Z", "tags": [], "is_private": false}]