[{"attachment_id": null, "tags": [], "creator": "bhegr@netdelivery.com", "text": "I've read in the user forums that a workaround for the Out of Memory exception \nthat crops up with Javac is to use 'fork=true' in the task call.\n\nOur build process does some pretty heavy jar/ear/war building, and the Java \nprocess that runs Ant eats up a lot of memory when I do this. I've bumped up \nthe initial and maximum memory heap but the OOM still pops up.\n\nIt would be a helpful enhancement to get the memory cleaned up after a zip \ntask, or (better yet) to have a fork option on the zip task so that the \njar/war/ear tasks that inherit from zip also get the benefit of forking.\n\nI think the workaround I'll try will be to explicitly call the Jar executable \nfrom an exec or apply task.", "count": 0, "id": 25356, "time": "2002-10-30T01:28:40Z", "bug_id": 14078, "creation_time": "2002-10-30T01:28:40Z", "is_private": false}, {"count": 1, "tags": [], "text": "ping, is this still an issue?", "is_private": false, "id": 75461, "creation_time": "2005-05-26T23:37:56Z", "time": "2005-05-26T23:37:56Z", "creator": "mbenson@apache.org", "bug_id": 14078, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "mbenson@apache.org", "is_private": false, "count": 2, "id": 90684, "time": "2006-06-27T21:12:04Z", "bug_id": 14078, "creation_time": "2006-06-27T21:12:04Z", "text": "apparently no longer an issue."}]