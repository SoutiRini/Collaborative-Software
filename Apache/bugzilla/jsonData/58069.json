[{"count": 0, "tags": [], "bug_id": 58069, "text": "The change to Biff8RC4 to use a ByteBuffer broke xorShort for unsigned short values.\n\nI noticed this when the loading of a protected XLS file that contained a org.apache.poi.hssf.record.pivottable.ViewFieldsRecord , which uses 0xFFFF as a \"not present\" value.\n\n3.11+ return -1 rather than 0xFFFF causing the loading of this workbook to fail.\n\nThe following patch fixes the loading of my file (and doesn't cause anything else to fail going by 'ant test' return code)\n\n        public int xorShort(int rawVal) {\n-           _buffer.putShort(0, (short)rawVal);\n+           _buffer.putShort(0, (short) (rawVal & 0xffff));\n            xor(_buffer.array(), 0, 2);\n-               return _buffer.getShort(0);\n+               return _buffer.getShort(0) & 0xffff;\n        }", "id": 183695, "time": "2015-06-22T18:28:34Z", "creator": "proyal@apache.org", "creation_time": "2015-06-22T18:28:34Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "kiwiwings@apache.org", "attachment_id": null, "id": 183697, "creation_time": "2015-06-22T20:11:29Z", "time": "2015-06-22T20:11:29Z", "bug_id": 58069, "text": "Instead of turning a short into an unsigned short on the last line, we should provide a writeUShort method in LittleEndianOutput and change the serialize method in ViewFieldsRecord.\n\nIf you like, you can provide your test file, so we can validate it as kind of integration test.\nOtherwise I will create a simple test case which test reading and writing into a rc4 stream with various datatypes ...\n\nAndi", "is_private": false}, {"count": 2, "tags": [], "creator": "proyal@apache.org", "attachment_id": null, "text": "Unfortunately I can't provide my input file since it is from a third party vendor I am trying to interop with.\n\nI experienced the failure in loading the ViewFieldsRecord, via LittleEndianInput.readUShort", "id": 183698, "time": "2015-06-22T20:43:02Z", "bug_id": 58069, "creation_time": "2015-06-22T20:43:02Z", "is_private": false}, {"count": 3, "tags": [], "creator": "kiwiwings@apache.org", "attachment_id": 32850, "text": "Created attachment 32850\nPatch for Biff8DecryptingStream\n\nYou are right regarding the reading, readUShort - first we haven't implemented writing for RC4-HSSF yet and I guess even when writing a broader datatype in a smaller, the sign\ndoesn't matter, e.g. 200 (int) = 0x000000C8 becomes -56 (byte) and needs to be converted\nback to unsigned when it's read ...\n\nIs the attached patch for Biff8DecryptingStream working for you?\n\nAndi.", "id": 183701, "time": "2015-06-22T22:54:59Z", "bug_id": 58069, "creation_time": "2015-06-22T22:54:59Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 58069, "text": "Your patch fixes loading of my file.\n\nThanks!", "id": 183708, "time": "2015-06-23T13:16:12Z", "creator": "proyal@apache.org", "creation_time": "2015-06-23T13:16:12Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "kiwiwings@apache.org", "attachment_id": null, "text": "Fixed with r1687146\n\nThank you for bringing this to our attention and testing the patch.\n\nAndi.", "id": 183721, "time": "2015-06-23T23:07:35Z", "bug_id": 58069, "creation_time": "2015-06-23T23:07:35Z", "is_private": false}]