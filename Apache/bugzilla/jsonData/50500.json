[{"count": 0, "tags": [], "bug_id": 50500, "attachment_id": null, "text": "According to the EL spec ch.1.7.1,\nthe A+B,A-B,A*B expressions when A is a \"String containing ., e, or E\" and B is a BigInteger have to be evaluated as follows:\n\n\"coerce both A and B to BigDecimal and apply operator\"\n\nThe actual implementation though, instead of coercing A as String -> BigDecimal, does two coercions:  String -> Double -> BigDecimal, which produces a different result.\n\nTo reproduce, run the following JSP page:\n<%\n  pageContext.setAttribute(\"a\", \"1.1\");\n  pageContext.setAttribute(\"b\", new java.math.BigInteger(\"1000000000000000000000\"));\n  // \"c\" is used to explicitly coerce arguments to BigDecimal\n  pageContext.setAttribute(\"c\", new java.math.BigDecimal(\"0\"));\n%>${a + b}<br>\n${(a+c) + (b+c)}<br>\n${a - b}<br>\n${(a+c) - (b+c)}<br>\n${a * b}<br>\n${(a+c) * (b+c)}\n\nActual result:\n1000000000000000000001.100000000000000088817841970012523233890533447265625\n1000000000000000000001.1\n-999999999999999999998.899999999999999911182158029987476766109466552734375\n-999999999999999999998.9\n1100000000000000088817.841970012523233890533447265625000000000000000000000\n1100000000000000000000.0 \n\nExpected result:\n1000000000000000000001.1\n1000000000000000000001.1\n-999999999999999999998.9\n-999999999999999999998.9\n1100000000000000000000.0 \n1100000000000000000000.0 \n\nI think it is a minor issue, though.\nThis is reproducible in the current tc6.0.x as well.\n\nMaybe o.a.el.lang.ELArithmetic#add(Object, Object) should delegate to BIGDECIMAL instead of DOUBLE with these types of arguments.", "id": 142850, "time": "2010-12-19T19:00:53Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-12-19T19:00:53Z", "is_private": false}, {"count": 1, "tags": [], "creator": "brian.weisleder@gmail.com", "attachment_id": 26429, "id": 142872, "time": "2010-12-20T21:12:37Z", "bug_id": 50500, "creation_time": "2010-12-20T21:12:37Z", "is_private": false, "text": "Created attachment 26429\nPatch to check for a BigInteger parameter before coercing to a double\n\nThis patch will correctly handle cases where a string, double, or float is added, subtracted, or multiplied by a BigInteger. It does this by checking to see if one of the parameters of a method call is a BigInteger if it knows the other is a float, double, or string containing '.', 'e' or 'E'"}, {"count": 2, "tags": [], "creator": "brian.weisleder@gmail.com", "attachment_id": 26430, "id": 142873, "time": "2010-12-20T21:13:55Z", "bug_id": 50500, "creation_time": "2010-12-20T21:13:55Z", "is_private": false, "text": "Created attachment 26430\nELArithmetic test case"}, {"count": 3, "tags": [], "bug_id": 50500, "attachment_id": null, "text": "Thanks for the patches. I applied them (with some minor alterations after reviewing the spec) to 7.0.x and they will be included in 7.0.6 onwards. I also proposed back-porting the changes to 6.0.x.\n\nSince this is now fixed in 7.0.x, I'm moving this issue to 6.0.x", "id": 143049, "time": "2011-01-04T09:25:23Z", "creator": "markt@apache.org", "creation_time": "2011-01-04T09:25:23Z", "is_private": false}, {"count": 4, "tags": [], "text": "Fixed in 6.0.x and will be included in 6.0.30 onwards.", "is_private": false, "id": 143186, "creator": "markt@apache.org", "time": "2011-01-07T13:43:55Z", "bug_id": 50500, "creation_time": "2011-01-07T13:43:55Z", "attachment_id": null}]