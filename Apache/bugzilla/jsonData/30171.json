[{"count": 0, "tags": [], "text": "<VirtualHost 192.168.1.3:55000>\n ServerName mail.someDomain.com:55000\n\n RewriteEngine on\n RewriteRule ^/(.*)     http://www.apple.com/ [L,R]\n\n</VirtualHost>\n\n\nBehaviour for SSL and non-SSL access is as follows:\n1. https://mail.someDomain.com:55000/\nImmediately displays the home page of www.apple.com.\n\n2. http://mail.someDomain.com:55000/\nDisplays following 302 Found page:\nFound\n\n    The document has moved here. \n\n    Apache/2.0.50 (Unix) mod_ssl/2.0.50 OpenSSL/0.9.7d Server at\nmail.someDomain.com Port 55000\n\n\nThe word 'here' is linked to http://www.apple.com/.\n\nIn above step 2, when it is accessing under non-SSL, it should also\nautomatically redirect to the given URI.\n\nI use Apache 2.0.50 on Intel PIII server running Linux 2.6.X.", "attachment_id": null, "id": 60764, "creation_time": "2004-07-18T06:33:58Z", "time": "2004-07-18T06:33:58Z", "creator": "sagaralists@yahoo.com", "bug_id": 30171, "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 30171, "is_private": false, "id": 60765, "time": "2004-07-18T13:50:33Z", "creator": "trawick@apache.org", "creation_time": "2004-07-18T13:50:33Z", "tags": [], "text": "Add the value of the Location header field to your access log format\n(\"%{Location}o\") and see if the HTTP response code and the Location header field\nare the same for both test cases.\n\nI anticipate that you'll find that Apache is returning the same status and\nLocation to the browser in both cases, and that the unanticipated behavior is\ndue to a browser issue when changing the protocol (http vs. https) across a\nredirect."}, {"count": 2, "tags": [], "creator": "sagaralists@yahoo.com", "text": "The access log shows as follows:\n\n[18/Jul/2004:22:45:50 +0800] 192.168.1.2 TLSv1 DHE-RSA-AES256-SHA \"GET /\nHTTP/1.1\" 302 318 \"http://www.apple.com/\"\n\n[18/Jul/2004:22:46:44 +0800] 192.168.1.2 - - \"GET /\" 302 318 \"http://www.apple.com/\"\n[18/Jul/2004:22:46:44 +0800] 192.168.1.2 - - \"GET /\" 302 318 \"http://www.apple.com/\"\n\nYes, status code and location is the same in both cases.\n\nPlease note:\nhttps://mail.someDomain.com:55000/ logs one line\n\nhttp://mail.kandy.com:55000/ logs two lines\n\nI changed the RewriteRule to \"https://mail.otherDomain.com/\". The result is\nstill the same. The non-SSL (http://) does not auto redirect, https:// works.\nTherefore, it shows it's not due to changing the protocol across a\nredirect.", "id": 60770, "time": "2004-07-18T14:56:35Z", "bug_id": 30171, "creation_time": "2004-07-18T14:56:35Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 30171, "is_private": false, "id": 60774, "time": "2004-07-18T15:38:48Z", "creator": "trawick@apache.org", "creation_time": "2004-07-18T15:38:48Z", "tags": [], "text": "In your first test, the consistent 302 status code and http://www.apple.com for\nLocation shows that Apache is returning the correct information to the browser.\n (IOW, Apache is doing the right thing.)  I see no RFC 2616 restriction from\nchanging the protocol across a redirect, so this is an Internet Explorer issue.\n\nYou pointed out that the non-SSL test from the browser resulted in two access\nlog lines; that means that the browser issued the request twice.\n\nI'm confused about your statement \"Therefore, it shows it's not due to changing\nthe protocol across a redirect.\"  As far as I can tell, available data is\nconsistent with the hypothesis that the unexpected browser behavior IS due to\nchanging the protocol across a redirect:\n\na) when you redirect to http, it works when the original protocol is http and\nfails when original protocol is https; i.e., same protocol okay, changed\nprotocol not okay\n\nb) when you redirect to https (your latest test), it works when the original\nprotocol is https and fails when the original protocol is http; i.e., same\nprotocol okay, changed protocol not okay\n\nI suggest asking in user support mailing lists or newsgroups (see\nhttp://httpd.apache.org/lists.html#http-users) what has to be done to convince\nInternet Explorer to perform the automatic redirection, or if this is a\npermanent restriction.  Your logging of status codes and Location header field\nvalues shows that Apache is sending it the appropriate information."}]