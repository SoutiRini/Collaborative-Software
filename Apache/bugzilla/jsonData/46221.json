[{"count": 0, "tags": [], "text": "Tomcat is leaking a few references to the WebappClassLoader instance when the application is stopped and contains commons-logging and log4j packages.\n\nThe attached zip file is a very simple test case. I use Yourkit Java Profiler to find the remaining references.\n\nThe leak is due to loggers not released by the various containers that are alive until all the webapp is completely unloaded which does happen in my case (start,stop,start,stop...).\n\nThe attached patch applies against tomcat 5.5.27 and solves the problem. I am not sure about the its righteousness, especially for the Valve stuff, but I guess it is a good start.", "is_private": false, "id": 122548, "creator": "debossoreille@idm.fr", "time": "2008-11-17T04:17:39Z", "bug_id": 46221, "creation_time": "2008-11-17T04:17:39Z", "attachment_id": null}, {"attachment_id": 22880, "tags": [], "bug_id": 46221, "is_private": false, "count": 1, "id": 122549, "time": "2008-11-17T04:20:27Z", "creator": "debossoreille@idm.fr", "creation_time": "2008-11-17T04:20:27Z", "text": "Created attachment 22880\nSimple test case\n\nUse maven 2 to build it, a compiled war cannot be attached because of its size."}, {"count": 2, "tags": [], "text": "Created attachment 22881\nPatch which solves the problem", "attachment_id": 22881, "bug_id": 46221, "id": 122550, "time": "2008-11-17T04:21:32Z", "creator": "debossoreille@idm.fr", "creation_time": "2008-11-17T04:21:32Z", "is_private": false}, {"count": 3, "tags": [], "text": "I am not sure that your patch fix the bug really. I have test it with deploy/undeploy via Manager API.\nThe result is after a while I got a OutOfMemory Exception a perm heap is full.\n\nOne thing that I change is deregister containerLog at all Context Valves at StandardPipeline.\n\nStandardPipeline.java\nL 273\n       while (current != null) {\n            if (current instanceof Lifecycle)\n                ((Lifecycle) current).stop();\n            unregisterValve(current);\n            if(current instanceof ValveBase)\n                ((ValveBase)current).releaseContainerLog();\n        \tcurrent = current.getNext();\n        }\n\nMore hints?\n\nPeter\n\n", "attachment_id": null, "bug_id": 46221, "id": 123036, "time": "2008-12-03T03:35:39Z", "creator": "pr@objektpark.de", "creation_time": "2008-12-03T03:35:39Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 46221, "is_private": false, "id": 123040, "time": "2008-12-03T06:27:36Z", "creator": "debossoreille@idm.fr", "creation_time": "2008-12-03T06:27:36Z", "tags": [], "text": "I am also using the manager via the web interface but with the start/stop links of the webapp.\n\nI am a little bit confused by the plumbing of tomcat's objects, that is why I do not always see what is involved. However it seems that your patch in StandardPipeline.java is better than what I did in StandardContext.java for the same purpose, because it handles more instances than those created by the StandardContext.\n\nMy test showed that 3 valves are concerned by the releaseContainerLog calls. But maybe not all of them have a reference on the WebappClassLoader (I did not check). The valves I see (System.err.println(current);) are:\n\n    - org.apache.catalina.core.StandardWrapperValve[jsp]\n    - org.apache.catalina.core.StandardWrapperValve[default]\n    - org.apache.catalina.core.StandardContextValve[/logging-leak]\n\nI suppose my patch handled only the last one.\n\nMoreover, you may have more valves than I have. This would explain why my patch did not work for you (I guess).\n\nI created the patch I last used so that you can review it (I will add it as a new attachement)."}, {"count": 5, "tags": [], "bug_id": 46221, "attachment_id": 22985, "is_private": false, "id": 123041, "time": "2008-12-03T06:30:03Z", "creator": "debossoreille@idm.fr", "creation_time": "2008-12-03T06:30:03Z", "text": "Created attachment 22985\nSecond version of the patch"}, {"count": 6, "tags": [], "text": "Using the provided test case I don't see any memory leaks. I do see various references retained after the web application has been stopped but before it is restarted / undeployed.\n\nA leak would be when reloads lead to an increase in the number of instances of a class, typically the webappclassloader, and I don't see that.\n\nYes, we could do a better job of cleaning up the logger references when the web application stops but that is more an enhancement than a bug.\n\nI'll set up a separate test for multiple deploy/undeploy to see if I can create the issue Peter saw.", "attachment_id": null, "id": 123052, "creator": "markt@apache.org", "time": "2008-12-03T10:44:20Z", "bug_id": 46221, "creation_time": "2008-12-03T10:44:20Z", "is_private": false}, {"count": 7, "tags": [], "text": "I've done some more testing with several hundred undeploy/deploy cycles and several hundred reload cycles of the test application provided in this report and I do not see any memory leak.\n\nI am changing the status of this issue to enhancement to reflect that clean-up could occur early when a web app is stopped.", "is_private": false, "id": 123062, "creator": "markt@apache.org", "time": "2008-12-03T14:05:24Z", "bug_id": 46221, "creation_time": "2008-12-03T14:05:24Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 46221, "is_private": false, "text": "Mark, yo're probably right when you say it is more an enhancement than a leak. I could not reproduce it any more. It seems that sometimes the VM is more eager to unload its classes. Some other times it requires dozens of start/stop to finally unload the classes, even with forced GC calls.\n\nHowever Peter pointed out a real leak which I was not able to reproduce too. Can some objects be initialized in a different order that would explain that kind of behavior?", "id": 123077, "time": "2008-12-04T05:24:28Z", "creator": "debossoreille@idm.fr", "creation_time": "2008-12-04T05:24:28Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "Today I was trying to identify memory leaks in our webapp restart process and I encountered this problem (the logger instance of StandardContext keeps a reference to a logger that is loaded by the webapp class loader, so this can't be garbage collected).\nI gave a quick look to the attached patch and it seems to actually solve my problem.\nThis is clearly a bug (not an enhancement!) because resources are not cleared correctly by org.apache.catalina.core.StandardContext.stop().\n\nI hope this will be fixed soon...\n\nMauro.", "is_private": false, "id": 123951, "creator": "mauromol@tiscali.it", "time": "2009-01-12T03:41:14Z", "bug_id": 46221, "creation_time": "2009-01-12T03:41:14Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 46221, "attachment_id": null, "id": 123953, "time": "2009-01-12T03:49:00Z", "creator": "mauromol@tiscali.it", "creation_time": "2009-01-12T03:49:00Z", "is_private": false, "text": "After giving a quick look at Tomcat6 sources, this problem seems to affect that version of Tomcat6 too.\n\nMauro."}, {"count": 11, "tags": [], "text": "I cannot reproduce the problem with tc 7.0.14 nor 6.0.29. Is it really worth fixing this in tc 5 ?", "attachment_id": null, "id": 146521, "creator": "slaurent@apache.org", "time": "2011-05-21T21:46:36Z", "bug_id": 46221, "creation_time": "2011-05-21T21:46:36Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 46221, "attachment_id": null, "id": 147376, "time": "2011-06-22T18:51:06Z", "creator": "markt@apache.org", "creation_time": "2011-06-22T18:51:06Z", "is_private": false, "text": "My original testing was against Tomcat 5.5.x and there was no leak.\n\nGiven that the logger may still be used after the web application has stopped (e.g. to log issues during undeployment) I don't - on reflection - see a need for this enhancement."}, {"count": 13, "tags": [], "text": "(In reply to comment #12)\n> My original testing was against Tomcat 5.5.x and there was no leak.\n\nWell, Tomcat 5.5.x really had the leak! My comment #9 and the attached patch explain and demonstrate this. The fact you don't want to fix it for 5.5 is another story.\n\nRegarding the latest versions of Tomcat 6.x and 7.x, I didn't have the time and the chance to test.", "attachment_id": null, "id": 147377, "creator": "mauromol@tiscali.it", "time": "2011-06-22T18:57:35Z", "bug_id": 46221, "creation_time": "2011-06-22T18:57:35Z", "is_private": false}]