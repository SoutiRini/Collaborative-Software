[{"count": 0, "tags": [], "text": "When using ${basedir} in replacement, appropriate '/' characters are not \ninserted. Example:\n<project ... basedir=\"..\" ...>\n\n<target name=\"copy\">\n  <copy todir=\"${basedir}/src/to\" file=\"${basedir}/src/from/testfile.xml\"\n        overwrite-\"yes\"\n        />\n</target>\n<target name=\"edit\" depends=\"copy\">\n  <replaceregexp pattern=\"C:/original/pattern\" replace=\"${basedir}/x/y/z\">\n     <fileset file=\"${basedir}/src/to/testfile.xml\"/>\n  </replaceregexp>\n</target>\n</project>\n\nIf this is run from directory 'C:\\projects\\TestBug\\src\\from', the value of \n${basedir} should be \"C:/projects/TestBug/src\", and the replacement should read:\n\"C:/projects/TestBug/src/x/y/z\". Instead, the replacement does \nread: \"C:projectsTestBugsrc/x/y/z\". \n\nCircumvention: Annoying and inelegant, but any property which is fully defined \nwill work ok instead of ${basedir}.  Note that defining basedir explicitly on \nthe project definition also does not work.", "is_private": false, "id": 61517, "creator": "dbd@smart.net", "time": "2004-08-04T05:02:48Z", "bug_id": 30456, "creation_time": "2004-08-04T05:02:48Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 30456, "attachment_id": null, "id": 61523, "time": "2004-08-04T07:44:55Z", "creator": "bodewig@apache.org", "creation_time": "2004-08-04T07:44:55Z", "is_private": false, "text": "Your basedir is not C:/projects/TestBug/src but C:\\projects\\TestBug\\src and\nthe backslashes are special characters for the regexp engine, that's why you\nget the results that you see.  Your replacement pattern would need the \\ characters\nthat are part of the expansion of ${basedir} doubled or turned into forward \nslashes, unfortunately I don't know of an easy way to do that.\n\nWait, <pathconvert>?\n\n<pathconvert property=\"basedir-converted\" dirsep=\"/\">\n  <path>\n    <pathelement location=\".\"/>\n  </path>\n</pathconvert>\n\nshould do."}, {"count": 2, "tags": [], "creator": "stevel@apache.org", "is_private": false, "id": 61526, "creation_time": "2004-08-04T08:14:03Z", "time": "2004-08-04T08:14:03Z", "bug_id": 30456, "text": "I'm marking this as invalid. you have been caught out by quirks of platform\nportability. I believe your code would work as is on unix BTW.\n\n1. If this is run from directory 'C:\\projects\\TestBug\\src\\from', the value of \n${basedir} should be \"C:\\projects\\TestBug\\src\", That is, the directory\nseparators are backslashes, not forward slashes, as they are in the form that is\nmost appropriate to the platform.\n\n2. regexp code treats backslashes specially (see\nhttp://java.sun.com/j2se/1.4.2/docs/api/java/util/regex/Pattern.html) \n\nso the directory separators were turned into backslashes, which then caused the\nregexp engine to treat the following chars as special patterns. At least I think\nthat is it, regexp patterns are complex little beasts.\n\nUse <pathconvert> to turn basedir into a unix-like path before running your\nregexp, and all should be well.", "attachment_id": null}]