[{"count": 0, "tags": [], "bug_id": 57284, "attachment_id": null, "text": "Also happens in 7.0.57 and 8.0.15.\n\nException in thread \"Thread-1\" java.lang.NullPointerException\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:258)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\n        at servlet.thread.ThreadFilter$1.run(ThreadFilter.java:60)\n        at java.lang.Thread.run(Thread.java:745)\n\nComplete (Gradle-based) test here: https://github.com/circlespainter/servlet3-filter-async-test", "id": 179367, "time": "2014-11-29T17:30:15Z", "creator": "fabio@paralleluniverse.co", "creation_time": "2014-11-29T17:30:15Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 57284, "is_private": false, "id": 179520, "creation_time": "2014-12-04T20:09:12Z", "time": "2014-12-04T20:09:12Z", "creator": "markt@apache.org", "text": "My favourite kind of bug fix. One where all I have to do is delete stuff. This will be committed to trunk and back-ported to 8.0.x and 7.0.x when svn returns to read-write:\nhttps://github.com/markt-asf/tomcat/commit/fe5fd7ba6b44dbc7ffad65dc6e906278109e58eb", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57284, "attachment_id": null, "text": "This has been fixed in trunk and in 8.0.x (for 8.0.16 onwards).", "id": 179559, "time": "2014-12-05T18:35:49Z", "creator": "markt@apache.org", "creation_time": "2014-12-05T18:35:49Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 57284, "text": "The stacktrace: you are trying to call  FilterChain.doFilter() from within a runnable ($1)?\n\nIt is wrong and contradicts with chapter 6 (Filters) of the Servlet Specification.\n\n<quote>A Filter and the target servlet or resource at the end\nof the filter chain must execute in the same invocation thread.</quote>\n\nFilterChain.doFilter() cannot be called from a different thread.", "id": 179568, "time": "2014-12-05T22:35:42Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-12-05T22:35:42Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 57284, "text": "The fix has been reverted. Given the text in section 6.2.3, I am resolving this as invalid until such time the Servlet EG clarifies that 6.2.3 does not apply to asycn requests.", "id": 179569, "time": "2014-12-06T00:05:44Z", "creator": "markt@apache.org", "creation_time": "2014-12-06T00:05:44Z", "is_private": false, "attachment_id": null}, {"count": 5, "text": "Yes, indeed Im trying to call from a different thread.\n\nMy apologies for not having checked the spec and for having instead just assumed it should work; my reasoning is that it can be very useful to start async mode in filters (so, early in the request processing chain) rather than in the servlet.\n\nFor example I'm working on several web framework integrations with Quasar (https://github.com/puniverse/quasar), a technology that enables dispatching execution to \"fibers\" (which can be much cheaper than threads). Being able to dispatch potentially expensive filter processing to fiber-based execution contexts would be a good thing (plus it would make async processing more transparent for the framework being integrated).\n\nI think supporting more than the servlet spec mandates is not a bad thing per se, but in case in this circumstance this is not sensible in your opinion, would it be possible at least to throw some exception pointing at the wrong usage?\n\nTIA", "bug_id": 57284, "attachment_id": null, "id": 179601, "time": "2014-12-07T16:26:02Z", "creator": "fabio@paralleluniverse.co", "creation_time": "2014-12-07T16:26:02Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 57284, "attachment_id": null, "text": "FYI : I hope it might help you that AsyncContext.dispatch() mechanism supports FilterChain.", "id": 179855, "time": "2014-12-19T09:00:04Z", "creator": "bluewolf.chung@gmail.com", "creation_time": "2014-12-19T09:00:04Z", "is_private": false}, {"text": "Thanks, yes it dispatches to a whole new processing chain including filters but it will do so in the context of another servlet container thread, so it's not very useful for this specific case of avoiding using threads.", "tags": [], "bug_id": 57284, "attachment_id": null, "count": 7, "id": 179856, "time": "2014-12-19T09:25:25Z", "creator": "fabio@paralleluniverse.co", "creation_time": "2014-12-19T09:25:25Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 57284, "attachment_id": null, "id": 179858, "time": "2014-12-19T09:46:06Z", "creator": "remm@apache.org", "creation_time": "2014-12-19T09:46:06Z", "is_private": false, "text": "Since the discussion is going on in the Servlet EG, and this is used as a reference, I have to mention this makes no sense to me.\n\n- Detaching a filter chain prevents any reuse, its state has to be frozen and thus every invocation would need a new instance\n- This breaks EE (naming, etc, should be available when invoking the Servlet, here obviously it is not going to happen)\n- Async invocations likes this should, well, use async instead (the Servlet API async is under the control of the container, and it can provide its EE environment)\n\nI think it would be better if Tomcat kept deviations from specifications and established behaviors down to a minimum."}, {"count": 9, "tags": [], "creator": "fabio@paralleluniverse.co", "attachment_id": null, "id": 179859, "time": "2014-12-19T09:56:35Z", "bug_id": 57284, "creation_time": "2014-12-19T09:56:35Z", "is_private": false, "text": "I understand your point that there would be several implications. Still the API shape itself doesn't forbid attempting to do such things, so I think it would be better, if reasonably feasible, that such conditions were reported to the developer with at least some indication about them not being allowed."}, {"count": 10, "tags": [], "bug_id": 57284, "attachment_id": null, "id": 179863, "time": "2014-12-19T10:36:30Z", "creator": "remm@apache.org", "creation_time": "2014-12-19T10:36:30Z", "is_private": false, "text": "There is nothing to \"understand\", this has always been 100% clear for everyone and all implementations, and the specification will be clarified. I have no idea how a reasonable developer could actually infer that this behavior was actually allowed."}, {"count": 11, "tags": [], "bug_id": 57284, "text": "Ok, thanks for discussing this anyway.", "id": 179866, "time": "2014-12-19T10:38:46Z", "creator": "fabio@paralleluniverse.co", "creation_time": "2014-12-19T10:38:46Z", "is_private": false, "attachment_id": null}]