[{"count": 0, "text": "Versions:\nant: apache-ant-1.5.3-1\np4 client: all versions\n\nj2sdk:\njava version \"1.4.1\"\nJava(TM) 2 Runtime Environment, Standard Edition (build Blackdown-1.4.1-beta)\nJava HotSpot(TM) Client VM (build Blackdown-1.4.1-beta, mixed mode)\n\nos: Linux ojo 2.4.20-1-686 #1 Sat Mar 22 13:16:21 EST 2003 i686 GNU/Linux\n\n\nProblem:\nRunning an ant build script with the <p4change /> task intermittently fails in\nLinux, but seems to always work under Windows.\n\n\nDetail:\nThe P4Change.getEmptyChangeList() method calls the execP4Command() method with\nan anonymous P4HandlerAdapter(). The command runs the p4 client with \"change -o\"\narguments. Within the execP4Command(), a number of Threads are started.\nSpecifically, this occurs in the P4HandlerAdapter.start() method and these are\nnamed \"output\" and \"error\" and correspond to the stdout and stderror streams\nassociated with the p4 system process. It turns out that the\nstreamHandler.start() method call within Execute.execute() will usually return\nbefore the output and/or error Threads have terminated.\n\nThe result of this is that the P4Change.getEmptyChangeList() method will return\na partial Perforce change specification.\n\nthe execP4Command() method is once again called in\nP4Change.getEmpytChangeList(), but this time with the \"change -i\" arguments. If\nthis process starts with a partical Perforce Change Specification, it will not\nterminate and will simply hang.\n\n\nSolution:\nI was able to guarantee that the output and error thread would terminate by\nadding the following in P4HandlerAdapter.start():\n\noutput.join();\nerror.join();\n\nThis solution, though it works, may not be ideal considering the overall\narchitecture of the Execute class.", "bug_id": 21531, "is_private": false, "id": 40515, "time": "2003-07-11T21:11:40Z", "creator": "christopher@ezln23.com", "creation_time": "2003-07-11T21:11:40Z", "tags": [], "attachment_id": null}, {"count": 1, "tags": [], "creator": "christopher@ezln23.com", "attachment_id": null, "text": "\n\n*** This bug has been marked as a duplicate of 18956 ***", "id": 40534, "time": "2003-07-12T03:46:16Z", "bug_id": 21531, "creation_time": "2003-07-12T03:46:16Z", "is_private": false}]