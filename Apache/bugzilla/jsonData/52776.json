[{"count": 0, "tags": [], "bug_id": 52776, "attachment_id": null, "text": "If a developer captures a JspFragment themselves and calls invoke on it, the JspContext.class attribute in the enclosing pageContext's ELContext is set by the generated JspFragment subclass, but not reset to its original value afterwards. Therefore after invoking a JspContext any EL expressions will be searching the wrong jspContext for attribute values.\n\norg.apache.jasper.compiler.Generator is responsible for creating the JspFragment subclass to represent the compiled fragment. The generatePostamble() method emits generated code to set the JspContext attribute in the ELContext:\n\nout.printil(\"this.jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,this.jspContext);\");\n\nHowever it doesn't later put back the original value.\n\nIf you are using the <jsp:invoke> tag to invoke the fragment (which is undoubtedly what most people are doing) then the code generated by visit(Node.InvokeAction n) in Generator explicitly restores the EL context:\n\nout.printil(\"jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,getJspContext());\");\n\nHowever if you call invoke(Writer) on the JspFragment yourself you don't get that tidy up code.\n\nI suggest the resolution is to have the JspFragment.invoke method tidy up after itself. It \"puts\" the change to the JspContext.class attribute so it should also re\"put\" it. Then there shouldn't be any need to restore the EL context in the generated <jsp:invoke> code.\n\nI have tested this solution successfully.", "id": 154269, "time": "2012-02-27T00:46:22Z", "creator": "karl@xk72.com", "creation_time": "2012-02-27T00:46:22Z", "is_private": false}, {"count": 1, "tags": [], "text": "If you have a working solution, care to provide a patch?", "attachment_id": null, "bug_id": 52776, "id": 154648, "time": "2012-03-07T15:51:15Z", "creator": "markt@apache.org", "creation_time": "2012-03-07T15:51:15Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 52776, "attachment_id": 28437, "id": 154658, "time": "2012-03-07T22:32:19Z", "creator": "karl@xk72.com", "creation_time": "2012-03-07T22:32:19Z", "is_private": false, "text": "Created attachment 28437\nPatch to correct the putting/resetting of the JspContext ELContext attribute\n\nSorry about that, I wasn't 100% sure that the solution was the right way to do it. Specifically that it is appropriate to remove the resetting of the JspContext attribute from the visit(Node.InvokeAction n) method.\n\nHowever the visit(Node.InvokeAction n) doesn't set the JspContext attribute, so it probably makes sense that it doesn't reset it. The set and reset is now in the one place in FragmentHelperClass.generatePostamble()."}, {"count": 3, "tags": [], "text": "Thanks for the patch.\n\nThis has been fixed in trunk and 7.0.x and will be included in 7.0.27 onwards.", "is_private": false, "id": 154738, "creator": "markt@apache.org", "time": "2012-03-09T11:54:50Z", "bug_id": 52776, "creation_time": "2012-03-09T11:54:50Z", "attachment_id": null}]