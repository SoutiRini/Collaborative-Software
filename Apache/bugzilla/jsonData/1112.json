[{"count": 0, "tags": [], "bug_id": 1112, "attachment_id": null, "is_private": false, "id": 1594, "time": "2001-03-26T03:41:51Z", "creator": "Adnan.Music@ssmb.com.au", "creation_time": "2001-03-26T03:41:51Z", "text": "Following call stack demonstrates a bug in Tomcat 3.2.1 where \nContextClassLoader of\nrealRequest gets set for a subrequest. In my case this results in \nClassCastException. \n\ninclude():345, org.apache.tomcat.facade.RequestDispatcherImpl\n\n \t// now it's really strange: we call the wrapper on the subrequest\n\t// for the realRequest ( since the real request will still have the\n\t// original handler/wrapper )\n\tServletWrapper wr=subRequest.getWrapper();\n\tThrowable t = null;\n\tif( wr!=null ) {\n\t    try {\n>>\t\twr.service(realRequest, realResponse);\n\t    } catch (Throwable t1) {\n\t\tt = t1;\n\t    }\n\t}\n\nservice(): 372, org.apache.tomcat.core.ServletWrapper\n>>super.service( req, res );\n\nservice(): 282 org.apache.tomcat.core.Handler\n>>contextM.doPreService( req, res );\n\ndoPreService(): 895 org.apache.tomcat.core.ContextManager\nRequestInterceptor reqI[]= getRequestInterceptors(req);\t\nfor( int i=0; i< reqI.length; i++ ) {\n>>\t    reqI[i].preService( req, res );\n\t}\npreService(): 128 org.apache.tomcat.request.Jdk12Interceptor\n>>fixJDKContextClassLoader(request.getContext());\n\n\n------------------------------------------------------------------\nFIX PROPOSAL:\n\nI didn't go into why realRequest gets passed into service method\nof subrequest ServletWrapper, but subrequest's context needs to \nbe passed up the stack to Jdk12Interceptor.\n\nFollowing stack trace shows how this could be achieved\nIt requires change in couple of methos signatures to accept\nextra parameter - subrequest's context \n\n.....\nservice(): 282 org.apache.tomcat.core.Handler\n>>contextM.doPreService( req, res, context );\n\ndoPreService(): 895 org.apache.tomcat.core.ContextManager\nRequestInterceptor reqI[]= getRequestInterceptors(req);\t\nfor( int i=0; i< reqI.length; i++ ) {\n>>\t    reqI[i].preService( req, res, context );\n\t}\npreService(): 128 org.apache.tomcat.request.Jdk12Interceptor\n>>fixJDKContextClassLoader(context);"}, {"count": 1, "text": "This can happen only if the dispatched request is in a different context\n( if this is not the case - please let me know ). A simpler fix ( i.e with no\nAPI changes ) would be to use the top/parent/child fields in Request ( that are\nsupposed to track the call chain in included servlets).  \n\nThe problem is a bit more compex - inter-context calls are not defined very\nwell, what would happen if you have an attribute created in the calling context?\nAnyway - I made a fix, it'll be available in the next nightly of 3.3. Please\nverify, and if you still have problems please add code to reproduce ( \na war or something like that )\n", "bug_id": 1112, "is_private": false, "id": 1664, "time": "2001-03-31T13:43:14Z", "creator": "cmanolache@yahoo.com", "creation_time": "2001-03-31T13:43:14Z", "tags": [], "attachment_id": null}]