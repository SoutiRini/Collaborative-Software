[{"count": 0, "tags": [], "bug_id": 50618, "attachment_id": null, "id": 143474, "time": "2011-01-19T10:07:05Z", "creator": "moreira@privasphere.com", "creation_time": "2011-01-19T10:07:05Z", "is_private": false, "text": "After upgrading to the newest version of JMeter on SVN (revision 1059949), I noticed that I am getting a stack overflow in the following method GenericController.reInitializeSubController().\n\n    /**\n     * Called to re-initialize a index of controller's elements (Bug 50032)\n     * \n     * @return Sampler\n     */\n    protected Sampler reInitializeSubController() {\n        Sampler returnValue = null;\n        try {\n            TestElement currentElement = getCurrentElement();\n            if (currentElement != null) {\n                if (currentElement instanceof Sampler) {\n                    returnValue = nextIsASampler((Sampler) currentElement);\n                } else { // must be a controller\n                    returnValue = nextIsAController((Controller) currentElement);\n                    reInitializeSubController();\n                }\n            }\n        } catch (NextIsNullException e) {\n        }\n        return returnValue;\n    }\n    \n    The problem happens in this else statement:\n    } else { // must be a controller\n         returnValue = nextIsAController((Controller) currentElement);\n         reInitializeSubController();\n    }\n    \n    For some reason when I execute my script I get to this else statement, and from there on, I am not able to leave it any longer. I have attached my ThreadDump in hope that it helps you somehow.\n     Any suggestions?\n\tLuciana"}, {"count": 1, "tags": [], "text": "Created attachment 26516\nThreadDump with the stack overflow", "is_private": false, "id": 143475, "creation_time": "2011-01-19T10:09:05Z", "time": "2011-01-19T10:09:05Z", "creator": "moreira@privasphere.com", "bug_id": 50618, "attachment_id": 26516}, {"count": 2, "tags": [], "text": "After searching a bit more I found out that this bug was introduced when fixing bug\nBug 50032.\n\nIn the class IfController.java a new line was added by milamber on revision 10215112:\nsuper.reInitializeSubController(); // Bug 50032 - reinitialize current index element for all sub controller\n\nIf I comment this out, everything works out like a charm. I do not know however, what is the solution for Bug50032", "attachment_id": null, "bug_id": 50618, "id": 143478, "time": "2011-01-19T12:20:46Z", "creator": "moreira@privasphere.com", "creation_time": "2011-01-19T12:20:46Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 50618, "attachment_id": null, "id": 143483, "time": "2011-01-19T15:13:11Z", "creator": "milamber@apache.org", "creation_time": "2011-01-19T15:13:11Z", "is_private": false, "text": "Can you provide a test case for this stack overflow?\nThanks"}, {"count": 4, "tags": [], "creator": "moreira@privasphere.com", "attachment_id": null, "text": "Sure. I have attached a simple test case that get's into this condition.", "id": 143491, "time": "2011-01-20T07:31:50Z", "bug_id": 50618, "creation_time": "2011-01-20T07:31:50Z", "is_private": false}, {"count": 5, "tags": [], "text": "Created attachment 26522\nSimple testcase to generate a stack overflow", "attachment_id": 26522, "id": 143492, "creation_time": "2011-01-20T07:32:33Z", "time": "2011-01-20T07:32:33Z", "creator": "moreira@privasphere.com", "bug_id": 50618, "is_private": false}, {"count": 6, "tags": [], "text": "This StackOverflowError isn't come with patch of bug 50032.\nWith your simple testcase, you can have this SOE with the current JMeter 2.4 r961953.\n\nThis SOE comes because the IF Controller always returns false (${accept_request} isn't defines in test plan) and thus there haven't any sampler executed.\n\nYour test case is a special case...\nIf you add a simple sampler (like java sampler) outside the IF Controller (before or after), the SOE is avoided.", "attachment_id": null, "id": 143535, "creation_time": "2011-01-20T20:34:02Z", "time": "2011-01-20T20:34:02Z", "creator": "milamber@apache.org", "bug_id": 50618, "is_private": false}, {"count": 7, "tags": [], "creator": "moreira@privasphere.com", "is_private": false, "text": "I simplified my test case to only point to this bug and ended up cutting important parts it would seem...\nI have created another test case which has an Include Controller and in there we have a Sampler. In this test case we also get the stack overflow.\n\nIn any case, I don't see why we would always need to add a sampler after a If Controller. Can't we have as a last task of a thread group an action executed by a Sampler inside an If Controller? \nUsing a big CSV file I can easily imagine many scenarios where this would be needed. According to a variable in the CSV file we do this additional step or not.", "id": 143540, "time": "2011-01-21T03:45:00Z", "bug_id": 50618, "creation_time": "2011-01-21T03:45:00Z", "attachment_id": null}, {"attachment_id": 26527, "tags": [], "bug_id": 50618, "is_private": false, "count": 8, "id": 143541, "time": "2011-01-21T03:45:54Z", "creator": "moreira@privasphere.com", "creation_time": "2011-01-21T03:45:54Z", "text": "Created attachment 26527\nFile with Include Controller and Sampler"}, {"count": 9, "tags": [], "creator": "moreira@privasphere.com", "is_private": false, "text": "Created attachment 26528\nA simpler task for a include controller", "id": 143542, "time": "2011-01-21T03:46:28Z", "bug_id": 50618, "creation_time": "2011-01-21T03:46:28Z", "attachment_id": 26528}, {"count": 10, "tags": [], "bug_id": 50618, "is_private": false, "text": "Created attachment 26529\nExcluded CSV and user defined variables", "id": 143543, "time": "2011-01-21T05:09:06Z", "creator": "moreira@privasphere.com", "creation_time": "2011-01-21T05:09:06Z", "attachment_id": 26529}, {"count": 11, "tags": [], "text": "The content of attachment 26527 has been deleted by\n    Mark Thomas <markt@apache.org>\nwho provided the following reason:\n\nInadvertent disclosure of sensitive information\n\nThe token used to delete this attachment was generated at 2011-01-21 14:51:02 GMT.", "attachment_id": null, "id": 143554, "creator": "markt@apache.org", "time": "2011-01-21T09:52:32Z", "bug_id": 50618, "creation_time": "2011-01-21T09:52:32Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 50618, "attachment_id": null, "is_private": false, "id": 143589, "time": "2011-01-23T14:23:46Z", "creator": "milamber@apache.org", "creation_time": "2011-01-23T14:23:46Z", "text": "This bug seems very old. It's reproducible since at least version 2.3.4.\nIt seems to link to script with no single sampler, only a Simple Controller/If Controller.\nI need some time for better understand the root cause. (but I don't have the time from tonight to next month...)\nI attached a simple script to reproduce the StackOverFlowError"}, {"count": 13, "tags": [], "bug_id": 50618, "is_private": false, "text": "Created attachment 26539\nSimple test to reproduce error", "id": 143590, "time": "2011-01-23T14:24:43Z", "creator": "milamber@apache.org", "creation_time": "2011-01-23T14:24:43Z", "attachment_id": 26539}, {"count": 14, "tags": [], "bug_id": 50618, "attachment_id": null, "is_private": false, "id": 143952, "time": "2011-02-03T05:41:26Z", "creator": "moreira@privasphere.com", "creation_time": "2011-02-03T05:41:26Z", "text": "I just saw that line 173 in the IfController changed from super.reInitializeSubController() to reInitializeSubController().\n\nEven though this is an advance toward a solution in this bug, it does not yet solve the problem. Unfortunatelly the IfController does not implement this method and we once again end up in the GenericController with the stack overflow.\n\nThis is unfortunate since I have several tests that used to work perfectly and now are out of operation. Is there any plan on fixing this?"}, {"count": 15, "tags": [], "bug_id": 50618, "attachment_id": null, "id": 144006, "time": "2011-02-06T09:44:52Z", "creator": "milamber@apache.org", "creation_time": "2011-02-06T09:44:52Z", "is_private": false, "text": "(In reply to comment #14)\n> I just saw that line 173 in the IfController changed from\n> super.reInitializeSubController() to reInitializeSubController().\n> \n> Even though this is an advance toward a solution in this bug, it does not yet\n> solve the problem. \n\nNo, unfortunately, it is not an advance toward a solution.\n\n> Unfortunatelly the IfController does not implement this\n> method and we once again end up in the GenericController with the stack\n> overflow.\n> \n> This is unfortunate since I have several tests that used to work perfectly and\n> now are out of operation. Is there any plan on fixing this?\n\nWhat is the version of JMeter that works with your tests ?\n\nI will works to fix this bug, I just need some time to find the time to do this work."}, {"count": 16, "tags": [], "bug_id": 50618, "is_private": false, "text": "Hello Milamber,\n\nI just synchronized to revision 1021511 on SVN and run my tests without any issues.\n\nHope this helps.\nLuciana", "id": 144052, "time": "2011-02-08T09:38:03Z", "creator": "moreira@privasphere.com", "creation_time": "2011-02-08T09:38:03Z", "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 50618, "attachment_id": null, "is_private": false, "id": 144237, "time": "2011-02-12T18:21:39Z", "creator": "milamber@apache.org", "creation_time": "2011-02-12T18:21:39Z", "text": "With revision 1021511, I can reproduce stack overflow with the simple test attached to this bug."}, {"attachment_id": null, "tags": [], "bug_id": 50618, "is_private": false, "count": 18, "id": 144355, "time": "2011-02-16T10:33:03Z", "creator": "moreira@privasphere.com", "creation_time": "2011-02-16T10:33:03Z", "text": "Hello Milamber,\n\nI just run your test and it indeed remains with the problem. Nevertheless, in this revision my test case runs with no problem. \n\nIt looks to me that our test cases show 2 different faces of the same problem. Mine had a stack overflow on the IfController, and yours seem to generate this problem in the LoopController.\n\nIn revision 1021511 the problem with the IfController was not yet there, and my test cases did not fall into the category that trigger the issue with the LoopController."}, {"count": 19, "tags": [], "bug_id": 50618, "attachment_id": null, "id": 146668, "time": "2011-05-26T20:38:54Z", "creator": "sebb@apache.org", "creation_time": "2011-05-26T20:38:54Z", "is_private": false, "text": "*** Bug 51272 has been marked as a duplicate of this bug. ***"}, {"count": 20, "tags": [], "bug_id": 50618, "attachment_id": null, "text": "*** Bug 51690 has been marked as a duplicate of this bug. ***", "id": 148728, "time": "2011-08-20T12:05:47Z", "creator": "milamber@apache.org", "creation_time": "2011-08-20T12:05:47Z", "is_private": false}, {"count": 21, "tags": [], "text": "not only the \"if\" controller is concerned by this bug, but also other controllers following a controller (e.g. while controller). \nI found the following workaround: Just ad a \"Test Action\" Sampler between the two concerned controllers and configure it with a pause duration of 1ms.", "is_private": false, "id": 148921, "creator": "c.seeberger@skillpot.com", "time": "2011-08-30T23:58:18Z", "bug_id": 50618, "creation_time": "2011-08-30T23:58:18Z", "attachment_id": null}, {"count": 22, "tags": [], "text": "Created attachment 27478\nFirst patch to catch StackOverFlowError\n\n\n\nThis bug comes from a infinite recursive method. JMeter uses next() method to come down the element tree.\nIf test plan with loops forever (or >2000 loops) contains only a If Controller with children elements, and the IF condition become \"false\", the StackOverFlowError will start.\n\nThe If Controller uses the next() method to provide own feature, if the condition is true, then If Controller next() call super.next() and JMeter calls the first child, if the condition if false, then If Controller next() return null (meaning for JMeter: end of controller).\nThe issue is providing by GenericController and nextIsController() method which come down in tree recursively, and without stop (i.e. return to JMeterThread) if always null is return by a controller.\nWith a unique If Controller which start to return always null, the StackOverFlow is inevitable.\n\n\nA workaround is add a simple sampler like Debug, Test action on the same level of If Controller.\n\nThis first patch is to catch the StackOverFlowError and force JMeter to return on JMeterThread (and ignore the SOF error). It's works with the simple test case (TestSimple.jmx) (first iteration return true and the next return always false)\n\nBut this patch don't work if the If Controller return always false (from iteration 1 to infinite) (to test it, change If condition to  \n\"1\" == \"0\" \n\n@sebb: I would like commit this first patch because it's resolving some case. Are you ok? or any opinion?\nPerhaps, we add an \"known issue\" in documentation?\n\n@all: I spent some hours (day) to find a way to correct this bug. I'm interested by your feedback to help to fix this bug.\n\nThanks", "attachment_id": 27478, "bug_id": 50618, "id": 149129, "time": "2011-09-09T18:18:47Z", "creator": "milamber@apache.org", "creation_time": "2011-09-09T18:18:47Z", "is_private": false}, {"count": 23, "tags": [], "bug_id": 50618, "attachment_id": null, "is_private": false, "id": 149130, "time": "2011-09-09T18:36:23Z", "creator": "sebb@apache.org", "creation_time": "2011-09-09T18:36:23Z", "text": "(In reply to comment #22)\n> Created attachment 27478 [details]\n> First patch to catch StackOverFlowError\n\nPatch looks good, but I would use log.warn rather than log.info."}, {"count": 24, "tags": [], "text": "Hello,\nFor me issue comes from the fact that code in else statement of reInitializeSubController does not change any state, particularly nextIsAController:\nnextIsAController((Controller) currentElement);\nreInitializeSubController();\n\nso starting from there reInitializeSubController will recurse infinitely.\n\nI attach the same scenario I attached on 50032.\n\nRegards\nPhilippe", "is_private": false, "id": 149163, "creator": "p.mouawad@ubik-ingenierie.com", "time": "2011-09-12T07:18:15Z", "bug_id": 50618, "creation_time": "2011-09-12T07:18:15Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "is_private": false, "count": 25, "id": 149164, "time": "2011-09-12T07:29:59Z", "bug_id": 50618, "creation_time": "2011-09-12T07:29:59Z", "text": "(In reply to comment #24)\n> Hello,\n> For me issue comes from the fact that code in else statement of\n> reInitializeSubController does not change any state, particularly\n> nextIsAController:\n> nextIsAController((Controller) currentElement);\n> reInitializeSubController();\n> \n> so starting from there reInitializeSubController will recurse infinitely.\n> \n> I attach the same scenario I attached on 50032.\n> \n> Regards\n> Philippe\n\nPlease ignore this comment, my analysis is wrong."}, {"count": 26, "tags": [], "bug_id": 50618, "attachment_id": null, "text": "Hello,\nPatch may fix the issue but don't you think it can introduce a big performance cost when it occurs ?\n\n\n\nMilamber can you explain a little more the reInitializeSubController that fixed the 50032, maybe it could help us help you.\n\n\nRegards\nPhilippe", "id": 149165, "time": "2011-09-12T07:51:34Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-12T07:51:34Z", "is_private": false}, {"count": 27, "tags": [], "bug_id": 50618, "attachment_id": null, "id": 149166, "time": "2011-09-12T08:02:29Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-12T08:02:29Z", "is_private": false, "text": "Again,\nAnd a little complement to what I said about catching StackOverflowError:\n\nAn Error is a subclass of Throwable that indicates serious problems that a reasonable application should not try to catch. Most such errors are abnormal conditions. The ThreadDeath error, though a \"normal\" condition, is also a subclass of Error because most applications should not try to catch it. A method is not required to declare in its throws clause any subclasses of Error that might be thrown during the execution of the method but not caught, since these errors are abnormal conditions that should never occur.\n\n\nRegards\nPhilippe"}, {"count": 28, "tags": [], "bug_id": 50618, "attachment_id": 27488, "is_private": false, "id": 149168, "time": "2011-09-12T09:52:12Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-09-12T09:52:12Z", "text": "Created attachment 27488\nFix the StackOverFlow\n\nHello,\nHere is my fix proposition.\nI just test that nextIsAController does not return null before executing reInitializeSubController a new time.\n\n\nI tested with my JMX and the JMX in case 50032 and it seems ok.\n\nBut once again I think there is still an issue in 50032 fix because it gives wrong results regarding TransactionController inside IfCOntroller, they will be mentionnned as sampled even if condition is false due to what reInitializeSubController does.\n\nRegards\nPhilippe Mouawad"}, {"count": 29, "tags": [], "bug_id": 50618, "attachment_id": null, "is_private": false, "id": 149197, "time": "2011-09-13T23:42:54Z", "creator": "milamber@apache.org", "creation_time": "2011-09-13T23:42:54Z", "text": "(In reply to comment #28)\n> Created attachment 27488 [details]\n> Fix the StackOverFlow\n> \n\nThis patch fixes only infinite loop (without stack overflow error on jmeter.log). This is a regression from bug 50032.\nSee: https://issues.apache.org/bugzilla/show_bug.cgi?id=50032#c10\n\nSOE already exists with (for example) TestSimple.jmx https://issues.apache.org/bugzilla/attachment.cgi?id=26539"}, {"count": 30, "tags": [], "creator": "milamber@apache.org", "is_private": false, "text": "(In reply to comment #27)\n> Again,\n> And a little complement to what I said about catching StackOverflowError:\n> \n> An Error is a subclass of Throwable that indicates serious problems that a\n> reasonable application should not try to catch. Most such errors are abnormal\n> conditions. The ThreadDeath error, though a \"normal\" condition, is also a\n> subclass of Error because most applications should not try to catch it. A\n> method is not required to declare in its throws clause any subclasses of Error\n> that might be thrown during the execution of the method but not caught, since\n> these errors are abnormal conditions that should never occur.\n> \n> \n> Regards\n> Philippe\n\nWe are in a special case: infinite recursive loop without exit condition when If controller begin to return null (because the condition return false). (Like a branch on a JMeter tree without end - very big branch)\nIt's seems very (very) difficult to solve, a way is to introduce a limit on each call (in recursive method), and test this limit to stop loop. This way is not good for JMeter (introduce a limit for If Controller)\nWith Java, the try catch block is a good way to catch this 'technical' error (the stack is full), and to force JMeter to return on root tree, and start a new turn to fill the stack, etc.\n\nA problem still the test case when If Controller always return false (from first loop). JMeter doesn't count iteration, and start a long running without end...", "id": 149198, "time": "2011-09-14T00:02:12Z", "bug_id": 50618, "creation_time": "2011-09-14T00:02:12Z", "attachment_id": null}, {"count": 31, "tags": [], "text": "(In reply to comment #22)\n> Created attachment 27478 [details]\n> First patch to catch StackOverFlowError\n\n\n\nURL: http://svn.apache.org/viewvc?rev=1170396&view=rev\nLog:\nIf Controller - Catches a StackOverflowError when a condition returns always false (after at least one iteration with return true) See bug 50618\n\nModified:\n    jakarta/jmeter/trunk/src/core/org/apache/jmeter/control/GenericController.java\n    jakarta/jmeter/trunk/xdocs/changes.xml", "is_private": false, "bug_id": 50618, "id": 149199, "time": "2011-09-14T00:10:07Z", "creator": "milamber@apache.org", "creation_time": "2011-09-14T00:10:07Z", "attachment_id": null}, {"count": 32, "tags": [], "creator": "milamber@apache.org", "attachment_id": null, "id": 149220, "time": "2011-09-14T14:42:00Z", "bug_id": 50618, "creation_time": "2011-09-14T14:42:00Z", "is_private": false, "text": "*** Bug 51768 has been marked as a duplicate of this bug. ***"}, {"count": 33, "tags": [], "bug_id": 50618, "attachment_id": null, "id": 149234, "time": "2011-09-14T16:44:52Z", "creator": "milamber@apache.org", "creation_time": "2011-09-14T16:44:52Z", "is_private": false, "text": "URL: http://svn.apache.org/viewvc?rev=1170707&view=rev\nLog:\nAdd two knows issues : bug 50032 and bug 50618\n\nModified:\n    jakarta/jmeter/trunk/xdocs/changes.xml"}, {"count": 34, "tags": [], "text": "(In reply to comment #30)\n> (In reply to comment #27)\n> > Again,\n> > And a little complement to what I said about catching StackOverflowError:\n> > \n> > An Error is a subclass of Throwable that indicates serious problems that a\n> > reasonable application should not try to catch. Most such errors are abnormal\n> > conditions. The ThreadDeath error, though a \"normal\" condition, is also a\n> > subclass of Error because most applications should not try to catch it. A\n> > method is not required to declare in its throws clause any subclasses of Error\n> > that might be thrown during the execution of the method but not caught, since\n> > these errors are abnormal conditions that should never occur.\n> > \n> > \n> > Regards\n> > Philippe\n> \n> We are in a special case: infinite recursive loop without exit condition when\n> If controller begin to return null (because the condition return false). (Like\n> a branch on a JMeter tree without end - very big branch)\n> It's seems very (very) difficult to solve, a way is to introduce a limit on\n> each call (in recursive method), and test this limit to stop loop. This way is\n> not good for JMeter (introduce a limit for If Controller)\n> With Java, the try catch block is a good way to catch this 'technical' error\n> (the stack is full), and to force JMeter to return on root tree, and start a\n> new turn to fill the stack, etc.\n> \n> A problem still the test case when If Controller always return false (from\n> first loop). JMeter doesn't count iteration, and start a long running without\n> end...\n\nIssue seems to be fixed even with always false condition.", "is_private": false, "id": 152453, "creation_time": "2011-12-28T21:47:08Z", "time": "2011-12-28T21:47:08Z", "creator": "p.mouawad@ubik-ingenierie.com", "bug_id": 50618, "attachment_id": null}, {"count": 35, "tags": [], "bug_id": 50618, "attachment_id": null, "text": "As discussed on mailing list, closing issue as this particular one is fixed.\nOpened Bug 52496 for counts number that don't increase in Listeners.", "id": 153008, "time": "2012-01-22T13:13:45Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2012-01-22T13:13:45Z", "is_private": false}]