[{"count": 0, "tags": [], "text": "Overview\n\nUsing the embedded version of TomCat 5.5.9 (in JBoss 4.03SP1 on Solaris 9) we\nhad to integrate our own SSL layer into TomCat, so that the secure connections\ncould be configured in a special/required way. \nTherefore we couldn\u2019t follow the official way of configuring the connectors for\nsecure communication. \nAs a solution the pure Java socket and server socket factories were overridden\nby our own factories where the factorized socket implementation managed all the\nSSL stuff.\n\nProblem description\n\nHowever the above solution worked fine with TomCat we encountered a special problem.\nTomCat offers the mechanism called port redirecting to fulfill the servlet\nspecification chapter SRV.12.8.3:\n\n\"The characteristics of the connection on which the request was received must\nsatisfy at least one of the supported connection types defined by the\nconstraints. If this rule is not satisfied, the container shall reject the\nrequest and redirect it to the HTTPS port.\"\n\nTherefore two connectors were defined: one for secure and an other for insecure\ncommunication, where the insecure was redirected to the secure using the\nconnector\u2019s attribute redirectPort.\n\nAn other servlet specification requirement regarding to programmatic security\nhad to be fulfilled as well:\n\nSRV.4.7 SSL Attributes: \"If a request has been transmitted over a secure\nprotocol, such as HTTPS, this information must be exposed via the isSecure\nmethod of the ServletRequest interface.\"\n\nBased on the above section the methods isSecure() and scheme() always have to\nreturn the proper values.\n\nIn our test case we didn\u2019t configure any certificates nor keys for the secure\nconnector. We tried to access a test servlet which declared its content as\nconfidential via the insecure connector. \n\nBecause the port redirecting mechanism worked the request was forwarded to the\nsecure connector and the isSecure() and scheme() functions returned with values\ndefined for the secure connector in server.xml:\n\nisSecure() -> true\nscheme() -> \u201dhttps\u201d\n\nBased on this, the connection was declared as secure on TomCat level.\nUnfortunately the return values aren\u2019t correct in this case. \nWe had to find a solution to determine the security state of the connections\nbased on the real security characteristic of our own underlying socket layer.\n\nFeature request/Suggestion\n\nIt would be great if TomCat could offer an interface to influence the decision\nwhether the connection is secured or not in case of isSecure() and scheme() methods.\nTherefore the actual decision based on the connector configuration could be\nredefined with our own implementation.\nSimilar to protocol attribute of connectors the implementation class of this\ninterface could be specified as an optional connector attribute.", "attachment_id": null, "bug_id": 44309, "id": 113186, "time": "2008-01-28T06:32:21Z", "creator": "robert.kovacs@siemens.com", "creation_time": "2008-01-28T06:32:21Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 44309, "is_private": false, "text": "Detailed feature request:\n\nIt would be great if TomCat could offer an interface to influence the decision\nwhether the connection is secured or not in case of isSecure() and scheme() methods.\nTherefore the actual decision based on the connector configuration could be\nredefined with our own implementation.\nThe interface could contain a method with an input parameter with type\njava.net.Socket which belongs to the actual connection and it could return\nboolean value indicating that the underlying layer is secured or not based on\nthe socket parameter.\n\nFor example:\n\npackage org.apache.coyote;\n\npublic interface SecurityExtension {\n    \n    public boolean isSecure( java.net.Socket socket )\n\tthrows Exception;\n}\n\nSimilar to protocol attribute of connectors the implementation class of this\ninterface could be specified as an optional connector attribute.\nThe interface method could be invoked in prepareRequest() method of\norg.apache.coyote.http11.Http11Processor.java where the request scheme attribute\ncan be overridden.\n", "id": 113187, "time": "2008-01-28T06:42:31Z", "creator": "robert.kovacs@siemens.com", "creation_time": "2008-01-28T06:42:31Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "There are sufficient hooks available to provide a custom SSL implementation without the change requested here.\n\nI would also add that I recall no similar requests for such a feature from any other user.", "attachment_id": null, "bug_id": 44309, "id": 145730, "time": "2011-04-12T17:35:47Z", "creator": "markt@apache.org", "creation_time": "2011-04-12T17:35:47Z", "is_private": false}]