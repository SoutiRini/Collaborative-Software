[{"text": "Reported by RV-Predict (a dynamic race detector) when running the test suite:\nData race on field org.apache.tomcat.util.net.SocketWrapper.error: {{{\n    Concurrent write in thread T35 (locks held: {})\n ---->  at org.apache.tomcat.util.net.SocketWrapper.setError(SocketWrapper.java:104)\n        at org.apache.coyote.http11.upgrade.Nio2ServletOutputStream$1.failed(Nio2ServletOutputStream.java:67)\n        at org.apache.tomcat.util.net.SecureNio2Channel$4.failed(SecureNio2Channel.java:844)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    T35 is created by T32\n        at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:1010)\n\n    Concurrent write in thread T36 (locks held: {})\n ---->  at org.apache.tomcat.util.net.SocketWrapper.setError(SocketWrapper.java:104)\n        at org.apache.coyote.http11.upgrade.Nio2ServletInputStream$1.failed(Nio2ServletInputStream.java:70)\n        at org.apache.tomcat.util.net.SecureNio2Channel$3.failed(SecureNio2Channel.java:786)\n        at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    T36 is created by T32\n        at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:1010)\n}}} \n\nIn this report, both threads are writing `true` to this field so it's not a big deal. But I am reporting it anyway in case you feel like getError and setError can be in race.", "tags": [], "creator": "yilong.li@runtimeverification.com", "attachment_id": null, "count": 0, "id": 185155, "time": "2015-09-12T16:40:16Z", "bug_id": 58390, "creation_time": "2015-09-12T16:40:16Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 58390, "text": "The flag is only ever used by NIO2 so trunk has been refactored.\n\nThe flag is never read by NIO2 in 8.0.x so there is no issues here.\n\nThe flag was read by NIO in 8.0.x but since that read would always be false the code has been removed. (The same code was removed from trunk).\n\nThe flag is read in trunk and it has been made volatile since it is likely to be read and written in different threads.", "id": 185305, "time": "2015-09-17T09:03:47Z", "creator": "markt@apache.org", "creation_time": "2015-09-17T09:03:47Z", "is_private": false, "attachment_id": null}]