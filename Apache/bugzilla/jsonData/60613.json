[{"count": 0, "tags": [], "bug_id": 60613, "attachment_id": null, "text": "Hello,\n\nI recently upgraded my Tomcat to 8.5.11 and certain JSPs have stopped working since the maximum method/file size error 65535. The stack trace is below:\n\nAn error occurred at line: [362] in the generated java file: [C:\\Fieldglass\\InSite-2017.10\\work\\Catalina\\localhost\\ROOT\\org\\apache\\jsp\\WEB_002dINF\\pages\\buyer\\job_005fposting_005fform_002d3_jsp.java]\nThe code of method _jspService(HttpServletRequest, HttpServletResponse) is exceeding the 65535 bytes limit\n\nStacktrace:\n        at org.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:102)\n        at org.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:212)\n        at org.apache.jasper.compiler.JDTCompiler.generateClass(JDTCompiler.java:457)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:377)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:349)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:333)\n        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:600)\n        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:368)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)\n        at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:726)\n        at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:592)\n\nThe project I have doesn't contain any error/bug that might cause this. Rather than reformatting/refactoring >200 files, I was wondering if you guys would take a look at this and provide some comments on why this is happening.\n\nI have already tried adding the following attributes to %CATALINA_HOME%\\conf\\web.xml\n\nsuppressSmap=true\nmappedFile=False", "id": 196224, "time": "2017-01-20T01:34:45Z", "creator": "manmedia@gmail.com", "creation_time": "2017-01-20T01:34:45Z", "is_private": false}, {"count": 1, "tags": [], "text": "Additional code was added for error handling, which undoubtedly increases the method sizes. It is thus possible that some JSP which was too close to the limit not has an issue.", "is_private": false, "bug_id": 60613, "id": 196234, "time": "2017-01-20T08:36:07Z", "creator": "remm@apache.org", "creation_time": "2017-01-20T08:36:07Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "I can confirm that the issue is prevalent when you have a multipart form built using 2-3 JSP forwards. And my java version is JDK 8 Update 121. Have you guys had the issue with this JDK?", "attachment_id": null, "bug_id": 60613, "id": 196235, "time": "2017-01-20T08:55:01Z", "creator": "manmedia@gmail.com", "creation_time": "2017-01-20T08:55:01Z", "is_private": false}, {"count": 3, "tags": [], "text": "Also found the same problem when downgraded to 8.0.39. Hence, downgrading to 8.0.29. I am not facing the issue anymore with 8.0.29. Could someone please let me know if a bugfix will be done on 8.5.11?", "attachment_id": null, "bug_id": 60613, "id": 196311, "time": "2017-01-23T09:30:23Z", "creator": "manmedia@gmail.com", "creation_time": "2017-01-23T09:30:23Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 60613, "is_private": false, "text": "There is no bug here.\n\nThe code generated for JSPs got longer as additional error handling had to be added to tags. JSps that use a lot of tags and/or were close to the limit are likely to need to be refactored to bring them under the limit.", "id": 196312, "time": "2017-01-23T09:40:34Z", "creator": "markt@apache.org", "creation_time": "2017-01-23T09:40:34Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Thanks - But isn't this going to cause quite a lot of Legacy systems to be broken? Or do you expect developers to use the older versions of Tomcat?", "is_private": false, "id": 196313, "creator": "manmedia@gmail.com", "time": "2017-01-23T09:50:20Z", "bug_id": 60613, "creation_time": "2017-01-23T09:50:20Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 196319, "time": "2017-01-23T12:07:29Z", "bug_id": 60613, "creation_time": "2017-01-23T12:07:29Z", "text": "The users list is the best place to discuss ways to handle problems with overly large methods.\n\nI've taken a quick look at the generated source and I don;t see any obvious ways to reduce the size of the generated method."}, {"count": 7, "tags": [], "bug_id": 60613, "is_private": false, "text": "While the long term advice is still try to restructure the JSP, I've spent time looking more closely at the generated code. I found several potential changes that might reduce the overall size of the _jspService() method but because of compiler optimisations, changes that look like they should reduce the method size, don't always have the expected effect.\n\nI've now implemented the changes that appear to have a positive effect in trunk (9.0.x). With the tag I was testing with (the foo tag from the JSP examples) the number of instances of the tag I could use on a single page were:\n- before the try/finally clean-up fixes - 301\n- after the try/finally clean-up fixes  - 221\n- after clean-up but with optimisations - 292\n\nThe figures will vary from tag to tag. The more attributes a tag has, the greater the effect of the optimisations (the foo tag has three).\n\nI'd like to get some feedback on these changes from end-users (to the dev@ list please) before back-porting them so any feedback you can provide based on testing of the current trunk (9.0.x) would be appreciated.", "id": 196483, "time": "2017-01-27T10:04:19Z", "creator": "markt@apache.org", "creation_time": "2017-01-27T10:04:19Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 60613, "is_private": false, "text": "*** Bug 60653 has been marked as a duplicate of this bug. ***", "id": 196485, "time": "2017-01-27T10:05:44Z", "creator": "markt@apache.org", "creation_time": "2017-01-27T10:05:44Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "One of the optimisations was buggy. Removing it gives:\n- after clean-up but with optimisations - 258\n\nSetting mappedFile to false permits another 10 tags to used.", "is_private": false, "bug_id": 60613, "id": 196493, "time": "2017-01-27T14:51:20Z", "creator": "markt@apache.org", "creation_time": "2017-01-27T14:51:20Z", "attachment_id": null}]