[{"count": 0, "tags": [], "text": "A few weeks ago, I tried to use mod_file_cache which tested under our\npressure test, however I met some strange behaviors. Now I can use ab\nto reproduce it.\n\nI'm using Apache2.2.0 on 4P Xeon(EM64T) and EL4U2 ( 2.6.9-22.ELsmp, 64bit).\n\nApache configuration:\n<IfModule mod_file_cache.c>\nmmapfile /usr/local/apache2/htdocs/index.html        #just cache one file\n</IfModule>\nThreadLimit     600\n<IfModule worker.c>\nStartServers        10\nMaxClients         500000\nServerLimit     5000\nMinSpareThreads      1000\nMaxSpareThreads      2000\nThreadsPerChild     100\nMaxRequestsPerChild  0\nListenBackLog   3000\n</IfModule>\nMaxRequestsPerChild  0\n\nNow I test with \"/usr/local/apache2/bin/ab -n 100000 -c 10\nlocalhost/index.html\", during the tests, some threads segmentation\nfault.\n\nI used gdb to get the backtrace, however looks like these segmentation\nfault will happen in different places. Most are:\n#0  0x0000003d26e2e989 in kill () from /lib64/tls/libc.so.6\n#1  <signal handler called>\n#2  0x00000000006fe818 in ?? ()\n#3  0x000000000042d5fa in ap_rgetline_core (s=0x45007058, n=8192,\nread=0x45007060, r=0x2ac4e2fd28, fold=0, bb=0x2ac4e31248) at\nprotocol.c:222\n#4  0x000000000042dbd8 in ap_get_mime_headers_core (r=0x2ac4e2fd28,\nbb=0x2ac4e31248) at protocol.c:681\n#5  0x000000000042e4b2 in ap_read_request (conn=0x6e86c0) at protocol.c:909\n#6  0x0000000000462540 in ap_process_http_connection (c=0x6e86c0) at\nhttp_core.c:189\n#7  0x0000000000440ac3 in ap_run_process_connection (c=0x6e86c0) at\nconnection.c:43\n#8  0x000000000046d877 in worker_thread (thd=0x63cea8, dummy=Variable\n\"dummy\" is not available.\n) at worker.c:531\n#9  0x0000003d279060aa in start_thread () from /lib64/tls/libpthread.so.0\n#10 0x0000003d26ec5b43 in clone () from /lib64/tls/libc.so.6\n#11 0x0000000000000000 in ?? ()\n\n#0  0x0000003d26e2e989 in kill () from /lib64/tls/libc.so.6\n#1  <signal handler called>\n#2  0x0000000000443668 in add_any_filter_handle (frec=0x5b61a8, ctx=0x0,\nr=0x7257e8, c=0x715990, r_filters=0x725a68, p_filters=0x725a78,\nc_filters=0x715a08)\n   at util_filter.c:330\n#3  0x000000000044390a in ap_add_input_filter_handle (f=Variable \"f\" is not\navailable.\n) at util_filter.c:415\n#4  0x000000000042e639 in ap_read_request (conn=0x715990) at protocol.c:1022\n#5  0x0000000000462540 in ap_process_http_connection (c=0x715990) at\nhttp_core.c:189\n#6  0x0000000000440ac3 in ap_run_process_connection (c=0x715990) at\nconnection.c:43\n#7  0x000000000046d877 in worker_thread (thd=0x63d208, dummy=Variable \"dummy\"\nis not available.\n) at worker.c:531\n#8  0x0000003d279060aa in start_thread () from /lib64/tls/libpthread.so.0\n#9  0x0000003d26ec5b43 in clone () from /lib64/tls/libc.so.6\n#10 0x0000000000000000 in ?? ()\n\n#0  0x0000003d26e2e989 in kill () from /lib64/tls/libc.so.6\n#1  <signal handler called>\n#2  ap_invoke_filter_init (filters=0x2c) at config.c:312\n#3  0x000000000043a6f3 in ap_invoke_handler (r=0x2ac4e02978) at config.c:344\n#4  0x0000000000464bb0 in ap_process_request (r=0x2ac4e02978) at\nhttp_request.c:258\n#5  0x00000000004625cd in ap_process_http_connection (c=0x7138b0) at\nhttp_core.c:171\n#6  0x0000000000440ac3 in ap_run_process_connection (c=0x7138b0) at\nconnection.c:43\n#7  0x000000000046d877 in worker_thread (thd=0x63d598, dummy=Variable \"dummy\"\nis not available.\n) at worker.c:531\n#8  0x0000003d279060aa in start_thread () from /lib64/tls/libpthread.so.0\n#9  0x0000003d26ec5b43 in clone () from /lib64/tls/libc.so.6\n#10 0x0000000000000000 in ?? ()\n\nAre these threads segmentation fault due to over pressure? I also\ntested cachefile directive and without mod_file_cache, both works OK.\n\nAny ideas? Should I submit a bug request?\n\nThx, Xuekun", "is_private": false, "id": 87303, "creator": "xuekun.hu@gmail.com", "time": "2006-03-27T03:11:17Z", "bug_id": 39111, "creation_time": "2006-03-27T03:11:17Z", "attachment_id": null}]