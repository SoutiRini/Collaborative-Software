[{"count": 0, "tags": [], "bug_id": 60895, "text": "Given a XSSF Sheet.\nThen the following code leads to a out.xlsx in which conditional formatting does not work for the created cell A1 (at least not in Excel):\n\n\nXSSFWorkbook wbOut = new XSSFWorkbook(\"C:/out.xlsx\");\nXSSFWorkbook wbIn = new XSSFWorkbook(\"C:/in.xlsx\");\n\nXSSFSheet srcSheet = wbOut.getSheetAt(0);\nXSSFSheet dstSheet = wbIn.getSheetAt(0);\n\nXSSFRow srcRow = srcSheet.getRow(0);\nXSSFRow dstRow = dstSheet.getRow(0);\n\nXSSFCell oldCell = srcRow.getCell(0);\nXSSFCell newCell = dstRow.createCell(0);\n\nMap<String, Object> props = new HashMap<>();\nprops.put(CellUtil.ROTATION, oldCell.getCellStyle().getRotation());\nCellUtil.setCellStyleProperties(newCell, props);\n\n\nThe problem is similar to the one in bug 60845, setCellStyleProperties() creates new fills instead of using the already existing ones:\n\nThat means, the corresponding Fill for A1 is now:\n\n<fill>\n  <patternFill>\n    <fgColor indexed=\"64\"/>\n    <bgColor indexed=\"64\"/>\n  </patternFill>\n</fill>\n\ninstead of the default one:\n\n<fill>\n  <patternFill patternType=\"none\"/>\n</fill>\n\n---\n\nA possible solution could be:\n1) handle \"indexed=\"64\" as \"none\"/null, since 64 is the value for AUTOMATIC/NONE in the getFormatProperties/setFormatProperties functions\n2) create a new derived CellUtil for XSSF, since many other things (like XSSFColors) don't work too", "id": 197860, "time": "2017-03-21T10:52:53Z", "creator": "dollinger.florian@gmx.de", "creation_time": "2017-03-21T10:52:53Z", "is_private": false, "attachment_id": null}]