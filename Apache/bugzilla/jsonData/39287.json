[{"count": 0, "tags": [], "creator": "mnot@mnot.net", "attachment_id": null, "text": "Apache 1.3 (and 2.0, as far as I can see) calculates the modified time used to compare the If-Modified-\nSince request header with and determine validation like this (in http_protocol.c ap_meets_conditions);\n\n    mtime = (r->mtime != 0) ? r->mtime : time(NULL);\n\nLater, this time is used to figure out if a 304 Not Modified is sent;\n\n        if ((ims >= mtime) && (ims <= r->request_time)) {\n            return HTTP_NOT_MODIFIED;\n\nThe problem is that Apache fakes the mtime to the current time if it can't find r->mtime (e.g., if it's a \nCGI script). If a client sends an If-Modified-Since header, I believe there's a race condition whereby an \nIMS containing the current time will get a 304 Not Modified, even though the underlying resource has \nno concept of mtime (i.e., it doesn't have a Last-Modified).\n\nThis can be demonstrated against the following script (at http://www.mnot.net/cgi-bin/apache-\nims.cgi):\n\n#!/usr/local/bin/python\nimport os\nprint \"Content-Type: text/plain\"\nprint\nprint os.environ.get(\"HTTP_IF_MODIFIED_SINCE\", \"-\")\n\nusing the following command-line for the client side;\n\n~> URL=\"http://www.mnot.net/cgi-bin/apache-ims.cgi\"; DATE=`curl -Is -X HEAD $URL | grep ^Date | \ncut -d \":\" -f 2-`; echo \"D-> $DATE\"; curl -Is -H \"If-Modified-Since: $DATE\" $URL\nD->  Wed, 12 Apr 2006 17:58:39 GMT\nHTTP/1.1 304 Not Modified\nDate: Wed, 12 Apr 2006 17:58:39 GMT\nServer: Apache/1.3.29\n\nAs you can see, Apache incorrectly sends a 304 Not Modified when the If-Modified-Since request \nheader is set to the current time. For a CGI script that changes on a sub-second basis (e.g., one used \nby AJAX), this reduces the granularity of responses to one second, confusing the implementor (because \nthey don't expect a 304 Not Modified to ever be sent).\n\nAll of this would be largely a theoretical problem, because such a resource should never see an If-\nModified-Since request header, having not send a previous Last-Modified response header. However, \nSafari/OSX *does* send a If-Modified-Since request header based upon the Date response header when \nit doesn't find a Last-Modified response (a bug which I'm reporting to them now). \n\nSafari, of course, should fix themselves, but Apache is also somewhat broken here, as it should not \ndefault mtime to the current time (which may cause problems in other scenarios).\n\nNote that while I see this behaviour on the mnot.net server (Apache 1.3.29), I've had trouble verifying it \non other systems. I suspect that this is because it's a race condition, and therefore hard to reproduce; \nthat said, it could be something on that particular server instance (it's a shared host, so I dont' have \naccess to the source they've used). \n\nHowever, if I'm correct about the underlying reason, the code hasn't changed from then until HEAD, and \nis substantially the same in Apache 2.2.0.", "id": 87853, "time": "2006-04-12T19:06:03Z", "bug_id": 39287, "creation_time": "2006-04-12T19:06:03Z", "is_private": false}, {"count": 1, "tags": [], "creator": "mnot@mnot.net", "attachment_id": null, "text": "BTW, there's nothing special about that script; I used the one I'm showing Apple's problem with, but it \ncould easily be as simple as \n\nprint \"Content-Type: text/plain\"\nprint \nprint \"hi!\"", "id": 87854, "time": "2006-04-12T19:12:58Z", "bug_id": 39287, "creation_time": "2006-04-12T19:12:58Z", "is_private": false}, {"count": 2, "tags": [], "text": "Created attachment 29237\nFix If-Modified-Since \"now\" with non-mtime-aware resources, add missing APR_DATE_BAD check.\n\nNo response within six years although the fix is easy:\n\nKeep assuming that r->mtime == 0 means \"now\" but check for mtime == 0 explicitly instead of faking mtime = apr_time_now(). Note that this will break the If-Unmodified-Since check if the requested resource really has an mtime of 1970-01-01T00:00:00 (but how likely is that?).\n\nA thorough fix would be to introduce a \"time unset\" constant as already stated in a comment by dgaudet.", "attachment_id": 29237, "bug_id": 39287, "id": 161427, "time": "2012-08-15T15:05:30Z", "creator": "dabuq@mailfish.de", "creation_time": "2012-08-15T15:05:30Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 39287, "text": "A quick test shows Mark Nottingham's test case still elicits the bug with httpd trunk (2.5.0-dev) r1470940.", "id": 166800, "time": "2013-04-24T01:44:33Z", "creator": "wiml@omnigroup.com", "creation_time": "2013-04-24T01:44:33Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 39287, "is_private": false, "count": 4, "id": 181626, "time": "2015-03-10T03:21:43Z", "creator": "wiml@omnigroup.com", "creation_time": "2015-03-10T03:21:43Z", "text": "I just retested this and the test case still elicits the bug in 2.4.12, 2.4.13-dev (r1665365), and 2.5.0-dev (r1665394), running on OSX 10.9.5.\n\nThere's been enough code change that Carsten Gaebler's patch no longer applies cleanly, but it looks like the current code still has the same bug/behavior as the old code: if the resource has no last-modified date, it acts as if the last-modified date is apr_time_now()."}]