[{"count": 0, "attachment_id": 33183, "bug_id": 58498, "is_private": false, "id": 185761, "time": "2015-10-16T11:46:49Z", "creator": "timo.gurr@gmail.com", "creation_time": "2015-10-16T11:46:49Z", "tags": [], "text": "Created attachment 33183\nhttpd-2.4.17-autoindex-revert.patch\n\nThere seems to be an issue with Phusion Passenger (5.0.20) caused by: http://svn.apache.org/viewvc?view=revision&revision=r1701436\nwhich has been reported here:\nhttps://groups.google.com/forum/#!topic/phusion-passenger/jiOpv9Isua4\nBy reverting the offending commit Phusion Passenger works fine with 2.4.17."}, {"count": 1, "tags": [], "text": "Can someone familiar with the passenger impl elaborate on what's going on?\n\nIf it's broken by this change -- I am assuming it operates as a handler at APR_HOOK_MIDDLE (or later), wants to operate on requests mapped to directories , but doesn't do anything to set a r->handler or run before mod_autoindex?\n\n(I'd rather not just revert the fix that allows mod_autoindex to work without mod_mime)", "is_private": false, "id": 185767, "creator": "covener@gmail.com", "time": "2015-10-16T16:06:13Z", "bug_id": 58498, "creation_time": "2015-10-16T16:06:13Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "I'm not an expert on passenger, but one can see the hook registration at\n\nhttps://github.com/phusion/passenger/blob/stable-5.0/src/apache2_module/Hooks.cpp\n\nscrolling down to the end of the file.\n\nThe code in the file contains some handler juggling and also rules for ordering relative to mod_autoindex. Especially \n\nap_hook_handler(start_blocking_mod_autoindex, NULL, autoindex_module, APR_HOOK_LAST);\nap_hook_handler(end_blocking_mod_autoindex, autoindex_module, NULL, APR_HOOK_FIRST);\n\npoints to\n\nDEFINE_REQUEST_HOOK(start_blocking_mod_autoindex, startBlockingModAutoIndex)\nDEFINE_REQUEST_HOOK(end_blocking_mod_autoindex, endBlockingModAutoIndex)\n\nwhich brings the following functions into the game:\n\n        int startBlockingModAutoIndex(request_rec *r) {\n                RequestNote *note = getRequestNote(r);\n                if (note != 0 && hasModAutoIndex()) {\n                        note->handlerBeforeModAutoIndex = r->handler;\n                        r->handler = \"\";\n                }\n                return DECLINED;\n        }\n\n        int endBlockingModAutoIndex(request_rec *r) {\n                RequestNote *note = getRequestNote(r);\n                if (note != 0 && hasModAutoIndex()) {\n                        r->handler = note->handlerBeforeModAutoIndex;\n                }\n                return DECLINED;\n        }\n\n\nIn front of them is a comment:\n\n         * mod_autoindex will try to display a directory index for URIs that map to a directory.\n         * This is undesired because of page caching semantics. Suppose that a Rails application\n         * has an ImagesController which has page caching enabled, and thus also a 'public/images'\n         * directory. When the visitor visits /images we'll want the request to be forwarded to\n         * the Rails application, instead of displaying a directory index.\n         *\n         * So in this hook method, we temporarily change some fields in the request structure\n         * in order to block mod_autoindex. In endBlockingModAutoIndex(), we restore the request\n         * structure to its former state.\n\nNot sure whether this is related.\n\nRainer", "is_private": false, "bug_id": 58498, "id": 185768, "time": "2015-10-16T17:24:39Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2015-10-16T17:24:39Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 58498, "attachment_id": null, "is_private": false, "id": 185769, "time": "2015-10-16T17:33:07Z", "creator": "covener@gmail.com", "creation_time": "2015-10-16T17:33:07Z", "text": "(moved to dev@)"}, {"count": 4, "tags": [], "text": "I proposed on github that they set r->handler to a passenger-skip-autoindex string rather than \"\" which is what 2.4 uses as DEAULT_HANDLER_NAME", "is_private": false, "id": 185786, "creator": "covener@gmail.com", "time": "2015-10-18T01:06:36Z", "bug_id": 58498, "creation_time": "2015-10-18T01:06:36Z", "attachment_id": null}]