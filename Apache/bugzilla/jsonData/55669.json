[{"count": 0, "tags": [], "creator": "tschmidty@yahoo.com", "attachment_id": null, "id": 170674, "time": "2013-10-18T14:48:07Z", "bug_id": 55669, "creation_time": "2013-10-18T14:48:07Z", "is_private": false, "text": "I am seeing an issue where apache 2.4.6 acting as a reverse proxy is caching 503 error messages which I don't understand at all. The proxy is a simple proxypass directive, the backend server is apache proxying to an oracle ucm instance. When I hit the proxy while both apaches are running but not the ucm instance, I get a 503 response (expected). Apache is appropriately serving stale content, but when that content expires (or I remove the cached content) then apache caches the 503 response and will serve it even after the server is back up. \n\nHere is the relevant part of the log\n\n[Thu Oct 17 21:29:15.038716 2013] [proxy:debug] [pid 27382] proxy_util.c(2194): [client 192.168.252.52:39745] AH00947: connected / to MYBACKENDSERVER\n[Thu Oct 17 21:29:47.062046 2013] [proxy_http:trace3] [pid 27382] mod_proxy_http.c(1403): [client 192.168.252.52:39745] Status from backend: 503\n[Thu Oct 17 21:29:47.062103 2013] [proxy_http:trace4] [pid 27382] mod_proxy_http.c(1086): [client 192.168.252.52:39745] Headers received from backend:\n[Thu Oct 17 21:29:47.062137 2013] [proxy_http:trace4] [pid 27382] mod_proxy_http.c(1088): [client 192.168.252.52:39745] Date: Thu, 17 Oct 2013 21:29:18 GMT\n[Thu Oct 17 21:29:47.062245 2013] [proxy_http:trace4] [pid 27382] mod_proxy_http.c(1088): [client 192.168.252.52:39745] Server: Apache\n[Thu Oct 17 21:29:47.062266 2013] [proxy_http:trace4] [pid 27382] mod_proxy_http.c(1088): [client 192.168.252.52:39745] Content-Type: text/html\n[Thu Oct 17 21:29:47.062283 2013] [proxy_http:trace4] [pid 27382] mod_proxy_http.c(1088): [client 192.168.252.52:39745] Cache-Control: public\n[Thu Oct 17 21:29:47.062299 2013] [proxy_http:trace4] [pid 27382] mod_proxy_http.c(1088): [client 192.168.252.52:39745] Expires: Thu, 17 Oct 2013 21:44:18 GMT\n[Thu Oct 17 21:29:47.062319 2013] [proxy_http:trace4] [pid 27382] mod_proxy_http.c(1088): [client 192.168.252.52:39745] Vary: Accept-Encoding\n[Thu Oct 17 21:29:47.062336 2013] [proxy_http:trace4] [pid 27382] mod_proxy_http.c(1088): [client 192.168.252.52:39745] Content-Length: 237\n[Thu Oct 17 21:29:47.062352 2013] [proxy_http:trace4] [pid 27382] mod_proxy_http.c(1088): [client 192.168.252.52:39745] Connection: close\n[Thu Oct 17 21:29:47.062389 2013] [proxy_http:trace3] [pid 27382] mod_proxy_http.c(1654): [client 192.168.252.52:39745] start body send\n[Thu Oct 17 21:29:47.063336 2013] [deflate:debug] [pid 27382] mod_deflate.c(764): [client 192.168.252.52:39745] AH01384: Zlib: Compressed 237 to 177 : URL /\n[Thu Oct 17 21:29:47.063450 2013] [cache:debug] [pid 27382] mod_cache.c(1326): [client 192.168.252.52:39745] AH00769: cache: Caching url: /\n[Thu Oct 17 21:29:47.063515 2013] [cache:debug] [pid 27382] mod_cache.c(1332): [client 192.168.252.52:39745] AH00770: cache: Removing CACHE_REMOVE_URL filter.\n[Thu Oct 17 21:29:47.063657 2013] [http:trace3] [pid 27382] http_filters.c(963): [client 192.168.252.52:39745] Response sent with status 503, headers:\n[Thu Oct 17 21:29:47.063683 2013] [http:trace5] [pid 27382] http_filters.c(970): [client 192.168.252.52:39745]   Date: Thu, 17 Oct 2013 21:29:18 GMT\n[Thu Oct 17 21:29:47.063694 2013] [http:trace5] [pid 27382] http_filters.c(973): [client 192.168.252.52:39745]   Server: Apache\n[Thu Oct 17 21:29:47.063709 2013] [http:trace4] [pid 27382] http_filters.c(806): [client 192.168.252.52:39745]   Content-Type: text/html\n[Thu Oct 17 21:29:47.063721 2013] [http:trace4] [pid 27382] http_filters.c(806): [client 192.168.252.52:39745]   Cache-Control: public,max-age=900\n[Thu Oct 17 21:29:47.063733 2013] [http:trace4] [pid 27382] http_filters.c(806): [client 192.168.252.52:39745]   Vary: Accept-Encoding\n[Thu Oct 17 21:29:47.063744 2013] [http:trace4] [pid 27382] http_filters.c(806): [client 192.168.252.52:39745]   Content-Encoding: gzip\n[Thu Oct 17 21:29:47.063755 2013] [http:trace4] [pid 27382] http_filters.c(806): [client 192.168.252.52:39745]   Connection: close\n[Thu Oct 17 21:29:47.063766 2013] [http:trace4] [pid 27382] http_filters.c(806): [client 192.168.252.52:39745]   Transfer-Encoding: chunked\n[Thu Oct 17 21:29:47.064575 2013] [cache_disk:debug] [pid 27382] mod_cache_disk.c(1349): [client 192.168.252.52:39745] AH00737: commit_entity: Headers and body for URL http://www.nature.org:80/? cached.\n[Thu Oct 17 21:29:47.064644 2013] [proxy_http:trace2] [pid 27382] mod_proxy_http.c(1793): [client 192.168.252.52:39745] end body send"}, {"count": 1, "tags": [], "creator": "tschmidty@yahoo.com", "attachment_id": null, "id": 170840, "time": "2013-10-25T14:30:32Z", "bug_id": 55669, "creation_time": "2013-10-25T14:30:32Z", "is_private": false, "text": "Looking at the RFC does not seem to explicitly state that a 503 cannot be cached.\n\n   A response received with a status code of 200, 203, 206, 300, 301 or\n   410 MAY be stored by a cache and used in reply to a subsequent\n   request, subject to the expiration mechanism, unless a cache-control\n   directive prohibits caching. However, a cache that does not support\n   the Range and Content-Range headers MUST NOT cache 206 (Partial\n   Content) responses.\n\n   A response received with any other status code (e.g. status codes 302\n   and 307) MUST NOT be returned in a reply to a subsequent request\n   unless there are cache-control directives or another header(s) that\n   explicitly allow it. For example, these include the following: an\n   Expires header (section 14.21); a \"max-age\", \"s-maxage\",  \"must-\n   revalidate\", \"proxy-revalidate\", \"public\" or \"private\" cache-control\n   directive (section 14.9).\n\nBut I am not returning an expire or cache-control header and it is sill getting cached.\n\nResponse from backend server\n* About to connect() to 192.168.252.160 port 80 (#0)\n*   Trying 192.168.252.160... connected\n* Connected to 192.168.252.160 (192.168.252.160) port 80 (#0)\n> GET / HTTP/1.1\n> User-Agent: curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.14.3.0 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\n> Host: 192.168.252.160\n> Accept: */*\n>\n< HTTP/1.1 503 Service Temporarily Unavailable\n< Date: Fri, 25 Oct 2013 14:28:21 GMT\n< Server: Apache\n< Content-Type: text/html\n< Content-Length: 237\n< Connection: close\n<\n<HTML>\n<HEAD>\n<TITLE>Weblogic Bridge Message\n</TITLE>\n</HEAD>\n <BODY>\n<H2>Failure of server APACHE bridge:</H2><P>\n<hr>No backend server available for connection: timed out after 10 seconds or idempotent set to OFF.\n<hr> </BODY>\n</HTML>\n\nResponse from Proxy server\n\n* About to connect() to 192.168.252.211 port 80 (#0)\n*   Trying 192.168.252.211... connected\n* Connected to 192.168.252.211 (192.168.252.211) port 80 (#0)\n> GET / HTTP/1.1\n> User-Agent: curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.14.3.0 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\n> Accept: */*\n> Host: www.nature.org\n>\n< HTTP/1.1 503 Service Temporarily Unavailable\n< Date: Fri, 25 Oct 2013 14:28:50 GMT\n< Server: Apache\n< Content-Type: text/html\n< Cache-Control: public,max-age=900\n< Vary: Accept-Encoding\n< Content-Length: 237\n< Connection: close\n<\n<HTML>\n<HEAD>\n<TITLE>Weblogic Bridge Message\n</TITLE>\n</HEAD>\n <BODY>\n<H2>Failure of server APACHE bridge:</H2><P>\n<hr>No backend server available for connection: timed out after 30 seconds or idempotent set to OFF.\n<hr> </BODY>\n</HTML>\n\nSubsequent response from proxy, note that it now has a 'Age:' header indicating it is serverd from cache.\n\n* About to connect() to 192.168.252.211 port 80 (#0)\n*   Trying 192.168.252.211... connected\n* Connected to 192.168.252.211 (192.168.252.211) port 80 (#0)\n> GET / HTTP/1.1\n> User-Agent: curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.14.3.0 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\n> Accept: */*\n> Host: www.nature.org\n>\n< HTTP/1.1 503 Service Unavailable\n< Date: Fri, 25 Oct 2013 14:30:21 GMT\n< Server: Apache\n< Vary: Accept-Encoding\n< Content-Length: 237\n< Age: 123\n< Connection: close\n< Content-Type: text/html\n<\n<HTML>\n<HEAD>\n<TITLE>Weblogic Bridge Message\n</TITLE>\n</HEAD>\n <BODY>\n<H2>Failure of server APACHE bridge:</H2><P>\n<hr>No backend server available for connection: timed out after 30 seconds or idempotent set to OFF.\n<hr> </BODY>\n</HTML>"}, {"count": 2, "tags": [], "bug_id": 55669, "attachment_id": null, "id": 171210, "time": "2013-11-13T20:40:06Z", "creator": "mike.rumph@oracle.com", "creation_time": "2013-11-13T20:40:06Z", "is_private": false, "text": "Hello Tod,\n\nI have been able to duplicate your caching of 503 responses by setting up 3 layers of Apache httpd servers.\n- a proxy server, a backend server and an up/down server.\n\nIn the proxy server configuration I have the follow caching directives:\n\nCacheRoot /home/user/apache24/proxy\nCacheEnable disk /\nExpiresActive On\nExpiresDefault \"access plus 10 minutes\"\n\nWith the up/down server down.\nI get the 503 response from the proxy server.\nThe response contains Cache-Control: max-age=600 and Expires: headers.\nSubsequent responses in addition have Age: headers.\n\nNow with the up/down server up.\nThe 503 responses continue until the Age would exceed the max-age.\nAfter that a proper HTML page is received.\n\nAre you receiving any responses with the server up where Age exceeds max-age?\nAnd are you using any caching directives in your proxy server configuration?\n\nThanks,\n\nMike Rumph"}, {"count": 3, "tags": [], "creator": "minfrin@sharp.fm", "is_private": false, "text": "HTTP/1.1 allows the caching of 503 responses if the 503 response explicitly states it is cacheable. This is expected behaviour of a cache. Can you clarify what Cache-Control and/or Expires headers are included with your 503 response?", "id": 171656, "time": "2013-12-09T00:07:05Z", "bug_id": 55669, "creation_time": "2013-12-09T00:07:05Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "Hello Graham,\n\nIf you are referring to my setup, here is the response I get:\n\n\t- $ curl -v http://localhost:8080/ \n* About to connect() to localhost port 8080\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 8080\n> GET / HTTP/1.1\n> User-Agent: curl/7.15.5 (x86_64-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b zlib/1.2.3 libidn/0.6.5\n> Host: localhost:8080\n> Accept: */*\n>\n< HTTP/1.1 503 Service Unavailable\n< Date: Wed, 13 Nov 2013 20:17:30 GMT\n< Server: Apache/2.4.7-dev (Unix)\n< Content-Length: 299\n< Cache-Control: max-age=600\n< Expires: Wed, 13 Nov 2013 20:22:23 GMT\n< Age: 307\n< Connection: close\n< Content-Type: text/html; charset=iso-8859-1\n<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\">\n<html><head>\n<title>503 Service Unavailable</title>\n</head><body>\n<h1>Service Unavailable</h1>\n<p>The server is temporarily unable to service your\nrequest due to maintenance downtime or capacity\nproblems. Please try again later.</p>\n</body></html>\n* Closing connection #0\n\nAfter the max-age expires, a normal response is returned.\n\nSo I agree with you that this is in agreement with RFC 2616 section 13.4.\n- http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.4 \n\nBut my setup is only an attempt to reproduce the bug report.\nTod's results may be different.\n\nThe only error I see at this point is in the wording of the documentation at the following location:\n- http://httpd.apache.org/docs/2.4/caching.html#http-caching \n- \"What Can be Cached?\n  - 2. The response must have a HTTP status code of 200, 203, 300, 301 or 410.\"\n\nThis wording is not consistent with the last paragraph of RFC 2616 section 13.4.\n- \"A response received with any other status code (e.g. status codes 302 and 307) MUST NOT be returned in a reply to a subsequent request unless there are cache-control directives or another header(s) that explicitly allow it.\"\n\nThanks,\n\nMike Rumph", "is_private": false, "bug_id": 55669, "id": 171668, "time": "2013-12-09T17:21:19Z", "creator": "mike.rumph@oracle.com", "creation_time": "2013-12-09T17:21:19Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "abiacco@formatdynamics.com", "attachment_id": null, "text": "I can confirm this in 2.2.26. I am having 400 errors cached in a proxied URL space in which i was having Apache apply CC/Expire headers.\n\nI don't think we should be doing this, unless there is a way for us to NOT set the CC/Expire headers based on response status.\n\nAnthony J. Biacco", "id": 173036, "time": "2014-02-13T20:12:19Z", "bug_id": 55669, "creation_time": "2014-02-13T20:12:19Z", "is_private": false}, {"count": 6, "tags": [], "creator": "amushtaq@etilizepak.com", "attachment_id": null, "id": 173758, "time": "2014-03-12T09:48:32Z", "bug_id": 55669, "creation_time": "2014-03-12T09:48:32Z", "is_private": false, "text": "Hello, we are observing similar behavior with our apache 2.2.23 deployment using mod_disk_cache. We are using apache to load balance and cache images from backend tomcat servers. The issues is that if someone visits a URL which has not yet been published hence resulting in a \"404 Not Found\" response, these responses are getting cached also. Needless to say this causes issues when the actual content is published later because the frontend proxy continues to serve out cached \"404 Not Found\" response. We need to have a way to selectively cache/not cache content based on response codes. Below is the relevant config snippet.\n\n<VirtualHost *:8080>                      \n\n    ## Apache Load Balancing configuration\n    <Proxy balancer://image-origin/>      \n        BalancerMember http://oc1.etilize.com\n        BalancerMember http://oc3.etilize.com\n        ProxySet lbmethod=bybusyness         \n        Order allow,deny                     \n        Allow from env=allow_request                              \n        Deny  from env=crawler                                    \n        allow from all                                            \n        #Expiry settings                                          \n        ExpiresActive On                                          \n        ExpiresDefault \"access plus 15 days\"                      \n\n    </Proxy>                                                      \n\n    ProxyPass / balancer://image-origin/\n    ProxyPassReverse / balancer://image-origin/\n\n    ## Apache Caching Configuration\n    <IfModule mod_cache.c>         \n        <IfModule mod_disk_cache.c>\n            CacheEnable disk /       \n            CacheRoot \"/ebs/cache\"\n            CacheDirLength 1      \n            CacheDirLevels 2\n            CacheMaxFileSize 5000000\n        </IfModule>\n    </IfModule>\n\n</VirtualHost>\n\nThanks,\n\nAsif Mushtaq"}, {"count": 7, "attachment_id": 31472, "bug_id": 55669, "is_private": false, "id": 174254, "time": "2014-04-03T18:16:43Z", "creator": "Chaosed0@gmail.com", "creation_time": "2014-04-03T18:16:43Z", "tags": [], "text": "Created attachment 31472\nAdd ExpiresAllow directive to mod_expires\n\nIt looks like this is happening only when something external to Apache is returning an error code. This code, inside expires_insert_filter(), isn't getting run:\n\n    /* Don't add Expires headers to errors */\n    if (ap_is_HTTP_ERROR(r->status)) {\n        return;\n    }\n\nIt probably has something to do with the error path for processing. Attached is a patch that adds a directive allowing you to specify specific return codes that mod_expires will process. It seems like something should also be done to cleanup the code that's already there, though."}, {"attachment_id": 31473, "tags": [], "creator": "ylavic.dev@gmail.com", "is_private": false, "count": 8, "id": 174255, "time": "2014-04-03T20:35:31Z", "bug_id": 55669, "creation_time": "2014-04-03T20:35:31Z", "text": "Created attachment 31473\nDon't add Expires header on errors (really)\n\n(In reply to Edward Lu from comment #7)\n> It looks like this is happening only when something external to Apache is\n> returning an error code. This code, inside expires_insert_filter(), isn't\n> getting run:\n> \n>     /* Don't add Expires headers to errors */\n>     if (ap_is_HTTP_ERROR(r->status)) {\n>         return;\n>     }\n> \n\nThe insert_filter hook is run at the begining of ap_invoke_handler(), before any error is set (either by the httpd or the backend).\n\nThis code makes no sense here, I think it should be moved to the output filter itself, like in the attached patch."}, {"count": 9, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "is_private": false, "id": 174256, "time": "2014-04-03T20:38:43Z", "bug_id": 55669, "creation_time": "2014-04-03T20:38:43Z", "text": "\n> \n> The insert_filter hook is run at the begining of ap_invoke_handler(), before\n> any error is set (either by the httpd or the backend).\n> \nI think the old code only traps the error filter path\n\n> This code makes no sense here, I think it should be moved to the output\n> filter itself, like in the attached patch.\n\nI worry a bit about default behavior change on this one for backport, 304/301 for example"}, {"count": 10, "tags": [], "text": "(In reply to Eric Covener from comment #9)\n> > \n> > The insert_filter hook is run at the begining of ap_invoke_handler(), before\n> > any error is set (either by the httpd or the backend).\n> > \n> I think the old code only traps the error filter path\n> \n\nThe new code still does, though later.\n\n> > This code makes no sense here, I think it should be moved to the output\n> > filter itself, like in the attached patch.\n> \n> I worry a bit about default behavior change on this one for backport,\n> 304/301 for example\n\n3xx are not caught by ap_is_HTTP_ERROR, only 4xx and 5xx.", "is_private": false, "bug_id": 55669, "id": 174257, "time": "2014-04-03T20:50:55Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-04-03T20:50:55Z", "attachment_id": null}, {"count": 11, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "text": "(In reply to Yann Ylavic from comment #10)\n> (In reply to Eric Covener from comment #9)\n> > I think the old code only traps the error filter path\n> The new code still does, though later.\nWe could also let the old code there, the new code would only catch the other cases.", "id": 174258, "time": "2014-04-03T20:57:23Z", "bug_id": 55669, "creation_time": "2014-04-03T20:57:23Z", "is_private": false}, {"count": 12, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "is_private": false, "id": 174259, "time": "2014-04-03T21:22:12Z", "bug_id": 55669, "creation_time": "2014-04-03T21:22:12Z", "text": "(In reply to Edward Lu from comment #7)\n> Created attachment 31472 [details]\n> Add ExpiresAllow directive to mod_expires\n\nWouldn't using a regexp be \"easier\" when many status codes are concerned?"}, {"count": 13, "tags": [], "bug_id": 55669, "attachment_id": null, "id": 174260, "time": "2014-04-03T21:34:34Z", "creator": "covener@gmail.com", "creation_time": "2014-04-03T21:34:34Z", "is_private": false, "text": "> 3xx are not caught by ap_is_HTTP_ERROR, only 4xx and 5xx.\n\nGood point, +1. We can always do something more if people want to force mod_expires in the future."}, {"count": 14, "tags": [], "text": "Commited in r1584430, proposed for backport to 2.4.x.", "attachment_id": null, "id": 174262, "creator": "ylavic.dev@gmail.com", "time": "2014-04-03T23:01:21Z", "bug_id": 55669, "creation_time": "2014-04-03T23:01:21Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 55669, "attachment_id": null, "id": 174277, "time": "2014-04-04T13:18:07Z", "creator": "Chaosed0@gmail.com", "creation_time": "2014-04-04T13:18:07Z", "is_private": false, "text": "(In reply to Yann Ylavic from comment #12)\n> (In reply to Edward Lu from comment #7)\n> > Created attachment 31472 [details]\n> > Add ExpiresAllow directive to mod_expires\n> \n> Wouldn't using a regexp be \"easier\" when many status codes are concerned?\n\nThat's probably true. I was going for ease of understanding, but the syntax could probably get verbose quick. Either way, good to see that there was an easier solution."}, {"count": 16, "tags": [], "text": "Fixed and released in 2.4.10", "is_private": false, "id": 177224, "creation_time": "2014-08-18T07:43:42Z", "time": "2014-08-18T07:43:42Z", "creator": "christophe.jaillet@wanadoo.fr", "bug_id": 55669, "attachment_id": null}, {"count": 17, "tags": [], "text": "This is still a problem with 2.4.10\n\nThe problem is not that we are adding headers it is that it is still caching it even without any headers that would allow it. Here are logs from two responses, the first it gets a 503 and caches it, the second it serves that bad content.\n\n[Thu Nov 20 17:52:42.184507 2014] [proxy_http:trace3] [pid 4506] mod_proxy_http.c(1420): [client 10.3.0.203:33820] Status from backend: 503\n[Thu Nov 20 17:52:42.184557 2014] [proxy_http:trace4] [pid 4506] mod_proxy_http.c(1103): [client 10.3.0.203:33820] Headers received from backend:\n[Thu Nov 20 17:52:42.184578 2014] [proxy_http:trace4] [pid 4506] mod_proxy_http.c(1105): [client 10.3.0.203:33820] Date: Thu, 20 Nov 2014 17:52:10 GMT\n[Thu Nov 20 17:52:42.184605 2014] [proxy_http:trace4] [pid 4506] mod_proxy_http.c(1105): [client 10.3.0.203:33820] Server: Apache\n[Thu Nov 20 17:52:42.184623 2014] [proxy_http:trace4] [pid 4506] mod_proxy_http.c(1105): [client 10.3.0.203:33820] Content-Type: text/html\n[Thu Nov 20 17:52:42.184640 2014] [proxy_http:trace4] [pid 4506] mod_proxy_http.c(1105): [client 10.3.0.203:33820] Content-Length: 237\n[Thu Nov 20 17:52:42.184657 2014] [proxy_http:trace4] [pid 4506] mod_proxy_http.c(1105): [client 10.3.0.203:33820] Connection: close\n[Thu Nov 20 17:52:42.184698 2014] [proxy_http:trace3] [pid 4506] mod_proxy_http.c(1671): [client 10.3.0.203:33820] start body send\n[Thu Nov 20 17:52:42.185448 2014] [proxy:debug] [pid 4506] proxy_util.c(2146): AH00943: http: has released connection for (consumption1.tnc.org)\n[Thu Nov 20 17:52:42.185553 2014] [headers:trace2] [pid 4506] mod_headers.c(874): AH01502: headers: ap_headers_output_filter()\n[Thu Nov 20 17:52:42.186002 2014] [cache:debug] [pid 4506] mod_cache.c(1330): [client 10.3.0.203:33820] AH00769: cache: Caching url: /\n[Thu Nov 20 17:52:42.186018 2014] [cache:debug] [pid 4506] mod_cache.c(1336): [client 10.3.0.203:33820] AH00770: cache: Removing CACHE_REMOVE_URL filter.\n[Thu Nov 20 17:52:42.186445 2014] [http:trace3] [pid 4506] http_filters.c(1008): [client 10.3.0.203:33820] Response sent with status 503, headers:\n[Thu Nov 20 17:52:42.186460 2014] [http:trace5] [pid 4506] http_filters.c(1015): [client 10.3.0.203:33820]   Date: Thu, 20 Nov 2014 17:52:10 GMT\n[Thu Nov 20 17:52:42.186472 2014] [http:trace5] [pid 4506] http_filters.c(1018): [client 10.3.0.203:33820]   Server: Apache\n[Thu Nov 20 17:52:42.186486 2014] [http:trace4] [pid 4506] http_filters.c(837): [client 10.3.0.203:33820]   Content-Type: text/html\n[Thu Nov 20 17:52:42.186498 2014] [http:trace4] [pid 4506] http_filters.c(837): [client 10.3.0.203:33820]   Content-Length: 237\n[Thu Nov 20 17:52:42.186510 2014] [http:trace4] [pid 4506] http_filters.c(837): [client 10.3.0.203:33820]   Cache-Control: public,max-age=1800\n[Thu Nov 20 17:52:42.186522 2014] [http:trace4] [pid 4506] http_filters.c(837): [client 10.3.0.203:33820]   Connection: close\n[Thu Nov 20 17:52:42.188022 2014] [cache_disk:debug] [pid 4506] mod_cache_disk.c(1350): [client 10.3.0.203:33820] AH00737: commit_entity: Headers and body for URL http://www.nature.org:80/? cached.\n[Thu Nov 20 17:52:42.188105 2014] [proxy_http:trace2] [pid 4506] mod_proxy_http.c(1810): [client 10.3.0.203:33820] end body send\n[Thu Nov 20 17:52:42.188129 2014] [core:trace6] [pid 4506] core_filters.c(527): [client 10.3.0.203:33820] core_output_filter: flushing because of FLUSH bucket\n[Thu Nov 20 17:52:42.188212 2014] [log_debug:trace4] [pid 4506] util_expr_eval.c(822): [client 10.3.0.203:33820] Evaluation of string expression from /usr/local/apache2/conf.d/local-11g.conf:54 gave: Status (cache): 503\n[Thu Nov 20 17:52:42.188227 2014] [log_debug:info] [pid 4506] [client 10.3.0.203:33820] Status (cache): 503 (log_transaction hook, /usr/local/apache2/conf.d/local-11g.conf:54)\n[Thu Nov 20 17:52:42.188622 2014] [core:trace6] [pid 4506] core_filters.c(527): [client 10.3.0.203:33820] core_output_filter: flushing because of FLUSH bucket\n\n\n\n\n[Thu Nov 20 17:53:21.091484 2014] [core:trace5] [pid 4505] protocol.c(618): [client 10.3.0.203:33822] Request received from client: GET / HTTP/1.1\n[Thu Nov 20 17:53:21.091710 2014] [http:trace4] [pid 4505] http_request.c(301): [client 10.3.0.203:33822] Headers received from client:\n[Thu Nov 20 17:53:21.091728 2014] [http:trace4] [pid 4505] http_request.c(305): [client 10.3.0.203:33822]   User-Agent: curl/7.15.5 (i386-redhat-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8b zlib/1.2.3 libidn/0.6.5\n[Thu Nov 20 17:53:21.091764 2014] [http:trace4] [pid 4505] http_request.c(305): [client 10.3.0.203:33822]   Accept: */*\n[Thu Nov 20 17:53:21.091777 2014] [http:trace4] [pid 4505] http_request.c(305): [client 10.3.0.203:33822]   host: www.nature.org\n[Thu Nov 20 17:53:21.091809 2014] [cache:debug] [pid 4505] cache_storage.c(664): [client 10.3.0.203:33822] AH00698: cache: Key for entity /?(null) is http://www.nature.org:80/?\n[Thu Nov 20 17:53:21.091935 2014] [cache_disk:debug] [pid 4505] mod_cache_disk.c(572): [client 10.3.0.203:33822] AH00709: Recalled cached URL info header http://www.nature.org:80/?\n[Thu Nov 20 17:53:21.091963 2014] [cache_disk:debug] [pid 4505] mod_cache_disk.c(885): [client 10.3.0.203:33822] AH00720: Recalled headers for URL http://www.nature.org:80/?\n[Thu Nov 20 17:53:21.091995 2014] [log_debug:trace4] [pid 4505] util_expr_eval.c(822): [client 10.3.0.203:33822] Evaluation of string expression from /usr/local/apache2/conf.d/local-11g.conf:54 gave: Status (cache): 200\n[Thu Nov 20 17:53:21.092010 2014] [log_debug:info] [pid 4505] [client 10.3.0.203:33822] Status (cache): 200 (insert_filter hook, /usr/local/apache2/conf.d/local-11g.conf:54)\n[Thu Nov 20 17:53:21.092032 2014] [cache:debug] [pid 4505] mod_cache.c(652): [client 10.3.0.203:33822] AH00763: cache: running CACHE_OUT filter\n[Thu Nov 20 17:53:21.092048 2014] [cache:debug] [pid 4505] mod_cache.c(681): [client 10.3.0.203:33822] AH00764: cache: serving /\n[Thu Nov 20 17:53:21.092075 2014] [http:trace3] [pid 4505] http_filters.c(1008): [client 10.3.0.203:33822] Response sent with status 503, headers:\n[Thu Nov 20 17:53:21.092088 2014] [http:trace5] [pid 4505] http_filters.c(1015): [client 10.3.0.203:33822]   Date: Thu, 20 Nov 2014 17:53:21 GMT\n[Thu Nov 20 17:53:21.092100 2014] [http:trace5] [pid 4505] http_filters.c(1018): [client 10.3.0.203:33822]   Server: Apache\n[Thu Nov 20 17:53:21.092115 2014] [http:trace4] [pid 4505] http_filters.c(837): [client 10.3.0.203:33822]   Content-Length: 237\n[Thu Nov 20 17:53:21.092127 2014] [http:trace4] [pid 4505] http_filters.c(837): [client 10.3.0.203:33822]   Cache-Control: public,max-age=1800\n[Thu Nov 20 17:53:21.092138 2014] [http:trace4] [pid 4505] http_filters.c(837): [client 10.3.0.203:33822]   Age: 103\n[Thu Nov 20 17:53:21.092150 2014] [http:trace4] [pid 4505] http_filters.c(837): [client 10.3.0.203:33822]   Connection: close\n[Thu Nov 20 17:53:21.092161 2014] [http:trace4] [pid 4505] http_filters.c(837): [client 10.3.0.203:33822]   Content-Type: text/html\n[Thu Nov 20 17:53:21.092264 2014] [core:trace6] [pid 4505] core_filters.c(527): [client 10.3.0.203:33822] core_output_filter: flushing because of FLUSH bucket\n[Thu Nov 20 17:53:21.092477 2014] [log_debug:trace4] [pid 4505] util_expr_eval.c(822): [client 10.3.0.203:33822] Evaluation of string expression from /usr/local/apache2/conf.d/local-11g.conf:54 gave: Status (cache): 503\n[Thu Nov 20 17:53:21.092494 2014] [log_debug:info] [pid 4505] [client 10.3.0.203:33822] Status (cache): 503 (log_transaction hook, /usr/local/apache2/conf.d/local-11g.conf:54)\n[Thu Nov 20 17:53:21.092544 2014] [core:trace6] [pid 4505] core_filters.c(527): [client 10.3.0.203:33822] core_output_filter: flushing because of FLUSH bucket\n\nI even went so far as to add an unset for the headers\n\nHeader always unset Cache-Control \"expr=%{REQUEST_STATUS} == '503'\"\n\nWhich would presumably unset any headers and is after any other header directives\n\n[Thu Nov 20 18:46:31.413346 2014] [headers:trace4] [pid 5598] util_expr_eval.c(837): [client 10.3.0.203:33825] Evaluation of expression from /usr/local/apache2/conf.d/local-11g.conf:49 gave: 1\n\nThis seems to indicate that the header would have been removed but no luck\n\nHowever, adding that expression as != to my existing header declaration does work and appropriately does not cache.\n\nHeader set Cache-Control public,max-age=1800 \"expr=%{REQUEST_STATUS} != '503'\"\n\n[Thu Nov 20 18:53:59.783143 2014] [headers:trace4] [pid 5635] util_expr_eval.c(837): [client 10.3.0.203:33832] Evaluation of expression from /usr/local/apache2/conf.d/local-11g.conf:49 gave: 1\n[Thu Nov 20 18:53:59.783168 2014] [headers:trace4] [pid 5635] util_expr_eval.c(837): [client 10.3.0.203:33832] Evaluation of expression from /usr/local/apache2/conf.d/local-11g.conf:44 gave: 0\n[Thu Nov 20 18:53:59.783213 2014] [cache:debug] [pid 5635] mod_cache.c(1212): [client 10.3.0.203:33832] AH00768: cache: / not cached. Reason: Response status 503\n\nSo the code from ylavic does not seem to catch the error condition and still adds the cache control headers. But using this as a workaround will do the job for me and I can add conditions for the other errors with a regex but I don't think this is fully resolved. I will keep an eye on this if there is a different patch you would like me to test", "attachment_id": null, "id": 179210, "creator": "tschmidty@yahoo.com", "time": "2014-11-20T18:59:26Z", "bug_id": 55669, "creation_time": "2014-11-20T18:59:26Z", "is_private": false}, {"count": 18, "tags": [], "creator": "ylavic.dev@gmail.com", "is_private": false, "text": "(In reply to Tod Schmidt from comment #17)\n> This is still a problem with 2.4.10\n> \n> The problem is not that we are adding headers it is that it is still caching\n> it even without any headers that would allow it. Here are logs from two\n> responses, the first it gets a 503 and caches it, the second it serves that\n> bad content.\n\nIt is not clear whether mod_expires is involved in this scenario, it isn't right?\n\n> \n> [Thu Nov 20 17:52:42.184507 2014] [proxy_http:trace3] [pid 4506]\n> mod_proxy_http.c(1420): [client 10.3.0.203:33820] Status from backend: 503\n> [Thu Nov 20 17:52:42.184557 2014] [proxy_http:trace4] [pid 4506]\n> mod_proxy_http.c(1103): [client 10.3.0.203:33820] Headers received from\n> backend:\n> [Thu Nov 20 17:52:42.184578 2014] [proxy_http:trace4] [pid 4506]\n> mod_proxy_http.c(1105): [client 10.3.0.203:33820] Date: Thu, 20 Nov 2014\n> 17:52:10 GMT\n> [Thu Nov 20 17:52:42.184605 2014] [proxy_http:trace4] [pid 4506]\n> mod_proxy_http.c(1105): [client 10.3.0.203:33820] Server: Apache\n> [Thu Nov 20 17:52:42.184623 2014] [proxy_http:trace4] [pid 4506]\n> mod_proxy_http.c(1105): [client 10.3.0.203:33820] Content-Type: text/html\n> [Thu Nov 20 17:52:42.184640 2014] [proxy_http:trace4] [pid 4506]\n> mod_proxy_http.c(1105): [client 10.3.0.203:33820] Content-Length: 237\n> [Thu Nov 20 17:52:42.184657 2014] [proxy_http:trace4] [pid 4506]\n> mod_proxy_http.c(1105): [client 10.3.0.203:33820] Connection: close\n\nSo, no Cache-Control/Expires header sent by the backend.\n\n\n> [Thu Nov 20 17:52:42.184698 2014] [proxy_http:trace3] [pid 4506]\n> mod_proxy_http.c(1671): [client 10.3.0.203:33820] start body send\n> [Thu Nov 20 17:52:42.185448 2014] [proxy:debug] [pid 4506]\n> proxy_util.c(2146): AH00943: http: has released connection for\n> (consumption1.tnc.org)\n> [Thu Nov 20 17:52:42.185553 2014] [headers:trace2] [pid 4506]\n> mod_headers.c(874): AH01502: headers: ap_headers_output_filter()\n\nWhat is(are) mod_headers action(s) here?\n\n> [Thu Nov 20 17:52:42.186002 2014] [cache:debug] [pid 4506]\n> mod_cache.c(1330): [client 10.3.0.203:33820] AH00769: cache: Caching url: /\n> [Thu Nov 20 17:52:42.186018 2014] [cache:debug] [pid 4506]\n> mod_cache.c(1336): [client 10.3.0.203:33820] AH00770: cache: Removing\n> CACHE_REMOVE_URL filter.\n> [Thu Nov 20 17:52:42.186445 2014] [http:trace3] [pid 4506]\n> http_filters.c(1008): [client 10.3.0.203:33820] Response sent with status\n> 503, headers:\n> [Thu Nov 20 17:52:42.186460 2014] [http:trace5] [pid 4506]\n> http_filters.c(1015): [client 10.3.0.203:33820]   Date: Thu, 20 Nov 2014\n> 17:52:10 GMT\n> [Thu Nov 20 17:52:42.186472 2014] [http:trace5] [pid 4506]\n> http_filters.c(1018): [client 10.3.0.203:33820]   Server: Apache\n> [Thu Nov 20 17:52:42.186486 2014] [http:trace4] [pid 4506]\n> http_filters.c(837): [client 10.3.0.203:33820]   Content-Type: text/html\n> [Thu Nov 20 17:52:42.186498 2014] [http:trace4] [pid 4506]\n> http_filters.c(837): [client 10.3.0.203:33820]   Content-Length: 237\n> [Thu Nov 20 17:52:42.186510 2014] [http:trace4] [pid 4506]\n> http_filters.c(837): [client 10.3.0.203:33820]   Cache-Control:\n> public,max-age=1800\n\nWhere does this Cache-Control come from?\nIt makes the response cacheable.", "id": 179227, "time": "2014-11-21T17:59:17Z", "bug_id": 55669, "creation_time": "2014-11-21T17:59:17Z", "attachment_id": null}, {"count": 19, "tags": [], "creator": "tschmidty@yahoo.com", "attachment_id": null, "text": "Argh, you are exactly right (of course). Sorry, was a long day. We did use expires but had changed it to set the cache-control using the headers module so we could set some other cache-control values as well. So expires is never called in this case although it does apply for the other users on this thread. \n\nIn my case, I suppose the workaround is the way to go. The confusing thing for me was just not understanding that the headers were being applied on the proxy server before the cache/no-cache decision was made.\n\nSo something like this:\n\nHeader set Cache-Control public,max-age=1800 \"expr=%{REQUEST_STATUS} == '200'\"\n\nor \n\nHeader set Cache-Control public,max-age=1800 \"expr=%{REQUEST_STATUS} != '503'\"\n\nWould work in my situation. Thanks for your response and sorry to have erroneously reopened this.", "id": 179257, "time": "2014-11-24T22:09:47Z", "bug_id": 55669, "creation_time": "2014-11-24T22:09:47Z", "is_private": false}]