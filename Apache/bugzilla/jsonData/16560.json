[{"count": 0, "text": "The file testBoolErr.xls generated by TestHSSFCell crashes Excel '97", "bug_id": 16560, "is_private": false, "id": 30302, "time": "2003-01-29T20:31:06Z", "creator": "danny@muibros.com", "creation_time": "2003-01-29T20:31:06Z", "tags": [], "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 16560, "attachment_id": 4633, "text": "Created attachment 4633\nJunit generated excel file", "id": 30303, "time": "2003-01-29T20:31:36Z", "creator": "danny@muibros.com", "creation_time": "2003-01-29T20:31:36Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 16560, "text": "this one works in Excel v.X...", "id": 41330, "time": "2003-07-24T15:32:50Z", "creator": "poi-support@buni.org", "creation_time": "2003-07-24T15:32:50Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "This does not work in any version of Excel, unless you run the testcase against \nthe head. In that case, the testcase produces a spreadsheet that loads \nproperly, but the testcase fails.\n\nThe reason is that the testcase calls HSSCell.setErrorValue( (byte) 1), which \nis an invalid argument. The valid arguments are\n\n0   #NULL!\n7   #DIV/0!\n15  #VALUE!\n23  #REF!\n29  #NAME?\n36  #NUM!\n42  #N/A\n\nThese are the 7 error types allowed in Excel. There are no others. If you set \nthe erro value of a BOOLERR record to any other value, the spreadsheet will not \nload in Excel.\n\nWhy these magic numbers? Put the error codewords together in a string and \nseperate each with a \\0, like you would if you were programming in C. The magic \nnumbers are the offsets to the beginning of each codeword.\n\n#NULL! #DIV/0! #VALUE! #REF! #NAME? #NUM! #N/A\n0123456789012345678901234567890123456789012345\n0         1         2         3         4\n\nI would work on a patch for this but... the HEAD is very strange right now. The \nperformance branch merge seems to have changed *everything*.\n\nMy instinct is that BoolErrRecord should throw an exception if the client tries \nto set an unacceptable value. Add public static final int into BoolErrRecord to \nrepresent the 7 allowed values. Change the testcase that produces \ntestBoolErr.xls. And add a new testcase to verify that invalid arguments to \nHSSFCell.setErrorValue throw an exception.\n", "is_private": false, "id": 42446, "creator": "zalewski@optonline.net", "time": "2003-08-09T02:25:24Z", "bug_id": 16560, "creation_time": "2003-08-09T02:25:24Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "Fixed in Branch. Added check to BoolErrorRecord, to throw RuntimeException, and\nupdated Testcase. Committed the same changes to HEAD, but the tescase was\nalready failing in HEAD. ", "is_private": false, "bug_id": 16560, "id": 46532, "time": "2003-10-30T18:17:22Z", "creator": "avik@apache.org", "creation_time": "2003-10-30T18:17:22Z", "attachment_id": null}]