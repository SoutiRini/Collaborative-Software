[{"count": 0, "tags": [], "text": "Platforms and OS affected:\nNT 4/Intel Pentium III\nSolaris 8/Sparc Ultra80\n\nUsing tomcat 4.0.1 I could get servlet context of another application running \non the same tomcat server, regardless jdk1.3 or 1.4 . For example,\n\nCurrent servlet context is \"/myservlet\".\n\nServletContext srvctx = request.getSession().getServletContext();\nServletContext rootctx = srvctx.getContext(\"/\");\nServletContext cachectx = srvctx.getContext(\"/cache\");\n\nrootctx and cachectx contexts would result in non-null resolvable values.\n\nHowever when I ran myservlet to tomcat 4.0.3,regardless jdk1.3 or \n1.4, \"/myservlet\" produced null values for rootctx and cachectx .", "attachment_id": null, "bug_id": 7662, "id": 12637, "time": "2002-04-01T16:49:00Z", "creator": "syloke.soong@nsc.com", "creation_time": "2002-04-01T16:49:00Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 7662, "attachment_id": null, "id": 12721, "time": "2002-04-03T01:04:56Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2002-04-03T01:04:56Z", "is_private": false, "text": "Because it can be a security risk to allow one web application to access the\nServletContext of another, this is a configurable option that defaults to\ndisallowing such requests.  To make it work, set the \"crossContext\" attribute of\nthe <Context> element for your webapp to \"true\".\n\nSee the Server Configuration Reference documentation for more details -- after\nyou start Tomcat, it is available at:\n\n  http://localhost:8080/tomcat-docs/config/\n\nPlease re-open this bug report if you have crossContext properly set to true and\nare still experiencing this problem.\n"}]