[{"count": 0, "tags": [], "text": "My collegue is trying to set up tomcat with client certificate authentication \nbut it doesn't seem to work. He has set up a keystore that works with jetty \nand everyhing works. However, we would like to use tomcat instead. \nWe are running tomcat/jetty inside a jboss 3.2.2 distribution.\n\nHere is an excerpt of the JSSE logs. We not only tried to authenticate via a \nbrowser but also via a Java client, so we possess client logs as well.\n\nIt seems as if, at some point during the handshake procedure, the server is \nwaiting for the client to send further data. However, the client seems to have \nsent all data and is waiting for the server to respond. That way, client and \nserver remain in a wait-state until the client finally gets a timeout and \ncloses the socket. \n\nHere are the log excerpts. Any ideas? We are pretty clueless...\n\nCLIENT LOG\nThread-1, WRITE: TLSv1 Change Cipher Spec, length = 1\nJsseJCE: Using JSSE internal implementation for cipher RC4\n*** Finished\nverify_data:  { 89, 42, 241, 220, 59, 116, 135, 170, 54, 230, 112, 71 }\n***\nThread-1, WRITE: TLSv1 Handshake, length = 32\nwaiting for close_notify or alert: state 1\nException while waiting for close java.net.SocketException: Software caused \nconnection abort: recv failed\nThread-1, handling exception: java.net.SocketException: Software caused \nconnection abort: recv failed\nThread-1, SEND TLSv1 ALERT:  fatal, description = unexpected_message\nThread-1, WRITE: TLSv1 Alert, length = 18\nException sending alert: java.net.SocketException: Software caused connection \nabort: socket write error\nThread-1, called closeSocket()\n\n==================================\n\nServer log\n\n2003-11-10 12:54:57,199 INFO  [STDOUT] *** ServerHelloDone\n2003-11-10 12:54:57,199 INFO  [STDOUT] Thread-18, WRITE: SSLv3 Handshake, \nlength = 3631\n2003-11-10 12:54:57,246 INFO  [STDOUT] Thread-18, received EOFException: error\n2003-11-10 12:54:57,246 INFO  [STDOUT] Thread-18, handling exception: \njavax.net.ssl.SSLHandshakeException: Remote host closed connection during \nhandshake\n2003-11-10 12:54:57,262 INFO  [STDOUT] Thread-18\n2003-11-10 12:54:57,278 INFO  [STDOUT] , SEND SSLv3 ALERT:  \n2003-11-10 12:54:57,278 INFO  [STDOUT] fatal, \n2003-11-10 12:54:57,293 INFO  [STDOUT] description = unexpected_message\n2003-11-10 12:54:57,293 INFO  [STDOUT] Thread-18, WRITE: SSLv3 Alert, length = \n2\n2003-11-10 12:54:57,309 INFO  [STDOUT] Thread-18, called closeSocket()\n2003-11-10 12:54:57,309 INFO  [STDOUT] Thread-18, called close()\n2003-11-10 12:54:57,324 INFO  [STDOUT] Thread-18, called closeInternal(true)", "is_private": false, "id": 47117, "creator": "wtff@freenet.de", "time": "2003-11-10T14:47:24Z", "bug_id": 24563, "creation_time": "2003-11-10T14:47:24Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 24563, "attachment_id": null, "id": 47198, "time": "2003-11-11T19:37:14Z", "creator": "medthomas@ntlworld.com", "creation_time": "2003-11-11T19:37:14Z", "is_private": false, "text": "I have this working using J2SE 1.3.1_02, JSSE 1.0.3_01, JBoss 3.2.1, Tomcat \n4.1.24, NT4 SP6a, MS Certificate Server, MS IE 6. The users were authenticated \nusing a custom LoginModule (reasons explained below).\n\nIt took quite a bit of trial and error to get working because, as you are \nfinding, the error messages are not always the most helpful.\n\nI am going to assume that you can connect using https without authentication \n(ie https://localhost:8443/jmx-console works)\n\nI am also going to assume that you have imported the certificate(s) of the \nserver(s) that issued your tomcat and client certificates using a command(s) \nsimilar to:\nkeytool -import -alias CertServerName -file CertServerRootCert.cer -keystore \nc:\\jdk1.3.1_02\\jre\\lib\\security\\cacerts -storepass changeit\n\nTo keep things simple, I tried to use the UsersRolesLoginModule. However, this \nmodule always refuses null passwords. Certificates don't have passwords - \nhence the problem. I created my own login module that extended \nUsersRolesLoginModule and overrode the function that checked the password so \nit always returned true.\n\nThe second problem was the user name to use in the user.properties and \nroles.properties files. Certificate authentication in standalone tomact uses \nthe DN of the cert as the user name. Tomcat embedded in JBoss uses the \ncertificate serial number appended to the DN of the cert issuer. Further the \nwhitespace and equal signs in the DN must be escaped. This leads to \nusers.properties of the form:\nnnnnnnnnnnnnnnnnnnn\\ CN\\=certserver,\\ OU\\=unit,\\ O\\=org,\\ L\\=city,\\ \nST\\=state,\\ C\\=UK=dummypassword\n\nIf you are still having difficulties I can provide you with more detail."}, {"count": 2, "attachment_id": null, "bug_id": 24563, "is_private": false, "id": 47919, "time": "2003-11-22T10:08:30Z", "creator": "medthomas@ntlworld.com", "creation_time": "2003-11-22T10:08:30Z", "tags": [], "text": "In the absence of any further comments, I am resolving this."}]