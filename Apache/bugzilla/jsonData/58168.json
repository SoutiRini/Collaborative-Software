[{"count": 0, "tags": [], "creator": "alexander@polkabrothers.com", "text": "I am trying to handle a situation where I need to do special things to requests that otherwise would have turned into 404:s due to the requested resource doesn't exist. I can do this beautifully in Nginx like so:\n\nlocation some-regex { error_page 404 = @handle404; }\nlocation @handle404 { ... }\n\nNginx will evaluate the request fully, and send it to the $handle404 location block if it would have resulted in a 404.\n\nRewriteEngine on\nRewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteRule \"some-regex\" \"...\"\n\nApache's mod_rewrite is not capable of telling me if a certain request will result in a 404 or not, all I can do is try to guess by asking Apache to check if the requested file exists on the hard drive under the same path as what is in the URL.\n\nThis works if and only if a simple URL scheme like that is used, otherwise if fails. Examples of when it fails:\n- If an Alias directive is used for the requested URL\n- If the request depends on subsequent rewrites to map to the correct resource on the harddrive\n- If the request maps to a dynamic script that exists, but may itself return a 404 status\n\nSo my feature request is for support to be added to mod_rewrite so we can do the equivalent of what nginx supports with its error_page directive. Syntactically it could work like this:\n\nRewriteCond %{IS_404} true\nRewriteRule \"some-regex\" \"...\"\n\nNote, I am aware of Apache's ErrorDocument, but it doesn't support targeting with regular expression, or URL rewriting, which are both things I need. This feature seems like a natural fit in mod_rewrite.", "id": 184114, "attachment_id": null, "bug_id": 58168, "creation_time": "2015-07-21T23:37:32Z", "time": "2015-07-21T23:37:32Z", "is_private": false}, {"count": 1, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "text": "> Note, I am aware of Apache's ErrorDocument, but it doesn't support targeting\n> with regular expression, or URL rewriting, which are both things I need.\n> This feature seems like a natural fit in mod_rewrite.\n\nErrorDocument works inside of <LocationMatch> and its argument specifies the new URL-path.   \n\nIt's probably easier to extend ErrorDocument then to extend mod_rewrite -- mod_rewrite never runs after a status code has been determined by whichever handler is in charge.  One possible extension would be to make ErrrorDocument take an expression as an argument (as in http://httpd.apache.org/docs/2.4/expr.html)\n\nFor static files, you can also work around the DOCUMENT_ROOT issue by putting your rewrites in per-directory context.  The core will have mapped the URL to a filename and %{REQUEST_FILENAME} will be a filesystem path.\n\nThere's also FallBackResource.", "id": 184115, "time": "2015-07-21T23:47:54Z", "bug_id": 58168, "creation_time": "2015-07-21T23:47:54Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 58168, "text": "whoops, ErrroDocument already supports expressions in the final parameter.  Sees like most of the elements are there.", "id": 184116, "time": "2015-07-21T23:50:00Z", "creator": "covener@gmail.com", "creation_time": "2015-07-21T23:50:00Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 184117, "creation_time": "2015-07-21T23:55:45Z", "time": "2015-07-21T23:55:45Z", "bug_id": 58168, "text": "Sorry for the trickle here, but perhaps one thing missing in the ErrorDocument solution is that the status code does not change. It seems like that is relatively straightfoward to implement though.", "is_private": false}, {"count": 4, "tags": [], "creator": "alexander@polkabrothers.com", "attachment_id": null, "text": "I see what you mean. I had not considered using ErrorDocument via LocatioMatch, and that does indeed seem to be the way to do it.\n\nHowever, it doesn't seem to support one crucial thing, which is to provide the current REQUEST_URI to the ErrorDocument argument, although the docs seem to suggest this should be possible:\n\nErrorDocument 404 /errors%{escape:%{HTTP_URI}}\n\nI would expect the above to internally rewrite the would-be 404 result to\n/errors/the-missing-file.txt   (if http://example.org/the-missing-file.txt was requested).\n\nApache chokes out with the message:\nAdditionally, a 400 Bad Request error was encountered while trying to use an ErrorDocument to handle the request.\n\nAm I doing something wrong, or is this the one part of the puzzle that is missing, that I should do a feature request for?", "id": 184118, "time": "2015-07-22T00:30:15Z", "bug_id": 58168, "creation_time": "2015-07-22T00:30:15Z", "is_private": false}]