[{"count": 0, "tags": [], "bug_id": 40259, "attachment_id": null, "text": "FileSet should include an attribute to specify not found behavior.\n\nCurrently, if a FileSet is created with a dir attribute that points to a non-\nexisting dir, then ant fails.\n\nI have run into many situations in which I'd prefer ant to just return an empty \nFileSet.\n\nTherefore, I propose a notFound attribute for FileSet that would support at \nleast the following two values:\n\nfail (the current behavior)\nempty (returns an empty FIleSet)\n\nThe default can be set to fail since that would duplicate current behavior.\n\nIf you are contemplating changing default behavior, I think that empty is a \nmuch better default than fail except for legacy issues.\n\nThanks,\n\nRoss", "id": 92234, "time": "2006-08-15T20:59:59Z", "creator": "rgeclipse@hotmail.com", "creation_time": "2006-08-15T20:59:59Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 40259, "attachment_id": null, "text": "In Ant 1.7 you can use the <files> collection to specify files with absolute\npaths.  Since there is no dir attribute, there can be no failure due to its\nnon-existence.  Problem solved!", "id": 93870, "time": "2006-09-19T20:44:52Z", "creator": "mbenson@apache.org", "creation_time": "2006-09-19T20:44:52Z", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 40259, "is_private": false, "id": 93875, "time": "2006-09-19T21:05:26Z", "creator": "peterreilly@apache.org", "creation_time": "2006-09-19T21:05:26Z", "tags": [], "text": "I am gooing to reopen this, as an enhancement request, at least for\nthe moment.\n * It will take a *long* time before all third party antlibs are\n   1.7 capable,\n * <fileset> is part of most scripts and people know it.\n\nI ran into this problem recently. I had a directory containing jars\nin SourceCodeControl. Jars were been added and removed depending\non the code. At one stage no jar files were left, my build script\nstill worked, but my collegues did not. The reason was that the SCC system\ndid not bother to create the directory since there were no files in it.\n"}, {"count": 3, "attachment_id": null, "bug_id": 40259, "is_private": false, "id": 93883, "time": "2006-09-19T22:05:37Z", "creator": "stevel@apache.org", "creation_time": "2006-09-19T22:05:37Z", "tags": [], "text": "mmm. One problem w/ third party antlibs moving up to resources is that to do so\nproperly entails abandonding ant1.6. "}, {"count": 4, "attachment_id": null, "bug_id": 40259, "is_private": false, "id": 96050, "time": "2006-11-21T14:12:01Z", "creator": "mbenson@apache.org", "creation_time": "2006-11-21T14:12:01Z", "tags": [], "text": "We can do this, but remember that FileSets are very much used\nhowever-the-task-writer-felt-like-it.  So our main onus will be to modify\nAbstractFileSet (and possibly DirectoryScanner though I think it should already\nwork), but we still can't guarantee that 3rd-party tasks won't break down when\nusing such a fileset.  Are we as a developer community satisfied with this?"}, {"count": 5, "tags": [], "bug_id": 40259, "attachment_id": null, "text": "Documenting further thoughts on this:\n\nIf an EnumeratedAttribute is used, my preference would be:\n\nfail (default)\nwarn (empty results with a warning)\nignore (empty results, no warning)\n\nI'll add them if I think of any more.\n\nAlso, \"notfound\" is not descriptive enough an attribute name.  To me this\nsuggests \"no matching files found\" and could be confusing to users.  Verbose as\nit may be, something like \"dirnotfound\" or even the grammatically ugly\n\"dirnotexists\" carries the minimum amount of semantic content to differentiate\nbetween possible meanings, IMHO.", "id": 96095, "time": "2006-11-22T11:28:21Z", "creator": "mbenson@apache.org", "creation_time": "2006-11-22T11:28:21Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 40259, "text": "dirnotfound is not bad. But maybe we should add the \"on\" prefix, to parallel the\nboolean failonerror ==> ondirnotfound\n\nMaybe a combo failonerror+verbose might be better, because failonerror is an\nattribute used in other places. So:\n\nfailonerror=\"true\"  verbose=\"*\"     ==> fail\nfailonerror=\"false\" verbose=\"true\"  ==> warn\nfailonerror=\"false\" verbose=\"false\" ==> ignore\n\nJust thinking out loud. --DD", "id": 96100, "time": "2006-11-22T12:46:06Z", "creator": "ddevienne@gmail.com", "creation_time": "2006-11-22T12:46:06Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 40259, "is_private": false, "text": "+1 for failonerror and verbose\n\nAs regards using the fileset where the dir\nis not present, this could be a problem, we could\nlook at the ant codebase and see what (if anything)\ncode needs to be added.", "id": 96101, "time": "2006-11-22T13:33:06Z", "creator": "peterreilly@apache.org", "creation_time": "2006-11-22T13:33:06Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "DirectoryScanner currently throws an IllegalStateException if basedir does not\nexist.  Because a DS can be used standalone (it has a public constructor) it\nwould probably be easiest to make the proposed changes on DirectoryScanner and\nhave the setters on AbstractFileSet echo their settings to DirectoryScanner. \nThat would cover most stuff; simply calling getDir() against an AFS doesn't\nguarantee anything so code that doesn't verify that the result is a directory is\nalready broken if it makes that assumption and uses the directory in some way\nother than to get a DS.\n\nSo, what's the timeframe for this?  :)", "is_private": false, "id": 96103, "creator": "mbenson@apache.org", "time": "2006-11-22T13:55:59Z", "bug_id": 40259, "creation_time": "2006-11-22T13:55:59Z", "attachment_id": null}, {"count": 9, "attachment_id": null, "bug_id": 40259, "is_private": false, "id": 122477, "time": "2008-11-14T06:45:01Z", "creator": "bodewig@apache.org", "creation_time": "2008-11-14T06:45:01Z", "tags": [], "text": "\n\n*** This bug has been marked as a duplicate of bug 11270 ***"}]