[{"count": 0, "tags": [], "creator": "jonathan.gray@netdecisions.com", "attachment_id": null, "is_private": false, "id": 33615, "time": "2003-03-21T18:50:55Z", "bug_id": 18233, "creation_time": "2003-03-21T18:50:55Z", "text": "Whilst printing a String to the ServletOuputStream, if the user presses \nthe 'stop' button on their browser then an IOException is thrown.  It is \nstandard practice to try and close resources when an error occurs but when I \ntry to close the stream I get another IOException (Connection reset by peer) \nbecause the close() method is trying to flush the stream.\n\nNow, either it is standard practice to not call close() or to ignore the \nexception but either of these means that the client is not confident that all \nthe resources around the stream were cleaned up.  I consider this a usability \nbug and possibly a functional bug, I don't really have time to investigate in \nthe code any further to see whether the stream not being cleaned up causes any \nproblems.\n\nBelow is the stack trace that is thrown when trying to call close() on the \nServletOuputStream using Tomcat 4.1.18, Java 1.4.1_02 under Windows 2K SP3:\n\n  java.net.SocketException: Connection reset by peer: socket write error\n        at java.net.SocketOutputStream.socketWrite0(Native Method)\n        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)\n        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)\n        at \norg.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer.doWrite\n(InternalOutputBuffer.java:668)\n\n        at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite\n(ChunkedOutputFilter.java:166)\n        at org.apache.coyote.http11.InternalOutputBuffer.doWrite\n(InternalOutputBuffer.java:523)\n        at org.apache.coyote.Response.doWrite(Response.java:524)\n        at org.apache.coyote.tomcat4.OutputBuffer.realWriteBytes\n(OutputBuffer.java:384)\n        at org.apache.tomcat.util.buf.ByteChunk.flushBuffer(ByteChunk.java:360)\n        at org.apache.tomcat.util.buf.ByteChunk.append(ByteChunk.java:338)\n        at org.apache.tomcat.util.buf.IntermediateOutputStream.write\n(C2BConverter.java:273)\n        at sun.nio.cs.StreamEncoder$CharsetSE.writeBytes(StreamEncoder.java:334)\n        at sun.nio.cs.StreamEncoder$CharsetSE.implFlushBuffer\n(StreamEncoder.java:402)\n        at sun.nio.cs.StreamEncoder$CharsetSE.implFlush(StreamEncoder.java:406)\n        at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:150)\n        at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:213)\n        at org.apache.tomcat.util.buf.WriteConvertor.flush\n(C2BConverter.java:222)\n        at org.apache.tomcat.util.buf.C2BConverter.flushBuffer\n(C2BConverter.java:165)\n        at org.apache.coyote.tomcat4.OutputBuffer.realWriteChars\n(OutputBuffer.java:580)\n        at org.apache.tomcat.util.buf.CharChunk.flushBuffer(CharChunk.java:388)\n        at org.apache.coyote.tomcat4.OutputBuffer.close(OutputBuffer.java:313)\n        at org.apache.coyote.tomcat4.CoyoteOutputStream.close\n(CoyoteOutputStream.java:125)"}, {"count": 1, "tags": [], "text": "This bug has been resolved in 4.1.24.", "attachment_id": null, "id": 35874, "creator": "remm@apache.org", "time": "2003-04-23T10:53:23Z", "bug_id": 18233, "creation_time": "2003-04-23T10:53:23Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 18233, "attachment_id": null, "id": 67646, "time": "2004-11-30T19:29:39Z", "creator": "modyhussien@yahoo.com", "creation_time": "2004-11-30T19:29:39Z", "is_private": false, "text": "(In reply to comment #0)\n> Whilst printing a String to the ServletOuputStream, if the user presses \n> the 'stop' button on their browser then an IOException is thrown.  It is \n> standard practice to try and close resources when an error occurs but when I \n> try to close the stream I get another IOException (Connection reset by peer) \n> because the close() method is trying to flush the stream.\n> Now, either it is standard practice to not call close() or to ignore the \n> exception but either of these means that the client is not confident that \nall \n> the resources around the stream were cleaned up.  I consider this a \nusability \n> bug and possibly a functional bug, I don't really have time to investigate \nin \n> the code any further to see whether the stream not being cleaned up causes \nany \n> problems.\n> Below is the stack trace that is thrown when trying to call close() on the \n> ServletOuputStream using Tomcat 4.1.18, Java 1.4.1_02 under Windows 2K SP3:\n>   java.net.SocketException: Connection reset by peer: socket write error\n>         at java.net.SocketOutputStream.socketWrite0(Native Method)\n>         at java.net.SocketOutputStream.socketWrite\n(SocketOutputStream.java:92)\n>         at java.net.SocketOutputStream.write(SocketOutputStream.java:136)\n>         at \n> \norg.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer.doWrite\n> (InternalOutputBuffer.java:668)\n>         at org.apache.coyote.http11.filters.ChunkedOutputFilter.doWrite\n> (ChunkedOutputFilter.java:166)\n>         at org.apache.coyote.http11.InternalOutputBuffer.doWrite\n> (InternalOutputBuffer.java:523)\n>         at org.apache.coyote.Response.doWrite(Response.java:524)\n>         at org.apache.coyote.tomcat4.OutputBuffer.realWriteBytes\n> (OutputBuffer.java:384)\n>         at org.apache.tomcat.util.buf.ByteChunk.flushBuffer\n(ByteChunk.java:360)\n>         at org.apache.tomcat.util.buf.ByteChunk.append(ByteChunk.java:338)\n>         at org.apache.tomcat.util.buf.IntermediateOutputStream.write\n> (C2BConverter.java:273)\n>         at sun.nio.cs.StreamEncoder$CharsetSE.writeBytes\n(StreamEncoder.java:334)\n>         at sun.nio.cs.StreamEncoder$CharsetSE.implFlushBuffer\n> (StreamEncoder.java:402)\n>         at sun.nio.cs.StreamEncoder$CharsetSE.implFlush\n(StreamEncoder.java:406)\n>         at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:150)\n>         at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:213)\n>         at org.apache.tomcat.util.buf.WriteConvertor.flush\n> (C2BConverter.java:222)\n>         at org.apache.tomcat.util.buf.C2BConverter.flushBuffer\n> (C2BConverter.java:165)\n>         at org.apache.coyote.tomcat4.OutputBuffer.realWriteChars\n> (OutputBuffer.java:580)\n>         at org.apache.tomcat.util.buf.CharChunk.flushBuffer\n(CharChunk.java:388)\n>         at org.apache.coyote.tomcat4.OutputBuffer.close\n(OutputBuffer.java:313)\n>         at org.apache.coyote.tomcat4.CoyoteOutputStream.close\n> (CoyoteOutputStream.java:125)\n\n"}]