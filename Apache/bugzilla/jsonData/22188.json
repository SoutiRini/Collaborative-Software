[{"count": 0, "tags": [], "bug_id": 22188, "attachment_id": null, "text": "The <c:set> action in JSTL needs the capability to coerce an Object\nto an expected type using the EL \"type conversion rules\"\nwhen used as follows:\n\n <c:set target=\"${myBean}\" property=\"prop\" value=\"somevalue\"/>\n\nThe JSTL spec says:\n\n\"... set the value of the property property of the JavaBeans object\ntarget. If the type of the value to be set does not match the type of the bean\nproperty, conversion is performed according to the conversion rules defined in\nthe expression language. With the exception of a null value,\nsetting a bean property with <c:set> is therefore exactly the same as setting an\nattribute value of an action using the EL. A failure of these conversion rules to\ndetermine an appropriate type coersion leads to a JspException at runtime.\"\n\nThe JSTL 1.1 code currently uses the 1.0 ExpressionEvaluator to perform the\ncoercion. \nThis is a bug. It must rely on the JSP 2.0 ExpressionEvaluator\nto perform this type conversion.\n\nThis issue fell through the cracks because using the 1.0 ExpressionEvaluator\nworks fine as long as no new coercion rules (defined in the EL of JSP 2.0)\nare being used. The following example with BigDecimal triggers the\nissue.\n\n-----------------------------------------------------------------\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<%@ page import=\"java.math.*\" %>\n\n<%!\npublic class MyBean {\n  private BigDecimal rate;\n  public void setRate( BigDecimal rate ) {\n    this.rate = rate;\n  }\n  public BigDecimal getRate() {\n    return this.rate;\n  }\n}\n%> \n\n<h3>test conversion 2</h3>\n<% MyBean bean = new MyBean();\n   bean.setRate(new BigDecimal(\"1.23456\"));\n   pageContext.setAttribute(\"bean\", bean);\n%>\nrate is: ${bean.rate} <br>\n<jsp:setProperty name=\"bean\" property=\"rate\"\n                 value=\"${param.amount1}\" />\nnew rate1: ${bean.rate} <br>\n\n<c:set target=\"${bean}\" property=\"rate\"\n                 value=\"${param.amount2}\" />\nnew rate2: ${bean.rate} <br>\n\n-----------------------------------------------------------------", "id": 42288, "time": "2003-08-06T19:12:33Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-08-06T19:12:33Z", "is_private": false}, {"count": 1, "tags": [], "text": "Would be nice if a type conversion method would be exposed by \nthe ExpressionEvaluator interface in JSP 2.0.\n\n For example:\n\n java.lang.Object convertToExpectedType(java.lang.Object value,\n                                        java.lang.Class expectedType)\n                 throws javax.servlet.jsp.el.ELException; \n\nMade the suggestion to Mark Roth, the JSP spec lead.\n\nIn the meantime, I'm using the following (clever) fix suggested by Mark:\n\n    /**\n     * Convert an object to an expected type according to the conversion\n     * rules of the Expression Language.\n     */\n    private Object convertToExpectedType( final Object value,\n    Class expectedType )\n    throws javax.servlet.jsp.el.ELException {\n        ExpressionEvaluator evaluator = pageContext.getExpressionEvaluator();\n        return evaluator.evaluate( \"${result}\", expectedType,\n        new VariableResolver() {\n            public Object resolveVariable( String pName )\n            throws ELException {\n                return value;\n            }\n        }, null );\n    }\n\n\n", "attachment_id": null, "id": 42289, "creator": "pierre.delisle@sun.com", "time": "2003-08-06T19:21:48Z", "bug_id": 22188, "creation_time": "2003-08-06T19:21:48Z", "is_private": false}]