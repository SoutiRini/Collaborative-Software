[{"count": 0, "tags": [], "creator": "uv@upaya.co.uk", "attachment_id": null, "text": "When the SCP task receives an empty file set, it hangs permanently.\n\nLooking in org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.java, in the \nmethod doMultipleTransfer, you'll see:\n\nchannel.connect();\n\nwaitForAck(in);\nfor (Iterator i = directoryList.iterator(); i.hasNext();) {\n  Directory current = (Directory) i.next();\n  sendDirectory(current, in, out);\n}\nwaitForAck(in);\n\nNow, to my mind, this will connect, and wait for an ack, then send all \ndirectories, and wait for another ack. But what if directoryList is empty? We \neffectively end up with waitForAck(in) called twice in succession, without any \nactions in between. It would therefore appear that the SCP task is waiting for \nan ack it wouldn't get.\n\nReplacing the second ack with:\nif (directoryList.size()!=0) {\n  waitForAck(in);\n}\n\nShould fix it.\n\n[Note - I do not have an Ant development environment set up, so I am unable to \ntest this fix].\n\nUpayavira\nupayavira@apache.org", "id": 43323, "time": "2003-08-26T12:21:18Z", "bug_id": 22726, "creation_time": "2003-08-26T12:21:18Z", "is_private": false}, {"count": 1, "attachment_id": null, "creator": "bodewig@apache.org", "text": "I've take a different strategy.  If we know that we wont transfer anything at all,\ndon't even connect to the remote site.\n\nShould be fixed with nightly build 2003-08-28.", "id": 43363, "time": "2003-08-27T10:12:19Z", "bug_id": 22726, "creation_time": "2003-08-27T10:12:19Z", "tags": [], "is_private": false}]