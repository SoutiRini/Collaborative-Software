[{"count": 0, "tags": [], "text": "Created attachment 31609\nzip containing test case\n\nBasically the problem is that when VariableInfo is returned from a TagExtraInfo, the variable is declared once in the generated .java file and never again.  If any scope changes happen, like a try/catch, if/else etc etc, the variable isn't declared in subsequent scopes, and it won't compile.\n\nquick example, generates this:\ntry{\njava.lang.String message = null;\n// initialize tag\nmessage = (java.lang.String) _jspx_page_context.findAttribute(\"message\");\n} catch(Exception e) {\n// initialize tag\nmessage = (java.lang.String) _jspx_page_context.findAttribute(\"message\"); // error here, message not declared in scope\n}\n\nshould generate this:\ntry{\njava.lang.String message = null;\n// initialize tag\nmessage = (java.lang.String) _jspx_page_context.findAttribute(\"message\");\n} catch(Exception e) {\njava.lang.String message = null;\n// initialize tag\nmessage = (java.lang.String) _jspx_page_context.findAttribute(\"message\");\n}\n\n I am attaching all files required for a test case as a single zip file:\n\n./com/taglib/HelloTag.java - example tag\n./com/taglib/HelloExtraInfo.java - example tag extra info\n./hello.tld - example tld\n./badtomcat.jsp - example jsp\n./badtomcat_jsp.java - incorrect generated java code for example jsp\n\nLet me know if you have any more questions.", "is_private": false, "id": 175166, "creator": "admin@moparisthebest.com", "time": "2014-05-12T15:39:59Z", "bug_id": 56516, "creation_time": "2014-05-12T15:39:59Z", "attachment_id": 31609}, {"count": 1, "tags": [], "bug_id": 56516, "attachment_id": null, "id": 175183, "time": "2014-05-13T14:48:03Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-05-13T14:48:03Z", "is_private": false, "text": "Do you expect a variable to be declared each time when VariableInfo.getDeclare() returns true?\nWhen JSP java code is generated the java scriptlets are treated as opaque. One does not analyze what curly braces you may have in that code.\n\n\nJust a quick note:\nThe last attempt to review variables declaration (4 years ago with bug 42390 and bug 48616 ) was somewhat painful, with regressions and reverts.\n\nFor reference:\n- See places that call javax.servlet.jsp.tagext.VariableInfo.getDeclare()\n- r910792\n\nFortunately, we have test cases for 42390 and 48616 in trunk (TestScriptingVariabler, bug42390.jsp, bug48616*.jsp)."}, {"count": 2, "tags": [], "bug_id": 56516, "attachment_id": null, "text": "This has been fixed in 8.0.x for 8.0.7 onwards. Given the history of instability around changes in the this area I plan to give folks a chance to test and review this fix in 8.0.x before I back-port it to 7.0.x.", "id": 175226, "time": "2014-05-14T21:02:37Z", "creator": "markt@apache.org", "creation_time": "2014-05-14T21:02:37Z", "is_private": false}, {"count": 3, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "Re: r1594715\n\nI think this report is invalid.\n\nIn JSP specification (JSP2.3MR.pdf) there are three occurrences where an action defines a variable:\n1. A <jsp:useBean> action (chapter JSP.5.1)\n2. A custom action returning a VariableInfo with declare=true from its TEI class\n3. A tag file declaring a variable declare=true\n\nFor 1. there is explicit example on visibility of declared variables. See ch.JSP.5.1 \"<jsp:useBean>\" page \"1-95\" (133 of 594)/\n\nFor 2.,3. declaration of variables is illustrated in ch.JSP.9.4.4 \"Actions\" page \"1-196\" (234 of 594).  It also says:\n> \"Their visibility is affected by other constructs, for example scriptlets.\"\n\nFor 3. in ch.JSP.8.5.3 \"The variable Directive\" on page \"1-183\" (221 of 594) description of \"declare\" attribute says:\n> \"declare (optional) Whether the variable is declared or not in the\n> \"calling page/tag file, after this tag invocation. true is the\n> \"default.\"\n\nI see no provision for declaring the variables prematurely.\n\n\nAlso Re: r1594715\n1) I see no test example\n2) I am certain that it is wrong to prematurely declare NESTED variables.\n\nRegarding NESTED variables, iff <c:forEach> declared NESTED variables I expect the following to fail with r1594715 because of duplicate declaration of \"i\":\n[[[\n    <c:forEach var=\"i\" begin=\"1\" end=\"10\"> ${i} </c:forEach>\n    <% for (int i=0; i < 10; i++) {\n          out.println(i);\n       }\n    %>\n]]]\nActually JSTL tags do not work that way. They expose information only as JSP scoped attributes. They do not expose them as scripting (java) variables.", "id": 175234, "time": "2014-05-14T23:30:02Z", "bug_id": 56516, "creation_time": "2014-05-14T23:30:02Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 56516, "attachment_id": null, "id": 175237, "time": "2014-05-15T08:00:40Z", "creator": "markt@apache.org", "creation_time": "2014-05-15T08:00:40Z", "is_private": false, "text": "(In reply to Konstantin Kolinko from comment #3)\n> Re: r1594715\n> \n> I think this report is invalid.\n\nI'm leaning towards that conclusion.\n\n<snip/>\n\n> For 2.,3. declaration of variables is illustrated in ch.JSP.9.4.4 \"Actions\"\n> page \"1-196\" (234 of 594). \n\nThis is probably the clearest argument against the fix applied in r1594715. It is a stronger argument than JSP.1.8 \n\n> It also says:\n> \"Their visibility is affected by other constructs, for example scriptlets.\"\n\nI'm not sure what that means for the current approach that ensures variables are only declared once when multiple instances of the same tag are used.\n\nI'm going to revert this patch, resolve this issue as INVALID and write up the problem for the JSP EG to discuss."}, {"count": 5, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Specification issue:\nhttps://java.net/jira/browse/JSP-42", "id": 175238, "time": "2014-05-15T08:40:16Z", "bug_id": 56516, "creation_time": "2014-05-15T08:40:16Z", "is_private": false}, {"count": 6, "tags": [], "text": "I also tend to agree that declaring the variable once at the beginning *probably* isn't the right solution, however I think the way this is currently handled is still wrong.\n\nRight now the variable is only declared once, but in whatever scope it is used in first, so if it's in a small scope at the beginning and you declare the tag anywhere else later it breaks.  I think a better behavior would be to declare it everytime the tag is used, so if people need to put smaller scopes around their tags it's at least a decent work around.\n\nI also don't know exactly why variables aren't just declared whenever VariableInfo.getDeclare() is true, it is always in my test case, yet it never gets declared a second time.", "is_private": false, "id": 175241, "creator": "admin@moparisthebest.com", "time": "2014-05-15T10:44:12Z", "bug_id": 56516, "creation_time": "2014-05-15T10:44:12Z", "attachment_id": null}, {"count": 7, "attachment_id": null, "creator": "remm@apache.org", "text": "I also think this is invalid, although I am not the biggest expert on JSPs.\n\nThe Javadoc for scopes says:\n    /**\n     * Scope information that scripting variable is visible only within the\n     * start/end tags.\n     */\n    public static final int NESTED = 0;\n\n    /**\n     * Scope information that scripting variable is visible after start tag.\n     */\n    public static final int AT_BEGIN = 1;\n\n    /**\n     * Scope information that scripting variable is visible after end tag.\n     */\n    public static final int AT_END = 2;\n\nSo for NESTED, declaring at the beginning cannot be right, and Konstantin's example should probably work. For the other two, it's about the same, there's nothing which indicates the variable should be visible before the tag, and since the scriptlets nesting is not visible, there's no solution to that.\n\nNote: In the example given, the scope is 1 (AT_BEGIN).", "id": 175250, "time": "2014-05-15T16:26:10Z", "bug_id": 56516, "creation_time": "2014-05-15T16:26:10Z", "tags": [], "is_private": false}]