[{"count": 0, "tags": [], "bug_id": 47539, "attachment_id": null, "id": 128886, "time": "2009-07-15T13:39:25Z", "creator": "aditya_muralidharan@mastercard.com", "creation_time": "2009-07-15T13:39:25Z", "is_private": false, "text": "When decrypting as follows:\nXMLCipher keyCipher;\nkeyCipher.init(XMLCipher.DECRYPT_MODE, null);\nkeyCipher.setKEK(keyDecryptorKey);\nkeyCipher.doFinal(document, element, false);\n\n... the code path uses the EncryptedKeyResolver, which doesn't allow explicitly specifying a provider.\n\nI got the following response from Sean on security-dev:\n<response>\nWe need to add a ctor to the EncryptedKeyResolver class that takes an additional \nprovider parameter, and then change XMLCipher to call this new ctor and pass it \nthe provider it is using.\n</response>\n\nWhile I agree that this would allow us to explicitly set the provider, I think the more complete solution would be to allow distinct providers for key decryption (unwrap) versus content decryption. For the specific context in which I am using XML Security, private keys are stored on an HSM (hardware device) and requires us to use that vendor's JCE provider for the key unwrap. There is no such limitation for decryption with symmetric keys, so we end up using a software provider for decrypting the content. The upshot is that we need to be able to specify two different providers for the key unwrap versus the content decryption."}]