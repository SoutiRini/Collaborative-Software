[{"count": 0, "attachment_id": null, "creator": "sasajima@pc.fujitsu.com", "text": "If I want multiple functions ( ex. redirection for a real site or a test site )\nfor a configuration file, then \"IfDefine\" directive is a only way in actually.\nOnly commandline options can specify parameters referred by \"IfDefine\".\n\"Define\" and \"Undefine\" directive can specify parameters in configuration file.\n\nThese directives are useful in a following case : an apache provides a two\nsites, \"real.example.com\" and \"test.example.com\", using name based virtual\nhosts. \"real.example.com\" redirects \"real.example.org\". \"test.example.com\"\nredirects \"test.example.org\".\n\nhttpd.conf:\n  ...\n  <VirtualHost *>\n    ServerName real.example.com\n    Define HERE_IS_REAL\n    Include content-foo.conf\n    Include content-bar.conf\n  </VirtualHost>\n  <VirtualHost *>\n    ServerName test.example.com\n    Define HERE_IS_TEST\n    Include content-foo.conf\n    Include content-bar.conf\n  </VirtualHost>\n\ncontent-foo.conf:\n  ...\n  <IfDefine HERE_IS_REAL>\n    Redirect /foo http://real.example.org/foo\n  </IfDefine>\n  <IfDefine HERE_IS_TEST>\n    Redirect /foo http://test.example.org/foo\n  </IfDefine>\n\ncontent-bar.conf:\n  ...\n  <IfDefine HERE_IS_REAL>\n    Redirect /bar http://real.example.org/bar\n  </IfDefine>\n  <IfDefine HERE_IS_TEST>\n    Redirect /bar http://test.example.org/bar\n  </IfDefine>", "id": 76367, "time": "2005-06-14T05:18:35Z", "bug_id": 35350, "creation_time": "2005-06-14T05:18:35Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "slive@apache.org", "attachment_id": null, "is_private": false, "id": 76399, "time": "2005-06-14T15:02:27Z", "bug_id": 35350, "creation_time": "2005-06-14T15:02:27Z", "text": "I don't understand why you don't just put the Redirect directives inside the\n<VirtualHost> blocks. \n\nBut anyway, <IfDefine> will never be able to do that.  It evaluates its\narguments at start-time, not at request-time.  See:\nhttp://httpd.apache.org/docs-2.1/sections.html#types\n\nIf you need more complex config parsing, you can use a pre-processor like m4, or\nyou can look at third-party modules like mod_macro linked from\nhttp://modules.apache.org/"}, {"count": 2, "tags": [], "bug_id": 35350, "text": "I disagree.  This should not be a \"won't fix\", it really is a good feature\nrequest.  I am considering allowing such features in a future-config-rewrite...", "id": 76409, "time": "2005-06-14T22:40:47Z", "creator": "chip@force-elite.com", "creation_time": "2005-06-14T22:40:47Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 35350, "text": "Paul, mod_define exists. Someone just needs to port it to 2.0 ;-)\nI don't see a need for implementing it by ourselves again.", "id": 76420, "time": "2005-06-15T08:29:16Z", "creator": "nd@perlig.de", "creation_time": "2005-06-15T08:29:16Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "gosteen@gmail.com", "attachment_id": null, "is_private": false, "id": 102866, "time": "2007-05-04T10:30:29Z", "bug_id": 35350, "creation_time": "2007-05-04T10:30:29Z", "text": "mod_define does not allow IfDefine to test against defined values.  It appears\nto be, in essence, very similar to mod_macro(though apparently incompatible).\n\nFor quite different reasons, I could see the need to define a value to be later\ntested against IfDefine to ensure configuration sections are not repeated or\nsomehow made redundant.  This is especially useful when using something like\nmod_macro or perhaps multiple configuration files.\n\n<IfModule mod_macro.c>\n  <Macro VHost $addr $port $dir>\n    <IfDefine !HAVE_$addr_$port>\n      Define HAVE_$addr_$port\n      Listen $addr:$port\n    </IfDefine>\n\n    ...\n  </Macro>\n</IfModule>\n\nA special example would be in the case of scripts and automated\nconfiguration(e.g. web-based administration panels and the like).  The simple\nability to declare a variable to be tested elsewhere in the configuration and\nacted upon appropriately would be ideal.  An extension to this may be able to\ntest against specific values(If FOO=BAR) or offer alternatives(If..Else\nconstructs), though that is likely a whole different subject at this point.\n\nThough I do understand the desire to not turn the Apache configuration file\nsyntax into a full-blown programming language, it would be nice to not have to\nresort to an actual programming language(i.e. mod_perl) for something that\nshould be otherwise relatively simple.\n"}, {"count": 5, "tags": [], "bug_id": 35350, "is_private": false, "id": 134036, "attachment_id": null, "creator": "sf@sfritsch.de", "creation_time": "2010-01-30T03:02:01Z", "time": "2010-01-30T03:02:01Z", "text": "Define has been added to trunk in r546651\nAn UnDefine is still missing"}, {"count": 6, "tags": [], "bug_id": 35350, "is_private": false, "text": "The possibility to undefine by using 'Define !arg' has been added in r904768", "id": 134038, "time": "2010-01-30T04:19:37Z", "creator": "sf@sfritsch.de", "creation_time": "2010-01-30T04:19:37Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 35350, "is_private": false, "text": "fixed in 2.4.1", "id": 154178, "time": "2012-02-26T16:36:15Z", "creator": "sf@sfritsch.de", "creation_time": "2012-02-26T16:36:15Z", "attachment_id": null}]