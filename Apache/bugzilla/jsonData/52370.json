[{"count": 0, "tags": [], "creator": "gleonid@yahoo.com", "text": "in libapreq2-2.13.\n\nin library/util.c file there is a bug in apreq_decode implementation.\n\nBug appears when destination buffer is the same as a source.\n\nBasically problem is that if source string has at least one non encoded character in the beginning - resulting(decoded) string length ends up being lesser than it should be.\n\nhere is a proposed patch:\n\n# diff -rNu util.c.orig util.c > util.c.patch\n# patch util.c <<\n--- util.c.orig Thu Mar 05 19:39:07 2009\n+++ util.c  Wed Dec 02 16:08:13 2009\n@@ -432,6 +432,7 @@\n {\n     apr_size_t len = 0;\n     const char *end = s + slen;\n+    apr_status_t status = APR_SUCCESS;\n\n     if (s == (const char *)d) {     /* optimize for src = dest case */\n         for ( ; d < end; ++d) {\n@@ -447,7 +448,10 @@\n         slen -= len;\n     }\n\n-    return url_decode(d, dlen, s, &slen);\n+    status = url_decode(d, dlen, s, &slen);\n+    if (APR_SUCCESS == status)\n+        *dlen += len;\n+    return status;\n }\n\n APREQ_DECLARE(apr_status_t) apreq_decodev(char *d, apr_size_t *dlen,\n<<", "id": 152302, "time": "2011-12-19T21:36:18Z", "bug_id": 52370, "creation_time": "2011-12-19T21:36:18Z", "is_private": false, "attachment_id": null}]