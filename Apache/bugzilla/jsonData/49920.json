[{"count": 0, "tags": [], "bug_id": 49920, "text": "DailyRollingFileAppender.rollOver() method catch a FileNotFoundException from FileAppender superclass setFile method:\n\nthis.setFile(fileName, true, this.bufferedIO, this.bufferSize);\n\nWhen this exception is thrown, WriterAppender.qw might be left as null causing all further subAppend(LoggingEvent) invocations failed with NullPointerException.\n\nI noticed that setFile might fail with FileNotFoundException when the filesystem is full and even an empty file cannot be created. The scenario is as follows (code from http://repo1.maven.org/maven2/log4j/log4j/1.2.16/log4j-1.2.16-sources.jar):\n\n1. current log file name is \"test.log\"\n2. a filesystem where test.log is kept become full\n3. DailyRollingFileAppender.rollOver() method successfully closes current (test.log) file and successfully renames it to a timestamped file (test.log.yyyy-MM-dd)\n4. DailyRollingFileAppender.rollOver() calls setFile from FileAppender superclass to open the current log file (test.log) again. When setFile is called that file doesn't exist as it was previously renamed to a timestamped filename. Following code from FileAppender.setFile(...) will throw FileNotFoundException:\n\nFileOutputStream ostream = null;\n    try {\n          //\n          //   attempt to create file\n          //\n          ostream = new FileOutputStream(fileName, append);\n    } catch(FileNotFoundException ex) {\n          //\n          //   if parent directory does not exist then\n          //      attempt to create it and try to create file\n          //      see bug 9150\n          //\n          String parentName = new File(fileName).getParent();\n          if (parentName != null) {\n             File parentDir = new File(parentName);\n             if(!parentDir.exists() && parentDir.mkdirs()) {\n                ostream = new FileOutputStream(fileName, append);\n             } else {\n                throw ex;\n             }\n          } else {\n             throw ex;\n          }\n    }\nFileNotFoundException can be thrown if it is impossible to create a new empty file when the filesystem is full.\n\n5. DailyRollingFileAppender.rollOver() will catch that exception and log it using error handler and then continue its flow. It will leave its QuietWriter qw field set to null.\n\nEach next logging event passed to subAppend method will cause NullPointerException (and in case of AsyncAppender calling it will cause AsyncAppender async thread to die as it doesn't catch NPE).", "id": 139849, "time": "2010-09-13T08:33:04Z", "creator": "piotr@bzdyl.net", "creation_time": "2010-09-13T08:33:04Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 49920, "attachment_id": 26172, "id": 140730, "time": "2010-10-13T14:07:41Z", "creator": "yerenkow@uct.ua", "creation_time": "2010-10-13T14:07:41Z", "is_private": false, "text": "Created attachment 26172\nProposed simple patch for fix this\n\nIf new file creation failed, at each next event appender will try to create file.\n\nPatch tested with several run-out-of-space events, occured in one lifetime of app.\nWorking ;)"}, {"count": 2, "tags": [], "creator": "yerenkow@gmail.com", "attachment_id": null, "text": "Is this going to be fixed?", "id": 166841, "time": "2013-04-25T05:07:13Z", "bug_id": 49920, "creation_time": "2013-04-25T05:07:13Z", "is_private": false}]