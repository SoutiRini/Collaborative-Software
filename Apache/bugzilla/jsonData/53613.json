[{"count": 0, "tags": [], "bug_id": 53613, "attachment_id": 29122, "id": 160950, "time": "2012-07-27T14:42:05Z", "creator": "jbatchelor@mutualnc.com", "creation_time": "2012-07-27T14:42:05Z", "is_private": false, "text": "Created attachment 29122\nThis is the spreadsheet that my program tries to open and close.  The program corrupts the spreadsheet when run.\n\nI experience this exception being thrown:\n\norg.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Rule M2.4 exception : this error should NEVER happen, if so please send a mail to the developers team, thanks !\n\nThis is example code that triggers the error.  The statement wb.write(fileOut); specifically seems to be the culprit.\n\npackage areacontrol;\n\npublic class AreaControl_3 {\n    \n    public static void main(String[] args) {\n      String filename = \"C:\\\\java\\\\values.xlsx\";\n      \n      try{\n          org.apache.poi.openxml4j.opc.OPCPackage opc = \n                  org.apache.poi.openxml4j.opc.OPCPackage.open(filename);\n          \n          org.apache.poi.xssf.usermodel.XSSFWorkbook wb = \n                  new org.apache.poi.xssf.usermodel.XSSFWorkbook(opc);\n          \n          opc.close();\n          \n          java.io.FileOutputStream fileOut = \n                  new java.io.FileOutputStream(filename);\n          \n          wb.write(fileOut);\n          \n          fileOut.close();  \n          \n        }catch(Exception e){\n            System.out.println(e);\n        }\n   }\n}\n\nThis code does not generate the exception:\n\npackage areacontrol;\n\npublic class AreaControl_3_1 {\n    \n    public static void main(String[] args) {\n      String filename = \"C:\\\\java\\\\values.xlsx\";\n      \n      try{          \n          java.io.FileInputStream fis = \n                  new java.io.FileInputStream(filename);\n          \n          org.apache.poi.xssf.usermodel.XSSFWorkbook wb = \n                  new org.apache.poi.xssf.usermodel.XSSFWorkbook(fis);\n          \n          fis.close();\n                    \n          java.io.FileOutputStream fileOut = \n                  new java.io.FileOutputStream(filename);\n          \n          wb.write(fileOut);\n          \n          fileOut.close();                    \n          \n        }catch(Exception e){\n            System.out.println(e);\n        }\n   }\n}\n\nI have attached the spreadsheet."}, {"count": 1, "tags": [], "bug_id": 53613, "attachment_id": null, "is_private": false, "id": 160979, "time": "2012-07-29T11:04:40Z", "creator": "markbrdsly@tiscali.co.uk", "creation_time": "2012-07-29T11:04:40Z", "text": "Not so sure that this is an error but it certainly could be a problem with the javadoc for the XSSFWorkbook/OPCPackage classes.\n\nHad a quick play with the code this morning and read the full stacktrace produced when the exception is thrown. The source of the exception is the write method of the workbook - or one of the methods it calls - and it appears to be caused by the fact that the OPCPackage is no longer available when the workbook is being written out. If the call to the close() method of the OPCPackage instance if moved to follow the write() method of the workbook, then the exception is not thrown.\n\nSo, it seems that if a workbook is cretade from an instance of the OPCPackage class, the OPCPacakge instance must not be disposed of until after the workbook has been written. This change the the code, removed the problem completely;\n\norg.apache.poi.openxml4j.opc.OPCPackage opc = \n   org.apache.poi.openxml4j.opc.OPCPackage.open(filename);\norg.apache.poi.xssf.usermodel.XSSFWorkbook wb =\n   new org.apache.poi.xssf.usermodel.XSSFWorkbook(opc);\njava.io.FileOutputStream fileOut = new java.io.FileOutputStream(filename);\nwb.write(fileOut);\nopc.close();\nfileOut.close();  \n\nPerhaps documenting this in the javadoc for the workbook and OPCPackage classes would be sufficient.\n\nMark B"}, {"count": 2, "attachment_id": null, "bug_id": 53613, "is_private": false, "id": 192661, "time": "2016-07-26T19:38:10Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-07-26T19:38:10Z", "tags": [], "text": "In Bug #59634 we adjusted javadoc to state that the object should not be used at all any more after the close() method was called. See also r1753912.\n\n*** This bug has been marked as a duplicate of bug 59634 ***"}]