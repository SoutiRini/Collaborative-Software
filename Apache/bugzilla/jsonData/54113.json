[{"count": 0, "tags": [], "bug_id": 54113, "attachment_id": 29565, "id": 163262, "time": "2012-11-07T14:04:45Z", "creator": "matthias8283@gmx.at", "creation_time": "2012-11-07T14:04:45Z", "is_private": false, "text": "Created attachment 29565\nJava Thread Dump\n\nI'm getting a dead lock in the CompareUtil class, see the attached thread dump. \n\nHere small fragment of the thread dump\n\n[2012-11-07 14:06:25] [info] Found one Java-level deadlock:\n[2012-11-07 14:06:25] [info] =============================\n[2012-11-07 14:06:25] [info] \n[2012-11-07 14:06:25] [info] \"http-80-exec-58\":\n[2012-11-07 14:06:25] [info]   waiting to lock monitor 0x0000000006ca9480\n[2012-11-07 14:06:25] [info]  (object 0x000000071fe9bd00, a java.util.Vector)\n[2012-11-07 14:06:25] [info] ,\n  which is held by \"http-80-exec-5\"\n[2012-11-07 14:06:25] [info] \n[2012-11-07 14:06:25] [info] \"http-80-exec-5\":\n[2012-11-07 14:06:25] [info]   waiting to lock monitor 0x00000000116ecfc8\n[2012-11-07 14:06:25] [info]  (object 0x000000071fe9a000, a java.util.Vector)\n[2012-11-07 14:06:25] [info] ,\n  which is held by \"http-80-exec-18\"\n[2012-11-07 14:06:25] [info] \n[2012-11-07 14:06:25] [info] \"http-80-exec-18\":\n[2012-11-07 14:06:25] [info]   waiting to lock monitor 0x0000000006ca9480\n[2012-11-07 14:06:25] [info]  (object 0x000000071fe9bd00, a java.util.Vector)\n[2012-11-07 14:06:25] [info] ,\n  which is held by \"http-80-exec-5\"\n[2012-11-07 14:06:25] [info] \n[2012-11-07 14:06:25] [info] \n[2012-11-07 14:06:25] [info] Java stack information for the threads listed above:\n[2012-11-07 14:06:25] [info] ===================================================\n[2012-11-07 14:06:25] [info] \"http-80-exec-58\":\n[2012-11-07 14:06:25] [info] \tat java.util.Vector.equals(Vector.java:925)\n[2012-11-07 14:06:25] [info] \t- waiting to lock <0x000000071fe9bd00> \n[2012-11-07 14:06:25] [info] (a java.util.Vector)\n[2012-11-07 14:06:25] [info] \tat org.apache.fop.util.CompareUtil.equal(CompareUtil.java:38)\n[2012-11-07 14:06:25] [info] \tat org.apache.fop.fo.properties.ListProperty.equals(ListProperty.java:123)\n[2012-11-07 14:06:25] [info] \tat org.apache.fop.fo.properties.PropertyCache.eq(PropertyCache.java:193)\n[2012-11-07 14:06:25] [info] \tat org.apache.fop.fo.properties.PropertyCache.fetch(PropertyCache.java:134)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.properties.FontFamilyProperty$Maker.make(FontFamilyProperty.java:94)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.PropertyList.convertAttributeToProperty(PropertyList.java:413)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.PropertyList.addAttributesToList(PropertyList.java:321)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.FObj.processNode(FObj.java:122)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.FOTreeBuilder$MainFOHandler.startElement(FOTreeBuilder.java:280)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.FOTreeBuilder.startElement(FOTreeBuilder.java:175)\n[2012-11-07 14:06:26] [info] \tat org.apache.xalan.transformer.TransformerIdentityImpl.startElement(TransformerIdentityImpl.java:1073)\n[2012-11-07 14:06:26] [info] \tat org.apache.xml.serializer.TreeWalker.startNode(TreeWalker.java:359)\n[2012-11-07 14:06:26] [info] \tat org.apache.xml.serializer.TreeWalker.traverse(TreeWalker.java:145)\n[2012-11-07 14:06:26] [info] \tat org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:390)\n[2012-11-07 14:06:26] [info] \tat smc.fop.FopWrapper.transform(FopWrapper.java:150)\n[2012-11-07 14:06:26] [info] \tat smc.fop.FopWrapper.transform(FopWrapper.java:125)\n[2012-11-07 14:06:26] [info] \tat smc.plugin.Dom2PDF.process(Dom2PDF.java:179)\n[2012-11-07 14:06:26] [info] \tat sun.reflect.GeneratedMethodAccessor97.invoke(Unknown Source)\n[2012-11-07 14:06:26] [info] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n[2012-11-07 14:06:26] [info] \tat java.lang.reflect.Method.invoke(Method.java:597)\n[2012-11-07 14:06:26] [info] \tat smc.transform.core.dynacode.DynaCode$MyInvocationHandler.invoke(DynaCode.java:374)\n[2012-11-07 14:06:26] [info] \tat $Proxy35.process(Unknown Source)\n[2012-11-07 14:06:26] [info] \tat smc.transform.core.TransformerStep.processDocument(TransformerStep.java:211)\n[2012-11-07 14:06:26] [info] \tat smc.transform.core.Transformer.process(Transformer.java:491)\n[2012-11-07 14:06:26] [info] \tat smc.transform.core.Transformer.process(Transformer.java:442)\n[2012-11-07 14:06:26] [info] \tat smc.transform.TransformServlet.doGet(TransformServlet.java:184)\n[2012-11-07 14:06:26] [info] \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:617)\n[2012-11-07 14:06:26] [info] \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:378)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.ExceptionTranslationFilter.doFilterHttp(ExceptionTranslationFilter.java:101)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.providers.anonymous.AnonymousProcessingFilter.doFilterHttp(AnonymousProcessingFilter.java:105)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter.doFilterHttp(SecurityContextHolderAwareRequestFilter.java:91)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.basicauth.BasicProcessingFilter.doFilterHttp(BasicProcessingFilter.java:174)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.AbstractProcessingFilter.doFilterHttp(AbstractProcessingFilter.java:277)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.logout.LogoutFilter.doFilterHttp(LogoutFilter.java:89)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.context.HttpSessionContextIntegrationFilter.doFilterHttp(HttpSessionContextIntegrationFilter.java:235)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy.doFilter(FilterChainProxy.java:175)\n[2012-11-07 14:06:26] [info] \tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:183)\n[2012-11-07 14:06:26] [info] \tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:138)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)\n[2012-11-07 14:06:26] [info] \tat org.apache.coyote.http11.Http11NioProcessor.process(Http11NioProcessor.java:880)\n[2012-11-07 14:06:26] [info] \tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:719)\n[2012-11-07 14:06:26] [info] \tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2081)\n[2012-11-07 14:06:26] [info] \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n[2012-11-07 14:06:26] [info] \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n[2012-11-07 14:06:26] [info] \tat java.lang.Thread.run(Thread.java:662)\n[2012-11-07 14:06:26] [info] \"http-80-exec-5\":\n[2012-11-07 14:06:26] [info] \tat java.util.Vector.size(Vector.java:268)\n[2012-11-07 14:06:26] [info] \t- waiting to lock <0x000000071fe9a000> \n[2012-11-07 14:06:26] [info] (a java.util.Vector)\n[2012-11-07 14:06:26] [info] \tat java.util.AbstractList.listIterator(AbstractList.java:312)\n[2012-11-07 14:06:26] [info] \tat java.util.AbstractList.listIterator(AbstractList.java:284)\n[2012-11-07 14:06:26] [info] \tat java.util.AbstractList.equals(AbstractList.java:503)\n[2012-11-07 14:06:26] [info] \tat java.util.Vector.equals(Vector.java:925)\n[2012-11-07 14:06:26] [info] \t- locked <0x000000071fe9bd00> \n[2012-11-07 14:06:26] [info] (a java.util.Vector)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.util.CompareUtil.equal(CompareUtil.java:38)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.properties.ListProperty.equals(ListProperty.java:123)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.util.CompareUtil.equal(CompareUtil.java:38)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.properties.CommonFont.equals(CommonFont.java:240)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.properties.PropertyCache.eq(PropertyCache.java:193)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.properties.PropertyCache.fetch(PropertyCache.java:134)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.properties.CommonFont.getInstance(CommonFont.java:132)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.PropertyList.getFontProps(PropertyList.java:642)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.flow.Block.bind(Block.java:111)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.FObj.processNode(FObj.java:124)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.FOTreeBuilder$MainFOHandler.startElement(FOTreeBuilder.java:280)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.FOTreeBuilder.startElement(FOTreeBuilder.java:175)\n[2012-11-07 14:06:26] [info] \tat org.apache.xalan.transformer.TransformerIdentityImpl.startElement(TransformerIdentityImpl.java:1073)\n[2012-11-07 14:06:26] [info] \tat org.apache.xml.serializer.TreeWalker.startNode(TreeWalker.java:359)\n[2012-11-07 14:06:26] [info] \tat org.apache.xml.serializer.TreeWalker.traverse(TreeWalker.java:145)\n[2012-11-07 14:06:26] [info] \tat org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:390)\n[2012-11-07 14:06:26] [info] \tat smc.fop.FopWrapper.transform(FopWrapper.java:150)\n[2012-11-07 14:06:26] [info] \tat smc.fop.FopWrapper.transform(FopWrapper.java:125)\n[2012-11-07 14:06:26] [info] \tat smc.plugin.Dom2PDF.process(Dom2PDF.java:179)\n[2012-11-07 14:06:26] [info] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n[2012-11-07 14:06:26] [info] \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n[2012-11-07 14:06:26] [info] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n[2012-11-07 14:06:26] [info] \tat java.lang.reflect.Method.invoke(Method.java:597)\n[2012-11-07 14:06:26] [info] \tat smc.transform.core.dynacode.DynaCode$MyInvocationHandler.invoke(DynaCode.java:374)\n[2012-11-07 14:06:26] [info] \tat $Proxy35.process(Unknown Source)\n[2012-11-07 14:06:26] [info] \tat smc.transform.core.TransformerStep.processDocument(TransformerStep.java:211)\n[2012-11-07 14:06:26] [info] \tat smc.transform.core.Transformer.process(Transformer.java:491)\n[2012-11-07 14:06:26] [info] \tat smc.transform.core.Transformer.process(Transformer.java:442)\n[2012-11-07 14:06:26] [info] \tat smc.transform.TransformServlet.doGet(TransformServlet.java:184)\n[2012-11-07 14:06:26] [info] \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:617)\n[2012-11-07 14:06:26] [info] \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:378)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.ExceptionTranslationFilter.doFilterHttp(ExceptionTranslationFilter.java:101)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.providers.anonymous.AnonymousProcessingFilter.doFilterHttp(AnonymousProcessingFilter.java:105)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter.doFilterHttp(SecurityContextHolderAwareRequestFilter.java:91)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.basicauth.BasicProcessingFilter.doFilterHttp(BasicProcessingFilter.java:174)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.AbstractProcessingFilter.doFilterHttp(AbstractProcessingFilter.java:277)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.logout.LogoutFilter.doFilterHttp(LogoutFilter.java:89)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.context.HttpSessionContextIntegrationFilter.doFilterHttp(HttpSessionContextIntegrationFilter.java:235)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy.doFilter(FilterChainProxy.java:175)\n[2012-11-07 14:06:26] [info] \tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:183)\n[2012-11-07 14:06:26] [info] \tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:138)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)\n[2012-11-07 14:06:26] [info] \tat org.apache.coyote.http11.Http11NioProcessor.process(Http11NioProcessor.java:880)\n[2012-11-07 14:06:26] [info] \tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:719)\n[2012-11-07 14:06:26] [info] \tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2081)\n[2012-11-07 14:06:26] [info] \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n[2012-11-07 14:06:26] [info] \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n[2012-11-07 14:06:26] [info] \tat java.lang.Thread.run(Thread.java:662)\n[2012-11-07 14:06:26] [info] \"http-80-exec-18\":\n[2012-11-07 14:06:26] [info] \tat java.util.Vector.get(Vector.java:693)\n[2012-11-07 14:06:26] [info] \t- waiting to lock <0x000000071fe9bd00> \n[2012-11-07 14:06:26] [info] (a java.util.Vector)\n[2012-11-07 14:06:26] [info] \tat java.util.AbstractList$Itr.next(AbstractList.java:345)\n[2012-11-07 14:06:26] [info] \tat java.util.AbstractList.equals(AbstractList.java:506)\n[2012-11-07 14:06:26] [info] \tat java.util.Vector.equals(Vector.java:925)\n[2012-11-07 14:06:26] [info] \t- locked <0x000000071fe9a000> \n[2012-11-07 14:06:26] [info] (a java.util.Vector)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.util.CompareUtil.equal(CompareUtil.java:38)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.properties.ListProperty.equals(ListProperty.java:123)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.util.CompareUtil.equal(CompareUtil.java:38)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.properties.CommonFont.equals(CommonFont.java:240)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.properties.PropertyCache.eq(PropertyCache.java:193)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.properties.PropertyCache.fetch(PropertyCache.java:134)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.properties.CommonFont.getInstance(CommonFont.java:132)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.PropertyList.getFontProps(PropertyList.java:642)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.flow.Block.bind(Block.java:111)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.FObj.processNode(FObj.java:124)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.FOTreeBuilder$MainFOHandler.startElement(FOTreeBuilder.java:280)\n[2012-11-07 14:06:26] [info] \tat org.apache.fop.fo.FOTreeBuilder.startElement(FOTreeBuilder.java:175)\n[2012-11-07 14:06:26] [info] \tat org.apache.xalan.transformer.TransformerIdentityImpl.startElement(TransformerIdentityImpl.java:1073)\n[2012-11-07 14:06:26] [info] \tat org.apache.xml.serializer.TreeWalker.startNode(TreeWalker.java:359)\n[2012-11-07 14:06:26] [info] \tat org.apache.xml.serializer.TreeWalker.traverse(TreeWalker.java:145)\n[2012-11-07 14:06:26] [info] \tat org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:390)\n[2012-11-07 14:06:26] [info] \tat smc.fop.FopWrapper.transform(FopWrapper.java:150)\n[2012-11-07 14:06:26] [info] \tat smc.fop.FopWrapper.transform(FopWrapper.java:125)\n[2012-11-07 14:06:26] [info] \tat smc.plugin.Dom2PDF.process(Dom2PDF.java:179)\n[2012-11-07 14:06:26] [info] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n[2012-11-07 14:06:26] [info] \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n[2012-11-07 14:06:26] [info] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n[2012-11-07 14:06:26] [info] \tat java.lang.reflect.Method.invoke(Method.java:597)\n[2012-11-07 14:06:26] [info] \tat smc.transform.core.dynacode.DynaCode$MyInvocationHandler.invoke(DynaCode.java:374)\n[2012-11-07 14:06:26] [info] \tat $Proxy35.process(Unknown Source)\n[2012-11-07 14:06:26] [info] \tat smc.transform.core.TransformerStep.processDocument(TransformerStep.java:211)\n[2012-11-07 14:06:26] [info] \tat smc.transform.core.Transformer.process(Transformer.java:491)\n[2012-11-07 14:06:26] [info] \tat smc.transform.core.Transformer.process(Transformer.java:442)\n[2012-11-07 14:06:26] [info] \tat smc.transform.TransformServlet.doGet(TransformServlet.java:184)\n[2012-11-07 14:06:26] [info] \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:617)\n[2012-11-07 14:06:26] [info] \tat javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n[2012-11-07 14:06:26] [info] \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:378)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:109)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.ExceptionTranslationFilter.doFilterHttp(ExceptionTranslationFilter.java:101)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.providers.anonymous.AnonymousProcessingFilter.doFilterHttp(AnonymousProcessingFilter.java:105)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.wrapper.SecurityContextHolderAwareRequestFilter.doFilterHttp(SecurityContextHolderAwareRequestFilter.java:91)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:26] [info] \tat org.springframework.security.ui.basicauth.BasicProcessingFilter.doFilterHttp(BasicProcessingFilter.java:174)\n[2012-11-07 14:06:27] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:27] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:27] [info] \tat org.springframework.security.ui.AbstractProcessingFilter.doFilterHttp(AbstractProcessingFilter.java:277)\n[2012-11-07 14:06:27] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:27] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:27] [info] \tat org.springframework.security.ui.logout.LogoutFilter.doFilterHttp(LogoutFilter.java:89)\n[2012-11-07 14:06:27] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:27] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:27] [info] \tat org.springframework.security.context.HttpSessionContextIntegrationFilter.doFilterHttp(HttpSessionContextIntegrationFilter.java:235)\n[2012-11-07 14:06:27] [info] \tat org.springframework.security.ui.SpringSecurityFilter.doFilter(SpringSecurityFilter.java:53)\n[2012-11-07 14:06:27] [info] \tat org.springframework.security.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:390)\n[2012-11-07 14:06:27] [info] \tat org.springframework.security.util.FilterChainProxy.doFilter(FilterChainProxy.java:175)\n[2012-11-07 14:06:27] [info] \tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:183)\n[2012-11-07 14:06:27] [info] \tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:138)\n[2012-11-07 14:06:27] [info] \tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n[2012-11-07 14:06:27] [info] \tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n[2012-11-07 14:06:27] [info] \tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n[2012-11-07 14:06:27] [info] \tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n[2012-11-07 14:06:27] [info] \tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)\n[2012-11-07 14:06:27] [info] \tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n[2012-11-07 14:06:27] [info] \tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n[2012-11-07 14:06:27] [info] \tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)\n[2012-11-07 14:06:27] [info] \tat org.apache.coyote.http11.Http11NioProcessor.process(Http11NioProcessor.java:880)\n[2012-11-07 14:06:27] [info] \tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:719)\n[2012-11-07 14:06:27] [info] \tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2081)\n[2012-11-07 14:06:27] [info] \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n[2012-11-07 14:06:27] [info] \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n[2012-11-07 14:06:27] [info] \tat java.lang.Thread.run(Thread.java:662)\n[2012-11-07 14:06:27] [info] \nFound 1 deadlock."}, {"count": 1, "tags": [], "bug_id": 54113, "attachment_id": null, "id": 163282, "time": "2012-11-08T08:33:30Z", "creator": "alex.giotis@gmail.com", "creation_time": "2012-11-08T08:33:30Z", "is_private": false, "text": "Please attach an XSL-FO that any of Tomcat's \"http-80-exec-*\" were rendering so that this can be reproduced and then verify that it is resolved."}, {"count": 2, "tags": [], "bug_id": 54113, "attachment_id": 29665, "id": 163768, "time": "2012-12-03T02:54:01Z", "creator": "gareth@motorweb.co.nz", "creation_time": "2012-12-03T02:54:01Z", "is_private": false, "text": "Created attachment 29665\nThread dump snippet"}, {"count": 3, "tags": [], "bug_id": 54113, "attachment_id": null, "id": 163769, "time": "2012-12-03T03:07:39Z", "creator": "gareth@motorweb.co.nz", "creation_time": "2012-12-03T03:07:39Z", "is_private": false, "text": "I've just hit this deadlock with FOP 1.1 in our production system (thread dump snippet attached). It ran fine for a couple of weeks and then locked up. Given this it would appear to be a race condition, and could not be reproduced by running the same XSL-FO as requested by Alex Giotis.\n\nIt looks like this may have been exposed by the refactoring of PropertyCache for 1.1, but my initial investigation suggests the root of the cause is putting a Vector in the PropertyCache. When two threads are fetching from the cache they compare two Vectors to each other and deadlock on the synchronized equals and listIterator methods.\n\nIt would be better to use some other List implementation, or failing that, synchronizing the cache fetch method."}, {"count": 4, "tags": [], "bug_id": 54113, "attachment_id": null, "id": 163782, "time": "2012-12-03T11:25:33Z", "creator": "alex.giotis@gmail.com", "creation_time": "2012-12-03T11:25:33Z", "is_private": false, "text": "Gareth, I believe that this is a bug exposed by fixing some equals/hashcode implementations. Those changes were introduced during the refactoring of PropertyCache (as you wrote) and I also believe that the usage of Vectors is problematic. I would prefer to have UnmodifiableLists (or some other immutable structure) containing trimToSize() ArrayLists to minimise memory requirements.\n\n\nWith my previous comment, I was asking for an XSL:FO that has the potential of triggering this deadlock. To reproduce it, one would need to render it concurrently by different threads, probably connect a debugger and put some breakpoints or change code to add some delays.\n\nI understand that this is not always easy as one may need to anonymise the input. I guess I would see blocks like:\n\n<fo:block font-family=\"Arial\" font-size=\"12pt\">\nand \n<fo:block font-size=\"12pt\" font-family=\"Arial\">\n\nbut the effort to fix it would be wasted if this is wrong."}, {"count": 5, "attachment_id": null, "bug_id": 54113, "is_private": false, "id": 163802, "time": "2012-12-03T21:13:14Z", "creator": "gareth@motorweb.co.nz", "creation_time": "2012-12-03T21:13:14Z", "tags": [], "text": "(In reply to comment #4)\n\nRight, that makes sense. Unfortunately it's not possible to determine from our stack trace which fo was being used, but it's quite likely somewhere in our codebase we have defined the parameters in a different order."}]