[{"count": 0, "attachment_id": null, "bug_id": 17844, "is_private": false, "id": 32880, "time": "2003-03-10T21:12:06Z", "creator": "rob_reed_becker@yahoo.com", "creation_time": "2003-03-10T21:12:06Z", "tags": [], "text": "My idea is to make adding additional task jars into Ant very easy.  Ideally, you\nwould create your task sources, and a tasklist.properties which would map the\ntagname to the classname (like specifying a file or resource properties in a\ntaskdef).  You would then create the jar file of your classes and put the\ntasklist.properties in the META-INF directory of the jar file.  You could use\nAnt to do this :)  Now place your add-on jar into the Ant lib directory.\n\nYou should now be able to use your custom tasks, and filters in any build file.\n This would be made possible by having Ant look at the jar files in the lib\ndirectory, and looking for the META-INF/tasklist.properties in each one.  If it\nis there it will define those tasks using the current classpath plus that\njarfile (and possibly also the classpath specified in the jar manifest).\n\nThis should make it so that all you have to do to extend Ant is drop a jar into\nthe lib directory."}, {"count": 1, "tags": [], "bug_id": 17844, "is_private": false, "id": 34239, "attachment_id": null, "creator": "jan@materne.de", "creation_time": "2003-04-01T13:35:14Z", "time": "2003-04-01T13:35:14Z", "text": "There could be a problem if multiple addins uses the same name for different \ntasks. So the order of loading would be important. First loaded wins (like \nproperties).\n\n"}, {"text": "Created attachment 5838\nquery META-INF/taskdef/default.properties", "tags": [], "creator": "chonton@acero.com", "is_private": false, "count": 2, "id": 35231, "time": "2003-04-15T16:15:44Z", "bug_id": 17844, "creation_time": "2003-04-15T16:15:44Z", "attachment_id": 5838}, {"count": 3, "tags": [], "bug_id": 17844, "text": "there is a plan to create so-called \"antlib\" files for ant 1.6. An antlib \nproposal exists already in the CVS repository of ant. It is not yet sure how the \nantlib concept will be implemented. There will be a discussion about this issue \non the ant development list and/or the ant user list.", "id": 35275, "attachment_id": null, "creator": "levylambert@tiscali-dsl.de", "creation_time": "2003-04-15T22:38:14Z", "time": "2003-04-15T22:38:14Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 17844, "text": "Created attachment 5991\nfixes to get unit tests working", "id": 35964, "attachment_id": 5991, "creator": "peter.reilly@corvil.com", "creation_time": "2003-04-24T09:32:01Z", "time": "2003-04-24T09:32:01Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 17844, "text": "I am looking at patch id = 5838. It is really cool.\nHowever it does place a new requirement on the use of the\nProject object. One needs to call Project#setCoreLoader()\nto get the taskdefs and the typedefs, or one needs to clone\nthe taskdefs and the typedefs from a parent Project. The\nsecond is done by the Ant Task, (and thus by antcall and\nsubant), but for the unit tests a Project Object is created\nwithout a parent project.  Patch id=5991, adds a call\nto setCoreLoader() for BuildFileTest and for ProjectTest\n ", "id": 35966, "attachment_id": null, "creator": "peter.reilly@corvil.com", "creation_time": "2003-04-24T09:50:28Z", "time": "2003-04-24T09:50:28Z", "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 17844, "is_private": false, "id": 129291, "time": "2009-07-30T07:36:23Z", "creator": "bodewig@apache.org", "creation_time": "2009-07-30T07:36:23Z", "tags": [], "text": "I think the idea is implemented by antlibs and autoloading of antlib.xml for\n\"correct\" namespace URLs now."}]