[{"count": 0, "tags": [], "creator": "NOS@Utel.no", "attachment_id": null, "text": "Ive tested an installation that was configured with Http11NioProtocol. When sent a HEAD request, the connection just gets closed. With the default HTTP/1.1 connector the HEAD requests gets a proper response. (I'm doing a HEAD / on a default installation, so it's the default tomcat / page that gets served, not a custom servlet). I have not checked how this behaves with ordinary GET/POST requests.\n\nThe part of the default server.xml that I altered:\n\n      <Connector port=\"8080\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n               connectionTimeout=\"20000\"\n               compression=\"on\"\n               compressionMinSize=\"8912\"\n               noCompressionUserAgents=\"gozilla, traviata\"\n               compressableMimeType=\"text/html,text/xml,text/plain\"\n               redirectPort=\"8443\" />\n\n\nThis seems to happen when the request headers get sent in several IP packets. e.g. the HTTP request was:\n\nHEAD / HTTP/1.0\\r\\n\nHost: web01.example.com\\r\\n\nUser-Agent: go http package\\r\\n\n\\r\\n\n\nThis request got sent in 4 different packets(tcp segments) - discovered with Wireshark\n\n1. packet: HEAD / HTTP/1.0\\r\\n\n2. packet: Host: web01.myserver.internal\\r\\n\n3. packet: User-Agent: go http package\\r\\n\n4. packet: \\r\\n\n\nThe HTTP/1.1 connector seems to handle the above case fine, responds with 200 OK and a proper response. When the Http11NioProtocol is used, there's no response, the TCP connection just gets closed from the Tomcat side.\n\nThis happens specifically when using the go http library(http://golang.org/) run on Fedora 14, below is the simple test case written in go - but I'd guess there's no guarantee the packets always gets sent in different segments (then again maybe the go http library disables the Nagle algorithm)\n\nIf anyone want to try to reproduce this using go(http://golang.org/) the simple test was this program:\n\npackage main\nimport (\n    \"http\"\n)\nfunc main() {\n    resp, err := http.Head(\"http://web01.myserver.internal/\")\n    println(\"after\")\n    if err != nil {\n        print(\"Error::\")\n        println(err.String())\n    } else {\n        println(resp.Status)\n    }\n}", "id": 141495, "time": "2010-11-05T13:54:20Z", "bug_id": 50224, "creation_time": "2010-11-05T13:54:20Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 50224, "attachment_id": null, "text": "\n\n*** This bug has been marked as a duplicate of bug 50072 ***", "id": 141497, "time": "2010-11-05T14:04:35Z", "creator": "markt@apache.org", "creation_time": "2010-11-05T14:04:35Z", "is_private": false}]