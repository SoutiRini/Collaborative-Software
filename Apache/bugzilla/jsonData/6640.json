[{"count": 0, "tags": [], "bug_id": 6640, "attachment_id": null, "text": "Tomcat 4 does not evalue the classpath and it does not add JAR files in the WEB-\nINF/lib or the /lib directory to the application's classpath.", "id": 11093, "time": "2002-02-22T10:32:59Z", "creator": "gheorghe@ion.ag", "creation_time": "2002-02-22T10:32:59Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 6640, "text": "TC 4 will indeed ignore the system classpath.\nThe second part of the bug is working fine for me (it would seem appropriate to\npost on tomcat-user to investigate).", "id": 11151, "attachment_id": null, "creator": "remm@apache.org", "creation_time": "2002-02-26T00:57:09Z", "time": "2002-02-26T00:57:09Z", "is_private": false}, {"count": 2, "tags": [], "creator": "darnellm@bit-sys.com", "text": "I've tried Tomcat 4.0.2 and 4.0.3 and I have the same problem.  The jar files \nin my web apps WEB-INF/lib directory do not get evaluated.  If I move the jar \nfiles to the tomcat/lib directory, they do get evaluated.  Changing the status \nto RESOLVED WORKSFORME doesn't work for me; this problem needs to be resolved.", "id": 11570, "time": "2002-03-08T12:33:06Z", "bug_id": 6640, "creation_time": "2002-03-08T12:33:06Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 6640, "attachment_id": null, "text": "I don't know if this is the cause of your problem, but in the HEAD branch, I put \na fix in for a very subtle problem: jar files with missing entries. Basically, \nthe problem that I found was that Tomcat 4.0 would have trouble reading entries \nfrom jar files with missing directory entries. For example, if you have x.jar \nwith a mypackage/MyClass.class file in it, Tomcat 4.0 expects to see the \nfollowing entries if you do a \"jar tf x.jar\":\n\n  mypackage/\n  mypackage/MyClass.class\n\nHowever, if you create or add entries into a jar file using\n\"jar uf mypackage/MyClass.class\", the \"mypackage/\" entry does not get created and \na \"jar tf x.jar\" like below will result:\n\n  mypackage/MyClass.class\n\nIn this case, where the \"mypackage/\" directory is missing, Tomcat will not find \nany of the subdirectories and files with \"mypackage/\".\n\nTo test if this is the cause of your problem, run \"jar tf\" on each of your jar \nfiles that are in WEB-INF/lib and see if there are any missing directory entries. \nIf so, you can insert them using \"jar uf\" as a workaround.\n  \n", "id": 11582, "time": "2002-03-08T16:53:51Z", "creator": "patrick.luby@planamesa.com", "creation_time": "2002-03-08T16:53:51Z", "is_private": false}, {"count": 4, "tags": [], "creator": "darnellm@bit-sys.com", "text": "Patrick,\n\nI tried your suggestion of updating the jar file with empty directory paths \nwith no success.  I'm getting a NoClassDefFound error in the localhost_log when \nI start Tomcat.  The error occurs with the saxon.jar at \njavax/xml/transform/Source.class.  I've checked several times and the class \ndoes exist in the jar file.  I do not get this problem with Tomcat 4.0.1; it \nstarted with 4.0.2 and continued in 4.0.3.  Something must've been changed (or \nthought fixed) between 4.0.1 and 4.0.2.  I'm using Tomcat on Red Hat Linux 7.1 \nif that might help in any way.", "id": 11667, "time": "2002-03-11T15:22:45Z", "bug_id": 6640, "creation_time": "2002-03-11T15:22:45Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "Sorry for not replying to this bug sooner; somehow, I missed it. This bug is\nactually a known bug, which has already been fixed.\n\n*** This bug has been marked as a duplicate of 6374 ***", "attachment_id": null, "bug_id": 6640, "id": 11833, "time": "2002-03-15T06:41:53Z", "creator": "remm@apache.org", "creation_time": "2002-03-15T06:41:53Z", "is_private": false}]