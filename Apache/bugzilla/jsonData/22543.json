[{"attachment_id": null, "tags": [], "creator": "tomasz@rtsoftware.com", "is_private": false, "count": 0, "id": 42969, "time": "2003-08-19T10:05:51Z", "bug_id": 22543, "creation_time": "2003-08-19T10:05:51Z", "text": "If a property being targeted by available task already exists, it shows a \ndeprecated warning, printing that a property shouldn't be reused by the build \nscript.\n\nWhy? This is not clear to me, if I treat properties as kind of variables, and \nwant to control build flow, I may want to change the value of an existing \nproperty.\n\nThis works, but the message is disturbing (BTW ConditionTask doesn't even allow \nchanging an existing property)."}, {"attachment_id": null, "tags": [], "creator": "jkf@apache.org", "text": "From the Property documenation:\nProperties are immutable: whoever sets a property first freezes it for the rest\nof the build; they are most definitely not variable.\n\nAvailable has the possibility to modify an property, this should nowadays be\nconsidered an error, for backward compatibility reasons this possibility has not\nbeen removed, but has been modified to show the Deprecated message.\nThe solution is not to try to change a property.\n\nPlease also see\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=13632\nfor a discussion on this subject.", "count": 1, "id": 42988, "time": "2003-08-19T12:42:59Z", "bug_id": 22543, "creation_time": "2003-08-19T12:42:59Z", "is_private": false}, {"count": 2, "tags": [], "text": "Understood and accepted. If I need a variable I'd then make a custom task \nimplementing it, and not use properties.", "attachment_id": null, "bug_id": 22543, "id": 42993, "time": "2003-08-19T14:03:49Z", "creator": "tomasz@rtsoftware.com", "creation_time": "2003-08-19T14:03:49Z", "is_private": false}, {"count": 3, "tags": [], "creator": "ddevienne@lgc.com", "attachment_id": null, "text": "That's just it though! Properties are *not* variables!!!\n\nProperties are immutable, and there was a bug in <available>, that's being left \non purpose for backward compatibility.\n\n<condition>s and everything else in Ant is correct in *not* overriding existing \nproperties. Just change your mindset to think with immutable properties. --DD", "id": 42995, "time": "2003-08-19T14:13:20Z", "bug_id": 22543, "creation_time": "2003-08-19T14:13:20Z", "is_private": false}]