[{"count": 0, "tags": [], "bug_id": 40862, "attachment_id": null, "id": 95296, "creation_time": "2006-11-01T07:38:27Z", "time": "2006-11-01T07:38:27Z", "creator": "aboyko@ca.ibm.com", "text": "I have 2 SVG images one with flat color filling another with gradient color \nfilling (will be attached). Both files were created with Inkscape 0.44.1 (open \nsource program).\nThe issue was discovered in GMF. A GMF client application is capable of \ndropping SVG image files on the diagram, hence image is rendered and drawn on \nthe diagram surface. Essentially image with flat color filling is rendered and \nappears on the diagram, the image with gradient color filling fails to render \nand throws an exception: (info on exception from Eclipse error log)\n\norg.apache.batik.transcoder.TranscoderException: null\nEnclosed Exception:\nhttp://www.w3.org/2000/svg:-1\nAn I/O error occured while processing the URI:\n\"file:/C:/Documents and \nSettings/Daniel/Desktop/shape/aspect.svg#linearGradient1890\"\nspecified on the element <rect>\n\n\nNote: Full stack trace is provided on the bottom\n\nThe file C:/Documents and Settings/Daniel/Desktop/shape/aspect.svg doesn't \nexist on my system, hence I removed the attribute referencing this file from \nthe SVG file (gradient color filling) and everything worked out perfect, i.e. \nthe image with gradient color is rendered. (Attribute: \nxml:base=\"file:/C:/Documents and Settings/Daniel/Desktop/shape/aspect.svg\" \ninside the \"svg\" tag on the top of the file.)\n\nHowever, SVG image viewers/editors I've tried to open these 2 SVG files render \nboth the flat color filling and the gradient color filling images without any \nproblems or warning messages. That's why I think it could be a bug in batik.\n\nIf this is not a batik bug, perhaps you could give an idea, what lead to this \nexception. Thanks in advance.\n\nTrace:\n\norg.apache.batik.transcoder.TranscoderException: null\nEnclosed Exception:\nhttp://www.w3.org/2000/svg:-1\nAn I/O error occured while processing the URI:\n\"file:/C:/Documents and \nSettings/Daniel/Desktop/shape/aspect.svg#linearGradient1890\"\nspecified on the element <rect>\n\tat \norg.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.svg.ImageTranscoderEx.tra\nnscode(ImageTranscoderEx.java:306)\n\n\tat org.apache.batik.transcoder.XMLAbstractTranscoder.transcode(Unknown \nSource)\n\n\tat org.apache.batik.transcoder.SVGAbstractTranscoder.transcode(Unknown \nSource)\n\n\tat \norg.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.svg.SVGImageConverter.set\nUpTranscoders(SVGImageConverter.java:148)\n\n\tat \norg.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.svg.SVGImageConverter.ren\nderSVGtoSWTImage(SVGImageConverter.java:74)\n\n\tat \norg.eclipse.gmf.runtime.draw2d.ui.render.awt.internal.svg.SVGImage.renderImage\n(SVGImage.java:68)\n\n\tat \norg.eclipse.gmf.runtime.draw2d.ui.render.internal.AbstractRenderedImage.getSWTI\nmage(AbstractRenderedImage.java:130)\n\n\tat \norg.eclipse.gmf.runtime.draw2d.ui.render.figures.ScalableImageFigure.getPreferr\nedSize(ScalableImageFigure.java:258)\n\n\tat org.eclipse.draw2d.StackLayout.calculatePreferredSize\n(StackLayout.java:71)\n\n\tat org.eclipse.draw2d.AbstractLayout.getPreferredSize\n(AbstractLayout.java:93)\n\n\tat org.eclipse.draw2d.AbstractHintLayout.getPreferredSize\n(AbstractHintLayout.java:85)\n\n\tat org.eclipse.draw2d.Figure.getPreferredSize(Figure.java:735)\n\n\tat org.eclipse.draw2d.Figure.getPreferredSize(Figure.java:725)\n\n\tat org.eclipse.draw2d.DelegatingLayout.calculatePreferredSize\n(DelegatingLayout.java:49)\n\n\tat org.eclipse.draw2d.AbstractLayout.getPreferredSize\n(AbstractLayout.java:93)\n\n\tat org.eclipse.draw2d.Figure.getPreferredSize(Figure.java:735)\n\n\tat org.eclipse.draw2d.Figure.getPreferredSize(Figure.java:725)\n\n\tat \norg.eclipse.gmf.runtime.diagram.ui.figures.FixedDistanceGatedPaneFigure.layout\n(FixedDistanceGatedPaneFigure.java:157)\n\n\tat org.eclipse.draw2d.Figure.validate(Figure.java:1735)\n\n\tat org.eclipse.draw2d.Figure.validate(Figure.java:1737)\n\n\tat \norg.eclipse.gmf.runtime.diagram.ui.figures.BorderItemsAwareFreeFormLayer.valida\nte(BorderItemsAwareFreeFormLayer.java:53)\n\n\tat \norg.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart$1.validate\n(DiagramEditPart.java:163)\n\n\tat org.eclipse.draw2d.Figure.validate(Figure.java:1737)\n\n\tat \norg.eclipse.gmf.runtime.diagram.ui.figures.BorderItemsAwareFreeFormLayer.valida\nte(BorderItemsAwareFreeFormLayer.java:53)\n\n\tat org.eclipse.draw2d.Figure.validate(Figure.java:1737)\n\n\tat org.eclipse.draw2d.Figure.validate(Figure.java:1737)\n\n\tat org.eclipse.draw2d.Figure.validate(Figure.java:1737)\n\n\tat \norg.eclipse.draw2d.FreeformViewport$FreeformViewportLayout.calculatePreferredSi\nze(FreeformViewport.java:28)\n\n\tat org.eclipse.draw2d.AbstractLayout.getPreferredSize\n(AbstractLayout.java:93)\n\n\tat org.eclipse.draw2d.AbstractHintLayout.getPreferredSize\n(AbstractHintLayout.java:85)\n\n\tat org.eclipse.draw2d.Figure.getPreferredSize(Figure.java:735)\n\n\tat org.eclipse.draw2d.ScrollPaneSolver.solve(ScrollPaneSolver.java:75)\n\n\tat org.eclipse.draw2d.FigureCanvas.layoutViewport\n(FigureCanvas.java:238)\n\n\tat org.eclipse.draw2d.FigureCanvas.access$4(FigureCanvas.java:236)\n\n\tat org.eclipse.draw2d.FigureCanvas$3.notifyValidating\n(FigureCanvas.java:201)\n\n\tat org.eclipse.draw2d.UpdateManager.fireValidating\n(UpdateManager.java:123)\n\n\tat org.eclipse.draw2d.DeferredUpdateManager.performValidation\n(DeferredUpdateManager.java:188)\n\n\tat \norg.eclipse.gmf.runtime.diagram.ui.parts.DiagramGraphicalViewer$ToggleUpdateMan\nager.performValidation(DiagramGraphicalViewer.java:124)\n\n\tat org.eclipse.draw2d.DeferredUpdateManager.performUpdate\n(DeferredUpdateManager.java:165)\n\n\tat \norg.eclipse.gmf.runtime.diagram.ui.parts.DiagramGraphicalViewer$ToggleUpdateMan\nager.performUpdate(DiagramGraphicalViewer.java:114)\n\n\tat org.eclipse.draw2d.DeferredUpdateManager$UpdateRequest.run\n(DeferredUpdateManager.java:46)\n\n\tat org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:35)\n\n\tat org.eclipse.swt.widgets.Synchronizer.runAsyncMessages\n(Synchronizer.java:123)\n\n\tat org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:3325)\n\n\tat org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:2971)\n\n\tat org.eclipse.ui.internal.Workbench.runEventLoop(Workbench.java:1914)\n\n\tat org.eclipse.ui.internal.Workbench.runUI(Workbench.java:1878)\n\n\tat org.eclipse.ui.internal.Workbench.createAndRunWorkbench\n(Workbench.java:419)\n\n\tat org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:149)\n\n\tat org.eclipse.ui.internal.ide.IDEApplication.run\n(IDEApplication.java:95)\n\n\tat org.eclipse.core.internal.runtime.PlatformActivator$1.run\n(PlatformActivator.java:78)\n\n\tat \norg.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication\n(EclipseAppLauncher.java:92)\n\n\tat org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start\n(EclipseAppLauncher.java:68)\n\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:400)\n\n\tat org.eclipse.core.runtime.adaptor.EclipseStarter.run\n(EclipseStarter.java:177)\n\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\n\tat sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:64)\n\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:43)\n\n\tat java.lang.reflect.Method.invoke(Method.java:615)\n\n\tat org.eclipse.core.launcher.Main.invokeFramework(Main.java:336)\n\n\tat org.eclipse.core.launcher.Main.basicRun(Main.java:280)\n\n\tat org.eclipse.core.launcher.Main.run(Main.java:977)\n\n\tat org.eclipse.core.launcher.Main.main(Main.java:952)", "is_private": false}, {"count": 1, "tags": [], "bug_id": 40862, "attachment_id": 19065, "text": "Created attachment 19065\nflat color filling image\n\nFlat color filling image", "id": 95297, "time": "2006-11-01T07:40:08Z", "creator": "aboyko@ca.ibm.com", "creation_time": "2006-11-01T07:40:08Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 40862, "attachment_id": 19066, "id": 95298, "time": "2006-11-01T07:41:49Z", "creator": "aboyko@ca.ibm.com", "creation_time": "2006-11-01T07:41:49Z", "is_private": false, "text": "Created attachment 19066\ngradient color filling image\n\nGradient color filling image.\n\nNote: These 2 files have been created with Inkscape 0.44.1 (open source\nprogram). SVG_flat.svg was created by changing the color filing to a flat color\ninstead of gradient."}, {"count": 3, "attachment_id": null, "creator": "deweese@apache.org", "text": "(In reply to comment #0)\n> The file C:/Documents and Settings/Daniel/Desktop/shape/aspect.svg doesn't \n> exist on my system, hence I removed the attribute referencing this file from \n> the SVG file (gradient color filling) and everything worked out perfect, i.e. \n> the image with gradient color is rendered. (Attribute: \n> xml:base=\"file:/C:/Documents and Settings/Daniel/Desktop/shape/aspect.svg\" \n> inside the \"svg\" tag on the top of the file.)\n\n   So the xml:base attribute is used to identify the base URI to resolve\nrelative URL's against.  To be honest it is a little unclear to me what\nshould happen for a href that consists only of a fragment identifier\nhowever reading section 4.2 of http://www.ietf.org/rfc/rfc2396.txt\nleads me to believe that Batik's behavior is in error.  Any other\nopinions?  Are we really supposed to tread just fragment identifiers\nas a special case?\n\n   At the very least it is poor form to set xml:base to an\n'incorrect' value, although it is possible that in this case\nit should work.", "id": 95375, "time": "2006-11-02T16:45:22Z", "bug_id": 40862, "creation_time": "2006-11-02T16:45:22Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 40862, "attachment_id": null, "id": 95376, "creation_time": "2006-11-02T17:02:47Z", "time": "2006-11-02T17:02:47Z", "creator": "cam@apache.org", "text": "(In reply to comment #3)\n>    So the xml:base attribute is used to identify the base URI to resolve\n> relative URL's against.  To be honest it is a little unclear to me what\n> should happen for a href that consists only of a fragment identifier\n> however reading section 4.2 of http://www.ietf.org/rfc/rfc2396.txt\n> leads me to believe that Batik's behavior is in error.  Any other\n> opinions?  Are we really supposed to tread just fragment identifiers\n> as a special case?\n\nHmm, the wording in 4.2 about \"if the URI reference occurs in a context that is\nalways intended to result in a new request\" is a bit dodgy, but I would guess\nthat paint server references aren't always intended to result in a new request.\n So since it says that if the URI reference has no URI in it, then it's a\n\"same-document\" reference, I agree that the current beahviour is a bug.", "is_private": false}]