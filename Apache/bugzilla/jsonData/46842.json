[{"count": 0, "tags": [], "bug_id": 46842, "text": "Ant doesn't support Java 1.6's classpath wildcards (eg foo/*) for forked <java>.\n   http://java.sun.com/javase/6/docs/technotes/tools/windows/classpath.html\n\nIt happens in the creation of the task's path, in Path.addExisting().\n\nIf I change the first line of code in this block:\n   http://svn.apache.org/viewvc/ant/core/trunk/src/main/org/apache/tools/ant/types/Path.java?view=markup\n\n            if (f.exists()){\n                setLocation(f);\n            } else {\n                log(\"dropping \" + f + \" from path as it doesn't exist\",\n                    Project.MSG_VERBOSE);\n            }\n\nto this:\n            if (f.exists() || (f.getParentFile().exists() && \"*\".equals(f.getName()))) {\n\nI get the behavior I desire.  Maybe this change would create problems for other usage scenarios, but it would seem unlikely.  If so, maybe an attribute to enable support for java classpath wildcards could be added.", "id": 125515, "time": "2009-03-12T05:12:49Z", "creator": "mbm@ptc.com", "creation_time": "2009-03-12T05:12:49Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "the classpath-wildcard functionality is provided by using filesets and works for all tasks and all versions of Java.\n\nI'd be a bit reluctant to change the code since we'd get surprising results when running on Java 1.4 or Java 5 where people expected foo/* to do something because it works \"on my machine\".", "attachment_id": null, "id": 129350, "creator": "bodewig@apache.org", "time": "2009-07-31T07:51:33Z", "bug_id": 46842, "creation_time": "2009-07-31T07:51:33Z", "is_private": false}, {"count": 2, "tags": [], "creator": "mbm@ptc.com", "attachment_id": null, "text": "(In reply to comment #1)\n\nThe reason I'm requesting support for the new Java classpath specification feature is that we have situations where the classpath on the forked java exceeds the cmd length allowed by the platform.\n\nI need a solution other than telling users to use subst drives to shorten paths.  This work around will only work for so long.\n\nIf someone develops a script using Java 6 features and expects it to work on an older version of Java, the verbose output should be sufficient for the (old Java) user to quickly determine why it does not work as expected.", "id": 129354, "time": "2009-07-31T08:11:42Z", "bug_id": 46842, "creation_time": "2009-07-31T08:11:42Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 46842, "text": "I ran into this issue when trying to get over a z/OS classpath limit.   You cannot have a classpath over 6129 characters.   When the JUnit task forks a process the paths are turned into fully qualified pathnames.   So, with a lot of jars, it is not too difficult to exceed 6129 characters.   (Unfortunately, the VM just truncates the classpath without warning).\n\nThe patch that Mike Murray supplied works.", "id": 137713, "time": "2010-06-17T11:29:53Z", "creator": "JohnW.Lewis@sas.com", "creation_time": "2010-06-17T11:29:53Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "is_private": false, "text": "Added with a verbose log message that may help people track down problems.\n\nsvn revision 955896", "id": 137728, "time": "2010-06-18T05:04:11Z", "bug_id": 46842, "creation_time": "2010-06-18T05:04:11Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 46842, "text": "Hi Stefan,\n\nOur team has just run into this issue.  We need to be able to run tests on Windows and can no longer do so.\n\nI see this defect is marked fixed for 1.8.2.  Any ideas (even rough ones) as to when 1.8.2 will be released?\n\nThanks!\nJason", "id": 141836, "attachment_id": null, "creator": "jstevens@pillardata.com", "creation_time": "2010-11-19T11:13:00Z", "time": "2010-11-19T11:13:00Z", "is_private": false}, {"count": 6, "tags": [], "text": "We discussed in this thread http://ant.1045680.n5.nabble.com/Bug-fix-for-v1-8-1-in-the-near-future-td3244614.html\n\nAt that time the only blocker is an issue with special environment variables whose name start with an equals sign.\n\nI hope we can release 1.8.2 before the end of the year. Maybe even end of this month.", "attachment_id": null, "id": 141858, "creator": "antoine@apache.org", "time": "2010-11-19T17:32:00Z", "bug_id": 46842, "creation_time": "2010-11-19T17:32:00Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 46842, "attachment_id": null, "is_private": false, "id": 141859, "time": "2010-11-19T17:48:32Z", "creator": "jstevens@pillardata.com", "creation_time": "2010-11-19T17:48:32Z", "text": "(In reply to comment #6)\n> We discussed in this thread\n> http://ant.1045680.n5.nabble.com/Bug-fix-for-v1-8-1-in-the-near-future-td3244614.html\n> \n> At that time the only blocker is an issue with special environment variables\n> whose name start with an equals sign.\n> \n> I hope we can release 1.8.2 before the end of the year. Maybe even end of this\n> month.\n\nThat's excellent news!  Thanks!"}]