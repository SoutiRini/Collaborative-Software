[{"count": 0, "tags": [], "text": "Created attachment 35041\nJava repro case\n\nWhen using the XSLF API, text with Japanese characters (left-to-right) overflows the textbox, even when using default styling (default font family, size and style).", "is_private": false, "bug_id": 61169, "id": 199116, "time": "2017-06-09T09:27:54Z", "creator": "dictoon@gmail.com", "creation_time": "2017-06-09T09:27:54Z", "attachment_id": 35041}, {"count": 1, "tags": [], "bug_id": 61169, "attachment_id": 35042, "id": 199117, "time": "2017-06-09T09:28:24Z", "creator": "dictoon@gmail.com", "creation_time": "2017-06-09T09:28:24Z", "is_private": false, "text": "Created attachment 35042\nPowerPoint file generated by repro case"}, {"count": 2, "tags": [], "text": "tl;dr: the textbox is too short because of an undefined/unregistered font and there is an issue in calculating the text height / width in POI.\n\nThere are a few issues with the current rendering code, which also applies for calculating the text height:\n- the textbox indents are ignored when the text height is calculated\n- you need to register a font having those japanese glyphs in\n- my test font (mona) has a textlayout leading of 0, hence the leading need to be fixed somehow\n\nThe rendering in Libre Office seems to use some kind of tracking (= opposite of kerning). Although the Tracking attribute can be added to the AttributedString, this is ignored when breaking the text. An alternative to modify the registered font [1] doesn't work.\n\n\n[1] https://stackoverflow.com/questions/13229725", "attachment_id": null, "bug_id": 61169, "id": 199200, "time": "2017-06-14T22:17:27Z", "creator": "kiwiwings@apache.org", "creation_time": "2017-06-14T22:17:27Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 61169, "attachment_id": null, "id": 199201, "time": "2017-06-14T22:23:59Z", "creator": "kiwiwings@apache.org", "creation_time": "2017-06-14T22:23:59Z", "is_private": false, "text": "for the records, the corresponding SO issue:\nhttps://stackoverflow.com/questions/44438618"}, {"count": 4, "tags": [], "bug_id": 61169, "attachment_id": null, "id": 199218, "time": "2017-06-15T16:21:42Z", "creator": "kiwiwings@apache.org", "creation_time": "2017-06-15T16:21:42Z", "is_private": false, "text": "\"LineBreakMeasurer does not measure correctly if TextAttribute.TRACKING is set.\"\nhttps://bugs.openjdk.java.net/browse/JDK-8165943\n(Affects Version/s: 6.0, 7, 8, 8u102, 9)\n\nTo recap: Libre Office uses more lines to display the text, because the glyphs are wider spread opposed to the Java rendering. Although the rendering can be modified with the TRACKING attribute, the linebreak measurer is not taking it into account.\n\nMaybe it's possible to copy&adapt the standard linebreak measurer ..."}, {"count": 5, "tags": [], "creator": "kiwiwings@apache.org", "attachment_id": 35059, "id": 199256, "creation_time": "2017-06-17T00:02:33Z", "time": "2017-06-17T00:02:33Z", "bug_id": 61169, "text": "Created attachment 35059\nTest class with registered font", "is_private": false}, {"count": 6, "tags": [], "bug_id": 61169, "attachment_id": null, "id": 199257, "time": "2017-06-17T00:06:14Z", "creator": "kiwiwings@apache.org", "creation_time": "2017-06-17T00:06:14Z", "is_private": false, "text": "Added a (partial *) ) fix via r1798986\n\nLets forget about the tracking issue mentioned above - you need to specify also the \"ea\" attribute for asian fonts - see my test class.\n\n*) ... at least for the Mona font, the rendering output is similar to the libre office dimensions, so I'm closing this now."}, {"count": 7, "tags": [], "bug_id": 61169, "attachment_id": null, "id": 199425, "time": "2017-06-26T13:49:34Z", "creator": "dictoon@gmail.com", "creation_time": "2017-06-26T13:49:34Z", "is_private": false, "text": "Thanks for the updates and the fix Andreas. We just tried our repro case with the latest Apache POI cloned from GitHub.\n\nUnfortunately it looks like it doesn't entirely fix our problem. On Windows, there is pretty much no difference between Apache POI 3.16 Final and Git master as of today (with your fix). On Linux, the box is indeed taller but it still doesn't enclose all the text, see my latest attachment."}, {"count": 8, "tags": [], "text": "Created attachment 35076\nResult when using Apache POI (commit a753adb84805ff0f7b7385905780b07e5fe9e4ab on GitHub)", "is_private": false, "bug_id": 61169, "id": 199426, "time": "2017-06-26T13:52:54Z", "creator": "dictoon@gmail.com", "creation_time": "2017-06-26T13:52:54Z", "attachment_id": 35076}, {"count": 9, "tags": [], "text": "add resize methods with Graphics argument via r1801329\n\nI still need to provide new methods to specify the charset - for east asian and complex script fonts, otherwise Libre Office and probably also Office don't use the set font family but default to something else, which renders futile any textbox calculation.", "is_private": false, "id": 199647, "creator": "kiwiwings@apache.org", "time": "2017-07-08T22:26:58Z", "bug_id": 61169, "creation_time": "2017-07-08T22:26:58Z", "attachment_id": null}]