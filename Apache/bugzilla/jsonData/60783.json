[{"count": 0, "tags": [], "bug_id": 60783, "attachment_id": null, "text": "Hello,\n\nIn 2.4.23 among others it was legal to use tabs as separator in request line, or to have SP or TAB between header name and colon. Neither of these works in 2.4.25 even with HttpProtocolOptions set to Unsafe.\n\nDocs say:\n...\nDue to legacy modules, applications or custom user-agents which must be \ndeprecated the Unsafe option has been added to revert to the legacy behaviors.\n\nSo it would seem that we should get fully legacy behavior with this directive, or should not we?\n\nThanks!", "id": 197310, "time": "2017-02-28T12:04:54Z", "creator": "reichl.pavel@gmail.com", "creation_time": "2017-02-28T12:04:54Z", "is_private": false}, {"count": 1, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 197311, "time": "2017-02-28T12:08:19Z", "bug_id": 60783, "creation_time": "2017-02-28T12:08:19Z", "is_private": false, "text": "(In reply to reichl.pavel from comment #0)\n> Hello,\n> \n> In 2.4.23 among others it was legal to use tabs as separator in request\n> line, or to have SP or TAB between header name and colon. Neither of these\n> works in 2.4.25 even with HttpProtocolOptions set to Unsafe.\n> \n> Docs say:\n> ...\n> Due to legacy modules, applications or custom user-agents which must be \n> deprecated the Unsafe option has been added to revert to the legacy\n> behaviors.\n> \n> So it would seem that we should get fully legacy behavior with this\n> directive, or should not we?\n> \n\nNo. It looks like the docs may have been reworded, but the design is not to preserve all of the legacy parsing even under unsafe."}, {"count": 2, "tags": [], "bug_id": 60783, "attachment_id": null, "text": "See 3.2.4 paragraph 2 of http://www.rfc-base.org/txt/rfc-7230.txt - we have no choice but to reject whitespace in the header prior to the ':' delimiter, irrespective of configuration.\n\nW.R.T. tabs in the request line, I proposed such a tweak and was overruled by the development team; the spec has always called for SP and only single SP characters since day one of HTTP, so there's no particular reason for an HTTP server to recognize anything else.\n\nThe reason for strictly returning 400 responses, is to ensure we do not propagate a bad request to an unsuspecting back-end origin server, or fulfill the request of a too-trusting-but-faulty proxy client.", "id": 200846, "time": "2017-09-13T14:25:26Z", "creator": "wrowe@apache.org", "creation_time": "2017-09-13T14:25:26Z", "is_private": false}]