[{"count": 0, "tags": [], "bug_id": 54986, "attachment_id": null, "text": "Have an issue with a customer system. The apache process is completely hanging when trying to process a submitted form. It's a POST with a long list of mac addresses, about 22K of total data. At some point this just stopped working. Smaller submits, up to 20K work, the exact tripping point varies each time we run it.\n\nRunning gdb and attaching to the httpd process (recompiled with -g3 flag) I see this, with a breakpoint set at ap_run_handler.\n\n(gdb) bt\n#0 ap_run_handler (r=0xdd3bd50) at config.c:157\n#1 0x0807990f in ap_invoke_handler (r=0xdd3bd50) at config.c:376\n#2 0x08094d45 in ap_process_request (r=0xdd3bd50) at http_request.c:282\n#3 0x0dd3bd50 in ?? ()\n#4 0x0d632440 in ?? ()\n#5 0x00000000 in ?? ()\n(gdb) s\n\nAnd it just hangs. I can't see what r is pointing to.\n\nI find no function definition in the apache source tree for ap_run_handler(). \n\nLine 157 in config.c is\nAP_IMPLEMENT_HOOK_RUN_FIRST(int, handler, (request_rec *r), (r), DECLINED)\n\nFollowing the code for definitions of this macro, leads me to a rather obfuscated define in apr_hooks.h, line 358\n/** macro to implement the hook */\n#define APR_IMPLEMENT_EXTERNAL_HOOK_BASE(ns,link,name) \\\nlink##_DECLARE(void) ns##_hook_##name(ns##_HOOK_##name##_t *pf,const char * const *aszPre, \\\n                                      const char * const *aszSucc,int nOrder) \\\n    { \\\n\nThe apache docs are no help, simply notes it as an internal macro.\n\n\n# uname -a\nLinux lab01.net 2.6.18-238.9.1.el5 #1 SMP Tue Apr 12 18:10:13 EDT 2011 x86_64 x86_64 x86_64 GNU/Linux\n(I think this is CentOS 5.7) \n\n# httpd -V\nServer version: Apache/2.2.22 (Unix)\nServer built:   May 13 2013 11:55:26\nServer's Module Magic Number: 20051115:30\nServer loaded:  APR 1.4.5, APR-Util 1.3.12\nCompiled using: APR 1.4.5, APR-Util 1.4.1\nArchitecture:   32-bit\nServer MPM:     Prefork\n  threaded:     no\n    forked:     yes (variable process count)\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/prefork\"\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=128\n -D HTTPD_ROOT=\"/space/vendor-build/apache\"\n -D SUEXEC_BIN=\"/space/vendor-build/apache/bin/suexec\"\n -D DEFAULT_PIDLOG=\"logs/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_LOCKFILE=\"logs/accept.lock\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n# httpd -l\nCompiled in modules:\n  core.c\n  mod_ssl.c\n  prefork.c\n  http_core.c\n  mod_so.c", "id": 167250, "time": "2013-05-16T18:34:28Z", "creator": "rtomasso@yahoo.com", "creation_time": "2013-05-16T18:34:28Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 54986, "attachment_id": null, "text": "What handler/module is expected to process this request?  Usually the  body isn't read until the handler has control. Can you try again with -O0 and don't set a breakpoint, just get a backtrace of the hung thread.", "id": 167251, "time": "2013-05-16T18:40:27Z", "creator": "covener@gmail.com", "creation_time": "2013-05-16T18:40:27Z", "is_private": false}, {"count": 2, "tags": [], "creator": "rtomasso@yahoo.com", "attachment_id": null, "id": 167312, "time": "2013-05-20T18:26:09Z", "bug_id": 54986, "creation_time": "2013-05-20T18:26:09Z", "is_private": false, "text": "We're running in a mod_perl environment. If I let the process hang I can't get a backtrace."}, {"count": 3, "tags": [], "bug_id": 54986, "attachment_id": null, "text": "Rebuilt with the -O0 option I was able to get some more information. In this environment the doc root is \"/opt/product/apache/htdocs\".\n\n(gdb) bt\n#0  ap_run_handler (r=0xce37d20) at config.c:157\n#1  0x0807fb5c in ap_invoke_handler (r=0xce37d20) at config.c:376\n#2  0x080a33b2 in ap_process_request (r=0xce37d20) at http_request.c:282\n#3  0x080a06e0 in ap_process_http_connection (c=0xcb53d08) at http_core.c:190\n#4  0x08086b8f in ap_run_process_connection (c=0xcb53d08) at connection.c:43\n#5  0x08086fe5 in ap_process_connection (c=0xcb53d08, csd=0xcb53b70) at connection.c:190\n#6  0x080a9490 in child_main (child_num_arg=0) at prefork.c:667\n#7  0x080a963c in make_child (s=0x8dd2ca8, slot=0) at prefork.c:768\n#8  0x080a96af in startup_children (number_to_start=1) at prefork.c:786\n#9  0x080a9ae0 in ap_mpm_run (_pconf=0x8dce0a8, plog=0x8e04180, s=0x8dd2ca8) at prefork.c:1007\n#10 0x08069dd1 in main (argc=3, argv=0xffa79174) at main.c:753\n(gdb) p r\n$1 = (request_rec *) 0xce37d20\n(gdb) p *r\n$2 = {pool = 0xce37ce0, connection = 0xcb53d08, server = 0x8dd2ca8, next = 0x0, prev = 0x0, main = 0x0,\n  the_request = 0xce38c60 \"POST /sla/create/index.html HTTP/1.1\", assbackwards = 0, proxyreq = 0, header_only = 0,\n  protocol = 0xce38d00 \"HTTP/1.1\", proto_num = 1001, hostname = 0xce39220 \"209.211.205.181\",\n  request_time = 1369158013800915, status_line = 0x0, status = 200, method = 0xce38cb0 \"POST\", method_number = 2,\n  allowed = 0, allowed_xmethods = 0x0, allowed_methods = 0xce37ec0, sent_bodyct = 0, bytes_sent = 0, mtime = 0,\n  chunked = 0, range = 0x0, clength = 0, remaining = 0, read_length = 0, read_body = 0, read_chunked = 0,\n  expecting_100 = 0, headers_in = 0xce37ef0, headers_out = 0xce38380, err_headers_out = 0xce38528,\n  subprocess_env = 0xce38138, notes = 0xce38680, content_type = 0x8e90c48 \"text/html\",\n  handler = 0x8ded1c8 \"perl-script\", content_encoding = 0x0, content_languages = 0x0, vlist_validator = 0x0,\n  user = 0x0, ap_auth_type = 0x0, no_cache = 0, no_local_copy = 0,\n  unparsed_uri = 0xce38cd0 \"/sla/create/index.html\", uri = 0xce38ce8 \"/sla/create/index.html\",\n  filename = 0xce39348 \"/opt/product/apache/htdocs/sla/create/index.html\",\n  canonical_filename = 0xce39348 \"/opt/product/apache/htdocs/sla/create/index.html\", path_info = 0xce392c1 \"\",\n  args = 0x0, finfo = {pool = 0xce37ce0, valid = 7598960, protection = 1604, filetype = APR_REG, user = 504,\n    group = 110, inode = 6657732, device = 64769, nlink = 1, size = 2608, csize = 4096, atime = 1369157418000000,\n    mtime = 1360861380000000, ctime = 1360861380000000,\n    fname = 0xce39290 \"/opt/product/apache/htdocs/sla/create/index.html\", name = 0x0, filehand = 0x0}, parsed_uri = {\n    scheme = 0x0, hostinfo = 0x0, user = 0x0, password = 0x0, hostname = 0x0, port_str = 0xce39239 \"8080\",\n    path = 0xce38ce8 \"/sla/create/index.html\", query = 0x0, fragment = 0x0, hostent = 0x0, port = 8080,\n    is_initialized = 1, dns_looked_up = 0, dns_resolved = 0}, used_path_info = 2, per_dir_config = 0xce39590,\n  request_config = 0xce387d8, htaccess = 0x0, output_filters = 0xccf1818, input_filters = 0xce39240,\n  proto_output_filters = 0xce38be0, proto_input_filters = 0xce39240, eos_sent = 0}\n\n\nStepping from here, the process hangs. Running pstack from another window returns nothing.", "id": 167327, "time": "2013-05-21T17:52:42Z", "creator": "rtomasso@yahoo.com", "creation_time": "2013-05-21T17:52:42Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 54986, "attachment_id": null, "text": "(In reply to comment #0)\n> I find no function definition in the apache source tree for\n> ap_run_handler(). \n> \n> Line 157 in config.c is\n> AP_IMPLEMENT_HOOK_RUN_FIRST(int, handler, (request_rec *r), (r), DECLINED)\n> \n> Following the code for definitions of this macro, leads me to a rather\n> obfuscated define in apr_hooks.h, line 358\n> /** macro to implement the hook */\n> #define APR_IMPLEMENT_EXTERNAL_HOOK_BASE(ns,link,name) \\\n> link##_DECLARE(void) ns##_hook_##name(ns##_HOOK_##name##_t *pf,const char *\n> const *aszPre, \\\n>                                       const char * const *aszSucc,int\n> nOrder) \\\n>     { \\\n> \n> The apache docs are no help, simply notes it as an internal macro.\n> \nThe function to look for is ap_hook_handler.\nThis is found in several modules.\nOne example is server/core.c:\n   ap_hook_handler(default_handler,NULL,NULL,APR_HOOK_REALLY_LAST);\nThis will cause the default_handler function in core.c to be called whenever ap_run_handler is called.\nThe following documentation may help explain this:\n- http://httpd.apache.org/docs/2.2/developer/hooks.html\n\nPerhaps mod_perl should have something like this as well.", "id": 167344, "time": "2013-05-22T00:34:46Z", "creator": "mike.rumph@oracle.com", "creation_time": "2013-05-22T00:34:46Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 54986, "text": "I set breakpoints at ap_hook_handler and default_handler, neither of them were reached.\n\nI ran the same form with a small data set so it completed. At the breakpoint for ap_run_handler, I did step and it came back quickly with the next line further down, a call to ap_invoke_handler [config.c:378]. And the form has returned. No meaningful difference in contents of the request object.", "id": 167360, "time": "2013-05-22T18:21:51Z", "creator": "rtomasso@yahoo.com", "creation_time": "2013-05-22T18:21:51Z", "is_private": false, "attachment_id": null}]