[{"count": 0, "tags": [], "creator": "staplin@digitalglobe.com", "attachment_id": null, "is_private": false, "id": 57418, "time": "2004-05-14T15:55:01Z", "bug_id": 28984, "creation_time": "2004-05-14T15:55:01Z", "text": "The arguments passed to the underlying ccm command are formatted such that they\nonly work with a Windows installation of ccm (ccm uses '/' on windows and '-' on\nlinux). \n\nThe following 4 diffs (against ant 1.6.1 source) make the ccm tasks more\nplatform independent.\n\nContinuus.java:\n\n@@ -17,6 +17,8 @@\n \n package org.apache.tools.ant.taskdefs.optional.ccm;\n \n+import java.io.File;\n+\n import org.apache.tools.ant.BuildException;\n import org.apache.tools.ant.Project;\n import org.apache.tools.ant.Task;\n@@ -75,8 +77,8 @@\n      */\n     protected final String getCcmCommand() {\n         String toReturn = ccmDir;\n-        if (!toReturn.equals(\"\") && !toReturn.endsWith(\"/\")) {\n-            toReturn += \"/\";\n+        if (!toReturn.equals(\"\") && !toReturn.endsWith(File.separator)) {\n+            toReturn += File.separator;\n         }\n \n         toReturn += CCM_EXE;\n@@ -128,5 +130,14 @@\n      */\n     public static final String COMMAND_DEFAULT_TASK = \"default_task\";\n \n-\n+    /**\n+     * The system OS dependent character denoting a command line argument flag \nto ccm.\n+     * For windows, this is '/', but others this is '-'\n+     */\n+    protected static final char ARGUMENT_FLAG_CHAR;\n+    static {\n+        String os = System.getProperty(\"os.name\");\n+        boolean windowsOs = os.indexOf(\"Windows\") != -1;\n+        ARGUMENT_FLAG_CHAR = windowsOs ? '/' : '-';\n\n\n\n\nCCMCheck.java:\n\n@@ -188,13 +188,13 @@\n     }\n \n     /**\n-     * -comment flag -- comment to attach to the file\n+     * comment flag -- comment to attach to the file\n      */\n-    public static final String FLAG_COMMENT = \"/comment\";\n+    public static final String FLAG_COMMENT = ARGUMENT_FLAG_CHAR+\"comment\";\n \n     /**\n-     *  -task flag -- associate checkout task with task\n+     *  task flag -- associate checkout task with task\n      */\n-    public static final String FLAG_TASK = \"/task\";\n+    public static final String FLAG_TASK = ARGUMENT_FLAG_CHAR+\"task\";\n }\n\n\n\n\nCCMCreateTask.java:\n\n@@ -234,32 +234,32 @@\n     /**\n      * /comment -- comments associated to the task\n      */\n-    public static final String FLAG_COMMENT = \"/synopsis\";\n+    public static final String FLAG_COMMENT = ARGUMENT_FLAG_CHAR+\"synopsis\";\n \n     /**\n-     *  /platform flag -- target platform\n+     *  platform flag -- target platform\n      */\n-    public static final String FLAG_PLATFORM = \"/plat\";\n+    public static final String FLAG_PLATFORM = ARGUMENT_FLAG_CHAR+\"plat\";\n \n     /**\n-     * /resolver flag\n+     * resolver flag\n      */\n-    public static final String FLAG_RESOLVER = \"/resolver\";\n+    public static final String FLAG_RESOLVER = ARGUMENT_FLAG_CHAR+\"resolver\";\n \n     /**\n-     * /release flag\n+     * release flag\n      */\n-    public static final String FLAG_RELEASE = \"/release\";\n+    public static final String FLAG_RELEASE = ARGUMENT_FLAG_CHAR+\"release\";\n \n     /**\n-     * /release flag\n+     * release flag\n      */\n-    public static final String FLAG_SUBSYSTEM = \"/subsystem\";\n+    public static final String FLAG_SUBSYSTEM = ARGUMENT_FLAG_CHAR+\"subsystem\";\n \n     /**\n-     *  -task flag -- associate checkout task with task\n+     *  task flag -- associate checkout task with task\n      */\n-    public static final String FLAG_TASK = \"/task\";\n+    public static final String FLAG_TASK = ARGUMENT_FLAG_CHAR+\"task\";\n \n \n     // implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler\ninterface\n\n\n\nCCMReconfigure.java:\n\n@@ -138,20 +138,20 @@\n \n \n     /**\n-     * /recurse --\n+     * recurse --\n      */\n-    public static final String FLAG_RECURSE = \"/recurse\";\n+    public static final String FLAG_RECURSE = ARGUMENT_FLAG_CHAR+\"recurse\";\n \n     /**\n-     * /recurse --\n+     * recurse --\n      */\n-    public static final String FLAG_VERBOSE = \"/verbose\";\n+    public static final String FLAG_VERBOSE = ARGUMENT_FLAG_CHAR+\"verbose\";\n \n \n     /**\n-     *  /project flag -- target project\n+     *  project flag -- target project\n      */\n-    public static final String FLAG_PROJECT = \"/project\";\n+    public static final String FLAG_PROJECT = ARGUMENT_FLAG_CHAR+\"project\";\n \n }"}, {"count": 1, "tags": [], "bug_id": 28984, "text": "I am on a rewrite on that section. Mostly I\u00b4m adding some more tasks \n(create/delete project, get session information, ...). On Windows you can also \nuse \"-\", so I can change that globally. But I would be happy if you can test \nthe new tasks on Unix :-)", "id": 57528, "time": "2004-05-17T06:57:02Z", "creator": "jan@materne.de", "creation_time": "2004-05-17T06:57:02Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "I'll be glad to help test things on linux!", "is_private": false, "id": 58107, "creation_time": "2004-05-26T04:04:38Z", "time": "2004-05-26T04:04:38Z", "creator": "staplin@digitalglobe.com", "bug_id": 28984, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 28984, "text": "@Jan\nWhen you rewrite the whole section do you also fix the ccmcheckintask task?\nThis task seems to be broken since ANT 1.6.*\nOr do you know how to fix the problem?", "id": 62373, "time": "2004-08-24T08:24:31Z", "creator": "juergen.biebl@msg.de", "creation_time": "2004-08-24T08:24:31Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 28984, "text": "Latest plan is let the tasks act against an SPI-interface. A factory should \ngive the proper instantiation. Reason: different syntax for 4.5, 5.1 and 6.3. \nAlso the 6-version of Synergy has a Java-Client - maybe I can use that instead \nof the ccm.exe.\nA magic property (\"ccm.spi\") should configure the factory to use the right SPI.\nThat would result in a new package and the new tasks should coexist with the \nold implementation for backwards compatibility.\n\n(Maybe an implementation for SVN would be possible, too :)\n\n\nI am not sure how the view from the buildfile should be.\nI know that there are three main kinds:\n- working with ccm-project (create project, project status...)\n- working with files\n- working with tasks\n(- session info)\n\nCan you as the main users (and my testers :) suggest how the task usage should \nbe? What kind of tasks do you want to have?\n\n<ccmAddToTask task=\"4711\">\n    <fileset/>\n</ccmAddToTask>\n<ccm action=\"add\" task=\"4711\"> \n  <fileset/> \n</ccm>\n\n<ccmCreateProject name=\"myproject\"/>\n<ccm action=\"create\" project=\"myproject\"/>\n\n<ccmCreateTask name=\"4712\"/>\n<ccm action=\"create\" task=\"4712\"/>\n\n<ccm action=\"create\" task=\"4712\" project=\"myproject\"/>\n- a) create both\n- b) give error (I prefer)\n\n<ccm action=\"checkin\" task=\"4712\"/>\n<ccm action=\"checkin\">\n    <fileset/>\n</ccm>\n\n...\n\n", "id": 62377, "time": "2004-08-24T08:42:21Z", "creator": "jan@materne.de", "creation_time": "2004-08-24T08:42:21Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 28984, "text": "As you sad:\n\"I know that there are three main kinds:\n- working with ccm-project (create project, project status...)\n- working with files\n- working with tasks\n(- session info)\n\"\nhow about this:\n<ccmProject action=\"create\" project=\"myproject\"/>\n<ccmTask action=\"complete\" task=\"default\" />\n<ccmFile action=\"checkin\"/>\n<ccmInfo action=\"status\" />", "count": 5, "id": 62382, "time": "2004-08-24T09:06:22Z", "creator": "juergen.biebl@msg.de", "creation_time": "2004-08-24T09:06:22Z", "is_private": false}, {"count": 6, "attachment_id": null, "creator": "jan@materne.de", "text": "Sounds ok. Something in the middle between defining all in the taskname or\nin the action. Benefit: easier check for required infos.\n\nBut then I would modify that to \n  <ccmProject action=\"create\" name=\"myproject\"/>\n  <ccmTask action=\"complete\" name=\"default\" />\nIt is clear that you are refering to a project|task, so a common name for \n\"myproject\" / \"default\" would be more comfortable IMHO.\n\n\"complete\": not sure whether there is such an action or  if that should \nbe \"commit|checkin\". (Maybe the possibility to use the CVS-verbs could be a \nbenefit, what do you think?)\n\n<ccmTask name=\"default\"/> = <ccmTask/>\n- if no task is specified, use the default one\n", "id": 62383, "time": "2004-08-24T09:12:31Z", "bug_id": 28984, "creation_time": "2004-08-24T09:12:31Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 28984, "is_private": false, "count": 7, "id": 62384, "time": "2004-08-24T09:33:36Z", "creator": "juergen.biebl@msg.de", "creation_time": "2004-08-24T09:33:36Z", "text": "Yes that sounds better to use name=\"...\" like in:\n<ccmTask action=\"checkin\" name=\"4711\" />\nAlso to use the default if no task is specified is a good idea.\n\nAnd it is worth thinking about which verbs to use for 'action'.\nTo use CVS-verbs only may confuse users who are familiar with CM Synergy only.\nTo stick to the Synergy-verbs like they are defined in the command line manual \nof Telelogic sound better to me.\n\n"}, {"count": 8, "tags": [], "creator": "jan@materne.de", "attachment_id": null, "is_private": false, "id": 62386, "time": "2004-08-24T09:42:58Z", "bug_id": 28984, "creation_time": "2004-08-24T09:42:58Z", "text": "For the action verbs I would use the Synergy one because we are writing for \nthat tool. CVS-verbs would be additional.\n\nCCM checkin = CVS commit\nCCM ?       = CVS update\n..."}, {"count": 9, "tags": [], "creator": "staplin@digitalglobe.com", "is_private": false, "text": "Jan,\nPerhaps the 6.3 java client will make the interface nicer, but it is still tied to the platform dependent \nbinaries.  The java client requires the binary applications to run, and is therefore definitely not a \"write \nonce, run anywhere\" solution, but it may have the desired effect of providing a platform independent \ninterface to the binaries (provided the platform is officially supported).\n", "id": 62395, "time": "2004-08-24T12:44:27Z", "bug_id": 28984, "creation_time": "2004-08-24T12:44:27Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 28984, "text": "Good to know, but maybe the java interface is more stable. Maybe in the future \nonly a real RUN-EVERYWHERE client will exist :-)", "id": 62396, "time": "2004-08-24T12:46:12Z", "creator": "jan@materne.de", "creation_time": "2004-08-24T12:46:12Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "jan@materne.de", "attachment_id": null, "is_private": false, "id": 198514, "time": "2017-04-25T09:47:00Z", "bug_id": 28984, "creation_time": "2017-04-25T09:47:00Z", "text": "I stopped using Synergy. Also I heard that there were major changes on the client."}]