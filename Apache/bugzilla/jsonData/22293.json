[{"count": 0, "tags": [], "creator": "brettporter@yahoo.com", "attachment_id": null, "id": 42518, "time": "2003-08-11T07:50:40Z", "bug_id": 22293, "creation_time": "2003-08-11T07:50:40Z", "is_private": false, "text": "Recent versions of the Jasper ant task use the directory name for the package so\nyou can compile a whole tree. That's great.\n\nHowever, JasperLoader always looks for \"org.apache.jsp.JSP_NAME\", which results\nin (root cause of a servlet exception):\njava.lang.NoClassDefFoundError: org/apache/jsp/cookieMonster_jsp (wrong name:\nadmin/cookieMonster_jsp)\n\tat java.lang.ClassLoader.defineClass0(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:488)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:423)\n\tat org.apache.jasper.servlet.JasperLoader.loadClass(JasperLoader.java:215)\n\tat org.apache.jasper.servlet.JasperLoader.loadClass(JasperLoader.java:131)\n\tat org.apache.jasper.JspCompilationContext.load(JspCompilationContext.java:497)\n\tat\norg.apache.jasper.servlet.JspServletWrapper.getServlet(JspServletWrapper.java:150)\n\nI've tried this out on 4.1.24, and according to CVS the files haven't changed\nfor 4.1.27 so I imagine it still exists.\n\nNot having a decent way to precompile JSPs is really hurting our production\nenvironment. With the large number of JSPs we have, using the web.xml fragment\nis a bit impractical and prevents any recompilation at a later date by the live\nserver."}, {"count": 1, "tags": [], "bug_id": 22293, "attachment_id": 7738, "is_private": false, "id": 42521, "time": "2003-08-11T09:00:26Z", "creator": "brettporter@yahoo.com", "creation_time": "2003-08-11T09:00:26Z", "text": "Created attachment 7738\nfix for 22293 and 22294 that unifies package handling"}, {"count": 2, "tags": [], "bug_id": 22293, "attachment_id": null, "is_private": false, "id": 42525, "time": "2003-08-11T10:55:26Z", "creator": "remm@apache.org", "creation_time": "2003-08-11T10:55:26Z", "text": "This will not be implemented in 4.1.x (too big a change). I considered\nbackporting from 5.0.x for a long time, but chose not to do it.\nDespite you not liking it, you should rely on web application reloading:\nautomatic JSP recompilation on access is extremely expensive performance wise,\nwhile a programmatic (or automatic if you update the web.xml) webapp reload does\nnot have any performance impact. Your solution is just plain bad, and will not\nbe encouraged or supported (but I'm willing to apply a patch for bug 22294 if it\nstill exists in Tomcat 5.0.x)."}, {"count": 3, "tags": [], "text": "*** Bug 22294 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 42582, "creator": "brettporter@yahoo.com", "time": "2003-08-11T22:30:13Z", "bug_id": 22293, "creation_time": "2003-08-11T22:30:13Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 22293, "attachment_id": null, "id": 42584, "time": "2003-08-11T22:36:14Z", "creator": "brettporter@yahoo.com", "creation_time": "2003-08-11T22:36:14Z", "is_private": false, "text": "Remy, reading your comment makes me think we are talking about different things.\nWhat I am aiming to do is avoid compiling JSPs on access, by compiling them via\nant and including them in the webapp.\n\nHowever, we have had the situation of needing to change a JSP on the fly and\nrecompile it on access. I don't know how Tomcat 5.0.x is going to work for that\nsort of thing.\n\nAll I'm trying to do is have JSPC generate the same structure as the work\ndirectory so they can be interchangable.\n\nThis will be in production here with my patch in the next 2 weeks. I don't see\nwhy it can't be applied to the TC4 branch if it will only improve the functionality.\n\nI've closed 22294 as a duplicate of this, because I guess they were really the\nsame problem of JSPC differing from Jasper at runtime. It just differed in 2 ways."}, {"count": 5, "tags": [], "bug_id": 22293, "attachment_id": null, "id": 42593, "time": "2003-08-12T02:29:07Z", "creator": "brettporter@yahoo.com", "creation_time": "2003-08-12T02:29:07Z", "is_private": false, "text": "the above patch does have a problem with loading the classes when a package is\nspecified, so is not suitable for general purpose usage at the moment."}, {"count": 6, "tags": [], "bug_id": 22293, "attachment_id": null, "id": 48908, "time": "2003-12-11T14:48:10Z", "creator": "jfclere@gmail.com", "creation_time": "2003-12-11T14:48:10Z", "is_private": false, "text": "I have a work-around:\nUse JspC -p org.apache.jsp and apply the following patch:\n+++\n--- jakarta-tomcat-4.1.29-src/jasper/src/share/org/apache/jasper/JspC.java     \nMon Oct 27 16:27:32 2003\n+++ jakarta-tomcat-4.1.29-src/jasper/src/share/org/apache/jasper/JspC.java     \nThu Dec 11 15:34:23 2003\n@@ -542,6 +542,8 @@\n                 String jspPackage = toPackageName(jspUri);\n                 if (jspPackage.equals(\"\")) {\n                     clctxt.setServletPackageName(targetPackage);\n+                } else if (targetPackage.equals(\"org.apache.jsp\")) {\n+                    clctxt.setServletPackageName(targetPackage);\n                 } else {\n                     clctxt.setServletPackageName(targetPackage + \".\"\n                                                  + jspPackage);\n+++"}, {"count": 7, "tags": [], "text": "I have applied Jean-Frederic's suggested patch to the 4.1.x branch.", "is_private": false, "id": 71929, "creator": "markt@apache.org", "time": "2005-03-07T22:58:25Z", "bug_id": 22293, "creation_time": "2005-03-07T22:58:25Z", "attachment_id": null}]