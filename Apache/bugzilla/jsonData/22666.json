[{"count": 0, "tags": [], "bug_id": 22666, "is_private": false, "text": "My HTML have charset UTF-8.\nI have a simple form with one input text field.\nWhen I post into this text field non us-ascii symbols, like &#x00F6; - Latin \nSmall Letter O With Diaresis (\u00f6), it comes to JSP paramaters in strange state.\n\nI've following code in JSP:\n\nrequest.setCharacterEncoding(\"UTF-8\");\nString [] texts = request.getParameterValues (\"text\");\n\nAs my form has only one text field \"text\", I should get String [1] array here. \nBut I've got String [3] with strange consistent. \n\nI've add following code for look into the data:\n\n    String [] texts = request.getParameterValues(\"text\");\n    for (int i = 0; i < texts.length; i++) {\n      String value = texts[i];\n      byte [] bytes = value.getBytes(\"UTF-8\");\n      for (int j = 0; j < bytes.length; j++) {\n        byte aByte = bytes[j];\n        System.out.print(aByte + \", \");\n      }\n      System.out.println(\"\");\n    }\n\nAnd I got following:\n-61, -125, -62, -125, -61, -126, -62, -125, -61, -125, -62, -126, -61, -126, -\n62, -74, \n\n-61, -125, -62, -125, -61, -126, -62, -74, \n\n-61, -125, -62, -74, \n\nSo each of three Strings contain wrong set of characters different from \n&#x00F6;\n\nWhat's wrong with it?", "id": 43183, "time": "2003-08-22T18:09:10Z", "creator": "davidovsv@yandex.ru", "creation_time": "2003-08-22T18:09:10Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 22666, "is_private": false, "id": 43184, "time": "2003-08-22T18:14:53Z", "creator": "davidovsv@yandex.ru", "creation_time": "2003-08-22T18:14:53Z", "tags": [], "text": "After the posting I seen in request notification in my mailbox following:\n\n... skipped...\nSmall Letter O With Diaresis (\u0413\u00b6), it comes to JSP paramaters in strange\nstate.\n....skipped...\n\nSo (&#x00F6;) has been changed to (&#0393;&#00B6)"}, {"count": 2, "tags": [], "bug_id": 22666, "text": "To me this looks like you are experiencing the same problem as \nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=2760\n\nie that you can't use setCharacterEncoding() inside a JSP because Jasper has\nalready checked the value of jsp_precompile, and the spec says you can't set the\nencoding after checking the value of a parameter.\n\nI'm not convinced by the solution proposed there, however. Tomcat appears to use\nthe same character encoding for both the requested URL and POSTed parameters,\nwhich is incorrect. \n\nSpecifically this code in HttpRequestBase:\n// Parse any parameters specified in the query string\n        String queryString = getQueryString();\n        try {\n            RequestUtil.parseParameters(results, queryString, encoding);\n        } catch (UnsupportedEncodingException e) {\n            ;\n        }\nshould be:\n// Parse any parameters specified in the query string\n        String queryString = getQueryString();\n        try {\n            RequestUtil.parseParameters(results, queryString, \"UTF-8\");\n        } catch (UnsupportedEncodingException e) {\n            ;\n        }\nbecause the servlet spec does /not/ say to use the users encoding for request\nURLs; it says it is to \"parse POST data\" (servlet 2.3 sec 4.9); and the HTTP\nspec says the encoding for URLs is UTF8.\n\nThis problem is exacerbated for users of the portlet spec. With portlets,\ntypical usage will have parameters in form actions (e.g. a target portlet window\nid) as well as in the body of POSTed forms. The form action URL is encoded on\nthe server (should use UTF8), while the POSTed parameters sent with it use the\nbrowser's default encoding, which may not be the same. So attempting to set the\nencoding with a filter won't work, because the incoming request has two\nencodings at work. If tomcat decoded URLs differently from request bodies there\nwould be no problem.", "id": 46861, "time": "2003-11-05T14:12:14Z", "creator": "Brian.Ewins@btinternet.com", "creation_time": "2003-11-05T14:12:14Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 22666, "is_private": false, "id": 46864, "time": "2003-11-05T14:43:09Z", "creator": "Larry.Isaacs@sas.com", "creation_time": "2003-11-05T14:43:09Z", "tags": [], "text": "FYI: I checked, and Craig implemented a fix for Bug #2760 prior to the original\nrelease of Tomcat 4.0."}, {"count": 4, "tags": [], "bug_id": 22666, "text": "Larry, I'd be happy to see this bug closed then, but the bug with the request\nencoding being used to decode URLs is there right now in CVS. Do you want me to\nraise this separately and close this bug?", "id": 46867, "time": "2003-11-05T15:07:08Z", "creator": "Brian.Ewins@btinternet.com", "creation_time": "2003-11-05T15:07:08Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "Brian.Ewins@btinternet.com", "is_private": false, "text": "Sorry I shouldn't have talked about closing this bug, since obviously Stanislav\nstill sees something wrong --- but the request encoding bug hit us today (arabic\nwin2k client, english win2k server; we had been using URLEncoder.encodeURL(blah,\n\"UTF-8\"), now we filter just get requests to set encoding to UTF8 - however the\nbug would prevent us from using this client & server with portlets, as described)", "id": 46868, "time": "2003-11-05T15:12:43Z", "bug_id": 22666, "creation_time": "2003-11-05T15:12:43Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 22666, "text": "I've solved this issue by using iso-8859-1 encoding of my pages. And when some \nunicode data comes from form in format &#number;, I decode it to real unicode \nstring with request wrapper. It's not a pretty good solution, but it's \nworking :)", "id": 47620, "attachment_id": null, "creator": "davidovsv@yandex.ru", "creation_time": "2003-11-19T13:16:18Z", "time": "2003-11-19T13:16:18Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 22666, "text": "There have been a number of updates to TC4 and TC5 since this report was filed \nto address this type of issue. The updates are described below. As far as I \ncan tell, the issues described in this report should now be resolved.\n\nThere are a number of situations where there may be a requirement to use non-\nUS ASCII characters in a URI. These include:\n- Parameters in the query string\n- Servlet paths\n\nThere is a standard for encoding URIs (http://www.w3.org/International/O-URL-\ncode.html) but this standard is not consistently followed by clients. This \ncauses a number of problems.\n\nThe functionality provided by Tomcat (4 and 5) to handle this less than ideal \nsituation is described below.\n\n1. The Coyote HTTP/1.1 connector has a useBodyEncodingForURI attribute which \nif set to true will use the request body encoding to decode the URI query \nparameters.\n  - The default value is true for TC4 (breaks spec but gives consistent \nbehaviour across TC4 versions)\n  - The default value is false for TC5 (spec compliant but there may be \nmigration issues for some apps)\n2. The Coyote HTTP/1.1 connector has a URIEncoding attribute which defaults to \nISO-8859-1.\n3. The parameters class (o.a.t.u.http.Parameters) has a QueryStringEncoding \nfield which defaults to the URIEncoding. It must be set before the parameters \nare parsed to have an effect.\n\nThings to note regarding the servlet API:\n1. HttpServletRequest.setCharacterEncoding() normally only applies to the \nrequest body NOT the URI.\n2. HttpServletRequest.getPathInfo() is decoded by the web container.\n3. HttpServletRequest.getRequestURI() is not decoded by container.\n\nOther tips:\n1. Use POST with forms to return parameters as the parameters are then part of \nthe request body.", "id": 52974, "time": "2004-02-25T23:08:54Z", "creator": "markt@apache.org", "creation_time": "2004-02-25T23:08:54Z", "is_private": false, "attachment_id": null}]