[{"count": 0, "tags": [], "bug_id": 38166, "attachment_id": null, "id": 84309, "time": "2006-01-06T18:55:31Z", "creator": "ufs@ufsoft.org", "creation_time": "2006-01-06T18:55:31Z", "is_private": false, "text": "Would it be possible to enhance mod_vhost_alias to support <Location></Location>?\n\nThe idea is to do the same kind of replacements mod_vhost_alias supports, but\ninside a Location block, which could be called for example, LocationAlias, or\nVirtualLocation.\n\nWhy this, lets take an example:\n------------------------------------------\n<Location />\n      SetEnv PYTHON_EGG_CACHE /tmp\n      SetHandler mod_python\n      PythonOption TracLocale pt_PT.ISO8859-15\n      PythonHandler trac.web.modpython_frontend\n      PythonOption TracEnv /var/trac/%1\n</Location>\n\n########## Projects - Start ##########################\n\n   <Location /login>\n      AuthType Basic\n      AuthName \"%1::Trac\"\n      AuthUserFile /var/trac/%1/conf/users\n      Require valid-user\n   </Location>\n\n   <Location /svn>\n   SetHandler none \n      <IfDefine SVN>\n         DAV svn\n         SVNPath /var/svn/repos/%1\n         AuthzSVNAccessFile /var/trac/%1/conf/groups\n         Satisfy Any\n         Require valid-user\n         AuthType Basic\n         AuthName \"%1::SVN\"\n         AuthUserFile /var/trac/%1/conf/users\n      </Ifdefine>\n   </Location>\n########## Project - End #############################\n\n<LocationMatch /[^/]+/trac>\n\tSetHandler none\n</LocationMatch>\n</VirtualHost>\n------------------------------------\n\nThe above, if it hadn't the '%1' replacements, and a correct/working project, it\nwould be a working trac environment. With the enhancement I ask, replacing those\nLocation with a VirtualLocation, or LocationAlias would become any project I'd\nwant, specified by the url.\n\nWould this be feasable? Or totaly Impossible?"}, {"count": 1, "tags": [], "bug_id": 38166, "attachment_id": null, "id": 85270, "time": "2006-01-31T20:11:52Z", "creator": "slive@apache.org", "creation_time": "2006-01-31T20:11:52Z", "is_private": false, "text": "I think this falls into totally impossible.  Each module is responsible for\nprocessing its own directive arguments, so each module would need to be adjusted\nto understand the %-characters."}]