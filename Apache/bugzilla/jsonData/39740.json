[{"count": 0, "tags": [], "creator": "alfred.morgan@adecn.com", "attachment_id": null, "id": 89850, "time": "2006-06-07T00:31:25Z", "bug_id": 39740, "creation_time": "2006-06-07T00:31:25Z", "is_private": false, "text": "w3c suggests ; to be used as a query arg separator instead of &\nhttp://www.w3.org/TR/1999/REC-html401-19991224/appendix/notes.html#h-B.2.2\n\nother servers like python urllib module and twisted.web parse it that way\nTomcat should parse arguments:\nhttp://localhost/page?a=1;b=2;c=3\nas\na=1\nb=2\nc=3"}, {"count": 1, "tags": [], "creator": "yoavs@computer.org", "attachment_id": null, "is_private": false, "id": 100922, "time": "2007-03-25T14:52:07Z", "bug_id": 39740, "creation_time": "2007-03-25T14:52:07Z", "text": "I highly doubt this is going to get done.  Does anyone want to do it?"}, {"count": 2, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "is_private": false, "id": 100964, "time": "2007-03-26T10:03:16Z", "bug_id": 39740, "creation_time": "2007-03-26T10:03:16Z", "text": "Ideally in the next revision of RFC 2616 this \"recommendation to HTTP server\nimplementors\" would be implemented in the spec.  W3C doesn't write the HTTP\nprotocol spec, the IETF publishes it.\n\n\n"}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 143532, "time": "2011-01-20T17:49:28Z", "bug_id": 39740, "creation_time": "2011-01-20T17:49:28Z", "is_private": false, "text": "This recommendation will not be implemented."}, {"count": 4, "tags": [], "creator": "leigh.klotz@xerox.com", "attachment_id": null, "id": 144024, "time": "2011-02-07T13:43:44Z", "bug_id": 39740, "creation_time": "2011-02-07T13:43:44Z", "is_private": false, "text": "RFC 2616 is a red herring.  The character \"&\" doesn't appear in it, nor does the word \"ampersand.\"  HTTP is agnostic about the meaning of characters in URIs; that's up to the applications on both ends.\n\nThere are many ways of forming URIs with meaning, and the query-string format used by HTML4 is just one of them.  Granted W3C recommendations suggest semicolon instead of ampersand, yet no desktop browsers do this.  However, desktop browsers aren't the only users of HTTP or of Tomcat.  Many web-based REST applications use HTTP to transport XML, JSON, ProtocolBuffers, and other application data, and allowing Tomcat to handle other forms of query string parsing would be a boon to these applications."}, {"count": 5, "tags": [], "bug_id": 39740, "attachment_id": null, "text": "See http://www.restlet.org/documentation/2.0/jse/api/org/restlet/data/Form.html\nConstructor Form(java.lang.String, org.restlet.data.CharacterSet, char)\n\nNote that it also provides Matrix URL decoding.", "id": 144026, "time": "2011-02-07T14:39:11Z", "creator": "leigh.klotz@xerox.com", "creation_time": "2011-02-07T14:39:11Z", "is_private": false}, {"count": 6, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 144039, "time": "2011-02-08T05:06:34Z", "bug_id": 39740, "creation_time": "2011-02-08T05:06:34Z", "is_private": false, "text": "I've done a little more digging. Using '&' is alao a W3C recommendation (although it pre-dates ';'). I'll look to see if it is possible to support ';' as a query string separator in Tomcat 7. The chances of it being included are going to depend on how many changes are required to the parsing code to make it work."}, {"count": 7, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "id": 144062, "time": "2011-02-08T15:42:11Z", "bug_id": 39740, "creation_time": "2011-02-08T15:42:11Z", "is_private": false, "text": "Not that it's necessarily a good example, but Apache httpd does not recognize \";\" as a query parameter separator, either.\n\nFor instance, if you have a URL which contains a \"jsessionid\" parameter inserted before the \"?\" (which is of course how Tomcat constructs re-written URLs containing session ids), httpd is not capable of locating a file on the disk that matches (unless there is a file with a very unlikely name on the disk).\n\nGeez... these REST guys are never satisfied :)"}, {"count": 8, "tags": [], "text": "First, those comments are nonsense since 1999, as the URI is a quoted construct \nnot subject to sgml parsing, and any sgml parser corruping quoted sgml tags\nis broken, end of discussion.  Your post is similarly nonsense since ';'s are\nallowed to be passed, the only question is what is made of them.\n\nSecond, http://tools.ietf.org/html/rfc3986 is the only relevant references which \nhttp considers at the protocol layer. \"HTML 4.01 Specification\" was the origin\nof the '&' construct - http://www.w3.org/TR/html401/.\n\nIt's reasonable by 3986 to put anything in a query arg as long as it is not a\nliteral '#' symbol.  The concept of query key=val pairs originates in CGI, which\nwas formalized by W3C, http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4\nwithout deprecating the old '&' recommendation, so nobody adopts this change.\nBut it is entirely up to the application, so whichever decision the servlet\nspec authors adopt is acceptable.  If they conform to what the user agents have\noffered ('&' only) that's fine too.  What the W3C offered here is certainly not\nworthy of being called a 'specification', as it was not specific.\n\nTo Christopher, you are getting your path and query segments confused.  In the\npath part, /foo/bar is not /foo/bar;x=1 and that's made very clear in the spec.\nAnd in your example /foo/bar;uid=1 is not /foo/bar;uid=2, something that is\nvery deliberate in presenting per-session data.", "is_private": false, "bug_id": 39740, "id": 144067, "time": "2011-02-08T19:12:35Z", "creator": "wrowe@apache.org", "creation_time": "2011-02-08T19:12:35Z", "attachment_id": null}, {"count": 9, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "id": 144070, "time": "2011-02-09T00:58:22Z", "bug_id": 39740, "creation_time": "2011-02-09T00:58:22Z", "is_private": false, "text": "I think it does not make sense to parse those in the body, as mime-type \"application/x-www-form-urlencoded\" as defined by HTML spec explicitly defines '&' as separators.\n\nParsing the query string and adding parameter could be done in a Valve.\n\nThere is Request#addParameter(String, String[]) that allows to add parameters, though it must be called before any call to Request#getParameterMap(), because such call will populate Request#patameterMap, effectively caching it.\n\nFinally, it can be done in a Filter, wrapping the original HttpServletRequest.\n\nI think that this feature does not need to be enabled by default."}, {"count": 10, "tags": [], "bug_id": 39740, "attachment_id": null, "id": 144073, "creation_time": "2011-02-09T01:50:59Z", "time": "2011-02-09T01:50:59Z", "creator": "wrowe@apache.org", "text": "http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4 specifically says\nthe URL-args of a get are similarly application/x-www-form-urlencoded ... it\ndoes make sense to optionally apply a filter.  Let the administrator go to\nthe trouble if they desire this, until the W3C finally declares ';' as the\ncorrect syntax, and not some obtuse footnote that contradicts their spec.", "is_private": false}, {"count": 11, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "is_private": false, "id": 144077, "time": "2011-02-09T03:07:24Z", "bug_id": 39740, "creation_time": "2011-02-09T03:07:24Z", "text": "(In reply to comment #10)\n> until the W3C finally declares ';' as the\n> correct syntax, and not some obtuse footnote that contradicts their spec.\n\nI think it never happens. I do not see any traces of that footnote in HTML5 spec drafts."}, {"count": 12, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 148071, "time": "2011-07-21T17:43:44Z", "bug_id": 39740, "creation_time": "2011-07-21T17:43:44Z", "is_private": false, "text": "It should be possible to do this. Changes would be required to org.apache.tomcat.util.http.Parameters\n\nHowever, there has been very little demand for this (I couldn't find any requests other this this issue and no-one has voted for this issue). The changes to do this would not be trivial. Therefore, I think the solution of a custom filter for those users that need this support is appropriate."}]