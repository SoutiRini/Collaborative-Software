[{"count": 0, "tags": [], "bug_id": 28882, "text": "The ProjectComponent object should have a setIf and setUnless method. If the \nproperty is not set, the component is not take into account.\nIf it's not possible It should be at least possible in the Task object.\nThis feature would add some flexibility in Ant file by removing copy/paste for \nsimilar targets or by removing extra targets created only for the purpose of the\nif/unless.\n\nThis feature has been discussed on Ant developer mailing list at\nhttp://marc.theaimsgroup.com/?t=108369006500001&r=1&w=2\n\nExamples\n    <echo message=\"username property not set using ${user.name}\" unless=\"username\"/>\n    <property name=\"username\" value=\"${user.name}/>\n\n    <copy dir=\"dest\">\n      <fileset dir=\"src\">\n        <excluse name=\"test/**/*\" unless=\"testing\"/>\n      </fileset>\n    </copy>\n    \n    <!-- In this case it's the caller who set the condition -->\n    <antcall target=\"upload-files\" if=\"uptodate\"/>\n    \n    <checksum file=\"foo.bar\" if=\"file-exists\"/>", "id": 57126, "attachment_id": null, "creator": "anthony.goubard@wanadoo.nl", "creation_time": "2004-05-10T19:07:38Z", "time": "2004-05-10T19:07:38Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 28882, "is_private": false, "text": "*** Bug 15955 has been marked as a duplicate of this bug. ***", "id": 75385, "time": "2005-05-25T23:06:30Z", "creator": "mbenson@apache.org", "creation_time": "2005-05-25T23:06:30Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "peterreilly@apache.org", "text": "*** Bug 31451 has been marked as a duplicate of this bug. ***", "id": 93211, "time": "2006-09-08T10:59:00Z", "bug_id": 28882, "creation_time": "2006-09-08T10:59:00Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "jrw@pobox.com", "text": "If adding stuff to a base class is too broad a change, the same effect could be\nachieve by just adding if/unless to the <sequential> task.", "id": 96811, "time": "2006-12-12T07:40:35Z", "bug_id": 28882, "creation_time": "2006-12-12T07:40:35Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 28882, "attachment_id": null, "text": "*** Bug 41783 has been marked as a duplicate of this bug. ***", "id": 100161, "time": "2007-03-07T10:55:58Z", "creator": "peterreilly@apache.org", "creation_time": "2007-03-07T10:55:58Z", "is_private": false}, {"count": 5, "attachment_id": null, "bug_id": 28882, "is_private": false, "id": 100181, "time": "2007-03-08T03:57:00Z", "creator": "stevel@apache.org", "creation_time": "2007-03-08T03:57:00Z", "tags": [], "text": "I like the idea of making <sequential> take a condition; fits in well in workflows."}, {"count": 6, "attachment_id": null, "bug_id": 28882, "is_private": false, "id": 100188, "time": "2007-03-08T08:08:45Z", "creator": "mbenson@apache.org", "creation_time": "2007-03-08T08:08:45Z", "tags": [], "text": "John makes a good point; somehow I missed the comment the first time around. +1"}, {"count": 7, "tags": [], "text": "Obviously I'm all for it, since I extended <sequential> just for this purpose\nmyself. In addition to if/unless, I had ifTrue/unlessTrue and os/osFamily\nconditions as attributes.\n\nHaving <sequential> accept any condition would force to use another nested\nelement  to separate the condition from the sequential content, no? Unless we\nplay tricks like saying \"if first child is a condition, it's not content but a\ncontroller for sequential itself\", which I'm not fond of. --DD", "is_private": false, "bug_id": 28882, "id": 100189, "time": "2007-03-08T08:14:12Z", "creator": "ddevienne@gmail.com", "creation_time": "2007-03-08T08:14:12Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "mbenson@apache.org", "text": "Of course, once you get into all that, what's the difference between all this\nand <if>?  :|", "id": 100190, "time": "2007-03-08T08:17:50Z", "bug_id": 28882, "creation_time": "2007-03-08T08:17:50Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "ddevienne@gmail.com", "text": "You have an implicit <then> block without an <else> block ;-)\n\nSomehow this flows \"better\" in the builds. Make no mistake, it's no different in\nessence that target's if/unless, which people must resort to otherwise if they\nwant to use Ant proper (no Ant-Contrib), except that it creates \"spaghetti\" code.\n\nHaving if/unless on all tasks would make the conditions less visible, because of\nthe tasks' own attributes, but <sequential> is itself often \"virgin\" of\nattributes, so they stand out well.\n\nI used my conditional <sequential> much more than Ant-Contrib's <if>. It really\nworked for me ;-) I think this should be in Ant. --DD", "id": 100191, "time": "2007-03-08T08:24:51Z", "bug_id": 28882, "creation_time": "2007-03-08T08:24:51Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "mbenson@apache.org", "text": "*** Bug 42522 has been marked as a duplicate of this bug. ***", "id": 103690, "time": "2007-05-25T11:21:16Z", "bug_id": 28882, "creation_time": "2007-05-25T11:21:16Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "stevel@apache.org", "text": "What do people think of me adding basic if/unless tests to <sequential>. Effort\nis low, testing simple and you can always use a previous <condition> to make a\nsequence out of it.\n\nPro: easy to use\nCon: \n-suddenly, anyone that embeds a sequential inside their own code can get\ncomponents that don't execute if their if/unless statements evaluate wrong\n-anyone that has subclassed Sequential has extra attributes/state to deal with.\n\nI'm about to subclass sequential at work for my own conditional bits (I want to\nmake reporting/failure in our FunctionalTestTask optional, so that we can do an\naggregate build with reporting/failure at the end)", "id": 108011, "time": "2007-09-11T03:39:42Z", "bug_id": 28882, "creation_time": "2007-09-11T03:39:42Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "text": "I am preparing a patch to add namespaced conditional attributes.\nThe conditional attributes act at the UE level, and are\nnot seen by the tasks / or types.\nThe attribute is evalualted and if false, the UE is not processed\nfurther.\nThere are two namespaces - ant:if and ant:unless, the patch\nalso allows antlibs to define their own condtional attributes\nin their namespace.\nThe attributes are:\n   set  - check if an property exists\n   true - check if the value of the attribute is true\n   blank - check if the value of the attribute is \"\" (or null)\n   \n   the ant:if checks for positive results and the ant:unless checks for\n   negative results.\n\n\nsomething like:\n<project name=\"x\" xmlns:if=\"ant:if\" xmlns:unless=\"ant:unless\">\n\n   <property name=\"onWindows\" value=\"true\"/>\n\n   <target name=\"abc\">\n        <echo if:set=\"onWindows\">I am on windows</echo>\n        <echo unless:set=\"onWindows\">I am *not* on windows</echo>\n   </target>\n   <macrodef name=\"mycommand\">\n      <attribute name=\"level\" default=\"\"/>\n      <attribute name=\"debug\" default=\"\"/>\n       <attribute name=\"file\"/>\n     <sequential>\n        <exec executable=\"mycommand\">\n        <arg value=\"--debug\"  if:true=\"@{debug}\"/>\n        <arg value=\"--level\"    unless:blank=\"@{level}\"/>\n        <arg value=\"@{level}\"  unless:blank=\"@{level}\"/>\n        <arg value=\"@{file}\"/>\n   </sequential>\n  </macrodef>\n\n</project>", "is_private": false, "bug_id": 28882, "id": 108012, "time": "2007-09-11T04:18:38Z", "creator": "peterreilly@apache.org", "creation_time": "2007-09-11T04:18:38Z", "attachment_id": null}, {"count": 13, "tags": [], "creator": "ddevienne@gmail.com", "text": "I would much prefer Peter's addition of task-invisible namespaced attributes,\nbecause it is more powerful that if/unless on sequential, since allows\nconditional use of any XML tag, like his <arg> example. (note that I've used a\ncustom conditional sequential for years myself, so I'm not biais against it!)\n\nThat said, I wonder how the antlib-defined extra \"action\" attribs are defined\nand used, and how well that plays with XML NS rules. You can't write\nif:ac:foo=\"\" for example. Ideally I would prefer the \"action\" attributes to be\npart of a limited expression language for conditions, and be part of the\nattribute value itself:\n\n<project name=\"x\">\n   <property name=\"onWindows\" value=\"true\"/>\n   <target name=\"abc\">\n        <echo ant:if=\"isset(onWindows)\">I am on windows</echo>\n        <echo ant:unless=\"isset(onWindows)\">I am *not* on windows</echo>\n   </target>\n   <macrodef name=\"mycommand\">\n      <attribute name=\"level\" default=\"\"/>\n      <attribute name=\"debug\" default=\"\"/>\n       <attribute name=\"file\"/>\n     <sequential>\n        <exec executable=\"mycommand\">\n        <arg value=\"--debug\"  ant:if=\"istrue(@{debug})\"/>\n        <arg value=\"--level\"  ant:unless=\"isempty(@{level})\"/>\n        <arg value=\"@{level}\" ant:unless=\"isempty(@{level})\"/>\n        <arg value=\"@{file}\"/>\n   </sequential>\n  </macrodef>\n</project>\n\nThen antlibs can declare new action verbs and use the them with the NS prefix, a\nla XPath, like ant:if=\"ac:isfalse(${debug})\". I realize this is much more\ndifficult to achieve, so Peter's proposed syntax sounds fine too. I'm just\nthrowing the idea out there. --DD", "id": 108018, "time": "2007-09-11T07:04:00Z", "bug_id": 28882, "creation_time": "2007-09-11T07:04:00Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 28882, "is_private": false, "text": "*** Bug 43503 has been marked as a duplicate of this bug. ***", "id": 108746, "time": "2007-09-28T05:46:20Z", "creator": "peterreilly@apache.org", "creation_time": "2007-09-28T05:46:20Z", "attachment_id": null}, {"count": 15, "tags": [], "text": "Because we have the ant:if|unless attributes now, we won't change the ProjectComponent.", "is_private": false, "bug_id": 28882, "id": 177163, "time": "2014-08-14T09:34:25Z", "creator": "jan@materne.de", "creation_time": "2014-08-14T09:34:25Z", "attachment_id": null}]