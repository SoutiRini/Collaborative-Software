[{"count": 0, "attachment_id": null, "bug_id": 50597, "text": "Class.newInstance is called even when the following method ServletContext.addFilter method is called:\n\njavax.servlet.FilterRegistration.Dynamic addFilter(java.lang.String s, javax.servlet.Filter filter);\n\nThis leads to an InstantiationException at runtime if there is no no-args constructor for the filter (pasted below). I'll supply a simple patch that fixes the issue for me.\n\nSEVERE: Exception starting filter testFilter\njava.lang.InstantiationException: test.TestFilter\n        at java.lang.Class.newInstance0(Class.java:340)\n        at java.lang.Class.newInstance(Class.java:308)\n        at org.apache.catalina.core.DefaultInstanceManager.newInstance(DefaultIn\nstanceManager.java:119)\n        at org.apache.catalina.core.ApplicationFilterConfig.getFilter(Applicatio\nnFilterConfig.java:252)\n        at org.apache.catalina.core.ApplicationFilterConfig.setFilterDef(Applica\ntionFilterConfig.java:372)\n        at org.apache.catalina.core.ApplicationFilterConfig.<init>(ApplicationFi\nlterConfig.java:98)\n        at org.apache.catalina.core.StandardContext.filterStart(StandardContext.\njava:4382)\n        at org.apache.catalina.core.StandardContext$2.call(StandardContext.java:\n5040)\n        at org.apache.catalina.core.StandardContext$2.call(StandardContext.java:5035)\n        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:138)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:662)", "id": 143390, "time": "2011-01-16T12:25:24Z", "creator": "mlists@juma.me.uk", "creation_time": "2011-01-16T12:25:24Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "text": "The simple patch that fixes it for me is:\n\n\n[ijuma@localhost]~/src/tomcat% svn diff\nIndex: java/org/apache/catalina/core/ApplicationFilterConfig.java\n===================================================================\n--- java/org/apache/catalina/core/ApplicationFilterConfig.java\t(revision 1059421)\n+++ java/org/apache/catalina/core/ApplicationFilterConfig.java\t(working copy)\n@@ -367,10 +367,10 @@\n             this.filter = null;\n \n         } else {\n-\n-            // Allocate a new filter instance\n-            getFilter();\n-\n+            if (filterDef.getFilter() == null) {\n+              // Allocate a new filter instance\n+              getFilter();\n+            }\n         }\n \n     }\n\nI don't know if this is the best way, but it works because after returning from that method the following is executed in the constructor (which is the same that getFilter does for the case where Tomcat has the class but not the instance of Filter):\n\n        if (filterDef.getFilter() != null) {\n            this.filter = filterDef.getFilter();\n            getInstanceManager().newInstance(filter);\n            initFilter();\n        }", "is_private": false, "bug_id": 50597, "id": 143391, "time": "2011-01-16T12:27:26Z", "creator": "mlists@juma.me.uk", "creation_time": "2011-01-16T12:27:26Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 50597, "attachment_id": null, "text": "Thanks for the patch. It has been applied to 7.0.x and will be included in 7.0.7 onwards.", "id": 143415, "time": "2011-01-17T12:13:09Z", "creator": "markt@apache.org", "creation_time": "2011-01-17T12:13:09Z", "is_private": false}, {"count": 3, "tags": [], "text": "Thanks!", "is_private": false, "bug_id": 50597, "id": 143421, "time": "2011-01-17T15:06:04Z", "creator": "mlists@juma.me.uk", "creation_time": "2011-01-17T15:06:04Z", "attachment_id": null}]