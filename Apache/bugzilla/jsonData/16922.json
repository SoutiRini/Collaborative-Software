[{"count": 0, "tags": [], "creator": "agntpizza@myway.com", "attachment_id": null, "is_private": false, "id": 30987, "time": "2003-02-10T09:37:42Z", "bug_id": 16922, "creation_time": "2003-02-10T09:37:42Z", "text": "We are using the MDC (mapped diagnostic contexts) to log certain\ncontext information from a server in a multiple client environment\n\nAdditionally, serious error events are mailed using the SMTP\nappender.\n\nWe notice that in the generated mails, often the logged events\nfrom the MDC are not correct, they contain log info from different\nclient sessions.\n\nLooking at the SMTPAppender source, it appears to us that\nthe appender is not using the MDC at all, but only the NDC.\n\nWe created our own SMTPAppender and override the append method.\nwe have added the following statements:\nevent.getMDCCopy();\nsuper.append(event);\n\nThis seems to do the trick (even though it is said that getMDCCopy();\ncreates a shallow copy!)\n\nThe problem appears in the following environment:\nlog4J version 1.2.6 (but also tried 1.2.7)\nwith Weblogic6.1 SP4 on Unix(HP) and WinNT,\nconsequently we use the weblogic JVM (corresponding with JDK1.3)"}, {"count": 1, "attachment_id": null, "bug_id": 16922, "is_private": false, "id": 92811, "time": "2006-08-31T18:56:38Z", "creator": "carnold@apache.org", "creation_time": "2006-08-31T18:56:38Z", "tags": [], "text": "Committed in rev 439010 and 439011 (trunk and 1.2 branch) respectively.\n\nSMTPAppender works similarly to AsyncAppender where the event may be handled by another thread (on \ncall to triggering message) so all thread-related state must be captured during the initial processing.  \nevent.getMDCCopy() which is called in AsyncAppender was not called in SMTPAppender. "}]