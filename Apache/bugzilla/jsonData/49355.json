[{"count": 0, "tags": [], "creator": "vu_k_tran@yahoo.com", "text": "Created attachment 25493\nThis file contains sample .fo files for margin-top and margin-bottom settings\n\n1. Configure FO to use text/plain as the output format\n\n2. Generates an .fo file with margin-top sets (to create header)\n3. If multiple page is generated, the margin-top value is compounded on the next pages and push the body text down until no more output for body text.\n\n3. Generates an .fo file with margin-bottom sets (to create footer)\n4. Body of text is not output\n\n\nThere are 2 attachments:\n1) TextMarginTop.fo: This file contains 2 pages with header information set.\n2) TextMarginBottom.fo: This file contains 2 pages with footer information set.", "id": 137189, "time": "2010-05-28T11:10:10Z", "bug_id": 49355, "creation_time": "2010-05-28T11:10:10Z", "is_private": false, "attachment_id": 25493}, {"count": 1, "tags": [], "creator": "vu_k_tran@yahoo.com", "is_private": false, "text": "Looking at the source file, I've noticed the following:\n\n- The TXTRenderer uses TXTState as graphic state and TXTState implements as a stack (LinkedList)\n- The CTM is pushed on to this graphic state in 2 cases:\n   1) TXTRenderer.startVPArea()\n   2) TXTRenderer.concatenateTransformationMatrix()\n\n- But the CTM is popped out from this graphic state only when:\n   1) TXTRenderer.endVPArea() is called\n\n- There is no counterpart for TXTRenderer.concatenateTransformationMatrix() to popped the CTM out of the graphic state and that state accumulates all CTM and causes issue when rendering content.\n\nMy proposed approach is:\nIn TXTRenderer, create a new variable to keep a stack trace of when CTM is pushed, popped from the stack and whether it is pushed using the concatenateTransformationMatrix() method call.  When it is time for popping the CTM, check this new stack and pop the CTM out of the stack when the CTM is pushed on it using the concatenateTransformationMatrix() call.\n\n-- Code example:\n\nprivate LinkedList ctmTransformStack = new LinkedList();\n\nprotected void startVParea(CTM ctm, Rectangle2D clippingRect) {\n    currentState.push(ctm);\n    ctmTransformStack.addLast(Boolean.FALSE);\n}\n\nprotected void endVParea() {\n    currentState.pop();\n    Boolean transformMatrix = (Boolean) ctmTransformStack.removeLast();\n        \n    /*\n     * Perform compensation pop for concatenateTransformationMatrix()'s push\n     */\n    while (transformMatrix.booleanValue()) {\n     \tcurrentState.pop();\n      \ttransformMatrix = (Boolean) ctmTransformStack.removeLast();\n   }\n}\n\nprotected void concatenateTransformationMatrix(AffineTransform at) {\n   currentState.push(new CTM(ptToMpt(at)));\n   ctmTransformStack.addLast(Boolean.TRUE);\n}", "id": 137190, "time": "2010-05-28T11:24:00Z", "bug_id": 49355, "creation_time": "2010-05-28T11:24:00Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "resetting severity from major to normal pending further review", "attachment_id": null, "id": 157272, "creator": "gadams@apache.org", "time": "2012-04-07T01:37:15Z", "bug_id": 49355, "creation_time": "2012-04-07T01:37:15Z", "is_private": false}, {"count": 3, "tags": [], "creator": "gadams@apache.org", "text": "resetting P2 open bugs to P3 pending further review", "id": 157470, "time": "2012-04-07T01:43:26Z", "bug_id": 49355, "creation_time": "2012-04-07T01:43:26Z", "is_private": false, "attachment_id": null}]