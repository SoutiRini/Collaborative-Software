[{"count": 0, "attachment_id": null, "bug_id": 41388, "is_private": false, "id": 98167, "time": "2007-01-17T02:03:22Z", "creator": "mskibbe@suse.de", "creation_time": "2007-01-17T02:03:22Z", "tags": [], "text": "we have a bug report in our bugzilla (http://bugzilla.novell.com #227455) which\nsays following:\n\n<*snip\n\nI just tried to compile package libapr1-1.2.7-23\n\nstrings/apr_snprintf.c:1261: warning: comparison with string literal\n\nThe source code is\n\nif (prefix_char != NUL && s != S_NULL && s != char_buf) {\n\nbut\n\n#define S_NULL \"(null)\"\n\nSuggest new code\n            if (prefix_char != NUL && (strcmp( s, S_NULL) != 0) && s != char_buf) {\n\nsnap*>\n\ni take a look in the 1.2.8 sources and saw that this problem is there,too.\n\ni attach a patch which fix this issue."}, {"count": 1, "tags": [], "bug_id": 41388, "text": "Created attachment 19419\nproposed patch", "id": 98168, "time": "2007-01-17T02:27:05Z", "creator": "mskibbe@suse.de", "creation_time": "2007-01-17T02:27:05Z", "is_private": false, "attachment_id": 19419}, {"text": "the patch does a different thing than the original code.\nif s gets the value \"(null)\" through another path rather than being attributed\nS_NULL, strcmp( s, S_NULL) will return 0.\n[see \n            case 's':\n                s = va_arg(ap, char *);\nsomewhere above the check. the user might have done a\napr_snprintf(\"%s\", \"(null)\", mp).\n]\n\nchecking with s != S_NULL ensures us that we explicitly attributed that value.", "tags": [], "bug_id": 41388, "is_private": false, "count": 2, "id": 98242, "time": "2007-01-18T17:27:47Z", "creator": "Lucian.Grijincu@gmail.com", "creation_time": "2007-01-18T17:27:47Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "mskibbe@suse.de", "attachment_id": null, "is_private": false, "id": 98247, "time": "2007-01-18T23:36:57Z", "bug_id": 41388, "creation_time": "2007-01-18T23:36:57Z", "text": "if i understand you right this issue is no bug => Invalid.\nif i understand you wrong please reopen this bug"}]