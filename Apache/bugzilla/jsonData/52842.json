[{"count": 0, "tags": [], "bug_id": 52842, "attachment_id": null, "text": "Hi, \n\nWe have been using the following two JMXProxy URLs for monitoring without issue\nin 6.0.29. \n\nhttp://localhost:8080/manager/jmxproxy/?qry=*:type=Executor,name=tomcatThreadPool\n\n\nOK - Number of results: 1 \n\nName: Catalina:type=Executor,name=tomcatThreadPool \nmodelerType: org.apache.tomcat.util.modeler.BaseModelMBean \nthreadPriority: 5 \nqueueSize: 0 \ncorePoolSize: 4 \nmaxIdleTime: 60000 \nthreadRenewalDelay: 1000 \nminSpareThreads: 4 \nactiveCount: 1 \nmaxThreads: 150 \ncompletedTaskCount: 17 \nmaxQueueSize: 2147483647 \nlargestPoolSize: 5 \nstateName: STARTED \nname: tomcatThreadPool \npoolSize: 3 \nnamePrefix: catalina-exec- \n\n\nhttp://localhost:8080/manager/jmxproxy/?qry=bean:name=eventingDataSource\n\n\nOK - Number of results: 1 \n\nName: bean:name=eventingDataSource \nmodelerType: org.apache.tomcat.jdbc.pool.DataSource \nMaxIdle: 100 \nJdbcInterceptors:\norg.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer \nDefaultTransactionIsolation: -1 \nValidationQuery: SELECT 1 FROM dual \nTestOnConnect: false \nPassword: Password not available as DataSource/JMX operation. \nAbandonWhenPercentageFull: 0 \nTestOnReturn: false \nUsername: xxxx \nNumActive: 0 \nMinIdle: 10 \nPoolSize: 4 \nValidationInterval: 1800000 \nConnection:\nProxyConnection[PooledConnection[oracle.jdbc.driver.T4CConnection@17f8b39]] \nNumIdle: 2 \nAccessToUnderlyingConnectionAllowed: true \nUrl: jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST =\nlocalhost)(PORT = 1580))(CONNECT_DATA =(SERVER = DEDICATED)( SERVICE_NAME =\nanywhere.com )(INSTANCE_NAME = xxx)(SID = xxx))) \nSize: 4 \nActive: 2 \nAlternateUsernameAllowed: false \nTestOnBorrow: true \nLoginTimeout: 6 \nMaxActive: 100 \nMaxAge: 0 \nSuspectTimeout: 0 \nPool: org.apache.tomcat.jdbc.pool.ConnectionPool@9283bf \nNumTestsPerEvictionRun: 0 \nName: Tomcat Connection Pool[1-6300663] \nMaxWait: 6000 \nPoolProperties: ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null;\ndefaultTransactionIsolation=-1; defaultCatalog=null;\ndriverClassName=oracle.jdbc.driver.OracleDriver; maxActive=100; maxIdle=100;\nminIdle=10; initialSize=10; maxWait=6000; testOnBorrow=true;\ntestOnReturn=false; timeBetweenEvictionRunsMillis=30000;\nnumTestsPerEvictionRun=0; minEvictableIdleTimeMillis=30000;\ntestWhileIdle=false; testOnConnect=false; password=xxxxx;\nurl=jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST =\nlocalhost)(PORT = 1580))(CONNECT_DATA =(SERVER = DEDICATED)( SERVICE_NAME =\nanywhere.com )(INSTANCE_NAME = xxx)(SID = xxx))); username=xxx;\nvalidationQuery=SELECT 1 FROM dual; validationInterval=1800000;\naccessToUnderlyingConnectionAllowed=true; removeAbandoned=true;\nremoveAbandonedTimeout=60; logAbandoned=true; connectionProperties=null;\ninitSQL=null;\njdbcInterceptors=org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer;\njmxEnabled=true; fairQueue=false; useEquals=false; abandonWhenPercentageFull=0;\nmaxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null;\nalternateUsernameAllowed=false; \nPoolName: Tomcat Connection Pool[1-6300663] \nWaitCount: 0 \nJmxEnabled: true \nTestWhileIdle: false \nUseEquals: false \nUseLock: false \nDriverClassName: oracle.jdbc.driver.OracleDriver \nRemoveAbandonedTimeout: 60 \nDbProperties: {user=xxxx, password=xxxx} \nIdle: 2 \nLogAbandoned: true \nFairQueue: false \nPoolSweeperEnabled: true \nConnectionAsync:\norg.apache.tomcat.jdbc.pool.ConnectionPool$ConnectionFuture@e9c2d3 \nJdbcInterceptorsAsArray:\nArray[org.apache.tomcat.jdbc.pool.PoolProperties$InterceptorDefinition] of\nlength 2 \n       \norg.apache.tomcat.jdbc.pool.PoolProperties$InterceptorDefinition@125f027 \n       \norg.apache.tomcat.jdbc.pool.PoolProperties$InterceptorDefinition@1b99628 \nRemoveAbandoned: true \nTimeBetweenEvictionRunsMillis: 30000 \nMinEvictableIdleTimeMillis: 30000 \nInitialSize: 10 \n\n\nAfter upgrading to 7.0.26 the JMXProxy URLs still return the correct data\nhowever I am now seeing the following exceptions in the Tomcat logs. \n\n\nMar 6, 2012 9:17:40 AM org.apache.catalina.mbeans.MBeanDumper dumpBeans \nSEVERE: Error getting attribute Catalina:type=Executor,name=tomcatThreadPool\nprestartminSpareThreads \njavax.management.ReflectionException: Cannot find getter method\ngetPrestartminSpareThreads \n        at\norg.apache.tomcat.util.modeler.ManagedBean.getGetter(ManagedBean.java:517) \n        at\norg.apache.tomcat.util.modeler.BaseModelMBean.getAttribute(BaseModelMBean.java:181) \n        at\ncom.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:666) \n        at\ncom.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638) \n        at\norg.apache.catalina.mbeans.MBeanDumper.dumpBeans(MBeanDumper.java:82) \n        at\norg.apache.catalina.manager.JMXProxyServlet.listBeans(JMXProxyServlet.java:172) \n        at\norg.apache.catalina.manager.JMXProxyServlet.doGet(JMXProxyServlet.java:121) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:621) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722) \n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305) \n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) \n        at\norg.apache.catalina.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:108) \n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) \n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) \n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224) \n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169) \n        at\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:581) \n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168) \n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98) \n        at\norg.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927) \n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) \n        at\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407) \n        at\norg.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:987) \n        at\norg.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:579) \n        at\norg.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:307) \n        at\njava.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) \n        at\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) \n        at java.lang.Thread.run(Thread.java:619) \nCaused by: java.lang.NoSuchMethodException:\norg.apache.catalina.core.StandardThreadExecutor.getPrestartminSpareThreads() \n        at java.lang.Class.getMethod(Class.java:1605) \n        at\norg.apache.tomcat.util.modeler.ManagedBean.getGetter(ManagedBean.java:510) \n        ... 27 more \nMar 6, 2012 9:17:40 AM org.apache.catalina.mbeans.MBeanDumper dumpBeans \nSEVERE: Error getting attribute Catalina:type=Executor,name=tomcatThreadPool\ndaemon \njavax.management.ReflectionException: Cannot find getter method getDaemon \n        at\norg.apache.tomcat.util.modeler.ManagedBean.getGetter(ManagedBean.java:517) \n        at\norg.apache.tomcat.util.modeler.BaseModelMBean.getAttribute(BaseModelMBean.java:181) \n        at\ncom.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:666) \n        at\ncom.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638) \n        at\norg.apache.catalina.mbeans.MBeanDumper.dumpBeans(MBeanDumper.java:82) \n        at\norg.apache.catalina.manager.JMXProxyServlet.listBeans(JMXProxyServlet.java:172) \n        at\norg.apache.catalina.manager.JMXProxyServlet.doGet(JMXProxyServlet.java:121) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:621) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722) \n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305) \n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) \n        at\norg.apache.catalina.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:108) \n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) \n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) \n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224) \n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169) \n        at\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:581) \n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168) \n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98) \n        at\norg.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927) \n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) \n        at\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407) \n        at\norg.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:987) \n        at\norg.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:579) \n        at\norg.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:307) \n        at\njava.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) \n        at\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) \n        at java.lang.Thread.run(Thread.java:619) \nCaused by: java.lang.NoSuchMethodException:\norg.apache.catalina.core.StandardThreadExecutor.getDaemon() \n        at java.lang.Class.getMethod(Class.java:1605) \n        at\norg.apache.tomcat.util.modeler.ManagedBean.getGetter(ManagedBean.java:510) \n        ... 27 more \n\n\nMar 6, 2012 9:18:20 AM org.apache.catalina.mbeans.MBeanDumper dumpBeans \nSEVERE: Error getting attribute bean:name=eventingDataSource PooledConnection \njavax.management.MBeanException: RuntimeException thrown in RequiredModelMBean\nwhile trying to invoke operation getPooledConnection \n        at\njavax.management.modelmbean.RequiredModelMBean.invokeMethod(RequiredModelMBean.java:1091) \n        at\njavax.management.modelmbean.RequiredModelMBean.invoke(RequiredModelMBean.java:955) \n        at\norg.springframework.jmx.export.SpringModelMBean.invoke(SpringModelMBean.java:90) \n        at\njavax.management.modelmbean.RequiredModelMBean.getAttribute(RequiredModelMBean.java:1358) \n        at\norg.springframework.jmx.export.SpringModelMBean.getAttribute(SpringModelMBean.java:109) \n        at\ncom.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:666) \n        at\ncom.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638) \n        at\norg.apache.catalina.mbeans.MBeanDumper.dumpBeans(MBeanDumper.java:82) \n        at\norg.apache.catalina.manager.JMXProxyServlet.listBeans(JMXProxyServlet.java:172) \n        at\norg.apache.catalina.manager.JMXProxyServlet.doGet(JMXProxyServlet.java:121) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:621) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722) \n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305) \n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) \n        at\norg.apache.catalina.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:108) \n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) \n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) \n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224) \n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169) \n        at\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:581) \n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168) \n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98) \n        at\norg.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927) \n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) \n        at\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407) \n        at\norg.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:987) \n        at\norg.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:579) \n        at\norg.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:307) \n        at\njava.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) \n        at\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) \n        at java.lang.Thread.run(Thread.java:619) \nCaused by: java.lang.ClassCastException: $Proxy5 cannot be cast to\norg.apache.tomcat.jdbc.pool.PooledConnection \n        at\norg.apache.tomcat.jdbc.pool.DataSourceProxy.getPooledConnection(DataSourceProxy.java:156) \n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) \n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n        at java.lang.reflect.Method.invoke(Method.java:597) \n        at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:37) \n        at sun.reflect.GeneratedMethodAccessor31.invoke(Unknown Source) \n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n        at java.lang.reflect.Method.invoke(Method.java:597) \n        at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:244) \n        at\njavax.management.modelmbean.RequiredModelMBean.invokeMethod(RequiredModelMBean.java:1074) \n        ... 30 more \nMar 6, 2012 9:18:22 AM org.apache.catalina.mbeans.MBeanDumper dumpBeans \nSEVERE: Error getting attribute bean:name=eventingDataSource XAConnection \njavax.management.MBeanException: Exception thrown in RequiredModelMBean while\ntrying to invoke operation getXAConnection \n        at\njavax.management.modelmbean.RequiredModelMBean.invokeMethod(RequiredModelMBean.java:1101) \n        at\njavax.management.modelmbean.RequiredModelMBean.invoke(RequiredModelMBean.java:955) \n        at\norg.springframework.jmx.export.SpringModelMBean.invoke(SpringModelMBean.java:90) \n        at\njavax.management.modelmbean.RequiredModelMBean.getAttribute(RequiredModelMBean.java:1358) \n        at\norg.springframework.jmx.export.SpringModelMBean.getAttribute(SpringModelMBean.java:109) \n        at\ncom.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:666) \n        at\ncom.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638) \n        at\norg.apache.catalina.mbeans.MBeanDumper.dumpBeans(MBeanDumper.java:82) \n        at\norg.apache.catalina.manager.JMXProxyServlet.listBeans(JMXProxyServlet.java:172) \n        at\norg.apache.catalina.manager.JMXProxyServlet.doGet(JMXProxyServlet.java:121) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:621) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722) \n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305) \n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) \n        at\norg.apache.catalina.filters.SetCharacterEncodingFilter.doFilter(SetCharacterEncodingFilter.java:108) \n        at\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:243) \n        at\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210) \n        at\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:224) \n        at\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:169) \n        at\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:581) \n        at\norg.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:168) \n        at\norg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:98) \n        at\norg.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:927) \n        at\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118) \n        at\norg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407) \n        at\norg.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:987) \n        at\norg.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:579) \n        at\norg.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:307) \n        at\njava.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) \n        at\njava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) \n        at java.lang.Thread.run(Thread.java:619) \nCaused by: java.sql.SQLException: Connection from pool does not implement\njavax.sql.XAConnection \n        at\norg.apache.tomcat.jdbc.pool.DataSourceProxy.getXAConnection(DataSourceProxy.java:134) \n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) \n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) \n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n        at java.lang.reflect.Method.invoke(Method.java:597) \n        at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:37) \n        at sun.reflect.GeneratedMethodAccessor31.invoke(Unknown Source) \n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) \n        at java.lang.reflect.Method.invoke(Method.java:597) \n        at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:244) \n        at\njavax.management.modelmbean.RequiredModelMBean.invokeMethod(RequiredModelMBean.java:1074) \n        ... 30 more \n\n\nThe documentation mentioned the JMXProxy interface should remain the same\nduring this upgrade so we are a little confused with the exceptions.  To add a\nlittle more detail we have enabled all the new Manager roles while we test this\nissue. \n\n  <role rolename=\"admin-gui\"/>\n  <role rolename=\"admin-script\"/>\n\n  <role rolename=\"manager-gui\"/>\n  <role rolename=\"manager-script\"/>\n  <role rolename=\"manager-jmx\"/>\n  <role rolename=\"manager-status\"/>\n\n  <user username=\"xxxx\" password=\"xxxx\"\nroles=\"admin-gui,admin-script,manager-gui,manager-script,manager-jmx,manager-status\"/>\n\nAny ideas? \n\nThanks in advance, \n\nJonathan", "id": 154591, "time": "2012-03-06T23:33:46Z", "creator": "hodgesz@gmail.com", "creation_time": "2012-03-06T23:33:46Z", "is_private": false}, {"count": 1, "tags": [], "creator": "hodgesz@gmail.com", "attachment_id": null, "text": "This also appears on HP hardware with RHEL on both 32-bit and 64-bit Sun JVMs.\n\nWe are using the APR Native Tomcat library with a Executor thread pool.\n\nAs I mentioned before JMXProxy still returns the data correctly and the server appears to be unimpacted by the exceptions.  \n\nThey are really just a nuisance and red herrings for the server guys.", "id": 154592, "time": "2012-03-06T23:58:42Z", "bug_id": 52842, "creation_time": "2012-03-06T23:58:42Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 52842, "attachment_id": null, "text": "For most MBeans there's a descriptor defining how the MBean attributes relate to the members of the base objects. For the StandardThreadExecutor there was a bug in this descriptor, so that the MBean dumper tried to retrieve the boolean prestartminSpareThreads using a \"get\" getter instead of an \"is\" getter.\n\nThe attribute didn't exist in 6.0 so that's why there's no exception for 6.0.\n\nFixed now in trunk by r1297818 and 7.0 by r1297820.\nWill be part of TC 7.0.27.\n\nThanks for the detailed report.\n\nRegards,\n\nRainer", "id": 154596, "time": "2012-03-07T01:13:55Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2012-03-07T01:13:55Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 52842, "is_private": false, "text": "Will this fix the other following exception concerning objects exposed with the org.springframework.jmx.export.MBeanExporter?\n\n\n\nMar 6, 2012 9:18:20 AM org.apache.catalina.mbeans.MBeanDumper dumpBeans \nSEVERE: Error getting attribute bean:name=eventingDataSource PooledConnection \njavax.management.MBeanException: RuntimeException thrown in RequiredModelMBean\nwhile trying to invoke operation getPooledConnection \n        at\njavax.management.modelmbean.RequiredModelMBean.invokeMethod(RequiredModelMBean.java:1091) \n        at\njavax.management.modelmbean.RequiredModelMBean.invoke(RequiredModelMBean.java:955) \n        at\norg.springframework.jmx.export.SpringModelMBean.invoke(SpringModelMBean.java:90) \n        at\njavax.management.modelmbean.RequiredModelMBean.getAttribute(RequiredModelMBean.java:1358) \n        at\norg.springframework.jmx.export.SpringModelMBean.getAttribute(SpringModelMBean.java:109) \n        at\ncom.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:666) \n        at\ncom.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638) \n        at\norg.apache.catalina.mbeans.MBeanDumper.dumpBeans(MBeanDumper.java:82) \n        at\norg.apache.catalina.manager.JMXProxyServlet.listBeans(JMXProxyServlet.java:172) \n        at\norg.apache.catalina.manager.JMXProxyServlet.doGet(JMXProxyServlet.java:121) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:621) \n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)", "id": 154599, "time": "2012-03-07T02:17:27Z", "creator": "hodgesz@gmail.com", "creation_time": "2012-03-07T02:17:27Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 52842, "is_private": false, "text": "Since the Tomcat JDBC pool is part of Tomcat 7 is there a better way to view the pool properties through JMX than exposing through the Spring MBeanExporter?", "id": 154670, "time": "2012-03-08T02:17:35Z", "creator": "hodgesz@gmail.com", "creation_time": "2012-03-08T02:17:35Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "id": 154707, "time": "2012-03-08T19:17:39Z", "bug_id": 52842, "creation_time": "2012-03-08T19:17:39Z", "is_private": false, "text": "(In reply to comment #4)\n> Since the Tomcat JDBC pool is part of Tomcat 7 is there a better way to view\n> the pool properties through JMX than exposing through the Spring MBeanExporter?\n\nWhile the pool is properly part of Tomcat 7, I believe there's no reason it wasn't be used with Tomcat 6 (but I haven't tried it).\n\nI think you've mentioned using the JMXProxyServlet... is that an acceptable alternative?\n\nIf you have further questions, please use the users' list instead of BZ."}]