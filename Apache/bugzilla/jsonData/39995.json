[{"count": 0, "tags": [], "bug_id": 39995, "attachment_id": null, "id": 91026, "time": "2006-07-08T22:05:50Z", "creator": "bmaurer@andrew.cmu.edu", "creation_time": "2006-07-08T22:05:50Z", "is_private": false, "text": "Currently, the junit mode's most granular fork level is per testcase (eg, per\nclass). Having a per test method fork level would help in cases where high\nlevels of isolation are needed. A few use cases:\n\n1. I'm using ant to execute junit tests on students' code to determine part of\ntheir grade. Often, a student will fail one test case due to a timeout. However,\nthis failure causes ant to not get a score for any other method in that class.\nWhile junit4 has a \"timeout\" field on the test attribute, java lacks a safe way\nto forcefully abort a thread. As a result, a junit4 style timeout often causes\nother test cases to timeout (because the rogue thread is still running). Per\nmethod isolation would greatly ease this problem.\n\n2. Sometimes, one wants to know if test cases depend on being executed in a\nspecific order. Per method isolation would help.\n\n3. When debugging \"strange\" crashes, it often helps to isolate test runs. For\nexample, if there were an out of memory exception in test Y, it's quite possible\nthat test X actually has a leak, but didn't allocate quite enough memory to\ncause the exception. By running in isolation, it'd be easier to tack this down."}, {"count": 1, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "text": "IIRC junit has the proverbial wheel by the time a testcase is being run.  This\nis probably something for which no working solution will not be too ugly to live\nin Ant.  :)  -$0.02", "id": 91059, "time": "2006-07-10T13:45:29Z", "bug_id": 39995, "creation_time": "2006-07-10T13:45:29Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "jkf@apache.org", "text": "It also seems to me that this is more in the junit ballpark than in ant's\nballpark, junit isn't offering test method isolation functionality.\n\n1) In case a high level of isolation is needed, tests should be declared in\nseparate classes.\n\n2) Although testcases should not depend on each other, test runs should be\nrepeatable, this implies the order should be fixed.\n\n3) When debugging strange crashes within one testcase, I'd recommend to use a gui.\n\nSo unless you get one of your students to produce something that does this, \nand isn't too ugly to be included,\nand works with junit 3.8 and higher,\nand works with java 1.2 and higher,\nand has testcases,\nchances are very next to zero that something will happen.", "count": 2, "id": 91165, "time": "2006-07-11T20:52:15Z", "bug_id": 39995, "creation_time": "2006-07-11T20:52:15Z", "is_private": false}, {"id": 91166, "tags": [], "creator": "stevel@apache.org", "attachment_id": null, "count": 3, "text": "IDEA delivers this granularity; I dont know how.\n\nthe only way I know to get junit to run a single method in a test case is to\nimplement the static method \n\npublic static TestCase[] suite() \n\nand return an array of pre-instantiated TestCase objects. So maybe, just maybe,\nsomething like this could be done for ant, too. On Java1.5 you could dynamically\ncreate the subclass with the method, for java1.4 it would be trickier. ", "time": "2006-07-11T21:06:29Z", "bug_id": 39995, "creation_time": "2006-07-11T21:06:29Z", "is_private": false}]