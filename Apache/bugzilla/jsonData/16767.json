[{"count": 0, "tags": [], "bug_id": 16767, "attachment_id": null, "text": "The code below generates a 1-cell spreadsheet.  When I open it, the \"12345\" is\nleft-justified, like I would expect a string value to be.  But if I double-click\nthe cell and then click out of it without making any changes, it becomes the\ninteger 12345.\n\nIf I were creating the spreadsheet by hand I would have entered '12345 to force\nthe value to be a string, and the apostrophe would be there when I double-click\nthe cell.\n\n--Andy\n\n==========\nimport org.apache.poi.hssf.usermodel.*;\nimport java.io.*;\n\npublic class Test\n{\n    public static void main(String[] args)\n    {\n        try\n        {\n            doMain();\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n    }\n\n    private static void doMain() throws Exception\n    {\n        HSSFWorkbook wb = new HSSFWorkbook();\n        HSSFSheet sheet = wb.createSheet(\"test\");\n\n        HSSFRow row = sheet.createRow((short)0);\n        HSSFCell cell = row.createCell((short)0);\n\n        cell.setCellType(HSSFCell.CELL_TYPE_STRING);\n        cell.setCellValue(\"12345\");\n\n        FileOutputStream fos = new FileOutputStream(\"/tmp/test.xls\");\n        wb.write(fos);\n        fos.flush();\n        fos.close();\n    }\n}", "id": 30668, "time": "2003-02-04T17:26:45Z", "creator": "aglee@earthlink.net", "creation_time": "2003-02-04T17:26:45Z", "is_private": false}, {"count": 1, "tags": [], "creator": "aglee@earthlink.net", "attachment_id": 4724, "is_private": false, "id": 30669, "time": "2003-02-04T17:31:54Z", "bug_id": 16767, "creation_time": "2003-02-04T17:31:54Z", "text": "Created attachment 4724\nSpreadsheet generated by the code I submitted."}, {"count": 2, "tags": [], "bug_id": 16767, "attachment_id": 4725, "id": 30670, "creation_time": "2003-02-04T17:35:01Z", "time": "2003-02-04T17:35:01Z", "creator": "aglee@earthlink.net", "text": "Created attachment 4725\nHow I would have created the cell by hand.", "is_private": false}, {"text": "On a related note, if I do setCellValue(\"'abc'\") and double-click the cell, I\nlose the first apostrophe, so instead of staying\n\n    'abc'\n\nit becomes\n\n    abc'\n\n--Andy\n", "tags": [], "bug_id": 16767, "attachment_id": null, "count": 3, "id": 30690, "time": "2003-02-04T21:30:58Z", "creator": "aglee@earthlink.net", "creation_time": "2003-02-04T21:30:58Z", "is_private": false}, {"text": "This looks like a reasonably simple patch for you to submit to us...\n\nTo start look at the HSSFCell.setCellValue(String). My guess is that you will \nneed to add a ' to the string entered into the cell if the string you supply \nstarts with a '\n\nI dont believe that the first thing that you mention is a bug, it is normal \nExcel behaviour. If you want a String cell that cant be changed, then firstly \nfix the issue mentioned above and then write cell.setCellValue(\"'12345\") in \nyour code.\n\nJason", "tags": [], "creator": "jheight@apache.org", "is_private": false, "count": 4, "id": 30692, "time": "2003-02-04T21:44:31Z", "bug_id": 16767, "creation_time": "2003-02-04T21:44:31Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 16767, "is_private": false, "id": 30693, "creation_time": "2003-02-04T22:10:54Z", "time": "2003-02-04T22:10:54Z", "creator": "aglee@earthlink.net", "text": "The problem with prepending an extra ' is that it will show up in Excel.  For\nexample, setCellValue(\"''abc'\") causes this to appear in Excel:\n\n    ''abc'\n\nWhen I double-click the cell and then exit it without changing it, the display\nchanges to...\n\n    'abc'\n\n...and thereafter behaves the way I want.  But of course I shouldn't have to\ndouble-click every cell to make it appear correctly.  As for the original\nproblem, if I use '12345 then it starts out displayed as\n\n    '12345\n\n(which is not the intended effect) and only becomes\n\n    12345\n\nafter the double-click.\n\nIt seems to me we need to know how *Excel* decides to prepend the ', which it\nshould only do when I double-click the cell for editing.\n\n--Andy\n", "attachment_id": null}, {"count": 6, "tags": [], "creator": "jheight@apache.org", "attachment_id": null, "text": "Ok Andy,\n\nSeems like you have a good understanding of the combinations. \n\nDo you feel up to creating a patch? If so can I suggest that you use the \nbiffviewer utility to display the file from POI before opening in excel. Then \nopen the file in excel and produce the desired behaviour and then compare the \noutputs. It is likely that the difference you are interested in will be in \neither in the SST record or the LABELSST.\n\nOR, if you are not confident in producing a patch then let me know and i may \nhave a look at it.\n\nJason", "id": 30695, "time": "2003-02-04T22:21:55Z", "bug_id": 16767, "creation_time": "2003-02-04T22:21:55Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 16767, "attachment_id": null, "id": 30704, "creation_time": "2003-02-04T23:54:21Z", "time": "2003-02-04T23:54:21Z", "creator": "aglee@earthlink.net", "text": "I'd be glad to take a shot at it -- checking out the source tree now.  I've\nnever submitted a patch before, but the instructions look quite straightforward.\n I assume there is no great hurry.\n\n--Andy\n", "is_private": false}, {"count": 8, "tags": [], "bug_id": 16767, "text": "I wonder if the thing has a dataformat of NOT-general if this still ahppens. \nThis is too minor to hold up 2.0", "id": 41338, "time": "2003-07-24T15:39:06Z", "creator": "poi-support@buni.org", "creation_time": "2003-07-24T15:39:06Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 16767, "attachment_id": null, "id": 41369, "time": "2003-07-24T16:10:12Z", "creator": "slaubach@apache.org", "creation_time": "2003-07-24T16:10:12Z", "is_private": false, "text": "Andy O. is right.  This is a little gotcha with excel.  The default data format \nis general which looks at the value and tries to determine what it is.  I \ndoesn't default to what the cell type is (part of the reason is there is not \ndirect way through the interface to do that).  The solution is to set the data \nformat for that particular cell to text which then makes it come out properly.  \n\nSetting the format to text also fixes the quoting problem.  This comes about \nbecause you put a single ' in front of a number to tell excel that it is text \nand not to treat it as a number.\n\nThis really isn't a bug as much as a feature of excel."}]