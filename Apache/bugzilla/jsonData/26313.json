[{"count": 0, "attachment_id": null, "bug_id": 26313, "text": "Apache (1.3.x and 2.0.x) answers HTTP/0.9 Request with HTTP/1.1 Response.\nAccording to RFC 1945 it should return a HTTP/0.9 Response. Any request without\na protocoll-version should be treaten as HTTP/0.9.\n\nSo\nGET / HTTP/0.9\nshould return the document and not:\n200 OK HTTP/1.1", "id": 50884, "time": "2004-01-21T15:45:34Z", "creator": "et.apache.15.et@spamgourmet.com", "creation_time": "2004-01-21T15:45:34Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "trawick@apache.org", "text": "An HTTP/0.9 request would be simply:\n\nGET /\n\nFrom RFC 1945, which describes HTTP/1.0:\n\n\"The version of an HTTP message is indicated by an HTTP-Version field\n   in the first line of the message. If the protocol version is not\n   specified, the recipient must assume that the message is in the\n   simple HTTP/0.9 format.\n\n       HTTP-Version   = \"HTTP\" \"/\" 1*DIGIT \".\" 1*DIGIT\n\n   Note that the major and minor numbers should be treated as separate\n   integers and that each may be incremented higher than a single digit.\n   Thus, HTTP/2.4 is a lower version than HTTP/2.13, which in turn is\n   lower than HTTP/12.3. Leading zeros should be ignored by recipients\n   and never generated by senders.\n\n   This document defines both the 0.9 and 1.0 versions of the HTTP\n   protocol. Applications sending Full-Request or Full-Response\n   messages, as defined by this specification, must include an HTTP-\n   Version of \"HTTP/1.0\"\n\"\n\nSee that last sentence: As of HTTP/1.0 spec, if the full request message is sent\nthen the HTTP version must be \"HTTP/1.0\".  \"HTTP/0.9\" is not valid for a 0.9\nrequest.\n\nIf you think Apache is responding inappropriately to a request which is not HTTP\n0.9 but (presumably) an unrecognized HTTP level, that is a different issue.\n", "id": 50889, "time": "2004-01-21T15:54:55Z", "bug_id": 26313, "creation_time": "2004-01-21T15:54:55Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "et.apache.15.et@spamgourmet.com", "is_private": false, "text": "ACK to the first part, but the \"different issue\" remains. See:\n\nRequest:\nGET / HTTP/1.7\nhost:www.example.com\n\nor (with equivalent response)\nGET / HTTP/0.2\nhost:www.example.com\n\nResponse:\nHTTP/1.1 200 OK\nDate: Wed, 21 Jan 2004 17:20:42 GMT\nServer: Apache/1.3.27 (Unix)  (Red-Hat/Linux)\nLast-Modified: Wed, 08 Jan 2003 23:11:55 GMT\nETag: \"3f80f-1b6-3e1cb03b\"\nAccept-Ranges: bytes\nContent-Length: 438\nConnection: close\nContent-Type: text/html\n\n<HTML>\n<HEAD>\n  <TITLE>Example Web Page</TITLE>\n</HEAD>\n<body>\n<p>You have reached this web page by typing &quot;example.com&quot;,\n&quot;example.net&quot;,\n  or &quot;example.org&quot; into your web browser.</p>\n<p>These domain names are reserved for use in documentation and are not availabl\ne\n  for registration. See <a href=\"http://www.rfc-editor.org/rfc/rfc2606.txt\">RFC\n  2606</a>, Section 3.</p>\n</BODY>\n</HTML>\n\n\n", "id": 50893, "time": "2004-01-21T16:31:42Z", "bug_id": 26313, "creation_time": "2004-01-21T16:31:42Z", "attachment_id": null}, {"text": "(The response to the HTTP/1.7 Request is okay, but not the one to the 0.2-Request.)\n", "tags": [], "bug_id": 26313, "attachment_id": null, "count": 3, "id": 50894, "time": "2004-01-21T16:40:56Z", "creator": "et.apache.15.et@spamgourmet.com", "creation_time": "2004-01-21T16:40:56Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 26313, "attachment_id": null, "text": "Why not? It's invalid and apache is lenient enough to assume HTTP/1.0.", "id": 50896, "time": "2004-01-21T17:16:43Z", "creator": "nd@perlig.de", "creation_time": "2004-01-21T17:16:43Z", "is_private": false}, {"text": "An invalid request should return an error message as response. Assuming is M$'s \njob. And turns their products into very strange stuff behaving unpredictable ;-)\n", "tags": [], "creator": "et.apache.15.et@spamgourmet.com", "is_private": false, "count": 5, "id": 51171, "time": "2004-01-26T07:29:58Z", "bug_id": 26313, "creation_time": "2004-01-26T07:29:58Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 26313, "attachment_id": null, "text": "RFC 2616, 19.3 says, HTTP application SHOULD be tolerant. quote:\n\n   Although this document specifies the requirements for the generation\n   of HTTP/1.1 messages, not all applications will be correct in their\n   implementation. We therefore recommend that operational applications\n   be tolerant of deviations whenever those deviations can be\n   interpreted unambiguously.\n\n   Clients SHOULD be tolerant in parsing the Status-Line and servers\n   tolerant when parsing the Request-Line. [...]\n\nBeing tolerant when acepting things _if_ it's safe to assume some fallback (and\nit's safe here I think), is neither a mistake nor a thing owned by microsoft.\nIt's a basic principle, especially of networking applications.", "id": 51172, "time": "2004-01-26T07:50:27Z", "creator": "nd@perlig.de", "creation_time": "2004-01-26T07:50:27Z", "is_private": false}]