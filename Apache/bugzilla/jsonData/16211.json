[{"count": 0, "text": "Hi,\n\nI'm running a JSP application, and have got some problems with the Tomcat's\nclassloader.\n\nMy application uses Xerces 2.0.1 (located on the application's WEB-INF/lib\ndirectory), and Tomcat seems to use Xerces 2.2.0 (located on Tomcat's\ncommon/endorsed directory). The exception I get when try to do some DOM\nserialization using Xerces is:\n\n--\njava.lang.NoSuchMethodError\n        at org.apache.xml.serialize.XMLSerializer.reset(XMLSerializer.java:1516)\n        at\norg.apache.xml.serialize.BaseMarkupSerializer.setOutputCharStream(BaseMarkupSerializer.java:335)\n        at org.apache.xml.serialize.XMLSerializer.<init>(XMLSerializer.java:207)\n        at com.sdspb.messaging.client.XPathWrapper.toXML(Unknown Source)\n        at com.sdspb.messaging.client.XPathWrapper.toXML(Unknown Source)\n        at com.sdspb.messaging.client.XPathWrapper.writeExternal(Unknown Source)\n        at java.io.ObjectOutputStream.outputObject(ObjectOutputStream.java:1167)\n        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:361)\n        at\njava.io.ObjectOutputStream.outputClassFields(ObjectOutputStream.java:1822)\n        at\njava.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:475)\n        at java.io.ObjectOutputStream.outputObject(ObjectOutputStream.java:1209)\n        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:361)\n        at\njava.io.ObjectOutputStream.outputClassFields(ObjectOutputStream.java:1822)\n        at\njava.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:475)\n        at java.io.ObjectOutputStream.outputObject(ObjectOutputStream.java:1209)\n        at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:361)\n        at sun.rmi.server.UnicastRef.marshalValue(UnicastRef.java:263)\n        at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:101)\n        at com.sdspb.messaging.rmi.server.RMIMessagingServer_Stub.send(Unknown\nSource)\n        at com.sdspb.messaging.rmi.client.RMIMessaging.send(Unknown Source)\n        at com.sdspb.messaging.presentation.MessageDispatcher.run(Unknown Source)\n--\n\nIt seems that the classloader is trying to use the wrong Xerces classes, not\napplying the precedence defined for Tomcat, which says that the application\nlocal libraries are searched first:\n\n    * /WEB-INF/classes of your web application\n    * /WEB-INF/lib/*.jar of your web application\n    * Bootstrap classes of your JVM\n    * System class loader classses (described above)\n    * $CATALINA_HOME/common/classes\n    * $CATALINA_HOME/common/endorsed/*.jar\n    * $CATALINA_HOME/common/lib/*.jar\n    * $CATALINA_HOME/shared/classes\n    * $CATALINA_HOME/shared/lib/*.jar\n\nI've tried to move the endorsed Xerces libraries to the Tomcat's \"server/lib\"\ndirectory, to make sure only the Tomcat internals use the Xerces 2.2.0, but then\nI get the following startup exception:\n\n--\n2003-01-17 11:36:23 ContextConfig[/contingency] Parse error in default web.xml\njava.lang.NullPointerException\n    at org.apache.commons.digester.Digester.getXMLReader(Digester.java:892)\n    at org.apache.commons.digester.Digester.parse(Digester.java:1495)\n    at\norg.apache.catalina.startup.ContextConfig.defaultConfig(ContextConfig.java:548)\n    at org.apache.catalina.startup.ContextConfig.start(ContextConfig.java:638)\n    at\norg.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:243)\n    at\norg.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:166)\n    at org.apache.catalina.core.StandardContext.start(StandardContext.java:3567)\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1188)\n    at org.apache.catalina.core.StandardHost.start(StandardHost.java:738)\n    at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1188)\n    at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:347)\n    at org.apache.catalina.core.StandardService.start(StandardService.java:497)\n    at org.apache.catalina.core.StandardServer.start(StandardServer.java:2189)\n    at org.apache.catalina.startup.Catalina.start(Catalina.java:512)\n    at org.apache.catalina.startup.Catalina.execute(Catalina.java:400)\n    at org.apache.catalina.startup.Catalina.process(Catalina.java:180)\n    at java.lang.reflect.Method.invoke(Native Method)\n    at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:203)\n--\n\nFinally, I've replaced the Xerces 2.2.0 libs by the Xerces 2.0.1 libs, in the\n\"common/endorsed\" directory, and it all worked fine. But this does not look like\nthe best solution, as it may not be applicable to all cases.\n\nThanks!\n\n[]'s\nTomy Inhauser", "bug_id": 16211, "attachment_id": null, "id": 29614, "time": "2003-01-17T16:10:39Z", "creator": "tomy@softwaredesign.com.br", "creation_time": "2003-01-17T16:10:39Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 16211, "attachment_id": null, "id": 29615, "time": "2003-01-17T16:17:29Z", "creator": "jfarcand@apache.org", "creation_time": "2003-01-17T16:17:29Z", "is_private": false, "text": "This is the proper behaviour. You cannot replace the endorsed classes. You need\nto change the Xerces version under endorsed dir if you want to use Xerces 2.0.1\n(like you do). See http://java.sun.com/j2se/1.4/docs/guide/standards/ for more\ninformation. \n\nPlease next time ask the question first on tomcat-user@jakarta.apache.org\n\n-- Jeanfrancois"}, {"count": 2, "tags": [], "creator": "tomy@softwaredesign.com.br", "attachment_id": null, "id": 29621, "time": "2003-01-17T17:37:16Z", "bug_id": 16211, "creation_time": "2003-01-17T17:37:16Z", "is_private": false, "text": "Forgot to say: I'm using JDK 1.3.1_06\n\n\"This is the proper behaviour.\"\n\nSounds like a contradiction to me, as Tomcat docs says that the WEB-INF/lib\nlocation is searched before the Tomcat's endorsed dir, and it seems (see the\nNoSuchMethodError stack trace) that this is not the actual behaviour.\n\nThis is not exactly a new problem: I don't care about the endorsed or internal\nlibraries of Tomcat, since my application carries all needed jars on it's\nWEB-INF/lib directory.\n\n\"You need to change the Xerces version under endorsed dir if you want to use\nXerces 2.0.1 (like you do)\"\n\nAnd what if I've used a Xerces version not compatible with Tomcat? This would\nnot work, right? This way, I need to tie all my running applications to a single\nXerces version! This is not always desired...\n"}, {"count": 3, "text": "Well, let try to clarify a little bit more. From the Servlet specs:\n\nSRV.9.7.2 Web Application Classloader\nThe classloader that a container uses to load a servlet in a WAR must allow the\ndeveloper to load any resources contained in library JARs within the WAR\nfollowing normal J2SE semantics using getResource. It must not allow the WAR to\noverride J2SE or Java servlet API classes. It is further recommended that the\nloader not allow servlets in the   WAR access to the web container\u2019s\nimplementation classes. \n\nXerces package contains file that are included with J2SE (org.w3c.*) and also\ncontain JAXP interface.\n\nThats's why we are bloking the loading of Xerces localed under /lib.\n\nHope that clarify better than the first message :-)\n\n-- Jeanfrancois", "bug_id": 16211, "attachment_id": null, "id": 29625, "time": "2003-01-17T18:19:22Z", "creator": "jfarcand@apache.org", "creation_time": "2003-01-17T18:19:22Z", "tags": [], "is_private": false}, {"count": 4, "text": "I would never imagine that Xerces is actually blocked from loading, since I'm\nrunning, as I said, on JDK 1.3.1_06... :-)))\n\nBut, I have a few more words:\n\n1) I think Tomcat docs must be updated then, because it contains the following\nwrong explanation (Classloader HOW-TO -> Class loader definitions -> Common):\n\n\"xerces.jar - The XML parser that is visible by default to Tomcat internal\nclasses and to web applications. This can be overridden, for a particular web\napplication, by including your desired parser in /WEB-INF/lib.\"\n\n2) So, it's just impossible to use a parser different from that used by the\nTomcat internals? (is that Xerces 2.2.0?) I can use a parser only if it's\ncompatible with Tomcat?\n\nI hope I'm wrong...\n", "bug_id": 16211, "attachment_id": null, "id": 29629, "time": "2003-01-17T19:24:49Z", "creator": "tomy@softwaredesign.com.br", "creation_time": "2003-01-17T19:24:49Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "creator": "geju@inasys.de", "attachment_id": null, "text": "Hello,\nit is stated that the classloader must not allow the WAR to\noverride J2SE or Java servlet API classes. \n\nDoes the class org.apache.xml.serialize.XMLSerializer \ncausing the NoSuchMethodError belong to J2SE (JDK 1.3 or 1.4) \nor Java servlet API? Is the Xerces implementation \nan Endorsed Standards API?\n\nTo my knowlegde, Xerces is rather an implementation of the org.w3c.* and JAXP\ninterfaces.\n\nThus, I would expect that the class is loaded from WEB-INF/lib if present.\nBy the way, what happens with commons-collections if I have a newer/older \nversion in WEB-INF/lib?\n \nBest regards\nGeorg Juttner", "id": 30327, "time": "2003-01-30T09:43:46Z", "bug_id": 16211, "creation_time": "2003-01-30T09:43:46Z", "is_private": false}]