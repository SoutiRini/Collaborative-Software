[{"count": 0, "tags": [], "bug_id": 15513, "text": "I have Tomcat 4.0.2 Final runing through IIS on a server with 1gb of physical \nmemory. (And Tomcat 4.1.12 on my test box)\n\nOn the live site, after running for a while (1hr to 1 day)  I start to get \nerrors:\n-----\njava.lang.OutOfMemoryError\n\t<<no stack trace available>>\nAND\norg.apache.jasper.JasperException: Unable to compile class for JSP The \ncompiler has run out of memory.  Consider using the \"-J-mx&lt;number&gt;\" \ncommand line option to increase the maximum heap size.\n------\n\nfollowing the suggestion in the second error, I have set \nCATALINA_OPTS=\"-Xmx700m -Xms700m\"\n\nBy setting low values, I can get the system to error sooner, but still get the \nout of memory errors even with those high values.\n\nWhen tomcat starts, java.exe promptly goes up to about 100mb, and never goes \nover about 120mb. (in Windows Task Manager)\n\nDoes anyone have an idea why I still get OutOfMemoryError after setting -Xmx \nto 700MB? (and why java.exe never goes above 120mb?  Shouldn\u2019t it be over \n700mb?)\n\nThanks!", "id": 28035, "time": "2002-12-19T03:02:55Z", "creator": "david@athletic.net", "creation_time": "2002-12-19T03:02:55Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "The memory size started working.  We are still having problems, but it has to \ndo with an unfound memory leek.", "is_private": false, "id": 32417, "creator": "david@athletic.net", "time": "2003-03-04T18:19:41Z", "bug_id": 15513, "creation_time": "2003-03-04T18:19:41Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 15513, "attachment_id": null, "text": "David this bug was closed because you said \"The memory size started working.\". \nI'll bet you were running TomCat as a service and you started running it from \na shell, cmd or desktop batch file. You inadvertently stumbled on a work \naround.\n\nIf would like to reopen this and have it fixed.\n\nWe have a customer who is having the same problem and after a lot of \ninvestigation we discovered that TomCat has a bug when running as a service \nunder windows. The bug is it ignores the evironment variables set as \ncatalina.opt or catalina.bat. Instead it uses the default stack and heap size \nfor the JVM. You can set\n-Xms<size>        set initial Java heap size\n-Xmx<size>        set maximum Java heap size\n-Xss<size>        set java thread stack size\nuntil your blue in the face and the JVM will never get close to that size. It \nwill consistently throw out of memory errors when its 80 ~100 megabytes.\n\nSolution number 1:\nDon't run it as a service. Run it from a shell/command.\n\nSolution number 2:\nGrub through the @#@$! registry till you find the service entry for TomCat. \nFigure out which parameter is used to set Java heap and stack size. Edit the \nnumbers with REGEDIT. Sorry but I don't remember the registry key entries off \nthe top of my head.\n\nNota Bene:\nThis may not really be a TomCat bug. This could be a bug in the @#@$! \ninstaller that our customer used to set TomCat up as a service. Cleanest test \nis run TomCat directly from the desktop and I'll bet the problem goes away.\n", "id": 32522, "time": "2003-03-06T02:22:18Z", "creator": "ccervo@applix.com", "creation_time": "2003-03-06T02:22:18Z", "is_private": false}, {"text": "Please use the tomcat-user list to debug.", "tags": [], "bug_id": 15513, "is_private": false, "count": 3, "id": 38229, "time": "2003-06-03T01:28:49Z", "creator": "funkman@joedog.org", "creation_time": "2003-06-03T01:28:49Z", "attachment_id": null}]