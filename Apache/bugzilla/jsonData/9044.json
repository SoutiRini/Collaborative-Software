[{"count": 0, "attachment_id": null, "creator": "ssilvert@getthere.com", "text": "If I cache a ServletRequest inside a Filter, then pass it down the chain in a \nsubsequent ServletRequest, the cached request will not make it down the chain.  \nThe servlet will recieve the second ServletRequest instead of the cached one.\n\nThe reason I want to do this is to implement a \"Please wait\" function for long-\nrunning ServletRequests.  \n\nI have a simple test application that demonstrates the bug. Please email me and \nI can send you the war file and source code.\n\nI have tried this on Weblogic 7.0 and it works fine on that platform.\n\nThanks for looking at this.\n\nStan Silvert\nssilvert@getthere.com", "id": 16023, "time": "2002-05-13T18:31:24Z", "bug_id": 9044, "creation_time": "2002-05-13T18:31:24Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 9044, "is_private": false, "id": 16024, "time": "2002-05-13T18:36:56Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2002-05-13T18:36:56Z", "tags": [], "text": "Caching a request and re-using it later violates Section 4.10 of the 2.3 spec,\nwhich says that a particular request object is valid only with the scope of a\nservlet's service() method (if you're not using filters) or doFilter() method\n(if you are).  The fact that it works on a particular container is not relevant\n-- it is guaranteed to cause you grief on any container that recycles request\ninstances (as Tomcat does).\n"}]