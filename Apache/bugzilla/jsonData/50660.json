[{"count": 0, "tags": [], "creator": "dmikusa@gopivotal.com", "text": "If an invalid validationQuery is specified, the SQL Exception is logged at the DEBUG log level.\n\nExample:\n\n2011-01-25 18:32:56,139 DEBUG [org.apache.tomcat.jdbc.pool.PooledConnection] Unable to validate object:\ncom.ibm.db2.jcc.c.SqlException: DB2 SQL error: SQLCODE: -104, SQLSTATE: 42601, SQLERRMC: END-OF-STATEMENT;SELECT 1;<table_expr>\n\nSince an invalid validationQuery can cause problems with the data source, it would be nice to see this message logged at a different log level, such as WARN or ERROR.\n\nIf that would create too much noise then I would suggest instead to add a check during the initialization of the data source that would test the validation query.  Then this single check could log at WARN or ERROR.\n\nThanks\n\nDan", "id": 143662, "time": "2011-01-26T10:29:22Z", "bug_id": 50660, "creation_time": "2011-01-26T10:29:22Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 50660, "attachment_id": null, "id": 143672, "time": "2011-01-26T12:05:16Z", "creator": "fhanik@apache.org", "creation_time": "2011-01-26T12:05:16Z", "is_private": false, "text": "hi Dan, this is a tricky one. \nCause, we'd also be logging a lot of false positive. Connections that have gone stale and simply need to be reconnected. \nSo WARN log level would not be good in that case. \nHowever, I agree that initially you would want to know that the query is invalid."}, {"count": 2, "tags": [], "bug_id": 50660, "text": "Created attachment 26553\nproposed interceptor", "id": 143674, "time": "2011-01-26T12:48:21Z", "creator": "dmikusa@gopivotal.com", "creation_time": "2011-01-26T12:48:21Z", "is_private": false, "attachment_id": 26553}, {"count": 3, "tags": [], "bug_id": 50660, "text": "What about adding an Interceptor to do the validation?  The attached interceptor would take the validation query and run it when the pool is created.  If there is a problem with the query it would report just that one time.\n\nDan", "id": 143675, "time": "2011-01-26T12:49:46Z", "creator": "dmikusa@gopivotal.com", "creation_time": "2011-01-26T12:49:46Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "fhanik@apache.org", "text": "If the connection to the database fails here, the interceptor will print out validationQuery has failed. and that is not correct\nI think the pool itself needs to do some validations upon startup\n\n1. validation query\n2. transaction isolation level\n3. schema/catalog\n4. default read only\n\nthis is a valid bug, just needs to encompass the correct solution\n\nbest\nFilip", "id": 143676, "time": "2011-01-26T13:23:24Z", "bug_id": 50660, "creation_time": "2011-01-26T13:23:24Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "fhanik@apache.org", "attachment_id": null, "id": 155108, "time": "2012-03-20T13:48:03Z", "bug_id": 50660, "creation_time": "2012-03-20T13:48:03Z", "is_private": false, "text": "(In reply to comment #3)\n> What about adding an Interceptor to do the validation?  The attached\n> interceptor would take the validation query and run it when the pool is\n> created.  If there is a problem with the query it would report just that one\n> time.\n> \n> Dan\n\nI'll add in logging when the pool starts. Right now, if initializing the pool fails, it sends a JMX notification but doesn't log anything.  \n\nlooking in the code it does\n            if (log.isDebugEnabled())\n                log.debug(\"Unable to validate object:\",ignore);\n\nSo that should already be taken care of"}]