[{"count": 0, "tags": [], "bug_id": 43228, "attachment_id": null, "is_private": false, "id": 107335, "time": "2007-08-28T05:34:14Z", "creator": "kanekotky@gmail.com", "creation_time": "2007-08-28T05:34:14Z", "text": "Hi,\n\nI noticed that StandardWrapper#countAllocated isn't thread-safe.\nSo, StandardWrapper#unload cannot finish until nRetries will be 21(40 seconds)\nbecause countAllocated won't be 0.\n\nI made a patch.\n\nRegards,"}, {"count": 1, "tags": [], "bug_id": 43228, "text": "Created attachment 20720\npatch against tc6.0.x", "id": 107336, "time": "2007-08-28T05:35:31Z", "creator": "kanekotky@gmail.com", "creation_time": "2007-08-28T05:35:31Z", "is_private": false, "attachment_id": 20720}, {"count": 2, "tags": [], "text": "> (40 seconds)\n\nI'm sorry. It takes 2 seconds per Wrapper.\nIf Tomcat has 100-Wrappers and their countAllocated are incorrect, it takes 200\nseconds to shutdown them.\n\nRegards,", "is_private": false, "bug_id": 43228, "id": 107337, "time": "2007-08-28T05:48:09Z", "creator": "kanekotky@gmail.com", "creation_time": "2007-08-28T05:48:09Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "As usual, I am not in favor of applying this sort of patch, given the possible\nhigh synchronization vs the actual severity of the issue. Feel free to continue\nusing your patch if it works for you.", "is_private": false, "id": 107340, "creator": "remm@apache.org", "time": "2007-08-28T06:03:42Z", "bug_id": 43228, "creation_time": "2007-08-28T06:03:42Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 43228, "attachment_id": null, "id": 107388, "time": "2007-08-29T05:22:34Z", "creator": "kanekotky@gmail.com", "creation_time": "2007-08-29T05:22:34Z", "is_private": false, "text": "Hi Remy,\nthanks for response.\n\nI have respects for your carefulness about the performance.\n\nIMO, AtomicInteger doesn't have synchronization problem and it's overhead is\nreally low.\nI did performance benchmarks using Apache Bench between original and my patch .\n\nHere are the summary of results.\n\nRequests per second:\noriginal  5743.66 [#/sec] (mean)\npatch     5748.83 [#/sec] (mean)\n\n99% Percentage of the requests served within a certain time (ms)\noriginal  96\npatch     80\n\nAverage CPU Usage\noriginal 96.35%\npatch    96.25%\n\nIs this reasonable? How do you think? \n\nBTW, the actual severity is that we cannot shutdown Tomcat quickly.\nWe can avoid this problem to set the StandardContext#unloadDelay as 0.\nIf this issue is WONTFIX, please note it on document instead."}, {"count": 5, "tags": [], "text": "Created attachment 20725\nbenchmark results", "attachment_id": 20725, "bug_id": 43228, "id": 107389, "time": "2007-08-29T05:23:30Z", "creator": "kanekotky@gmail.com", "creation_time": "2007-08-29T05:23:30Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 43228, "attachment_id": 20726, "id": 107390, "time": "2007-08-29T05:25:52Z", "creator": "kanekotky@gmail.com", "creation_time": "2007-08-29T05:25:52Z", "is_private": false, "text": "Created attachment 20726\npatch for document if needed"}, {"count": 7, "attachment_id": null, "bug_id": 43228, "is_private": false, "id": 107393, "time": "2007-08-29T07:15:07Z", "creator": "remm@apache.org", "creation_time": "2007-08-29T07:15:07Z", "tags": [], "text": "The HelloWorldExample has a significant overhead, unfortunately. As I said\npreviously, I don't think this patch is needed, sorry, especially since few\npeople see this as an issue. Please do not reopen the report, thanks."}, {"count": 8, "tags": [], "bug_id": 43228, "attachment_id": 20738, "text": "Created attachment 20738\nbenchmark results with a simpler servlet\n\nHi Remy,\n\nDid you mean that a significant overhead of HelloExampleServlet is\nResourceBundle.getBundle() or concatenating strings?\n\nAnyway I did tests with a simpler Servlet.\n\ntestname, rps, 99% tile, cpu\noriginal, 6777.25 [#/sec], 75 [ms], 86.90 [%]\npatch,\t  6873.97 [#/sec], 60 [ms], 86.29 [%]\n\nAnd I did same tests with Keep-Alive.\n\ntestname, rps, 99% tile, cpu \noriginal, 10137.90 [#/sec], 60 [ms], 97.32 [%]\npatch,\t  10130.51 [#/sec], 63 [ms], 96.46 [%]\n\nAs a result, I could not see the overhead of using AtomicInteger on Tomcat.\n\nHowever, this issue is not so serious problem because countAllocated is not\nused on other places and we have already gotten a workalound, so I consent this\nissue is WONTFIX.\n\nI will never reopen it. :-) thanks a lot.", "id": 107458, "time": "2007-08-29T22:09:59Z", "creator": "kanekotky@gmail.com", "creation_time": "2007-08-29T22:09:59Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 43228, "attachment_id": null, "is_private": false, "id": 107499, "time": "2007-08-30T16:17:39Z", "creator": "remm@apache.org", "creation_time": "2007-08-30T16:17:39Z", "text": "Yes, HelloWorldExample does a number of expensive operations.\n\nOTOH, the shutdown strategy is not optimal at all, and has a lot of ways to go\nwrong. It should use the time where the connectors (or the webapp) were\nshutdown, rather that an individual per servlet time."}, {"count": 10, "tags": [], "creator": "kanekotky@gmail.com", "attachment_id": null, "is_private": false, "id": 119726, "time": "2008-08-12T09:32:44Z", "bug_id": 43228, "creation_time": "2008-08-12T09:32:44Z", "text": "*** Bug 45608 has been marked as a duplicate of this bug. ***"}, {"count": 11, "tags": [], "bug_id": 43228, "attachment_id": null, "id": 124668, "time": "2009-02-04T17:08:44Z", "creator": "qiyaoltc@gmail.com", "creation_time": "2009-02-04T17:08:44Z", "is_private": false, "text": "I am the reporter of Bug 45608.  We use MTRAT(http://www.alphaworks.ibm.com/tech/mtrat) to find race conditions in Java program, and Bug 45608 is found in this way."}]