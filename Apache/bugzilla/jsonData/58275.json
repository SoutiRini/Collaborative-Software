[{"count": 0, "tags": [], "bug_id": 58275, "attachment_id": null, "id": 184712, "time": "2015-08-23T15:11:48Z", "creator": "ajponnap@in.ibm.com", "creation_time": "2015-08-23T15:11:48Z", "is_private": false, "text": "Regarding IBM JRE ciphersuites, below IBM documentation says that \n\nhttps://www-01.ibm.com/support/knowledgecenter/SSYKE2_7.0.0/com.ibm.java.security.component.71.doc/security-component/jsse2Docs/ciphersuites.html\n\n+++++++\nNote: In the following list, the string \"SSL\" is interchangeable with \"TLS\" and vice versa. For example, where SSL_RSA_WITH_AES_128_CBC_SHA is specified, TLS_RSA_WITH_AES_128_CBC_SHA also applies.\n++++++++\n\n\nHowever if I set TLS prefixed ciphers using the setCiphers method of org.apache.coyote.http11.Http11Protocol object, it is not taking effect. I see the following bugzilla thread which says \n\nhttps://bz.apache.org/bugzilla/show_bug.cgi?id=57718\n\n+++\nIBM uses SSL_XXX for all it ciphers although it will accept TLS_XXX. When Tomcat compares the available ciphers against the requested ciphers it can't tell that SSL_XXX and TLS_XXX are the same.\n+++++++++++\n\nMy request here is to see we have some option to avoid this check of cipher list against the available ciphers?. If not, can we have such option, as a JVM parameter or something, so that we can make use of it to allow TLS prefixed ciphers with IBM JRE?"}, {"count": 1, "tags": [], "bug_id": 58275, "attachment_id": null, "text": "FYI that I am working on IBM Integration Bus product and we have our customers finding difficulty in setting TLS prefixed ciphers. IBM Integration Bus internally uses tomcat for all its listeners. So is my request to see if we have any such option there by we can avoid the rejection of TLS prefixed ciphers", "id": 184713, "time": "2015-08-23T15:16:29Z", "creator": "ajponnap@in.ibm.com", "creation_time": "2015-08-23T15:16:29Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 58275, "attachment_id": null, "id": 184729, "time": "2015-08-24T15:26:56Z", "creator": "markt@apache.org", "creation_time": "2015-08-24T15:26:56Z", "is_private": false, "text": "If the cipher suites are specified using the SSL_xxx form of the name rather than the TLS_xxx form does it work then?\n\nMy current thinking is that we can detect if we are running on an IBM JVM and then add the SSL_xxx form of the cipher after the TLS_xxx form in the list of ciphers so both are present."}, {"count": 3, "tags": [], "bug_id": 58275, "attachment_id": null, "text": "Yes, if cipher suites are specified using SSL_xxx then it works perfectly. However, customers who are familiar with Oracle JRE are tend to specify TLS prefix:P. So is the need to address this issue\n\nI have done a similar kind of patch for the time being where if we are running on IBM JRE, replace all TLS prefix with SSL prefix before calling setCiphers()\n\nHowever the check for a specific JRE provider and then renaming the actual cipher names doesnt sound right to me.  So is this my request to get your thoughts to have a  more generalized solution", "id": 184732, "time": "2015-08-24T16:21:32Z", "creator": "ajponnap@in.ibm.com", "creation_time": "2015-08-24T16:21:32Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 58275, "attachment_id": null, "text": "I think the ideal solution would be if IBM reported both the TLS_XXX and SSL_XXX forms of the cipher suite names (and any other support aliases) when asked which cipher suites it supports. Not doing this makes input validation rather tricky.\n\nDo you know anyone who works for IBM that has had a problem in this area that could advocate within IBM for the change? ;)\n\nI've added a work-around for IBM JREs in trunk, 8.0.x (for 8.0.27) and 7.0.x (for 7.0.65).", "id": 185018, "time": "2015-09-07T19:31:40Z", "creator": "markt@apache.org", "creation_time": "2015-09-07T19:31:40Z", "is_private": false}]