[{"count": 0, "tags": [], "creator": "cs98011@icsd.aegean.gr", "attachment_id": null, "is_private": false, "id": 22155, "time": "2002-09-03T11:32:25Z", "bug_id": 12253, "creation_time": "2002-09-03T11:32:25Z", "text": "I have implemented a filter that changes the charset to a user specified one\nbefore a request reaches a servlet. The problem is that no other charset is\nworking except the default (ISO-8859-7). I have tried to look in the source\ncode. There seems to be an issue in the catalina/utils/URL.java in URLDecode\nfunctions. The default java.net.url class correctly decodes the form data, while\nthe custom implementation in Tomcat does not. I 'vw also noticed that it does\nnot work in UTF8 charsets."}, {"count": 1, "tags": [], "text": "Character encoding has been the source of quite a bit of debate on the tomcat-\ndev list in recent weeks. There have been a few changes (see summary below) as \na result. Essentially some additional configuration options have been \nprovided. The UTF-8 issue (also reported in bug 22666) has also been fixed.\n\nCharacter encoding summary\n==========================\n\nThere are a number of situations where there may be a requirement to use non-\nUS ASCII characters in a URI. These include:\n- Parameters in the query string\n- Servlet paths\n\nThere is a standard for encoding URIs (http://www.w3.org/International/O-URL-\ncode.html) but this standard is not consistently followed by clients. This \ncauses a number of problems.\n\nThe functionality provided by Tomcat (4 and 5) to handle this less than ideal \nsituation is described below.\n\n1. The Coyote HTTP/1.1 connector has a useBodyEncodingForURI attribute which \nif set to true will use the request body encoding to decode the URI query \nparameters.\n  - The default value is true for TC4 (breaks spec but gives consistent \nbehaviour across TC4 versions)\n  - The default value is false for TC5 (spec compliant but there may be \nmigration issues for some apps)\n2. The Coyote HTTP/1.1 connector has a URIEncoding attribute which defaults to \nISO-8859-1.\n3. The parameters class (o.a.t.u.http.Parameters) has a QueryStringEncoding \nfield which defaults to the URIEncoding. It must be set before the parameters \nare parsed to have an effect.\n\nThings to note regarding the servlet API:\n1. HttpServletRequest.setCharacterEncoding() normally only applies to the \nrequest body NOT the URI.\n2. HttpServletRequest.getPathInfo() is decoded by the web container.\n3. HttpServletRequest.getRequestURI() is not decoded by container.\n\nOther tips:\n1. Use POST with forms to return parameters as the parameters are then part of \nthe request body.\n", "is_private": false, "bug_id": 12253, "id": 50377, "time": "2004-01-11T19:07:25Z", "creator": "markt@apache.org", "creation_time": "2004-01-11T19:07:25Z", "attachment_id": null}]