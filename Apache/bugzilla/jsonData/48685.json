[{"count": 0, "tags": [], "creator": "ashish.jain@in.ibm.com", "attachment_id": null, "text": "Uploading  a patch. Kindly verify. To use this patch the users have to set up a system property as true\norg.apache.tomcat.config.NEGOTIATE = true", "id": 134250, "time": "2010-02-05T01:37:10Z", "bug_id": 48685, "creation_time": "2010-02-05T01:37:10Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 48685, "text": "Created attachment 24930\nPatch for spnego support in tomcat", "id": 134251, "time": "2010-02-05T01:39:30Z", "creator": "ashish.jain@in.ibm.com", "creation_time": "2010-02-05T01:39:30Z", "is_private": false, "attachment_id": 24930}, {"count": 2, "tags": [], "bug_id": 48685, "text": "The patch is needs reformatting:\n - spaces rather than tabs\n - remove the unused imports\n - remove System.out\n - conform to the existing coding style, particularly placement of {\n - remove addition of random blank lines\n\nThere also needs to be some explanation/documentation on how this is meant to work. I assume it only works with an appropriately configured JAAS realm.\n\nSome explanation of how this maps to http://msdn.microsoft.com/en-us/library/ms995330.aspx and step 5 of \"SPNEGO Token Handshake via HTTP Headers\" in particular would also help.\n\nI'm leaning towards the creation of a new authenticator class that extends the BASIC authenticator and is selected by using SPENGO rather than BASIC in the web.xml. That would allow per webapp configuration. I also think that, assuming a fairly specific JAAS configuration is required, that the authenticator should check that such a configuration is in place and fail to start if it isn't.", "id": 134418, "time": "2010-02-11T00:07:10Z", "creator": "markt@apache.org", "creation_time": "2010-02-11T00:07:10Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 48685, "attachment_id": null, "id": 134508, "time": "2010-02-15T11:59:00Z", "creator": "ashish.jain@in.ibm.com", "creation_time": "2010-02-15T11:59:00Z", "is_private": false, "text": "My sincere apologies that patch did not make the standard of tomcat community. I have reformatted the patch and uploading a new one. \n\nTo use this the only requirement is to add a JAAS realm and set the property org.apache.tomcat.config.NEGOTIATE = true.\n\nChoosing SPNEGO in web.xml may require a change in Spec and so as of now the current dependency is to use BASIC in the authentication mechanism.\n\nIn case Spnego fails the authentication will fall back on the other mechanism say properties-file, ldap, database, certificates etc.\n\nI have added a related document in geronimo\nhttp://cwiki.apache.org/GMOxDOC21/using-spengo-in-geronimo.html"}, {"count": 4, "tags": [], "bug_id": 48685, "attachment_id": 24987, "text": "Created attachment 24987\nUpdated patch for Spnego support in tomcat\n\nKindly review and apply.", "id": 134510, "time": "2010-02-15T12:01:18Z", "creator": "ashish.jain@in.ibm.com", "creation_time": "2010-02-15T12:01:18Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 48685, "text": "The patch will not be applied in it's current form.\n\nThere are a number of issues. In no particular:\n- format (bracket placement, random white-space changes)\n- use of a system property that makes SPNEGO configuration global\n- lack of documentation\n\nThis last point is particularly important given that this depends on a specifically configured JAAS realm.\n\nI am still leaning towards creating a new authenticator for this. The spec allows containers to add additional methods beyond BASIC, FORM, etc.\n\nGiven the effort required to test this, I'm not going to start setting up a domain and the like until there is some documentation, particularly on the JAAS configuration required. The other issues with the patch I am less concerned with given that it is likely to be extensively re-worked before it is included. I'm also marking this as an enhancement.", "id": 135171, "time": "2010-03-08T19:45:38Z", "creator": "markt@apache.org", "creation_time": "2010-03-08T19:45:38Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 48685, "attachment_id": 25157, "id": 135515, "time": "2010-03-22T09:35:02Z", "creator": "ashish.jain@in.ibm.com", "creation_time": "2010-03-22T09:35:02Z", "is_private": false, "text": "Created attachment 25157\nUpdated version of the patch against Tomcat 6.0.26"}, {"count": 7, "tags": [], "creator": "ashish.jain@in.ibm.com", "attachment_id": 25158, "text": "Created attachment 25158\nJaas configuration file", "id": 135516, "time": "2010-03-22T09:40:40Z", "bug_id": 48685, "creation_time": "2010-03-22T09:40:40Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 48685, "attachment_id": 25159, "id": 135517, "time": "2010-03-22T09:41:36Z", "creator": "ashish.jain@in.ibm.com", "creation_time": "2010-03-22T09:41:36Z", "is_private": false, "text": "Created attachment 25159\nKrb5 configuration file"}, {"count": 9, "tags": [], "text": "Created attachment 25160\nLibraries for login module, realm implementation", "is_private": false, "bug_id": 48685, "id": 135518, "time": "2010-03-22T09:44:46Z", "creator": "ashish.jain@in.ibm.com", "creation_time": "2010-03-22T09:44:46Z", "attachment_id": 25160}, {"text": "Created attachment 25161\nSample test application", "tags": [], "bug_id": 48685, "attachment_id": 25161, "count": 10, "id": 135519, "time": "2010-03-22T09:45:49Z", "creator": "ashish.jain@in.ibm.com", "creation_time": "2010-03-22T09:45:49Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 48685, "text": "Created attachment 25162\nJava opts", "id": 135520, "attachment_id": 25162, "creator": "ashish.jain@in.ibm.com", "creation_time": "2010-03-22T09:48:03Z", "time": "2010-03-22T09:48:03Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 48685, "text": "Hi Mark,\n\nI have modified the patch as you have suggested in your latest update. The new modified patch includes the following:\n\n1) No dependency on Basic, the applications can use SPNEGO as the auth-method now in web.xml.\n2) No Global property setting required.\n3) Removed tabs and extra spaces, if the formatting of the patch still does not match tomcat standards I will request you to point me to some doc which explains coding conventions to be used in tomcat.\n\nI was to create a new wiki page for the steps in tomcat but was not sure where to add the new page. Some guidance on this is expected.\n\nFor now I will chalk down the steps here and than same can be added to Tomcat wiki.\n\n1) Set up the active directory controller as explained in this link\nhttp://cwiki.apache.org/GMOxDOC21/using-spengo-in-geronimo.html#UsingSpengoingeronimo-SettinguptheActiveDirectoryDomainController\n2) Set up the client machine as explained in this link\nhttp://cwiki.apache.org/GMOxDOC21/using-spengo-in-geronimo.html#UsingSpengoingeronimo-Settinguptheclientmachine\n3) Add the jaas.conf, krb5.ini and krb5.keytab files to the server machine.\n4) Add the jars in the zip to tomcat classpath.\n5) Set the JAVA_OPTS before starting the server.\n6) Start the server and deploy the application.\n7) Please make sure your web.xml has correct roles defined and the user which is being used to authenticate should be memberOf that particular role in Active Directory Server.\n8) On success you should be able to access the resource w/o any prompts for username and password.\n\n\nThanks\nAshish", "id": 135521, "time": "2010-03-22T10:02:23Z", "creator": "ashish.jain@in.ibm.com", "creation_time": "2010-03-22T10:02:23Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Adding all those JARs to a standard Tomcat installation isn't going to be acceptable. How feasible is a lighter weight implementation? A new authenticator and new realm is about the limit of what I would find acceptable.\n\nAlso, you haven't yet answered my question regarding the SPNEGO protocol. Specifically:\nSome explanation of how this maps to\nhttp://msdn.microsoft.com/en-us/library/ms995330.aspx and step 5 of \"SPNEGO\nToken Handshake via HTTP Headers\" in particular would also help.", "id": 135903, "time": "2010-04-06T14:15:58Z", "bug_id": 48685, "creation_time": "2010-04-06T14:15:58Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 48685, "text": "Regarding your question \"Step 5 of Spnego\", in most of the cases the size of the Spnego token will be less that < 4 KB however in case it goes over and above 4KB, maxHttpHeaderSize can be increased, so implementing Step5 is not a necessity.\n\nOn the JAAS realm I had an understanding from your previous update that you wanted a sample to test and that is the reason I have provided all the jars so that you can test it in your setup.\n\nHowever If I understand correctly you want me to provide a tomcat specific implementation of \"org.apache.geronimo.tomcat.realm.TomcatJAASRealm\". SpnegoAuthenticator is already up and available in the patch. \n\nSo if I provide a tomcat specific implementation of TomcatJAASRealm will you include the patch in Tomcat?", "id": 136305, "time": "2010-04-22T03:38:51Z", "creator": "ashish.jain@in.ibm.com", "creation_time": "2010-04-22T03:38:51Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "creator": "1983-01-06@gmx.net", "attachment_id": null, "text": "Mark,\n\nin my opinion all of these additional dependencies are superfluous. I wrote a SpnegoAuthenticator for our webapps in less than 300 lines of code. All you need is Java 6 with native SPNEGO support.\n\nOur Active Directory forrest contains serveral thousand accounts which perfectly work with this solution.\n\nI would donate the code and adapt if this will be necessary. More over, I wrote a supplemental Active Directoy Realm which retrieves the roles and authenticates itself with Kerberos either as the Tomcat server or even better as the client connecting to the Tomcat server (credential delegation through Kerberos).\n\nMichael", "id": 141335, "time": "2010-11-02T06:17:55Z", "bug_id": 48685, "creation_time": "2010-11-02T06:17:55Z", "is_private": false}, {"count": 16, "tags": [], "creator": "markt@apache.org", "text": "(In reply to comment #15)\n> in my opinion all of these additional dependencies are superfluous. I wrote a\n> SpnegoAuthenticator for our webapps in less than 300 lines of code. All you\n> need is Java 6 with native SPNEGO support.\n\nGood to hear.\n\n> I would donate the code and adapt if this will be necessary.\nThat would be great.\n\n> More over, I wrote\n> a supplemental Active Directoy Realm which retrieves the roles and\n> authenticates itself with Kerberos either as the Tomcat server or even better\n> as the client connecting to the Tomcat server (credential delegation through\n> Kerberos).\n\nThat sounds interesting too.", "id": 141340, "time": "2010-11-02T12:12:59Z", "bug_id": 48685, "creation_time": "2010-11-02T12:12:59Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "creator": "1983-01-06@gmx.net", "attachment_id": null, "text": "(In reply to comment #16)\n> (In reply to comment #15)\n> > in my opinion all of these additional dependencies are superfluous. I wrote a\n> > SpnegoAuthenticator for our webapps in less than 300 lines of code. All you\n> > need is Java 6 with native SPNEGO support.\n> \n> Good to hear.\n> \n> > I would donate the code and adapt if this will be necessary.\n> That would be great.\n> \n> > More over, I wrote\n> > a supplemental Active Directoy Realm which retrieves the roles and\n> > authenticates itself with Kerberos either as the Tomcat server or even better\n> > as the client connecting to the Tomcat server (credential delegation through\n> > Kerberos).\n> \n> That sounds interesting too.\n\nThis is weird, I wasn't notified about your comment..Do you want me to attach the maven project? What license do you prefer, ASL?\n\nAll files contain JavaDocs. Solely the environment preps are missing in the docs but can be added.", "id": 141891, "time": "2010-11-21T15:58:39Z", "bug_id": 48685, "creation_time": "2010-11-21T15:58:39Z", "is_private": false}, {"count": 18, "tags": [], "text": "(In reply to comment #17)\n> This is weird, I wasn't notified about your comment..Do you want me to attach\n> the maven project? What license do you prefer, ASL?\n\nSorry for the slow reply. Yes please. ALv2 is by far the easiest to work with.", "is_private": false, "bug_id": 48685, "id": 145032, "time": "2011-03-16T08:51:21Z", "creator": "markt@apache.org", "creation_time": "2011-03-16T08:51:21Z", "attachment_id": null}, {"count": 19, "tags": [], "creator": "1983-01-06@gmx.net", "text": "Created attachment 26792\nComplete SPNEGO Authenticator and Active Directory Realm\n\nthis is our minimal implementation of SpnegoAuthenticator (less than 200 lines) and Active Directory Realm. It requires only a Java 6 to run due to SPNEGO support. All authentication is done thru Kerberos for the Active Directory too.\n\nAdapt classes to your Tomcat namespace.\nI hereby grant a full ASLv2 license to the Apache Foundation to integrate the source into Tomcat.\n\nIf you need any changes, please tell.", "id": 145210, "time": "2011-03-23T05:21:42Z", "bug_id": 48685, "creation_time": "2011-03-23T05:21:42Z", "is_private": false, "attachment_id": 26792}, {"count": 20, "tags": [], "bug_id": 48685, "is_private": false, "id": 145211, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2011-03-23T05:34:51Z", "time": "2011-03-23T05:34:51Z", "text": "I haven't look at this yet but I just wanted to say thank you and let you know this is on the radar. Personally, I'm snowed under with other stuff at the minute but I will get to this as soon as I can - unless one of the other committers beats me to it.\n\nThanks again."}, {"count": 21, "tags": [], "bug_id": 48685, "text": "I'm looking at this now and currently trying to figure out the additional configuration required (JAAS, keytab, etc). Any notes you can provide that would save me from figuring stuff out from scratch would help.", "id": 145265, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2011-03-25T13:59:58Z", "time": "2011-03-25T13:59:58Z", "is_private": false}, {"count": 22, "tags": [], "creator": "1983-01-06@gmx.net", "attachment_id": null, "text": "(In reply to comment #21)\n> I'm looking at this now and currently trying to figure out the additional\n> configuration required (JAAS, keytab, etc). Any notes you can provide that\n> would save me from figuring stuff out from scratch would help.\n\nMark, did you check the Authenticator and Realm JavaDocs?\nMore over, you'll need to some some system properties. I'll post the exact ones on monday because I don't have accesss to the files from work atm.\n\nYou'll need to provide at least:\n\n-Djava.security.auth.login.config and\n-Djava.security.krb5.conf", "id": 145268, "time": "2011-03-25T15:07:45Z", "bug_id": 48685, "creation_time": "2011-03-25T15:07:45Z", "is_private": false}, {"count": 23, "tags": [], "bug_id": 48685, "attachment_id": null, "id": 145270, "time": "2011-03-25T15:18:08Z", "creator": "markt@apache.org", "creation_time": "2011-03-25T15:18:08Z", "is_private": false, "text": "Doh. I missed the javadoc completely. My bad. I'll take a look over the weekend and get back to you."}, {"count": 24, "tags": [], "text": "Having reviewed the Javadoc, there still appears to be a lot of information missing/assumed. The Geronimo notes from comment #12 appear to cover many of the missing steps. I plan to use those as the basis of my testing for now.", "is_private": false, "bug_id": 48685, "id": 145294, "time": "2011-03-26T13:24:23Z", "creator": "markt@apache.org", "creation_time": "2011-03-26T13:24:23Z", "attachment_id": null}, {"count": 25, "tags": [], "creator": "1983-01-06@gmx.net", "attachment_id": null, "id": 145295, "time": "2011-03-26T13:48:00Z", "bug_id": 48685, "creation_time": "2011-03-26T13:48:00Z", "is_private": false, "text": "(In reply to comment #24)\n> Having reviewed the Javadoc, there still appears to be a lot of information\n> missing/assumed. The Geronimo notes from comment #12 appear to cover many of\n> the missing steps. I plan to use those as the basis of my testing for now.\n\nMost, yes. That's why I wrote that I will post more information on monday. I do not have access to those files now."}, {"count": 26, "tags": [], "bug_id": 48685, "attachment_id": null, "text": "Mark,\n\nhere's what you need to make it run:\n\nI expect you/someone to have an already working AD environment where the server with tomcat running is registered in the domain, have an SPN set and an keytab created for that service account.\n\nThis is what you need to configure your setenv.sh:\nKERBEROS_CONFIG=\"-Djava.security.auth.login.config=$CATALINA_HOME/conf/jaas.conf -Djavax.security.auth.useSubjectCredsOnly=false -Djava.security.krb5.conf=/etc/krb5.conf\"\n\nThe jaas.conf contains the login module pointing to the keytab or a already preloaded ticket cache.\nThe krb5.conf is Unix usual with you realm and other realms used with tomcat.\n\nPass KERBEROS_CONFIG to your JAVA_OPTS and make it run.", "id": 145341, "time": "2011-03-28T04:40:34Z", "creator": "1983-01-06@gmx.net", "creation_time": "2011-03-28T04:40:34Z", "is_private": false}, {"count": 27, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 145350, "time": "2011-03-28T08:01:05Z", "bug_id": 48685, "creation_time": "2011-03-28T08:01:05Z", "is_private": false, "text": "I'd managed to work out the system properties. I currently suspect issues with my jaas.conf and/or krb5.conf or possibly the keytab file. Samples of those would help although I am currently considering aiming for a Spring Security style solution since that appears to only requires the keytab file (although I haven't looked at that in detail yet)."}, {"count": 28, "tags": [], "text": "Created attachment 26814\nkrb5.conf\n\nThis is a sample Kerberos 5 conf file with multi realm config. This one works in our environment with cross-realm validation and sign on. As well as obtaining cross-realm service tickets from delegated credential.", "attachment_id": 26814, "bug_id": 48685, "id": 145397, "time": "2011-03-30T04:12:28Z", "creator": "1983-01-06@gmx.net", "creation_time": "2011-03-30T04:12:28Z", "is_private": false}, {"count": 29, "tags": [], "creator": "1983-01-06@gmx.net", "text": "Created attachment 26815\njaas.conf\n\nthis jaas.conf contains two login modules. The 'accept' module validates client tickets against the keytab of the host. The 'initiate' module enables the server to authenticate an active directory DC with Kerberos.", "id": 145398, "time": "2011-03-30T04:14:09Z", "bug_id": 48685, "creation_time": "2011-03-30T04:14:09Z", "is_private": false, "attachment_id": 26815}, {"count": 30, "tags": [], "text": "Mark,\n\nI have attached some sample config files to make it run. This solution\nuses a keytab to validate tickets.\n\nI am aware of the Spring way, we use that Sec Extension also but I don't\nlike that because of the following drawbacks:\n\n1. You have ugly inline code which has to be maintained.\n2. You have to provide a module for every JVM implementation (Oracle, IBM,\netc) which the user would have again to configure\n3. You cannot use your custom Krb5 modules which could happen. You have\nto alter and recompile tomcat then => ugly\n4. You lose the entire configuration flexiblity of the modules unless you\npass all config params of the modules through the authenticator => even\nmore code.\n\nI'd rather stick with the login modules because they are proven to work\nwell and are documented thoroughly by Oracle.\n\nI have tried to keep the implementation as simple as possible. Going the \nabove way would require way more code.\n\nMike", "attachment_id": null, "bug_id": 48685, "id": 145399, "time": "2011-03-30T04:15:38Z", "creator": "1983-01-06@gmx.net", "creation_time": "2011-03-30T04:15:38Z", "is_private": false}, {"count": 31, "tags": [], "bug_id": 48685, "attachment_id": null, "id": 145400, "time": "2011-03-30T07:01:50Z", "creator": "markt@apache.org", "creation_time": "2011-03-30T07:01:50Z", "is_private": false, "text": "(In reply to comment #30)\n> I have attached some sample config files to make it run. This solution\n> uses a keytab to validate tickets.\n\nThanks. It was the jaas.conf that I hadn't been able to figure out.\n\n> I am aware of the Spring way, we use that Sec Extension also but I don't\n> like that because of the following drawbacks:\n> \n> 1. You have ugly inline code which has to be maintained.\n> 2. You have to provide a module for every JVM implementation (Oracle, IBM,\n> etc) which the user would have again to configure\n> 3. You cannot use your custom Krb5 modules which could happen. You have\n> to alter and recompile tomcat then => ugly\n> 4. You lose the entire configuration flexiblity of the modules unless you\n> pass all config params of the modules through the authenticator => even\n> more code.\n> \n> I'd rather stick with the login modules because they are proven to work\n> well and are documented thoroughly by Oracle.\n> \n> I have tried to keep the implementation as simple as possible. Going the \n> above way would require way more code.\n\nMy primary aim was getting something to work. As a result of that experience, I wanted to keep the configuration as simple as possible - i.e. use sensible defaults and provide a mechanism for the user to override them. However, I hadn't considered custom login modules or noticed the one currently used is an Oracle internal one. I'm leaning towards restoring using the jaas.conf file as it is the elegant solution to all of those problems and, as you point out, it means less code.\n\nMy one concern is that it requires users to do slightly more to get SPNEGO to work. I think that can be overcome by good documentation. On that note, what Oracle documentation were you referring to? If there is a good explanation of this stuff I'd like to include a reference to it in the Tomcat docs."}, {"count": 32, "tags": [], "text": "(In reply to comment #31)\n> (In reply to comment #30)\n> > I am aware of the Spring way, we use that Sec Extension also but I don't\n> > like that because of the following drawbacks:\n> > \n> > 1. You have ugly inline code which has to be maintained.\n> > 2. You have to provide a module for every JVM implementation (Oracle, IBM,\n> > etc) which the user would have again to configure\n> > 3. You cannot use your custom Krb5 modules which could happen. You have\n> > to alter and recompile tomcat then => ugly\n> > 4. You lose the entire configuration flexibility of the modules unless you\n> > pass all config params of the modules through the authenticator => even\n> > more code.\n> > \n> > I'd rather stick with the login modules because they are proven to work\n> > well and are documented thoroughly by Oracle.\n> > \n> > I have tried to keep the implementation as simple as possible. Going the \n> > above way would require way more code.\n> \n> My primary aim was getting something to work. As a result of that experience, I\n> wanted to keep the configuration as simple as possible - i.e. use sensible\n> defaults and provide a mechanism for the user to override them. However, I\n> hadn't considered custom login modules or noticed the one currently used is an\n> Oracle internal one. I'm leaning towards restoring using the jaas.conf file as\n> it is the elegant solution to all of those problems and, as you point out, it\n> means less code.\n\nMark, you can cut down the config of the authenticator by providing a default login module name: tomcat-accept. That's it. Your are ready to go.\n\nI checked your commit in svn and the code/config options are bloated in my opinion due to eh points mentioned above.\n\nThere at least two krb5 modules known to me:\nhttp://www.ibm.com/developerworks/java/jdk/security/50/secguides/jgssDocs/api/com/ibm/security/auth/module/Krb5LoginModule.html\nhttp://download.oracle.com/javase/1.4.2/docs/guide/security/jaas/spec/com/sun/security/auth/module/Krb5LoginModule.html\n\nI am happily using this code on Oracle JVM and HP JVM.\n\nMoreover, I'd consider the delegated credential extraction for crucial, this is one of best features of kerberos. We use them all the time. I wouldn't strip that.\n\nThe realm can be reduced by the login module with tomcat-initiate too. Most options are optional anyway.\n\nI can provide a sample context.xml which I use in our environment.\n \n> My one concern is that it requires users to do slightly more to get SPNEGO to\n> work. I think that can be overcome by good documentation. On that note, what\n> Oracle documentation were you referring to? If there is a good explanation of\n> this stuff I'd like to include a reference to it in the Tomcat docs.\n\nThere is no need to have a concern, those who require SPNEGO auth need to know about Kerberos and how it works anyway (to some degree).\n\nThe documentation needs to be split in 2 parts.\n1. Network preparation.\n2. Tomcat config.\n\naccording 1.: This is more off-topic because this is not a tomcat issue but a general server admin one. For the sake of completeness, this can be outlined.\nWe have documented that part. I can upload that too.\naccording 2.: All you need is pass both properties krb5 and login conf to the JVM and configure the login module. You're done. Both are already provided as sample by me.\n\nThe oracle documentation refers the the properties, server and client code and the login module configuration. Everything is well-documented here: http://download.oracle.com/javase/1.5.0/docs/guide/security/jgss/tutorials/index.html\n\nJust drop a few lines if you need further assistance.", "attachment_id": null, "bug_id": 48685, "id": 145415, "time": "2011-03-30T14:08:52Z", "creator": "1983-01-06@gmx.net", "creation_time": "2011-03-30T14:08:52Z", "is_private": false}, {"count": 33, "tags": [], "creator": "1983-01-06@gmx.net", "attachment_id": null, "id": 145416, "time": "2011-03-30T14:11:08Z", "bug_id": 48685, "creation_time": "2011-03-30T14:11:08Z", "is_private": false, "text": "Sorry for the spelling, I was to hasty with the 'commit' button."}, {"count": 34, "tags": [], "bug_id": 48685, "attachment_id": null, "id": 145417, "time": "2011-03-30T14:19:55Z", "creator": "1983-01-06@gmx.net", "creation_time": "2011-03-30T14:19:55Z", "is_private": false, "text": "These docs are fine:\n\nhttp://wiki.alfresco.com/wiki/Configuring_the_CIFS_and_web_servers_for_Kerberos/AD_integration\nhttp://www-01.ibm.com/support/docview.wss?uid=swg21448203\n\nAnother issue I'd like to add.\n\nWe created a computer account for the server with the UPN host/fqdn and mapped all SPN to that, so your login module contains as spn the host/fqdn and all other SPN are automatically validated because they all map to one account. With this you are able to provide several configs HTTP/, NFS/, and so forth for that machine.\n\nA simple use case would be that beside the HTTP/ part the webapp hosts a samba share server. The windows explorer will then create a service ticket cifs/fqdn for that server which can be verified with the host/ UPN."}, {"count": 35, "tags": [], "text": "Sorry for spamming again.\n\nWe run mixed environments with Windows Server 2003 and 2008, both serve as KDC.\nServer code works on Windows XP and HP-UX flawlessly running JVMs from Oracle and HP.\n\nClients which work perfectly are: IE6+, Firefox (complete coverage), JDK URL Connection (transparently) and the Async HTTP Client (https://github.com/sonatype/async-http-client) which I have patched also. I guess CURL works too but did not test.", "is_private": false, "bug_id": 48685, "id": 145418, "time": "2011-03-30T14:29:33Z", "creator": "1983-01-06@gmx.net", "creation_time": "2011-03-30T14:29:33Z", "attachment_id": null}, {"count": 36, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 145443, "time": "2011-03-31T20:42:47Z", "bug_id": 48685, "creation_time": "2011-03-31T20:42:47Z", "is_private": false, "text": "The final part of the Tomcat SPNEGO implementation has just been committed. It is broadly based on Michael's patch.\n\nThe key features are:\n- a new SPNEGO login-config for use in web.xml that supports Windows native authentication via kerberos\n- integration with all Tomcat Realms\n- additional integration with the JNDI Realm that enabled the user's delegated credentials to be used to connected to AD\n- the user's delegated credentials are exposed via a request attribute so applications can use then to impersonate the user when accessing external services\n\nThe main differences compared to the original patch are:\n- Use existing Base64 encoder/decoder rather than proposed one\n- Integrate with the JNDI realm rather than a new one\n- Use existing GenericPrincipal rather than proposed ones\n- Documentation\n\nThis requires Java 6 so it won't get proposed for back-port to 6.0.x.\n\nBugs in this implementation and additional configuration / feature requests should be raised as new Bugzilla issues against Tomcat 7."}, {"count": 37, "tags": [], "text": "Mark, I tried to build the current trunk to validate the code and mark some improvements but I fails with:\n\nbuild-docs:\n     [xslt] Transforming into E:\\Projekte\\tomcat-trunk\\output\\build\\webapps\\docs\n\n     [xslt] Processing E:\\Projekte\\tomcat-trunk\\webapps\\docs\\changelog.xml to E:\n\\Projekte\\tomcat-trunk\\output\\build\\webapps\\docs\\changelog.html\n     [xslt] Loading stylesheet E:\\Projekte\\tomcat-trunk\\webapps\\docs\\tomcat-docs\n.xsl\n     [xslt] E:\\Projekte\\tomcat-trunk\\webapps\\docs\\tomcat-docs.xsl:470: Fatal Err\nor! Illegal HTML character: decimal 150\n     [xslt] Failed to process null", "attachment_id": null, "bug_id": 48685, "id": 145449, "time": "2011-04-01T04:59:26Z", "creator": "1983-01-06@gmx.net", "creation_time": "2011-04-01T04:59:26Z", "is_private": false}, {"count": 38, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 145450, "time": "2011-04-01T05:07:36Z", "bug_id": 48685, "creation_time": "2011-04-01T05:07:36Z", "is_private": false, "text": "Looks like you have a build environment problem. It builds fine for me and the multiple CI systems (buildbot and gump) that build this codebase. The users list is the best place to get help with that."}, {"text": "(In reply to comment #38)\n> Looks like you have a build environment problem. It builds fine for me and the\n> multiple CI systems (buildbot and gump) that build this codebase. The users\n> list is the best place to get help with that.\n\nI am sure it's not. The problem lies int he tomcat-docs.xsl. I have saxon9 on my ant/lib classpath and is notifies about broken data. Read this for reference: http://web.archiveorange.com/archive/v/rNJIEC48MBLYfxAORgpH\nMichael Kay even said that the user has to fix his xml.", "tags": [], "bug_id": 48685, "attachment_id": null, "count": 39, "id": 145453, "time": "2011-04-01T05:46:38Z", "creator": "1983-01-06@gmx.net", "creation_time": "2011-04-01T05:46:38Z", "is_private": false}, {"count": 40, "tags": [], "bug_id": 48685, "text": "Mark,\n\nthere are some glitches which have to be addressed in my opinion:\n\nConstants.java:\n- DEFAULT_SPN_CLASS is never used, forgot to delete?\n- DEFAULT_KRB5_CONF value: .ini is Windows style, on Unix is krb5.conf only. I would stick to that convention. I.e., split in two props.\n- DEFAULT_LOGIN_MODULE_NAME value: this is Oracle-specific, I would rather use a vendor-agnostic name like 'tomcat-accept'. (Same rule as in tomcat.keytab)\n\nSpnegoAuthenticator.java:\n\n- 'storeDelegatedCredentials' rename to 'storeDelegatedCredential' since GSSContext uses singular and the realm does the same, applies to may JavaDocs too\n- It might be worth checking of '/etc/krb5.conf' or 'C:\\Windows\\krb5.ini' because those are default locations on those OSs and this is what the JVM does if you did not overwrite the property. See http://download.oracle.com/javase/1.4.2/docs/guide/security/jgss/tutorials/KerberosReq.html => Locating the krb5.conf Configuration File\n\nRealmBase.java:\n- 'stripAtForGss' rename to 'stripRealm'. I think this one reads better.\n- There is no option to sign in with Kerberos into a directory server. Only delegated credential works. This might be problematic if some user account is not trusted for cred deleg. I don't like to fall back to plain password. Did I miss that spot in the code?\n- Property 'javax.security.sasl.server.authentication' should be configurable. It applies at least to GSSAPI.\n- Property 'javax.security.sasl.qop' should be configurable. It applies at least to GSSAPI *and* DIGEST-MD5.\nSee here for more ref: http://download.oracle.com/javase/jndi/tutorial/ldap/security/sasl.html\n\nI did not yet try the code, I just made a review. I will check docs separately.", "id": 145456, "time": "2011-04-01T07:10:15Z", "creator": "1983-01-06@gmx.net", "creation_time": "2011-04-01T07:10:15Z", "is_private": false, "attachment_id": null}, {"count": 41, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 145459, "time": "2011-04-01T07:30:16Z", "bug_id": 48685, "creation_time": "2011-04-01T07:30:16Z", "is_private": false, "text": "(In reply to comment #40)\n> - DEFAULT_SPN_CLASS is never used, forgot to delete?\nFixed\n\n> - DEFAULT_KRB5_CONF value: .ini is Windows style, on Unix is krb5.conf only. I\n> would stick to that convention. I.e., split in two props.\nHappy with the current default. Can be set via system property.\n\n> - DEFAULT_LOGIN_MODULE_NAME value: this is Oracle-specific, I would rather use\n> a vendor-agnostic name like 'tomcat-accept'. (Same rule as in tomcat.keytab)\nHappy with the current default. Users can change if desired.\n\n> - 'storeDelegatedCredentials' rename to 'storeDelegatedCredential'\nfixed\n\n> - 'stripAtForGss' rename to 'stripRealm'\nChanged to stripRealmForGss\n\n> - There is no option to sign in with Kerberos into a directory server. Only\n> delegated credential works. This might be problematic if some user account is\n> not trusted for cred deleg. I don't like to fall back to plain password. Did I\n> miss that spot in the code?\nNope. Please open an enhancement request.\n\n> - Property 'javax.security.sasl.server.authentication' should be configurable.\n> It applies at least to GSSAPI.\n> - Property 'javax.security.sasl.qop' should be configurable. It applies at\n> least to GSSAPI *and* DIGEST-MD5.\nAnother enhancement request please."}, {"count": 42, "tags": [], "text": "Mark,\n\nI just compiled and deployed 7.0.12-dev to our test server. It works but fails at some point.\nThe default server.xml is configured with:\n<!-- Use the LockOutRealm to prevent attempts to guess user passwords\n           via a brute-force attack -->\n      <Realm className=\"org.apache.catalina.realm.LockOutRealm\">\n        <!-- This Realm uses the UserDatabase configured in the global JNDI\n             resources under the key \"UserDatabase\".  Any edits\n             that are performed against this UserDatabase are immediately\n             available for use by the Realm.  -->\n        <Realm className=\"org.apache.catalina.realm.UserDatabaseRealm\"\n               resourceName=\"UserDatabase\"/>\n</Realm>\n\nThe Authentication fails at: UserDatabaseRealm line 215 because the use cannot be found in the database.\n\nI think there is a huge misconception from your point of view. Kerberos is not something which simply passes credentials to a realm. Kerberos IS THE REALM. You cannot and should not pass that username to any other realm but to an authorizing realm. In this case the user cannot be authenticated and gets locked out. The way it is coded right now won't work.\nKerberos sole purpose is to indentify the user properly and this works flawlessly in my Eclipse debug session and in Fiddler.\n\nMike", "attachment_id": null, "bug_id": 48685, "id": 145461, "time": "2011-04-01T08:41:22Z", "creator": "1983-01-06@gmx.net", "creation_time": "2011-04-01T08:41:22Z", "is_private": false}, {"count": 43, "tags": [], "bug_id": 48685, "text": "(In reply to comment #41)\n> (In reply to comment #40)\n> > - DEFAULT_SPN_CLASS is never used, forgot to delete?\n> Fixed\n> \n> > - DEFAULT_KRB5_CONF value: .ini is Windows style, on Unix is krb5.conf only. I\n> > would stick to that convention. I.e., split in two props.\n> Happy with the current default. Can be set via system property.\n\nI personally disagree because Tomcat most popular platform is some Unix flavor.\n \n> > - DEFAULT_LOGIN_MODULE_NAME value: this is Oracle-specific, I would rather use\n> > a vendor-agnostic name like 'tomcat-accept'. (Same rule as in tomcat.keytab)\n> Happy with the current default. Users can change if desired.\n\nI disagree again because abstraction is not missing and not everyone uses an Oracle JVM.\n \n> > - There is no option to sign in with Kerberos into a directory server. Only\n> > delegated credential works. This might be problematic if some user account is\n> > not trusted for cred deleg. I don't like to fall back to plain password. Did I\n> > miss that spot in the code?\n> Nope. Please open an enhancement request.\n\nWill do!\n \n> > - Property 'javax.security.sasl.server.authentication' should be configurable.\n> > It applies at least to GSSAPI.\n> > - Property 'javax.security.sasl.qop' should be configurable. It applies at\n> > least to GSSAPI *and* DIGEST-MD5.\n> Another enhancement request please.\n\nWill do!", "id": 145462, "attachment_id": null, "creator": "1983-01-06@gmx.net", "creation_time": "2011-04-01T08:47:46Z", "time": "2011-04-01T08:47:46Z", "is_private": false}, {"count": 44, "tags": [], "bug_id": 48685, "attachment_id": null, "id": 145463, "time": "2011-04-01T08:49:08Z", "creator": "1983-01-06@gmx.net", "creation_time": "2011-04-01T08:49:08Z", "is_private": false, "text": "(In reply to comment #43)\n> I disagree again because abstraction is not missing and not everyone uses an\n> Oracle JVM.\n\nShould read: I disagree again because abstraction is missing and not everyone uses an..."}]