[{"count": 0, "tags": [], "bug_id": 33182, "text": "I have a single ear file with multiple was files deployed on Tomcat.\n\nA quick summary is that if I include to another web app, that web app's session\nid comes back as the session id of the web app originating the request.\nBut if I just load the included page directly I see a different session id.\nI feel that if each web app is going to have a separate session id, then that id\nshould be consistent no matter how a given page in that app is access (either\nvia include, forward or a standard top level http request)\n\nLet's call them /app1 and /app2\n\nI have a page called session.jsp with the following\n\n<%=session.getId()%>\n\nI visit /app1/session.jsp and get a sessionid, call it SESSIONID1\nNext I visit /app2/session.jsp and get a different session id call it SESSIONID2\n\nFine, no problems yet.\n\nNow, I have a page in /app1 that includes another page from /app2.\n\nCall these page /app1/include.jsp and /app2/included.jsp\n\n--------\n/app1/include.jsp:\n\nIn /app1 sessionid= <%=session.getId%> <BR>\n\n<%\nRequestDispatcher d = ... (get other context etc...)\nd.include(request,response);\n%>\n------\n/app2/included.jsp:\nIn /app2 sessionid=<%=session.getId()%>\n\n\nWhen loading /app1/include.jsp both /app1/include.jsp and /app2/included.jsp give\nme the same sessionid! That's not consistent with the session id I was given\nwhen the same browser instance loaded these pages directly. I did this quickly\nenough\nso that session invalidation is not the cause.\nBecause these session ids are inconsistent I cannot track per session data beween\nmore than one web app. There is no single \"key\" that I can use to uniquely\nidentify a user. \n\nBehavior of other app servers:\n\nBEA: Gives a separate sessionid per web application. But if I forward/include\nbetween web applications I get the sessionid of the application I include to.\n\nWAS: Gives the same session id for each web application visted by the same\nbrowser. Different session objects, but the same id!\n\nATG Dynamo: Same behavor as WAS.\n\nThanks in advance for your attention.", "id": 69877, "time": "2005-01-20T19:34:13Z", "creator": "adamb@atg.com", "creation_time": "2005-01-20T19:34:13Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "remm@apache.org", "text": "We're not going to fix this for the time being, sorry. One of the issues is that\nI still consider cross context sessions to not be regular sessions, and the spec\ndoes not specify this correctly.", "count": 1, "id": 69879, "time": "2005-01-20T19:59:30Z", "bug_id": 33182, "creation_time": "2005-01-20T19:59:30Z", "is_private": false}, {"count": 2, "tags": [], "creator": "adamb@atg.com", "text": "Thanks for the response Remy.\nI understand that this portion of the servlet spec is underspecified so it's\nnot clear what the behavior should be.\n\nI did some additional experimentation and there is just no way to share session\nspecific data between web applications on tomcat. \n\nAs a workaround I attempted to set a session attribute in /app1. When I include\nfrom /app2 to /app1 and attempt to access that attribute it's value is null.\nIf I view the attribute by accessing /app1 directly then of course I can see it.\n\nThis behavior just seems wrong. An application can't expect session attributes\njust to come and go depending on how a page was accessed.\n\nIf I can't get a fix to the first issue about session ids, any chance of getting\nthis session data access behavior changed?", "id": 69882, "attachment_id": null, "bug_id": 33182, "creation_time": "2005-01-20T23:34:46Z", "time": "2005-01-20T23:34:46Z", "is_private": false}, {"count": 3, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "It's not going to be fixed in 5.0.x.\n\nSession created with cross context need to be created using the same session id\n(and you need to use emptySessionPath). I think another added step is required\nis to look again in the cookie list to see if the session exists. That's the\nonly way. I do not care at all about the problem, and I will not do anything to\naddress it, but OTOH I heard Jan enjoys cross context stuff.", "id": 69887, "time": "2005-01-21T00:43:28Z", "bug_id": 33182, "creation_time": "2005-01-21T00:43:28Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 33182, "is_private": false, "text": "I would suggest another alternative: if your requirement is to share data\nbetween web applications, one way to do it is with an object (possibly a\nsingleton, depending on your requirements) living in the shared or common\nclassloader repositories.  Tomcat (and other containers) supports this easily\nout of the box.   If you do this, you're not subject to any session-specific\nrules such as the attributes being Serializable.\n\nSince neither Jan nor anyone else has stepped up to address this issue in over\ntwo months now, I'm closing it as WONTFIX, and I encourage you to consider the\nabove recommendation.", "id": 72755, "time": "2005-03-23T17:58:42Z", "creator": "yoavs@computer.org", "creation_time": "2005-03-23T17:58:42Z", "attachment_id": null}]