[{"count": 0, "tags": [], "bug_id": 1700, "attachment_id": null, "is_private": false, "id": 2378, "time": "2001-05-10T05:54:54Z", "creator": "lode.leroy@iconmedialab.com", "creation_time": "2001-05-10T05:54:54Z", "text": "For automating my project, I needed a way to do some stuff\non all files in a fileset, and so I implemented AntCallOn\nwhich I've been using for some time now, an thought I'd share\nthe code with the Ant team...\n\nAs an example, I show how to call ant for all subprojects.\n\n==-- example --==\n  <taskdef name=\"antcallon\" classname=\"AntCallOn\"/>\n  <target name=\"main\">\n     <antcallon target=\"main-sub\" base=\"${PRJ.home}/\">\n       <fileset dir=\"${PRJ.home}\">\n         <include name=\"*/build.xml\"/>\n         <exclude name=\"setup/build.xml\"/>\n       </fileset>\n     </antcallon>\n  </target>\n  <target name=\"main-sub\">\n    <echo message=\"fileext  = ${fileext}\"/>\n    <echo message=\"filedir  = ${filedir}\"/>\n    <echo message=\"reldir   = ${reldir}\"/>\n    <echo message=\"filename = ${filename}\"/>\n    <echo message=\"filebase = ${filebase}\"/>\n    <echo message=\"running ant in ${reldir}\"/>\n    <ant dir=\"${reldir}\"/>\n  </target>\n\n\n==-- the code --==\n\nimport org.apache.tools.ant.*;\nimport org.apache.tools.ant.types.*;\nimport  org.apache.tools.ant.taskdefs.*;\n\nimport java.util.Vector;\nimport java.io.File;\nimport java.io.IOException;\n\n\npublic class AntCallOn extends CallTarget {\n    protected Vector filesets = new Vector();\n    protected String type = \"file\";\n    protected String base = null;\n\n    //public void log(String s, int i) { System.err.println(s); }\n    /**\n     * Adds a set of files (nested fileset attribute).\n     */\n    public void addFileset(FileSet set) {\n        filesets.addElement(set);\n    }\n\n    /**\n     * Shall the command work only on files, directories or both?\n     */\n    public void setType(FileDirBoth type) {\n        this.type = type.getValue();\n    }\n\n    public void setBase(String base) {\n        this.base = base;\n    }\n\n    protected void checkConfiguration() {\n        if (filesets.size() == 0) {\n            throw new BuildException(\"no filesets specified\", location);\n        }\n    }\n\n    public void execute() throws BuildException {\n\n        Vector v = new Vector();\n        for (int i=0; i<filesets.size(); i++) {\n            FileSet fs = (FileSet) filesets.elementAt(i);\n            DirectoryScanner ds = fs.getDirectoryScanner(project);\n\n            if (!\"dir\".equals(type)) {\n                String[] s = ds.getIncludedFiles();\n                for (int j=0; j<s.length; j++) {\n                    v.addElement(new File(fs.getDir(project), \ns[j]).getAbsolutePath());\n                }\n            }\n\n            if (!\"file\".equals(type)) {\n                String[] s = ds.getIncludedDirectories();\n                for (int j=0; j<s.length; j++) {\n                    v.addElement(new File(fs.getDir(project), \ns[j]).getAbsolutePath());\n                }\n            }\n        }\n\n        String[] s = new String[v.size()];\n        v.copyInto(s);\n\n        this.init();\n        Property param = null; \n        for (int i=0; i<s.length; i++) {\n            log(\"AntCallOn processing file = \" + s[i],Project.MSG_DEBUG);\n            String file = s[i];\n            int path = file.lastIndexOf(java.io.File.separatorChar);\n            if (path<0) { path = 0; }\n            int ext = file.lastIndexOf('.');\n            if (ext<path) { ext = -1; }\n            \n            param = super.createParam();\n            param.setName(\"file\");\n            param.setValue(file);\n\n            param = super.createParam();\n            param.setName(\"filename\");\n            param.setValue(file.substring(path+1));\n\n            param = super.createParam();\n            param.setName(\"fileext\");\n            if (ext<0) { \n                param.setValue(\"\");\n            } else {\n                param.setValue(file.substring(ext+1));\n            }\n\n            param = super.createParam();\n            param.setName(\"filebase\");\n            if (ext<0) { \n                param.setValue(file.substring(path+1));\n            } else {\n                param.setValue(file.substring(path+1,ext));\n            }\n\n            param = super.createParam();\n            param.setName(\"filedir\");\n            param.setValue(file.substring(0,path));\n\n            if (base != null) {\n                String javafile=file.replace(java.io.File.separatorChar,'/');\n                String javabase=base.replace(java.io.File.separatorChar,'/');\n                log(\"javafile='\"+javafile+\"' javabase='\"+javabase+\"'\", \nProject.MSG_DEBUG);\n                if (javafile.startsWith(javabase)) {\n                    String reldir = javafile.substring(base.length(),path);\n                    log(\"reldir='\" + reldir + \"'\", Project.MSG_DEBUG);\n                    param = super.createParam();\n                    param.setName(\"reldir\");\n                    param.setValue(reldir);\n                }\n            }\n            super.execute();\n        }\n    }\n\n    /**\n     * Enumerated attribute with the values \"file\", \"dir\" and \"both\"\n     * for the type attribute.  \n     */\n    public static class FileDirBoth extends EnumeratedAttribute {\n        public String[] getValues() {\n            return new String[] {\"file\", \"dir\", \"both\"};\n        }\n    }\n}"}, {"count": 1, "tags": [], "bug_id": 1700, "attachment_id": null, "is_private": false, "id": 10417, "time": "2002-02-06T23:57:28Z", "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-02-06T23:57:28Z", "text": "Any objections to marking this as WONTFIX?  We've covered this kind of issue \nover and over and its not something the committers are going to approve.\n\nSee Magesh - I look at these too!  :)"}, {"count": 2, "tags": [], "creator": "lode.leroy@iconmedialab.com", "is_private": false, "text": "fine with me... I just wanted to share my modifications.", "id": 10430, "time": "2002-02-07T08:38:02Z", "bug_id": 1700, "creation_time": "2002-02-07T08:38:02Z", "attachment_id": null}]