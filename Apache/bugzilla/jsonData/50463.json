[{"count": 0, "tags": [], "bug_id": 50463, "attachment_id": null, "is_private": false, "id": 142627, "time": "2010-12-13T03:17:10Z", "creator": "ljacomet@gmail.com", "creation_time": "2010-12-13T03:17:10Z", "text": "I recently investigated a deadlock happening inside our JBoss AS.\nI tracked down the root cause to the AsyncAppender of log4j.\nWe use it in blocking mode, with the default buffer size of 128. I was able to reproduce the deadlock live even when increasing the buffer size to 512.\n\nThe problem comes from a race condition when the dispatcher thread dies from an exception. When that happens, if the buffer has been filled up by other threads doing logging, the thread currently waiting on the buffer to be emptied will never be notified and wait there forever.\nAs a category lock is held to access the appender, this lead other threads to block forever.\n\nWe are using log4j 1.2.14 and JBoss AS 4.3.0.\nThe latest trunk version of AsyncAppender still suffers from the race condition.\n\nI attached a test case, using JUnit 4 and Java5 constructs, and a patch for the AsyncAppender.\nThis code is contributed so that it can be included in log4j code base if accepted."}, {"count": 1, "tags": [], "text": "Created attachment 26397\nTest case showing the problem, uses JUnit 4 and Java 5 concurrent tools", "attachment_id": 26397, "id": 142628, "creator": "ljacomet@gmail.com", "time": "2010-12-13T03:18:54Z", "bug_id": 50463, "creation_time": "2010-12-13T03:18:54Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 50463, "text": "Created attachment 26398\nProposed patch for AsyncAppender\n\nThis fix does not change the current behaviour of the AsyncAppender regarding the reason the dispatcher thread dies. It simply prevents threads to be left waiting if the buffer was full.", "id": 142629, "time": "2010-12-13T03:21:17Z", "creator": "ljacomet@gmail.com", "creation_time": "2010-12-13T03:21:17Z", "is_private": false, "attachment_id": 26398}]