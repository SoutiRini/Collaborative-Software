[{"count": 0, "text": "Created attachment 31628\npatch for Validator.java\n\nHi team,\nI was verifying the fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=56481 and found one issue with respect to custom tag libraries.\nA tld has an attribute which could be an empty string. Example is below. Here 'indicator' attribute is provided as \"\".\n<dmf:requiredfieldvalidator \n\tname='<%=Login.CONTROL_USERNAME_VALIDATOR%>' \n\tcontroltovalidate='<%=Login.CONTROL_USERNAME%>' \n\tnlsid='<%=Login.MSG_USERNAME_REQUIRED%>' \n\tindicator=\"\"\n/>\nHowever, while compiling this in jsp resulted in the following exception:\n\nmessage Unable to compile class for JSP\ndescription The server encountered an internal error that prevented it from fulfilling this request.\nexception\norg.apache.jasper.JasperException: Unable to compile class for JSP\n\torg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:579)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:357)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:403)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:347)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:725)\nroot cause\njava.util.NoSuchElementException\n\tjava.util.ArrayList$Itr.next(ArrayList.java:834)\n\torg.apache.jasper.compiler.Validator$ValidateVisitor.checkXmlAttributes(Validator.java:1132)\n\torg.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:879)\n\torg.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1521)\n\torg.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n\torg.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2413)\n\torg.apache.jasper.compiler.Node$Visitor.visit(Node.java:2419)\n\torg.apache.jasper.compiler.Node$Root.accept(Node.java:464)\n\torg.apache.jasper.compiler.Node$Nodes.visit(Node.java:2361)\n\torg.apache.jasper.compiler.Validator.validateExDirectives(Validator.java:1840)\n\torg.apache.jasper.compiler.Compiler.generateJava(Compiler.java:217)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:356)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:336)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:323)\n\torg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:564)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:357)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:403)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:347)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:725)\nnote The full stack trace of the root cause is available in the Apache Tomcat/@VERSION@ logs.\n\nBy looking into the source of Validator.java I observed that for the empty string we get the ELNode iterator but there isn't a check to see if the element has next node or not. The call ((ELNode.Text) el.iterator().next()).getText(); results in the above exception.\nI added a test to see if the element has next node and it worked fine.\nAttached is the patch for your reference.\n\nRegards,\nHariprasad", "bug_id": 56529, "attachment_id": 31628, "id": 175251, "time": "2014-05-15T16:33:45Z", "creator": "hariprasad007@gmail.com", "creation_time": "2014-05-15T16:33:45Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": 31629, "bug_id": 56529, "is_private": false, "id": 175252, "time": "2014-05-15T16:36:14Z", "creator": "hariprasad007@gmail.com", "creation_time": "2014-05-15T16:36:14Z", "tags": [], "text": "Created attachment 31629\nsample web application to see the exception.\n\nTry to load the loginex.jsp. You will see the exception."}, {"count": 2, "tags": [], "creator": "hariprasad007@gmail.com", "attachment_id": null, "is_private": false, "id": 175255, "time": "2014-05-15T16:40:17Z", "bug_id": 56529, "creation_time": "2014-05-15T16:40:17Z", "text": "I have also attached a sample web application to reproduce the issue."}, {"count": 3, "tags": [], "bug_id": 56529, "is_private": false, "id": 175272, "creation_time": "2014-05-16T12:22:11Z", "time": "2014-05-16T12:22:11Z", "creator": "violetagg@apache.org", "text": "Thanks for the report and the patch. This has been fixed in trunk for 8.0.7 and in 7.0.x for 7.0.54 onwards.", "attachment_id": null}, {"count": 4, "tags": [], "creator": "violetagg@apache.org", "attachment_id": null, "text": "Small correction: the fix is in 8.0.8", "id": 175294, "time": "2014-05-17T04:11:55Z", "bug_id": 56529, "creation_time": "2014-05-17T04:11:55Z", "is_private": false}, {"count": 5, "attachment_id": null, "creator": "rsanthakumar@gmail.com", "text": "Hi,\n\nI had the similar issues with the custom tag, even in the fixed code. It looks like the issue is fixed only in the method \u201ccheckXmlAttributes\u201d, but there is similar kind of the implementation even in the \u201cgetJspAttribute\u201d method of validator class.\n\nI am not sure whether it is an intended implementation, but it is throwing the following exception during the JSP compilation. The application started working once we fix the code in \u201cgetJspAttribute\u201d method\n\nException:\n\njava.util.NoSuchElementException\n\tat java.util.ArrayList$Itr.next(ArrayList.java:834)\n\tat org.apache.jasper.compiler.Validator$ValidateVisitor.getJspAttribute(Validator.java:1385)\n\tat org.apache.jasper.compiler.Validator$ValidateVisitor.checkXmlAttributes(Validator.java:1262)\n\tat org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:876)\n\tat org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1538)\n\nCode snippets from \u201cgetJSPAttribute\u201d\n\n1380                         if (el.containsEL()) {\n1381                             validateFunctions(el, n);\n1382                         } else {\n1383                             // Get text with \\$ and \\# escaping removed.\n1384                             // Should be a single Text node\n1385                             value = ((ELNode.Text) el.iterator().next())\n1386                                     .getText();\n1387                             el = null;\n1388                         }\n1389                     }\n\nRequest you to please look into this. \n\nThanks\nSanthakumar", "id": 175523, "time": "2014-05-28T13:19:40Z", "bug_id": 56529, "creation_time": "2014-05-28T13:19:40Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "creator": "violetagg@apache.org", "is_private": false, "count": 6, "id": 175531, "time": "2014-05-28T14:49:57Z", "bug_id": 56529, "creation_time": "2014-05-28T14:49:57Z", "text": "(In reply to rsanthakumar from comment #5)\n> Hi,\n> \n> I had the similar issues with the custom tag, even in the fixed code. It\n> looks like the issue is fixed only in the method \u201ccheckXmlAttributes\u201d, but\n> there is similar kind of the implementation even in the \u201cgetJspAttribute\u201d\n> method of validator class.\n> \nThis has been reported with bug 56561.\nThe fix will be available in 6.0.42, 7.0.55 and 8.0.9"}, {"count": 7, "tags": [], "bug_id": 56529, "is_private": false, "id": 177139, "creation_time": "2014-08-13T14:50:04Z", "time": "2014-08-13T14:50:04Z", "creator": "neale@nealeupstone.com", "text": "Can anyone identify which version the bug was introduced in pls.", "attachment_id": null}, {"count": 8, "tags": [], "creator": "neale@nealeupstone.com", "attachment_id": null, "text": "Found a 7.0.50 server to test on.  It's not broken in that version if that helps anyone.", "id": 177140, "time": "2014-08-13T15:07:13Z", "bug_id": 56529, "creation_time": "2014-08-13T15:07:13Z", "is_private": false}]