[{"count": 0, "attachment_id": 24737, "bug_id": 48414, "text": "Created attachment 24737\nSimple use of InstanceManager to create listener objects.\n\nIn the geronimo-tomcat7/osgi integration we're experiencing a problem with the use of Class.forName to load listener classes in StandardContext.createWrapper().  Geronimo has some listener classes that are not in the tomcat bundle and aren't available to Class.forName.  Using the instanceManager seems to work fine.\n\nIf you don't like allowing application classes to be loaded for these listeners or don't expect the instance manager to be able to load tomcat classes then perhaps adding another method to instanceManager to create system objects would be a good solution.  The attached patch just uses the existing InstanceManager methods.", "id": 132962, "time": "2009-12-19T17:05:31Z", "creator": "djencks@apache.org", "creation_time": "2009-12-19T17:05:31Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 48414, "is_private": false, "id": 132963, "time": "2009-12-19T17:06:29Z", "creator": "djencks@apache.org", "creation_time": "2009-12-19T17:06:29Z", "tags": [], "text": "This is also discussed in https://issues.apache.org/jira/browse/GERONIMO-4992"}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 132968, "time": "2009-12-19T19:40:39Z", "bug_id": 48414, "creation_time": "2009-12-19T19:40:39Z", "text": "Using the InstanceManager in this way feels more like a convenience since Germonimo's custom InstanceManager happens to have visibility across multiple bundles rather than the 'right' way to do things.\n\nI don't know the Geronimo code at all so can't say what the right solution would be but my impression based on this issue description is either the class loader hierarchy or the bundle contents needs tweaking.\n\nI'm leaning towards WONTFIX for this issue at the moment."}, {"count": 3, "attachment_id": null, "bug_id": 48414, "text": "Looking at the javadoc for Class.forName(String className) gives\nReturns the Class object associated with the class or interface with the given string name. Invoking this method is equivalent to:\n\n      Class.forName(className, true, currentLoader)\n     \n\nwhere currentLoader denotes the defining class loader of the current class.\n\nLets suppose we have catalina jar containing StandardContext, InstanceListener, ContainerListener, and NamingContextListener, and an integration jar containing \nGeronimoStandardContext extends StandardContext and \nDispatchListener implements InstanceListener\n\nFurthermore lets suppose these are separate bundles in an osgi environment (i.e. the integration bundle is not a fragment bundle extending catalina.jar, but a separate bundle) \n\nI did a little experimentation in the debugger.\n\nIt turns out that:\n1. Class.forName(String className)\n here means \nClass.forName(className, true, StandardContext.class.getClassLoader()) \nand not\nClass.forName(className, true, GeronimoStandardContext.class.getClassLoader())\neven though the current object is an instance of GeronimoStandardContext.\n\nSo, there is no chance of loading any classes from the integration bundle.  Replacing the code with Class.forName(className, true, StandardContext.class.getClassLoader()) won't work.\n\n2. replacing the code with \n\nClass.forName(className, true, GeronimoStandardContext.class.getName()) doesn't work either, since in osgi this classloader can only load classes from the jar GeronimoStandardContext is in, not catalina.jar.\n\nIf bundle is the Bundle for the integration jar, \nbundle.loadClass(className) does work for all listeners, whether from catalina or the integration.\n\nSo, AFAICT the choices are:\n\n1. Require any listeners in an osgi environment to be in fragment bundles associated with catalina.jar\n2. Allow some other way to load classes in an osgi environment, such as from an appropriate bundle.\n\nSince I'm not really interested in telling tomcat how to load classes for itself, I suggested using the existing integration point of InstanceManager which allows integrations to specify how to load classes for themselves.  I realize that the instance manager method in my patch allows access to application classes, and I'm not 100% sure of how tomcat distinguishes between system and application classes, so if it's a bad idea to allow applications to contain these listener classes, I suggested adding a newSystemInstance(String className) to the InstanceManager interface.  However I really hope you'll agree that only allowing extension listeners in fragment bundles is unnecessarily limiting.", "id": 132971, "time": "2009-12-20T02:28:54Z", "creator": "djencks@apache.org", "creation_time": "2009-12-20T02:28:54Z", "tags": [], "is_private": false}, {"count": 4, "attachment_id": 24798, "bug_id": 48414, "text": "Created attachment 24798\nhalf of patch to use new newSystemInstance InstanceManager method\n\nadd method to instance manager so system and app objects can be distinguished.  In two patches.", "id": 133348, "time": "2010-01-05T11:23:12Z", "creator": "djencks@apache.org", "creation_time": "2010-01-05T11:23:12Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 48414, "text": "Created attachment 24799\n2nd half of patch to use newSystemInstance for system objects\n\n2nd half of patch", "id": 133349, "time": "2010-01-05T11:24:12Z", "creator": "djencks@apache.org", "creation_time": "2010-01-05T11:24:12Z", "is_private": false, "attachment_id": 24799}, {"text": "IIRC there were two objections to the patch on the dev list:\n1. it doesn't cover all uses of Class.forName()\n2. it uses the per-web-app InstanceManager to create the system listeners for a web app rather than a system-wide object\nand it was suggested that injecting a system-wide classloader for reflective class loading would be a good solution.\n\nI'm willing to work on solving (1) and (2) through something like a system-wide instance manager, but not through direct use of a classloader.  If the developers insist on a classloader I'd suggest closing this as \"wont' fix\"", "tags": [], "bug_id": 48414, "is_private": false, "count": 6, "id": 133642, "time": "2010-01-16T00:28:28Z", "creator": "djencks@apache.org", "creation_time": "2010-01-16T00:28:28Z", "attachment_id": null}, {"count": 7, "attachment_id": null, "bug_id": 48414, "is_private": false, "id": 134151, "time": "2010-02-02T09:22:36Z", "creator": "markt@apache.org", "creation_time": "2010-02-02T09:22:36Z", "tags": [], "text": "The consensus among the Tomcat developers was that a classloader was the place to implement this. Therefore resolving as WONTFIX."}]