[{"count": 0, "attachment_id": 25930, "creator": "wesley.acheson@gmail.com", "is_private": false, "id": 139386, "time": "2010-08-23T14:26:28Z", "bug_id": 49811, "creation_time": "2010-08-23T14:26:28Z", "tags": [], "text": "Created attachment 25930\nAttachment adds a custom attribute to the context interface to disable url encoding/parsing of sessions.\n\nEncoding sessions in URLS is generally thought of as bad practice. Information on sessions can be passed out to third parties by the Referrer http header.  \n\nIt can also be problematic if a user of the application attempts to send out a link to their friends unwittingly passing their session information.\n\nThe original need for this patch was raised in http://marc.info/?t=128208259900001&r=1&w=2 on the users mailing list.\n\nThe attached patch allows users to enter an attribute on the Context to disable session url encoding and parsing, the attribute is allowURLSessions.  \n\nI attempted to change the documentation too but couldn't create a patch file from it, I think its in svn.ignore.\n\n\nI've tested locally by disabling session cookies for localhost and ensuring sessions were lost when the attribute was set to false.\n\nI've checked the URL's to ensure jsessionid doesn't appear in them.\n\nI've also checked that sessions where retained when this attribute was set to true or absent.\n\nFinally I've tested when the attribute is set to false and cookies are enabled to ensure sessions work in this senario.\n\n**NOTE** If this is set to false and cookies are denied no session information is retained."}, {"attachment_id": null, "tags": [], "creator": "wesley.acheson@gmail.com", "is_private": false, "count": 1, "id": 139387, "time": "2010-08-23T14:34:39Z", "bug_id": 49811, "creation_time": "2010-08-23T14:34:39Z", "text": "I don't know what importance to set so I've left at default.\n\nI've two simple JSP files to test this if wanted."}, {"count": 2, "tags": [], "text": "possible duplicate of #40222 ?", "is_private": false, "bug_id": 49811, "id": 139472, "time": "2010-08-25T16:00:32Z", "creator": "wesley.acheson@gmail.com", "creation_time": "2010-08-25T16:00:32Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 49811, "attachment_id": null, "is_private": false, "id": 139507, "time": "2010-08-26T17:48:19Z", "creator": "chris@christopherschultz.net", "creation_time": "2010-08-26T17:48:19Z", "text": "Unlikely duplicate of bug #40222: that one has to do with session id switching during authentication.\n\nSome comments on the patch:\n\nI would recommend calling this configuration attribute/parameter \"disableURLRewriting\" instead of \"allowURLSessions\". First, it includes the word \"rewriting\" which is what the servlet spec calls this, and second, it indicates that the default is that URL rewriting is ENABLED.\n\nThis, of course, requires that you invert the logic of the entire patch :)\n\nPlease mention in the Javadoc that by setting this config parameter to TRUE (that is, disabling URL rewriting), you are breaking the servlet specification (mention chapter and verse, just to be clear). It may even be worth writing to the log file during Context startup.\n\nAlso, spell-check your javadoc ;)\n\nYou should probably also change the URL-parsing code that accepts jsessionid parameters and have it ignore URL-supplied jsessionids, otherwise you aren't really preventing session hijacking... you're just limiting the damage stupidity can cause.\n\nOther than that, it looks good to me."}, {"count": 4, "tags": [], "creator": "wesley.acheson@gmail.com", "attachment_id": null, "id": 139509, "time": "2010-08-26T18:19:22Z", "bug_id": 49811, "creation_time": "2010-08-26T18:19:22Z", "is_private": false, "text": "(In reply to comment #3)\n> Unlikely duplicate of bug #40222: that one has to do with session id switching\n> during authentication.\n> \n\nGood I didn't think so but it did seem to conflict with the inital bug report.\n\n\n> I would recommend calling this configuration attribute/parameter\n> \"disableURLRewriting\" instead of \"allowURLSessions\". First, it includes the\n> word \"rewriting\" which is what the servlet spec calls this, and second, it\n> indicates that the default is that URL rewriting is ENABLED.\n\n100% agreed. I thought of this afterwards. Initally I thought it may clarify for people who don't read the entire docs to mention specifically what the effect was though.\n\n\n> Please mention in the Javadoc that by setting this config parameter to TRUE\n> (that is, disabling URL rewriting), you are breaking the servlet specification\n> (mention chapter and verse, just to be clear). It may even be worth writing to\n> the log file during Context startup.\n\nJavadoc agreed. I'll need to find the area of the document.\n\nlog message. I'm not sure when I put in debugging logs to the setter it was being called multiple times. I don't know where I would put it exactly.\n\n\n> \n> Also, spell-check your javadoc ;)\n\nOwch. Yeah I'm a bit dyslexic. 100% agree again though.\n\n> \n> You should probably also change the URL-parsing code that accepts jsessionid\n> parameters and have it ignore URL-supplied jsessionids, otherwise you aren't\n> really preventing session hijacking... you're just limiting the damage\n> stupidity can cause.\n\nOkay thats fair enough but I thought that I had :(\n\nSpecifically I thought the changes to CoyoteAdapter.java covered this.\n\n> Other than that, it looks good to me.\n\nThanks this is helpful."}, {"count": 5, "tags": [], "bug_id": 49811, "attachment_id": null, "is_private": false, "id": 139519, "time": "2010-08-27T09:47:16Z", "creator": "chris@christopherschultz.net", "creation_time": "2010-08-27T09:47:16Z", "text": "(In reply to comment #4)\n> > You should probably also change the URL-parsing code that accepts jsessionid\n> > parameters and have it ignore URL-supplied jsessionids, otherwise you aren't\n> > really preventing session hijacking... you're just limiting the damage\n> > stupidity can cause.\n> \n> Okay thats fair enough but I thought that I had :(\n> \n> Specifically I thought the changes to CoyoteAdapter.java covered this.\n\nOops, I think I must have missed that. I haven't reviewed the other code in those classes -- just your patch file. If you've found all the places where \"session\" and/or \"id\" (or even \";\") exist in those files, then you should be good."}, {"count": 6, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 139541, "time": "2010-08-29T11:18:42Z", "bug_id": 49811, "creation_time": "2010-08-29T11:18:42Z", "is_private": false, "text": "Overall this looks pretty good. Just some minor clean-up required before it is ready to be proposed for 6.0.x\n\n(In reply to comment #3)\n> I would recommend calling this configuration attribute/parameter\n> \"disableURLRewriting\" instead of \"allowURLSessions\". First, it includes the\n> word \"rewriting\" which is what the servlet spec calls this, and second, it\n> indicates that the default is that URL rewriting is ENABLED.\n+1\n\n> Please mention in the Javadoc that by setting this config parameter to TRUE\n> (that is, disabling URL rewriting), you are breaking the servlet specification\n> (mention chapter and verse, just to be clear).\n+1\n\n> It may even be worth writing to the log file during Context startup.\n-0\n\n> Also, spell-check your javadoc ;)\n+1\n\n> You should probably also change the URL-parsing code that accepts jsessionid\n> parameters and have it ignore URL-supplied jsessionids,\nThe proposed changes look sufficient to me."}, {"count": 7, "tags": [], "creator": "wesley.acheson@gmail.com", "attachment_id": null, "id": 139552, "time": "2010-08-30T06:30:03Z", "bug_id": 49811, "creation_time": "2010-08-30T06:30:03Z", "is_private": false, "text": "(In reply to comment #6)\n\n> > You should probably also change the URL-parsing code that accepts jsessionid\n> > parameters and have it ignore URL-supplied jsessionids,\n> The proposed changes look sufficient to me.\n\nActually there is an error in the existing patch where at the point where the details are read out of the context the context hasn't been attached to the request yet. \n\nBasically the null check that I did is always entered currently and the parsing always defaults to reading the sessionID.\n\nI'm working on a new patch once I figure out a reliable way to retrieve the context at this point."}, {"count": 8, "tags": [], "creator": "wesley.acheson@gmail.com", "attachment_id": 25961, "id": 139564, "time": "2010-08-30T15:35:12Z", "bug_id": 49811, "creation_time": "2010-08-30T15:35:12Z", "is_private": false, "text": "Created attachment 25961\nVersion 2 disableURLRewrite\n\nPatch v2 all suggestions implemented except for startup.  \n\nSpell checked javadoc.\nrenamed attribute disableURLRewrite\nfixed logical error parsing session id.\n\nI'm not a great fan of the way I've disabled parsing but I deemed it necessary as there would have been side effects from the previous method even if the context hadn't been null."}, {"count": 9, "tags": [], "creator": "wesley.acheson@gmail.com", "attachment_id": null, "id": 139792, "time": "2010-09-09T13:57:54Z", "bug_id": 49811, "creation_time": "2010-09-09T13:57:54Z", "is_private": false, "text": ">It was a good initiative and I'm sure we will have a look at the patch. Please be patient though. If you don't see any progress (comments in the Bugzilla issue), then it is fine to nag after about one or two weeks.\n\nEm: Nag.\n\nSeriously though I'm not 100% happy with this but there didn't seem to be a cheap way of getting the context reference at the point of URL parsing. Delaying the url parsing had side effects (for contexts which didn't disable urlRewriting).\n\nSo does this seem like a reasonable way to do it?"}, {"count": 10, "tags": [], "text": "Functionally, the patch looks good to me and I'd propose it for Tomcat if it wasn't for some minor cosmetic issues:\n- use 4 spaces rather than tabs\n- setDisableURLRewriting(boolean allow) is confusing. setDisableURLRewriting(boolean disable) would be better\n\nFix those and I'll propose it for 6.0.x", "attachment_id": null, "id": 139828, "creator": "markt@apache.org", "time": "2010-09-11T13:13:15Z", "bug_id": 49811, "creation_time": "2010-09-11T13:13:15Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 49811, "attachment_id": null, "is_private": false, "id": 139830, "time": "2010-09-11T13:27:48Z", "creator": "wesley.acheson@gmail.com", "creation_time": "2010-09-11T13:27:48Z", "text": "(In reply to comment #10)\n\n> - use 4 spaces rather than tabs\n\nEm do you have a style guide? If theres any code formatters I can use for eclipse that would be great. Then I can just use the format shortcut.\n\n> - setDisableURLRewriting(boolean allow) is confusing.\n> setDisableURLRewriting(boolean disable) would be better\n> \n+1"}, {"count": 12, "tags": [], "bug_id": 49811, "attachment_id": null, "is_private": false, "id": 139831, "time": "2010-09-11T13:39:50Z", "creator": "markt@apache.org", "creation_time": "2010-09-11T13:39:50Z", "text": "(In reply to comment #11)\n> Em do you have a style guide? If theres any code formatters I can use for\n> eclipse that would be great. Then I can just use the format shortcut.\n\n'fraid not. In short: no tabs, '{' at the end of lines, 80 char line length, spacing to hard to explain - as per existing files.\n\nThe tabs were the only issue I saw in your patch.\n\nIf you follow the style of the file you are editing you should be fine."}, {"count": 13, "tags": [], "text": "Created attachment 26018\nV3 with tabs fixed and parameter name on Context interface changed.\n\nV3 of the patch. Hopefully the last one.\n\nDoing a scan of the source reveals several java files that already begin with a tab.\n\nSearching for ^\\t", "is_private": false, "bug_id": 49811, "id": 139834, "time": "2010-09-11T17:54:00Z", "creator": "wesley.acheson@gmail.com", "creation_time": "2010-09-11T17:54:00Z", "attachment_id": 26018}, {"count": 14, "text": "(In reply to comment #13)\n> Created an attachment (id=26018) [details]\n> V3 with tabs fixed and parameter name on Context interface changed.\n> \n> V3 of the patch. Hopefully the last one.\n> \n> Doing a scan of the source reveals several java files that already begin with a\n> tab.\n> \n> Searching for ^\\t\n\nIts been two weeks. I guess I should stop nudging this, Its not a critical issue, but if you want any more changes let me know.", "bug_id": 49811, "is_private": false, "id": 140233, "time": "2010-09-27T13:57:52Z", "creator": "wesley.acheson@gmail.com", "creation_time": "2010-09-27T13:57:52Z", "tags": [], "attachment_id": null}, {"count": 15, "tags": [], "creator": "markt@apache.org", "attachment_id": 26135, "id": 140547, "time": "2010-10-07T06:56:09Z", "bug_id": 49811, "creation_time": "2010-10-07T06:56:09Z", "is_private": false, "text": "Created attachment 26135\nUpdated patch\n\nI have reviewed the patch and made a couple of changes. The updated patch is attached. I'll propose this updated patch for 6.0x. shortly.\n\nThe changes include: tabs -> 4 spaces, corrected mbean descriptor (also place in alphabetical order), shortened very long lines, \"specifications\" -> \"specification\" in the JavaDoc, in-lined a couple of methods where I felt it aided clarity."}, {"count": 16, "tags": [], "bug_id": 49811, "attachment_id": null, "is_private": false, "id": 140652, "time": "2010-10-10T19:28:52Z", "creator": "wesley.acheson@gmail.com", "creation_time": "2010-10-10T19:28:52Z", "text": "(In reply to comment #15)\n> Created an attachment (id=26135) [details]\n> Updated patch\n> \n> I have reviewed the patch and made a couple of changes. The updated patch is\n> attached. I'll propose this updated patch for 6.0x. shortly.\n> \n> The changes include: tabs -> 4 spaces, corrected mbean descriptor (also place\n> in alphabetical order), shortened very long lines, \"specifications\" ->\n> \"specification\" in the JavaDoc, in-lined a couple of methods where I felt it\n> aided clarity.\n\nThanks Mark,\n\nThought I'd got all the spaces."}, {"id": 141010, "tags": [], "bug_id": 49811, "is_private": false, "count": 17, "text": "This has been fixed in 6.0.x and will be included in 6.0.30 onwards.", "time": "2010-10-25T13:01:38Z", "creator": "markt@apache.org", "creation_time": "2010-10-25T13:01:38Z", "attachment_id": null}, {"count": 18, "tags": [], "creator": "slaurent@apache.org", "attachment_id": null, "id": 141871, "time": "2010-11-20T14:06:39Z", "bug_id": 49811, "creation_time": "2010-11-20T14:06:39Z", "is_private": false, "text": "*** Bug 50305 has been marked as a duplicate of this bug. ***"}, {"attachment_id": null, "tags": [], "creator": "slaurent@apache.org", "is_private": false, "count": 19, "id": 141872, "time": "2010-11-20T14:08:30Z", "bug_id": 49811, "creation_time": "2010-11-20T14:08:30Z", "text": "Why not porting this feature to tc7 ? even if servlet 3 apps can do it through web.xml, we should think of servlet 2 applications that are deployed in tc7..."}, {"count": 20, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 141889, "time": "2010-11-21T15:50:54Z", "bug_id": 49811, "creation_time": "2010-11-21T15:50:54Z", "tags": [], "text": "(In reply to comment #19)\n> Why not porting this feature to tc7 ?\nServlet 3.0 already supports it.\n\n> even if servlet 3 apps can do it through web.xml, we should think of servlet 2 applications that are deployed in tc7...\n\nThey can upgrade web.xml to Servlet 3.0 and add the session configuration.\n\nThere is already enough code around session parsing for Servlet 3.0 that there was a deliberate decision for Tomcat 7 to remove some of the configuration options that were available in Tomcat 6. The aim was to reduce code and configuration complexity. It would need a very convincing argument (and I haven't seen one yet) to convince me it was worth adding this to Tomcat 7."}]