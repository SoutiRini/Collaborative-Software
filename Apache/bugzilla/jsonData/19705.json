[{"attachment_id": null, "tags": [], "creator": "dpotter@mitre.org", "is_private": false, "count": 0, "id": 36770, "time": "2003-05-06T18:46:55Z", "bug_id": 19705, "creation_time": "2003-05-06T18:46:55Z", "text": "Newlines are currently allowed in the status message, breaking the HTTP/1.1\nresponse.  For example, when a JSP fails to compile, the exception message is\nembedded into the HTTP 500 status response.  However, since the exception\nmessage contains new lines, it comes out as follows:\n\nHTTP/1.1 500 Unable to compile class for JSP\nAn error occurred at line: -1 in the jsp file: null\n\nGenerated servlet error:\n[javac] Since fork is true, ignoring compiler setting.\n[javac] Compiling 1 source file\n\nAnd so on.  The problem occurs either with the \"An error occurred...\" line\n(since it isn't a valid HTTP/1.1 header) or with the double-newline between that\nline and the next line, which ends the HTTP header block.\n\nI'm not sure what the best solution is - it is apparent that newlines need to be\ndisallowed in the message.  My solution would be to have the newlines stripped\nfrom the message string.  Other options are to prevent the message with newlines\nfrom ever being set.  Regardless, this needs to be fixed since it has\ninteresting results on error pages when a JSP fails to compile."}, {"attachment_id": 6258, "tags": [], "creator": "dpotter@mitre.org", "text": "Created attachment 6258\nPatch to http11/src/java/org/apache/coyote/http11/InternalOutputBuffer.java", "count": 1, "id": 36824, "time": "2003-05-07T14:10:49Z", "bug_id": 19705, "creation_time": "2003-05-07T14:10:49Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 19705, "text": "I've attached a patch that appears to fix this in Coyote (and am changing the\ncomponent to the Coyote connector).  Bear in mind similar code exists in the\nCatalina class org.apache.catalina.connector.HttpResponseBase, but I haven't\nfound any code that actually uses it so I can't test it.\n\nThis patch appears to work in my simple tests.  It removes anything after the\nfirst LF or CR in the message string, preventing clients from receiving a badly\nformed HTTP/1.1 response.", "count": 2, "id": 36827, "time": "2003-05-07T14:14:56Z", "creator": "dpotter@mitre.org", "creation_time": "2003-05-07T14:14:56Z", "is_private": false}, {"attachment_id": 8336, "tags": [], "creator": "dpotter@mitre.org", "text": "Created attachment 8336\nFixes bad characters in the status message", "count": 3, "id": 44613, "time": "2003-09-24T21:24:42Z", "bug_id": 19705, "creation_time": "2003-09-24T21:24:42Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 19705, "attachment_id": null, "id": 44614, "creation_time": "2003-09-24T21:29:32Z", "time": "2003-09-24T21:29:32Z", "creator": "dpotter@mitre.org", "text": "This bug hasn't been touched in months, but I've done a new patch against the\nlatest CVS code available through the anonymous CVS system and it fixes the\nerror not just for newline characters but it also removes any character that is\ninvalid according to the HTTP spec.\n\nBasically, it chops the message off at the first \\n or \\r it encounters, and\nthen removes any character that's outside the range of [32..127] (except 9,\nwhich is the horizontal tab and is allowed) and replaces them with a \"?\".  This\n\"sanitizes\" the message and ensures that the HTTP response returned is valid.\n\nI didn't do anything to the headers that are then displayed, only the status\nline to fix the specific bug where an ANT error message is returned, breaking\nthe HTTP response.  However, something probably should be done (probably when\nthe headers are set?) to prevent invalid characters from being set as HTTP\nheader names and HTTP header values.", "is_private": false}, {"count": 5, "tags": [], "bug_id": 19705, "attachment_id": null, "id": 44615, "creation_time": "2003-09-24T21:40:43Z", "time": "2003-09-24T21:40:43Z", "creator": "remm@apache.org", "text": "This had been fixed in CVS.", "is_private": false}]