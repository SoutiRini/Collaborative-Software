[{"count": 0, "tags": [], "bug_id": 58489, "attachment_id": 33177, "is_private": false, "id": 185701, "time": "2015-10-08T14:08:49Z", "creator": "havelj1@gmail.com", "creation_time": "2015-10-08T14:08:49Z", "text": "Created attachment 33177\nJUnit test to show the exception\n\nOverview: \n\nQueryStatsComparator may throw java.lang.IllegalArgumentException: Comparison method violates its general contract! \nThis happens in specific situations depending on the data in the reported queries. In our environment this occurs every time we keep the server running until the maxCapacity (1000 items) is reached and the removeOldest method is called. I have managed to narrow down the test data from more than 1000 records to around 40 items and created a JUnit test to showcase the error. I needed to copy some parts out of the SlowQueryReport class and made some simplifications as the QueryStatsComparator is not reachable from outside.\n\nSteps to Reproduce: \n\nPlease use the attached JUnit source code to reproduce this error.\n\nAdditional Builds and Platforms: \n\nThis bug seems to happen on all platforms.\nWe are using Tomcat 8, tomcat-dbcp 8.0.24, JDK 1.80.0_60.\n\nAdditional Information: \n\nIt seems to be a problem of the first two lines of the QueryStatsComparator. Note that a single change in the data of the unit test may cause the Exception not to occur.\n\nStacktrace:\n\njava.lang.IllegalArgumentException: Comparison method violates its general contract!\n\tat java.util.TimSort.mergeLo(TimSort.java:773)\n\tat java.util.TimSort.mergeAt(TimSort.java:510)\n\tat java.util.TimSort.mergeCollapse(TimSort.java:435)\n\tat java.util.TimSort.sort(TimSort.java:241)\n\tat java.util.Arrays.sort(Arrays.java:1512)\n\tat java.util.ArrayList.sort(ArrayList.java:1454)\n\tat java.util.Collections.sort(Collections.java:175)\n\tat org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport.removeOldest(SlowQueryReport.java:218)\n\tat org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport.getQueryStats(SlowQueryReport.java:205)\n\tat org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport.reportQuery(SlowQueryReport.java:119)\n\tat org.apache.tomcat.jdbc.pool.interceptor.AbstractQueryReport$StatementProxy.invoke(AbstractQueryReport.java:254)"}, {"count": 1, "text": "SlowQueryReport.java line 478 is the reason for this crash. compare(x,x) should not return 1.\n\nif (stats1.lastInvocation == 0 && stats2.lastInvocation != 0) return 1;", "creator": "remy.tiitre@lhv.ee", "is_private": false, "id": 185753, "time": "2015-10-14T11:23:40Z", "bug_id": 58489, "creation_time": "2015-10-14T11:23:40Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 58489, "attachment_id": null, "id": 185757, "time": "2015-10-15T10:42:45Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2015-10-15T10:42:45Z", "is_private": false, "text": "Thanks for the report.\n\nWill be fixed with 8.0.29. Maybe you could give the trunk of tomcat 8 a try?"}, {"count": 3, "text": "I forgot to mention that it affects the Tomcat 7 as well. (Thats where I have this issue right now). I think the bug was introduced with 7.0.63 release.", "bug_id": 58489, "is_private": false, "id": 185758, "time": "2015-10-15T10:46:12Z", "creator": "remy.tiitre@lhv.ee", "creation_time": "2015-10-15T10:46:12Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "text": "I have ported the fix back to tomcat 7 as well. It will be in tomcat 7.0.66.\n\nAnd again it would be nice, if you could test the current trunk of tomcat 7.", "attachment_id": null, "id": 185759, "creator": "felix.schumacher@internetallee.de", "time": "2015-10-15T10:59:01Z", "bug_id": 58489, "creation_time": "2015-10-15T10:59:01Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 58489, "attachment_id": 34060, "id": 192558, "time": "2016-07-21T16:12:47Z", "creator": "ns142e@att.com", "creation_time": "2016-07-21T16:12:47Z", "is_private": false, "text": "Created attachment 34060\nTomcat-7.0.68 - Caused by: java.lang.IllegalArgumentException: Comparison method violates its general contract!"}, {"count": 6, "tags": [], "text": "Comment on attachment 34060\nTomcat-7.0.68 - Caused by: java.lang.IllegalArgumentException: Comparison method violates its general contract!\n\nWe are facing same exception in our env\u2019s when we have upgraded our setup from: \n\n\tFrom :\n\t\tJava : jdk1.6.0_45\n\t\tJava Apache Tomcat Version 7.0.37 \nTo \n\t\tJava : jdk1.8.0_92\n\t\tJava Apache Tomcat Version 7.0.68\n\n\nSample SQL which during which this exception occurred :\nSELECT DISTINCT c.comp_id AS dbkey\nFROM\n  equipment e,\n  component c\nWHERE\n  e.equip_id = c.equip_id AND\n((e.ptnii_equip_name = 'cl2oh406me3' AND c.beg_slot = 7) AND trunc(c.port/1000)-1 = '2') AND mod(c.port, 1000) = 0\n\nJFYI : Result I see in TOAD by directly executing above SQL is only 1 record with value as :\n\t\t1166506\n\nCaused by: java.lang.IllegalArgumentException: Comparison method violates its general contract!\n        at java.util.TimSort.mergeLo(TimSort.java:777)\n        at java.util.TimSort.mergeAt(TimSort.java:514)\n        at java.util.TimSort.mergeCollapse(TimSort.java:439)\n        at java.util.TimSort.sort(TimSort.java:245)\n        at java.util.Arrays.sort(Arrays.java:1512)\n        at java.util.ArrayList.sort(ArrayList.java:1454)\n        at java.util.Collections.sort(Collections.java:175)\n        at org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport.removeOldest(SlowQueryReport.java:213)\n        at org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport.getQueryStats(SlowQueryReport.java:200)\n        at org.apache.tomcat.jdbc.pool.interceptor.SlowQueryReport.reportQuery(SlowQueryReport.java:110)\n        at org.apache.tomcat.jdbc.pool.interceptor.AbstractQueryReport$StatementProxy.invoke(AbstractQueryReport.java:256)\n        at com.sun.proxy.$Proxy666.executeQuery(Unknown Source)\n        at sun.reflect.GeneratedMethodAccessor4273.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at org.apache.tomcat.jdbc.pool.interceptor.AbstractQueryReport$StatementProxy.invoke(AbstractQueryReport.java:235)\n        at com.sun.proxy.$Proxy666.executeQuery(Unknown Source)\n        at com.att.lpp.pa.core.asset.dao.AssetSearchDaoImpl.findAssetDbkeys(AssetSearchDaoImpl.java:116)", "attachment_id": 34060, "id": 192559, "creator": "ns142e@att.com", "time": "2016-07-21T16:13:24Z", "bug_id": 58489, "creation_time": "2016-07-21T16:13:24Z", "is_private": false}, {"count": 7, "text": "I believe this can happen, when the QueryStats change while the list of stats get sorted.\n\nI see three ways to go:\n 1. add synchronization, so that the stats don't change while the list gets sorted\n 2. extract the information to sort on from the QueryStats and sort on that information\n 3. make QueryStats immutable and change the QueryStats instances, when the stats gets updated\n\nThe first path probably will slow down the execution of jdbc calls.\nThe second one will be more memory intensive, but relatively simple to implement. \nThe third seems to be the one where we would have to do the most work.\n\nI tend to go for option two. What do you think?", "bug_id": 58489, "is_private": false, "id": 192593, "time": "2016-07-24T10:30:39Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2016-07-24T10:30:39Z", "tags": [], "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 58489, "attachment_id": null, "id": 192595, "time": "2016-07-24T10:31:43Z", "creator": "felix.schumacher@internetallee.de", "creation_time": "2016-07-24T10:31:43Z", "is_private": false, "text": "*** Bug 59890 has been marked as a duplicate of this bug. ***"}, {"count": 9, "tags": [], "bug_id": 58489, "is_private": false, "text": "We still suffer from this on Tomcat 8.5.x. I would go for option two as Felix has proposed.", "id": 200214, "time": "2017-08-07T12:14:41Z", "creator": "1983-01-06@gmx.net", "creation_time": "2017-08-07T12:14:41Z", "attachment_id": null}]