[{"count": 0, "tags": [], "bug_id": 36483, "attachment_id": null, "is_private": false, "id": 79352, "time": "2005-09-03T01:22:27Z", "creator": "j.lolling@t-online.de", "creation_time": "2005-09-03T01:22:27Z", "text": "The methode DOMUtilities.contentToString do not convert german umlauts.\nI suggest to change this methode like this:\n\n    public static String contentToString(String s) {\n        StringBuffer result = new StringBuffer();\n\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\n            switch (c) {\n            case '<':\n                result.append(\"&#60;\");\n                break;\n            case '>':\n                result.append(\"&#62;\");\n                break;\n            case '&':\n                result.append(\"&#38;\");\n                break;\n            case '\"':\n                result.append(\"&#34;\");\n                break;\n            case '\\'':\n                result.append(\"&#39;\");\n                break;\n            case '\u00e4':\n                result.append(\"&#228;\");\n                break;\n            case '\u00c4':\n                result.append(\"&#196;\");\n                break;\n            case '\u00fc':\n                result.append(\"&#252;\");\n                break;\n            case '\u00dc':\n                result.append(\"&#220;\");\n                break;\n            case '\u00f6':\n                result.append(\"&#246;\");\n                break;\n            case '\u00d6':\n                result.append(\"&#214;\");\n                break;\n            case '\u00df':\n                result.append(\"&#223;\");\n                break;\n            default:\n                result.append(c);\n            }\n        }\n        \n        return result.toString();\n    }"}, {"count": 1, "tags": [], "text": "The purpose of 'contentToString' is to protect XML meta-characters.\nIt is the job of the output Writer encoding to handle 8bit chars.\nI suspect that you are getting the default encoding which is UTF-8\nyou may want to construct an OutputStreamWriter with an encoding\nlike 'ISO-8859-1'.\n\nIt is certainly not correct to map chars in this way.", "attachment_id": null, "bug_id": 36483, "id": 79354, "time": "2005-09-03T01:52:17Z", "creator": "deweese@apache.org", "creation_time": "2005-09-03T01:52:17Z", "is_private": false}]