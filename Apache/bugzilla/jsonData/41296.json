[{"count": 0, "tags": [], "creator": "andreas@apache.org", "text": "The \"Checkin\" menu item in the site area causes an exception:\n\norg.apache.cocoon.ResourceNotFoundException: No pipeline matched request:\ndefault/info-authoring/doctypes_de.html\n\tat\norg.apache.cocoon.components.treeprocessor.sitemap.PipelineNode.invoke(PipelineNode.java:149)\n\tat\norg.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69)\n\tat\norg.apache.cocoon.components.treeprocessor.sitemap.PipelinesNode.invoke(PipelinesNode.java:93)\n\tat\norg.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:235)\n\tat\norg.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:177)\n\tat\norg.apache.cocoon.components.treeprocessor.TreeProcessor.process(TreeProcessor.java:253)\n\tat\norg.apache.cocoon.components.treeprocessor.sitemap.MountNode.invoke(MountNode.java:118)\n\tat\norg.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:47)\n\tat\norg.apache.cocoon.components.treeprocessor.sitemap.MatchNode.invoke(MatchNode.java:108)\n\tat\norg.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69)\n\tat\norg.apache.cocoon.components.treeprocessor.sitemap.PipelineNode.invoke(PipelineNode.java:143)\n\tat\norg.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69)\n\tat\norg.apache.cocoon.components.treeprocessor.sitemap.PipelinesNode.invoke(PipelinesNode.java:93)\n\tat\norg.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:235)\n\tat\norg.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:177)\n\tat\norg.apache.cocoon.components.treeprocessor.TreeProcessor.process(TreeProcessor.java:253)\n\tat\norg.apache.cocoon.components.treeprocessor.sitemap.MountNode.invoke(MountNode.java:118)\n\tat\norg.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:47)\n\tat\norg.apache.cocoon.components.treeprocessor.sitemap.ActTypeNode.invoke(ActTypeNode.java:139)\n\tat\norg.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:47)\n\tat\norg.apache.cocoon.components.treeprocessor.sitemap.MatchNode.invoke(MatchNode.java:108)\n\tat\norg.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69)\n\tat\norg.apache.cocoon.components.treeprocessor.sitemap.PipelineNode.invoke(PipelineNode.java:143)\n\tat\norg.apache.cocoon.components.treeprocessor.AbstractParentProcessingNode.invokeNodes(AbstractParentProcessingNode.java:69)\n\tat\norg.apache.cocoon.components.treeprocessor.sitemap.PipelinesNode.invoke(PipelinesNode.java:93)\n\tat\norg.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:235)\n\tat\norg.apache.cocoon.components.treeprocessor.ConcreteTreeProcessor.process(ConcreteTreeProcessor.java:177)\n\tat\norg.apache.cocoon.components.treeprocessor.TreeProcessor.process(TreeProcessor.java:253)\n\tat org.apache.cocoon.Cocoon.process(Cocoon.java:699)\n\tat org.apache.cocoon.servlet.CocoonServlet.service(CocoonServlet.java:1154)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:358)\n\tat\norg.mortbay.jetty.servlet.WebApplicationHandler.dispatch(WebApplicationHandler.java:294)\n\tat org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:567)\n\tat org.mortbay.http.HttpContext.handle(HttpContext.java:1807)\n\tat\norg.mortbay.jetty.servlet.WebApplicationContext.handle(WebApplicationContext.java:525)\n\tat org.mortbay.http.HttpContext.handle(HttpContext.java:1757)\n\tat org.mortbay.http.HttpServer.service(HttpServer.java:879)\n\tat org.mortbay.http.HttpConnection.service(HttpConnection.java:789)\n\tat org.mortbay.http.HttpConnection.handleNext(HttpConnection.java:960)\n\tat org.mortbay.http.HttpConnection.handle(HttpConnection.java:806)\n\tat org.mortbay.http.SocketListener.handleConnection(SocketListener.java:218)\n\tat org.mortbay.util.ThreadedServer.handle(ThreadedServer.java:300)\n\tat org.mortbay.util.ThreadPool$PoolThread.run(ThreadPool.java:511)", "id": 97681, "time": "2007-01-05T01:50:15Z", "bug_id": 41296, "creation_time": "2007-01-05T01:50:15Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 41296, "text": "Adding a usecase-forcecheckin.xmap file fixes ths problem.", "id": 97812, "time": "2007-01-09T03:05:59Z", "creator": "jann.forrer@id.unizh.ch", "creation_time": "2007-01-09T03:05:59Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "andreas@apache.org", "attachment_id": null, "id": 97814, "time": "2007-01-09T03:55:07Z", "bug_id": 41296, "creation_time": "2007-01-09T03:55:07Z", "is_private": false, "text": "Thanks!\n\nBut now it gives\njava.lang.ClassNotFoundException:\norg.apache.lenya.cms.cocoon.acting.ForcedCheckInAction\n\nThe repo contains a ForceCheckInAction.java (\"Force\" in contrast to \"Forced\"),\nmaybe the sitemap contains a typo."}, {"count": 3, "tags": [], "creator": "jann.forrer@id.unizh.ch", "attachment_id": null, "text": "Not a typo, but I had publication specific class called ForcedCheckInAction.\nTherefore it worked for me. Now the checkin should work :-)", "id": 97815, "time": "2007-01-09T04:14:40Z", "bug_id": 41296, "creation_time": "2007-01-09T04:14:40Z", "is_private": false}, {"count": 4, "tags": [], "text": "Thanks again, but:\n\nava.io.FileNotFoundException:\n/Users/nobby/apache/lenya/branches/BRANCH_1_2_X/build/lenya/webapp/lenya/pubs/default/../unizh/xslt/info/forcecheckin.xsl\n\n\n:)", "attachment_id": null, "id": 97816, "creator": "andreas@apache.org", "time": "2007-01-09T04:18:53Z", "bug_id": 41296, "creation_time": "2007-01-09T04:18:53Z", "is_private": false}, {"count": 5, "tags": [], "creator": "jann.forrer@id.unizh.ch", "attachment_id": null, "text": "Aiaiai .... sorry for these hasty commits :-(  and thanks for testing. \nNext modification: using fallback instead of refering to the unizh publication\nfor the xslt. \nI let the bug open. There might be other stuff i forgot ;-)\nHowever i did build this time without my own publications!", "id": 97824, "time": "2007-01-09T05:51:34Z", "bug_id": 41296, "creation_time": "2007-01-09T05:51:34Z", "is_private": false}, {"count": 6, "tags": [], "text": "It looks good now, thanks :)\n\nJust a question:\nWhy is the menu item only available in the site area? I guess it is most\nfrequently needed in the authoring area, when editing a document fails because\nit is checked out by another user, isn't it?", "is_private": false, "bug_id": 41296, "id": 97826, "time": "2007-01-09T06:36:47Z", "creator": "andreas@apache.org", "creation_time": "2007-01-09T06:36:47Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "jann.forrer@id.unizh.ch", "attachment_id": null, "text": "Adding the checkin menu entry in the site area only was a compromise. It should\nnot be accessible to easily because we dont have the information whether the\nuser, which has locked the document, is still logged in. That can lead to a\nsituation where user A is working on a Document and user B did check in the same\ndocument and possibly starts editing it too. \n\nHowever I am not sure what's the best kind to handle this problem? Any ideas?\n\nBTW, we offer this feature since a long time and did not have any troubles (but\nwe offer instructions for cms users).  ", "id": 97871, "time": "2007-01-10T02:35:38Z", "bug_id": 41296, "creation_time": "2007-01-10T02:35:38Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 41296, "text": "I guess the forced check-in is most frequently needed when the user is\nconfronted with the error message \"The document is checked out by another user\".\nIMO it would be convenient to put a button \"Force Check-In\" on this error\nscreen. WDYT?", "id": 97872, "time": "2007-01-10T02:38:53Z", "creator": "andreas@apache.org", "creation_time": "2007-01-10T02:38:53Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "text": "I think for 1.2 this is not a appropriate solution because it will frequently\nhappen that user A tries to edit a docuemt which is checked out and edited by\nuser B. User A will simply click on checkin (then start editing)..... poor user\nB if he continous editing ;-)  \nWe could check for the time when the document is checked out. If the difference\nto the actual time is greater than a given time (e.g. the session timeout) we\ncan offer to check in the document. This will not prevent the situation\ndescribed above to hapen but makes it  more unlikely.\n\nBTW in 1.4 we have a session listener. That means we can decide whether a user\nwhich has checked out a document has sill an open session :-)\n ", "is_private": false, "bug_id": 41296, "id": 97893, "time": "2007-01-10T07:05:53Z", "creator": "jann.forrer@id.unizh.ch", "creation_time": "2007-01-10T07:05:53Z", "attachment_id": null}, {"count": 10, "tags": [], "creator": "andreas@apache.org", "attachment_id": null, "text": "OK - I guess we can close this one.", "id": 97900, "time": "2007-01-10T08:06:07Z", "bug_id": 41296, "creation_time": "2007-01-10T08:06:07Z", "is_private": false}]