[{"count": 0, "tags": [], "bug_id": 54162, "is_private": false, "text": "Different sites on my server use different TCL-modules (result of consolidation) and the two do not coexist well causing frequent crashes in during Apache's cleanups. Apparently, both attempt to free certain bits and pieces inside Tcl\n\nHere is the typical output from valgrind. To reproduce, run \"valgrind httpd -X\" and then kill (not with -9!) the httpd process to trigger the cleanups:\n\n==51407== Invalid read of size 8\n==51407==    at 0x6744544: TclFreeObj (tclObj.c:1461)\n==51407==    by 0x677DC5D: FreeVarEntry (tclVar.c:5578)\n==51407==    by 0x6712919: Tcl_DeleteHashEntry (tclHash.c:463)\n==51407==    by 0x677C131: TclDeleteNamespaceVars (tclVar.c:4465)\n==51407==    by 0x67398B5: TclTeardownNamespace (tclNamesp.c:1070)\n==51407==    by 0x6693772: DeleteInterpProc (tclBasic.c:1261)\n==51407==    by 0x675586A: Tcl_EventuallyFree (tclPreserve.c:298)\n==51407==    by 0x6693699: Tcl_DeleteInterp (tclBasic.c:1183)\n==51407==    by 0x6432001: destroyPool (interpool.c:691)\n==51407==    by 0x6432666: exit_websh_pool (mod_websh.c:128)\n==51407==    by 0x1538A9C: run_cleanups (apr_pools.c:2346)\n==51407==    by 0x153951D: apr_pool_destroy (apr_pools.c:809)\n==51407==  Address 0x6ba23e0 is 0 bytes inside a block of size 8 free'd\n==51407==    at 0x259373: free (in /opt/lib/valgrind/vgpreload_memcheck-amd64-freebsd.so)\n==51407==    by 0x6692219: TclpFree (tclAlloc.c:723)\n==51407==    by 0x669EA40: Tcl_Free (tclCkalloc.c:1217)\n==51407==    by 0x6769493: TclFinalizeSynchronization (tclThread.c:398)\n==51407==    by 0x66F9A2D: Tcl_Finalize (tclEvent.c:1154)\n==51407==    by 0x68CD169: Rivet_ChildExit (mod_rivet.c:1352)\n==51407==    by 0x1538A9C: run_cleanups (apr_pools.c:2346)\n==51407==    by 0x153951D: apr_pool_destroy (apr_pools.c:809)\n==51407==    by 0x153950B: apr_pool_destroy (apr_pools.c:806)\n==51407==    by 0x153950B: apr_pool_destroy (apr_pools.c:806)\n==51407==    by 0x422D26: destroy_and_exit_process (main.c:270)\n==51407==    by 0x4237E9: main (main.c:760)", "id": 163503, "time": "2012-11-18T08:18:49Z", "creator": "mi+apache@aldan.algebra.com", "creation_time": "2012-11-18T08:18:49Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 54162, "is_private": false, "text": "If I well understand the problem is triggered by the release of an APR pool. In Rivet_ChildInit we register the module cleanup exploiting the pool cleanup.\n\napr_pool_cleanup_register (pChild, s, Rivet_ChildExit, Rivet_ChildExit);\n\nI guess Websh is doing the same and pChild is a pool passed by the webserver framework. Separating these pools my work out a solution?", "id": 164950, "time": "2013-01-30T23:41:59Z", "creator": "mxmanghi@apache.org", "creation_time": "2013-01-30T23:41:59Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Yes, Websh does the same. But then, that's the whole idea of registering with a pool.\n\nBut what I'm not sure about is: Rivet_ChildExit calls Tcl_Finalize and then Websh tries to Tcl_DeleteInterp and stuff. Is that supposed to work? Does Tcl_Finalize more than calling the registered (thread) exit handlers? Can Websh safely still  use Tcl after you called Tcl_Finalize?\n\nI also noticed that Websh doesn't properly use Tcl_Preserve and Tcl_Release on interps retrieved from data structures. Could that be an issue? (like trying to Tcl_DeleteInterp an already deleted interp? ...)", "attachment_id": null, "bug_id": 54162, "id": 165090, "time": "2013-02-05T20:26:18Z", "creator": "ronnie.brunner@netcetera.ch", "creation_time": "2013-02-05T20:26:18Z", "is_private": false}, {"count": 3, "tags": [], "text": "Another question is why even bother with the clean-up, if the current httpd process is exiting? Granted, this fact may not be easy to detect, but it may be worth trying...", "attachment_id": null, "bug_id": 54162, "id": 165091, "time": "2013-02-05T20:41:08Z", "creator": "mi+apache@aldan.algebra.com", "creation_time": "2013-02-05T20:41:08Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 54162, "attachment_id": 29923, "is_private": false, "id": 165095, "time": "2013-02-05T23:01:07Z", "creator": "mi+apache@aldan.algebra.com", "creation_time": "2013-02-05T23:01:07Z", "text": "Created attachment 29923\nDelete our own interpreter instead of calling Tcl_Finalize\n\nMaybe, instead of calling Tcl_Finalize -- which makes it impossible to libtcl in the process again, rivet should limit itself to deleting just the interpreter it created?\n\nThen everyone should be happy..."}, {"count": 5, "tags": [], "text": "(In reply to comment #4)\n> Created attachment 29923 [details]\n> Delete our own interpreter instead of calling Tcl_Finalize\n> \n> Maybe, instead of calling Tcl_Finalize -- which makes it impossible to\n> libtcl in the process again, rivet should limit itself to deleting just the\n> interpreter it created?\n> \n> Then everyone should be happy...\n\nIt's probably so, separating the pools wouldn't make any difference because Tcl is not allocating from it and moreover you're corrent in saying that if the child process is exiting where is the point of calling Tcl_Finalize as log as we are using prefork as MPM. \n\n Mikhail, please, would you test on your installation if this should work out a solution? After all your set up seems to be the de-facto standard for the reproducibility of the bug.", "attachment_id": null, "id": 165112, "creator": "mxmanghi@apache.org", "time": "2013-02-06T23:42:18Z", "bug_id": 54162, "creation_time": "2013-02-06T23:42:18Z", "is_private": false}, {"count": 6, "tags": [], "creator": "mxmanghi@apache.org", "attachment_id": null, "id": 165209, "time": "2013-02-12T17:04:28Z", "bug_id": 54162, "creation_time": "2013-02-12T17:04:28Z", "is_private": false, "text": "I reiterate my request for cooperation to Mikhail: please, are you willing to test a modified rivet code where the call to Tcl_Finalized is removed to see if it cures this fault? If you could help me doing it I could close the bug and include the fix in the next patchlevel release of Rivet, thanks"}, {"count": 7, "attachment_id": 29944, "creator": "mi+apache@aldan.algebra.com", "text": "Created attachment 29944\nDo not call Tcl_Finalize in Rivet_ChildExit\n\nInterpreter-deletion is, actually, already done by Rivet_ChildHandlers(). Thus, all that's needed is to simply stop calling Tcl_Finalize.\n\nTested (under valgrind) on FreeBSD-9.1/amd64.", "id": 165210, "time": "2013-02-12T17:59:25Z", "bug_id": 54162, "creation_time": "2013-02-12T17:59:25Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "mxmanghi@apache.org", "attachment_id": null, "id": 165218, "time": "2013-02-12T21:54:10Z", "bug_id": 54162, "creation_time": "2013-02-12T21:54:10Z", "is_private": false, "text": "fixed in trunk"}]