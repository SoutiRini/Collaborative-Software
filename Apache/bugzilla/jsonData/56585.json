[{"attachment_id": null, "tags": [], "bug_id": 56585, "text": "I have an issue with invoking the autoSizeColumn() method in poi-ooxml-3.10-FINAL-20140208.jar.\n\nIn my code after I'm done generating the data,  I want to auto-resize all the columns,  so I have a very simple routine: \n\nfor(int i = 0; i < 5; i++) {\n  sheet.autoSizeColumn(i);\n}\n\nWhen this code runs on the server, the first call to sheet.autoSizeColumn(i) results in an error:\n\nException in thread \"main\" java.lang.Error: Probable fatal error:No fonts found.\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1090)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n        at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n        at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n        at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n        at sun.font.FontManager.findFont2D(FontManager.java:1915)\n        at sun.font.FontManager.findFont2D(FontManager.java:1876)\n        at java.awt.Font.getFont2D(Font.java:477)\n        at java.awt.Font.canDisplayUpTo(Font.java:2038)\n        at java.awt.font.TextLayout.singleFont(TextLayout.java:469)\n        at java.awt.font.TextLayout.<init>(TextLayout.java:527)\n        at org.apache.poi.ss.util.SheetUtil.getColumnWidth(SheetUtil.java:208)\n        at org.apache.poi.xssf.usermodel.XSSFSheet.autoSizeColumn(XSSFSheet.java:386)\n        at org.apache.poi.xssf.usermodel.XSSFSheet.autoSizeColumn(XSSFSheet.java:369)\n        at com.poi.mor.writers.MORVirtDetailsExcelWriter.recalcWidthsESTATE_EFF_DEV_VIRT_MAIN(MORVirtDetailsExcelWriter.java:277)\n\n\n\nI finally was able to resolve this issue by installing some fonts on the server issuing the command:\n\nyum install dejavu-lgc-fonts", "count": 0, "id": 175605, "time": "2014-06-02T20:06:41Z", "creator": "michael.melamed@citi.com", "creation_time": "2014-06-02T20:06:41Z", "is_private": false}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "text": "In order to size the column, POI needs to work out how much space each letter takes up, which in turn means using the Java font libraries to calculate the spacing. As such, having fonts both installed *and* available to the JVM is a requirement for this to work.", "id": 175608, "time": "2014-06-02T20:24:45Z", "bug_id": 56585, "creation_time": "2014-06-02T20:24:45Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 56585, "attachment_id": null, "text": "(In reply to michael.melamed from comment #0)\n> I have an issue with invoking the autoSizeColumn() method in\n> poi-ooxml-3.10-FINAL-20140208.jar.\n> \n> In my code after I'm done generating the data,  I want to auto-resize all\n> the columns,  so I have a very simple routine: \n> \n> for(int i = 0; i < 5; i++) {\n>   sheet.autoSizeColumn(i);\n> }\n> \n> When this code runs on the server, the first call to sheet.autoSizeColumn(i)\n> results in an error:\n> \n> Exception in thread \"main\" java.lang.Error: Probable fatal error:No fonts\n> found.\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1090)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.getDefaultPhysicalFont(FontManager.java:1073)\n>         at sun.font.FontManager.initialiseDeferredFont(FontManager.java:962)\n>         at sun.font.FontManager.findOtherDeferredFont(FontManager.java:901)\n>         at sun.font.FontManager.findDeferredFont(FontManager.java:918)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1915)\n>         at sun.font.FontManager.findFont2D(FontManager.java:1876)\n>         at java.awt.Font.getFont2D(Font.java:477)\n>         at java.awt.Font.canDisplayUpTo(Font.java:2038)\n>         at java.awt.font.TextLayout.singleFont(TextLayout.java:469)\n>         at java.awt.font.TextLayout.<init>(TextLayout.java:527)\n>         at\n> org.apache.poi.ss.util.SheetUtil.getColumnWidth(SheetUtil.java:208)\n>         at\n> org.apache.poi.xssf.usermodel.XSSFSheet.autoSizeColumn(XSSFSheet.java:386)\n>         at\n> org.apache.poi.xssf.usermodel.XSSFSheet.autoSizeColumn(XSSFSheet.java:369)\n>         at\n> com.poi.mor.writers.MORVirtDetailsExcelWriter.\n> recalcWidthsESTATE_EFF_DEV_VIRT_MAIN(MORVirtDetailsExcelWriter.java:277)\n> \n> \n> \n> I finally was able to resolve this issue by installing some fonts on the\n> server issuing the command:\n> \n> yum install dejavu-lgc-fonts\n\nAnother workaround that I have used is to set headless mode: http://mail-archives.apache.org/mod_mbox/poi-user/200705.mbox/%3C15719338671.20070504144714@dinom.ru%3E", "id": 175611, "time": "2014-06-02T21:04:04Z", "creator": "robert_kish@yahoo.com", "creation_time": "2014-06-02T21:04:04Z", "is_private": false}]