[{"count": 0, "tags": [], "creator": "tkrah@fachschaft.imn.htwk-leipzig.de", "is_private": false, "id": 117393, "creation_time": "2008-06-05T10:15:22Z", "time": "2008-06-05T10:15:22Z", "bug_id": 45142, "text": "Hi.\n\nMy build.xml got something like this:\n\n<delete dir=\"${java.io.tmpdir}/${user.name}/antmod/${notastupidwindowspath}\"/>\n\nThat path looks like this after variable replacement:\n\n[1] /tmp/FRIENDS/krah/antmod/home/krah/Development/src/testproject/util\n\nBut my username is \"FRIENDS\\krah\" so it must look like this:\n\n[2] /tmp/FRIENDS\\krah/antmod/home/krah/Development/src/testproject/util\n\n[2] is a valid unix path and if it could be created it should be possible to remove it.\nThe \"\\\" must not be replaced to / on Unix, as its a valid char.", "attachment_id": null}, {"count": 1, "tags": [], "text": "A suggested fix, it seems ok for me, maybe i've missed something, is to check for '/' as separatorChar and if true, skip the \"\\\" replacement, something like this:\n\n\nif(File.separatorChar != '/') {\n path = path.replace('\\\\', File.separatorChar);\n}\n\nApplying this to resolveFile and normalize Methods of FileUtils.java did the trick.\nGood or bad idea?", "attachment_id": null, "id": 117396, "creator": "tkrah@fachschaft.imn.htwk-leipzig.de", "time": "2008-06-05T11:18:52Z", "bug_id": 45142, "creation_time": "2008-06-05T11:18:52Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 45142, "attachment_id": null, "is_private": false, "id": 117399, "time": "2008-06-05T12:59:06Z", "creator": "peterreilly@apache.org", "creation_time": "2008-06-05T12:59:06Z", "text": "The only problem with the patch is that it would not be backward compatible.\nThere are a lot of ant scripts that start on windows machines, with \\ used\nline <... dir=\"build\\aba\".. etch.\nThese currennty work on unix.\n\n"}, {"count": 3, "tags": [], "bug_id": 45142, "attachment_id": null, "id": 117415, "time": "2008-06-05T14:12:11Z", "creator": "tkrah@fachschaft.imn.htwk-leipzig.de", "creation_time": "2008-06-05T14:12:11Z", "is_private": false, "text": "Thats right.\nHm how to solve this? \nApply the patch anyway in a \"future\" version - if thats a possible way for ant developers and drop backward compatibility - or ignore this bug and make the valid \"\\\" char on unix systems unusable?\nIs it possible to implement some \"hinting\" to ant, to not \"replace\" the \"\\\", if e.g. \"noescape=\"true\"\" is set for that task? This sounds to me like a possible solution, isn't it?"}, {"count": 4, "tags": [], "creator": "stevel@apache.org", "is_private": false, "text": "This is going to be trouble. Actually, I'm surprised lots of unixy things don't break with a \\ in the usernam; I know spaces cause grief.\n\n1. We cant say '\\ is legitimate on unix', because we want build files to be cross platform.\n\n2. we cant add double \\\\ escaping, as it comes from the property ${user.name}, which is JVM-generated. \n\n3. any task attribute that takes a file reference is going to be trouble.\n\n", "id": 117535, "time": "2008-06-10T06:57:14Z", "bug_id": 45142, "creation_time": "2008-06-10T06:57:14Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "tkrah@fachschaft.imn.htwk-leipzig.de", "is_private": false, "id": 117539, "creation_time": "2008-06-10T07:29:43Z", "time": "2008-06-10T07:29:43Z", "bug_id": 45142, "text": "From my view i did not find any app which make trouble with the \"\\\".\nAlthough its \"winbindd\" default separator i changed it to be a \"+\" sign which results i a working ant without any fix to FileUtils.\n\nBut the problem still remains, with \"\\\" as default domain - user separator the username gets a \"\\\" which breaks ant file actions if username if involved.\nAny other proposals how this can be fixed (without changing the username to be without a \"\\\")?", "attachment_id": null}, {"count": 6, "tags": [], "creator": "bodewig@apache.org", "is_private": false, "id": 119890, "creation_time": "2008-08-18T08:16:38Z", "time": "2008-08-18T08:16:38Z", "bug_id": 45142, "text": "*** Bug 44347 has been marked as a duplicate of this bug. ***", "attachment_id": null}]