[{"count": 0, "tags": [], "creator": "info@dvholten.de", "attachment_id": null, "text": "after the recent 'buhei' about the buggy binary search in the jdk (see\njavalobby.org i decided to check the batik-source for similar 'sleepers'.\nI dont think that this is an urgent work to prevent immediate problems, but...\nsomeone stepped on the that bug and reported in sun's bugbase.\nIf a problem is so easy to wipe out, it should be done.\nThe problem with binary search and those i fixed in the attached patches is\nsomething like this:\n  mid = (low + high) / 2; // java.util\nor  // in batik\n  newSize = ( size * 3 ) >> 2;   // that is: (size * 3) / 4 = 0.75\nthe intermediate result of ( size * 3) may overflow to negative and causing\nproblems later on.\nThe cure is to rewrite the expression in an 'overflow-avoiding' way:\n  newSize = ( size - ( size >> 2 ));    // that is ( size - size/4) = 0.75", "id": 90375, "time": "2006-06-19T20:12:46Z", "bug_id": 39838, "creation_time": "2006-06-19T20:12:46Z", "is_private": false}, {"count": 1, "tags": [], "creator": "info@dvholten.de", "attachment_id": 18488, "text": "Created attachment 18488\nfixes to prevent integer-overflow\n\npatched files are:\no.a.b.bridge.UpdateManager.java\no.a.b.css.engine.StringIntMap.java, StringMap, \no.a.b.dom.util.TriplyIndexTable.java HashTable.java\no.a.b.dom.AbstractElement.java\no.a.b.ext.awt.geom.PathLength.java\no.a.b.ext.awt.image.codec.png.PNGImageDecoder.java, PNGRed.java,", "id": 90376, "time": "2006-06-19T20:21:58Z", "bug_id": 39838, "creation_time": "2006-06-19T20:21:58Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 39838, "text": "these and other fixes have been applied - bug declared closed. ", "id": 98459, "time": "2007-01-24T09:52:34Z", "creator": "info@dvholten.de", "creation_time": "2007-01-24T09:52:34Z", "is_private": false, "attachment_id": null}]