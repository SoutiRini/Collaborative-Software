[{"count": 0, "tags": [], "bug_id": 46983, "attachment_id": null, "text": "I recently spent a too much time trying to figure out why I was getting log4j \"no appenders found\" warning messages out of some of my webapps - even though my webapps dynamically configure log4j.\n\nIn the end, the problem was some of my third party jar files were trying to log something earlier in the startup sequence than when my dynamic log4j configuration occurred.\n\nWhat should have been happening was log4j should have found my bootstrap log4j.properties file, and used that until my \"real\" configuration happened.  But in some cases, it wasn't - and even with log4j in full debug mode, I wasn't seeing why.\n\nIt turned out that another webapp was setting this system variable:  log4j.defaultInitOverride=true - which globally disabled auto configure for every webapp on the server.\n\nI would like to suggest the following change to the static init block in LogManager.java:\n\n// if there is no default init override, then get the resource\n// specified by the user or the default config file.\nif(override == null || \"false\".equalsIgnoreCase(override)) {\n\n<autoconfigure stuff>\n\n}\n//NEW CODE\nelse if (LogLog.debugEnabled)\n{\n    LogLog.debug(\"Not autoconfiguring log4j because the system variable \" + DEFAULT_INIT_OVERRIDE_KEY + \" is set.\";\n}\n//END OF NEW CODE", "id": 126041, "time": "2009-04-07T07:40:24Z", "creator": "daniel.armbrust.list@gmail.com", "creation_time": "2009-04-07T07:40:24Z", "is_private": false}]