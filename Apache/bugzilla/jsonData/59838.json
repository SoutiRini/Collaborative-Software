[{"count": 0, "attachment_id": 34028, "creator": "toscano.luca@gmail.com", "is_private": false, "id": 192272, "time": "2016-07-10T10:26:09Z", "bug_id": 59838, "creation_time": "2016-07-10T10:26:09Z", "tags": [], "text": "Created attachment 34028\nForce httpd  to read the whole response from a FCGI backend even in presence of errors\n\nHi! This is a follow up for https://bz.apache.org/bugzilla/show_bug.cgi?id=57198\n\nRecently I tried to track down the following error logs:\n\n[proxy_fcgi:error] [pid 12210:tid 139857489786624] [client ::1:56442] AH01068: Got bogus version 103\n[proxy_fcgi:error] [pid 12210:tid 139857489786624] (22)Invalid argument: [client ::1:56442] AH01075: Error dispatching request to :\n\nI am running httpd 2.4.10 (Debian Stable) so I tried to backport some patches to solve the issue with no luck:\n\n- http://svn.apache.org/r1642855\n- http://svn.apache.org/r1726019\n- http://svn.apache.org/r1650677\n\nSo I tried to reproduce in httpd-trunk. Thanks to https://bz.apache.org/bugzilla/show_bug.cgi?id=57198 I was able reproduce, simply issuing a big enough php response that leads to a 304. I attached a simple patch that solves the problem, but I am not expert enough to be sure that it wouldn't trigger undesired side effects. \n\nThe idea is that if iobuf_size is smaller than clen (the length of the FCGI response), then in presence of a non HTTP_OK response (so even a HTTP_NOT_MODIFIED) mod_proxy_fcgi will not try to read the whole response due to a break in the code. For example:\n\n1) FCGI response size/clen:10705 iobuf_size: 8192 \n2) mod_proxy_fcgi sees a POLLIN event, reads the FCGI headers finding a AP_FCGI_STDOUT type FCGI record. readbuflen is 8192\n3) mod_proxy_fcgi establishes that the response is a 304 (HTTP_NOT_MODIFIED) and flushes the HTTP headers that gets to the client correctly.\n4) At this point mod_proxy_fcgi \"break\"s because it is supposed to not send the 304 response body but it forgets to clear the remaining 10705 - 8192 bytes still pending to read. \n5) mod_proxy_fcgi still sees a POLLIN event for the 10705 - 8192 bytes, and tries to read the FCGI record headers. The data is of course not a valid header so mod_proxy_fcgi recognizes a wrong version and starts the error procedure, namely logging the aforementioned AH01068 and AH01075 errors plus a 503 in the access logs.\n\nSo the 304 without the body gets correctly to the client, but httpd thinks it was an error and logs a 503 + scary error messages instead.\n\nLooking forward go get some feedback!\n\nThanks,\n\nLuca"}, {"count": 1, "tags": [], "creator": "toscano.luca@gmail.com", "attachment_id": null, "is_private": false, "id": 192278, "time": "2016-07-10T14:49:12Z", "bug_id": 59838, "creation_time": "2016-07-10T14:49:12Z", "text": "Another thing to consider for a good solution is the \"enablereuse=on\" use case. The solution that I proposed should ensure that no data will be left to read generating spurious error for subsequent requests, but not super sure about it."}, {"count": 2, "attachment_id": null, "creator": "toscano.luca@gmail.com", "is_private": false, "id": 192306, "time": "2016-07-11T21:23:45Z", "bug_id": 59838, "creation_time": "2016-07-11T21:23:45Z", "tags": [], "text": "After a chat with Jacob on IRC we figured out a simpler way to make this change, namely avoid breaking in the HTTP_NOT_MODIFIED branch case, since it is not an error condition. Added a new patch!"}, {"count": 3, "tags": [], "bug_id": 59838, "text": "Created attachment 34032\nForce httpd  to read the whole response from a FCGI backend even in presence of errors", "id": 192307, "time": "2016-07-11T21:24:55Z", "creator": "toscano.luca@gmail.com", "creation_time": "2016-07-11T21:24:55Z", "is_private": false, "attachment_id": 34032}, {"count": 4, "tags": [], "creator": "toscano.luca@gmail.com", "text": "First attempt to patch trunk in http://svn.apache.org/viewvc?view=revision&revision=1752347\n\nAs discussed on IRC it would be great to fix the HTTP_PRECONDITION_FAILED use case (HTTP 412) since it causes the following confusing error messages:\n\nAH01070: Error parsing script headers\nAH01075: Error dispatching request to :\n\nHTTP_PRECONDITION_FAILED is a value that can be returned by ap_scan_script_header_err_brigade_ex", "id": 192336, "time": "2016-07-12T21:16:49Z", "bug_id": 59838, "creation_time": "2016-07-12T21:16:49Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 59838, "text": "Tried to add another improvement to my change, namely http://svn.apache.org/r1754732\n\nThe new behavior that I am proposing should be used only when connection reuse is set to avoid inconsistencies.", "id": 192769, "time": "2016-08-01T10:56:55Z", "creator": "toscano.luca@gmail.com", "creation_time": "2016-08-01T10:56:55Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "The issue has been backported to 2.4.x with http://svn.apache.org/r1757670", "is_private": false, "id": 193327, "creator": "toscano.luca@gmail.com", "time": "2016-08-25T12:59:40Z", "bug_id": 59838, "creation_time": "2016-08-25T12:59:40Z", "attachment_id": null}]