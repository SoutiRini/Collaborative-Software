[{"count": 0, "tags": [], "bug_id": 60683, "text": "When using the IBM JDK (version 7) and the security manager requests to some JSPs return a 500 status and an NPE is logged. The odd thing is that you can make numerous requests to / and get a 500 every time, but after you make a request to /examples/jsp/dates/date.jsp, everything works fine. I'm not exactly sure what's causing that, but IBM JDK is weird so...\n\nSteps to reproduce:\n\n1. ./catalina.sh start -security\n\n2. Make a request:\n\n$ curl -I http://localhost:8080/ | head -n1\nHTTP/1.1 500 Internal Server Error\n\n3. Check the catalina.out log for the following:\n\njava.lang.NullPointerException\n\tat org.apache.catalina.connector.OutputBuffer.realWriteChars(OutputBuffer.java:464)\n\tat org.apache.tomcat.util.buf.CharChunk.flushBuffer(CharChunk.java:393)\n\tat org.apache.catalina.connector.OutputBuffer.close(OutputBuffer.java:279)\n        ....\n\nAdditional information:\n\nI narrowed down the problem to an unexpected access denial exception being returned from OutputBuffer:583:\n\n583        conv = encoders.get(enc);\n584        if (conv == null) {\n585            if (Globals.IS_SECURITY_ENABLED){\n\nI added a try/catch and e.printStackTrace() and found the following exception happens within the encoders.get() call on line 583 ONLY when using IBM JDK:\n\njava.security.AccessControlException: Access denied (\"java.lang.RuntimePermission\" \"accessClassInPackage.org.apache.tomcat.util.buf\")\n        at java.security.AccessController.throwACE(AccessController.java:121)\n        at java.security.AccessController.checkPermission(AccessController.java:230)\n        at java.lang.SecurityManager.checkPermission(SecurityManager.java:563)\n        at java.lang.SecurityManager.checkPackageAccess(SecurityManager.java:1617)\n        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:323)\n        at java.lang.ClassLoader.loadClassHelper(ClassLoader.java:778)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:760)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:741)\n        at org.apache.catalina.connector.OutputBuffer.setConverter(OutputBuffer.java:586)\n        ....\n\nKnowing the exception it was pretty easy to fix with a policy update, but I'm opening this bug because I don't know if this is feasible or not (I don't know the security policy well enough). Changing the catalina.policy's RuntimePermissions on the org.apache.tomcat package from:\n\n    permission java.lang.RuntimePermission \"accessClassInPackage.org.apache.tomcat\";\n\nto either:\n\n    permission java.lang.RuntimePermission \"accessClassInPackage.org.apache.tomcat.*\";\n\nor (and more targeted to the issue):\n\n    permission java.lang.RuntimePermission \"accessClassInPackage.org.apache.tomcat.util.buf\";\n\nworks well. Are either of these suggestions a feasible solution?", "id": 196673, "time": "2017-02-02T18:31:39Z", "creator": "csutherl@apache.org", "creation_time": "2017-02-02T18:31:39Z", "is_private": false, "attachment_id": null}, {"count": 1, "text": "I meant to add accessClassInPackage.org.apache.tomcat.util.buf in addition to the accessClassInPackage.org.apache.tomcat permission, not replace it.", "bug_id": 60683, "is_private": false, "id": 196674, "time": "2017-02-02T18:32:30Z", "creator": "csutherl@apache.org", "creation_time": "2017-02-02T18:32:30Z", "tags": [], "attachment_id": null}, {"count": 2, "text": "(In reply to Coty Sutherland from comment #0)\n> When using the IBM JDK (version 7) and the security manager requests to some\n> JSPs return a 500 status and an NPE is logged. The odd thing is that you can\n> make numerous requests to / and get a 500 every time, but after you make a\n> request to /examples/jsp/dates/date.jsp, everything works fine. I'm not\n> exactly sure what's causing that, but IBM JDK is weird so...\n\nIt's probably a buffering issue, / is a bigger page most likely, so it is flushing from the JSP and the classloading is then more likely to fail with weird JDKs (if Tomcat flushes itself, no problem !). Once the class is loaded, the error should go away. For this sort of issue, I often prefer preloading over adding to the policy, but both have been done.", "bug_id": 60683, "is_private": false, "id": 196677, "time": "2017-02-02T21:27:41Z", "creator": "remm@apache.org", "creation_time": "2017-02-02T21:27:41Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 60683, "text": "Ha, a buffering problem makes sense given the package the problem is in :)\n\nPreloading the C2BConverter class solves the problem.", "id": 196678, "attachment_id": null, "creator": "csutherl@apache.org", "creation_time": "2017-02-02T22:09:03Z", "time": "2017-02-02T22:09:03Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 60683, "text": "I added preloading of the class, also including B2CConverter since it's possible reader use in a webapp might cause the same issue on that JVM. Since it's using a PA, it means the class is being loaded before running it due to the PrivilegedExceptionAction<C2BConverter>, while other JVMs don't do that.\n\nIt will be in 9M18, 8.5.12, 8.0.42, 7.0.76, but I didn't port it to 6.0.x.", "id": 196687, "attachment_id": null, "creator": "remm@apache.org", "creation_time": "2017-02-03T16:07:18Z", "time": "2017-02-03T16:07:18Z", "is_private": false}]