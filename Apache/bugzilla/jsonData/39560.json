[{"count": 0, "attachment_id": null, "creator": "joachim.unger@softwareag.com", "is_private": false, "id": 89041, "time": "2006-05-11T14:23:55Z", "bug_id": 39560, "creation_time": "2006-05-11T14:23:55Z", "tags": [], "text": "I got a NPE rendering PDF documents. There are no other messages! Any idea?\n\nRegards,\n\nJoachim\n\n6359 [WT4] WARN  Converter  - Converter.run: Retrying FO --> PDF in thread 4\njava.lang.NullPointerException\n\tat org.apache.fop.fo.flow.TableRow.addChildNode(TableRow.java:193)\n\tat org.apache.fop.fo.FONode.clone(FONode.java:83)\n\tat org.apache.fop.fo.FObj.clone(FObj.java:96)\n\tat org.apache.fop.fo.flow.RetrieveMarker.cloneSubtree(RetrieveMarker.java:143)\n\tat org.apache.fop.fo.flow.RetrieveMarker.cloneSubtree(RetrieveMarker.java:145)\n\tat org.apache.fop.fo.flow.RetrieveMarker.cloneSubtree(RetrieveMarker.java:145)\n\tat org.apache.fop.fo.flow.RetrieveMarker.cloneSubtree(RetrieveMarker.java:145)\n\tat org.apache.fop.fo.flow.RetrieveMarker.cloneFromMarker(RetrieveMarker.java:163)\n\tat org.apache.fop.fo.flow.RetrieveMarker.bindMarker(RetrieveMarker.java:214)\n\tat\norg.apache.fop.layoutmgr.PageSequenceLayoutManager.resolveRetrieveMarker(PageSequenceLayoutManager.java:653)\n\tat\norg.apache.fop.layoutmgr.AbstractLayoutManager.createChildLMs(AbstractLayoutManager.java:247)\n\tat\norg.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter.createNextChildLMs(BlockLayoutManager.java:146)\n\tat\norg.apache.fop.layoutmgr.BlockLayoutManager$ProxyLMiter.hasNext(BlockLayoutManager.java:139)\n\tat\norg.apache.fop.layoutmgr.BlockLayoutManager.createNextChildLMs(BlockLayoutManager.java:159)\n\tat org.apache.fop.layoutmgr.LMiter.hasNext(LMiter.java:39)\n\tat\norg.apache.fop.layoutmgr.AbstractLayoutManager.getChildLM(AbstractLayoutManager.java:107)\n\tat\norg.apache.fop.layoutmgr.BlockStackingLayoutManager.getNextKnuthElements(BlockStackingLayoutManager.java:258)\n\tat\norg.apache.fop.layoutmgr.BlockLayoutManager.getNextKnuthElements(BlockLayoutManager.java:105)\n\tat\norg.apache.fop.layoutmgr.table.TableCellLayoutManager.getNextKnuthElements(TableCellLayoutManager.java:160)\n\tat\norg.apache.fop.layoutmgr.table.TableContentLayoutManager.createElementsForRowGroup(TableContentLayoutManager.java:467)\n\tat\norg.apache.fop.layoutmgr.table.TableContentLayoutManager.getKnuthElementsForRowIterator(TableContentLayoutManager.java:237)\n\tat\norg.apache.fop.layoutmgr.table.TableContentLayoutManager.getNextKnuthElements(TableContentLayoutManager.java:176)\n\tat\norg.apache.fop.layoutmgr.table.TableLayoutManager.getNextKnuthElements(TableLayoutManager.java:233)\n\tat\norg.apache.fop.layoutmgr.StaticContentLayoutManager$StaticContentBreaker.getNextKnuthElements(StaticContentLayoutManager.java:306)\n\tat\norg.apache.fop.layoutmgr.AbstractBreaker.getNextBlockList(AbstractBreaker.java:502)\n\tat org.apache.fop.layoutmgr.AbstractBreaker.doLayout(AbstractBreaker.java:252)\n\tat\norg.apache.fop.layoutmgr.StaticContentLayoutManager.doLayout(StaticContentLayoutManager.java:230)\n\tat\norg.apache.fop.layoutmgr.PageSequenceLayoutManager.layoutSideRegion(PageSequenceLayoutManager.java:688)\n\tat\norg.apache.fop.layoutmgr.PageSequenceLayoutManager.finishPage(PageSequenceLayoutManager.java:695)\n\tat\norg.apache.fop.layoutmgr.PageSequenceLayoutManager.makeNewPage(PageSequenceLayoutManager.java:660)\n\tat\norg.apache.fop.layoutmgr.PageSequenceLayoutManager.handleBreakTrait(PageSequenceLayoutManager.java:729)\n\tat\norg.apache.fop.layoutmgr.PageSequenceLayoutManager.access$100(PageSequenceLayoutManager.java:57)\n\tat\norg.apache.fop.layoutmgr.PageSequenceLayoutManager$PageBreaker.startPart(PageSequenceLayoutManager.java:467)\n\tat org.apache.fop.layoutmgr.AbstractBreaker.addAreas(AbstractBreaker.java:370)\n\tat org.apache.fop.layoutmgr.AbstractBreaker.addAreas(AbstractBreaker.java:321)\n\tat\norg.apache.fop.layoutmgr.PageSequenceLayoutManager$PageBreaker.doPhase3(PageSequenceLayoutManager.java:331)\n\tat org.apache.fop.layoutmgr.AbstractBreaker.doLayout(AbstractBreaker.java:296)\n\tat org.apache.fop.layoutmgr.AbstractBreaker.doLayout(AbstractBreaker.java:220)\n\tat\norg.apache.fop.layoutmgr.PageSequenceLayoutManager.activateLayout(PageSequenceLayoutManager.java:152)\n\tat org.apache.fop.area.AreaTreeHandler.endPageSequence(AreaTreeHandler.java:320)\n\tat org.apache.fop.fo.pagination.PageSequence.endOfNode(PageSequence.java:147)\n\tat org.apache.fop.fo.FOTreeBuilder$MainFOHandler.endElement(FOTreeBuilder.java:357)\n\tat org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:193)\n\tat\norg.apache.xalan.transformer.TransformerIdentityImpl.endElement(TransformerIdentityImpl.java:1050)\n\tat org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)\n\tat org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanEndElement(Unknown Source)\n\tat\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown\nSource)\n\tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown\nSource)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n\tat org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n\tat org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)\n\tat\norg.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:452)\n\tat Converter.run(Converter.java:284)"}, {"attachment_id": null, "tags": [], "bug_id": 39560, "is_private": false, "count": 1, "id": 89046, "time": "2006-05-11T15:37:56Z", "creator": "bowditch_chris@hotmail.com", "creation_time": "2006-05-11T15:37:56Z", "text": "Please attached a small FO file that demonstrates the problem"}, {"count": 2, "attachment_id": null, "creator": "joachim.unger@softwareag.com", "is_private": false, "id": 89048, "time": "2006-05-11T17:04:09Z", "bug_id": 39560, "creation_time": "2006-05-11T17:04:09Z", "tags": [], "text": "I tried to reduce some information in the fo-file because the data is\nconfidential. But then the error disappears. Sorry. I will need some time to\nfind an example. \n\nMight it be a memory problem or a problem with tables (many rows, marker in\nevery tow) over more than one page?\n\nAll my other documents were rendered perfectly.\n\nRegards,\n\nJoachim"}, {"count": 3, "tags": [], "text": "Looking at the stack trace it must be something with the combination of\nretrieve-marker and tables. The exception handles because usedColumnIndices is\nnull. usedColumnIndices is instantiated a few lines above but only if certain\nconditions are met. There's also another line in TableRow.startOfNode() which\ngets the usedColumnIndices from the parent table-body. Try debugging in that area.", "is_private": false, "bug_id": 39560, "id": 89067, "time": "2006-05-12T07:46:09Z", "creator": "jeremias@apache.org", "creation_time": "2006-05-12T07:46:09Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "Created attachment 18294\nFO-Input not converted by FOP 0.92", "attachment_id": 18294, "bug_id": 39560, "id": 89158, "time": "2006-05-16T07:07:49Z", "creator": "joachim.unger@softwareag.com", "creation_time": "2006-05-16T07:07:49Z", "is_private": false}, {"count": 5, "tags": [], "creator": "jeremias@apache.org", "attachment_id": null, "id": 89258, "time": "2006-05-18T16:25:42Z", "bug_id": 39560, "creation_time": "2006-05-18T16:25:42Z", "is_private": false, "text": "Ok, it looks like it's really the column handling code in TableRow that's\nfalling appart as soon as a table is cloned due to a retrieve-marker operation\nfrom a marker which contains a table. I don't see a solution, yet. I'll build a\nsmall test case we can put in the test suite. If anyone has ideas how to fix\nthis...."}, {"count": 6, "tags": [], "text": "Test case added: http://svn.apache.org/viewvc?rev=407588&view=rev\nAny table put in a marker fails when it's referenced through a retrieve-marker.", "attachment_id": null, "id": 89259, "creator": "jeremias@apache.org", "time": "2006-05-18T16:45:21Z", "bug_id": 39560, "creation_time": "2006-05-18T16:45:21Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 39560, "attachment_id": null, "id": 89724, "time": "2006-06-03T00:33:26Z", "creator": "adelmelle@apache.org", "creation_time": "2006-06-03T00:33:26Z", "is_private": false, "text": "I think I see what the problem is here... expect a fix soon.\n\nSee TableBody.endOfNode(). usedColumnIndices is set to null, as I mistakenly supposed this wouldn't be \nused again... Overlooked the case of the table being cloned due to marker-retrieval :("}, {"count": 8, "tags": [], "text": "Looking at what happens a bit more closely: I was on the right track --in thinking that it was unnecessary \nto keep the BitSet alive after the TableBody/TableRow node ended.\n\nThe whole column-numbering process should not be repeated at any rate, since it was already completed \nwhen that fragment was parsed, so the TableColumn/TableCell instances will, at that point already contain \nthe correct initial values.\n\nBack to the investigation :)", "attachment_id": null, "bug_id": 39560, "id": 89725, "time": "2006-06-03T00:50:24Z", "creator": "adelmelle@apache.org", "creation_time": "2006-06-03T00:50:24Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 39560, "attachment_id": null, "id": 89726, "time": "2006-06-03T01:17:12Z", "creator": "adelmelle@apache.org", "creation_time": "2006-06-03T01:17:12Z", "is_private": false, "text": "OK, yet another one of my gut feelings at the time has hereby been proven correct: putting that stuff in \naddChildNode() wasn't such a good idea... Sorry :/\n\nNow as for the solution: I'm thinking along the lines of moving the related code from i.e. \nTableRow.addChildNode() to TableCell.endOfNode(), since the latter is guaranteed to occur only once per \nactual table-cell --regardless of whether it gets cloned afterwards due to marker-retrieval. The same info \nwill be available, only through the parent instead of directly.\n\nShouldn't prove to be too difficult, but before I begin:\nDoes anyone disagree with the change described above?"}, {"count": 10, "tags": [], "bug_id": 39560, "attachment_id": null, "id": 89795, "time": "2006-06-05T23:05:21Z", "creator": "adelmelle@apache.org", "creation_time": "2006-06-05T23:05:21Z", "is_private": false, "text": "OK. Good news first: I managed to fix the NPE as described, by moving the code related to updating the \ntable FOs column indices to TableCell.startOfNode() / TableCell.endOfNode(). Still have to do the same for \nthe columns...\n\nBad news: still have to investigate why our testcase now ends up being... completely empty ? \n\nNothing but <areaTree />...\n\n"}, {"count": 11, "tags": [], "bug_id": 39560, "is_private": false, "text": "NPE is fixed, but I wouldn't use tables in markers just yet... there are still remaining problems.", "id": 89840, "time": "2006-06-06T22:30:58Z", "creator": "adelmelle@apache.org", "creation_time": "2006-06-06T22:30:58Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 39560, "attachment_id": null, "id": 89870, "time": "2006-06-07T12:10:28Z", "creator": "adelmelle@apache.org", "creation_time": "2006-06-07T12:10:28Z", "is_private": false, "text": "OK, fixed in FOP Trunk.\n\nMore info on the remaining problem:\n\nIt seems like the layoutengine currently tries to calculate widths for the descendants of the markers \ncontained within it, which seems to lead to errors in AbstractBaseLM.getBaseLength()... ? Still have to \ninvestigate a bit further. If anyone else feels like looking at this, be my guest ;)\n\nIf you use absolute widths on the tables instead of a percentage, everything works and displays nicely."}, {"count": 13, "tags": [], "bug_id": 39560, "attachment_id": null, "is_private": false, "id": 155923, "time": "2012-04-01T06:49:02Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:49:02Z", "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed"}]