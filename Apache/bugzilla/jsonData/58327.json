[{"count": 0, "tags": [], "creator": "andreas.kohn@gmail.com", "attachment_id": 33061, "text": "Created attachment 33061\nProposed patch\n\nValueExpressionLiteral invokes #getExpressionString() twice for many methods to notify the context.\n\nCalculating the string value can be expensive, for example in my case my values are rather \"big\" JSON wrapper objects. For a literal value this string value should be cacheable - the thing is read-only and a literal value, after all.\n\nAttached a proposed patch to implement that - but I'm not sure whether there might be specific tests to run or spec issues preventing this.\n\n\nFor the time being I worked around the issue in our own code by using a different ValueExpression that has this caching behavior.", "id": 184961, "time": "2015-09-04T09:46:40Z", "bug_id": 58327, "creation_time": "2015-09-04T09:46:40Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 58327, "attachment_id": null, "id": 184963, "creation_time": "2015-09-04T11:17:46Z", "time": "2015-09-04T11:17:46Z", "creator": "markt@apache.org", "text": "The only risk I can see is that even though the ValueExpression is read-only, the object it wraps is not and that object may change over time. That may change the result of its toString() method which in turn would impact the result of #getExpressionString(). However, the use of toString() here is an implementation detail internal to Tomcat. The spec has no expectations of what should be produced for #getExpressionString() in this case.\n\nOn balance I think the potential performance benefits outweigh the possible confusion that might be caused by caching the toString() value if getExpressionString() is used for debugging. I'll look at getting this patch applied.", "is_private": false}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 184964, "time": "2015-09-04T11:31:32Z", "bug_id": 58327, "creation_time": "2015-09-04T11:31:32Z", "is_private": false, "text": "Thanks for the report and the patch.\n\nIt has been applied to trunk and 8.0.x (for 8.0.27 onwards). I haven't applied it to 7.0.x since getExpressionString() is not used so extensively in 7.0.x."}]