[{"count": 0, "attachment_id": null, "bug_id": 16849, "text": "The tag fmt:message reads the property of a given key in a language that should\nbe provided by the client.\n\nHowever, it seems to read the language from the request for the first request to\nthis web application only.\n\nThis bug was reproduced by a site containing:\n<%@ taglib prefix=\"fmt\" uri=\"http://java.sun.com/jstl/fmt\" %>\n<fmt:setBundle basename=\"Resource\">\n...\n<fmt:message key=\"language\" />\n\nThere are two property files:\nResource.properties containing:\nlanguage=German\n\nResource.properties_en containing:\nlanguage=English\n\nFor the test, two computers are used. One with a browser that is set to\nEnglish and one that is set to German.\n\nThe first browser that accesses the web application determines which resource\nbundle is used. Afterwards, all language information in the request seems to\nbe ignored.\n\nA reload of the web application does not cause JSTL to listen again for the\nlanguage requested by the client. A restart of Tomcat does.\n\nInstead of using a property file, a subclass of java.util.ResourceBundle was\nused. Its method were not called after the first client request.\n\nThe tag bean:message from Struts does not seem to have this bug.", "id": 30827, "time": "2003-02-06T17:01:55Z", "creator": "johann.uhrmann@xpecto.com", "creation_time": "2003-02-06T17:01:55Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "text": "Johann,\n\nCould you run a test with the nightly binary of 'standard'.\nMany bugs related to \"tag-pooling\" behavior have been fixed\nsince standard 1.0.2.\n\nIf you still experience the same problem, please please reopen\nthe bug and send us some sample code that we can then use to \nbetter investigate the problem.", "is_private": false, "id": 30835, "creator": "pierre.delisle@sun.com", "time": "2003-02-06T18:29:23Z", "bug_id": 16849, "creation_time": "2003-02-06T18:29:23Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 16849, "attachment_id": null, "is_private": false, "id": 30889, "time": "2003-02-07T12:52:41Z", "creator": "johann.uhrmann@xpecto.com", "creation_time": "2003-02-07T12:52:41Z", "text": "Pierre,\n\nI would love to try a nightly snapshot. But all links for nightly builds\non http://jakarta.apache.org/taglibs/doc/standard-doc/intro.html\nand on http://jakarta.apache.org/taglibs/index.html point either to\nempty directories or result in a 404 error.\n\nBy the way - I was using version 1.0.2 of JSTL, therefore I changed that field."}, {"count": 3, "tags": [], "bug_id": 16849, "attachment_id": null, "is_private": false, "id": 30893, "time": "2003-02-07T13:32:37Z", "creator": "glenn@apache.org", "creation_time": "2003-02-07T13:32:37Z", "text": "Download of the nigthly builds has been fixed.\n"}, {"count": 4, "attachment_id": null, "bug_id": 16849, "text": "Thank You Glenn,\n\nthe current nightly build of JSTL (2003-02-03) does not seem to work with\nTomcat 4.1.12. Unfortunately, the following stack trace of the root cause\nshows no hint about the class name that triggered the exception:\n\njava.lang.VerifyError: Cannot inherit from final class\n\tat java.lang.ClassLoader.defineClass0(Native Method)\n\tat java.lang.ClassLoader.defineClass(ClassLoader.java:509)\n\tat java.security.SecureClassLoader.defineClass(SecureClassLoader.java:123)\n\tat\norg.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:1664)\n\tat\norg.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoader.java:953)\n\tat\norg.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1394)\n\tat\norg.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1274)\n\tat java.lang.ClassLoader.loadClassInternal(ClassLoader.java:322)\n\tat\norg.apache.xerces.impl.XMLNSDocumentScannerImpl.createContentDispatcher(Unknown\nSource)\n\tat\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl.(XMLDocumentFragmentScannerImpl.java:248)\n\tat org.apache.xerces.impl.XMLDocumentScannerImpl.(XMLDocumentScannerImpl.java:245)\n\tat org.apache.xerces.impl.XMLNSDocumentScannerImpl.(Unknown Source)\n\tat\norg.apache.xerces.parsers.IntegratedParserConfiguration.createDocumentScanner(Unknown\nSource)\n\tat org.apache.xerces.parsers.DTDConfiguration.(DTDConfiguration.java:366)\n\tat\norg.apache.xerces.parsers.StandardParserConfiguration.(StandardParserConfiguration.java:197)\n\tat org.apache.xerces.parsers.IntegratedParserConfiguration.(Unknown Source)\n\tat org.apache.xerces.parsers.IntegratedParserConfiguration.(Unknown Source)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat\nsun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n\tat\nsun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:274)\n\tat java.lang.Class.newInstance0(Class.java:296)\n\tat java.lang.Class.newInstance(Class.java:249)\n\tat org.apache.xerces.util.ObjectFactory.newInstance(ObjectFactory.java:293)\n\tat org.apache.xerces.util.ObjectFactory.createObject(ObjectFactory.java:224)\n\tat org.apache.xerces.util.ObjectFactory.createObject(ObjectFactory.java:119)\n\tat org.apache.xerces.parsers.DOMParser.(DOMParser.java:153)\n\tat org.apache.xerces.parsers.DOMParser.(DOMParser.java:137)\n\tat org.apache.xerces.jaxp.DocumentBuilderImpl.(DocumentBuilderImpl.java:102)\n\tat\norg.apache.xerces.jaxp.DocumentBuilderFactoryImpl.newDocumentBuilder(DocumentBuilderFactoryImpl.java:88)\n\tat org.apache.jasper.xmlparser.ParserUtils.parseXMLDocument(ParserUtils.java:167)\n\tat\norg.apache.jasper.compiler.TldLocationsCache.processWebDotXml(TldLocationsCache.java:175)\n\tat org.apache.jasper.compiler.TldLocationsCache.init(TldLocationsCache.java:147)\n\tat\norg.apache.jasper.compiler.TldLocationsCache.getLocation(TldLocationsCache.java:318)\n\tat\norg.apache.jasper.JspCompilationContext.getTldLocation(JspCompilationContext.java:437)\n\tat org.apache.jasper.compiler.Parser.parseTaglibDirective(Parser.java:353)\n[...]", "id": 30895, "time": "2003-02-07T14:22:57Z", "creator": "johann.uhrmann@xpecto.com", "creation_time": "2003-02-07T14:22:57Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 16849, "attachment_id": null, "is_private": false, "id": 31019, "time": "2003-02-10T16:48:58Z", "creator": "johann.uhrmann@xpecto.com", "creation_time": "2003-02-10T16:48:58Z", "text": "Note: \nThe tag library I18N shows the same behaviour. \nMaybe this bug is related to Bug #16932.\n\nBug #16932 should be easier to reproduce than this one."}, {"count": 6, "tags": [], "text": "The nightly build from 2003-02-07 still shows the described behaviour.\n\n(only old xerces libraries where used in order to avoid the stack trace\n shown in my previous comment)\n\nAre there examples where the resource bundle selection works as intended?", "is_private": false, "id": 32062, "creator": "johann.uhrmann@xpecto.com", "time": "2003-02-27T09:56:53Z", "bug_id": 16849, "creation_time": "2003-02-27T09:56:53Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "pierre.delisle@sun.com", "attachment_id": null, "id": 32363, "creation_time": "2003-03-03T20:00:27Z", "time": "2003-03-03T20:00:27Z", "bug_id": 16849, "text": "Johan,\n\nBug 16932 is related to the 'i18n' taglib, not 'standard'.\nOnce again, please send us simple sample code that reproduces the\nproblem and I'll then be able to look into it.\n", "is_private": false}, {"count": 8, "tags": [], "creator": "johann.uhrmann@xpecto.com", "is_private": false, "id": 32394, "creation_time": "2003-03-04T08:52:43Z", "time": "2003-03-04T08:52:43Z", "bug_id": 16849, "text": "Pierre,\n\nwith \"related\" I wanted to express that this type of bug might be common\nin several tag libs that do i18n. That does not mean that there must be a\ncommon code base.\nSorry if that caused some confusion.\n\nFurthermore, I've got some more information which may be useful to reproduce\nthe bug:\n\nThe following code does NOT work as described in the specification:\n\n     <fmt:setBundle basename=\"WebResource\"/>\n     <fmt:message key=\"title\"/>\n\n     Browser with English locale (en):\n     Title\n\n     Browser with German locale (de):\n     Title  <-- wrong, should be \"Anrede\"\n\nHowever, the following code DOES work:\n     <fmt:setBundle basename=\"WebResource\" var=\"lc\" scope=\"page\"/>\n     <% javax.servlet.jsp.jstl.fmt.LocalizationContext locc =\n(javax.servlet.jsp.jstl.fmt.LocalizationContext)(pageContext.getAttribute(\"l\nc\"));\n        java.util.ResourceBundle rb = locc.getResourceBundle();\n        java.util.Locale locale = locc.getLocale();\n     %>\n     <%= rb.getString(\"title\") %>\n     <%= locale.toString() %>\n\n     \n     Browser with English locale:\n     Title\n     en_US\n\n     Browser with German locale:\n     Anrede\n     de\n\n\nI hope this helps to isolate the source of that bug. Please note that the\nfollowing sequence is neccessary to reproduce the bug:\n     - deployment of the test application\n     - access with a browser with English locale setting\n     - access with a browser with German locale setting\n\nThe used resource bundle consists of two subclasses of java.util.ResourceBundle:\n     - WebResource.java    (returning German resources)\n     - WebResource_de.java (returning English resources)\n     \n     Both override the following methods:\n     - public java.util.Locale getLocale()\n     - public Enumeration getKeys()\n     - protected Object handleGetObject(String key)\n     - private String lookup(String key) throws MissingResourceException\n\nInserting log statements to those classes showed that the wrong resource bundle\nis used if the bug occurs. The classes reside in a jar-file in \n$TOMCAT_HOME/common/lib\n\n\n\nIs there somewhere an example war-file that uses fmt for i18n and can be\ndownloaded in order to refer to it?", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 16849, "attachment_id": null, "is_private": false, "id": 36358, "time": "2003-04-30T06:04:14Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-04-30T06:04:14Z", "text": "A new \"demo\" example has been added to standard-examples\n(in the category \"I18N and Formatting\").\n\nIt allows you to test the behavior of I18N and Formatting actions\nby letting you easily set the application-based locale\nas well as the fallback locale.\n\nPlease give it a try. If you still find there is a problem with the\ntags, please re-open the bug."}, {"count": 10, "tags": [], "creator": "johann.uhrmann@xpecto.com", "text": "The example \"JSTL: Formatting/I18N Support -- ParametricReplacement\" shows\nthe behaviour described in this bug.\n\nWhen using it the first time, the browser locales where:\nde - en - en_US\nand it produced a German site (which is correct).\n\nWhen using it the second time, the browser locales where:\nen - en_US - de\nand it still showed a German site (which should have been in English).\n\nThe example was tested with:\n - JSTL 1.0.3\n(http://www.apache.org/dist/jakarta/taglibs/standard/binaries/jakarta-taglibs-standard-1.0.3.tar.gz)\n\n- Apache Tomcat/4.1.12\n- Java Version: 1.4.0_01 (from Sun)\n\nIt might be a bug in that specific Tomcat version. I was not able to figure that\nout.", "id": 36363, "time": "2003-04-30T07:49:13Z", "bug_id": 16849, "creation_time": "2003-04-30T07:49:13Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "text": "Actually, the Parametric Replacement example is meant to only show\nGerman messages. Check the code (click on the screwdriver).\n\nHow about this:\n  - dowload the nigthly for standard 1.0\n  - run the standard-examples with Tomcat 4.1.24\n  - try the new demo example\n\nIf you still find a problem, then I'll be happy to look at it\nwith these known values.", "is_private": false, "id": 36793, "creator": "pierre.delisle@sun.com", "time": "2003-05-07T00:26:46Z", "bug_id": 16849, "creation_time": "2003-05-07T00:26:46Z", "attachment_id": null}]