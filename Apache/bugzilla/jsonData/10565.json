[{"count": 0, "tags": [], "bug_id": 10565, "is_private": false, "text": "I have a class that sets up a shutdown hook to close resources when the JVM is \nshutting down.  It works fine when I run the class outside of Tomcat.  But when \nit runs from within Tomcat, I get a \"java.lang.NoClassDefFoundError: \njava/util/Iterator\" from the shutdown hook thread.  Javadoc for this error \nstates \"... The searched-for class definition existed when the currently \nexecuting class was compiled, but the definition can no longer be found.\"  I \nhave no idea why the java.util package would be unavailable.", "id": 19138, "time": "2002-07-08T20:44:25Z", "creator": "clark.updike@jhuapl.edu", "creation_time": "2002-07-08T20:44:25Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 10565, "is_private": false, "text": "Using a shutdown hook is not supported in a container environment. Please use\nthe container lifecycle events instead.", "id": 19139, "time": "2002-07-08T21:25:22Z", "creator": "remm@apache.org", "creation_time": "2002-07-08T21:25:22Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 10565, "is_private": false, "text": "I have searched through the servlet spec and it doesn't restrict the usage of\nthreads and shutdown hooks in servlets.\n\nAnyway the problem here seems to be the (webapp)Classloader which throws a\nClassNotFoundException if it is stopped.\nIsn't it possible to delegate the loading of classes to its parents when it is\nin \"shutdown mode\"?", "id": 23752, "time": "2002-10-02T14:57:21Z", "creator": "mex02@erv.de", "creation_time": "2002-10-02T14:57:21Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "As Remy stated tomcat doesn't support shutdown hooks but provides the \nlifecycle methods as an alternative.\n\nRather than close this again, I'll set it as an enhancement request but it is \nnot one that is likely to be addressed.", "id": 50916, "time": "2004-01-21T21:35:26Z", "bug_id": 10565, "creation_time": "2004-01-21T21:35:26Z", "is_private": false}, {"count": 4, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "Further info from Clark (recieved via private mail).\n\nRemoving the use of the Iterator class resolved the issue.", "id": 50925, "time": "2004-01-21T23:22:26Z", "bug_id": 10565, "creation_time": "2004-01-21T23:22:26Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 10565, "attachment_id": null, "id": 51732, "time": "2004-02-04T20:04:05Z", "creator": "markt@apache.org", "creation_time": "2004-02-04T20:04:05Z", "is_private": false, "text": "More info received via private mail suggesting a work-around:\n\nHi Mark,\n\nI stumbled across your recent comments on this bug, and thought I'd let \nyou know of a work-around if your reporter needs one. The trick is to \npreload the classes required by the shutdown hook code, so loading isn't \nattempted at shutdown.\n\nprivate static final Class needed = java.util.Iterator.class;\n\nyeah its a hack, but it works :-)\n\ncheers,\n-Brendan"}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "I don't see a way to fix this given the class loading issues.\n\nI agree with Remy that web applications should not be registering shut down hooks. There are lots of things the specification doesn't mention (shut down hooks, calling System.exit(), etc) - that doesn't mean they are all a good idea in a container environment.\n\nA ServletContextListener is the probably the way to go.", "count": 6, "id": 142747, "time": "2010-12-15T11:47:36Z", "bug_id": 10565, "creation_time": "2010-12-15T11:47:36Z", "is_private": false}]