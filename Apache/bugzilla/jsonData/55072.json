[{"count": 0, "tags": [], "bug_id": 55072, "attachment_id": null, "text": "The problem is that if we configured the ErrorLog directive piped with rotatelog, logs in pool cleanup hook is always missing when we shutdown the apache server (restart is OK).\n\n    ErrorLog \"|/usr/local/apache2/bin/rotatelogs -l /home/user/log/event.log.%Y-%m-%d 86400\"\n\n   If we don't use the rotatelog feature, it works fine.\n\n   ErrorLog \"logs/error_log\"\n\n   We have tested the latest released apache, the problem always exists.\n    \n   The related program is as following:\n\napr_status_t destory_lock(void *not_used)\n   {\n    ap_log_error(APLOG_MARK, APLOG_ERR, 0, NULL, \"enter destroy\"); // this log is always missing when shutdown apache\n    return APR_SUCCESS;\n    }\n\nint filerepair_post_config(apr_pool_t *pconf, apr_pool_t *plog,\n                             apr_pool_t *ptemp, server_rec *s){\n    apr_pool_cleanup_register(pconf, NULL, destory_lock, apr_pool_cleanup_null);\n       return APR_SUCCESS;\n                                              \n}", "id": 167706, "time": "2013-06-07T02:02:47Z", "creator": "weiy.chen@gmail.com", "creation_time": "2013-06-07T02:02:47Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 55072, "is_private": false, "id": 167710, "time": "2013-06-07T10:23:59Z", "creator": "covener@gmail.com", "creation_time": "2013-06-07T10:23:59Z", "tags": [], "text": "Does creating a sub-pool of pconf and registering a cleanup on that instead work around the issue?  log.c uses a pconf cleanup to shutdown the piped logger.\n\nCan you try testing w/ the \"APR_KILL_AFTER_TIMEOUT\" line removed from log.c (separate or in conjunction w/ the above)"}, {"count": 2, "attachment_id": null, "bug_id": 55072, "is_private": false, "id": 167736, "time": "2013-06-08T11:25:56Z", "creator": "weiy.chen@gmail.com", "creation_time": "2013-06-08T11:25:56Z", "tags": [], "text": "The attempt that creating sub pool only seems not work. \nAfter the line \"apr_pool_note_subprocess(p, procnew, APR_KILL_AFTER_TIMEOUT);\" in log.c is commetted out , it will log successfully regardless of whether the sub-pool is created or not.\n(In reply to Eric Covener from comment #1)\n> Does creating a sub-pool of pconf and registering a cleanup on that instead\n> work around the issue?  log.c uses a pconf cleanup to shutdown the piped\n> logger.\n> \n> Can you try testing w/ the \"APR_KILL_AFTER_TIMEOUT\" line removed from log.c\n> (separate or in conjunction w/ the above)"}, {"count": 3, "attachment_id": null, "bug_id": 55072, "is_private": false, "id": 186573, "time": "2015-11-26T09:25:16Z", "creator": "srinivas.und@gmail.com", "creation_time": "2015-11-26T09:25:16Z", "tags": [], "text": "I'm also facing the same issue with Apache 2.4 on Solaris. I tried with removing the line \"APR_KILL_AFTER_TIMEOUT\" from log.c, but it's not resolved. \nCan you please suggest me any work around."}]