[{"count": 0, "text": "In Tomcat 6.0.18, <c:out> tag that has undefined reference in its value  (like the following snippet) outputs empty string(\"\"), but in Tomcat 6.0.20 outputs null. This is a critical bug.. Please fix it ASAP.\n\n===\n<c:out value=\"${foo.undefined.bar}\" />\n===", "creator": "nagai@ariel-networks.com", "attachment_id": null, "id": 128223, "time": "2009-06-24T01:45:05Z", "bug_id": 47413, "creation_time": "2009-06-24T01:45:05Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 47413, "attachment_id": null, "id": 128225, "time": "2009-06-24T03:22:36Z", "creator": "xxd82329@gmail.com", "creation_time": "2009-06-24T03:22:36Z", "is_private": false, "text": "Sorry, I tweaked the example jsp file in \"webapps\\examples\\jsp\\jsp2\\jspattribute\" a little (both 6.0.18 and 6.0.20), and I got the same result: \n\nan error page of: \n\njavax.el.PropertyNotFoundException: Property 'undefined' not found on type jsp2.examples.FooBean\n\tjavax.el.BeanELResolver$BeanProperties.get(BeanELResolver.java:193)\n\tjavax.el.BeanELResolver$BeanProperties.access$400(BeanELResolver.java:170)\n\tjavax.el.BeanELResolver.property(BeanELResolver.java:279)\n\tjavax.el.BeanELResolver.getValue(BeanELResolver.java:60)\n\tjavax.el.CompositeELResolver.getValue(CompositeELResolver.java:53)\n\torg.apache.el.parser.AstValue.getValue(AstValue.java:118)\n        ..................\n\n\nso could you please send us your source code that could reproduce this bug?"}, {"count": 2, "tags": [], "bug_id": 47413, "attachment_id": null, "id": 128255, "time": "2009-06-24T18:29:44Z", "creator": "nagai@ariel-networks.com", "creation_time": "2009-06-24T18:29:44Z", "is_private": false, "text": "Ooops, sorry. This is correct example.\n===\n<c:out vlaue=\"${undefined}\" />\n==="}, {"count": 3, "tags": [], "text": "sorry, I found that the behaviors of tomcat-6.0.18 and tomcat-6.0.20 are the same. Could you please check again? \n\nYou could just tweak \"webapps\\examples\\jsp\\jsp2\\jspattribute\\ jspattribute.jsp\" a little, just add \"<c:out value=\"${undefined}\"/>\", and you'll find that the behaviors are the same.", "is_private": false, "id": 128258, "creator": "xxd82329@gmail.com", "time": "2009-06-24T21:09:45Z", "bug_id": 47413, "creation_time": "2009-06-24T21:09:45Z", "attachment_id": null}, {"count": 4, "text": "Created attachment 23875\nexample jsp to reproduct the bug \n\nOk, this is the example jsp (webapps\\examples\\jsp\\jsp2\\jspattribute\\jspattribute.jsp) that I edited to reproduct the bug I said.\n\n(sorry.. my jsp snippet example I wrote was wrong again.. but this isn't!)", "creator": "nagai@ariel-networks.com", "attachment_id": 23875, "id": 128263, "time": "2009-06-25T01:04:26Z", "bug_id": 47413, "creation_time": "2009-06-25T01:04:26Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "text": "OK, thanks for the example. \n\nHere is a work-around: \n\n<c:if test=\"${foo}\">${foo}</c:if>\n\nfrom which you could get the same behavior as 6.0.18. \n\nSorry for the inconvenience. \n\nAnd We'll check that.", "is_private": false, "id": 128266, "creator": "xxd82329@gmail.com", "time": "2009-06-25T01:56:41Z", "bug_id": 47413, "creation_time": "2009-06-25T01:56:41Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "knst.kolinko@gmail.com", "is_private": false, "text": "I've debugged the issue\n(the one, demonstrated by example jsp attached in comment #4)\n\nIf you look to what java code is generated for\n<c:set var=\"foo\" value=\"${foo}${undefined}\"/>\nyou will see, that the first part of the value expression is constrained to Object. That is wrong, because both ${foo} and ${undefined} should be constrained to String.\n\n\nI fixed it in trunk and proposed for 6.0.", "id": 128977, "time": "2009-07-18T20:06:35Z", "bug_id": 47413, "creation_time": "2009-07-18T20:06:35Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 47413, "text": "*** Bug 47487 has been marked as a duplicate of this bug. ***", "id": 128979, "time": "2009-07-18T20:08:38Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2009-07-18T20:08:38Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 47413, "attachment_id": null, "is_private": false, "id": 129055, "time": "2009-07-22T13:32:26Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2009-07-22T13:32:26Z", "text": "I renamed this issue, as it is a bug with EL expressions, not with c:out.\n\nThere is one additional issue in the same piece of code (Generator#attributeValueWithEL()):\n\nAccording with the specification, the components of a composite EL expression, such as ${a}${b}, are evaluated from left to right, and each one is coerced to String. Those strings are concatenated, and the result is coerced to the expected type.\n\nThe first issue, described in comment #6, is that the first component was not coerced to String.\nThe second issue is that the result of concatenation is not coerced to the expected type.\n\nIt works in 6.0.18 and current 5.5.x.\nThese issues were introduced in rev. 708165."}, {"attachment_id": null, "tags": [], "bug_id": 47413, "text": "This has been fixed in 6.0.x and will be included in 6.0.21 onwards.", "count": 9, "id": 130182, "time": "2009-09-07T07:27:57Z", "creator": "markt@apache.org", "creation_time": "2009-09-07T07:27:57Z", "is_private": false}]