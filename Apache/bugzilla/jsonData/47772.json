[{"count": 0, "tags": [], "bug_id": 47772, "text": "This is not a bug but rather an enhancement request.\n\nWe use Log4J in our project where several web applications run on Tomcat. We would like to have different log files per application. \n\nIt seems that this is only feasible if we include the log4j.jar on the WEB_INF/lib directory of each application instead of TOMCAT_HOME/lib. This happens since the configuration of log4J contains static variables and values are shared among all applications if the jar is put to TOMCAT_HOME/common/lib.\n\nPutting the jar file in each WEB-INF/lib forces the classloader to reload the class and set independent values to the configuration.\n\nIn our application server we have to reduce the amount of jar files put into each application to reduce the memory usage. Using one log4j.jar per application is something we would like to avoid.\n\nSo the request would be to either separate the jar files to have one that is put into common/lib and a small second one to be put into WEB-INF/lib, or to extend the architecture to enable the configuration of log4j per application without the need for jar files into WEB-INF/lib.\n\nBest regards,\nLuciana Moreira", "id": 130069, "time": "2009-08-31T08:05:47Z", "creator": "moreira@privasphere.com", "creation_time": "2009-08-31T08:05:47Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 47772, "attachment_id": null, "id": 130071, "time": "2009-08-31T08:28:45Z", "creator": "moreira@privasphere.com", "creation_time": "2009-08-31T08:28:45Z", "is_private": false, "text": "Changing the status from normal to enhancement\n\nThe proposals are \n1) separate jar files\n2) no longer use the static variables in the classes responsible for loading the configuration such as PropertyConfigurator.\n3) Change the architecture to enable the configuration of log4j per application"}, {"count": 2, "tags": [], "bug_id": 47772, "attachment_id": null, "id": 130075, "time": "2009-08-31T09:29:24Z", "creator": "hoju@visi.com", "creation_time": "2009-08-31T09:29:24Z", "is_private": false, "text": "This is already supported.  Read the documentation and search the list and wiki [1] for the \"Logger Repository Selector\" concept.\n\nGranted, there are issues with this.  If you use static loggers, you will find that a given statically defined logger's configuration will be tied to the first configured repository (probably the default one) and won't change with changes to an app's logger repository configuration.  As such, you must use instance loggers.\n\nI can guarantee that no alternate, more robust, per/application logging scheme will be implemented in Log4j-1.2.x.  You might look to get involved with Log4j-2.x development (not that it's really ongoing ATM) or look to see if maybe Logback [2] has such a feature (not saying it does, just something to check out).\n\nThere is a Jira site for Log4j-2.x feature requests [3], which I suggest you move this request to if you want to see it worked on (assuming Log4j-2.x work actually begins).  If you do so, make sure to close this one.  If you don't close this one, it will probably be marked as WONTFIX eventually.\n\n[1] http://wiki.apache.org/logging-log4j/AppContainerLogging\n[2] http://logback.qos.ch/manual/loggingSeparation.html\n[3] https://issues.apache.org/jira/browse/LOG4J2\n\nJake"}, {"count": 3, "tags": [], "bug_id": 47772, "attachment_id": null, "id": 130098, "time": "2009-09-01T05:09:20Z", "creator": "moreira@privasphere.com", "creation_time": "2009-09-01T05:09:20Z", "is_private": false, "text": "Thank you very much for the reply and pointers.\n\nI got the application up and running with different logging configurations based on JNDI.\nI will close this request as the solution presented already fulfills our needs.\n\nOnce again thx :)"}]