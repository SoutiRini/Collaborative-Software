[{"count": 0, "tags": [], "bug_id": 55675, "attachment_id": null, "id": 170684, "time": "2013-10-18T22:00:53Z", "creator": "racezhang@gmail.com", "creation_time": "2013-10-18T22:00:53Z", "is_private": false, "text": "Hi all,\n\nI was using Tomcat for a while, but found Tomcat sometimes does not handle misconfiguration well, which causes unnecessary confusion. \n\nSpecifically, when users provide a wrong configuration option and Tomcat produces a wrong result (or crashes), Tomcat should explicitly dump error message pointing to the mis-configured option, rather than just dumping stack traces, or simply restoring to the default behavior. At least, the invalid configuration values should be logged. \n\nStrictly speaking, this may not be a bug, but (I think) it is definitely worth improving to give better user experience. I have found many places in Tomcat. Here is a very simple case for illustration purpose (I have more complex examples, which I can post if they are of general interest):\n\nIn McastService.java\n\npublic long getDropTime() {\n        String p = properties.getProperty(\"memberDropTime\");\n        return new Long(p).longValue();\n}\n\nIf a careless user uses \"1o\" (not 0) as the value of configuration option: \"memberDropTime\", Tomcat will throw an exception when parsing this string. Similar cases occur to me a few times; often, the effect of a misconfigured option propagates through the program and causes some *delayed* problem, making it even harder to localize the original misconfigured option.\n\nI would suggest to add timely check immediate after reading a configuration option value. For the above case, check whether p is a long value or not, and also checking its permitted ranges. (yes, many places in Tomcat do this, but still many places like the above case miss the checking). I would like Tomcat to explicitly warn the user (or at least log) which option is misconfigured rather than delaying the effect until the program crashes.\n\nI found a couple of such places. and wondering whether Tomcat developers would like to know them, and how do you think about such \"mis-handling\"? \n\nThanks \n\n-Sai"}, {"count": 1, "tags": [], "bug_id": 55675, "attachment_id": null, "id": 170686, "time": "2013-10-19T09:32:13Z", "creator": "markt@apache.org", "creation_time": "2013-10-19T09:32:13Z", "is_private": false, "text": "Improving handling of invalid configuration is an enhancement rather than a bug.\n\nThe configuration style used in McastService is not one widely used in Tomcat although I suspect it may be used elsewhere in the org.apache.catalina.tribes package.\n\nI'd be happy to see the properties field removed and replaced with standard getters and setters with appropriate defaults. If necessary (I'm not sure it is) , those defaults can be invalid and the implementation can check that they have been set to valid values at an appropriate point.\n\nAs always, patches welcome.\n\nNote that changes like this that modify the API are less likely to be back-ported to earlier versions of Tomcat."}]