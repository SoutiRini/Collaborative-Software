[{"count": 0, "tags": [], "creator": "techtonik@gmail.com", "text": "It seems that the standard way for the web server to report that site is running under https is to set value of environment variable HTTPS to 'on'. Apache2 sets it to '1'.\n\nhttp://www.cgi101.com/book/ch3/text.html\nhttp://msdn.microsoft.com/en-us/library/ms524602(v=vs.90).aspx", "id": 143327, "attachment_id": null, "bug_id": 50581, "creation_time": "2011-01-13T16:46:44Z", "time": "2011-01-13T16:46:44Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 50581, "text": "In what context do you see it set to \"1\"?", "id": 143329, "time": "2011-01-13T21:12:36Z", "creator": "covener@gmail.com", "creation_time": "2011-01-13T21:12:36Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 50581, "text": "Django running on Apache2 using mod_wsgi. The variable is copied from os.environ to WSGIRequest class and available as request.META['HTTPS']. Do you think it is transformed on the way? I'll check later from ordinary .wsgi script.", "id": 143338, "time": "2011-01-14T06:38:01Z", "creator": "techtonik@gmail.com", "creation_time": "2011-01-14T06:38:01Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 50581, "attachment_id": null, "is_private": false, "id": 143339, "time": "2011-01-14T07:27:06Z", "creator": "covener@gmail.com", "creation_time": "2011-01-14T07:27:06Z", "text": "You or your framework or your interpreter are coercing it into one. You can log it in your access log a bit more directly with %{HTTPS}e.  Re-open the bug if there's something more sinister going on."}, {"count": 4, "tags": [], "text": "Created attachment 26487\nprobe.wsgi", "is_private": false, "id": 143340, "creation_time": "2011-01-14T08:29:21Z", "time": "2011-01-14T08:29:21Z", "creator": "techtonik@gmail.com", "bug_id": 50581, "attachment_id": 26487}, {"count": 5, "tags": [], "bug_id": 50581, "attachment_id": 26488, "id": 143341, "time": "2011-01-14T08:33:03Z", "creator": "techtonik@gmail.com", "creation_time": "2011-01-14T08:33:03Z", "is_private": false, "text": "Created attachment 26488\nprobe.output\n\nAs you may see from probe script mod_wsgi calls application with HTTPS='1' already set in environ, so the problem is not in Django or Python scripts."}, {"count": 6, "tags": [], "creator": "techtonik@gmail.com", "text": "Seems like a problem with mod_wsgi module. I've added the following log format:\n\nLogFormat \"%t %{HTTPS}e  \\\"%r\\\" %>s %b\" https\n\nIt reports the following information:\n\n[14/Jan/2011:07:47:05 -0600] 1  \"GET / HTTP/1.1\" 200 2278\n[14/Jan/2011:07:47:08 -0600] on  \"GET /static/styles.css HTTP/1.1\" 304 -\n[14/Jan/2011:07:47:08 -0600] on  \"GET /static/script.js HTTP/1.1\" 304 -\n[14/Jan/2011:07:47:08 -0600] on  \"GET /static/rss.gif HTTP/1.1\" 304 -\n[14/Jan/2011:07:47:41 -0600] 1  \"GET /search HTTP/1.1\" 200 2592\n\n/static is an alias and it is served by Apache2 directly. / and /search are served by WSGIDaemonProcess. Thanks for the hint.", "id": 143342, "attachment_id": null, "bug_id": 50581, "creation_time": "2011-01-14T08:51:27Z", "time": "2011-01-14T08:51:27Z", "is_private": false}, {"count": 7, "tags": [], "creator": "Graham.Dumpleton@gmail.com", "attachment_id": null, "text": "OP is wrong on a few accounts.\n\nFirst off, under WSGI scripts the correct way of identifying whether HTTPS was used is to check the wsgi.url_scheme variable. The value of HTTPS cannot be relied upon and could be missing depending on the WSGI hosting environment being used even though HTTPS may be used.\n\nTheir probe output even showed the correct value to check:\n\n 'wsgi.url_scheme': 'https'\n\nSecond thing wrong is that the environ they printed out was a WSGI per request environment and not process wide environment variables from os.environ. That WSGI per request environment isn't the same as what you would see for a CGI script where process environment variables are used and so you cant use CGI as the basis for what is in it.\n\nFWIW, the WSGI specification even gives an example for a CGI/WSGI bridge which is tolerant of HTTPS being 'On' or '1' as historically there seems to have been hosting systems where 'On' may not have been used:\n\n    if environ.get('HTTPS', 'off') in ('on', '1'):\n        environ['wsgi.url_scheme'] = 'https'\n    else:\n        environ['wsgi.url_scheme'] = 'http'\n\nA value of '1' for HTTPS was also potentially used in non WSGI hosting systems for Python in the past as some Python web frameworks were hardwired to look for HTTPS being '1' rather than 'On' and also weren't updated to use wsgi.url_scheme instead. It is to accommodate those Python web frameworks that '1' in particular was used rather than 'On' for what was a variable being passed in WSGI environment and nothing to do with CGI or Apache.", "id": 143352, "time": "2011-01-14T23:34:00Z", "bug_id": 50581, "creation_time": "2011-01-14T23:34:00Z", "is_private": false}]