[{"count": 0, "tags": [], "creator": "andreabaroncelli@tiscali.it", "attachment_id": null, "id": 106456, "time": "2007-08-07T07:41:22Z", "bug_id": 43054, "creation_time": "2007-08-07T07:41:22Z", "is_private": false, "text": "When attempting stress tests consisting of several sequential HTTPS user login \nrequests at a relatively high rate (e.g. 200 threads or more at a rate of 1 \nper second, i.e. a 200 second ramp-up period or less), I noticed that after \nsome initial successful iterations all the successive authentications failed \nwith timeout errors.\nBy inspecting the code I found an apparent contradiction in the following \nmethod of the class org.apache.jmeter.util.SSLManager:\n\n/**\n * Static accessor for the SSLManager object. The SSLManager is a singleton.\n*/\npublic static final SSLManager getInstance() {\n  if (null == SSLManager.manager) {\n    return new JsseSSLManager(SSLManager.sslProvider);\n  }\n\n  return SSLManager.manager;\n}\n\nAs you can see, no caching is performed on the object SSLManager.manager (that \nremains unused), which causes high memory consumption and is likely to be the \nresponsible of the observed faulty behaviour. By replacing\n\n    return new JsseSSLManager(SSLManager.sslProvider);\n\nwith\n\n    SSLManager.manager = new JsseSSLManager(SSLManager.sslProvider);\n\nI could solve my issue."}, {"count": 1, "tags": [], "bug_id": 43054, "text": "Created attachment 20613\nResult of `diff -u SSLManager.java.orig SSLManager.java`", "id": 106457, "time": "2007-08-07T07:44:10Z", "creator": "andreabaroncelli@tiscali.it", "creation_time": "2007-08-07T07:44:10Z", "is_private": false, "attachment_id": 20613}, {"count": 2, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 106608, "time": "2007-08-10T11:24:52Z", "bug_id": 43054, "creation_time": "2007-08-10T11:24:52Z", "is_private": false, "text": "Thanks for the report and patch.\n\nThis was a silly error introduced when the dynamic class loading was \nreplaced ... mea culpa.\n\nFixed in SVN r564705"}]