[{"count": 0, "tags": [], "text": "While trying to upgrade to 1.3alpha I get exceptions generated due to the \nPriority class not having a DEBUG field when called from the commons-logging \njar file.\n\nI notice on decompilation that the Priority class now extends the Level class. \nThis means that when I try to call a DEBUG level (or any other probably) I get \nthe following error generated in my tomcat loggs (this is from an axis service)\n\n2005-06-21 19:46:21 StandardWrapperValve[AxisServlet]: Servlet.service() for \nservlet AxisServlet threw exception\njavax.servlet.ServletException: Servlet execution threw an exception\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:269)\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000\n(ApplicationFilterChain.java:98)\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run\n(ApplicationFilterChain.java:176)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:172)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:256)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:643)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:191)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:643)\n\tat org.apache.catalina.valves.RequestFilterValve.process\n(RequestFilterValve.java:336)\n\tat org.apache.catalina.valves.RemoteAddrValve.invoke\n(RemoteAddrValve.java:131)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:641)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.catalina.core.StandardContext.invoke\n(StandardContext.java:2416)\n\tat org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:180)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:643)\n\tat org.apache.catalina.valves.ErrorDispatcherValve.invoke\n(ErrorDispatcherValve.java:171)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:641)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:172)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:641)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:174)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:643)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.coyote.tomcat4.CoyoteAdapter.service\n(CoyoteAdapter.java:223)\n\tat org.apache.coyote.http11.Http11Processor.process\n(Http11Processor.java:601)\n\tat \norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnectio\nn(Http11Protocol.java:392)\n\tat org.apache.tomcat.util.net.TcpWorkerThread.runIt\n(PoolTcpEndpoint.java:565)\n\tat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:619)\n\tat java.lang.Thread.run(Thread.java:534)\n----- Root Cause -----\njava.lang.NoSuchFieldError: DEBUG\n\tat org.apache.commons.logging.impl.Log4JLogger.debug\n(Log4JLogger.java:137)\n\tat org.apache.axis.server.DefaultAxisServerFactory.getServer\n(DefaultAxisServerFactory.java:110)\n\tat org.apache.axis.server.AxisServer.getServer(AxisServer.java:111)\n\tat org.apache.axis.transport.http.AxisServletBase.getEngine\n(AxisServletBase.java:221)\n\tat org.apache.axis.transport.http.AxisServletBase.getEngine\n(AxisServletBase.java:187)\n\tat org.apache.axis.transport.http.AxisServlet.doGet\n(AxisServlet.java:224)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n\tat org.apache.axis.transport.http.AxisServletBase.service\n(AxisServletBase.java:339)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:247)\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000\n(ApplicationFilterChain.java:98)\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run\n(ApplicationFilterChain.java:176)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:172)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:256)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:643)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:191)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:643)\n\tat org.apache.catalina.valves.RequestFilterValve.process\n(RequestFilterValve.java:336)\n\tat org.apache.catalina.valves.RemoteAddrValve.invoke\n(RemoteAddrValve.java:131)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:641)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.catalina.core.StandardContext.invoke\n(StandardContext.java:2416)\n\tat org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:180)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:643)\n\tat org.apache.catalina.valves.ErrorDispatcherValve.invoke\n(ErrorDispatcherValve.java:171)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:641)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:172)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:641)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:174)\n\tat \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:643)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n\tat org.apache.coyote.tomcat4.CoyoteAdapter.service\n(CoyoteAdapter.java:223)\n\tat org.apache.coyote.http11.Http11Processor.process\n(Http11Processor.java:601)\n\tat \norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnectio\nn(Http11Protocol.java:392)\n\tat org.apache.tomcat.util.net.TcpWorkerThread.runIt\n(PoolTcpEndpoint.java:565)\n\tat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:619)\n\tat java.lang.Thread.run(Thread.java:534)\n\nIs there anyway to overcome this or do I need to wait for an official release ?", "is_private": false, "bug_id": 35452, "id": 76593, "time": "2005-06-21T19:59:03Z", "creator": "smcardle@spansurf.com", "creation_time": "2005-06-21T19:59:03Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 35452, "attachment_id": null, "is_private": false, "id": 76913, "time": "2005-07-01T22:38:31Z", "creator": "carnold@apache.org", "creation_time": "2005-07-01T22:38:31Z", "text": "The current CVS HEAD has broken binary and source compatibility in many ways without significant \nreview.  The current goal is to restore binary compatibility (with the potential exception of some fringe \nuse-cases) while moving forward to 1.3's release.  My current tack is to get the log4j 1.2 unit tests \nrunning against the CVS HEAD.  After that is established, will review the particular problem mentioned in \nthe initial bug report.  For additional discussion, see http://marc.theaimsgroup.com/?l=log4j-\ndev&m=111901190409097&w=2."}, {"count": 2, "tags": [], "creator": "carnold@apache.org", "is_private": false, "text": "*** Bug 37735 has been marked as a duplicate of this bug. ***", "id": 83083, "time": "2005-12-01T17:24:07Z", "bug_id": 35452, "creation_time": "2005-12-01T17:24:07Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 35452, "attachment_id": 17105, "id": 83084, "time": "2005-12-01T17:43:44Z", "creator": "jessh@ptc.com", "creation_time": "2005-12-01T17:43:44Z", "is_private": false, "text": "Created attachment 17105\nProposed patch to one major source of this issue (hoisted from bug #35452)"}, {"count": 4, "tags": [], "text": "The following revisions deal with Priority/Level incompatibility:\n\nr 360145: Adds unit tests to v1_2-branch\nr 360147: Adds unit tests to trunk and restores Level extending Priority\n", "is_private": false, "bug_id": 35452, "id": 84092, "time": "2005-12-30T20:09:51Z", "creator": "carnold@apache.org", "creation_time": "2005-12-30T20:09:51Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "carnold@apache.org", "attachment_id": null, "is_private": false, "id": 84096, "time": "2005-12-31T00:33:08Z", "bug_id": 35452, "creation_time": "2005-12-31T00:33:08Z", "text": "r 360148: Move org.apache.log4j.spi.location.LocationInfo back to o.a.l.spi."}, {"count": 6, "tags": [], "bug_id": 35452, "attachment_id": null, "id": 84914, "time": "2006-01-23T23:31:36Z", "creator": "carnold@apache.org", "creation_time": "2006-01-23T23:31:36Z", "is_private": false, "text": "r 371687 spun off the RepositorySelector.detachRepository method onto a new\ninterface RepositorySelectorEx.  This method appeared to be called in only one\nplace in the log4j code base at org.apache.log4j.selector.ContextDetachingSCL\nand the only implementation was a NOP in\norg.apache.log4j.spi.DefaultRepositorySelector.\n\nThe former RepositorySelector.getLoggerRepository(String) was never called in\nthe log4j code base and the only implementation was in DefaultRepositorySelector\nwhich checked the name against \"default\" and returned either\ngetLoggerRepository() or null.  Since the method seemed only to be a place\nholder for some future enhancement, I removed it.\n\nThese changes should allow apps that provided custom RepositorySelectors to\nlog4j 1.2 to be compatible with log4j 1.3.  Existing repository selectors based\non the previous 1.3 definition that depend on detachRepositorySelector being\ncalled should change their implements clause to RepositorySelectorEx.\n\n"}, {"count": 7, "tags": [], "creator": "carnold@apache.org", "attachment_id": null, "is_private": false, "id": 84918, "time": "2006-01-24T00:21:56Z", "bug_id": 35452, "creation_time": "2006-01-24T00:21:56Z", "text": "rev 371712: copied log4j 1.2's implementation of o.a.l.config.PropertyPrinter. \nThe log4j 1.2 implementation appeared more current since it had an ASL 2.0\nlicense and used logger instead of Category.  Expanded imports and corrected\nmisspelling of properties.  Marked print(PrintWriter) as deprecated since it had\nbeen commented out in log4j 1.3 source which was marked as an incompatibility."}, {"count": 8, "tags": [], "bug_id": 35452, "attachment_id": null, "id": 84932, "time": "2006-01-24T05:30:17Z", "creator": "carnold@apache.org", "creation_time": "2006-01-24T05:30:17Z", "is_private": false, "text": "Rev 371792: Restored o.a.l.spi.LoggingEvent.getMDC(String) and getMDCCopy. \nAdded back as deprecated methods implemented in terms of the \"properties\" member\nin LoggingEvent that replaced the \"mdccopy\" member.  After deserialization\ngetMDC(String) may return values that were set from LoggingRepository\nproperties, but that does not seem like a bad behavior.\n\nRev 371802: Removed Configurator.doConfigure(InputStream).  The InputStream form\nof configurator was poor since XML and other potential configuration formats\nneed a base URL to resolve relative resources.  New method was only used by\nFileWatchdog which could be rewritten to use file: URL's.  Expect old\nimplementation would have failed for XML configuration files that had entity\nreferences with relative paths.  The preferred mechanism to create a URL from a\nFile is file.toURI().toURL() which was introduced in JDK 1.4.  The code attempts\nto invoke that by reflection and if that fails, falls back to File.toURL().  If\nthat fails (which should only occur with exceptionally ugly file names), then an\ninternal logging message is emitted.\n"}, {"count": 9, "attachment_id": null, "bug_id": 35452, "is_private": false, "id": 107075, "time": "2007-08-22T16:06:56Z", "creator": "carnold@apache.org", "creation_time": "2007-08-22T16:06:56Z", "tags": [], "text": "log4j 1.3 development is abandoned."}]