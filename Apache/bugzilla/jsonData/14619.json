[{"count": 0, "tags": [], "creator": "tlippe@t-online.de", "attachment_id": null, "is_private": false, "id": 26421, "time": "2002-11-16T21:31:18Z", "bug_id": 14619, "creation_time": "2002-11-16T21:31:18Z", "text": "I tried to copy some files and I wanted to change filename and path with the \nsame task. The filenames should get an 'IDo'-prefix and all occurences of \\src\\ \nshould be changed to \\n_src\\.\n\nSo I tried a copy task with a fileset and a mapper:\n\n    <copy todir=\".\">\n        <fileset dir=\".\">\n            <include name=\"**/src/**/*.java\"/>\n        </fileset>\n       \t<mapper type=\"regexp\" \n       \t        from=\"^(.*)\\\\src\\\\((.*\\\\)*)([a-zA-Z0-9_\\.]+)\\.java$$\" \n       \t        to=\"\\1\\\\n_src\\\\\\3IDo\\4\\.java\"/>\n    </copy>\n\nAnd these are the pathnames of some files:\n\nde\\tom\\src\\Google.java\nde\\tom\\src\\subProject\\Google2.javafile \nde\\tom\\src\\subProject\\oneMore\\Google3.java\n\nBut I got an unexpected result:\n\nde\\tom\\n_src\\nullIDoGoogle.java\nde\\tom\\n_src\\subProject\\IDoGoogle2.java\nde\\tom\\n_src\\subProject\\oneMore\\IDoGoogle3.java\n\nThe problem is the filepath of the first file - nullIDoGoogle.java.\nFor the first file the RegExpression ((.*\\\\)*) is empty and creates a \"null\"-\nString. But I think it should be  \"\"."}, {"count": 1, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 26646, "time": "2002-11-20T13:12:57Z", "bug_id": 14619, "creation_time": "2002-11-20T13:12:57Z", "is_private": false, "text": "which regexp library are you using?"}, {"count": 2, "tags": [], "text": "I didn't set ant.regexp.matcherimpl and I use JDK 1.4 - so I use the regexp \npackage of JDK 1.4.", "is_private": false, "bug_id": 14619, "id": 26886, "time": "2002-11-24T08:01:40Z", "creator": "tlippe@t-online.de", "creation_time": "2002-11-24T08:01:40Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "bodewig@apache.org", "is_private": false, "count": 3, "id": 34061, "time": "2003-03-28T14:54:15Z", "bug_id": 14619, "creation_time": "2003-03-28T14:54:15Z", "text": "null is returned by all three supported libraries for groups that didn't match\nanything, this is even documented 8-)\n\nIn Ant's context, the result it unexpected and I've adapted Ant to use empty\nstrings instead.\n\nI'm not sure how greedy * is, but do you really need the sub-match in your\nfrom pattern?  I.e. won't (.*\\\\) match the same as ((.*\\\\)*)?\n\nShould be fixed in nightly build 2003-03-29."}, {"count": 4, "tags": [], "text": "*** Bug 23106 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 44047, "creation_time": "2003-09-11T15:37:18Z", "time": "2003-09-11T15:37:18Z", "creator": "bodewig@apache.org", "bug_id": 14619, "is_private": false}]