[{"count": 0, "tags": [], "bug_id": 59449, "attachment_id": 33832, "is_private": false, "id": 190798, "time": "2016-05-10T06:02:59Z", "creator": "huxing.zhang@gmail.com", "creation_time": "2016-05-10T06:02:59Z", "text": "Created attachment 33832\npatch to implement the proposed behaviour.\n\nHi, \n\nIn org.apache.catalina.core.ContainerBase#addChildInternal,  we have the following execution order:\n\n1. put child to children\n2. call child' start\n3. fire ADD_CHILD_EVENT\n\nHowever, in org.apache.catalina.core.ContainerBase#removeChild, the execution order is not in reverse order:\n\n1. remove child from children\n2. call child's stop\n3. fire REMOVE_CHILD_EVENT\n4. call child's destroy if necessary \n\nThis may lead to some unexpected behaviour. e.g. One can deploy a web app while it is being undeployed.\n\nProposed execution order  in removeChild:\n\n1. call child's stop\n2. call child's destroy if necessary \n3. remove child from children\n4. fire REMOVE_CHILD_EVENT"}, {"text": "Thanks for the report and the patch.\n\nThis has been fixed in the following versions:\n- 9.0.x for 9.0.0.M5\n- 8.5.x for 8.5.1\n- 8.0.x for 8.0.34\n- 7.0.x for 7.0.70\n- 6.0.x for 6.0.46", "tags": [], "bug_id": 59449, "is_private": false, "count": 1, "id": 190803, "time": "2016-05-10T08:50:30Z", "creator": "markt@apache.org", "creation_time": "2016-05-10T08:50:30Z", "attachment_id": null}]