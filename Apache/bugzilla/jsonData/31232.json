[{"count": 0, "tags": [], "bug_id": 31232, "attachment_id": null, "id": 63554, "time": "2004-09-15T01:16:16Z", "creator": "amoebaworks@yahoo.ca", "creation_time": "2004-09-15T01:16:16Z", "is_private": false, "text": "Setup:\n~~~~~~\nI have two contexts. The root context allows cookies and the sub context does \nURL rewriting. ie:\n\n<Context path=\"\" docBase=\"sub\" reloadable=\"true\" privileged=\"false\"/>\n<Context path=\"/sub\" docBase=\"sub\" cookies=\"false\" reloadable=\"true\" \nprivileged=\"false\"/>\n\nIn the docBase is only an index.jsp which justs print out the session and \ncookie info and does encodeURL() for the link to the sub context.\n\nIf I do:\n1) goto http://localhost:8080/index.jsp (uses cookies)\n2) goto http://localhost:8080/sub/index.jsp (uses URL rewrite)\n3) click on the link which is response.encodeURL(\"/sub/index.jsp\")\n\nIssue:\n~~~~~~\nI find that the root context's cookie is passed onto the sub context. Because \nof this the encodeURL() doesn't encode the URL for rewriting in the sub \ncontext. Each time I click on the response.encodeURL(\"/sub/index.jsp\") link a \nnew session id is generated each time.\n\nExample:\n~~~~~~~~\nRequest URI = /sub/index.jsp\nSession ID = 80A6E1BEC167333A8E05E3588EA0C3A8\nIs New = true\nIs Valid = false\nFrom Cookie = true\nFrom URL = false\n\nCookie[0] (from /index.jsp)\ngetComment() = null\ngetDomain() = null\ngetMaxAge() = -1\ngetName() = JSESSIONID\ngetPath() = null\ngetSecure() = false\ngetValue() = F436A1045778EC9E794449A0192BD406\ngetVersion() = 0\n\n-------------------------\nBecause request.isRequestedSessionIdFromCookie() returns true (since the root's \ncookie is passed to the sub context) the URL is not encoded with the sub \ncontext's session id. \n\nI've tried this on Windows & Linux, and with IE & Firefox...all produced the \nsame results.\n\nI've attached example of this issue."}, {"count": 1, "tags": [], "bug_id": 31232, "is_private": false, "id": 63555, "creation_time": "2004-09-15T01:17:00Z", "time": "2004-09-15T01:17:00Z", "creator": "amoebaworks@yahoo.ca", "text": "Created attachment 12736\nexample tomcat instance of this issue.", "attachment_id": 12736}, {"count": 2, "tags": [], "bug_id": 31232, "text": "This seems contrived... What's the use-case for it?  I'm just curious, not \nclosing this issue at this point.", "id": 63898, "time": "2004-09-20T18:11:25Z", "creator": "yoavs@computer.org", "creation_time": "2004-09-20T18:11:25Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "Our use case is that our system is half web-based and half applet based. The \napplets communicate with our servlets, setup sessions, redirect users to \nvarious web pages. All this has to be done through URL rewriting because the \ncookie caches aren't shared between broswer and the applet. This is in the /sub \ncontext.\n\nNow we have a members section that is cookie based on the root context. We \ntried linking some features of the members section into the applet so it's \naccessible in the applet. But whenever the user goes to the member section all \naccess to the /sub is \"screwed up\" like how I mentioned before: the URL \nrewriting in the sub context doesn't take because of the cookie at the root \ncontext.\n\nLets see workaround for us...\n1) rewrite our site to use URL rewriting instead of cookies.\n2) move members ares to a separate /sub2 context. Can't do that because they \nstill access pages from /\n\n--------------------\nBut use case aside, it just seems like a bug: I specify that the /sub context \nis not to use cookies (force URL rewriting) and it's not using the session ID \ngiven on the URL because the root context uses cookies. I would it expect it \nuse URL rewriting instead of not being able to use anything.\n\nI don't know if there is a spec covering URL-rewriting so I can't refer to \nanything other than it being vendor specific.", "attachment_id": null, "id": 63924, "creation_time": "2004-09-20T21:02:38Z", "time": "2004-09-20T21:02:38Z", "creator": "amoebaworks@yahoo.ca", "bug_id": 31232, "is_private": false}, {"count": 4, "tags": [], "bug_id": 31232, "attachment_id": null, "id": 63926, "time": "2004-09-20T21:26:46Z", "creator": "amoebaworks@yahoo.ca", "creation_time": "2004-09-20T21:26:46Z", "is_private": false, "text": "forgot to mention that for the workaround of forcing users to use URL rewriting \nfor the members section that this goes back to the usual debate of URL \nrewriting vs. cookies where if the user navigates away from the site and comes \nback then the URL rewritten session is gone."}, {"count": 5, "tags": [], "bug_id": 31232, "attachment_id": null, "id": 64006, "time": "2004-09-21T19:18:17Z", "creator": "yoavs@computer.org", "creation_time": "2004-09-21T19:18:17Z", "is_private": false, "text": "I knew we never should have added the option to disable cookies ;)  The Servlet \nSpec doesn't require containers to provide this option, and it seems to be it \njust leads to bad stuff ;)  But now that we provide it, we have to maintain it \nI suppose.  <sigh />"}, {"count": 6, "tags": [], "bug_id": 31232, "attachment_id": null, "id": 66368, "time": "2004-11-03T17:16:59Z", "creator": "yoavs@computer.org", "creation_time": "2004-11-03T17:16:59Z", "is_private": false, "text": "If you want this fixed, submit a patch for it.  I'll be glad to evaluate and \ncommit it as needed.  As evidenced by the length of time (nearly 2 months) \nsince you submitted this issue, no committers care about it enough to spend \ntime investigating/resolving it."}, {"count": 7, "tags": [], "bug_id": 31232, "text": "Hmm, two weeks since patch request, two months since initial issue.  Please \nreopen this if/when you have a patch ready.  I'll be glad to evaluate and \ncommit it then.  Thanks.", "id": 67061, "attachment_id": null, "creator": "yoavs@computer.org", "creation_time": "2004-11-17T18:21:01Z", "time": "2004-11-17T18:21:01Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 31232, "attachment_id": null, "id": 69866, "time": "2005-01-20T14:54:33Z", "creator": "olivier.vit@free.fr", "creation_time": "2005-01-20T14:54:33Z", "is_private": false, "text": "(In reply to comment #6)\n> If you want this fixed, submit a patch for it.  I'll be glad to evaluate and \n> commit it as needed.  As evidenced by the length of time (nearly 2 months) \n> since you submitted this issue, no committers care about it enough to spend \n> time investigating/resolving it.\n\nI don't see how commiters are the one that decide in which direction the code\nevolves, where it is being fixed or not\nIt should be driven by someone, or a group of people, acting as 'drivers', based\non how critical are bugs and users requests\nThis is the only way for the apache group to keep users confidence !"}, {"count": 9, "tags": [], "text": "Created attachment 14294\nPatch for issue\n\nHey Yoav,\n\nI've got a patch for this. Finally got some time to track it down.\n\nCurrently the cookie session ID always overrides the URL session ID, regardless\nif the context enables cookies or not.\n\nThis patch will check to see if the context enables cookies first. If it does\nthen the cookie session ID overrides the session ID from the URL. If it does\nnot then the parseSessionCookieId is skipped completely.", "is_private": false, "id": 71055, "creator": "amoebaworks@yahoo.ca", "time": "2005-02-16T02:24:04Z", "bug_id": 31232, "creation_time": "2005-02-16T02:24:04Z", "attachment_id": 14294}, {"count": 10, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "I do not agree with this patch in the general case. If a cookie is submitted,\nwe'll use it.", "id": 71066, "time": "2005-02-16T10:09:28Z", "bug_id": 31232, "creation_time": "2005-02-16T10:09:28Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 31232, "attachment_id": null, "id": 71092, "time": "2005-02-16T19:01:55Z", "creator": "amoebaworks@yahoo.ca", "creation_time": "2005-02-16T19:01:55Z", "is_private": false, "text": "(In reply to comment #10)\n> I do not agree with this patch in the general case. If a cookie is submitted,\n> we'll use it.\n\nI agree with that with one exception. This is not a general case, it's a use\ncase where the (sub) context disables cookies and is expecting to use URL\nrewriting. The presence of the (ROOT) cookie forces a new session on each\nrequest since the URL rewriting is always overriden by the cookie, thus making\nthe (sub) context unusable.\n\nMixing cookies and URL rewriting is okay when the ROOT context doesn't use\ncookies (ie: /subA uses cookies, and /subB uses URL rewrite). Thought it would\nbe easier to make the patch since this use case seems like a bug. See my comment\n#3 for additional reference.\n\nMore workarounds that I thought of are:\n* create a host listening on a separate port. However this port may get blocked\nby firewalls since it's not port 80.\n* setting up a separate domain and use URL rewriting just in that domain.\n* don't use cookies at all. Not my favorite.\n\nI just don't want other people to experience the trouble that I had.\n\nIf the decision is still a WONTFIX, then please add a note in the docs for the\ncookies attribute for Context that URL rewriting won't work for sub contexts if\nthe ROOT context uses cookies.\n\nthanks."}]