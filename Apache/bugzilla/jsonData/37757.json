[{"count": 0, "tags": [], "creator": "andrea.obergfell@hauk-sasko.de", "attachment_id": null, "id": 83145, "time": "2005-12-02T16:24:54Z", "bug_id": 37757, "creation_time": "2005-12-02T16:24:54Z", "is_private": false, "text": "I have a CGI program (written in C) which runs fine on Linux with any (suitable)\nPATH_INFO and also runs fine on Windows as long as there are no \"special\ncharacters\" in PATH_INFO. However, if I call it with UTF-8 encoded special\ncharacters in PATH_INFO, getenv doesn't give me back the special characters.\n\nTo be sure this has nothing to do with my CGI program I wrote a simple PERL\nscript which just prints the CGI environment:\n\n#!C:/Programme/Perl/bin/perl.exe\n#\n\nprint \"HTTP/1.1 200 OK\\n\";\nprint \"Content-type: text/plain\\n\\n\";\n\nprint \"Environment:\\n\";\nwhile (($key,$value) = each %ENV) {\n        print \"$key=$value\\n\";\n}\n\nIf I call it from the following URL:\n\nhttp://my.win2k-host.name/cgi-bin/nph-printenv.pl/test/\u00dcbersicht\n\nthe special character at the beginning of the last part doesn't come as the\ngerman special character it's supposed to be but as some other non-standard\ncharacter: PATH_INFO=/test/?bersicht\nIf I call the same script with the same browser from my Linux machine:\n\nhttp://my.linux-host.name/cgi-bin/nph-printenv.pl/test/\u00dcbersicht\n\neverything works fine.\n\nThe same happens if I mask the special UTF-8 character:\n\n.../cgi-bin/nph-printenv.pl/test/%c3%9cbersicht\n\nIn Linux all is fine, in Windows PATH_INFO becomes /test/?bersicht\n\nThis is a real problem because the CGI program deals with file names it gets\nfrom PATH_INFO and there seems no way to restore the file name from what comes\nin PATH_INFO.\n\nI almost forgot to say, the testing perl script works fine under Windows when\nit's called as a non-NPH script (with the HTTP status line output removed of\ncourse). So the problem seems to be related to the NPH stuff."}, {"count": 1, "tags": [], "creator": "wrowe@apache.org", "text": "Your application or build of perl isn't win32 aware.\n\nWin32 handles int'l data in unicode, and perl/your script did get that unicode\nvalue in the environment table [unicode] but didn't process it in that way.\n\nIf your build of perl is win32-aware, the char data should be present.  How\nit represents that when it uses print, well you may need to identify the local\ncode page as utf-8 within perl so it knows how to print.", "id": 112117, "time": "2007-12-22T13:14:25Z", "bug_id": 37757, "creation_time": "2007-12-22T13:14:25Z", "is_private": false, "attachment_id": null}]