[{"count": 0, "tags": [], "text": "Hi:\n\nCan you please add a copySheet method on org.apache.poi.ss.util.SheetUtil helper class?\nIt is great help on users to do the copy sheet process", "is_private": false, "id": 182814, "creation_time": "2015-05-04T12:19:24Z", "time": "2015-05-04T12:19:24Z", "creator": "pulikkot@aol.com", "bug_id": 57885, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 57885, "is_private": false, "text": "To copy a sheet within one workbook, you just need to call workbook.cloneSheet(sheetIndex)\n\nFor any other kind of sheet copying, if you'd care to work up a patch to add the missing functionality, we'd be delighted to review it and commit it if appropriate!", "id": 182816, "time": "2015-05-04T13:08:55Z", "creator": "apache@gagravarr.org", "creation_time": "2015-05-04T13:08:55Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "pulikkot@aol.com", "is_private": false, "id": 182830, "time": "2015-05-05T07:52:15Z", "bug_id": 57885, "creation_time": "2015-05-05T07:52:15Z", "tags": [], "text": "How do I copy the cloned to sheet to another workbook? for example copy a sheet from workbook1 and need to paste the copied one to another workbook2"}, {"count": 3, "tags": [], "text": "http://www.coderanch.com/t/420958/open-source/Copying-sheet-excel-file-excel\n\nAlso I have tired to copy sheet based on below open source forum using poi-3.11 jars\n\ncopy XLS sheets is working fine (XLS to XLS) I was able to open the copied sheet.\nBut XLSX sheets (XLSX to XLSX) giving me error while I opening the copied sheet \"Removed Records: Merge cells from /xl/worksheets/sheet5.xml part\"", "is_private": false, "id": 182832, "creator": "pulikkot@aol.com", "time": "2015-05-05T08:05:14Z", "bug_id": 57885, "creation_time": "2015-05-05T08:05:14Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "I don't think we can use the code from coderanch as I don't believe it's under a compatible license\n\nIf you'd be able to write up (from scratch!) code to do the same things, we'd love it as a contribution to the project! See http://poi.apache.org/guidelines.html for a bit more on contributing", "attachment_id": null, "id": 182835, "creator": "apache@gagravarr.org", "time": "2015-05-05T08:57:11Z", "bug_id": 57885, "creation_time": "2015-05-05T08:57:11Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 57885, "attachment_id": 32756, "text": "Created attachment 32756\nMerged Cell border style issue", "id": 183106, "time": "2015-05-26T10:06:20Z", "creator": "pulikkot@aol.com", "creation_time": "2015-05-26T10:06:20Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 57885, "attachment_id": null, "id": 183107, "time": "2015-05-26T10:07:51Z", "creator": "pulikkot@aol.com", "creation_time": "2015-05-26T10:07:51Z", "is_private": false, "text": "As suggested, I wrote a code snippet for copy sheet functionality from one work book to another. See the code snippet and attached workbook\n\nAfter the copy functionality, my output file was corrupted and showed the error \"Repaired Records: Format from /xl/styles.xml part (Styles)\" \n\nWhen I look at the reason on different poi forums, I can see the that it is the issue with border style. And see the solution, unsetBorderId and unsetFillId\n\nAfter applying the unset functions data was successfully copied without border style\n\nIn nutshell, I can see some issues with border styling the XSSF type files \n\npackage eis.utils;\n\nimport java.io.ByteArrayOutputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.InputStream;\nimport java.util.Date;\n\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.CellStyle;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.ss.usermodel.WorkbookFactory;\nimport org.apache.poi.xssf.usermodel.XSSFCellStyle;\n\npublic class XlsxExcelUtil {\n\n  private static void removeRows(Sheet destSheet) {\n    if (null != destSheet) {\n      for (int i = destSheet.getFirstRowNum(); i <= destSheet.getLastRowNum(); i++) {\n        Row row = destSheet.getRow(i);\n        if (null != row) {\n          destSheet.removeRow(row);\n        }\n      }\n    }\n  }\n\n  private static void addRows(Sheet destSheet, int totalRowCount) {\n    if (null != destSheet) {\n      for (int i = 0; i <= totalRowCount; i++) {\n        destSheet.createRow(i);\n      }\n    }\n  }\n\n  private static void copyMergedRegion(Sheet srcSheet, Sheet destSheet) {\n    for (int i = 0; i < srcSheet.getNumMergedRegions(); i++) {\n      destSheet.addMergedRegion(srcSheet.getMergedRegion(i));\n    }\n  }\n\n  private static void copyRow(Row srcRow, Row destRow) {\n    destRow.setHeight(srcRow.getHeight());\n    for (int j = srcRow.getFirstCellNum(); j <= srcRow.getLastCellNum(); j++) {\n      Cell srcCell = srcRow.getCell(j);\n      if (srcCell != null) {\n        Cell destCell = destRow.createCell(j);\n        copyCell(srcCell, destCell);\n      }\n    }\n  }\n\n  private static void copyCell(Cell srcCell, Cell destCell) {\n    CellStyle cellStyleClazz = destCell.getSheet().getWorkbook()\n        .createCellStyle();\n    if (cellStyleClazz instanceof XSSFCellStyle) {\n      XSSFCellStyle newCellStyle = (XSSFCellStyle) cellStyleClazz;\n      newCellStyle.cloneStyleFrom(srcCell.getCellStyle());\n      newCellStyle.setDataFormat(srcCell.getCellStyle().getDataFormat());\n      // Issue with border style, so added this code\n      // newCellStyle.getCoreXf().unsetBorderId();\n      // newCellStyle.getCoreXf().unsetFillId();\n      // -------------\n      destCell.setCellStyle(newCellStyle);\n    }\n\n    if (srcCell.getCellType() == Cell.CELL_TYPE_BLANK) {\n      destCell.setCellType(Cell.CELL_TYPE_BLANK);\n    } else if (srcCell.getCellType() == Cell.CELL_TYPE_STRING) {\n      destCell.setCellValue(srcCell.getStringCellValue());\n    } else if (srcCell.getCellType() == Cell.CELL_TYPE_NUMERIC) {\n      destCell.setCellValue(srcCell.getNumericCellValue());\n    } else if (srcCell.getCellType() == Cell.CELL_TYPE_BOOLEAN) {\n      destCell.setCellValue(srcCell.getBooleanCellValue());\n    } else if (srcCell.getCellType() == Cell.CELL_TYPE_FORMULA) {\n      destCell.setCellFormula(srcCell.getCellFormula());\n    } else if (srcCell.getCellType() == Cell.CELL_TYPE_ERROR) {\n      destCell.setCellErrorValue(srcCell.getErrorCellValue());\n    }\n  }\n\n  /**\n   * \n   * Copy a sheet from one workbook to another workbook. The method supports\n   * only two similar type of workbooks Xlsx type\n   * \n   * @param srcSheet\n   * @param destSheet\n   */\n  public static void copySheet(Sheet srcSheet, Sheet destSheet) {\n    removeRows(destSheet);\n    addRows(destSheet, srcSheet.getLastRowNum());\n    copyMergedRegion(srcSheet, destSheet);\n    for (int i = srcSheet.getFirstRowNum(); i <= srcSheet.getLastRowNum(); i++) {\n      Row srcRow = srcSheet.getRow(i);\n      if (null == srcRow) {\n        destSheet.createRow(i);\n      } else {\n        Row destRow = destSheet.createRow(i);\n        copyRow(srcRow, destRow);\n      }\n    }\n  }\n\n  public void testXlsxSheetCopy() {\n    try {\n      File templateFile = new File(\"C:/TestXlsx/Template_V2.xlsx\");\n      InputStream inputStream = new FileInputStream(templateFile);\n      Workbook merWorkBook = WorkbookFactory.create(inputStream);\n      inputStream.close();\n      Sheet destPdrSheet = merWorkBook.getSheet(\"PDR\");\n\n      File pdrFile = new File(\"C:/TestXlsx/P23163.xlsx\");\n      InputStream pdrInputStream = new FileInputStream(pdrFile);\n      Workbook pdrWorkBook = WorkbookFactory.create(pdrInputStream);\n      pdrInputStream.close();\n      Sheet srcPdrSheet = pdrWorkBook.getSheetAt(0);\n\n      XlsxExcelUtil.copySheet(srcPdrSheet, destPdrSheet);\n\n      ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n      merWorkBook.setForceFormulaRecalculation(true);\n      merWorkBook.write(byteArrayOutputStream);\n\n      FileOutputStream resultFile = new FileOutputStream(new File(\n          \"C:/TestXlsx/outputXlsxFile.xlsx\"));\n      byteArrayOutputStream.writeTo(resultFile);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n  public static void main(String[] args) {\n    XlsxExcelUtil obj = new XlsxExcelUtil();\n    obj.testXlsxSheetCopy();\n  }\n}"}, {"count": 7, "tags": [], "text": "Created attachment 32826\ncopy a sheet from source to destination\n\nI have written the code sheet copy process, added test case in the same class. Current limitation is Font style was not able to copy, but I'm least prioritized this issue.\nAttached the code and different type of source sheet and destination sheet \n\nthanks\nPrejith George", "attachment_id": 32826, "id": 183550, "creator": "pulikkot@aol.com", "time": "2015-06-16T12:33:00Z", "bug_id": 57885, "creation_time": "2015-06-16T12:33:00Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 57885, "text": "(In reply to Prejith Pulikkottil from comment #7)\n> Created attachment 32826 [details]\n> copy a sheet from source to destination\n\nIs this code licensed under Apache software license 2.0?\n\nCould you reformulate this as a patch against POI trunk?\nhttps://poi.apache.org/guidelines.html#SubmittingPatches\n\nSheetUtil.java: https://svn.apache.org/viewvc/poi/trunk/src/java/org/apache/poi/ss/util/SheetUtil.java?view=log\nTestSheetUtil.java: https://svn.apache.org/viewvc/poi/trunk/src/testcases/org/apache/poi/ss/util/TestSheetUtil.java?view=log\nExcel files: https://svn.apache.org/viewvc/poi/trunk/test-data/spreadsheet/", "id": 191791, "time": "2016-06-19T20:28:24Z", "creator": "onealj@apache.org", "creation_time": "2016-06-19T20:28:24Z", "is_private": false, "attachment_id": null}]