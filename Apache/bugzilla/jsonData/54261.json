[{"count": 0, "tags": [], "creator": "markt@apache.org", "is_private": false, "id": 163959, "attachment_id": null, "bug_id": 54261, "creation_time": "2012-12-07T20:15:14Z", "time": "2012-12-07T20:15:14Z", "text": "Tomcat does not follow the language of section 8.2.1 of the Servlet specification.\n\nIn short, JARs provided at the container level:\n- are scanned for SCIs\n- are scanned for static resources\n- are NOT scanned for web-fragment.xml\n- are NOT excluded by an absolute ordering\n\nTomcat does not follow these last two points."}, {"count": 1, "tags": [], "text": "Mark, what version of specification are you referring to?\n\nI do not see such wording in ch.8.2.1 of Servlet Spec.\"3.0 Rev a\"\n(servlet-3_0-mrel-spec.pdf).\n\n> - are scanned for static resources\n> - are NOT scanned for web-fragment.xml\n\nI do not quite understand why web-fragment.xml and static resources are treated differently.\n\nOne more item for the list:\n- are scanned for TLDs", "attachment_id": null, "bug_id": 54261, "id": 163980, "time": "2012-12-09T03:34:58Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2012-12-09T03:34:58Z", "is_private": false}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 163981, "time": "2012-12-09T11:25:13Z", "bug_id": 54261, "creation_time": "2012-12-09T11:25:13Z", "text": "The relevant section is:\n<quote>\nIf a framework wants its META-INF/web-fragment.xml honored in such a way that it augments a web application's web.xml, the framework must be bundled within the web application's WEB-INF/lib directory. In order for any other types of resources (e.g., class files) of the framework to be made available to a web application, it is sufficient for the framework to be present anywhere in the classloader delegation chain of the web application. In other words, only JAR files bundled in a web application's WEB-INF/lib directory, but not those higher up in the class loading delegation chain, need to be scanned for web-fragment.xml\n</quote>\n\nThe wording isn't as clear as it could be but the Servlet 3.0 EG lead has confirmed the intended behaviour is as per my description. And yes, they should still be scanned for TLDs.\n\nI haven't tried to understand the reasoning behind this decision. My head hurts enough already from just trying to nail down what the intended behaviour is meant to be. I have thought through the implications for WebSocket and there isn't anything I am worried about at this point."}, {"count": 3, "tags": [], "bug_id": 54261, "is_private": false, "text": "(In reply to comment #2)\n> The relevant section is:\n> <quote>\n> If a framework wants its META-INF/web-fragment.xml honored in such a way\n> that it augments a web application's web.xml, (...)\n\nOK, this explains web fragments.\nIt should also imply that they\n- are NOT scanned for @WebServlet/@WebFilter/@WebListener\n\nbased on a) support for metadata-complete attribute in web-fragmrnt.xml, b) 8.1 mentions WEB-INF/lib and WEB-INF/classes only\n<quote from=8.1>\nIn a web application, classes using annotations will have their annotations processed\nonly if they are located in the WEB-INF/classes directory, or if they are packaged\nin a jar file located in WEB-INF/lib within the application.\n</quote>\n\n\nRegarding static resources see ch.4.6 that mentions WEB-INF/lib only, thus they are \"NOT scanned\",\n\n<quote from=4.6>\nThe getResource and getResourceAsStream methods take a String with a leading\n\u201c/\u201d as an argument that gives the path of the resource relative to the root of the\ncontext or relative to the META-INF/resources directory of a JAR file inside the\nweb application\u2019s WEB-INF/lib directory\n</quote>\n\nThe \"resources\" mentioned in the fragment of 8.2.1 that Mark quoted, I think are referring to class and property files available through classloader, and are not talking about \"static resources\".\n\n\nI think we can straighten this for Tomcat 8 (with its better support for resources),\nbut for Tomcat 7 I am a bit afraid to change things.\n\n\nI think that a reason behind disallowing web fragments at container level could be\na) to lessen surprise for web applications that are moved between different environments.\nb) it simplifies requirements for declaration of web fragment ordering\nc) it simplifies requirements for containers implementing this new feature\nd) if a web fragment is in the container, it will be injected into all webapps indiscriminately. Some of them may not expect this. It might even lead to some security problems. Well, a SCI can inject the same servlets/filters/listeners as a web fragment, but usually programmers are more accurate.\n\nIf we do change things for Tomcat 7, I think at most we can disallow web-fragments coming from the parent (\"common\") classloader, based on security concerns from \"d)\". I think whatever is injected into specific web application (via a DirContext (like used by Eclipse IDE - see bug 51741) or via VirtualWebappLoader in its context.xml) is under control of a specific web application and should be allowed.", "id": 163992, "time": "2012-12-09T19:33:40Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2012-12-09T19:33:40Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 54261, "attachment_id": null, "text": "The specification is about webapps and their packaging, it never deals with anything related to the container own packaging. So there is not going to be any requirement for that feature, but it is not forbidden either.\n\nCertainly having \"shared\" fragments with \"known\" names reduces webapp portability, just like the \"known\" names of \"base\" servlets (which was needed of course) did and had to be standardized later on.", "id": 164009, "time": "2012-12-10T14:41:43Z", "creator": "remm@apache.org", "creation_time": "2012-12-10T14:41:43Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 54261, "text": "This is going to be very tricky to implement without changes to the JarScanner interface. That makes it tempting to defer this until Tomcat 8.\n\nUsers that want exactly the specification defined behaviour can add the JARs to the org.apache.catalina.startup.ContextConfig.jarsToSkip\n\nScanning for SCIs in container JARs is only implied and then in terms of an SCI for JSP functionality. Tomcat doesn't (yet) use an SCI in this case. If it did, we could hard-code the addition of that SCI and not rely on scanning anyway.\n\nCATALINA_BASE/lib is the combined common/server/shared class loader. JARs in the shared loader are *meant* to be treated as if they are part of the web app (Tomcat specific extension).\n\nGiven all of the above, I am going to mark this as WONTFIX.", "id": 164365, "time": "2013-01-03T21:13:51Z", "creator": "markt@apache.org", "creation_time": "2013-01-03T21:13:51Z", "is_private": false, "attachment_id": null}]