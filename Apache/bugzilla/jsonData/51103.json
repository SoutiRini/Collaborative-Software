[{"count": 0, "tags": [], "bug_id": 51103, "text": "Overview\n--------\nThe mod_reqtimeout module is not dropping connections and returning 408 when dealing with \"slow http header\" or \"slow http body\" requests.  Instead, it is either truncating the request and handling it, or dropping the request with a 400 status code.\n\nSteps to reproduce (A)\n----------------------\n1. Launch a slow-post attack using the OWASP HTTP DoS tool (http://code.google.com/p/owasp-dos-http-post/downloads/list)\nhttp_dos_cli --host 1.2.3.4 --port 80 --path /server-status --slow-post --post-field j_username --connections 1000 --rate 1000 --timeout 5\n2. Sniff network traffic using Wireshark, observe requests being truncated and handled, resulting in a 200 return code.\n\nSteps to reproduce (B)\n----------------------\n1. Launch a slow-headers attack\n2. Sniff network trafic using Wireshark, observe requests being dropped with a 400 code being returned.\n\nExpected behavior\n-----------------\nRequest is dropped and a 408 status code is returned.\n\nActual behavior\n---------------\nRequest is dropped and a 400 status code is returned OR request is truncated and handled normally.\n\nPlatform\n--------\nSoftware: Apache 2.2.17 (MPM-worker)\nOS: Solaris 5.10 32-bit\nHardware: Sun SPARC\n\nAdditional information\n----------------------\n\nmod_reqtimeout configuration\nRequestReadTimeout header=10-20,MinRate=500 body=10-20,MinRate=500\n\nModSecurity 2.5.13 is also configured.\n\nApache debug logs show that incoming requests time out:\n\n[Tue Apr 19 08:55:09 2011] [info] [client 5.6.7.8] Request header read\ntimeout\n[Tue Apr 19 08:55:09 2011] [error] [client 5.6.7.8] request failed: error\nreading the headers\n\nOR\n\n[Tue Apr 19 09:01:20 2011] [info] [client 5.6.7.8] Request body read timeout\n\n---\n\nThanks!", "id": 145937, "time": "2011-04-21T15:01:56Z", "creator": "guillaume.bilodeau@gmail.com", "creation_time": "2011-04-21T15:01:56Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "id": 145948, "time": "2011-04-22T08:02:17Z", "bug_id": 51103, "creation_time": "2011-04-22T08:02:17Z", "is_private": false, "text": "(In reply to comment #0)\n> Steps to reproduce (A)\n> ----------------------\n> 1. Launch a slow-post attack using the OWASP HTTP DoS tool\n> (http://code.google.com/p/owasp-dos-http-post/downloads/list)\n> http_dos_cli --host 1.2.3.4 --port 80 --path /server-status --slow-post\n> --post-field j_username --connections 1000 --rate 1000 --timeout 5\n> 2. Sniff network traffic using Wireshark, observe requests being truncated and\n> handled, resulting in a 200 return code.\n\nI couldn't reproduce this (but I don't have windows to actually try the tool). Can you provide the wireshark dump (maybe filtered to only contain one request)? Do you have mod_status listening for /server-status?\n\n\n> Steps to reproduce (B)\n> ----------------------\n> 1. Launch a slow-headers attack\n> 2. Sniff network trafic using Wireshark, observe requests being dropped with a\n> 400 code being returned.\n\nThis happens in various situations and is fixed in trunk. The fixes should probably be backported to 2.2.x. The relevant commits are r820760 r919323 r937858 r938265"}, {"count": 2, "tags": [], "creator": "guillaume.bilodeau@gmail.com", "attachment_id": 26927, "id": 145960, "time": "2011-04-22T12:22:57Z", "bug_id": 51103, "creation_time": "2011-04-22T12:22:57Z", "is_private": false, "text": "Created attachment 26927\nSlow post Wireshark dump"}, {"count": 3, "tags": [], "creator": "guillaume.bilodeau@gmail.com", "attachment_id": null, "id": 145962, "time": "2011-04-22T12:35:33Z", "bug_id": 51103, "creation_time": "2011-04-22T12:35:33Z", "is_private": false, "text": "Hi Stefan and thanks for taking the time to look at this.\n\n(In reply to comment #1)\n> (In reply to comment #0)\n> > Steps to reproduce (A)\n> > ----------------------\n> > 1. Launch a slow-post attack using the OWASP HTTP DoS tool\n> > (http://code.google.com/p/owasp-dos-http-post/downloads/list)\n> > http_dos_cli --host 1.2.3.4 --port 80 --path /server-status --slow-post\n> > --post-field j_username --connections 1000 --rate 1000 --timeout 5\n> > 2. Sniff network traffic using Wireshark, observe requests being truncated and\n> > handled, resulting in a 200 return code.\n> \n> I couldn't reproduce this (but I don't have windows to actually try the tool).\n> Can you provide the wireshark dump (maybe filtered to only contain one\n> request)? Do you have mod_status listening for /server-status?\n\nI have attached a Wireshark dump to the bug report. Let me know if this is what you expected, I'm actually new to Wireshark.\n\nWe have mod_status listening on /server-status and it's responding correctly when invoking with a browser.\n\nApache is now returning a 400 code, similar to the slow-headers attack. We did tweak a few settings (disabled ModSecurity, turned off ExtendedStatus) so it might have had that effect. I will investigate further.\n\n> > Steps to reproduce (B)\n> > ----------------------\n> > 1. Launch a slow-headers attack\n> > 2. Sniff network trafic using Wireshark, observe requests being dropped with a\n> > 400 code being returned.\n> \n> This happens in various situations and is fixed in trunk. The fixes should\n> probably be backported to 2.2.x. The relevant commits are r820760 r919323\n> r937858 r938265\n\nThis is good to know. Do you have any idea when these changes will be backported or when 2.3 will be released?"}, {"count": 4, "attachment_id": null, "bug_id": 51103, "is_private": false, "id": 145986, "time": "2011-04-25T14:57:19Z", "creator": "sf@sfritsch.de", "creation_time": "2011-04-25T14:57:19Z", "tags": [], "text": "(In reply to comment #3)\n> I have attached a Wireshark dump to the bug report. Let me know if this is\n> what you expected, I'm actually new to Wireshark.\n\nThanks, that was what I wanted.\n\n> We have mod_status listening on /server-status and it's responding correctly\n> when invoking with a browser.\n> \n> Apache is now returning a 400 code, similar to the slow-headers attack. We did\n> tweak a few settings (disabled ModSecurity, turned off ExtendedStatus) so it\n> might have had that effect. I will investigate further.\n\nBut as you say, it does not show a 200 result code. I will mark this as invalid because for the other issues, there have already been different PRs. If you can reproduce the code 200 sent despite of a timeout issue, please change the status from INVALID to REOPENED.\n\n> > This happens in various situations and is fixed in trunk. The fixes should\n> > probably be backported to 2.2.x. The relevant commits are r820760 r919323\n> > r937858 r938265\n> \n> This is good to know. Do you have any idea when these changes will be\n> backported or when 2.3 will be released?\n\nI have now proposed them for the next 2.2.x release.\n\n2.4 is hopefully due in 1-2 months."}, {"count": 5, "tags": [], "creator": "guillaume.bilodeau@gmail.com", "text": "Created attachment 26935\nSlow post Wireshark dump with 302 code", "id": 146006, "time": "2011-04-26T09:09:34Z", "bug_id": 51103, "creation_time": "2011-04-26T09:09:34Z", "is_private": false, "attachment_id": 26935}, {"count": 6, "tags": [], "creator": "guillaume.bilodeau@gmail.com", "attachment_id": null, "id": 146007, "time": "2011-04-26T09:21:30Z", "bug_id": 51103, "creation_time": "2011-04-26T09:21:30Z", "is_private": false, "text": "(In reply to comment #4)\n> (In reply to comment #3)\n> But as you say, it does not show a 200 result code. I will mark this as invalid\n> because for the other issues, there have already been different PRs. If you can\n> reproduce the code 200 sent despite of a timeout issue, please change the\n> status from INVALID to REOPENED.\n\nOk, I have reproduced the problem, although it's slightly different from what I initially wrote.\n\nYou will see in the new attachment that the request times out but returns a 302 Redirect instead of a 400 Bad Request. A valid request should indeed return a 302 because of a RedirectMatch rule in the httpd-vhosts.conf file, but the request times out and a 302 is returned anyway. Also, you will see that the client keeps sending data after the connection is closed - although this may be an issue with the http_dos_cli tool."}, {"count": 7, "tags": [], "text": "(In reply to comment #6)\n> You will see in the new attachment that the request times out but returns a 302\n> Redirect instead of a 400 Bad Request. A valid request should indeed return a\n> 302 because of a RedirectMatch rule in the httpd-vhosts.conf file, but the\n> request times out and a 302 is returned anyway. Also, you will see that the\n> client keeps sending data after the connection is closed - although this may be\n> an issue with the http_dos_cli tool.\n\nAnd because of this, the http_dos_cli tool can continue sending data slowly and hogging worker threads.  The ModSecurity rule that checks for 408 bursts from a single IP cannot know that this is coming from a slow http DoS attack, and so cannot drop further connections from that IP.", "is_private": false, "bug_id": 51103, "id": 146009, "time": "2011-04-26T11:14:43Z", "creator": "guillaume.bilodeau@gmail.com", "creation_time": "2011-04-26T11:14:43Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "id": 146060, "time": "2011-05-01T21:15:03Z", "bug_id": 51103, "creation_time": "2011-05-01T21:15:03Z", "is_private": false, "text": "Thanks for the additional dump. This is definitely a bug in httpd, but I am not sure yet how to fix it.\n\nThe problem is that ap_finalize_request_protocol() ignores errors returned by ap_discard_request_body(). But simply calling ap_die() inside ap_finalize_request_protocol() causes various test failures."}, {"attachment_id": null, "tags": [], "bug_id": 51103, "is_private": false, "count": 9, "id": 146320, "time": "2011-05-14T20:33:50Z", "creator": "sf@sfritsch.de", "creation_time": "2011-05-14T20:33:50Z", "text": "With r1103213 in trunk, the connection will be closed correctly after a timeout during a request body that is discarded.\n\nIt still means that the request is logged as successful an not as 408, though. One could argue that this is correct because the request was completed successfully. But I see that other modules may be interested if there was a timeout. I will have to think some more about that."}, {"count": 10, "text": "r1103213 has been backported to 2.2.20 as r1162862.", "bug_id": 51103, "attachment_id": null, "id": 149384, "time": "2011-09-17T15:30:44Z", "creator": "sf@sfritsch.de", "creation_time": "2011-09-17T15:30:44Z", "tags": [], "is_private": false}]