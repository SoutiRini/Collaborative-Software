[{"attachment_id": null, "tags": [], "bug_id": 16798, "text": "I stumbled across this while developing a 3rd party module:\n\nSyntax error on line 260 of /home/apache2/conf/httpd.conf:\nCannot load /home/apache2/modules/mod_status.so into server:\n/home/apache2/modules/mod_status.so: undefined symbol: __floatdisf\n\nI have the following relavent conf:\n\nLoadModule status_module modules/mod_status.so\n\n#ExtendedStatus On\n\n<Location /server-status>\n    SetHandler server-status\n#    Order deny,allow\n#    Deny from all\n#    Allow from .example.com\n</Location>", "count": 0, "id": 30725, "time": "2003-02-05T11:20:57Z", "creator": "achowe@snert.com", "creation_time": "2003-02-05T11:20:57Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 16798, "attachment_id": null, "id": 30749, "time": "2003-02-05T14:11:01Z", "creator": "trawick@apache.org", "creation_time": "2003-02-05T14:11:01Z", "is_private": false, "text": "(FYI... it would be good to specify the operating system.  I'm guessing you're\nhitting this problem on AIX or Solaris, though I guess it could happen anywhere.)\n\n__floatdisf is called from gcc-generated arithmetic code.\n__floatdisf resides in libgcc.a.\n\n(There are some other such arithmetic routines in the same category.)\n\nThere are a few ways to solve this:\n1) statically enable the module that has such unresolved references\n(since httpd executable will be linked against libgcc.a under the covers\nand such references will be resolved)\n\n2) use a different build or version of gcc\ne.g., on one AIX box with old gcc 2.95.2 binary installation from who knows\nwhere, I get these unresolved references in mod_status:\n__divdi3, __floatdisf, __moddi3\non another AIX box with IBM's RPM binary installation of gcc (see AIX toolbox\nsomewhere on *.ibm.com) I don't have any such problems...  I think recent gcc\nautomatically includes libgcc.a, and perhaps IBM put that patch into gcc sources\nwhen building the RPM\n\n3) try to get libgcc.a statically linked into the DSO\n"}, {"count": 2, "tags": [], "text": "Ooops sorry. \n\nSystem information for Cobalt Qube 1:\n\n# uname -a\nLinux 2.0.34C52_SK #1 Tue Nov 30 18:14:40 PST 1999 mips unknown\n# gcc -v\nReading specs from /usr/lib/gcc-lib/mipsel-linux/2.7.2/specs\ngcc version 2.7.2\n", "attachment_id": null, "bug_id": 16798, "id": 30750, "time": "2003-02-05T14:16:28Z", "creator": "achowe@snert.com", "creation_time": "2003-02-05T14:16:28Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 16798, "text": "The problem I found was that this appears to be a regression between 2.0.43 and\n2.0.44.", "id": 30751, "time": "2003-02-05T14:28:44Z", "creator": "achowe@snert.com", "creation_time": "2003-02-05T14:28:44Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 16798, "text": "Unfortunately, the fact that it is a regression from one release to another\ndoesn't change anything.  We can't worry about the generated code to the level\nof whether or not gcc chooses to call functions in libgcc.a.\n\nYou're going to need to follow one of the suggestions I outlined previously.\nHopefully something like this will work:\n\nSH_LDFLAGS='-L/path/to/libgcc.a -lgcc' ./configure --other-options", "id": 31627, "time": "2003-02-19T20:27:22Z", "creator": "trawick@apache.org", "creation_time": "2003-02-19T20:27:22Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "closing this, not an Apache problem...\n\nIMO we definitely should make it straightforward to work around the issue by\nletting the user tell us to link to libgcc.a, so feel free to re-open this PR if\nyou can't get libgcc.a linked in (try the suggestion proposed earlier)\n\n", "attachment_id": null, "bug_id": 16798, "id": 34551, "time": "2003-04-04T18:42:54Z", "creator": "trawick@apache.org", "creation_time": "2003-04-04T18:42:54Z", "is_private": false}]