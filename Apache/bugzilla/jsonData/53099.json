[{"count": 0, "tags": [], "bug_id": 53099, "attachment_id": null, "text": "It would be nice if in mod_remoteip, you could specify a list of\nheaders and not just one.\n\nsuggestion is to allow multiple parameters to RemoteIPHeader, eg:\n\nRemoteIPHeader X-Forwarded-For, X-Forward\nRemoteIPTrustedProxy 10.0.2.0/24\nRemoteIPTrustedProxy gateway.localdomain\n\nHeaders would preferably to be checked for in the provided order. \n\nUse case example is :\n\n1. If there is X-Forwarded-For header use it (as the traffic is\nthrough a forward proxy, such as squid)\n\n2. Otherwise if there is X-Forward header use it (traffic is direct,\nbut via a SNAT-ing content switch)\n\n3. Otherwise use the connection's REMOTE_ADDR as usual (traffic is direct - and\nnot via a SNAT-ing content switch OR a forward proxy)\n\nIn the current mod_remoteip, you can only pick one header - the\ndifferent headers in our case are created by different devices. The content switch makes X-Forward with a single ip address and the forward proxy adds X-Forwarded-For in the usual manner.\n\nBoth headers rewrite fine using the existing code, except i must choose to rewrite either the content switch header OR the forward proxy header, but not both.", "id": 158165, "time": "2012-04-18T11:48:28Z", "creator": "brett.maxfield@gmail.com", "creation_time": "2012-04-18T11:48:28Z", "is_private": false}, {"count": 1, "tags": [], "creator": "msporleder@gmail.com", "text": "I could use this too", "id": 169053, "time": "2013-08-02T18:48:51Z", "bug_id": 53099, "creation_time": "2013-08-02T18:48:51Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "wrowe@apache.org", "text": "Mike, this statement confuses me...\n\n/* If no RemoteIPInternalProxy, RemoteIPInternalProxyList, RemoteIPTrustedProxy\n   or RemoteIPTrustedProxyList directive is configured,\n   all proxies will be considered as external trusted proxies.\n*/\n\nmod_remoteip should not be translating any addresses from an unrecognized proxy.  These untrusted addresses continue to live in the header they were presented in (e.g. X-Forwarded-For) for modules to inspect, but must not enter the authnz scheme of httpd.\n\nIs this an issue with the module's logic (original, or as-patched), or just a mis-statement?", "id": 188368, "time": "2016-02-11T16:38:28Z", "bug_id": 53099, "creation_time": "2016-02-11T16:38:28Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "wrowe@apache.org", "text": "Ignore the earlier comment #2, I meant to direct that to #55962", "id": 188369, "time": "2016-02-11T16:46:48Z", "bug_id": 53099, "creation_time": "2016-02-11T16:46:48Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "id": 188370, "time": "2016-02-11T17:11:49Z", "bug_id": 53099, "creation_time": "2016-02-11T17:11:49Z", "is_private": false, "text": "This is a good suggestion, but I think we should take this one step further...\n\nRemoteIPInternalHeader X-RemoteIP\nRemoteIPHeader X-Forwarded-For, X-Forward\n\nIn the absence of an RemoteIPInternalHeader list, the RemoteIPHeader list would be used instead to unwind the forwarded addresses for RemoteIPInternalProxy members. When the RemoteIPInternalHeader list is exhausted, the RemoteIPInternalProxy list would continue to be honored, but treated as trusted external proxies, for purposes of dis-honoring private IP addresses. This should ensure maximum compatibility with existing configurations and offer the fewest unintended consequences of a misconfiguration.\n\nIt's unclear to me if https://tools.ietf.org/html/rfc7239 will see widespread adoption and how it would interact with older conventions.\n\nThe header \"Forwarded\" could be treated as a special-case, supporting the new RFC, but deciphered in the order it appears.  (I imagine it would typically be first where the immediate proxies which are trusted have adopted the convention).\n\nSadly, https://tools.ietf.org/html/rfc7239#section-7.4 is less than helpful on this subject :)"}, {"count": 5, "tags": [], "bug_id": 53099, "attachment_id": null, "text": "+1\n\nThis would be extremely useful, as modern proxies have moved away from X-Forwarded-From, to their own header for each (Cloudflare, Securi, etc.)", "id": 198957, "time": "2017-05-30T15:07:47Z", "creator": "mail@tomsommer.dk", "creation_time": "2017-05-30T15:07:47Z", "is_private": false}, {"count": 6, "tags": [], "creator": "jason.potter@gmail.com", "attachment_id": null, "id": 200742, "time": "2017-09-07T23:58:33Z", "bug_id": 53099, "creation_time": "2017-09-07T23:58:33Z", "is_private": false, "text": "I too would like to see multiple Headers supported here for the very reason that Tom mentions in Comment #5:\n\nThis would be extremely useful, as modern proxies have moved away from X-Forwarded-From, to their own header for each (Cloudflare, Securi, etc.)\n\nI find myself wrestling with Load Balancer's which use one Header and CloudFlare which uses another. Installing both mod_cloudflare and mod_remoteip will cause Apache to crash if both modules attempt to set different IPs. \n\nI'd like to keep control of the headers in one place as well. It's simple enough to emulate mod_cloudflare with mod_remoteip but in doing so we cannot convert our LB IPs because mod_remoteip only accepts one header."}]