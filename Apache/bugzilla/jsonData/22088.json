[{"count": 0, "tags": [], "bug_id": 22088, "attachment_id": null, "id": 42012, "time": "2003-08-03T09:09:23Z", "creator": "michael.davey@coderage.org", "creation_time": "2003-08-03T09:09:23Z", "is_private": false, "text": "As requested by Erik Hatcher, I am attaching a patch to this bug report.  The\npatch was generated against cvs HEAD (MailMessage v1.17).\n\nHere is a patch for org/tools/mail/MailMessage.java that adds the following:\n\n*   Support for message encoding (alphabets)\n*   Fixes to headers for when an optional header hasn't been set (used to send\nblank headers) (we should check that at least one header from the set: to, cc,\nbcc, resent-to, resent-cc, resent-bcc exists - but don't at the moment)\n*  changes to some comments\n\n-- \nMichael"}, {"count": 1, "tags": [], "bug_id": 22088, "attachment_id": 7629, "is_private": false, "id": 42014, "time": "2003-08-03T09:13:02Z", "creator": "michael.davey@coderage.org", "creation_time": "2003-08-03T09:13:02Z", "text": "Created attachment 7629\n\"diff -u\" patch (against cvs HEAD) to enhance MailMessage.java (v1.17)"}, {"count": 2, "tags": [], "text": "Hi Michael,\n\nconcerning the encoding part of your patch, I have 2 questions :\n\n- in ant1.6alpha, a charset attribute has been introduced for the emailtask and \nthe message nested element. Is there overlapping / complementarity between \ncharset and encoding (sorry the question may sound naive but I have no clue),\n\n- your patch changes only the class MailMessage.java, but not the EmailTask. \nWhat shall set this new attribute encoding ?\n\nCheers,\n\nAntoine", "attachment_id": null, "id": 42088, "creation_time": "2003-08-04T16:58:45Z", "time": "2003-08-04T16:58:45Z", "creator": "antoine@apache.org", "bug_id": 22088, "is_private": false}, {"count": 3, "tags": [], "text": "Hello Antoine,\n\nMy intention was to change the API at MailMessage so that the glue classes\nbetween the Mail task and MailMessage could be changed at a later time. \nChanging the charset in the email task should change the underlying MailMessage\nencoding.\n\nemail/PlainMailer and email/Message.java will both need changing so that the\nMail task's charset property is passed along the class chain to MailMessage.\n\n-- \nMichael", "is_private": false, "id": 42506, "creator": "michael.davey@coderage.org", "time": "2003-08-10T19:36:23Z", "bug_id": 22088, "creation_time": "2003-08-10T19:36:23Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "Created attachment 7809\nTestCase for MailMessage / previous attachment", "is_private": false, "id": 42712, "creator": "michael.davey@coderage.org", "time": "2003-08-13T22:11:53Z", "bug_id": 22088, "creation_time": "2003-08-13T22:11:53Z", "attachment_id": 7809}, {"count": 5, "tags": [], "text": "I am going to work on this issue.\nMichael, you did not answer the question :\nin ant1.6alpha, a charset attribute has been introduced for the emailtask and \nthe message nested element. Is there overlapping / complementarity between \ncharset and encoding ? The charset attribute is supported by the JavaMail based \nimplementation of the <mail> task. If your new attribute is the same (for plain \nmail) then it should also be called charset ?\n", "is_private": false, "id": 42759, "creator": "antoine@apache.org", "time": "2003-08-14T16:08:17Z", "bug_id": 22088, "creation_time": "2003-08-14T16:08:17Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 22088, "attachment_id": null, "id": 42763, "time": "2003-08-14T16:26:00Z", "creator": "michael.davey@coderage.org", "creation_time": "2003-08-14T16:26:00Z", "is_private": false, "text": "Sorry, let me be more precise.  The new attribute does perform the same\nfunction, but for MailMessage (and therefore for PlainMailer and UUMailer).\n\nIt may be perferable to change the attribute name to charset from encoding (Java\ncalls it encoding).  If you prefer not to manually change the attirbute name\nafter the patch is applied and before committing, I would be happy to submit a\nreplacement patch with 'charset' as the attribute name instead of 'encoding'.\n"}, {"count": 7, "tags": [], "text": "I now have a patch for PlainMailer that will set the character set of\nMailMessage correctly and I am working on a testcase for EmailTaskTest.  I'll\nattach them to this bug if/when my MailMessage patch is committed.\n", "is_private": false, "id": 42766, "creator": "michael.davey@coderage.org", "time": "2003-08-14T16:35:47Z", "bug_id": 22088, "creation_time": "2003-08-14T16:35:47Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "antoine@apache.org", "attachment_id": null, "is_private": false, "id": 43050, "time": "2003-08-20T15:30:00Z", "bug_id": 22088, "creation_time": "2003-08-20T15:30:00Z", "text": "the line 529 of MailMessage.java (patched) super(out, true, charset); \ndoes not compile with Jdk 1.3 or 1.2, because this constructor of PrintStream \nwas only introduced in Jdk 1.4.\nWe need to have a look at other APIs to do this job."}, {"count": 9, "tags": [], "creator": "antoine@apache.org", "attachment_id": null, "is_private": false, "id": 43092, "time": "2003-08-21T12:23:15Z", "bug_id": 22088, "creation_time": "2003-08-21T12:23:15Z", "text": "The test does not pass under JDK 1.2 because the order of the headers returned \nby iterating over the keys is different.\nin testAPIExample, the following order is expected :\nSubject\nCC\nTo\nFrom\nX-Mailer\n\nthe actual order is\n\nTo\nCC\nSubject\nX-Mailer\nFrom\n\nAnother problem with the test is that the constant lengths of the expected \nresults were all 3 units too large."}, {"count": 10, "tags": [], "bug_id": 22088, "attachment_id": null, "text": "Patches submitted with some modifications :\n1) removed everything having to do with charset (alias encoding) from the patch\n2 reasons for this : \n- org.apache.tools.ant.taskdefs.email.Message.java already handles charset \nproperly when creating a PrintWriter\n- technically the solution in the patch could not be compiled under JDK 1.2\nI also saw that the PlainMailer needed to set the charset in the Content-Type \nheader, this was really the only change to do to support charsets properly in \nant's plain mail.\n2) taken the opportunity to make MailMessage.java pass checkstyle\n3) submitted most of the testcase - I removed from it what had to do with \ntesting different charsets.\nMost important : it is now possible to send readable plain mail messages with \nant in foreign character sets.\n\nMany thanks for the patches, especially for the testcase.\n\n\nCheers,\nAntoine", "id": 43106, "time": "2003-08-21T16:26:35Z", "creator": "antoine@apache.org", "creation_time": "2003-08-21T16:26:35Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 22088, "attachment_id": null, "id": 43555, "time": "2003-09-01T16:17:10Z", "creator": "michael.davey@coderage.org", "creation_time": "2003-09-01T16:17:10Z", "is_private": false, "text": "Antoine,\n\nThanks for applying part of the patch and sorry for taking so long to reply\n(I've been away on business).  How about a patch to refactor MailMessage and\nPlainMailer so that the ContentType and Date code (PlainMailer lines 109 through\n116) sits within MailMessage (by adding Date and ContentType getter and setter\nmethods to MailMessage)?\n\nAlso, being able to specify 7bit, 8bit or MIME header encoding (RFC 1522 - MIME\npart 2) might be useful."}, {"count": 12, "tags": [], "creator": "antoine@apache.org", "attachment_id": null, "is_private": false, "id": 43565, "time": "2003-09-01T19:41:40Z", "bug_id": 22088, "creation_time": "2003-09-01T19:41:40Z", "text": "OK, you may attach a new patch to this bug report, or maybe better create a new\nbug report.\nConcerning 7bit, 8bit or MIME, I have 3 questions/remarks :\n\n1) what is the practical utility of letting the user choose here ?\n\n2)if we need to offer the choice (between 7bit, 8bit or MIME) to the user, then\nwe need to patch also EMailTask and Mailer.\nCurrently, there is a encoding attribute in the EMailTask, whose possible values\nare plain, uu, mime or auto. The real meaning of the attribute is\n\"implementation\" because basically it is a choice between ant's own\nimplementation of sending email (PlainMailer and MailMessage classes)and \nJavaMail wrapped by the MimeMailer class.\n\n3)would a name of \"contenttype\" for the new attribute with values 7bits, 8bits\nor MIME be OK ?\nthis attribute needs to exist in EMailTask and to be pushed from EMailTask to\nthe Mailer abstract class, then to be read in the PlainMailer class and finally\nused in the MailMessage class.\n\nDoes this contenttype attribute make sense for the JavaMail implementation of\nthe EMailTask (class MimeMailer) ? If not, this should be said in the docs and a\nwarning should be issued in EMailTask#execute\n\nCheers,\n\nAntoine"}]