[{"count": 0, "tags": [], "bug_id": 31523, "text": "Environments tested:\nWxp pro sp1 with JDK1.4.2 and JDK1.5.0\nLinux 2.6.x with JDK1.5.0\n\nWhen iterating over the request parameters (POST) immediately after entering the\nHttpServlet.service(HttpServletRequest, HttpServletResponse) method the\nparameters are not always set. I am using Cocoon as web application framework.\nCocoon overrides the service method. I put a simple iterator at the very start\nof this method to dump all request parameters to the stdout. In some cases this\nlist is completely empty.\n\nThe behaviour is very erratic and can be very hard to reproduce. With JDK1.4.2\nit occurs very seldomly, but it still happens. With JDK1.5.0 it is more easily\nreproducable, but it may still require 50 POSTs. Also on some systems it is not\nreproducable at all. Even systems with a similar software configurations are not\nalways affected. The hardware on these systems is different though. Looking at\nthese symptoms, I'd say it is a threading issue.\n\nWe've tried several Tomcat versions, ranging from 5.0.25 to 5.5.2 and they all\nhad the same issue.", "id": 64544, "time": "2004-10-04T08:03:02Z", "creator": "emond@emaxx.nl", "creation_time": "2004-10-04T08:03:02Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 64549, "time": "2004-10-04T09:44:28Z", "bug_id": 31523, "creation_time": "2004-10-04T09:44:28Z", "is_private": false, "text": "I never got the problem, so I recommend you look into this more.\nWe got a few similar reports like this, but I think every time it ended up being\na user error.\n\nIf you look into the code, and when parameter parsing is done (it is really very\nsimple), you will find your assertion \"When iterating over the request\nparameters (POST) immediately after entering the\nHttpServlet.service(HttpServletRequest, HttpServletResponse) method the\nparameters are not always set\" doesn't make any sense, and the most likely\nreason of the parameters not being there is because they haven't been sent properly."}, {"count": 2, "tags": [], "creator": "emond@emaxx.nl", "attachment_id": null, "id": 64552, "time": "2004-10-04T10:04:40Z", "bug_id": 31523, "creation_time": "2004-10-04T10:04:40Z", "is_private": false, "text": "I am very sure the request parameters are sent correctly, because the issue \noccurs with several different browsers, including IE and Mozilla. Exactly the \nsame sequence of events can lead to either the parameters being present, or \nnot. With our framework, the only way to load a new page is to submit the form. \nAll actions on the page lead to the form being submitted with a POST. Another \nthing that makes me think it is definitely a bug in Tomcat is that the same web \napplication works fine under Jetty. As long as this issue is not being \naddressed, we have no choice but to continue to use Jetty. \n \nI don't think anything is wrong with the parsing of the request parameters, but \nit seems like the service method is called before the parsing is completed. "}, {"count": 3, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 64553, "time": "2004-10-04T10:20:57Z", "bug_id": 31523, "creation_time": "2004-10-04T10:20:57Z", "is_private": false, "text": "\"Exactly the same sequence of events can lead to either the parameters being\npresent, or not.\"\n\nCan you describe the sequence and provide a test WAR ?"}, {"attachment_id": null, "tags": [], "bug_id": 31523, "text": "Also describe the connector configuration you are using.", "count": 4, "id": 64554, "time": "2004-10-04T10:21:59Z", "creator": "remm@apache.org", "creation_time": "2004-10-04T10:21:59Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 31523, "text": "Unfortunately I cannot give a test WAR, because that would include business \ninformation. We are using Cocoon Forms to display a simple sequence of forms, \nbacked by the Cocoon continuation framework. The steps to reproduce the problem \nare: \n1. open the first form page \n2. fill in some fields, but not all to trigger a validation error (this is to \nmake sure you won't go to the next form) \n3. press submit \n4. check the result \n5. repeat step 3 and 4 until the error is triggered. \n \nMy tomcat configuration is the default configuration, with only the port \nchanged from 8080 to 8081. \n \nTo clarify some more, Cocoon Forms has nothing to do with the error. The entry \npoint of Cocoon is the CocoonServlet class. This class extends the HttpServlet \nclass and overrides the service method. I think this is done because Cocoon \nneeds to process all methods, not just POST or GET. At entry of service, the \nparameters are not always present. This is before any Cocoon specific code is \nran (except for the webapp initialization ofcourse). \n \nAs I said before, the problem can be very hard to replicate. Even adding debug \nstatements (System.out.println) can cause the problem to disappear. And it \nseems as if the JIT-compiler also has an effect on the problem. In the first \nfew attempts the problem is more likely to occur than after several attempts. ", "id": 64555, "time": "2004-10-04T10:47:16Z", "creator": "emond@emaxx.nl", "creation_time": "2004-10-04T10:47:16Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 31523, "attachment_id": null, "text": "What you mention would hint at a race condition, but the threading (or lack of)\nof the parameter parsing code is really obvious. Note that none of the objects\nprovided are even remotely thread safe, which is in line with the servlet\nsepcification. The parsing of the request parameters is lazy, which might be the\nbig difference between Tomcat and other servers. You could for example test that\nby adding a valve in the Tomcat pipeline which would trigger the parsing of the\nrequest parameters much earlier (an empty valve with request.getParameter(\"foo\")\nin it would do). You could try a filter, but it's already inside the user code,\nso depending on what the framework does, it could be too late already.\n\nAgain, you provide assertions that Tomcat is necessarily at fault. IMO, it's\nrather one of the other components being used which are at fault (one big hint\nis look at if they're using threads). If the workaround mentioned above fixes\nthe issue, then it is not a Tomcat issue.\n\nThe only way to prove the problem is with Tomcat would be allow me to reproduce\nthe issue. So I would need a simple WAR (= not using Cocoon) with a form\nexhibiting the problem. Otherwise, there's really no way I would be able to\nreproduce the issue (which, according to you, is hard).", "id": 64556, "time": "2004-10-04T11:04:42Z", "creator": "remm@apache.org", "creation_time": "2004-10-04T11:04:42Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 31523, "attachment_id": null, "text": "As I said before, I read all request parameters at the entry of the service \nmethod. This is before any cocoon code is run. The incomming HttpServletRequest \nis a new object (atleast, I assume, these objects are not recycled). This means \nnon of the Cocoon parts has been able to toutch the object before I dump the \nparameters. Even when some part of Cocoon turns out not to be thread safe, this \nstill shouldn't affect the request object. \n \nIs my assumption correct that the following piece of code should dump all \nrequest parameters (and trigger the lazy parameter evaluation when needed)? \n \npublic void service(HttpServletRequest req, HttpServletResponse res) \n    throws ServletException, IOException { \n  java.util.Enumeration enu = req.getParameterNames(); \n  System.out.println(\"cocoon entry:\"); \n  enu = req.getParameterNames(); \n  while (enu.hasMoreElements()) { \n    String name = (String) enu.nextElement(); \n    System.out.println(name+\": \"+req.getParameter(name)); \n  } \n  ... Lots of cocoon related stuff \n} \n ", "id": 64557, "time": "2004-10-04T11:24:49Z", "creator": "emond@emaxx.nl", "creation_time": "2004-10-04T11:24:49Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 31523, "attachment_id": null, "text": "Yes, of course, all the container objects provided by Tomcat are recycled. The\nexception is, of course, when using a security manager. In that case, all the\nfacade objects are invalidated, and then discarded.\n\nAdding \"getParameterNames\" is inefficient, but useful for debug.\nrequest.getParameter(\"foo\") would trigger the same evaluation as well.\n\nSo, since the issue would be independent of Cocoon, do you think you can build a\nsingle JSP page (or servlet if you're more comfortable with servlets) with an\nappropriate form (you didn't describe either what the form should be) in it\nwhich would reproduce the issue ?\nI still recommend trying my workaround, though. You can also tweak the request\nclass, and modify the recycling of components (discarding the response and\nstreams facades, etc) to see what it does.", "id": 64558, "time": "2004-10-04T11:36:37Z", "creator": "remm@apache.org", "creation_time": "2004-10-04T11:36:37Z", "is_private": false}, {"count": 9, "tags": [], "creator": "pr@objektpark.de", "attachment_id": null, "id": 64563, "time": "2004-10-04T14:39:46Z", "bug_id": 31523, "creation_time": "2004-10-04T14:39:46Z", "is_private": false, "text": "Hmm,\n\nI have spend a small time to simulate missing post parameter situation,\nbut I can't find an error. I test with JMeter and a small servlet app.\n\nJmeter Result looks like this...\nGenerate Summary Results =  1238 in    36s =   33,8/s Avg:     2 Min:     0 Max:\n   210 Err:     0 (0,0%)\n\npostparam is a simple Servlet to validate two parameters.\nsimple-server is a catalina.base configuration\n\nRunning\n-  download and extract the example\n- cd postparam\n- edit make.properties\nchange to your JDK and Tomcat Release\n- reflect your env\n     ant -f make.xml \n- edit startup.bat and shutdown.bat at simple-server/bin (my catalina.base config)\n- start server \n    cd simple-server/bin\n    startup.bat\n    # Server is running 7380\n- compile and deploy postparam\n    ant war\n    ant deploywar\n- Now Start JMeter and load the postparam.jmx test skript!\n- After stop the test, you can look the results at jmeter stdout \n\nMy Test env\ntomcat 5.0.28\njdk 1.4.2_04\nWindows XP\n\nPlease work with my example to help or send a better one to show the bug...\n\nregards,\nPeter"}, {"attachment_id": 12931, "tags": [], "bug_id": 31523, "text": "Created attachment 12931\nPostParam App", "count": 10, "id": 64564, "time": "2004-10-04T14:40:57Z", "creator": "pr@objektpark.de", "creation_time": "2004-10-04T14:40:57Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 31523, "attachment_id": 12932, "text": "Created attachment 12932\nSimple Catalina Base Config", "id": 64565, "time": "2004-10-04T14:41:38Z", "creator": "pr@objektpark.de", "creation_time": "2004-10-04T14:41:38Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 31523, "attachment_id": null, "text": "Thanks a lot Peter. That's a good test to work on to see if this issue is real\nor not.", "id": 64566, "time": "2004-10-04T15:24:33Z", "creator": "remm@apache.org", "creation_time": "2004-10-04T15:24:33Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 31523, "attachment_id": null, "text": "I've tried running Tomcat with the security manager enabled (with a grant all \nin the policy file). This brought up some worrying facts. I will first give a \nlittle info on the way our application is working. \n \nAs I've said before, we are using Cocoon Forms with the underlying flow to \nchain the forms. However the default flow (using javascript) was not powerful \nenough. The concept of a continuation framework, is that it simulates a thread, \nwhich is suspended when a page is shown to the user, and continued when the \nuser submits the form. To be able to build more robust applications, we decided \nto use a real thread as the flow, which is locked (with wait) and notified. It \nis impossible for this thread to run simultaneously with the servlet thread. \nWhen the first is running, the second is locked and vice versa. However I've \ndiscovered, that even though these threads don't run at the same time, either \nCocoon or Tomcat is affected. They seem to rely on the thread currently \nexecuting. \n \nWhen Tomcat is running with the security manager enabled, the creation of the \nform hierarchy triggers a NullPointerException \nat  org.apache.coyote.tomcat5.CoyoteRequestFacade. \n        getQueryString(CoyoteRequestFacade.java:481). \n \nI've managed to get around this, by creating an Expression that executes the \nmalicious method. This Expression is then passed to the servlet thread, which \nexecutes it from its own context and passes the result back to the flow thread. \nStill no two threads will ever be running at the same time, but this time the \nmethod succeeds. Is this expected behaviour? \n \nI've looked at the postparam application. If the bug is in Tomcat, this should \ntrigger it, however it might be very hard to hit it, because you might have to \nresubmit over 100 times. What makes it even more complicated is that we \ndiscovered that we can avoid the problem, by printing lots of debug to stdout. \nThis shows how sensitive the timing is. \n \nAt this moment we are considering to drop the flow thread and emulate it with a \nbytecode interpreter. If it is correct that Tomcat cannot handle multiple \nthreads inside a servlet, even when they cannot run concurrently, then this \nmight very well be what triggers the problem. In that case, I apologise for the \ntrouble and I will definitely switch to a bytecode interpreter that runs in the \nservlet thread. ", "id": 64568, "time": "2004-10-04T15:56:51Z", "creator": "emond@emaxx.nl", "creation_time": "2004-10-04T15:56:51Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 31523, "attachment_id": null, "text": "If your second thread is probably synced, then it's supposed to work. It's still\nnot allowed in the servlet specification (it mandates one thread, which is\nharsh, but has the big advantage of avoiding trouble).\n\nPrinting out stuff to the console is quite expensive, so I can definitely\nunderstand why it changes things if there's a thread safety issue (which is\nusually caused by much shorter problematic intervals).\n\nThe example Peter attached should allow simulating thousands of POST requests,\nhopefully with multiple parallel requests. I didn't try it yet, because I am\nbusy with other bugfixing for 5.5.", "id": 64569, "time": "2004-10-04T16:43:40Z", "creator": "remm@apache.org", "creation_time": "2004-10-04T16:43:40Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 31523, "text": "The first sentence should read: \"If your second thread is properly synced, then\nit's supposed to work\". \"probably\" doesn't do it in this case.", "id": 64570, "time": "2004-10-04T16:44:55Z", "creator": "remm@apache.org", "creation_time": "2004-10-04T16:44:55Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 31523, "text": "I'm confident that the thread is properly synced, however I'm afraid Cocoon \nuses the current thread as a way to determine the context (as in a mapping \nbetween threads and data). Some storage maps seems to differ between the flow \nthread and the servlet thread. This makes me think it's Cocoon that's causing \nerrors by using the wrong context. This might damage the facades and cause non \ndeterministic behaviour at the next request. This is ofcourse an hypothesis, \nbut I'm afraid there's no way to be sure, as the whole system is just too \ncomplex to check it for these kinds of errors. ", "id": 64571, "attachment_id": null, "creator": "emond@emaxx.nl", "creation_time": "2004-10-04T17:18:07Z", "time": "2004-10-04T17:18:07Z", "is_private": false}]