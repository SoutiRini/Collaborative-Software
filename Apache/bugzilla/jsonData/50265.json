[{"count": 0, "tags": [], "text": "FormatDateSupport.dateFormatCache is private and static.\n\nIt is initialised in the createFormatter method, however access is not synchronised, so the field might not be published correctly.\n\nThis can result in different threads getting different instances.\nIf this is acceptable, then this should be documented in the code.\nOtherwise consider using IODH idiom.", "attachment_id": null, "bug_id": 50265, "id": 141691, "time": "2010-11-13T06:53:23Z", "creator": "sebb@apache.org", "creation_time": "2010-11-13T06:53:23Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 50265, "is_private": false, "text": "The caching was added to resolve 32311, which was opened due to contention issues with DateFormat.getTimeInstance() calling Calendar.getInstance() which was synchronized. However, the synchronized keyword was removed with Java 1.4 so this should no longer be an issue for us.\n\n#32311 also notes that the calls to format() on the cached formatters are not thread safe and need to be synchronized; this is missing from the current implementation. However, in many applications the date/time patterns and Locale are likely to be the same and the cache only holds one instance of the formatter. By synchronizing on it we will introduce a contention point just like the the fix was trying to avoid.", "id": 143028, "time": "2011-01-01T15:18:25Z", "creator": "jboynes@apache.org", "creation_time": "2011-01-01T15:18:25Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "jboynes@apache.org", "attachment_id": null, "id": 143029, "time": "2011-01-02T12:35:46Z", "bug_id": 50265, "creation_time": "2011-01-02T12:35:46Z", "is_private": false, "text": "Addressed by reverting the addition of the cache added to address #32311."}]