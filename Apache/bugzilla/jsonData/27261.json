[{"count": 0, "tags": [], "creator": "mbm@ptc.com", "attachment_id": null, "text": "Project.setSystemProperties(), so that it uses Properties.keys() instead of\npropertyNames(), which excludes properties that have moved into the default\nbucket.  Also, getProperty() needs to be used instead of getKey().\n\nThere are other places throughout Ant where this misuse occurs.  See this\n(http://marc.theaimsgroup.com/?l=ant-user&m=107289321531422&w=2) mail list\nposting for additional information.\n\nThe method recoded like this, solves the problem for my scenario:\n\npublic void setSystemProperties() {\n        Properties systemP = System.getProperties();  // changed from keys()\n        Enumeration e = systemP.propertyNames();\n        while (e.hasMoreElements()) {\n            Object name = e.nextElement();\n            String value = systemP.getProperty(name.toString()).toString();  //\nchanged from get()\n            this.setPropertyInternal(name.toString(), value);\n        }\n    }", "id": 53026, "time": "2004-02-26T16:00:55Z", "bug_id": 27261, "creation_time": "2004-02-26T16:00:55Z", "is_private": false}, {"count": 1, "tags": [], "creator": "jessh@ptc.com", "text": "There appear to be at least 3 areas potentially affected:\n  Project.setSystemProperties() [noted in the original description]\n  Diagnostics.doReportSystemProperties()\n  CommandlineJava.setSystem()\n\nThere may well be others.  I found these by examining usage of\nSystem.getProperties() in close proximity to Hashtable/Properties.keys().\n\nNote that any larger process embedding Ant or any custom task can throw these\nareas of Ant into disarray (i.e. into inability to find key JVM system\nproperties) by simply doing:\n  Properties  props = new Properties( System.getProperties() );\n  ... add or load additional properties into 'props' ...\n  System.setProperties( props );\n\nAs long as Ant does not carefully use propertyNames() and getProperty() rather\nthan keys() and get(), any such calling program or custom task will hide all\nsystem properties from these portions of Ant -- with disastrous and hard to\ntrace effects.", "id": 53030, "attachment_id": null, "bug_id": 27261, "creation_time": "2004-02-26T16:50:29Z", "time": "2004-02-26T16:50:29Z", "is_private": false}, {"count": 2, "tags": [], "creator": "peter.reilly@corvil.com", "text": "There seems to be around ~15 places in the\ncode where the system properties hashtable is\nused/modified directly incorrectly.", "id": 53031, "attachment_id": null, "bug_id": 27261, "creation_time": "2004-02-26T16:58:59Z", "time": "2004-02-26T16:58:59Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 27261, "text": "I'm not sure about 15 places, though there may be that many.  There are only 6\nSystem.getProperties() calls, though I've not examined where the results may all\nbe passed and mis-used, nor looked into which other usages of Properties.keys()\nmay lead to similar issues with other Properties objects which might have defaults.\n\nI did note that I missed at least one other definite patch area:\n  PropertySet.addPropertyNames()\n", "id": 53034, "time": "2004-02-26T17:22:44Z", "creator": "jessh@ptc.com", "creation_time": "2004-02-26T17:22:44Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "peter.reilly@corvil.com", "attachment_id": null, "text": "I used a directory grep:\ndgrep System.getProperties \"*.java\"\nDGrepping /home/preilly/cvs/ant/src/main/org/apache/tools/ant for\nSystem.getProperties\n./Diagnostics.java:270:        for (Enumeration keys =\nSystem.getProperties().keys();\n./Project.java:823:        Properties systemP = System.getProperties();\n./taskdefs/Execute.java:976:            System.getProperties().put(\"user.dir\",\nworkingDir.getAbsolutePath());\n./taskdefs/Execute.java:980:               \nSystem.getProperties().put(\"user.dir\", antWorkingDirectory);\n./taskdefs/optional/NetRexxC.java:736:        Properties currentProperties =\nSystem.getProperties();\n./taskdefs/optional/NetRexxC.java:796:            currentProperties =\nSystem.getProperties();\n./taskdefs/optional/ejb/IPlanetEjbc.java:282:            Properties props =\nSystem.getProperties();\n./taskdefs/optional/ejb/IPlanetEjbc.java:291:            Properties props =\nSystem.getProperties();\n./taskdefs/optional/junit/JUnitTask.java:931:            log(\"Using System\nproperties \" + System.getProperties(),\n./taskdefs/optional/junit/JUnitTestRunner.java:512:        Hashtable p =\nSystem.getProperties();\n./taskdefs/optional/net/SetProxy.java:177:        Properties sysprops =\nSystem.getProperties();\n./taskdefs/optional/net/SetProxy.java:261:       \nSystem.getProperties().put(\"http.proxySet\", new Boolean(setProxy).toString());\n./taskdefs/optional/splash/SplashTask.java:124:                   \nSystem.getProperties().put(\"http.proxySet\", \"true\");\n./taskdefs/optional/splash/SplashTask.java:125:                   \nSystem.getProperties().put(\"http.proxyHost\", proxy);\n./taskdefs/optional/splash/SplashTask.java:126:                   \nSystem.getProperties().put(\"http.proxyPort\", port);\n./taskdefs/optional/splash/SplashTask.java:139:                   \nSystem.getProperties().put(\"http.proxySet\", \"false\");\n./taskdefs/optional/splash/SplashTask.java:140:                    S\nystem.getProperties().put(\"http.proxyHost\", \"\");\n./taskdefs/optional/splash/SplashTask.java:141:                   \nSystem.getProperties().put(\"http.proxyPort\", \"\");\n./types/CommandlineJava.java:137:                sys = System.getProperties();\n./types/CommandlineJava.java:490:            size += System.getProperties().size();\n./types/PropertySet.java:161:            prj == null ? System.getProperties() :\nprj.getProperties();\n./types/PropertySet.java:237:                    e2 = System.getProperties().keys();\n./types/resolver/ApacheCatalogResolver.java:85:       \nSystem.getProperties().put(\"xml.catalog.className\",\n", "id": 53038, "time": "2004-02-26T18:01:20Z", "bug_id": 27261, "creation_time": "2004-02-26T18:01:20Z", "is_private": false}, {"count": 5, "tags": [], "creator": "jessh@ptc.com", "text": "Mike and I are unaware of any issues with the\n\n  System.getProperties().put(...)\n\ncalls noted in the last comment.\n\nClearly any Properties.keys() or Properties.get() usage will be a \nproblem *IF* the Properties object has defaults.\n\nAlso, it is clear that any System.getProperties() object may well have \ndefaults thanks to System.setProperties() usages and we should thus look for\nthis in conjunction with keys() and/or get() usage.\n\nIt is unclear which other Properties usages (some of which are currently typed\nas Hashtables but pass Properties objects) should be switched to be safe with\nrespect to defaults.\n\nAll in all this smacks of a design bug in Properties.  The default keys() and\nget() should really operate on the whole property set -- including defaults. \nOne should have to go out of one's way to avoid including them.  I suspect this\nbehavior is an unfortunate side-effect of implementing Properties as a fairly\nlazy sub-class of Hashtable rather than as a aggregation or some such.\n\nWhatever the case, Ant needs to deal with this situation better.", "id": 53042, "attachment_id": null, "bug_id": 27261, "creation_time": "2004-02-26T18:27:17Z", "time": "2004-02-26T18:27:17Z", "is_private": false}, {"count": 6, "tags": [], "creator": "jessh@ptc.com", "text": "P.S.  I think the best things to search on are thus System.getProperties(),\nkeys(), and get().  Unfortunately the latter searches are harder with a\ntext-based search.  Even with a static analyzer the keys() and get() calls may\noften appear as being through Hashtable rather than Properties (as Properties\ndoes not override these).  At any rate, I've been pouring through static\nanalyzer info (from my own custom/internal tool).", "id": 53043, "attachment_id": null, "bug_id": 27261, "creation_time": "2004-02-26T18:30:27Z", "time": "2004-02-26T18:30:27Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 27261, "attachment_id": null, "id": 65885, "time": "2004-10-28T08:28:50Z", "creator": "peterreilly@apache.org", "creation_time": "2004-10-28T08:28:50Z", "is_private": false, "text": "*** Bug 31927 has been marked as a duplicate of this bug. ***"}, {"count": 8, "tags": [], "creator": "peterreilly@apache.org", "text": "\nI have fixed\n  Project.setSystemProperties()\n  Diagnostics.doReportSystemProperties()\n  CommandlineJava.setSystem()\nand\n  PropertySet.addPropertyNames()\n\nso I will mark this as fixed.\nThanks for the report!\nIf there are other invalid uses of System properties, they\ncan be processed separately.\n\n", "id": 65913, "attachment_id": null, "bug_id": 27261, "creation_time": "2004-10-28T17:24:13Z", "time": "2004-10-28T17:24:13Z", "is_private": false}]