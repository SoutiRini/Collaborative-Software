[{"count": 0, "tags": [], "creator": "rnichol7@csc.com", "attachment_id": null, "is_private": false, "id": 30415, "time": "2003-01-31T14:45:36Z", "bug_id": 16641, "creation_time": "2003-01-31T14:45:36Z", "text": "I am trying to source a class as follows:\n<% myFormatter fm = new myFormatter(); %>\nIt works with Tomcat version 3.x but not with 4.x the error is:\n  \"C:\\Apache\\Tomcat_4.1work\\Standalone\\localhost\\prodAborts\\create_ticket_jsp.ja\nva:88: cannot resolve symbol\n  symbol  : class myFormatter  \n  location: class org.apache.jsp.create_ticket_jsp\n  myFormatter nb = new myFormatter();\" \nHowever, when I use the EXACT same .war file with 3.2 it works fine.  \nIncidentlty when I drop back to version 3.2, I can no longer include files like:\n\n <%@ include file = \"./global/abortsDB.jsp\" %>\n\nI can provide the .war file if you need to see the code"}, {"count": 1, "tags": [], "bug_id": 16641, "attachment_id": null, "id": 32462, "time": "2003-03-05T15:50:01Z", "creator": "rnichol7@csc.com", "creation_time": "2003-03-05T15:50:01Z", "is_private": false, "text": "This is more of a workaround than a fix:  The external classes MUST belong to a \npackage.  This instead of WEB-INF --> Classes --> myFormatter, I neet to create \na package (com.csc.prodAborts), and either create the directory structure under \nthe classes dir, or create a jar file that contains the structure.  I end up \nwith: WEB-INF/classes/com/csc/prodAborts/<all my class files>\n"}]