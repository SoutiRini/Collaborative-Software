[{"count": 0, "tags": [], "text": "I have this failure stack trace :\n\nTestcase: testSymbolicLinkUtilsMethods(org.apache.tools.ant.taskdefs.optional.unix.SymlinkTest):\tFAILED\nnull\njunit.framework.AssertionFailedError\n\tat junit.framework.Assert.fail(Assert.java:47)\n\tat junit.framework.Assert.assertTrue(Assert.java:20)\n\tat junit.framework.Assert.assertTrue(Assert.java:27)\n\tat org.apache.tools.ant.taskdefs.optional.unix.SymlinkTest.testSymbolicLinkUtilsMethods(SymlinkTest.java:264)", "attachment_id": null, "bug_id": 48785, "id": 134733, "time": "2010-02-21T06:15:37Z", "creator": "antoine@apache.org", "creation_time": "2010-02-21T06:15:37Z", "is_private": false}, {"count": 1, "text": "The test handles MacOS platforms differently. The test assumes that the methods in SymbolicUtils isSymbolicLink will detect the symbolic link nature of a symbolic link pointing to an inexistent file or directory. With MacOS Snow Leopard and JDK 1.5, it is not possible to tell, the getCanonicalPath and getAbsolutePath methods of java.io.File return the same.\n\nFor simplicity I am removing the special handling of MacOS in the unit test.\n\nThis issue was only affecting the test code, the javadoc of SymbolicUtils does not make any special promises concerning MacOS.", "bug_id": 48785, "attachment_id": null, "id": 134758, "time": "2010-02-22T02:44:52Z", "creator": "antoine@apache.org", "creation_time": "2010-02-22T02:44:52Z", "tags": [], "is_private": false}]