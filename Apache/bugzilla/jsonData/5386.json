[{"count": 0, "tags": [], "bug_id": 5386, "attachment_id": null, "text": "This problem probably resides in other packages as well.\n\nThe SVGGraphics2D class resides in a package with a bunch of other \nimplementation detail classes that most users won't care about and probably \nshould never see.  The sheer quantity of these implementation classes makes it \ndifficult to find classes that are intended for \"public consumption\" in the \njavadoc.\n\nThere are a couple \"reasonable\" solutions that I can come up with.\n\n1) Give SVGGraphics2D and other \"public\" classes (and interfaces) a new home; \nexplicitly, a package where every class or interface is likely to be of use \ndirectly by the client application.\n\n2) Make the classes and interfaces that are implementation details have package \nscope.  However, the problem with this solution is the situation where the \nclasses are given package scope and then a class from another package or user \napplication subsequently needs access.\n\nThe BIG idea here is to make javadoc more useful.  Wading through all the \nimplementation classes to get to the classes of interest becomes an exercise of \na \"find the needle in a haystack\" problem.  This problem is pervasive to our \nindustry.  I have done it in my code, and I know it's been done a million times \nover.  I would just like the batik framework to be as easy to use as possible.", "id": 8838, "time": "2001-12-12T10:56:02Z", "creator": "Leslie.Ramer@peregrine.com", "creation_time": "2001-12-12T10:56:02Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 5386, "attachment_id": null, "text": "Same comment as for 5384", "id": 17075, "time": "2002-06-03T15:33:51Z", "creator": "vincent.hardy@sun.com", "creation_time": "2002-06-03T15:33:51Z", "is_private": false}]