[{"count": 0, "tags": [], "bug_id": 41272, "attachment_id": null, "id": 97502, "time": "2006-12-31T05:38:35Z", "creator": "js@nw3.dk", "creation_time": "2006-12-31T05:38:35Z", "is_private": false, "text": "I am currently having problem compiling a 420 page document, with about 50\nfigures. The problem sees to be memory related, however the debugging\ninformation is insufficient for me to identify the problem.\n\nUsing th fop ant task, I get\n\n  Exception in thread \"main\" java.lang.NoSuchMethodError: main\n\nWhen using the commandline tool, the a bit more infomation is released, such as\n\nWARNING: Line 1 of a paragraph overflows the available area. (fo:block,\nlocation: 4794/406)\nException in thread \"main\" java.lang.OutOfMemoryError\n\nNote, this document compiled just fine with FOP 0.20.5"}, {"count": 1, "tags": [], "creator": "miroslav.gregan@siemens.com", "attachment_id": null, "id": 97562, "time": "2007-01-03T07:34:36Z", "bug_id": 41272, "creation_time": "2007-01-03T07:34:36Z", "is_private": false, "text": "(In reply to comment #0)\n> I am currently having problem compiling a 420 page document, with about 50\n> figures. The problem sees to be memory related, however the debugging\n> information is insufficient for me to identify the problem.\n> \n> Using th fop ant task, I get\n> \n>   Exception in thread \"main\" java.lang.NoSuchMethodError: main\n> \n> When using the commandline tool, the a bit more infomation is released, such as\n> \n> WARNING: Line 1 of a paragraph overflows the available area. (fo:block,\n> location: 4794/406)\n> Exception in thread \"main\" java.lang.OutOfMemoryError\n> \n> Note, this document compiled just fine with FOP 0.20.5\n\nIt's normal, FOP 0.92 beta needs more memory because it cheks much more the\nXSL-FO format than the FOP 0.20.5 was doing. \nSo just enables more memory to the JVM and it will be ok.\n\nIt could also be that something is now detected as wrong because of the new\ntest, but it wouldn't be this error message, I think."}, {"count": 2, "tags": [], "bug_id": 41272, "attachment_id": null, "id": 97565, "time": "2007-01-03T09:29:22Z", "creator": "js@nw3.dk", "creation_time": "2007-01-03T09:29:22Z", "is_private": false, "text": "Ok, that sounds reasonable.\n\nI have constantly read statements, which claimed Trunk was able to process much\nlarger documents, which I also interpreted as a much smaller memory food print."}, {"count": 3, "tags": [], "bug_id": 41272, "attachment_id": null, "id": 97571, "time": "2007-01-03T12:02:28Z", "creator": "adelmelle@apache.org", "creation_time": "2007-01-03T12:02:28Z", "is_private": false, "text": "(In reply to comment #2)\n> I have constantly read statements, which claimed Trunk was able to process much\n> larger documents, which I also interpreted as a much smaller memory food print.\n\nIt's not that simple, I'm afraid... \nAlthough most reports we have received so far indeed indicate that 0.9x is generally faster and uses less \nresources, this greatly depends greatly on the structure of your FO document. \nThe use of multiple, relatively small page-sequences is a key factor here. If a document is divided nicely \ninto sequences of 10 pages maximum, then the total number of pages becomes irrelevant. We've had \nfeedback from users processing 12000 paged documents without complaints (although the heap still \ngrows to about 0.5GB)."}, {"count": 4, "tags": [], "text": "\nForgot to mention: dividing into page-sequences offers only marginal improvement (if not none at all) \nwhen using forward references to the end of the document...", "attachment_id": null, "id": 97574, "creator": "adelmelle@apache.org", "time": "2007-01-03T12:12:14Z", "bug_id": 41272, "creation_time": "2007-01-03T12:12:14Z", "is_private": false}, {"count": 5, "tags": [], "text": "I am a longer list of documents and the way fop is used depends upon the memory\nrequirements of the individual document.\n\nBy default, I use the fop ant task, but when there are specific memory\nrequirements that is not possible (since the ant task does not have a maxmemory\nattribute like the ant java task - IT SHOULD).\n\nFor these documents, I instead use the ant task\n\n  <java class=\"\" maxmemory=\"200M\" ...>\n\nIn in 0.20.5 the class name was  org.apache.fop.apps.Fop\n\nThat does not work in 0.93, where one should use the class\n\n   org.apache.fop.cli.Main\n\nThat change in the API should be listed in docs/0.93/upgrading.html", "is_private": false, "bug_id": 41272, "id": 97614, "time": "2007-01-03T21:06:55Z", "creator": "js@nw3.dk", "creation_time": "2007-01-03T21:06:55Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "spepping@apache.org", "attachment_id": null, "text": "(In reply to comment #5)\n> In in 0.20.5 the class name was  org.apache.fop.apps.Fop\n> \n> That does not work in 0.93, where one should use the class\n> \n>    org.apache.fop.cli.Main\n> \n> That change in the API should be listed in docs/0.93/upgrading.html\n\nI documented that for future releases (too late for 0.93).\n\n", "id": 97704, "time": "2007-01-05T14:02:02Z", "bug_id": 41272, "creation_time": "2007-01-05T14:02:02Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 41272, "is_private": false, "id": 97705, "attachment_id": null, "creator": "spepping@apache.org", "creation_time": "2007-01-05T14:07:47Z", "time": "2007-01-05T14:07:47Z", "text": "(In reply to comment #5)\n> By default, I use the fop ant task, but when there are specific memory\n> requirements that is not possible (since the ant task does not have a maxmemory\n> attribute like the ant java task).\n> \n> For these documents, I instead use the ant task\n> \n>   <java class=\"\" maxmemory=\"200M\" ...>\n\nmaxmemory works only when one forks. Your solution to use the java task seems\nfine. Then there is no need to add capabilities to the fop task. We may add this\nto the anttask documentation page.\n"}, {"count": 8, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "increase RAM size as necessary", "id": 157024, "time": "2012-04-01T19:18:56Z", "bug_id": 41272, "creation_time": "2012-04-01T19:18:56Z", "is_private": false}, {"count": 9, "tags": [], "text": "batch transition resolved+wontfix to closed+wontfix", "attachment_id": null, "id": 158544, "creator": "gadams@apache.org", "time": "2012-04-30T00:14:38Z", "bug_id": 41272, "creation_time": "2012-04-30T00:14:38Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 41272, "attachment_id": null, "id": 158589, "time": "2012-04-30T00:17:06Z", "creator": "gadams@apache.org", "creation_time": "2012-04-30T00:17:06Z", "is_private": false, "text": "batch transition resolved+wontfix to closed+wontfix; if you believe this remains a bug and can demonstrate it with appropriate input FO file and output PDF file (as applicable), then you may reopen"}]