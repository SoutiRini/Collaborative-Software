[{"count": 0, "tags": [], "bug_id": 40382, "attachment_id": null, "is_private": false, "id": 92855, "time": "2006-09-01T06:14:14Z", "creator": "madhavabk79@yahoo.co.in", "creation_time": "2006-09-01T06:14:14Z", "text": "1. A simple java Application that uses PropertyConfigurator of log4j fails when\nthe application starts during system boot up on HP-UX.\n\n2. The application gets started from a startup script with any priority in rc3.d\nand rc2.d etc.\n\n3. The system boot process hangs and from other machine we cannot telnet or ping\nthe system for infinite time. No exception will be thrown in syslog or\n/etc/rc.log, but they will be displayed on console (monitor connected to server).\n\nThe following are logs received for my application.\n(Note: I have removed names of classes of my application in exception stack below)\n\n\njava.net.SocketException: Operation not supported (errno:223)\n        at java.net.PlainDatagramSocketImpl.datagramSocketCreate(Native Method)\n        at java.net.PlainDatagramSocketImpl.create(PlainDatagramSocketImpl.java:73)\n        at java.net.DatagramSocket.createImpl(DatagramSocket.java:317)\n        at java.net.DatagramSocket.<init>(DatagramSocket.java:158)\n        at org.apache.log4j.helpers.SyslogWriter.<init>(SyslogWriter.java:47)\n        at\norg.apache.log4j.net.SyslogAppender.setSyslogHost(SyslogAppender.java:288)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at\norg.apache.log4j.config.PropertySetter.setProperty(PropertySetter.java:196)\n        at\norg.apache.log4j.config.PropertySetter.setProperty(PropertySetter.java:155)\n        at\norg.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:120)\n        at\norg.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:87)\n        at\norg.apache.log4j.PropertyConfigurator.parseAppender(PropertyConfigurator.java:645)\n        at\norg.apache.log4j.PropertyConfigurator.parseCategory(PropertyConfigurator.java:603)\n        at\norg.apache.log4j.PropertyConfigurator.parseCatsAndRenderers(PropertyConfigurator.java:524)\n        at\norg.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:408)\n        at\norg.apache.log4j.PropertyConfigurator.configure(PropertyConfigurator.java:340)\n\nlog4j:ERROR Could not instantiate DatagramSocket to localhost. All logging will\nFAIL.\njava.net.SocketException: Operation not supported (errno:223)\n        at java.net.PlainDatagramSocketImpl.datagramSocketCreate(Native Method)\n        at java.net.PlainDatagramSocketImpl.create(PlainDatagramSocketImpl.java:73)\n        at java.net.DatagramSocket.createImpl(DatagramSocket.java:317)\n        at java.net.DatagramSocket.<init>(DatagramSocket.java:158)\n        at org.apache.log4j.helpers.SyslogWriter.<init>(SyslogWriter.java:47)\n        at\norg.apache.log4j.net.SyslogAppender.setSyslogHost(SyslogAppender.java:288)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at\norg.apache.log4j.config.PropertySetter.setProperty(PropertySetter.java:196)\n        at\norg.apache.log4j.config.PropertySetter.setProperty(PropertySetter.java:155)\n        at\norg.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:120)\n        at\norg.apache.log4j.config.PropertySetter.setProperties(PropertySetter.java:87)\n        at\norg.apache.log4j.PropertyConfigurator.parseAppender(PropertyConfigurator.java:645)\n        at\norg.apache.log4j.PropertyConfigurator.parseCategory(PropertyConfigurator.java:603)\n        at\norg.apache.log4j.PropertyConfigurator.parseCatsAndRenderers(PropertyConfigurator.java:524)\n        at\norg.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:408)\n        at\norg.apache.log4j.PropertyConfigurator.configure(PropertyConfigurator.java:340)"}, {"count": 1, "tags": [], "creator": "carnold@apache.org", "text": "SyslogAppender in log4j is implemented as a pure Java class using network IO (even when logging to \nlocalhost) and does not call the ::syslog native method.  The implementation has the advantage of \nbeing platform independent, but will not work if syslogd is not accepting network connections or if the \nsecurity manager prevents the creation of sockets.   There is a enhancement request for a JNI \nimplementation of SyslogAppender (http://issues.apache.org/bugzilla/show_bug.cgi?id=27363) along \nwith an implementation.\n\nIt is likely that you are running into one of the blockers mentioned (at least in the start up phase).  How \nthat affect system booting is unclear.  I'm guessing that if you change your config file to use another \nappender (for example, ConsoleAppender), then you start up process would work fine.  The exception \nthrown when trying to connect to syslogd seems to be caught properly, but perhaps instead of \nsubsequent log requests failing, they block somehow. \n\nI've reviewed both the log4j 1.2 and 1.3 implementations and don't see a mechanism for logging after \nthe observed warning to cause a lock up.  this.ds should be null and the write methods in SyslogWriter \ndo check that and though they unnecessary create DatagramPackets, they do not attempt to send them.  \nThe code could be optimized by avoiding short-circuiting the write statements if this.ds == null.\n\nPerhaps the lock up is due to something else in the app and is not related to the SyslogAppender.", "id": 92908, "time": "2006-09-01T17:14:44Z", "bug_id": 40382, "creation_time": "2006-09-01T17:14:44Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "madhavabk79@yahoo.co.in", "is_private": false, "text": "Yes, there is problem in socket descriptor creation at boot time on HP.\nWe should ensure that we have descriptors at least up to number 2.\nElse there are chances that socket API gives wrong IO descriptor.\n\nThanks", "id": 93130, "time": "2006-09-07T06:20:18Z", "bug_id": 40382, "creation_time": "2006-09-07T06:20:18Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 40382, "text": "This looks very similar to a problem we had on AS/400 where the TCP/IP networking layer can be brought up or down separately.\n\nMy notion is that the networking layer is not yet available to applications which then fail.  Perhaps you could put in an old fashioned delay or simply put it so much in the back that the others have finished initializing.\n\nNote: I am not familiar with HP/UX", "count": 3, "id": 118118, "time": "2008-06-30T12:36:28Z", "creator": "thorbjoern@gmail.com", "creation_time": "2008-06-30T12:36:28Z", "is_private": false}, {"count": 4, "tags": [], "text": "No response for a month.  Setting to NEEDINFO.", "is_private": false, "id": 119264, "creator": "thorbjoern@gmail.com", "time": "2008-08-02T10:50:25Z", "bug_id": 40382, "creation_time": "2008-08-02T10:50:25Z", "attachment_id": null}]