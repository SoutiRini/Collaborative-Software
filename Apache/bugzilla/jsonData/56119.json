[{"count": 0, "tags": [], "bug_id": 56119, "attachment_id": null, "id": 172938, "time": "2014-02-07T17:09:52Z", "creator": "oliver_lloyd@hotmail.com", "creation_time": "2014-02-07T17:09:52Z", "is_private": false, "text": "This is a fairly impossible problem but I thought I'd raise it in case it supports something you've already seem. \n\nIn the attached plan, if I run it without a timer it is successful for each request. However, if I enable the timer the the first upload request works but the second fails, then the third works, and the forth fails, etc...\n\nThe only difference is enabling and disabling the timer.\n\nUnfortunately, I can't actually give you a working jmx - the attached will always fail but hopefully it is still useful.\n\nFailure is:\norg.apache.http.NoHttpResponseException: The target server failed to respond\n\nSuccess:\n204 - blank response\n\n\nThe type of timer makes no difference.\n\nThe value in the timer DOES make a difference. 100ms and + = problem, 30ms = no problem.\n\nThe request I am making to S3 is valid, were it not I would get an error response. In this case I get NoHTTPResponse."}, {"count": 1, "tags": [], "text": "Created attachment 31292\nScreenshot of issue", "attachment_id": 31292, "id": 172939, "creator": "oliver_lloyd@hotmail.com", "time": "2014-02-07T17:12:03Z", "bug_id": 56119, "creation_time": "2014-02-07T17:12:03Z", "is_private": false}, {"count": 2, "tags": [], "creator": "oliver_lloyd@hotmail.com", "attachment_id": null, "id": 172940, "time": "2014-02-07T17:13:35Z", "bug_id": 56119, "creation_time": "2014-02-07T17:13:35Z", "is_private": false, "text": "I should also have stated that running this test with multiple threads does not change the per thread behaviour. \n\nThread 1 > works, then fails, then works, then fails...\nThread 2 > works, then fails, then works, then fails...\nThread 3 > works, then fails, then works, then fails...\netc..."}, {"count": 3, "tags": [], "bug_id": 56119, "attachment_id": 31293, "id": 172941, "time": "2014-02-07T17:15:10Z", "creator": "oliver_lloyd@hotmail.com", "creation_time": "2014-02-07T17:15:10Z", "is_private": false, "text": "Created attachment 31293\njmx"}, {"count": 4, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "text": "*** Bug 56118 has been marked as a duplicate of this bug. ***", "id": 172953, "time": "2014-02-08T17:56:39Z", "bug_id": 56119, "creation_time": "2014-02-08T17:56:39Z", "is_private": false}, {"count": 5, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "id": 172960, "time": "2014-02-08T22:22:55Z", "bug_id": 56119, "creation_time": "2014-02-08T22:22:55Z", "is_private": false, "text": "Could you clarify which timer makes test fail ?\nIs it Constant Timer or Gaussian Random Timer ?\n\nWhy does last request use a different server than others ?\n\nWould it be possible that activating an additional Timer (if it's the case (see my first question)) leads randomly to having a timeout on created access key ?\n\nReading the S3 docs I don't see anything like this although."}, {"text": "It fails with both timers.\n\nThe last POST to actually upload the file is different because the server (our server) only gives the client/browser some security tokens, we do not receive the uploaded file. The actual file transfer is done from the browser directly to Amazon S3 and this is the last request.\n\nSee: http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingHTTPPOST.html\n\nThere is an expiration for the credentials we pass back to the browser but this is set to 5 minutes.\n\nSee: http://docs.aws.amazon.com/AmazonS3/latest/dev/HTTPPOSTForms.html#HTTPPOSTExpiration\n\nAt first glance, I can see how this looks like a config issue with the request and, to be fair, it probably is but it's weird that it relates to timing like this and that this can cause a null response - I was curious if there was anything you could think of.\n\nBut it's quite a minor problem: this will not occur in real life and we can easily work around it for testing.", "tags": [], "bug_id": 56119, "attachment_id": null, "count": 6, "id": 172963, "time": "2014-02-09T10:48:28Z", "creator": "oliver_lloyd@hotmail.com", "creation_time": "2014-02-09T10:48:28Z", "is_private": false}, {"text": "Thanks for feedback.\nIssue does not seem to be related to JMeter.\nClosing issue but would be very interested by the problem explanation if you find it.", "tags": [], "bug_id": 56119, "attachment_id": null, "count": 7, "id": 172965, "time": "2014-02-09T11:28:43Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-02-09T11:28:43Z", "is_private": false}, {"count": 8, "tags": [], "creator": "oliver_lloyd@hotmail.com", "attachment_id": null, "text": "We're seeing this problem in other testplans now. Where an external request is failing every second attempt. This is not related to uploads but does appear to relate to calls to external servers.\n\nWe ran using 2.9 & 2.10 and did not see the problem - it is 2.11 specific.\n\nIf you contact me at oliver.lloyd@news.co.uk I can provide you with a testplan to replicate.", "id": 173040, "time": "2014-02-14T11:08:31Z", "bug_id": 56119, "creation_time": "2014-02-14T11:08:31Z", "is_private": false}, {"count": 9, "attachment_id": null, "bug_id": 56119, "text": "Hello,\nAfter exchange with Oliver it seems these 2 settings improve:\n1) uncomment hc.parameters.file=hc.parameters in user.properties\n2) Set this in hc.parameters: http.connection.stalecheck$Boolean=true\n\n\nAnswer from Oliver:\n\"That improves things a lot. But not 100% - Now we see 1 in 10 requests fail (instead of 1 in 2).\"", "id": 173045, "time": "2014-02-14T14:17:10Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-02-14T14:17:10Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 56119, "text": "@Oliver,\nRegarding the remaining 10% failure if it's confirmed, are you sure you don't get it with 2.9 and 2.10.\n\nI think it might come from this behaviour of S3.\n- http://aws.amazon.com/articles/1904\n\n\n>\"Also, don't overuse a connection. Amazon S3 will accept up to 100 requests before it closes a connection (resulting in 'connection reset'). Rather than having this happen, use a connection for 80-90 requests before closing and re-opening a new connection.\"\n\nIn this particular case, the settings change impacts highly the test as you will get a lot of Stale Connections.\n\n\nWe would need maybe to add ability to discard a connection after a certain number of Requests.\n\nFinally, I am not sure we should rollback this change, but maybe document it better ?", "count": 10, "id": 173053, "time": "2014-02-15T13:54:10Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-02-15T13:54:10Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 56119, "text": "Also, note that the \"Use keepalive\" option can be deselected to force the next sampler to use a new connection.", "count": 11, "id": 173054, "time": "2014-02-15T15:27:24Z", "creator": "sebb@apache.org", "creation_time": "2014-02-15T15:27:24Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 56119, "text": "No, we only see failures with 2.11. Also, we see the same issue with other testplans that go out to other external endpoints, not just s3. Plus, we start to get failures early on, after just 10 or 20 requests.\n\nThe common factors are external calls, 2.11 and the use of some sort of timer - if we remove all delays between requests then we do not get failures.\n\nSorry. it is hard to give a more reliable description for reproducing the problem. I will see if I can put something together next week to help.", "id": 173055, "time": "2014-02-15T21:48:42Z", "creator": "oliver_lloyd@hotmail.com", "creation_time": "2014-02-15T21:48:42Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "Do you see the same behaviour if you use HttpClient 3.1 as the HTTP implementation?", "id": 173057, "time": "2014-02-15T22:08:07Z", "bug_id": 56119, "creation_time": "2014-02-15T22:08:07Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 56119, "text": "@Oliver, after changing the 2 following settings:\n1) uncomment hc.parameters.file=hc.parameters in user.properties\n2) Set this in hc.parameters: http.connection.stalecheck$Boolean=true\n\nYou should not see any difference between 2.10 and 2.11 as AFAIK there is no other change in HTTP stack that could explain it.\n\nDo you confirm you see differences between 2.10 and 2.11 ?\nor is it between 2.9 and 2.11 ?\n\nIn 2.9, the retry count for the HttpClient 3.1 and HttpClient 4.x samplers has been changed to 0 . Previously the default was 1, this one could also explain differences in your use case.", "count": 14, "id": 173058, "time": "2014-02-16T12:51:01Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-02-16T12:51:01Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 56119, "attachment_id": null, "text": "Okay, so coming back to this today I was not able to reproduce the problem (failed external calls) when using the settings advised by Phillipe. We had previously seen lower failure rates of around 5% - 10% but it looks like that was an unfortunate co-incidence. Apologies for that.\n\nSo, yes, the following changes:\n\n1) uncomment hc.parameters.file=hc.parameters in user.properties\n2) Set this in hc.parameters: http.connection.stalecheck$Boolean=true\n\nWork around the problem of every other external request failing in 2.11.", "id": 173333, "time": "2014-02-18T15:27:24Z", "creator": "oliver_lloyd@hotmail.com", "creation_time": "2014-02-18T15:27:24Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 56119, "text": "Many thanks Oliver for your feedback.\n\nIn the end, do you consider this a bug ?\nI don't as current settings work for websites which do not have S3 way of invalidating connection after N requests.\nBut would be interested by your opinion ?\n\nAt JMeter Team, what's your opinion ?\nShould we rollback this setting change or not ?\nAt least we should document it but where ? Wiki or component reference ?", "id": 173342, "time": "2014-02-18T20:07:48Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-02-18T20:07:48Z", "is_private": false, "attachment_id": null}, {"text": "My feeling is that this should be considered a bug. \n\nThe two cases where we recently saw this problem were when going out to S3 and also when sending requests to Zuora, a payment provider. But I can think of several other scenarios where a web app might need to make a call to a third party and where this call might need to be included in a testplan; in fact, we do this all the time and I don't think we're unusual in this.", "tags": [], "bug_id": 56119, "attachment_id": null, "count": 17, "id": 173356, "time": "2014-02-19T10:50:11Z", "creator": "oliver_lloyd@hotmail.com", "creation_time": "2014-02-19T10:50:11Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 56119, "text": "On the face of it, I don't think it is a bug - perhaps an enhancement request.\n\nI'm not sure I fully understand how the timer interacts with the staleCheck setting, unless there is some S3 setting that disallows long-lasting sessions?\n\nI think further tests are needed to establish exactly how enabling the staleCheck  prevents the problem.\n\nIt would be interesting to know if disabling keep-alive solved the issue in the absence of staleCheck.\n\nIdeally we need a test server (either public or easy to set up locally) that shows the same behaviour as being reported here.\n\nJMeter already supports closing a connection, i.e. forcing the next sample to use a new connection. It looks like the problem may be that the connection is expiring somehow. If this is indeed the case, then there might be a need to provide automated connection closing based on re-use count and/or idle time.\n\nBut first we need to know if that is really what the problem is.", "id": 173357, "time": "2014-02-19T11:11:46Z", "creator": "sebb@apache.org", "creation_time": "2014-02-19T11:11:46Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 56119, "attachment_id": null, "text": "2.11 Use KeepAlive, OFF - 100% Success\n2.11 HTTPClient 3.1 - 100% Success\n2.11 DEFAULT - 50% Failures\n2.9 DEFAULT - 100$ Success\n2.10 DEFAULT - 100% Success\n\nNote. This is a test NOT using S3, but another, different, external call.", "id": 173358, "time": "2014-02-19T11:32:28Z", "creator": "oliver_lloyd@hotmail.com", "creation_time": "2014-02-19T11:32:28Z", "is_private": false}, {"text": "Thanks. That shows the issue is something to do with connection re-use.\n\nHowever I don't understand why dropping the staleCheck should affect 50% of requests.\n\nOr indeed why HC 3.1 should be 100% successful, but perhaps that does retries - I don't know without looking.\n\nI've just had another look at the error on the screenshot, which shows \"Target Server failed to respond\", yet the elapsed time seems to be close to sero.\n\nThis suggests that the request may be failing before it gets to the server.\n\nIs there a server against which we can test?\n\nOr can you run a very short test showing the errors with full wire logging (or using WireShark)?", "tags": [], "bug_id": 56119, "attachment_id": null, "count": 20, "id": 173359, "time": "2014-02-19T11:48:28Z", "creator": "sebb@apache.org", "creation_time": "2014-02-19T11:48:28Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 56119, "text": "Testing with the privately provided test plan shows that the problem occurs on one of the hosts only.\n\nThis host only occurs once in the plan, which means that its connection is relatively idle compared with the others.\nWhen you add in all the other samples and delays, the elapsed time between samples of this particular host is about 60 seconds.\n\nI just tried a simple GET on the same host, and that also fails when the elapsed time between samples is around 15 secs or more (10 secs seems to be OK)\n\nI think this is the immediate cause of the issue.\n\nThe staleCheck option adds an extra sample just before real sample. This causes the old connection to be dropped by the server, but the stale check code does not report this: it just creates a new connection, which then works because it has not been idle.\n\nThat is why disabling Keep-Alive works - there is no attempt to reuse the connection which has been idle for a while.\n\nThe work round - if one does not want to use staleCheck for everything - is to disable keep-alive for samples that are likely to trigger the idle timeout.\n\nWe need to have a dev@ discussion on what we might want to do to fix this in JMeter. I'll start that off shortly.", "id": 173369, "time": "2014-02-19T17:51:03Z", "creator": "sebb@apache.org", "creation_time": "2014-02-19T17:51:03Z", "is_private": false, "attachment_id": null}, {"count": 22, "tags": [], "bug_id": 56119, "text": "Just discovered something else.\nI tried testing timeouts against the ASF server.\n\nEven if the idle timeout is exceeded, the samples don't fail.\nDebug shows that this is because the ASF server returns the following header:\n\nKeep-Alive: timeout=5, max=100\n\nThis is detected by the HC 4.x code:\n\n2014/02/19 19:37:47:619 GMT [DEBUG] headers - << Keep-Alive: timeout=5, max=100\n2014/02/19 19:37:47:619 GMT [DEBUG] headers - << Connection: Keep-Alive\n2014/02/19 19:37:47:619 GMT [DEBUG] headers - << Content-Type: text/html; charset=utf-8\n2014/02/19 19:37:47:697 GMT [DEBUG] BasicClientConnectionManager - Connection can be kept alive for 5000 MILLISECONDS\n2014/02/19 19:39:17:712 GMT [DEBUG] BasicClientConnectionManager - Get connection for route {s}->https://www.apache.org\n2014/02/19 19:39:17:712 GMT [DEBUG] BasicClientConnectionManager - Connection [id:0][route:{s}->https://www.apache.org][state:null] expired @ Wed Feb 19 19:37:52 GMT 2014\n2014/02/19 19:39:17:712 GMT [DEBUG] DefaultClientConnection - Connection 0.0.0.0:4368<->192.87.106.229:443 closed\n2014/02/19 19:39:17:712 GMT [DEBUG] DefaultClientConnectionOperator - Connecting to www.apache.org:443\n\nNote that the connection is automatically dropped by the connection manager.\n\nI have just reviewed the logs from the private test plan, and these don't return a Keep-Alive header, so the HC code assumes the connection is not timed out. The log shows the following:\n\nBasicClientConnectionManager - Connection can be kept alive indefinitely\n\nThis means that the HC code does not know when to drop the connection.\n\nI think it is probably a configuration error on the server; it really ought to tell the client what the keep-alive period is. It probably explains why this issue has not been reported by others as well.\n\nIt gives a possible solution for the test errors - fix the server config!", "id": 173371, "time": "2014-02-19T19:55:16Z", "creator": "sebb@apache.org", "creation_time": "2014-02-19T19:55:16Z", "is_private": false, "attachment_id": null}, {"count": 23, "tags": [], "text": "We also see the same issue in another testplan, this one using S3, it's feasible that both servers are setup wrongly but this suggests this server config error is common. That or we're just unlucky!", "attachment_id": null, "bug_id": 56119, "id": 173373, "time": "2014-02-19T20:28:03Z", "creator": "oliver_lloyd@hotmail.com", "creation_time": "2014-02-19T20:28:03Z", "is_private": false}, {"text": "Check the response headers from the servers.\n\nDo they include the Keep-Alive header?", "tags": [], "bug_id": 56119, "attachment_id": null, "count": 24, "id": 173377, "time": "2014-02-19T22:11:57Z", "creator": "sebb@apache.org", "creation_time": "2014-02-19T22:11:57Z", "is_private": false}, {"count": 25, "tags": [], "bug_id": 56119, "text": "No, I'm not seeing the keep-alive header in the response.\n\nI've emailed you the plan.\n\nI see what you're saying, that the server is sending the wrong response so how can the client know how to act, and sure, I can work around this easily, my concern though is that not sending this header seems to be pretty common so this same issue could impact others. It's not immediately obvious though what the cause of the problem is and I can see how others might first blame the external server, I know I did - it might be that the problem is happening for other people but they are not raising it here... Just a thought.", "id": 173378, "time": "2014-02-19T22:53:34Z", "creator": "oliver_lloyd@hotmail.com", "creation_time": "2014-02-19T22:53:34Z", "is_private": false, "attachment_id": null}, {"count": 26, "tags": [], "bug_id": 56119, "text": "Looking here: http://en.wikipedia.org/wiki/HTTP_persistent_connection\n\nIt seems as though the Keep-Alive header is effectively depreciated for HTTP1.1 as all connections are assumed persistent.", "id": 173379, "time": "2014-02-19T23:10:16Z", "creator": "oliver_lloyd@hotmail.com", "creation_time": "2014-02-19T23:10:16Z", "is_private": false, "attachment_id": null}, {"count": 27, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "(In reply to oliver lloyd from comment #25)\n\n> my concern though is that not sending this header seems to be pretty common\n> so this same issue could impact others.\n\nAFAIK you are the first and only person to report it so far.\nI don't know whether that is because:\n+ 2.11 has not been out for long, or\n+ there are not many misbehaving servers or\n+ not many test plans are using connections that can become idle.", "id": 173381, "time": "2014-02-19T23:36:56Z", "bug_id": 56119, "creation_time": "2014-02-19T23:36:56Z", "is_private": false}, {"count": 28, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "id": 173382, "time": "2014-02-19T23:38:44Z", "bug_id": 56119, "creation_time": "2014-02-19T23:38:44Z", "is_private": false, "text": "(In reply to oliver lloyd from comment #26)\n> Looking here: http://en.wikipedia.org/wiki/HTTP_persistent_connection\n> \n> It seems as though the Keep-Alive header is effectively depreciated for\n> HTTP1.1 as all connections are assumed persistent.\n\nThat is the Keep-Alive _request_ header.\n\nThe server should send the Keep-Alive _response_ header which has a different (but related) function."}, {"text": "@Oliver,\nReally big thanks for your follow up and investigations on this.\n\n@sebb, I don't think Oliver is the only person who is facing this, I think I wrote somewhere here or on dev list that another person was facing this with 2.11 and tweeted about this.\n\nAs discussed on dev list, we should:\n- write a wiki page about this setting\n\n- Select a way to invalidate idle connections or connections that have run N requests (s3 case) for non 'clean' servers", "tags": [], "bug_id": 56119, "attachment_id": null, "count": 29, "id": 173406, "time": "2014-02-20T21:15:54Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-02-20T21:15:54Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 56119, "text": "(In reply to Philippe Mouawad from comment #29)\n> @Oliver,\n> Really big thanks for your follow up and investigations on this.\n\nYes, thanks for the prompt responses to our queries.\n \n> @sebb, I don't think Oliver is the only person who is facing this, I think I\n> wrote somewhere here or on dev list that another person was facing this with\n> 2.11 and tweeted about this.\n\nPK, it would be interesting to know if they were also using S3.\n\n> As discussed on dev list, we should:\n> - write a wiki page about this setting\n> \n> - Select a way to invalidate idle connections or connections that have run N\n> requests (s3 case) for non 'clean' servers\n\nI have just run a test against Amazon.com. They also have a server that fails to send a Keep-Alive header. It seems to try to drop the connection after a certain number of requests - by sending the following header:\n\nCneonction: close\n\nYes, it really is spelt that way!\n\nWhat is odd is that it seems the connection still keeps going. In any case, I suspect there is not a problem handling connection drop after N requests, because that will be initiated by the server at the end of the response.\n\nBut I suppose it may still be worth considering recycling connections after a certain number of requests.\n\nThe problem with the idle timeout is that it occurs at the start of a new request, when disconnects are not currently expected. Maybe we can handle this in JMeter, or it may need some help from HC.", "count": 30, "id": 173409, "time": "2014-02-21T01:39:25Z", "creator": "sebb@apache.org", "creation_time": "2014-02-21T01:39:25Z", "is_private": false}, {"count": 31, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "text": "The typical explanation for a Cneonction header is here:\n\nhttp://stackoverflow.com/questions/4798461/cneonction-and-nncoection-http-headers\n\nThey say it happens if the web server is fronted with a load balancer that does its own connection handling but doesn't want to do to much protocol adjustment work. By permuting some characters in the name of the connection header the client no longer reacts on the close message of the origin server but the packet sizes and probably TCP checksums do not change. So the implementation on the packet level is cheap.\n\nThe LB reacts on the connection close itself but has decoupled connection handling between client and LB from the connections between LB and origin server.\n\nNow if that is true, it might well be, that the LB itself doesn't shut down the connections cleanly once it decides itself to close a connection from the client. That would fit into sebb's observation.\n\nAsa result it should be OK to ignore those misspelled headers, because they are misspelled intentionally to get them ignored. And in this situation the next hop might infact expose a somewhat strange connection close behavior itself.", "id": 173438, "time": "2014-02-23T17:05:41Z", "bug_id": 56119, "creation_time": "2014-02-23T17:05:41Z", "is_private": false}, {"count": 32, "tags": [], "text": "Added a work-round to provide an idle timeout value if the server does not send the Keep-Alive header. This works, but is not ideal as the same timeout applies to all hosts.", "attachment_id": null, "bug_id": 56119, "id": 173500, "time": "2014-02-27T01:58:40Z", "creator": "sebb@apache.org", "creation_time": "2014-02-27T01:58:40Z", "is_private": false}, {"count": 33, "tags": [], "bug_id": 56119, "text": "URL: http://svn.apache.org/r1572390\nLog:\nFile uploads fail every other attempt using timers.\nEnable idle timeouts for servers that don't send Keep-Alive headers.\nBugzilla Id: 56119\n\nModified:\n    jmeter/trunk/bin/jmeter.properties\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPHC4Impl.java\n    jmeter/trunk/xdocs/changes.xml", "id": 173501, "time": "2014-02-27T01:58:57Z", "creator": "sebb@apache.org", "creation_time": "2014-02-27T01:58:57Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 56119, "text": "Note: if you want to try a nightly build with this fix, it will be in builds after version r1572390. Define the property\n\nhttpclient4.idletimeout=5000 \n\nto set the timeout to 5 seconds for any servers that don't send Keep-Alive headers", "count": 34, "id": 173508, "time": "2014-02-27T10:58:41Z", "creator": "sebb@apache.org", "creation_time": "2014-02-27T10:58:41Z", "is_private": false}, {"text": "Hello Oliver,\nAnd feedback ?\nThanks", "tags": [], "bug_id": 56119, "attachment_id": null, "count": 35, "id": 174021, "time": "2014-03-22T21:26:31Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-03-22T21:26:31Z", "is_private": false}, {"count": 36, "tags": [], "bug_id": 56119, "attachment_id": null, "text": "*** Bug 56417 has been marked as a duplicate of this bug. ***", "id": 174654, "time": "2014-04-16T19:21:03Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2014-04-16T19:21:03Z", "is_private": false}, {"text": "@pam <pramod.desai@abyeti.com>: please don't re-open an old issue without providing further details.", "tags": [], "bug_id": 56119, "attachment_id": null, "count": 37, "id": 180272, "time": "2015-01-12T19:43:50Z", "creator": "sebb@apache.org", "creation_time": "2015-01-12T19:43:50Z", "is_private": false}, {"text": "Hello,have anyone know why I met the exception like \"org.apache.commons.httpclient.NoHttpResponseException: The server <ip address>failed to respond\" although I user the JMeter 2.10?", "tags": [], "bug_id": 56119, "attachment_id": null, "count": 38, "id": 183274, "time": "2015-06-02T07:50:45Z", "creator": "yingfang.li@axbsec.com", "creation_time": "2015-06-02T07:50:45Z", "is_private": false}, {"count": 39, "tags": [], "creator": "bindusreejava@gmail.com", "attachment_id": 35394, "id": 201283, "time": "2017-10-03T16:23:50Z", "bug_id": 56119, "creation_time": "2017-10-03T16:23:50Z", "is_private": false, "text": "Created attachment 35394\nI see Socket exception when i run my script in jmeter"}, {"count": 40, "tags": [], "bug_id": 56119, "attachment_id": null, "text": "(In reply to bindu from comment #39)\n> Created attachment 35394 [details]\n> I see Socket exception when i run my script in jmeter\n\n@bindu (bindusreejava@gmail.com): please don't re-open an old issue.\nFirst ask on mailing list and then open a new bugzilla.", "id": 201286, "time": "2017-10-03T19:18:54Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-10-03T19:18:54Z", "is_private": false}]