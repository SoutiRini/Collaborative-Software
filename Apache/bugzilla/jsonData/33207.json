[{"count": 0, "tags": [], "creator": "roland.illig@gmx.de", "attachment_id": null, "is_private": false, "id": 69990, "time": "2005-01-23T13:41:31Z", "bug_id": 33207, "creation_time": "2005-01-23T13:41:31Z", "text": "I've done a code audit of the suexec.c file just for fun.\nHere are my results:\n\n* you will have problems when sizeof(uid_t) > sizeof(int).\n  (consider 64 bit uid_t and 32 bit int; therefore don't use atoi(3).)\n\n* you will have problems when sizeof(gid_t) > sizeof(int).\n  (consider 64 bit gid_t and 32 bit int; therefore don't use atoi(3).)\n\n* you did not check for NULL returns of strdup.\n  Fixed in the patch.\n\n* you had a possible (\"compile time\") buffer overflow.\n  As long as AP_SAFE_PATH is a string literal (which it should really be),\n  the patched version is faster and occupied less memory.\n  Fixed in the patch.\n\n* you had an unused variable (main:prog) in the code.\n  Fixed in the patch.\n\n* you are still not able to report the failure of execv to the logfile.\n  See the other bug reports.\n\nIndex: suexec.c\n===================================================================\n--- suexec.c\t(revision 126209)\n+++ suexec.c\t(working copy)\n@@ -200,9 +200,19 @@\n     return;\n }\n \n+static char *xstrdup(const char *s)\n+{\n+    char *result;\n+\n+    if ( (result = strdup(s)) == NULL) {\n+        log_err(\"out of memory\\n\");\n+        exit(1);\n+    }\n+    return result;\n+}\n+\n static void clean_env(void)\n {\n-    char pathbuf[512];\n     char **cleanenv;\n     char **ep;\n     int cidx = 0;\n@@ -224,8 +234,7 @@\n         exit(120);\n     }\n \n-    sprintf(pathbuf, \"PATH=%s\", AP_SAFE_PATH);\n-    cleanenv[cidx] = strdup(pathbuf);\n+    cleanenv[cidx] = \"PATH=\" AP_SAFE_PATH;\n     cidx++;\n \n     for (ep = envp; *ep && cidx < AP_ENVBUF-1; ep++) {\n@@ -254,7 +263,6 @@\n     char *target_homedir;   /* target home directory     */\n     char *actual_uname;     /* actual user name          */\n     char *actual_gname;     /* actual group name         */\n-    char *prog;             /* name of this program      */\n     char *cmd;              /* command to be executed    */\n     char cwd[AP_MAXPATH];   /* current working directory */\n     char dwd[AP_MAXPATH];   /* docroot working directory */\n@@ -268,7 +276,6 @@\n      */\n     clean_env();\n \n-    prog = argv[0];\n     /*\n      * Check existence/validity of the UID of the user\n      * running this program.  Error out if invalid.\n@@ -395,11 +402,11 @@\n             exit(106);\n         }\n         gid = gr->gr_gid;\n-        actual_gname = strdup(gr->gr_name);\n+        actual_gname = xstrdup(gr->gr_name);\n     }\n     else {\n         gid = atoi(target_gname);\n-        actual_gname = strdup(target_gname);\n+        actual_gname = xstrdup(target_gname);\n     }\n \n #ifdef _OSD_POSIX\n@@ -433,8 +440,8 @@\n      * Save these for later since initgroups will hose the struct\n      */\n     uid = pw->pw_uid;\n-    actual_uname = strdup(pw->pw_name);\n-    target_homedir = strdup(pw->pw_dir);\n+    actual_uname = xstrdup(pw->pw_name);\n+    target_homedir = xstrdup(pw->pw_dir);\n \n     /*\n      * Log the transaction here to be sure we have an open log"}]