[{"count": 0, "tags": [], "text": "Creating DataType subclasses in a package outside of org.apache.tools.ant.types\nare unable to call dieOnCircularReference() on other DataType objects.  If\nsomeone wanted to create their own DataType that, for instance, used <fileset>\nor <path> subelements, they would not be able to check for a circular reference!\n As things stand now, the only alternative would be to subclass FileSet or Path\nor whichever class and override dieOnCircularReference() to make it visible.", "is_private": false, "id": 7212, "creator": "xerafin@yahoo.com", "time": "2001-10-26T11:58:42Z", "bug_id": 4460, "creation_time": "2001-10-26T11:58:42Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "peter.reilly@corvil.com", "is_private": false, "count": 1, "id": 38929, "time": "2003-06-16T15:35:06Z", "bug_id": 4460, "creation_time": "2003-06-16T15:35:06Z", "text": "Something like this is necessary.\nHowever, making dieOnCircularReference() public\nwould break backward compatiblity on third party classes\nthat extend DataType and provide their own\nprotected implementation of dieOnCircularReference().\n\nA solution could be to make a new public\nmethod in datatype: CheckDieOnCircularReference()\n(or some such name), and get this method to call\ndieOnCircularReference().\n"}, {"count": 2, "tags": [], "text": "20 months?  It took 20 months for that?  Goodness!  :)\n\nI went with the workaround long long long ago:\n\npublic void dieOnCircularReference (Stack stk, Project p) throws BuildException\n{\n    super.dieOnCircularReference(stk, p);\n}\n\nAnnoying, but it works just fine.", "is_private": false, "id": 38933, "creator": "xerafin@yahoo.com", "time": "2003-06-16T17:25:45Z", "bug_id": 4460, "creation_time": "2003-06-16T17:25:45Z", "attachment_id": null}]