[{"count": 0, "tags": [], "bug_id": 55552, "attachment_id": 30821, "text": "Created attachment 30821\nWeb application with required libraries and JSP file to repredouce the NPE\n\nIf JSP includes a line \"<c:if test=\"${nonExisting}\">Hello,world!</c:if>\" where \"nonExisting\" is attribute that does not exist, then NullPointerException will be thrown. The cause is at org.apache.jasper.compiler.JspUtil.java at line #421 which generates something like:\n((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(\"${nonExisting}\", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue()\n\nThe result of proprietaryEvaluate() is null (because of EL 3.0 changes regarding coercing), hence calling booleanValue() will throw NPE. The latest changes in EL specification does require guarding against such null pointer access (otherwise it will break lots of existing applications). I really hope that NPE is not intended behavior.\n\nSteps to reproduce:\n* put jstl 1.2+ required jar files in WEB-INF/lib (or tomcat/lib)\n* Create a simple JSP file with line above (<c:if test=\"${nonExisting}\">Hello,world!</c:if>)\n* Exception is thrown upon invoking jsp:\njava.lang.NullPointerException\n\torg.apache.jsp.index_jsp._jspx_meth_c_005fif_005f0(index_jsp.java:109)\n\torg.apache.jsp.index_jsp._jspService(index_jsp.java:81)\n\torg.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:728)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:432)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:403)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:347)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:728)\n\torg.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:91)\n\nAs far as I understand, this is direct result of incompatibility between EL 3.0 (http://download.oracle.com/otndocs/jcp/el-3_0-fr-eval-spec/index.html) and 2.2 as stated in EL spec this is intended behavior of EL. Here's the citation (Section A.4):\n\"The default coercion for nulls to non-primitive types (except String) returns \nnulls. For instance, a null coerced to Boolean now returns a null, while a \nnull coerced to boolean returns false.\"", "id": 170056, "time": "2013-09-12T06:19:31Z", "creator": "arvids.grabovskis@gmail.com", "creation_time": "2013-09-12T06:19:31Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 55552, "attachment_id": null, "id": 170061, "creation_time": "2013-09-12T10:08:08Z", "time": "2013-09-12T10:08:08Z", "creator": "markt@apache.org", "text": "The change in default handling for non-primitive types did trigger this bug. The problem was that Jasper was converting primitive expected types to the object versions before calling the expression engine. This has been fixed and now Jasper passes exactly the type requested.", "is_private": false}]