[{"count": 0, "tags": [], "creator": "michaelomichael@gmail.com", "attachment_id": 34633, "is_private": false, "id": 196119, "time": "2017-01-17T17:22:04Z", "bug_id": 60597, "creation_time": "2017-01-17T17:22:04Z", "text": "Created attachment 34633\nProposed patch to add SSL_CIPHER_SUITES property\n\nThere is a user property \"org.apache.tomcat.websocket.SSL_PROTOCOLS\"\nthat you can use to provide the list of permitted SSL protocols when\nconnecting to a websocket with WsWebSocketContainer.  \n\nI was expecting that there would be a similar property to allow you to set the list of permitted SSL cipher suites as well (e.g. \"org.apache.tomcat.websocket.SSL_CIPHER_SUITES\"), but such a property doesn't exist in 7.0.73.\n\nI've attached a proposed patch to add the latter."}, {"count": 1, "tags": [], "bug_id": 60597, "attachment_id": 34637, "text": "Created attachment 34637\nProposed patch to add SSL_CIPHER_SUITES property to 7.0\n\nThis is the same patch file as 34633 but with a better naming convention to prevent confusion around version numbers.", "id": 196137, "time": "2017-01-18T11:00:19Z", "creator": "michaelomichael@gmail.com", "creation_time": "2017-01-18T11:00:19Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 60597, "attachment_id": 34638, "id": 196138, "time": "2017-01-18T11:00:39Z", "creator": "michaelomichael@gmail.com", "creation_time": "2017-01-18T11:00:39Z", "is_private": false, "text": "Created attachment 34638\nProposed patch to add SSL_CIPHER_SUITES property to 8.5"}, {"count": 3, "tags": [], "text": "Created attachment 34639\nProposed patch to add SSL_CIPHER_SUITES property to Trunk (9.0)", "attachment_id": 34639, "id": 196139, "creator": "michaelomichael@gmail.com", "time": "2017-01-18T11:01:01Z", "bug_id": 60597, "creation_time": "2017-01-18T11:01:01Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 60597, "text": "Is there any particular reason for this to be a system property?\n\nI would much prefer to have TLS protocols and cipher suites configurable via direct mutators (e.g. setCipherSuites(String[])).\n\nWhen I write APIs that need to make outgoing connections, I always allow the client to specify an SSLSocketFactory if they want to do that. In the WS case, we are using an SSLEngine which might be awkward. I'd have to look more at how the WS client is working and how it uses the SSLEngine to decide what makes most sense.\n\nMichael, as an end-user, what configuration capabilities would YOU prefer? System properties always seem like a hack that should really be corrected in the actual API.", "id": 196161, "time": "2017-01-18T20:33:33Z", "creator": "chris@christopherschultz.net", "creation_time": "2017-01-18T20:33:33Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "Hi Christopher,\n\nThanks for the feedback.  I'm just following the example set by other configuration entities in this area (e.g. the SSL_PROTOCOLS property). \n\nIn general I'd much prefer the direct mutators approach as well.  In this case, however, the intent is to provide additional configuration capabilities to the generic javax.websocket.* API classes that were missing from that generic API.  \n\nThe choice for a user would be either to use these properties or to abandon the javax.websocket.* classes and instead use Tomcat-specific implementations of them (e.g. org.apache.tomcat.websocket.WsWebSocketContainer).  The latter would make the user's code much less portable overall, so I think that using properties here and sticking to the javax interfaces is the better approach.\n\nOf course, the best thing would be if protocol/ciphers configurability were to be added to the official java.websocket.* API spec, but I have no idea when that's coming...\n\nMichael", "attachment_id": null, "id": 196168, "creator": "michaelomichael@gmail.com", "time": "2017-01-18T23:49:03Z", "bug_id": 60597, "creation_time": "2017-01-18T23:49:03Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 60597, "attachment_id": null, "text": "(In reply to Michael Orr from comment #5)\n> In general I'd much prefer the direct mutators approach as well.  In this\n> case, however, the intent is to provide additional configuration\n> capabilities to the generic javax.websocket.* API classes that were missing\n> from that generic API.  \n\nUnderstood. I think the system-property-based configuration is probably best, then. No need to build infrastructure only to remove it later when the public API improves.\n\n> Of course, the best thing would be if protocol/ciphers configurability were\n> to be added to the official java.websocket.* API spec, but I have no idea\n> when that's coming...\n\nAfter wrestling with several third-party APIs which didn't support various TLS configuration parameters, I've decided that the only sane way to accomplish it is to allow the caller to supply their own SSLSocketFactory. Otherwise, you end up re-inventing the wheel for everything: protocols, cipher suites, trust stores, key management, certificate revocation lists, hostname verifiers, certificate verifiers, etc. Apache HTTP Components (http-client) stepped on this landmine long ago and it took them several versions to climb out of the hole and remove all of the Apache-specific configuration in favor of the standard SSLSocketFactory. It didn't help that it took the Java API a while to standardize and expose that interface, too.\n\nThanks for your patches!", "id": 196208, "time": "2017-01-19T19:56:49Z", "creator": "chris@christopherschultz.net", "creation_time": "2017-01-19T19:56:49Z", "is_private": false}, {"count": 7, "tags": [], "creator": "michaelomichael@gmail.com", "text": "Yes, SSLSocketFactory would enable you to set all of these in one fell swoop (with the exception of the hostname verifier, which I think is applied after the socket factory has produced the initial socket, but I might be wrong there).\n\nDo you think we should abandon/deprecate the current mechanism in favour of this and, if so, shall I withdraw these patches?", "id": 196362, "time": "2017-01-24T12:52:01Z", "bug_id": 60597, "creation_time": "2017-01-24T12:52:01Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 60597, "attachment_id": null, "text": "I think an SSLEngine is required rather than a socket factory but apart from that I think that is the way to go. The code already started down that route with SSLContext but I think SSLEngine is the right way to do this.\n\nNote: I'd deprecate the other constants in 7.0 to 8.5 and remove them entirely in 9.0. The docs will need an appropriate update as well.", "id": 196492, "time": "2017-01-27T14:03:27Z", "creator": "markt@apache.org", "creation_time": "2017-01-27T14:03:27Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 60597, "text": "Ok, thanks for the feedback.  I'll work on a patch to pass in an SSLEngine instance and deprecate/remove the old constants.", "id": 196776, "time": "2017-02-06T18:11:00Z", "creator": "michaelomichael@gmail.com", "creation_time": "2017-02-06T18:11:00Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "michaelomichael@gmail.com", "text": "Created attachment 35578\nProposed patch to add SSL_ENGINE property to 7.0", "id": 202546, "time": "2017-12-02T22:27:01Z", "bug_id": 60597, "creation_time": "2017-12-02T22:27:01Z", "is_private": false, "attachment_id": 35578}, {"count": 11, "tags": [], "bug_id": 60597, "text": "Created attachment 35579\nProposed patch to add SSL_ENGINE property to 8.5", "id": 202547, "time": "2017-12-02T22:27:45Z", "creator": "michaelomichael@gmail.com", "creation_time": "2017-12-02T22:27:45Z", "is_private": false, "attachment_id": 35579}, {"count": 12, "tags": [], "text": "Created attachment 35580\nProposed patch to add SSL_ENGINE property to Trunk (9.0)", "attachment_id": 35580, "id": 202548, "creator": "michaelomichael@gmail.com", "time": "2017-12-02T22:28:12Z", "bug_id": 60597, "creation_time": "2017-12-02T22:28:12Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 60597, "attachment_id": null, "text": "I've added three new patches for the various versions.  You can now pass an SSL_ENGINE property in the user properties when calling WebSocketContainer.connectToServer().  \n\nI've marked the other properties (SSL_PROTOCOLS, SSL_TRUST*, and SSL_CONTEXT) as deprecated in all three versions; I assume it's too late to just remove them completely in trunk, now that Tomcat 9 is GA.  If my assumption is wrong, or if there are any other changes that should be made, please let me know.\n\nThanks.", "id": 202549, "time": "2017-12-02T22:35:52Z", "creator": "michaelomichael@gmail.com", "creation_time": "2017-12-02T22:35:52Z", "is_private": false}]