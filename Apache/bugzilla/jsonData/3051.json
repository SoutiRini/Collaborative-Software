[{"count": 0, "tags": [], "bug_id": 3051, "text": "Most logically, any webmaster wanting to add a MIME type in Tomcat will edit the \nconf/web.xml file and add lines like the following:\n\n<mime-mapping>\n  <extension>\n    jnlp\n  </extension>\n  <mime-type>\n    application/x-java-jnlp-file\n  </mime-type>\n</mime-mapping>\n\nThis does not work: when loaded into a browser like Netscape, its MIME type \nremains text/plain, whether or not Java Web Start is installed on the client \ncomputer. This bug has been referred to as bug #1961 regarding the JNLP type \nspecifically, but the problem goes quite further as shown below.\n\nI saw that a series of MIME types are defined as a Hashtable in the \norg.apache.tomcat.util.MimeMap class. Would modifying this class solve the \nproblem? To find it out, I did the following:\n\n(1) I downloaded the source package (called SRC) of Tomcat 3.2.3;\n(2) I added the following line:\n    defaultMap.put(\"jnlp\", \"application/x-java-jnlp-file\");\n    into the MimeMap.java static block where the defaultMap hashtable is \nfilled;\n(3) I also added the JNLP MIME type into the etc/web.xml file (see above);\n(4) I built that modified version (called BIN).\n\nIt works! Here are a few remarks regarding further tests I performed:\n\n(a) I rebuilt Tomcat as above, but I skipped step (3), leaving the etc/web.xml \nfile unmodified (i.e. not including the JNLP entry). I found out that this file \nis copied without modification into the BIN /conf directory in the build \nprocess. As a result the JNLP MIME type does not appear in the BIN conf/web.xml \nfile but, nevertheless, it is still recognized properly!\n\n(b) From steps (1) to (4) and remark (a) above, I deduce that, as mentioned in \nthe title of this bug report, the web.xml file is not taken into account to \ndetermine which MIME types should be handled by Tomcat.\n\n(c) Following the above tests and conclusion (b), I deduce that the only \nreference Tomcat uses at runtime regarding registered MIME types is the compiled \nMimeMap class that appears in the BIN lib/webserver.jar archive.\n\nWhich segment of code should be modified so that Tomcat uses the web.xml file to \noverride the default settings of class MimeMap?", "id": 4388, "time": "2001-08-08T12:37:40Z", "creator": "jfmorin@altavista.net", "creation_time": "2001-08-08T12:37:40Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 3051, "attachment_id": null, "id": 4492, "time": "2001-08-11T12:27:15Z", "creator": "cmanolache@yahoo.com", "creation_time": "2001-08-11T12:27:15Z", "is_private": false, "text": "Web.xml is no longer used, from various reasons. The only correct way \nto define mime types is via your app web.xml. This is the only way to make sure\nyour app will be portable across any container, without changes in the container \nsetup. It would be easy to write a module that adds more types to MimeMap, and\nallow settings in server.xml - but that would be wrong, as people will use it\nand end up with unportable apps. \n\nBringing back web.xml is out of question, it's far too confusing ( web.xml\nshould be used in applications, server.xml for tomcat config )"}]