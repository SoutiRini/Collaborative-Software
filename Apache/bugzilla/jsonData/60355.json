[{"count": 0, "tags": [], "text": "Created attachment 34430\nExcel workbook used by the test program\n\nSS Formula Parser is unable to parse valid Excel formula string.\n\nHere's the stack trace --\n\norg.apache.poi.ss.formula.FormulaParseException: Unused input [(\"HSACTIVE\",\"Year#Jan\",\"Measures#Sales\",\"Product#Cola\",\"Market#New York\",\"Scenario#Actual\")] after attempting to parse the formula [[1]!HsGetValue(\"HSACTIVE\",\"Year#Jan\",\"Measures#Sales\",\"Product#Cola\",\"Market#New York\",\"Scenario#Actual\")]\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:1653)\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:159)\n\tat org.apache.poi.xssf.usermodel.XSSFCell.setFormula(XSSFCell.java:553)\n\tat org.apache.poi.xssf.usermodel.XSSFCell.setCellFormula(XSSFCell.java:533)\n\tat HsGetValTest.main(HsGetValTest.java:28)\n\nHsGetVal is a valid XLA Add-In formula. Excel is able to read and parse without problems.\n\nHere's my standalone Java test sample\n\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.ss.usermodel.WorkbookFactory;\n\nimport com.fasterxml.jackson.databind.exc.InvalidFormatException;\n\npublic class HsGetValTest {\n    public static void main( String[] args ) {\n        \n    \tString fileName = \"HsGetVal.xlsx\";\n        \n        File workbookFile = new File( fileName ) ;\n        \n        try {\n            FileInputStream fis = new FileInputStream(workbookFile);\n            Workbook workbook = WorkbookFactory.create(fis);\n            \n            Sheet sheet = workbook.getSheetAt(workbook.getActiveSheetIndex());\n            Cell formulaCell = sheet.getRow(4).getCell(1);\n            String cellFormula = formulaCell.getCellFormula();\n            System.out.println(\"cell formula:\" + cellFormula);\n            formulaCell.setCellFormula(cellFormula);\n            \n        } catch( FileNotFoundException e ) {\n            e.printStackTrace();\n        } catch( InvalidFormatException e ) {\n            e.printStackTrace();\n        } catch( IOException e ) {\n            e.printStackTrace();\n        } catch( Exception e) {\n        \te.printStackTrace();\n        }\n    }\n}", "is_private": false, "bug_id": 60355, "id": 194884, "time": "2016-11-09T02:45:03Z", "creator": "kenneth_lau@yahoo.com", "creation_time": "2016-11-09T02:45:03Z", "attachment_id": 34430}, {"count": 1, "tags": [], "text": "(In reply to kenneth_lau from comment #0) \n> HsGetVal is a valid XLA Add-In formula. Excel is able to read and parse\n> without problems.\n\nPOI does not natively know how to evaluate HsGetValue because it is not an Excel core function or a function in the official Excel Analysis ToolPak [1].\n\nIf you need to evaluate this formula in POI, you can re-implement HsGetValue as a FreeRefFunction and register the function with a POI formula evaluator [2]. You may also find [3] and [4] helpful to learn about formula evaluation in POI. For examples of User Defined Functions in POI, see [5] and [6]\n\n[1] https://support.office.com/en-us/article/Load-the-Analysis-ToolPak-6a63e598-cd6d-42e3-9317-6b40ba1a66b4\n[2] https://poi.apache.org/spreadsheet/user-defined-functions.html\n[3] https://poi.apache.org/spreadsheet/eval-devguide.html\n[4] https://poi.apache.org/spreadsheet/formula.html\n[5] https://svn.apache.org/viewvc/poi/trunk/src/examples/src/org/apache/poi/ss/examples/formula/SettingExternalFunction.java?view=markup\n[6] https://svn.apache.org/viewvc/poi/trunk/src/examples/src/org/apache/poi/ss/examples/formula/UserDefinedFunctionExample.java?view=markup", "is_private": false, "bug_id": 60355, "id": 194885, "time": "2016-11-09T04:11:02Z", "creator": "onealj@apache.org", "creation_time": "2016-11-09T04:11:02Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 60355, "attachment_id": null, "text": "Thank you for looking into this bug!\n\nWe had extended FreeRefFunction and implemented our own UDF with evaluate() before we encountered this bug.\n\nThe issue we found is the same SS formula parser failure is blocking our UDF from being called.\n\nHere's the call stack we observed --\n\norg.apache.poi.ss.formula.FormulaParseException: Unused input [(\"HSACTIVE\",\"Year#Jan\",\"Measures#Sales\",\"Product#Cola\",\"Market#New York\",\"Scenario#Actual\")] after attempting to parse the formula [[1]!HsGetValue(\"HSACTIVE\",\"Year#Jan\",\"Measures#Sales\",\"Product#Cola\",\"Market#New York\",\"Scenario#Actual\")]\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:1653)\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:159)\n\tat org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook.getFormulaTokens(XSSFEvaluationWorkbook.java:53)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluateAny(WorkbookEvaluator.java:261)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluate(WorkbookEvaluator.java:205)\n\tat org.apache.poi.xssf.usermodel.BaseXSSFFormulaEvaluator.evaluateFormulaCellValue(BaseXSSFFormulaEvaluator.java:189)\n\tat org.apache.poi.xssf.usermodel.BaseXSSFFormulaEvaluator.evaluateFormulaCell(BaseXSSFFormulaEvaluator.java:117)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateAllFormulaCells(HSSFFormulaEvaluator.java:346)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateAllFormulaCells(HSSFFormulaEvaluator.java:337)\n\tat org.apache.poi.xssf.usermodel.XSSFFormulaEvaluator.evaluateAll(XSSFFormulaEvaluator.java:105)", "id": 194894, "time": "2016-11-09T22:09:43Z", "creator": "kenneth_lau@yahoo.com", "creation_time": "2016-11-09T22:09:43Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 60355, "is_private": false, "text": "(In reply to kenneth_lau from comment #2)\n> [[1]!HsGetValue(\"HSACTIVE\",\"Year#Jan\",\"Measures#Sales\",\"Product#Cola\",\n\nLooks like HsGetValue is defined in an external workbook, [1]. Did you also add this external workbook to your evaluator?\nhttps://poi.apache.org/spreadsheet/eval.html#External+%28Cross-Workbook%29+references", "id": 194895, "time": "2016-11-10T00:29:46Z", "creator": "onealj@apache.org", "creation_time": "2016-11-10T00:29:46Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "onealj@apache.org", "attachment_id": null, "is_private": false, "id": 194896, "time": "2016-11-10T00:54:57Z", "bug_id": 60355, "creation_time": "2016-11-10T00:54:57Z", "text": "Could you attach your Java FreeRefFunction implementation of HsGetValue (preferably as a Java file instead of an inline comment)?\n\nWe will also need to mock out C:\\Oracle\\SmartView\\bin\\HsTbar.xla or something to mock an external VBA function defined in a standalone XLA file in order to write a unit test for this.\n\nHsTbar appears to belong to Oracle Hyperion Smart View for Office[1], but is behind a  OTN License Agreement and account registration wall, so it cannot be committed to POI svn.\n\n[1] http://www.oracle.com/technetwork/middleware/epm/downloads/smart-view-1112x-2412371.html"}, {"count": 5, "attachment_id": 34432, "bug_id": 60355, "is_private": false, "id": 194897, "time": "2016-11-10T02:50:08Z", "creator": "kenneth_lau@yahoo.com", "creation_time": "2016-11-10T02:50:08Z", "tags": [], "text": "Created attachment 34432\nHsGetVal Test Case\n\nHsGetValueTest.java - main test program\nHsGetValue.java     - standalone java replacement of HsGetValue evaluation\nHsGetValue.xlsx     - sample workbook"}, {"count": 6, "tags": [], "creator": "kenneth_lau@yahoo.com", "attachment_id": null, "id": 194898, "time": "2016-11-10T03:11:08Z", "bug_id": 60355, "creation_time": "2016-11-10T03:11:08Z", "is_private": false, "text": "Thank you for your feedback!\n\nI've uploaded a standalone test case zip file to illustrate the parsing error.\n\nWe would like to replace evaluation of HsGetValue() with Java FreeRefFunction implementation of HsGetValue. For debugging purposes, I've hard coded functional values for now.\n\nWe would like to remove run-time dependency on C:\\Oracle\\SmartView\\bin\\HsTbar.xla since we are doing the HsGetvalue() evaluation ourselves in Java.\n\nI have setIgnoreMissingWorkbooks(true) to tell the Formula Evaluator to skip looking for Oracle HsTbar binaries.\n\nHere's the SS Formula parse exception stack -- \n\ncell_4_1 formula:[1]!HsGetValue(\"HSACTIVE\",\"Year#Jan\",\"Measures#Sales\",\"Product#Cola\",\"Market#New York\",\"Scenario#Actual\")\ncell_4_2 formula:[1]!HsGetValue(\"HSACTIVE\",\"Year#Jan\",\"Measures#Sales\",\"Product#Cola\",\"Market#Utah\",\"Scenario#Actual\")\n\norg.apache.poi.ss.formula.FormulaParseException: Unused input [(\"HSACTIVE\",\"Year#Jan\",\"Measures#Sales\",\"Product#Cola\",\"Market#New York\",\"Scenario#Actual\")] after attempting to parse the formula [[1]!HsGetValue(\"HSACTIVE\",\"Year#Jan\",\"Measures#Sales\",\"Product#Cola\",\"Market#New York\",\"Scenario#Actual\")]\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:1653)\n\tat org.apache.poi.ss.formula.FormulaParser.parse(FormulaParser.java:159)\n\tat org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook.getFormulaTokens(XSSFEvaluationWorkbook.java:53)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluateAny(WorkbookEvaluator.java:261)\n\tat org.apache.poi.ss.formula.WorkbookEvaluator.evaluate(WorkbookEvaluator.java:205)\n\tat org.apache.poi.xssf.usermodel.BaseXSSFFormulaEvaluator.evaluateFormulaCellValue(BaseXSSFFormulaEvaluator.java:189)\n\tat org.apache.poi.xssf.usermodel.BaseXSSFFormulaEvaluator.evaluateFormulaCell(BaseXSSFFormulaEvaluator.java:117)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateAllFormulaCells(HSSFFormulaEvaluator.java:346)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateAllFormulaCells(HSSFFormulaEvaluator.java:337)\n\tat org.apache.poi.xssf.usermodel.XSSFFormulaEvaluator.evaluateAll(XSSFFormulaEvaluator.java:105)\n\tat HsGetValTest.main(HsGetValTest.java:47)"}]