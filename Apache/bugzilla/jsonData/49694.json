[{"count": 0, "tags": [], "text": "The method sheet.autoSizeColumn for HSSF does not respect formats for dates. It rather tries to format the date as a numeric, fails and falls back to a very simple to-string-transformation:\n\ntry {\n  NumberFormat fmt;\n  if (\"General\".equals(format))\n    sval = \"\" + value;\n  else\n  {\n    // --> fails, because the format is no Decimal Format\n    fmt = new DecimalFormat(format);\n    sval = fmt.format(value);\n  }\n} catch (Exception e) {\n  sval = \"\" + value;\n}\n\nHence, the width for date cells is not calculated corretly. \n\nSample Code ist here:\n//-----------------------------------\nWorkbook workBook = new HSSFWorkbook();\nSheet sheet = workBook.createSheet(\"First Sheet\");\n\nRow row = sheet.createRow(0);\nCell cell = row.createCell(0);\ncell.setCellValue(new GregorianCalendar(2010, 7, 3));\nDataFormat dataFormat = workBook.getCreationHelper().createDataFormat();\nCellStyle cellStyle = workBook.createCellStyle();\ncellStyle.setDataFormat(dataFormat.getFormat(\"dd.mm.yyyy\"));\ncell.setCellStyle(cellStyle);\n\nrow = sheet.createRow(1);\ncell = row.createCell(0);\ncell.setCellValue(\"small\");\n\nsheet.autoSizeColumn(0);\n\nworkBook.write(outputStream);\n//-----------------------------------", "attachment_id": null, "bug_id": 49694, "id": 138849, "time": "2010-08-03T12:29:55Z", "creator": "cmm@stl-software.de", "creation_time": "2010-08-03T12:29:55Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 49694, "attachment_id": null, "is_private": false, "id": 138852, "time": "2010-08-03T13:13:07Z", "creator": "apache@gagravarr.org", "creation_time": "2010-08-03T13:13:07Z", "text": "HSSFDataFormatter now looks to be up to the job of correctly formatting the cells for an excel-like display\n\nI've updated HSSFSheet to use this, in r981969."}]