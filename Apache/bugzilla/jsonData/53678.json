[{"count": 0, "text": "Created attachment 29185\nExcel file passed in argument\n\nWhen cloning a sheet with checkboxes in it (control form type), the resulting file is corrupted.\n\nStep to reproduce : use this with the file attached\n    public static void main(String[] args) throws FileNotFoundException, IOException {\n        Workbook wb = new XSSFWorkbook(new FileInputStream(args[0]));\n        wb.cloneSheet(0);\n        FileOutputStream fileOut = new FileOutputStream(args[0].replace(\".xlsx\", \"-edited.xlsx\"));\n        wb.write(fileOut);\n        fileOut.flush();\n        fileOut.close();\n    }\n\nresult : the second sheet is corrupted and do not have the checkbox", "creator": "benjamin.ruhlmann@gmail.com", "is_private": false, "id": 161166, "time": "2012-08-08T09:45:37Z", "bug_id": 53678, "creation_time": "2012-08-08T09:45:37Z", "tags": [], "attachment_id": 29185}, {"count": 1, "tags": [], "bug_id": 53678, "attachment_id": 30027, "id": 165721, "time": "2013-03-08T15:09:30Z", "creator": "tcole6@gmail.com", "creation_time": "2013-03-08T15:09:30Z", "is_private": false, "text": "Created attachment 30027\nThe original file with Form Control\n\nThis is the original file. The first sheet has conditional formatting, some VB code, a macro and a Form Control Button."}, {"attachment_id": 30028, "tags": [], "bug_id": 53678, "is_private": false, "count": 2, "id": 165722, "time": "2013-03-08T15:10:08Z", "creator": "tcole6@gmail.com", "creation_time": "2013-03-08T15:10:08Z", "text": "Created attachment 30028\nThe Cloned Document\n\nThis is the newly created file with the first sheet cloned."}, {"count": 3, "tags": [], "bug_id": 53678, "attachment_id": null, "is_private": false, "id": 165723, "time": "2013-03-08T15:15:07Z", "creator": "tcole6@gmail.com", "creation_time": "2013-03-08T15:15:07Z", "text": "I believe this condition exists with any Form Control. I have attached a workbook where the first sheet has a form control button on it. If you clone that sheet, the generated sheet has errors in it. If you remove the form control, the sheet clones just fine (even with conditional formatting).\n\nI used the following program to clone the original:\n\npublic class ReadWriteTest {\n\n\tpublic ReadWriteTest(String input, String output) {\n\t\ttry {\n\t\t\tFile inputFile = new File(input);\n\t\t\tif (inputFile.exists()) {\n\t\t\t\tWorkbook excel = new XSSFWorkbook(new FileInputStream(inputFile));\n\t\t\t\tSheet newSheet = excel.cloneSheet(0);\n\t\t\t\texcel.setSheetName(excel.getSheetIndex(newSheet), \"Clone\");\n\t\t\t\tFile outputFile = new File(output);\n\t\t\t\tboolean create = ! outputFile.exists();\n\t\t\t\tif (! create) {\n\t\t\t\t\tcreate = (JOptionPane.showConfirmDialog(null, \"File exists, do you want to overwrite?\") == JOptionPane.OK_OPTION);\n\t\t\t\t}\n\t\t\t\tif (create) {\n\t\t\t\t\texcel.write(new FileOutputStream(outputFile));\n\t\t\t\t}\n\t\t\t\tSystem.exit(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(\"Input file \" + input + \" not found.\");\n\t\t\t\tSystem.exit(1);\n\t\t\t}\n\t\t}\n\t\tcatch(Exception ex) {\n\t\t\tex.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tif (args.length == 2) {\n\t\t\tnew ReadWriteTest(args[0], args[1]);\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"USAGE: ReadWriteTest <input_file_name> <output_file_name>\");\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\n}"}]