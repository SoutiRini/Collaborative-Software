[{"count": 0, "tags": [], "creator": "jonas.anden@aptilo.com", "attachment_id": null, "text": "I found a bug causing an OutOfMemoryError when attempting to log an exception\nthat in StandardWrapperValve.\n\n<code>\n\n    /**\n     * Log a message on the Logger associated with our Container (if any)\n     *\n     * @param message Message to be logged\n     * @param throwable Associated exception\n     */\n    private void log(String message, Throwable throwable) {\n\n        Logger logger = null;\n        if (container != null)\n            logger = container.getLogger();\n        if (logger != null)\n            logger.log(\"StandardWrapperValve[\" + container.getName() + \"]: \"\n                       + message, throwable);\n        else {\n            String containerName = null;\n            if (container != null)\n                containerName = container.getName();\n            log( \"StandardWrapperValve[\" + containerName\n                       + \"]: \" + message, throwable);\n        }\n\n    }\n</code>\n\nIn the above code, if container.getLogger() returns null (meaning no logger is\nconnected to this valve), the result will be recursive calling until the VM\nthrows OutOfMemoryError.\n\nSuggested fix (as implemented in the non-exception variant of log and other\nclasses in Tomcat):\n\n<code>\n    /**\n     * Log a message on the Logger associated with our Container (if any)\n     *\n     * @param message Message to be logged\n     * @param throwable Associated exception\n     */\n    private void log(String message, Throwable throwable) {\n\n        Logger logger = null;\n        if (container != null)\n            logger = container.getLogger();\n        if (logger != null)\n            logger.log(\"StandardWrapperValve[\" + container.getName() + \"]: \"\n                       + message, throwable);\n        else {\n            String containerName = null;\n            if (container != null)\n                containerName = container.getName();\n-            log( \"StandardWrapperValve[\" + containerName\n-                       + \"]: \" + message, throwable);\n+            System.out.println( \"StandardWrapperValve[\" + containerName\n+                       + \"]: \" + message );\n+            throwable.printStackTrace(System.out);\n        }\n    }\n</code>", "id": 36068, "time": "2003-04-25T09:39:13Z", "bug_id": 19312, "creation_time": "2003-04-25T09:39:13Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 19312, "text": "*** Bug 21834 has been marked as a duplicate of this bug. ***", "id": 44347, "time": "2003-09-19T14:20:39Z", "creator": "vicentesalvador@netscape.net", "creation_time": "2003-09-19T14:20:39Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 19312, "text": "okey dokey smokey, this has been taken care of", "id": 44967, "time": "2003-10-01T22:21:50Z", "creator": "filip@filip.net", "creation_time": "2003-10-01T22:21:50Z", "is_private": false, "attachment_id": null}]