[{"count": 0, "tags": [], "text": "I've notived that when invoking sethandler to do things like enable modperl in a\n<directory> container, DirectoryIndex no longer works.\n\nI ran into this problem when a upgrading from 1.3 to 2.0 using the fedora core1 \napache 2.0 rpms, this used to work fine with 1.3\n\nIf I replace the sethandler with a addhandler and a file extention then \ndirectoryindex starts working again. However this is not a useful fix for me as \nmy modperl directory contains scripts which have no file extentions for url \ntidyness.", "attachment_id": null, "bug_id": 25435, "id": 48893, "time": "2003-12-11T11:21:53Z", "creator": "jkeller@650.co.nz", "creation_time": "2003-12-11T11:21:53Z", "is_private": false}, {"count": 1, "tags": [], "creator": "slive@apache.org", "text": "A specific configuration example always helps.", "id": 48902, "time": "2003-12-11T14:20:25Z", "bug_id": 25435, "creation_time": "2003-12-11T14:20:25Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 25435, "is_private": false, "count": 2, "id": 48936, "time": "2003-12-11T22:35:49Z", "creator": "jkeller@650.co.nz", "creation_time": "2003-12-11T22:35:49Z", "text": "Sure, sorry\n\nAlias /admin /var/www/perl\n<Directory /var/www/perl>\n    SetHandler perl-script\n    DirectoryIndex index.pl panel\n    PerlHandler ModPerl::Registry\n    Options Indexes +ExecCGI FollowSymLinks\n</Directory>\n\nwhen /admin is accessed i get a 404 error, with this in the error log\n[Thu Dec 11 23:53:58 2003] [error] [client 203.118.169.214] Attempt to serve \ndirectory: /var/www/perl/\n\nif i access /admin/panel it works fine\n\nFor the sake of testing i copied panel to a file called index.pl\nI replaced the Sethandler command with the 'Addhandler perl-script .pl' command\nDirectoryIndex started working again and /admin works on its own. however \nmy /admin directory is full of scripts without file extentions, these files \nneed to be run without extentions.\n\nthank you"}, {"count": 3, "tags": [], "text": "I'd also like to add that this exact configuration worked fine in apache 1.3.\n\nthanks\n", "attachment_id": null, "id": 48951, "creator": "jkeller@650.co.nz", "time": "2003-12-12T00:29:03Z", "bug_id": 25435, "creation_time": "2003-12-12T00:29:03Z", "is_private": false}, {"count": 4, "tags": [], "text": "I've got the same problem when using SetHandler for my PHP files. I've checked\nthe server error log files and it seems that the new apache tries to execute the\ndirectory itself with mod_php, which obviously files, so I get an error. I've\nworked around this by the following config, but the bug should be fixed.\n\n    <Directory \"/var/www/localhost/htdocs/forum\">\n        DirectoryIndex list\n        <Files \"?*\">\n            SetHandler application/x-httpd-php\n        </Files>\n    </Directory>\n\nThis works because Files \"?*\" doesn't match the directory itself.", "attachment_id": null, "id": 77101, "creator": "heilong@bluebottle.com", "time": "2005-07-08T12:41:42Z", "bug_id": 25435, "creation_time": "2005-07-08T12:41:42Z", "is_private": false}, {"count": 5, "tags": [], "creator": "chip@force-elite.com", "text": "I can easily reproduce this with CGIs too:\n\nDirectoryIndex index\n<Directory /var/foo>\n  SetHandler cgi-script\n</Directory>\n\nWhere /var/foo/index is a cgi script, we get the 'attempt to invoke directory as\nscript'.\n\nI suspect that mod_dir is never attempting to find the index, and lets mod_cgi\nhandle it, which means it is never being mapped from the / to /index internally...", "id": 78664, "time": "2005-08-18T21:57:13Z", "bug_id": 25435, "creation_time": "2005-08-18T21:57:13Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "Fixed in trunk/r25435.", "attachment_id": null, "bug_id": 25435, "id": 78666, "time": "2005-08-18T22:11:08Z", "creator": "chip@force-elite.com", "creation_time": "2005-08-18T22:11:08Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 25435, "attachment_id": null, "text": "\n  FYI - although it's noted that this is 'fixed in trunk' - that patch was\n  backed out.\n\n  Here's the problem; httpd/unix-directory (DIR_MAGIC_TYPE) is the handler \n  name for mod_dir/mod_autoindex.  When you told the server to substitute using\n  SetHandler - you told it the whole shot, dir files and all.\n\n  You mentioned mod_perl however; if you are not allowed to override the\n  handler, you can't replace the mod_dir/mod_autoindex handling with a module\n  of your own design.  The proposed 'fix' would have ignored the handler name\n  for directory uri's, and that's an inappropriate fix.\n\n  For 2.2, especially, what about a SetFileHandler directive to apply\n  on to any 'file' type, and a SetDirHandler directive to apply only to any\n  'directory' type?\n\n  There may also be some issues where we are toggling r->handler, that aren't\n  in an appropriate location.  I'd guess we should be setting up the r->handler\n  in the MapToStorage hook, right after the TranslateName hook is done.\n\n  Anyways, allowing SetHandler to change the handler for directory resources\n  is absolutely by design; otherwise mod_jk, mod_aspdotnet and other back end\n  engines would not be allowed to perform their own directory resource handling.", "id": 78822, "time": "2005-08-22T17:55:19Z", "creator": "wrowe@apache.org", "creation_time": "2005-08-22T17:55:19Z", "is_private": false}, {"count": 8, "attachment_id": null, "bug_id": 25435, "is_private": false, "id": 78831, "time": "2005-08-22T18:34:42Z", "creator": "nd@perlig.de", "creation_time": "2005-08-22T18:34:42Z", "tags": [], "text": "+1 to type specific handlers. I would add an option to Sethandler though (vs.\nadding new directives), like\n\n# for all:\nSethandler foo\n\n# for files:\nSetHandler files foo\n\n# for dirs\nSetHandler dirs foo"}, {"count": 9, "tags": [], "text": "The workaround is\n\n  <Files \"*\">\n      SetHandler my-handler\n  </Files>\n\n(Files won't be applied to a directory), so the bug is non-critical.\n\nThe reason nd's suggestion doesn't quite work, is that SetHandler will\nalways work, it's a Location handler that doesn't depend on any file system\nunderneath it.\n\nThe SetFileHandler/SetDirHandler would be handled by the apache filesystem\ncore, and not the apache core uri handler, so an overloaded directive doesn't\nwork in this case.\n\nThe theory-to-be is that we should someday be able to unplug the filesystem \ncore, and still have a useful apache which can serve other forms of\nnon-filesystem based content, such as a pure jk, pure proxy, or pure php server.\n\n\n", "attachment_id": null, "bug_id": 25435, "id": 78835, "time": "2005-08-22T18:49:00Z", "creator": "wrowe@apache.org", "creation_time": "2005-08-22T18:49:00Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 25435, "text": "*** Bug 37290 has been marked as a duplicate of this bug. ***", "id": 82058, "time": "2005-11-02T16:46:20Z", "creator": "chip@force-elite.com", "creation_time": "2005-11-02T16:46:20Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "text": "For what it's worth, http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=451714 seems to be a duplicate of this bug.", "attachment_id": null, "id": 123713, "creator": "andreas.krueger@famsik.de", "time": "2009-01-02T12:54:42Z", "bug_id": 25435, "creation_time": "2009-01-02T12:54:42Z", "is_private": false}]