[{"count": 0, "tags": [], "creator": "bht237@gmail.com", "text": "The leak can be observed with the use of the latest version of an IBM jdbc driver.\n\nIBM support have worked on the issue for us. Their resolution is to deregister the JDBC driver with a ServletContextListener.\n\nAdditionally they recommend to include the driver jar db2jcc4.jar in the web archive WEB-INF/lib directory.                                                         \n                                                                        \nUnfortunately while doing this as recommended, the exception below still appears once per second in the log file:\n\njava.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [DB2JccConfiguration.properties]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.\n        at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1327)\n        at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:1023)\n        at com.ibm.db2.jcc.am.ud.run(Unknown Source)\n        at java.security.AccessController.doPrivileged(AccessController.java:285)\n        at com.ibm.db2.jcc.am.GlobalProperties.a(Unknown Source)\n        at com.ibm.db2.jcc.am.GlobalProperties.d(Unknown Source)\n        at com.ibm.db2.jcc.am.mq.run(Unknown Source)\n        at java.util.TimerThread.mainLoop(Timer.java:567)\n        at java.util.TimerThread.run(Timer.java:517)\n\nEnvironment information is as follows:\n\nTomcat version: 8.0\n\nOperating system: AIX\n\njava -version\njava version \"1.7.0\"\nJava(TM) SE Runtime Environment (build pap6470sr7-20140410_01(SR7))\nIBM J9 VM (build 2.6, JRE 1.7.0 AIX ppc64-64 Compressed References 20140409_195732 (JIT enabled, AOT enabled)\nJ9VM - R26_Java726_SR7_20140409_1418_B195732\nJIT  - r11.b06_20140409_61252\nGC   - R26_Java726_SR7_20140409_1418_B195732_CMPRSS\nJ9CL - 20140409_195732)\nJCL - 20140409_01 based on Oracle 7u55-b13\n\n\nJDBC driver downloaded from:\nhttp://www-01.ibm.com/support/docview.wss?uid=swg21363866\nDB2 JDBC and SQLJ driver 10.5.0\nv10.5fp5_jdbc_sqlj.tar.gz\n\nConfiguration is as follows:\n\nA data source is defined in the Tomcat application context:\n\n$CATALINA_BASE/conf/Catalina/localhost/db2test.xml as follows:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context>\n    <Resource name=\"jdbc/db2test\"\n          auth=\"Container\"\n          type=\"javax.sql.DataSource\"\n          username=\"username\"\n          password=\"password\"\n          driverClassName=\"com.ibm.db2.jcc.DB2Driver\"\n          url=\"jdbc:db2://server:port/databaseName:currentSchema=schemaName;\"\n          maxActive=\"8\"\n    />\n</Context>\n\nweb.xml as follows:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n    <display-name>Leaky Application</display-name>\n    <session-config>\n        <session-timeout>\n            30\n        </session-timeout>\n    </session-config>\n    <listener>\n        <listener-class>\n            connect.listener.DatabaseGetConnectionContextListener\n        </listener-class>\n    </listener>\n    <listener>\n        <listener-class>\n            connect.listener.DeregisterDriverServletContextListener\n        </listener-class>\n    </listener>\n</web-app>\n\nwith listeners as follows:\n\npublic class DatabaseGetConnectionContextListener implements ServletContextListener {\n\n    private static final Logger LOGGER = LoggerFactory.getLogger(DatabaseGetConnectionContextListener.class);\n\n    public void contextInitialized(ServletContextEvent sce) {\n        LOGGER.info(\"contextInitialized trying to get connection...\");\n        try {\n            Context initCtx = new InitialContext();\n            Context envCtx = (Context) initCtx.lookup(\"java:comp/env\");\n            DataSource ds = (DataSource) envCtx.lookup(\"jdbc/db2test\");\n            Connection con = null;\n            try {\n                con = ds.getConnection();\n                LOGGER.info(\"Opened connection: \" + con);\n            } catch (SQLException ex) {\n                LOGGER.error(\"Cannot open connection\", ex);\n            } finally {\n                if (con != null) {\n                    try {\n                        con.close();\n                        LOGGER.info(\"Closed connection: \" + con);\n                    } catch (SQLException ex) {\n                        throw new RuntimeException(ex);\n                    }\n                }\n            }\n        } catch (NamingException ex) {\n            throw new RuntimeException(ex);\n        }\n    }\n\n    public void contextDestroyed(ServletContextEvent sce) {}\n\n}\n\n\npublic class DeregisterDriverServletContextListener implements ServletContextListener {\n\n    private static final Logger LOGGER = LoggerFactory.getLogger(DeregisterDriverServletContextListener.class);\n\n    public void contextInitialized(ServletContextEvent sce) {}\n\n    @Override\n    public void contextDestroyed(ServletContextEvent sce) {\n\n        LOGGER.info(\"contextDestroyed() executing ...\");\n        final ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n        // Loop through all drivers                                           \n        final Enumeration<Driver> drivers = DriverManager.getDrivers();\n        while (drivers.hasMoreElements()) {\n            final Driver driver = drivers.nextElement();\n            if (driver.getClass().getClassLoader() == classLoader) {\n                // This driver was registered by the webapp's ClassLoader, so       \n                // deregister it:                                                   \n                try {\n                    LOGGER.info(\"Deregistering JDBC driver { \" + driver + \" }\");\n                    DriverManager.deregisterDriver(driver);\n                } catch (SQLException ex) {\n                    LOGGER.error(\"Error deregistering JDBC driver { \" + driver + \" }\", ex);\n                }\n            } else {\n                // driver was not registered by the webapp's ClassLoader and may    \n                // be in use elsewhere                                              \n                LOGGER.error(\"Not deregistering JDBC driver {} as it does not belong to this webapp's ClassLoader { \" + driver + \" }\");\n            }\n        }\n    }\n\ndb2jcc4.jar is in the WEB-INF/lib directory.\n\nWhen the war file is re-deployed e.g. vie UNIX touch command, the following log entries are printed in catalina.out:\nINFO: Reloading Context with name [/db2test] has started\nNov 04, 2015 3:21:57 PM org.apache.catalina.loader.WebappClassLoaderBase clearReferencesThreads\nWARNING: The web application [db2test] appears to have started a thread named [Timer-0] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\n java.lang.Object.wait(Native Method)\n java.lang.Object.wait(Object.java:196)\n java.util.TimerThread.mainLoop(Timer.java:564)\n java.util.TimerThread.run(Timer.java:517)\nNov 04, 2015 3:21:59 PM org.apache.catalina.core.StandardContext reload\nINFO: Reloading Context with name [/db2test] is completed\nNov 04, 2015 3:22:44 PM org.apache.catalina.loader.WebappClassLoaderBase checkStateForResourceLoading\nINFO: Illegal access: this web application instance has been stopped already. Could not load [DB2JccConfiguration.properties]. The following stack trace is thrown for debugging purposes as well as to attempt\n to terminate the thread which caused the illegal access.\njava.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [DB2JccConfiguration.properties]. The following stack trace is thrown for debugging pur\nposes as well as to attempt to terminate the thread which caused the illegal access.\n        at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1327)\n        at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:1023)\n        at com.ibm.db2.jcc.am.ud.run(Unknown Source)\n        at java.security.AccessController.doPrivileged(AccessController.java:285)\n        at com.ibm.db2.jcc.am.GlobalProperties.a(Unknown Source)\n        at com.ibm.db2.jcc.am.GlobalProperties.d(Unknown Source)\n        at com.ibm.db2.jcc.am.mq.run(Unknown Source)\n        at java.util.TimerThread.mainLoop(Timer.java:567)\n        at java.util.TimerThread.run(Timer.java:517)\n\njava.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [DB2JccConfiguration.properties]. The following stack trace is thrown for debugging pur\nposes as well as to attempt to terminate the thread which caused the illegal access.\n        at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1327)\n        at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:1023)\n        at com.ibm.db2.jcc.am.ud.run(Unknown Source)\n        at java.security.AccessController.doPrivileged(AccessController.java:285)\n        at com.ibm.db2.jcc.am.GlobalProperties.a(Unknown Source)\n        at com.ibm.db2.jcc.am.GlobalProperties.d(Unknown Source)\n        at com.ibm.db2.jcc.am.mq.run(Unknown Source)\n        at java.util.TimerThread.mainLoop(Timer.java:567)\n        at java.util.TimerThread.run(Timer.java:517)\nNov 04, 2015 3:23:44 PM org.apache.catalina.loader.WebappClassLoaderBase checkStateForResourceLoading\nINFO: Illegal access: this web application instance has been stopped already. Could not load [DB2JccConfiguration.properties]. The following stack trace is thrown for debugging purposes as well as to attempt\n to terminate the thread which caused the illegal access.\njava.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [DB2JccConfiguration.properties]. The following stack trace is thrown for debugging pur\nposes as well as to attempt to terminate the thread which caused the illegal access.\n        at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1327)\n        at org.apache.catalina.loader.WebappClassLoaderBase.getResource(WebappClassLoaderBase.java:1023)\n        at com.ibm.db2.jcc.am.ud.run(Unknown Source)\n        at java.security.AccessController.doPrivileged(AccessController.java:285)\n        at com.ibm.db2.jcc.am.GlobalProperties.a(Unknown Source)\n        at com.ibm.db2.jcc.am.GlobalProperties.d(Unknown Source)\n        at com.ibm.db2.jcc.am.mq.run(Unknown Source)\n        at java.util.TimerThread.mainLoop(Timer.java:567)\n        at java.util.TimerThread.run(Timer.java:517)\n....\nMore of the same repeats every minute.\n\nWe have tried an alternate configuration method as follows:\n\n/conf/context.xml file as follows:\n<Context>\n   ...\n\t<Resource auth=\"Container\"\n\tdriverClassName=\"com.ibm.db2.jcc.DB2Driver\"\n\tname=\"jdbc/...\"\n\tpassword=\"...\"\n\tusername=\"...\"\n\ttype=\"javax.sql.DataSource\"\n\turl=\"jdbc:db2://server:.../.../>\n ...\n</Context>\n\nand a resource link via db2test.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<Context>\n\n    <ResourceLink name=\"jdbc/db2test\" global=\"jdbc/db2test\" type=\"javax.sql.DataSource\"/>\n\n</Context>\n\n\nThe results are the same.\n\nAgain, alternatively, the resource can be defined in server.xml, and a <ResourceLink, again with no changes in web.xml\nWe have NOT tried this as we do not prefer this solution.\n\nWe used documentation at\nhttps://tomcat.apache.org/tomcat-8.0-doc/jndi-resources-howto.html\nhttps://www-01.ibm.com/support/knowledgecenter/SSZH4A_5.0.5/com.ibm.worklight.help.doc/admin/t_configuring_apache_tomcat_for_db2_manually.html\nhttps://numberformat.wordpress.com/2009/09/07/db2-datasource-configuration-in-tomcat-6/\n\nIn addition to what we see, the proposed workaround (which I cannot get to work), from my current perspective, has 2 issues:\n\na) No other application can use the same data source because it is local\nb) Including a specific driver file in the application is not consistent with the concept of a data source which from the application perspective, should not be driver specific.\n\nThe attached file contains as a fully functional test case a minimal maven based web project where a ServletContextListener connects to the data source on start up and deregisters the driver on un-deployment.\n\nConfiguration files are also included, please refer to configuration directories.", "id": 186256, "time": "2015-11-04T22:51:33Z", "bug_id": 58586, "creation_time": "2015-11-04T22:51:33Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "bht237@gmail.com", "attachment_id": 33259, "text": "Created attachment 33259\nTest case in zip archive\n\nI had to remove the driver file db2jcc4.jar from the WEB-INF/lib directory because of bugzilla upload file size restriction", "id": 186260, "time": "2015-11-05T01:27:53Z", "bug_id": 58586, "creation_time": "2015-11-05T01:27:53Z", "is_private": false}, {"count": 2, "tags": [], "text": "Memory leaks in JDBC drivers are not bugs in Tomcat. Please use the users mailing list if you require further assistance.\n\nThis may provide someuseful background:\nhttp://people.apache.org/~markt/presentations/2010-11-04-Memory-Leaks-60mins.pdf", "attachment_id": null, "bug_id": 58586, "id": 186265, "time": "2015-11-05T08:44:28Z", "creator": "markt@apache.org", "creation_time": "2015-11-05T08:44:28Z", "is_private": false}]