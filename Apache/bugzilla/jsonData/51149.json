[{"count": 0, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "attachment_id": 26958, "id": 146105, "time": "2011-05-04T10:16:18Z", "bug_id": 51149, "creation_time": "2011-05-04T10:16:18Z", "is_private": false, "text": "Created attachment 26958\nExample image, intentionally blurred\n\nThis issue is discussed at the thread with the same name:\n\nhttp://mail-archives.apache.org/mod_mbox/xmlgraphics-fop-dev/201103.mbox/%3C4D7A0D5B.4010500@gmail.com%3E\n\n\nSummary:\n\nPNG image sized 2035x1875 pixels, with color profile \"sRGB IEC61966-2.1\", takes 2s to process at Sun/Oracle JDK 1.6.0_17 and 40s at 1.6.0_18 or later.\n\nPlease read thread for details."}, {"count": 1, "tags": [], "bug_id": 51149, "is_private": false, "text": "Hello, \nI have a similar bug (fop 1.0), but it doesn't appear in the version 1.3 of xmlgraphics (fop 0.95).\nThe problem comes from color model associated with the image.\n* if is_sRGB_stdStale = true then getRBG method is very fast\n* if is_sRGB_stdStale = false then getRBG  is slow because the treatment is delegated to ICC_ColorSpace.toRGB\n\nThe color model is correct, but it is modified by the class org.apache.xmlgraphics.image.loader.impl.imageio.ImageLoaderImageIO\nby the following code (v 1.4): \n            if (providerIgnoresICC && cm instanceof ComponentColorModel) {\n                // Apply ICC Profile to Image by creating a new image with a new\n                // color model.\n                ICC_Profile iccProf = tryToExctractICCProfile(iiometa);\n                if (iccProf != null) {\n                    ColorModel cm2 = new ComponentColorModel(\n                            new ICC_ColorSpace(iccProf), cm.hasAlpha(), cm\n                                    .isAlphaPremultiplied(), cm\n                                    .getTransparency(), cm.getTransferType());\n                    WritableRaster wr = Raster.createWritableRaster(imageData\n                            .getSampleModel(), null);\n                    imageData.copyData(wr);\n                    BufferedImage bi = new BufferedImage(cm2, wr, cm2\n                            .isAlphaPremultiplied(), null);\n                    imageData = bi;\n                    cm = cm2;\n\nI removed this code and it works fine now, but it's dirty.\n\nUntil a fix, best regards.", "id": 147140, "time": "2011-06-15T13:31:15Z", "creator": "patches@portaildulibre.fr", "creation_time": "2011-06-15T13:31:15Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 51149, "is_private": false, "text": "We believe this issue was caused by the following change to the JDK:\n\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6549882", "id": 153530, "time": "2012-02-07T08:25:19Z", "creator": "bowditch_chris@hotmail.com", "creation_time": "2012-02-07T08:25:19Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "not an FOP bug; upgrade your Java platform to include fix", "attachment_id": null, "id": 157196, "creator": "gadams@apache.org", "time": "2012-04-04T22:47:44Z", "bug_id": 51149, "creation_time": "2012-04-04T22:47:44Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 51149, "attachment_id": null, "is_private": false, "id": 157781, "time": "2012-04-10T16:00:02Z", "creator": "bowditch_chris@hotmail.com", "creation_time": "2012-04-10T16:00:02Z", "text": "Hi Glenn,\n\nSorry but I don't agree with closing this bug just yet. Whilst its true that Java changed the implementation and that's what causes the slowdown, FOP still elects to use that particular JDK library. Luis has been working on a raw PNG Image Loader that addresses a couple of performance issues. The idea of the new loader is that it doesn't use the JDK library. \n\nI would like to leave it open and when Luis returns from vacation in a couple of days he can test out his new raw PNG handler to see if it alleviates this particular performance issue.\n\nThanks,\n\nChris"}, {"count": 5, "tags": [], "bug_id": 51149, "attachment_id": null, "text": "(In reply to comment #4)\n> Sorry but I don't agree with closing this bug just yet. Whilst its true that\n> Java changed the implementation and that's what causes the slowdown, FOP still\n> elects to use that particular JDK library. Luis has been working on a raw PNG\n> Image Loader that addresses a couple of performance issues. The idea of the new\n> loader is that it doesn't use the JDK library. \n> \n> I would like to leave it open and when Luis returns from vacation in a couple\n> of days he can test out his new raw PNG handler to see if it alleviates this\n> particular performance issue.\n\nok, sounds good", "id": 157786, "time": "2012-04-10T17:25:29Z", "creator": "gadams@apache.org", "creation_time": "2012-04-10T17:25:29Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 51149, "text": "Created attachment 28871\nthis patch speeds up performance for certain kinds of PNG images\n\nthis patch addresses the issue described here: http://old.nabble.com/change-to-PNGImageReader-in-jdk1.6_14-impacts-performance-with-some-PNG-images-td33271018.html#a33271018.\n\nNote: the approach implemented in this patch was suggested by Jeremias. The implementation and any mistakes, are mine.", "id": 159598, "time": "2012-06-01T13:37:24Z", "creator": "lmpmbernardo@gmail.com", "creation_time": "2012-06-01T13:37:24Z", "is_private": false, "attachment_id": 28871}, {"count": 7, "attachment_id": 28872, "bug_id": 51149, "is_private": false, "id": 159599, "time": "2012-06-01T13:42:46Z", "creator": "lmpmbernardo@gmail.com", "creation_time": "2012-06-01T13:42:46Z", "tags": [], "text": "Created attachment 28872\nsimple *.fo test that uses the image provided\n\nThese are some simple time measurements before and after the patch is applied:\n\nBEFORE:\n$ time /home/lbernardo/workspace/apachefop/fop -fo test.fo -pdf test.pdf\n01-Jun-2012 14:16:51 org.apache.fop.events.LoggingEventListener processEvent\nINFO: Rendered page #1.\n\nreal\t0m19.934s\nuser\t0m20.157s\nsys\t0m0.172s\n$ ls -l test.pdf \n-rw-rw-r-- 1 lbernardo lbernardo 264239 2012-06-01 14:16 test.pdf\n\nAFTER:\n$ time /home/lbernardo/workspace/apachefop/fop -fo test.fo -pdf test.pdf\n01-Jun-2012 14:17:32 org.apache.fop.events.LoggingEventListener processEvent\nINFO: Rendered page #1.\n\nreal\t0m3.749s\nuser\t0m4.016s\nsys\t0m0.076s\n\n$ ls -l test.pdf \n-rw-rw-r-- 1 lbernardo lbernardo 264239 2012-06-01 14:17 test.pdf"}, {"count": 8, "tags": [], "creator": "lmpmbernardo@gmail.com", "attachment_id": null, "id": 159602, "time": "2012-06-01T14:03:11Z", "bug_id": 51149, "creation_time": "2012-06-01T14:03:11Z", "is_private": false, "text": "note: although not part of this patch, I am finishing up a raw PNG image loader that bypasses decoding. since this was mentioned here, the time measurement with this new image loader for the same example is also shown here:\n\n$ time fop -c fop.xconf -fo test.fo -pdf test.pdf \n01-Jun-2012 14:49:04 org.apache.fop.apps.FopFactoryConfigurator configure\nINFO: Default page-height set to: 11in\n01-Jun-2012 14:49:04 org.apache.fop.apps.FopFactoryConfigurator configure\nINFO: Default page-width set to: 8.26in\n01-Jun-2012 14:49:05 org.apache.fop.events.LoggingEventListener processEvent\nINFO: Rendered page #1.\n\nreal\t0m0.659s\nuser\t0m0.816s\nsys\t0m0.044s\n$ ls -l test.pdf \n-rw-rw-r-- 1 lbernardo lbernardo 202386 2012-06-01 14:49 test.pdf\n\nThe size of the resulting file is smaller because the image (the IDAT chunk) is not decompressed."}, {"count": 9, "tags": [], "bug_id": 51149, "is_private": false, "text": "applied patch at http://svn.apache.org/viewvc?rev=1345323&view=rev\n\nthanks luis, please review and close if satisfied", "id": 159623, "time": "2012-06-01T19:58:07Z", "creator": "gadams@apache.org", "creation_time": "2012-06-01T19:58:07Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 51149, "is_private": false, "text": "Luis, thank you for your patch.\n\nI tested and got similar results as Luis:\n\nFOP 1.0    + Oracle JVM 1.6.0_24 is around 4 times slower than\nFOP 1.1rc1 + Oracle JVM 1.6.0_24, but that one is also around 8 times slower than\nFOP 1.0    + Oracle JVM 1.6.0_17.\n\nIn other words, there is some speed improvement (see comment 7), but in order to get the same speed as earlier with JDK 1.6.0_17, I guess we should wait for patch announced at comment 8.\n\nTherefore, if no one object, I will reopen this issue.", "id": 161426, "time": "2012-08-15T14:54:53Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2012-08-15T14:54:53Z", "attachment_id": null}, {"count": 11, "attachment_id": null, "bug_id": 51149, "text": "the raw png image loader is part of the trunk now, but is disabled by default. see http://wiki.apache.org/xmlgraphics-fop/HowTo/ImageLoaderRawPNG for more info. the initial patch, the one used for measurements in comment 8, used it. that patch still ignores color profiles. there is a more recent patch, not applied yet, AFIK, that uses color profiles (see bug 40676). more information about color profiles can be found in bug 51465.", "id": 161446, "time": "2012-08-15T21:38:23Z", "creator": "lmpmbernardo@gmail.com", "creation_time": "2012-08-15T21:38:23Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "is_private": false, "count": 12, "id": 161456, "time": "2012-08-16T09:25:59Z", "bug_id": 51149, "creation_time": "2012-08-16T09:25:59Z", "text": "Luis,\n\nThank you for your time to explain and work on patches on all bugs related to color profiles.\n\nI believe you talk about attachment 29132 on bug 40676, that is still not applied to the trunk. Should bug 40676 be reopened until this patch is applied?\n\nPlease, correct me if I'm wrong: \n\nXML Graphics pre-1.4, FOP pre-1.0 and Oracle Java pre-1.6.0_17 (or certain combinations of those) incorrectly ignored color profiles of PNG images, resulting in faster image processing and smaller PDF files. \n\nLatest versions of those (when patch 29132 is applied) will take color profile information into consideration, therefore taking longer to process images and generating larger PDF files.\n\nThe only way to use color profiles in PNG files but to keep both PDF size and performance as earlier, is to use ImageLoaderRawPNG, which will write PNG IDAT chunk stream directly into resulting PDF. That is, only if it is non-interlaced 8-bit-per-channel PNG.\n\nIs this correct?"}, {"count": 13, "tags": [], "bug_id": 51149, "text": "not quite correct...\n- xmlgraphics pre 1.4 ignored color profiles; it was fast but in some cases the output would be wrong (but most of the time was correct because ignoring the color profile had no visible effect);\n- with jdk 1.6.0_17, a new performance problem appeared but this was due to a change (a bug fix) inside the jdk that caused the xmlgraphics to take a different, and slower, path with some images; with the examples I checked the images had a color profile but I don't know whether that was relevant; a patch was submitted that tried to alleviate the performance impact, but the code was still slower than   with a jdk pre 1.6.0_17;\n- the ImageLoaderRawPNG is faster in many situations (in particular with large images that use the Paeth filter) and the resulting file is usually smaller but not always, and that is particularly true after support for color profiles was added; the color profile is now (if different from the default one sRGB IEC61966-2.1) embedded in the output PDF which may result in larger file size; but if the color profile is the default one then I expect the ImageLoaderRawPNG to be faster and produce smaller file sizes in most cases when compared with the default ImageLoaderImageIO (with the caveat that only images with 8 bits per channel and without interlacing are supported);\n- bug 40676 can be reopened but as the bug title says, the main issue of the bug was file size, not performance.", "id": 161943, "time": "2012-09-04T15:43:41Z", "creator": "lmpmbernardo@gmail.com", "creation_time": "2012-09-04T15:43:41Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "text": "Since the performance issue still exists (although mitigated to a certain degree), and since there is available patch at issue 40676 that solves it completely, I am reopening this issue.", "count": 14, "id": 162618, "time": "2012-10-08T07:47:50Z", "bug_id": 51149, "creation_time": "2012-10-08T07:47:50Z", "is_private": false}, {"count": 15, "tags": [], "creator": "lmpmbernardo@gmail.com", "attachment_id": null, "id": 162845, "time": "2012-10-20T23:55:50Z", "bug_id": 51149, "creation_time": "2012-10-20T23:55:50Z", "is_private": false, "text": "outstanding patch for bug 40676 applied and issue status changed to resolved"}]