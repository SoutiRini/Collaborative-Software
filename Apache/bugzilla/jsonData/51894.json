[{"count": 0, "tags": [], "text": "The contents of an including JSP are delivered, and an exception thrown, when attempting to include static contents with <jsp:include/>. The error also occurs when including dynamically with Java code; in this case no content is delivered. Attached is a bare-bones spring web-app that exhibits this behavior when the war file is run in Tomcat.\n\n\n{servlet}/helloworld/dynamic returns (as expected):\n<html>\n<body>\n<p>Hello World!</p>\n</body>\n</html>\n\n\n{servlet}/helloworld/static should return the same as above but instead returns:\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n<jsp:include page=\"include/helloWorld.html\"/>", "is_private": false, "id": 149772, "creator": "jwu@digitalmeasures.com", "time": "2011-09-26T18:28:09Z", "bug_id": 51894, "creation_time": "2011-09-26T18:28:09Z", "attachment_id": null}, {"attachment_id": 27598, "tags": [], "bug_id": 51894, "is_private": false, "count": 1, "id": 149773, "time": "2011-09-26T18:32:13Z", "creator": "jwu@digitalmeasures.com", "creation_time": "2011-09-26T18:32:13Z", "text": "Created attachment 27598\nDemonstration"}, {"count": 2, "tags": [], "text": "I'm not a Spring user: does the \"<mvc:default-servlet-handler/>\" in demo-servlet.xml configure Spring's front controller to act like the \"default\" servlet and therefore serve static content? Otherwise, it looks like you have mapped / to Spring and then only handled *.jsp URLs.", "is_private": false, "id": 149774, "creator": "chris@christopherschultz.net", "time": "2011-09-26T19:01:24Z", "bug_id": 51894, "creation_time": "2011-09-26T19:01:24Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 51894, "attachment_id": null, "id": 149775, "time": "2011-09-26T19:08:08Z", "creator": "jwu@digitalmeasures.com", "creation_time": "2011-09-26T19:08:08Z", "is_private": false, "text": "\"<mvc:default-servlet-handler/>\" configures spring to forward requests for static content along to the servlet container's default servlet.\n\nhttp://static.springsource.org/spring/docs/current/spring-framework-reference/html/mvc.html#mvc-default-servlet-handler\n\n(In reply to comment #2)\n> I'm not a Spring user: does the \"<mvc:default-servlet-handler/>\" in\n> demo-servlet.xml configure Spring's front controller to act like the \"default\"\n> servlet and therefore serve static content? Otherwise, it looks like you have\n> mapped / to Spring and then only handled *.jsp URLs."}, {"count": 4, "tags": [], "bug_id": 51894, "is_private": false, "id": 149777, "attachment_id": null, "creator": "jwu@digitalmeasures.com", "creation_time": "2011-09-26T19:14:26Z", "time": "2011-09-26T19:14:26Z", "text": "I should also mention that we tried dynamically including static content in Jetty and it worked as we had expected.  The attached sample also works in Jetty but not on tomcat.\n\nTomcat as far back as 6.0.29 has been tested; all failed to work as we expected.\n\n(In reply to comment #0)"}, {"count": 5, "tags": [], "text": "Please provide a WAR file (without Spring libraries - those can be downloaded), so that it can be tested.\n\nThus I cannot test the app itself. Testing the views and reviewing configuration instead.\n\n1. Accessing the views directly does work. Forwarding to your views works as well (that is what DispatcherServlet does when displaying a view).\nSo it is a problem with your configuration.\n\n2. You mapped DispatcherServlet to <url-pattern>/</url-pattern>. It is wrong, because it conflicts with mapping of DefaultServlet (in conf/web.xml).\n\n\nIn short: DefaultServlet is the servlet that is used to serve static files. In your configuration the nested request to helloWorld.html is served not by DefaultServlet but by DispatcherServlet.\n\nWhatever happens in this case is beyond my scope.\nIIRC in such cases DispatcherServlet responds with HTTP response code 400 (wrong request), because it cannot map request to proper controller.\n\nClosing as INVALID: you should fix your mapping for static resources.\nFor example, configure org.apache.catalina.servlets.DefaultServlet explicitly and map it to *.html URLs.  Or change the mapping for DispatcherServlet so that there would not be a conflict.", "is_private": false, "id": 149786, "creator": "knst.kolinko@gmail.com", "time": "2011-09-27T00:30:44Z", "bug_id": 51894, "creation_time": "2011-09-27T00:30:44Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "There were issues in previous versions when applications tried to override the default servlet but those have been fixed. Just to be sure, I double checked using\n\n<servlet-mapping>\n  <servlet-name>HelloWorld</servlet-name>\n  <url-pattern>/</url-pattern>\n</servlet-mapping>\n\nand\n\n@WebServlet(\"/\")\n\nand both worked as expected.", "is_private": false, "id": 149815, "creator": "markt@apache.org", "time": "2011-09-27T10:09:48Z", "bug_id": 51894, "creation_time": "2011-09-27T10:09:48Z", "attachment_id": null}, {"count": 7, "text": "With which version of Tomcat did this work for you?\n\n(In reply to comment #6)\n> There were issues in previous versions when applications tried to override the\n> default servlet but those have been fixed. Just to be sure, I double checked\n> using\n> \n> <servlet-mapping>\n>   <servlet-name>HelloWorld</servlet-name>\n>   <url-pattern>/</url-pattern>\n> </servlet-mapping>\n> \n> and\n> \n> @WebServlet(\"/\")\n> \n> and both worked as expected.", "creator": "jwu@digitalmeasures.com", "attachment_id": null, "id": 149832, "time": "2011-09-27T13:57:01Z", "bug_id": 51894, "creation_time": "2011-09-27T13:57:01Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "bug_id": 51894, "is_private": false, "id": 149833, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2011-09-27T14:02:09Z", "time": "2011-09-27T14:02:09Z", "text": "trunk\n\nThe bug I was referring to was fixed in 7.0.15 and there are no changes I can recall or see in the change log that should modify the behaviour in this area between 7.0.21 and trunk."}, {"count": 9, "tags": [], "text": "We are still experiencing it in 7.0.21\n\n(In reply to comment #8)\n> trunk\n> \n> The bug I was referring to was fixed in 7.0.15 and there are no changes I can\n> recall or see in the change log that should modify the behaviour in this area\n> between 7.0.21 and trunk.", "is_private": false, "id": 149834, "creator": "jwu@digitalmeasures.com", "time": "2011-09-27T14:03:34Z", "bug_id": 51894, "creation_time": "2011-09-27T14:03:34Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 51894, "attachment_id": null, "id": 149835, "time": "2011-09-27T14:18:44Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-09-27T14:18:44Z", "is_private": false, "text": "(In reply to comment #6)\n> There were issues in previous versions when applications tried to override the\n> default servlet but those have been fixed. Just to be sure, I double checked\n> using\n> \n> <servlet-mapping>\n>   <servlet-name>HelloWorld</servlet-name>\n>   <url-pattern>/</url-pattern>\n> </servlet-mapping>\n> \n> and\n> \n> @WebServlet(\"/\")\n> \n> and both worked as expected.\n\nIf this mapping were not working, their views were not working at all.\n\n(Because they are in WEB-INF and thus are not accessible without that DispatcherServlet that performs forward to them)."}]