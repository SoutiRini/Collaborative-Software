[{"count": 0, "tags": [], "bug_id": 44620, "attachment_id": null, "id": 114686, "time": "2008-03-17T08:53:41Z", "creator": "tangy@chilema.net", "creation_time": "2008-03-17T08:53:41Z", "is_private": false, "text": "The code below has a chance to cause tomcat enter dead loop in class InternalNioOutputBuffer \n\n    private synchronized void addToBB(byte[] buf, int offset, int length) throws IOException {\n -->       while (socket.getBufHandler().getWriteBuffer().remaining() < length) {\n            flushBuffer();\n        }\n\nwhen the buffer size of socket is smaller than length. \nThe default size of socket comes from socket.appWriteBufSize, which is 8192; The value of length is limited by maxHttpHeaderSize, which is 9000. Well, the chance for dead loop exists and happened.\nIt can be avoid if we config the two value correctly in server.xml"}, {"count": 1, "tags": [], "creator": "cpierret@sparus-software.com", "attachment_id": null, "text": "We had a similar issue that was fixed by applying the following patch:\nhttp://svn.apache.org/viewvc?view=rev&revision=618420\n\nCan you try this patch ?", "id": 114746, "time": "2008-03-19T06:59:16Z", "bug_id": 44620, "creation_time": "2008-03-19T06:59:16Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 44620, "is_private": false, "text": "I will put in a check, and throw an exception if the system is misconfigured to detect this issue.", "id": 114748, "time": "2008-03-19T08:07:44Z", "creator": "fhanik@apache.org", "creation_time": "2008-03-19T08:07:44Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "fhanik@apache.org", "attachment_id": null, "is_private": false, "id": 114755, "time": "2008-03-19T09:06:18Z", "bug_id": 44620, "creation_time": "2008-03-19T09:06:18Z", "text": "I also tested the trunk patch, and couldn't get it to work properly either."}, {"count": 4, "attachment_id": null, "creator": "fhanik@apache.org", "is_private": false, "id": 114756, "time": "2008-03-19T09:06:36Z", "bug_id": 44620, "creation_time": "2008-03-19T09:06:36Z", "tags": [], "text": "ignore previous comment, wrong bug :)"}, {"count": 5, "tags": [], "bug_id": 44620, "is_private": false, "text": "Sorry for that I do not express it clearly(We made some mistake in it). Since our application will cause the following problem:\n\n2008-3-21 14:54:12 org.apache.catalina.connector.CoyoteAdapter service\n\u4e25\u91cd: An exception or error occurred in the container during the request processing\njava.lang.ArrayIndexOutOfBoundsException: 8192\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.write(InternalNioOutputBuffer.java:734)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.write(InternalNioOutputBuffer.java:641)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.sendHeader(InternalNioOutputBuffer.java:507)\n\tat org.apache.coyote.http11.Http11NioProcessor.prepareResponse(Http11NioProcessor.java:1707)\n\tat org.apache.coyote.http11.Http11NioProcessor.action(Http11NioProcessor.java:1023)\n\tat org.apache.coyote.Response.action(Response.java:183)\n\tat org.apache.coyote.Response.sendHeaders(Response.java:379)\n\tat org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:305)\n\tat org.apache.catalina.connector.OutputBuffer.close(OutputBuffer.java:273)\n\tat org.apache.catalina.connector.Response.finishResponse(Response.java:492)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:310)\n\tat org.apache.coyote.http11.Http11NioProcessor.process(Http11NioProcessor.java:879)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:719)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2080)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\n\tat java.lang.Thread.run(Thread.java:619)\n2008-3-21 14:54:12 org.apache.coyote.http11.Http11NioProcessor endRequest\n\u4e25\u91cd: Error finishing response\njava.lang.ArrayIndexOutOfBoundsException\n\tat java.lang.System.arraycopy(Native Method)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.write(InternalNioOutputBuffer.java:703)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.sendStatus(InternalNioOutputBuffer.java:460)\n\tat org.apache.coyote.http11.Http11NioProcessor.prepareResponse(Http11NioProcessor.java:1696)\n\tat org.apache.coyote.http11.Http11NioProcessor.action(Http11NioProcessor.java:1023)\n\tat org.apache.coyote.Response.action(Response.java:181)\n\tat org.apache.coyote.http11.InternalNioOutputBuffer.endRequest(InternalNioOutputBuffer.java:382)\n\tat org.apache.coyote.http11.Http11NioProcessor.endRequest(Http11NioProcessor.java:977)\n\tat org.apache.coyote.http11.Http11NioProcessor.process(Http11NioProcessor.java:913)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:719)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:2080)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)\n\tat java.lang.Thread.run(Thread.java:619)\nwe changed the server.xml and set maxHttpHeaderSize=\"1024\" , and which cause dead loop and cost 100%CPU.  the detailed stack trace is below(tomcat 6.0.16):\nDaemon Thread [catalina-exec-4] (Suspended)\t\n\tInternalNioOutputBuffer.flushBuffer() line: 768\t\n\tInternalNioOutputBuffer.addToBB(byte[], int, int) line: 616\t\n\tInternalNioOutputBuffer.commit() line: 608\t\n\tHttp11NioProcessor.action(ActionCode, Object) line: 1024\t\n\tResponse.action(ActionCode, Object) line: 183\t\n\tResponse.sendHeaders() line: 379\t\n\tOutputBuffer.doFlush(boolean) line: 305\t\n\tOutputBuffer.close() line: 273\t\n\tResponse.finishResponse() line: 492\t\n\tCoyoteAdapter.service(Request, Response) line: 310\t\n\tHttp11NioProcessor.process(NioChannel) line: 879\t\n\tHttp11NioProtocol$Http11ConnectionHandler.process(NioChannel) line: 719\t\n\tNioEndpoint$SocketProcessor.run() line: 2080\t\n\tThreadPoolExecutor$Worker.runTask(Runnable) line: 885\t\n\tThreadPoolExecutor$Worker.run() line: 907\t\n\tThread.run() line: 619\t\n\nAt  last we also increased the  socket.appWriteBufSize=\"10240\" and solved the problem.\n", "id": 114840, "time": "2008-03-21T00:02:24Z", "creator": "tangy@chilema.net", "creation_time": "2008-03-21T00:02:24Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "tangy@chilema.net", "text": "sorry for typed mistake:\n   we changed the server.xml and set maxHttpHeaderSize=\"1024\" , \nshould be \n   we changed the server.xml and set maxHttpHeaderSize=\"10240\" , \n", "count": 6, "id": 114841, "time": "2008-03-21T00:04:36Z", "bug_id": 44620, "creation_time": "2008-03-21T00:04:36Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 44620, "text": "The patch referred to in comment #2 is insufficient to fix this issue. I have committed a fix to trunk and proposed it for 6.0.x.", "id": 114926, "time": "2008-03-24T13:53:02Z", "creator": "markt@apache.org", "creation_time": "2008-03-24T13:53:02Z", "is_private": false, "attachment_id": null}, {"count": 8, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 115612, "time": "2008-04-15T10:07:11Z", "bug_id": 44620, "creation_time": "2008-04-15T10:07:11Z", "tags": [], "text": "The fix for this will be in 6.0.17 onwards."}]