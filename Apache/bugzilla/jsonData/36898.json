[{"text": "In my threadgroup, I use SOAP/XML-RPC to request my server.\nI use regular expression extractor for generating the next request with the\nserver response.\n\nThis work fine if there is no special symbol but when there is an UTF-8 special\nsymbol in the server response, the extraction doesn't give the String I'm\nwaiting for.\n\nFor example, if the server response contains a String like \"<City>V\u00e9zelay</City>\"\nWith the regular expression extractor I would like to extract the String\n\"V\u00e9zelay\" but it give me the String \"V\u00c3\u00a9zelay\"\nIn hexadecimal, the special symbol is C3 00 A9 00 and it become C3 B3 C2 A9\nafter extraction\n\nIt seems that the symbol is encoding another time in utf-8 or in another format.\n\nNote : The bug 27032 (witch is in resolved state) has some similarities.", "tags": [], "creator": "hachimarave@caramail.com", "is_private": false, "count": 0, "id": 80702, "time": "2005-10-03T16:50:17Z", "bug_id": 36898, "creation_time": "2005-10-03T16:50:17Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Does the response get saved correctly if you configure a listener to \"Save \nResponse Data\"?\n\nOr does this also cause the data to be mangled?", "is_private": false, "id": 80704, "creator": "sebb@apache.org", "time": "2005-10-03T17:19:54Z", "bug_id": 36898, "creation_time": "2005-10-03T17:19:54Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Looking at webserviceSampler, it currently gets a BufferedReader from apache\nsoap, so it's unlikely the sampler is the problem.\n\nSOAPTransport st = msg.getSOAPTransport();\nRESULT.setDataType(SampleResult.TEXT);\nBufferedReader br = null;\n// check to see if SOAPTransport is not nul and receive is\n// also not null. hopefully this will improve the error\n// reporting. 5/13/05 peter lin\nif (st != null && st.receive() != null) {\n\tbr = st.receive();\n\tif (this.getPropertyAsBoolean(READ_RESPONSE)) {\n\t        StringBuffer buf = new StringBuffer();\n\t\tString line;\n\t\twhile ((line = br.readLine()) != null) {\n\t\t\tbuf.append(line);\n\t\t}\n\t\tRESULT.sampleEnd();\n\t\t// set the response\n\t\tRESULT.setResponseData(buf.toString().getBytes());\n\nIf apache soap doesn't create a reader using the correct encoding, it \"could\"\ncause the problem you see. I don't know apache soap well enough to say with any\ncertainty that is the case. It could also be a limitation of the assertion.\n\npeter", "is_private": false, "id": 80705, "creator": "woolfel@yahoo.com", "time": "2005-10-03T17:25:52Z", "bug_id": 36898, "creation_time": "2005-10-03T17:25:52Z", "attachment_id": null}, {"count": 3, "text": "(In reply to comment #1)\n> Does the response get saved correctly if you configure a listener to \"Save \n> Response Data\"?\n> \n> Or does this also cause the data to be mangled?\n\nYes if I save the response data in a file the datas are not transformed. They\nare saved correctly.", "creator": "hachimarave@caramail.com", "attachment_id": null, "id": 80707, "time": "2005-10-03T18:09:01Z", "bug_id": 36898, "creation_time": "2005-10-03T18:09:01Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 36898, "attachment_id": null, "is_private": false, "id": 80782, "time": "2005-10-05T11:09:10Z", "creator": "hachimarave@caramail.com", "creation_time": "2005-10-05T11:09:10Z", "text": "I don't think that soap is \n(In reply to comment #2)\n> If apache soap doesn't create a reader using the correct encoding, it \"could\"\n> cause the problem you see. I don't know apache soap well enough to say with any\n> certainty that is the case. It could also be a limitation of the assertion.\n> \n> peter\n\n\nI don't think that soap doesn't use the correct with its reader encoding.\nBecause in this case, the server response that I read in JMeter (when I write\nthe response data in a file) should be bad encoding (just like the String I read\n using regular expression regulator)\n\nMaybe there is a way to sp\u00e9cify the String encoding when i use a regular\nexpression extractor."}, {"count": 5, "tags": [], "bug_id": 36898, "attachment_id": null, "is_private": false, "id": 80796, "time": "2005-10-05T15:37:53Z", "creator": "woolfel@yahoo.com", "creation_time": "2005-10-05T15:37:53Z", "text": "it's possible you're right and the assertion isn't handling the encoding\ncorrectly. perhaps sebb or mike will know better. jmeter uses oro-matcher, so it\ncould be we need to set the encoding?  if  I have time tonight I'll take a look\nat oro matcher api.\n\npeter"}, {"count": 6, "text": "Ok, I think I've finally found where is the bug.\nIt's in the class RegexExtractor of the package org.apache.jmeter.extractor\nin the process() method there is a creation of a PatternMatcherInput whith the\nlast response data of the last result.\nAt this place, the response data is passed without any string encoding.\n\nTo correct this bug, i've replace the line \ninput = new PatternMatcherInput(useHeaders() ? context.getPreviousResult()\n\t\t\t\t\t.getResponseHeaders() : new\nString(context.getPreviousResult().getResponseData()));\n\nby \ntry {\n\t\t\tinput = new PatternMatcherInput(useHeaders() ? context.getPreviousResult()\n\t\t\t\t\t.getResponseHeaders() : new\nString(context.getPreviousResult().getResponseData(),context.getPreviousResult().getDataEncoding()));\n\t\t} catch (UnsupportedEncodingException e2) {\n\t\t\tinput = new PatternMatcherInput(useHeaders() ? context.getPreviousResult()\n\t\t\t\t\t.getResponseHeaders() : new\nString(context.getPreviousResult().getResponseData()));\n\t\t}\n\nI don't know if it's THE good way to correct it, but now, the String I extract\nare encoded correctly.\n\nI'm not really accustomed with the way to modify the source code one a jakarta\nproject. Can someone do this? Am I habilited to do this ?", "creator": "hachimarave@caramail.com", "is_private": false, "id": 81157, "time": "2005-10-14T15:48:10Z", "bug_id": 36898, "creation_time": "2005-10-14T15:48:10Z", "tags": [], "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 36898, "text": "Fixed in 2.1 branch code. Will be in 2.1.2", "id": 82425, "attachment_id": null, "creator": "sebb@apache.org", "creation_time": "2005-11-13T03:10:01Z", "time": "2005-11-13T03:10:01Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 36898, "text": "I am using Jmeter 2.11 and I am seeing this same issue with the regex extractor.", "id": 181841, "time": "2015-03-17T14:46:04Z", "creator": "mhudson1976@aol.com", "creation_time": "2015-03-17T14:46:04Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "text": "Could you tell us exactly what you have done, what you expect and what you have seen?\n\nMaybe your server is giving out no or the wrong encoding?", "is_private": false, "id": 182913, "creator": "felix.schumacher@internetallee.de", "time": "2015-05-10T18:51:10Z", "bug_id": 36898, "creation_time": "2015-05-10T18:51:10Z", "attachment_id": null}, {"count": 10, "text": "Closed as no feedback from user and looking at current code , encoding is correctly used.", "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "id": 194022, "time": "2016-09-27T09:06:48Z", "bug_id": 36898, "creation_time": "2016-09-27T09:06:48Z", "tags": [], "is_private": false}]