[{"count": 0, "tags": [], "bug_id": 45334, "text": "When encountering a formula that uses the ERRORTYPE the FormulaParser does not recognize it as a function.  Here is the stack trace:\n\njava.lang.IllegalArgumentException: Invalid Formula cell reference: 'ERROR'\n\tat org.apache.poi.hssf.util.CellReference.<init>(CellReference.java:61)\n\tat org.apache.poi.hssf.util.AreaReference.<init>(AreaReference.java:63)\n\tat org.apache.poi.hssf.record.formula.AreaPtgBase.<init>(AreaPtgBase.java:59)\n\tat org.apache.poi.hssf.record.formula.AreaPtg.<init>(AreaPtg.java:36)\n\tat org.apache.poi.hssf.model.FormulaParser.parseIdentifier(FormulaParser.java:242)\n\tat org.apache.poi.hssf.model.FormulaParser.parseFunctionOrIdentifier(FormulaParser.java:229)\n\tat org.apache.poi.hssf.model.FormulaParser.parseSimpleFactor(FormulaParser.java:468)\n\tat org.apache.poi.hssf.model.FormulaParser.percentFactor(FormulaParser.java:433)\n\tat org.apache.poi.hssf.model.FormulaParser.powerFactor(FormulaParser.java:420)\n\tat org.apache.poi.hssf.model.FormulaParser.Term(FormulaParser.java:628)\n\tat org.apache.poi.hssf.model.FormulaParser.additiveExpression(FormulaParser.java:709)\n\tat org.apache.poi.hssf.model.FormulaParser.concatExpression(FormulaParser.java:693)\n\tat org.apache.poi.hssf.model.FormulaParser.comparisonExpression(FormulaParser.java:650)\n\tat org.apache.poi.hssf.model.FormulaParser.Arguments(FormulaParser.java:405)\n\tat org.apache.poi.hssf.model.FormulaParser.function(FormulaParser.java:308)\n\tat org.apache.poi.hssf.model.FormulaParser.parseFunctionOrIdentifier(FormulaParser.java:227)\n\tat org.apache.poi.hssf.model.FormulaParser.parseSimpleFactor(FormulaParser.java:468)\n\tat org.apache.poi.hssf.model.FormulaParser.percentFactor(FormulaParser.java:433)\n\tat org.apache.poi.hssf.model.FormulaParser.powerFactor(FormulaParser.java:420)\n\tat org.apache.poi.hssf.model.FormulaParser.Term(FormulaParser.java:628)\n\tat org.apache.poi.hssf.model.FormulaParser.additiveExpression(FormulaParser.java:709)\n\tat org.apache.poi.hssf.model.FormulaParser.concatExpression(FormulaParser.java:693)\n\tat org.apache.poi.hssf.model.FormulaParser.comparisonExpression(FormulaParser.java:650)\n\tat org.apache.poi.hssf.model.FormulaParser.Arguments(FormulaParser.java:405)\n\tat org.apache.poi.hssf.model.FormulaParser.function(FormulaParser.java:308)\n\tat org.apache.poi.hssf.model.FormulaParser.parseFunctionOrIdentifier(FormulaParser.java:227)\n\tat org.apache.poi.hssf.model.FormulaParser.parseSimpleFactor(FormulaParser.java:468)\n\tat org.apache.poi.hssf.model.FormulaParser.percentFactor(FormulaParser.java:433)\n\tat org.apache.poi.hssf.model.FormulaParser.powerFactor(FormulaParser.java:420)\n\tat org.apache.poi.hssf.model.FormulaParser.Term(FormulaParser.java:628)\n\tat org.apache.poi.hssf.model.FormulaParser.additiveExpression(FormulaParser.java:709)\n\tat org.apache.poi.hssf.model.FormulaParser.concatExpression(FormulaParser.java:693)\n\tat org.apache.poi.hssf.model.FormulaParser.comparisonExpression(FormulaParser.java:650)\n\tat org.apache.poi.hssf.model.FormulaParser.parse(FormulaParser.java:751)\n\tat org.apache.poi.hssf.model.FormulaParser.parse(FormulaParser.java:113)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateCell(HSSFFormulaEvaluator.java:346)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.internalEvaluate(HSSFFormulaEvaluator.java:338)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateFormulaCell(HSSFFormulaEvaluator.java:183)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateAllFormulaCells(HSSFFormulaEvaluator.java:278)\n\t... \n\nNote: there is no way to select the 3.1 final in the Version select.  The jars I used to get this are poi-*FINAL-20080629.jar", "id": 118239, "time": "2008-07-03T10:32:32Z", "creator": "bsneade+apache@gmail.com", "creation_time": "2008-07-03T10:32:32Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "bsneade+apache@gmail.com", "attachment_id": null, "id": 118240, "time": "2008-07-03T10:38:44Z", "bug_id": 45334, "creation_time": "2008-07-03T10:38:44Z", "is_private": false, "text": "Debugging into it I have found the following:\n\norg.apache.poi.hssf.model.FormulaParser.parseFunctionOrIdentifier() calls GetName() and uses the existence of '(' to decide to parse and node or handle a function.  \n\nThe ERRORTYPE function is passed around as \"ERROR.TYPE(args)\".  When GetName() parses this it sets 'look' to '.' instead of '('.  It looks as if ERROR.TYPE comes from functionMetadata.txt.  I've overridden this file (via the classpath) and changed\n\"261\tERROR.TYPE\t1\t1\tV\tV\t\"\nto\n\"261\tERRORTYPE\t1\t1\tV\tV\t\"\nand this seems to fix the problem."}, {"count": 2, "attachment_id": null, "bug_id": 45334, "text": "Fixed in svn r673853 and r673863\n\nThanks for the research.  Your proposed patch fixes your case because the formula name isn't encoded in the xls file, but it's not quite right.  \n\nThis Excel function 'ERROR.TYPE' really *does* have a dot. POI code like cell.setCellFormula(\"ERROR.TYPE(A1)\") also needs to work.\n\nThe code was changed to allow dots in identifiers.  Unfortunately, for area refs dots can be used in place of colon, so special logic was needed to distinguish these cases.\n\nAlso added an implementation for Errortype.java and junits.\n\nNote - The new logic in Errortype.java is correct, but there are still a few bugs in the way POI evaluates errors in other functions (see TestFormulasFromSpreadsheet:134). In these cases, POI may get the error code of the evaluated argument wrong, in which case ERROR.TYPE() will seem to return the wrong value.\n\n", "id": 118269, "time": "2008-07-03T16:27:46Z", "creator": "josh@apache.org", "creation_time": "2008-07-03T16:27:46Z", "tags": [], "is_private": false}]