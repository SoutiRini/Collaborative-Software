[{"count": 0, "tags": [], "creator": "ueno@unixuser.org", "attachment_id": null, "id": 7460, "time": "2001-11-01T14:15:28Z", "bug_id": 4574, "creation_time": "2001-11-01T14:15:28Z", "is_private": false, "text": "Since I updated Xalan-Java 2.2D12, my servlet using javax.xml.transformer.*\nhas spewed up the following error:\n\nError: 500\nLocation: /diary/servlet/view\nInternal Servlet Error:\n\njavax.xml.transform.TransformerFactoryConfigurationError: Provider\norg.apache.xalan.processor.TransformerFactoryImpl not found\n\tat javax.xml.transform.TransformerFactory.newInstance(Unknown Source)\n\tat org.unixuser.ueno.diary.processors.TransformerProcessor.process(Unknown Source)\n\tat org.unixuser.ueno.diary.DiaryBuilder.process(Unknown Source)\n\tat org.unixuser.ueno.diary.DiaryBuilder.build(Unknown Source)\n\tat org.unixuser.ueno.diary.servlet.View.doGet(Unknown Source)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java)\n...\n\nOf course, the SPI class org.apache.xalan.processor.TransformerFactoryImpl\nis located in <tomcat>/webapps/diary/lib/xalan.jar counted when the\nservlet container started.\n\nWhen I made a change in FactoryFinder#newInstance(String,ClassLoader)\nnot to use the context ClassLoader for the current thread (i.e. always\nto call Class.forName), it worked as before.\n\nRegards,"}, {"count": 1, "tags": [], "creator": "keshlam@us.ibm.com", "text": "Just a quick observation -- there isn't an official D12 release yet, though \nwe were considering cutting one next week. \n\nFactoryFinder actually part of the xml-commons package rather than Xalan per \nse, though we currently incorporate it directly into our jarfile. A new version \nof xml-commons was recently released which reworked this class, partly due to \nContextClassLoader not being available in JDK 1.1.8. You might want to try \nupdating the commons classes, rebuild Xalan from scratch (\"build clean\" and then \n\"build\"), and see if this change solves your problem as well.", "id": 7475, "time": "2001-11-02T05:52:13Z", "bug_id": 4574, "creation_time": "2001-11-02T05:52:13Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 4574, "attachment_id": null, "text": "Sorry, I had missed reading the comment at the beginning of build.xml,\nalthough I'm using Xalan 2.2D12 checked out from CVS.  Some time ago I\nchecked out xml-commons together with xml-xalan, and rebuilt it from\nscratch.  The situation however, didn't change unfortunately.\n\nIt seems that Tomcat 3.2.3 coordinates the context ClassLoader\nregarding WEB-INF/classes, lib for each servlet, but doesn't relate it\nwith the current thread, thus Thread#getContextClassLoader() returns the\nparent ClassLoader.\n\nWhat I would like to know is, why not go on using the current\nClassLoader simply or otherwise respect the current ClassLoader when\nthe context ClassLoader fails to load the provider class?\n\nRegards,\n", "id": 7499, "time": "2001-11-02T19:02:29Z", "creator": "ueno@unixuser.org", "creation_time": "2001-11-02T19:02:29Z", "is_private": false}, {"count": 3, "tags": [], "creator": "keshlam@us.ibm.com", "attachment_id": null, "id": 7556, "time": "2001-11-05T13:52:58Z", "bug_id": 4574, "creation_time": "2001-11-05T13:52:58Z", "is_private": false, "text": "Check out the most recent version of xml-commons. I believe it does now use the \ncurrent classloader when the context classloader isn't found."}, {"count": 4, "tags": [], "bug_id": 4574, "attachment_id": null, "text": "Correct.  But that doesn't help me with the problem.\n\nWhat I pointed out in the previous report is that I think it's safer\nto *use* current ClassLoader to load the implementation of\nTransformerFactory (here that is the Xalan's TransformerFactoryImpl) when the\ncontext ClassLoader fails to load it.\n", "id": 7640, "time": "2001-11-07T03:56:16Z", "creator": "ueno@unixuser.org", "creation_time": "2001-11-07T03:56:16Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 4574, "attachment_id": null, "text": "Could be. I don't know enough about the formal definitions of the behavior of \nthe JAXP/TrAX APIs to have a valid opinion on that.", "id": 7643, "time": "2001-11-07T07:04:11Z", "creator": "keshlam@us.ibm.com", "creation_time": "2001-11-07T07:04:11Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 4574, "attachment_id": null, "text": "There are few big problems in tomcat3.2.3 related with Jaxp ! First, make sure you \nhavethe Jdk12Interceptor ( which will set the thread class loader ). The real problem \nis that the files in lib/ will override the webapp classes - so if you want to change \nthe parser or if a transformer is included in tomcat_home/lib - you can't change it.\n\n3.3 solves this problem - and I don't think you can have multiple \nparsers/transformers in 3.2.3. I think 3.2.4 will include a recent JAXP, and so far the \nbest workaround was to replace Jaxp.jar and parser.jar in lib with a current version \nof jaxp ( 3.2.3 still uses jaxp1.0 AFAIK )\n", "id": 7650, "time": "2001-11-07T09:22:54Z", "creator": "cmanolache@yahoo.com", "creation_time": "2001-11-07T09:22:54Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 4574, "attachment_id": null, "id": 7660, "creation_time": "2001-11-07T12:46:16Z", "time": "2001-11-07T12:46:16Z", "creator": "edwingo@apache.org", "text": "I believe the code in xml-commons which prefers the context ClassLoader over the \ncurrent ClassLoader is the correct behavior.  Changing the order would break \nother situations.  The context ClassLoader in Tomcat is probably set wrong.\n\nBTW, if you are using crimson as your parser, then the latest version is crimson \n1.1.3 and there is only a single jar file: crimson.jar.", "is_private": false}]