[{"count": 0, "attachment_id": null, "bug_id": 15839, "is_private": false, "id": 28943, "time": "2003-01-07T14:37:32Z", "creator": "georg-schmid@ti.com", "creation_time": "2003-01-07T14:37:32Z", "tags": [], "text": "In the following  JSP page\n\n<%@ page import=\"java.util.Calendar\" %>\n<%@ page import=\"java.util.GregorianCalendar\" %>\n<%@ page import=\"java.util.TimeZone\" %>\n\n<%@ taglib uri=\"http://java.sun.com/jstl/core\" prefix=\"c\" %>\n<%@ taglib uri=\"http://java.sun.com/jstl/fmt\" prefix=\"fmt\" %>\n\n<%\n  TimeZone defaultTimeZone = TimeZone.getDefault();\n  session.setAttribute( \"timeZone\", defaultTimeZone );\n%>\n\n<fmt:setTimeZone value=\"${timeZone.ID}\"/>\n\n<%\n  Calendar today = GregorianCalendar.getInstance();\n  today.setTimeZone( defaultTimeZone );\n  request.setAttribute( \"today\", today );\n%>\n\n<html>\n<head>\n</head>\n\n<body>\n\nDefault timezone from <code>java.util.TimeZone.getDefault()</code>:\n<c:out value=\"${timeZone}\"/>\n\n<h3>\n  \n  <fmt:formatDate value=\"${today.time}\" type=\"both\" dateStyle=\"long\"\ntimeStyle=\"long\" />\n\n</h3>\n\n</body>\n</html>\n\nthe formatDate tag displays 'IRT' as timezone instead of 'MET'.\n\n(Context: Solaris 2.8, Tomcat 4.1.18, JSTL1.0.2, TZ environment variable\nis set to 'MET' on the server).\n\nIt is really confusing for our (German) users to see times and dates in 'Iranian\nTime' instead of 'Middle European Time'.\n\nRegards\nGeorg Schmid"}, {"count": 1, "tags": [], "text": "As stated in the Java API documentation, three-letter time zone IDs have \nbeen deprecated because the same abbreviation is often used for multiple \ntime zones. In your case, MET is an alias for \"Asia/Tehran\".\n\nYou should use something like \"Europe/Berlin\" instead (or whatever the\nproper timezone is for you).\n\n    -- Pierre\n\n\n", "attachment_id": null, "bug_id": 15839, "id": 29038, "time": "2003-01-08T20:27:17Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-01-08T20:27:17Z", "is_private": false}, {"count": 2, "tags": [], "text": "\nHi Pierre,\n\nI researched the problem a bit further and found, that this is related to \nthe JDK itself, not the JSTL.\n\nA few points should be noted:\n1) MET is \"Middle Europe Time\", not \"Middle Eastern Time\" (this is an error \nintroduced some time back in JDK1.x. It has been fixed since JDK1.2.2 latest, \nbut not for all locales). Set the locale to \"en\" and you'll see. BTW, this is \nalso the interpretation of Solaris 2.8.\n\n2) Using MET was not my idea. The timezone on our Solaris boxes is MET (which \nis standard TZ setting for our region on Solaris), and the JDK reads this \nsetting. \n\n3) It's only the localization, that is wrong. I created a JSP page, that \nprints the zone strings of the DateFormatSymbols for the locale \"de\". It shows \nthat the localization of the timezone strings has been done only half-\nheartedly, even in the JDK1.4.1_01-b01. For instance, MET in German would \nbe \"MEZ\" (Mitteleuropaeische Zeit) or the long version of GMT should \nbe \"Mittlere Greenwich-Zeit\", not \"Greenwich Mean Time\".\n\n4) Localized timezones should work out of the box, without having to pass -\nDuser.timezone=Europe/Berlin to the JVM, especially on Solaris.\n\n5) Using \"Europe/Berlin\" results in the timezone string \"CET\".\n\n6) I posted a bug report at Sun's Java bug report site.\n\nRegards\nGeorg Schmid", "is_private": false, "id": 29056, "creator": "georg-schmid@ti.com", "time": "2003-01-09T08:15:01Z", "bug_id": 15839, "creation_time": "2003-01-09T08:15:01Z", "attachment_id": null}]