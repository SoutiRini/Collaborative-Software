[{"count": 0, "attachment_id": null, "bug_id": 53627, "text": "After a dispatch via AsyncContext, the 'Content-Type' header does not appear in the response on the client side even though it is set on the server side via response.setContentType(String).\n\nA project demonstrating the issue:\nhttps://github.com/rstoyanchev/dispatch-test\n\nCheckout the source from the 'tomcat-issue-repro' branch. When the application is deployed, from the home page choose the \"JSON content\" scenario. The scenario involves one Servlet that creates a thread and dispatches to a second Servlet that sets the contentType property of the response to \"application/json\" and writes some JSON content. However, the 'Content-Type' header does not appear in the response. For details on the setup see WebAppInitializer.setupJsonSecnario(ServletContext).\n\n----\n\nFWIW, if forwarding is used from the application thread instead of a dispatch through the AsyncContext, the response contains the 'Content-Type' header. To see that modify the line that sets up servlet \"JsonA\" in WebAppInitializer.setupJsonScenario(ServletContext) to create a ForwardingAsyncServlet instead of a DispatchingAsyncServlet.", "id": 161017, "time": "2012-07-31T01:26:45Z", "creator": "rstoyanchev@yahoo.com", "creation_time": "2012-07-31T01:26:45Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 53627, "attachment_id": null, "id": 161404, "time": "2012-08-14T22:50:45Z", "creator": "markt@apache.org", "creation_time": "2012-08-14T22:50:45Z", "is_private": false, "text": "Same root cause - marking the dispatch as an include and thereby preventing the alteration of request headers.\n\n*** This bug has been marked as a duplicate of bug 53624 ***"}]