[{"count": 0, "tags": [], "bug_id": 34856, "attachment_id": null, "id": 74707, "time": "2005-05-11T10:04:35Z", "creator": "castle@iterator.dk", "creation_time": "2005-05-11T10:04:35Z", "is_private": false, "text": "Tiger includes all the jnilib JNI extensions in the classpath of the JVM.\n\nWhen you compile a JSP using Jasper on Tomcat 5, what you get in your tomcat logs looks like:\n\nerror: error reading /System/Library/Java/Extensions/libJ3D.jnilib; \njava.util.zip.ZipException: error in opening zip file\n\nJasper attempts to read the jnilib as a jar since it's in the classpath, and that doesn't work."}, {"count": 1, "tags": [], "bug_id": 34856, "attachment_id": null, "id": 76404, "time": "2005-06-14T19:07:24Z", "creator": "pratik.solanki@gmail.com", "creation_time": "2005-06-14T19:07:24Z", "is_private": false, "text": "The issue is two-fold.\n\nJasper/Tomcat seems to be adding all the files found under /System/Library/Java/Extensions to the \nclasspath. The log file has \n\nclasspath= ....../System/Library/Java/Extensions/libJ3DAudio.jnilib:/System/Library/Java/Extensions/\nlibJ3DUtils.jnilib:...\n\nThis is wrong. It should not be adding jnilib files to the classpath\n\nThe second issue is that the javac compiler is expected to ignore such invalid files in the classpath. 1.4 \ndid that. 1.5 is throwing an exception. This seems to be a regression in javac. AFAICT, this should be \nhappening on all platforms and not just on MacOSX. Can anyone confirm or deny this? Does Tomcat/\nJasper work fine on Linux/Windows/Solaris with 1.5?\n\nA few comments on the original bug report.\n\n(In reply to comment #0)\n> Tiger includes all the jnilib JNI extensions in the classpath of the JVM.\n\nNo. Jasper/Tomcat does that.\n\n> Jasper attempts to read the jnilib as a jar since it's in the classpath, and that doesn't work.\n\nNo. javac 1.5 on Tiger attempts to read the jnilib as a jar. This is a bug in javac."}, {"count": 2, "text": "*** Bug 35266 has been marked as a duplicate of this bug. ***", "creator": "remm@apache.org", "is_private": false, "id": 76458, "time": "2005-06-16T11:26:28Z", "bug_id": 34856, "creation_time": "2005-06-16T11:26:28Z", "tags": [], "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 34856, "is_private": false, "count": 3, "id": 77192, "time": "2005-07-11T21:27:55Z", "creator": "mwb87654@yahoo.com", "creation_time": "2005-07-11T21:27:55Z", "text": "To work around this bug in OS X 10.4, rename or move the offending *.jnilib files."}, {"count": 4, "tags": [], "text": "Bug filed with Sun\n\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6295519", "is_private": false, "id": 77341, "creator": "pratik.solanki@gmail.com", "time": "2005-07-15T19:51:05Z", "bug_id": 34856, "creation_time": "2005-07-15T19:51:05Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 34856, "is_private": false, "count": 5, "id": 79304, "time": "2005-09-01T20:39:10Z", "creator": "yoavs@computer.org", "creation_time": "2005-09-01T20:39:10Z", "text": "Are you suggesting we change Jasper to only add files ending in .jar to the\nclasspath?"}, {"attachment_id": null, "tags": [], "bug_id": 34856, "is_private": false, "count": 6, "id": 79310, "time": "2005-09-01T22:20:37Z", "creator": "castle@iterator.dk", "creation_time": "2005-09-01T22:20:37Z", "text": "(In reply to comment #5)\n> Are you suggesting we change Jasper to only add files ending in .jar to the classpath?\n\nI bet adding only files ending in jar would break a lot of stuff.\n\nIs it possible to catch the exceptions thrown when opening broken files from the classpath and simply log \nan error message?\n\nNot a purist solution but it would allow Jasper to continue to function in most cases."}, {"attachment_id": null, "tags": [], "bug_id": 34856, "is_private": false, "count": 7, "id": 79477, "time": "2005-09-07T04:11:25Z", "creator": "pratik.solanki@gmail.com", "creation_time": "2005-09-07T04:11:25Z", "text": "> (In reply to comment #5)\n> Are you suggesting we change Jasper to only add files ending in .jar to the\nclasspath?\n\nYes. .jar and .zip\n\n(In reply to comment #6)\n> I bet adding only files ending in jar would break a lot of stuff.\n\nWhy would it break stuff? Are class files ever found in a non-.zip/.jar file?\nThe only situation I can think of is if someone has a zip file named a.foo, i.e.\nthe file is a zip file, but the extension is not .zip.\n\nIf you did have such a situation on Windows/Solaris/Linux, you would already\nhave seen failures there (with 1.5). If the only platform we're concerned about\nis the Mac then I would say it's safe to add just .zip and .jar.\n\nAlternatively, you could go in the opposite direction and exclude all\n.jnilib/.dylib files (as a hack). That may work depending on what the user has\nlying the directory.\n\nMore fundamentally, why do we explicitly add all the files found in\n/System/Library/Java/Extensions directory to the classpath? The JVM on MacOS\nwill automatically pick up those jars so yet another option may be to just\nignore that directory while creating the huge classpath.\n\nThinking on these lines some more... it strikes me that\n/System/Library/Java/Extensions is part of the java.ext.dir system property. Any\njar/zip file found in java.ext.dir will be automatically picked up by the VM\nduring compilation/execution. What this means is that you can generalize your\nsolution by not adding any of the files in the directories specified by\njava.ext.dir to the classpath. See\n<http://developer.apple.com/releasenotes/Java/Java131MOSX10.1RN/index.html#JavaExtensions>\n(old 1.3.1 release notes but I'm sure the text is still valid for 1.5)\n\n----\nJava extension locations\n\nJava can be extended by adding custom jar, zip, and class files, as well as\nnative JNI libraries, in the location specified by the java.ext.dir property. In\nMac OS X 10.0, this property pointed to\n/System/Library/Frameworks/JavaVM.framework/Versions/1.3/Home/lib/ext, and many\nthird party applications placed their extensions there. There are two problems\nwith this scheme: installing files in the System domain requires administrative\nprivileges; and the extensions are tied to a specific version of the JDK.\n\nIn Mac OS X 10.1, java.ext.dir has been changed to contain a list of\ndirectories, and several additional locations for saving extensions have been\nadded. This new scheme makes it possible to override extensions, and provides\ndistinct locations for third party extensions, Apple extensions, and Sun JDK\nextensions. By default, Java searches for extensions, in order, in the following\ndirectories:\n\n   1. User\u2019s home directory (~/Library/Java/Extensions/)\n   2. Local domain (/Library/Java/Extensions/)\n   3. Network domain (/Network/Library/Java/Extensions/)\n   4. System domain (/System/Library/Java/Extensions/)\n   5. $JAVA_HOME\n(/System/Library/Frameworks/JavaVM.framework/Versions/Current/Home/lib/ext/)\n\nIn general, third party developers should install extensions in the Local\ndomain. Apple extensions, such as QTJava.zip, are installed in the System\ndomain, and Sun JDK extensions are installed in $JAVA_HOME.\n-----\n\n> Is it possible to catch the exceptions thrown when opening broken files from\nthe classpath and simply log \n> an error message?\n\nNot sure if it would work but it might be worth a shot."}, {"count": 8, "tags": [], "creator": "pratik.solanki@gmail.com", "attachment_id": null, "id": 79478, "creation_time": "2005-09-07T04:14:28Z", "time": "2005-09-07T04:14:28Z", "bug_id": 34856, "text": "btw, this is a Mac OS X 10.4 only bug (since there's no J2SE5.0 on 10.3).\nSomeone needs to add 10.4 to the list of OSes.", "is_private": false}, {"count": 9, "tags": [], "creator": "pratik.solanki@gmail.com", "is_private": false, "text": "J2SE 5.0 Release 3 Developer Preview 2 is out which has a fix for this bug. If\nsomeone is an ADC member, could they download (from http://connect.apple.com)\nand test this release to see if this bug is fixed.", "id": 80779, "time": "2005-10-05T07:16:32Z", "bug_id": 34856, "creation_time": "2005-10-05T07:16:32Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 34856, "attachment_id": null, "id": 81953, "time": "2005-10-31T03:53:56Z", "creator": "pratik.solanki@gmail.com", "creation_time": "2005-10-31T03:53:56Z", "is_private": false, "text": "J2SE 5.0 DP4 is available at http://connect.apple.com and has a fix for this\nbug. It would be really good if someone (need to be an ADC member) could verify\nthis bug so we know it's fixed."}, {"attachment_id": null, "tags": [], "bug_id": 34856, "is_private": false, "count": 11, "id": 94046, "time": "2006-09-24T16:26:19Z", "creator": "markt@apache.org", "creation_time": "2006-09-24T16:26:19Z", "text": "Closing this as INVALID since it is not a Tomcat issue."}]