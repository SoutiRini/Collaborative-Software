[{"count": 0, "tags": [], "bug_id": 22967, "attachment_id": null, "id": 43813, "time": "2003-09-07T14:44:06Z", "creator": "jglick@apache.org", "creation_time": "2003-09-07T14:44:06Z", "is_private": false, "text": "The situation here is a little confused because bug #10063 reports the\n*opposite* as a bug (which IMHO it is not).\n\nIn Ant 1.4.1 the following script:\n\n<project default=\"x\">\n<target name=\"x\">\n<jar jarfile=\"foo.jar\" manifest=\"foo.mf\" includes=\"somefile...\" basedir=\".\"/>\n</target>\n</project>\n\nwith the manifest:\n\n---%<---\nManifest-Version: 1.0\nClass-Path: a.jar\nClass-Path: b.jar\n\n---%<---\n\nfails:\n\nManifest is invalid: The attribute \"Class-Path\" may not occur more than once in\nthe same section\n\nThis behavior is IMHO correct, according to the published manifest specification:\n\nhttp://java.sun.com/j2se/1.4.2/docs/guide/jar/jar.html\n\nwhich states in the section \"Notes on Manifest and Signature Files\" quite\nexplicitly:\n\n\"Attribute names cannot be repeated within a section.\"\n\nAnd in fact in JDK 1.4.2 the jar tool does accept the above manifest, but with a\nprinted warning to console, and only the second attr (b.jar) is used:\n\nSep 7, 2003 10:16:30 AM java.util.jar.Attributes read\nWARNING: Duplicate name in Manifest: Class-Path\n\nHowever in Ant 1.5.x, the manifest is not only accepted, the resulting manifest\nplaced in foo.jar is syntactically invalid (e.g. running java -jar foo.jar will\nprint the same warning as above).\n\nBug #10063 says that\n\nhttp://java.sun.com/docs/books/tutorial/ext/basics/download.html\n\nclaims that you can use multiple Class-Path attributes. This is so, but the\ntutorial is simply wrong. It is only a tutorial; it is contradicted by the\nnormative specification.\n\nBug #22816 also requests related changes, with the cryptic note\n\n\"even though the use of multiple Class-Path: attributes is somewhat obscure\nbecause I need them\"\n\nWhy? It is specified that you only need one Class-Path attribute and that the\nvalues should be separated by spaces.\n\nIMHO the <jar> and <manifest> tasks should obey the manifest specification\nexactly as written. If anyone has some strange need for nonstandard behavior,\nthey are free to create a manifest as a text file some other way and include it\nin a <zip> as an undistinguished META-INF/MANIFEST.MF entry."}, {"count": 1, "tags": [], "text": "The tutorial is not the only mention of multiple Class-Path entries. Check out\nthe extension spec\n\nhttp://java.sun.com/j2se/1.4.2/docs/guide/extensions/spec.html#bundled\n\nIt contains this text \"Multiple Class-Path headers may be specified, and are\ncombined sequentially.\"\n\nWhile I would prefer to stick strictly to the jar spec, I do not believe Sun has\nbeen consistent enough to do so. It may even be due to some systems failing to\nprocess continuation lines correctly - don't know. I don't think the jar command\nline tool has historically done very much manifest checking, which probably has\nnot helped.\n\nGiven the current situation, I think support for multiple Class-Path headers is\nrequired. \n\nThere are a few options though - a warning about multiple entries and possibly\nproducing a single output Class-Path could be done.\n\nPlease refer to this bug report for more info\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=4683\n\nI'll mark as WONTFIX for now, but please feel free to reopen and discuss", "attachment_id": null, "id": 43823, "creation_time": "2003-09-08T00:57:39Z", "time": "2003-09-08T00:57:39Z", "creator": "conor@apache.org", "bug_id": 22967, "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 22967, "is_private": false, "id": 43843, "time": "2003-09-08T15:48:20Z", "creator": "jglick@apache.org", "creation_time": "2003-09-08T15:48:20Z", "tags": [], "text": "Thanks, failed to find bug #4683 when searching before.\n\nSeems like Java #4842483 is the main justification for leaving the hack in:\n\nhttp://developer.java.sun.com/developer/bugParade/bugs/4842483.html\n\nHowever note that the default Manifest parsing code will anyway ignore all but\nthe last Class-Path attribute. Only an app server (e.g.) which specially\nrecognizes this problem, and parses an (illegal) manifest itself, could merge\nmultiple Class-Path headers.\n\nSeems that the extension spec still contradicts the lower-level manifest spec\n(and reality) in JDK 1.4.2.\n\nA complicated compromise would be:\n\n1. Forbid (w/ BuildException) any duplicated attributes *except* Class-Path in\nthe main attrs section, which would be automatically merged (concatenated with\nspace separators). In the case of the Class-Path exception, log a warning that\nthe multiple Class-Path scenario while recommended by some documents in fact\ncontradicts the manifest spec (and doesn't work in the Sun JRE either).\n\n2. Print a warning whenever any attr value (incl. a merged or unmerged\nClass-Path) exceeds 512 bytes: continue, and generate a valid manifest based on\nit, but warn the user that the Sun JRE might not accept it.\n\nYucky."}, {"count": 3, "tags": [], "creator": "conor@apache.org", "attachment_id": null, "text": "I think we are OK here.\n\nFor your point 1, this is mostly already the case. Only Class-Path headers may\nbe duplicated in a section. All others will generate the original exception you\nsaw in Ant 1.4.x. We don't currently warn about duplicate Class-Path headers but\nwe can add that. Class-Path attributes are not merged but are retained as\nseparate entities and output in that form. An option to coalesce into a single\nentry could be supported. Should it be mandatory? Probably not.\n\nFor your point 2, this is not necessary. Ant will never generate a manifest\nwhich is longer than 72 bytes long, using continuation lines where necessary.\nThe 512 byte limit in the JDK manifest parsing code relates to individual lines,\nnot the total attribute value.", "id": 43857, "time": "2003-09-09T01:21:22Z", "bug_id": 22967, "creation_time": "2003-09-09T01:21:22Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 22967, "is_private": false, "id": 43862, "time": "2003-09-09T01:32:41Z", "creator": "jglick@apache.org", "creation_time": "2003-09-09T01:32:41Z", "tags": [], "text": "Re. #1 - remember that if the Class-Path entries are retained as separate lines,\nall but the first will not work (at least in the Sun JRE, and any JRE that uses\nthe same java.util.jar.* codebase).\n\nRe. #2 - yes, my mistake."}]