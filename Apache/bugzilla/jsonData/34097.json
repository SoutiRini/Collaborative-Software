[{"attachment_id": null, "tags": [], "creator": "ray@palamida.com", "text": "Implementations of InputStream.read() are supposed to return a single unsigned\nbyte of content (that is, an integer in the range of 0 to 255 representing a\nsingle byte), or -1 in the event the end of the stream is reached. \nTarInputStream.read() returns these bytes signed (that is integer values in the\nrange of -128 to 127).  This causes too many problems to list, but most\nobviously, causes some streams to be closed prematurely due to -1 being returned\nas content instead of 255.  \n\nBelow is a simple fix.\n\n--- TarInputStream.java Tue Jan 11 18:41:21 2005\n+++ TarInputStream.java Sun Mar 20 22:27:50 2005\n@@ -291,13 +291,13 @@\n     public int read() throws IOException {\n         int num = this.read(this.oneBuf, 0, 1);\n \n         if (num == -1) {\n             return num;\n         } else {\n-            return (int) this.oneBuf[0];\n+            return (this.oneBuf[0] + 256) & 0xFF;\n         }\n     }", "count": 0, "id": 55025, "time": "2005-03-21T07:53:54Z", "bug_id": 34097, "creation_time": "2005-03-21T07:53:54Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 34097, "text": "Strange that nobody has seen that before, probably everybody has been using the\narray-arg methods.\n", "id": 53112, "time": "2005-03-21T11:05:43Z", "creator": "bodewig@apache.org", "creation_time": "2005-03-21T11:05:43Z", "is_private": false, "attachment_id": null}]