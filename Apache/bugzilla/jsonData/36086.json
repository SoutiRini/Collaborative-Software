[{"count": 0, "tags": [], "bug_id": 36086, "is_private": false, "text": "(I am using Ant 1.6.1 on Windows 2000 Professional)\n\nApplying FixCRLF to a file by an admin-user on windows makes the file\nnot-accessible to restristed-user. My tests reveal that the ACL gets\nmessed up somehow so that the file that we previously accessible to\nrestricted-user becomes unaccessible to restricted-user if fixCRLF\nresults in file being modified.\n\nHere is how Cygwin displays the file permissions before and after\nthe fixCRLF operation:\n\nOriginal File:\n-rwx------+   1 Administ None        78906 Jul 18 07:52 file.txt\n\nAfter fixCRLF by admin (as seen by restricted-user)\n----------    1 ???????? ????????    78907 Aug  8 16:03 file.txt\n\nAll the permissions are gone for the restricted user. The restricted user\ncan no longer view/edit/copy/rename this file. The funny thing is that the\nrestricted-user can delete this file successfully (However, there is no\nundo for this operation).\n\nI found Bug 34764 (Zip task sets '000' permission on UNIX) and Bug 23414 (using\nzip task on windows makes shell script unusable in linux) that discussed\nsomething about filemode/dirmode. I am not sure, if any of this is related.", "id": 78238, "time": "2005-08-08T23:12:40Z", "creator": "s.jain@gtisoft.com", "creation_time": "2005-08-08T23:12:40Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "This is a cantfix/wontfix. Applying fixcrlf creates a new file when it is\nupdated, and that file gets whatever default permissions that user has, be they\nunix or windows. There are no API calls in java to view/change these values, you\nget what the JVM is started with. \n\nto complicate life more, cygwin uses winnt ACLs to provide an imitation of unix\nsecurity rather than nt security. Ant is not a cygwin program, and is even more\nisolated from what is going on. You will probably find all files are unreadable\nby users without the appropriate rights. \n\nWhat may work is <chmod> afterwards. If it doesnt, there is nothing left in the\njava world that can address your problem. ", "is_private": false, "id": 78380, "creator": "stevel@apache.org", "time": "2005-08-10T20:59:03Z", "bug_id": 36086, "creation_time": "2005-08-10T20:59:03Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "mbenson@apache.org", "text": "Steve, I am going to reopen just long enough (at least) to get this out there.  \nThe only possibility that occurs to me here is: what if, when we decide to \noverwrite the existing file, we _modify_ the existing file instead of deleting \nit and copying over the temp file?  That -might- preserve the existing \npermissions, no?", "id": 78381, "time": "2005-08-10T21:23:29Z", "bug_id": 36086, "creation_time": "2005-08-10T21:23:29Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "Matt's solution would be difficult\nto implement.\nMarking as WONTFIX.", "attachment_id": null, "bug_id": 36086, "id": 97076, "time": "2006-12-19T06:30:08Z", "creator": "peterreilly@apache.org", "creation_time": "2006-12-19T06:30:08Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 36086, "is_private": false, "id": 123111, "attachment_id": null, "creator": "bodewig@apache.org", "creation_time": "2008-12-05T02:39:11Z", "time": "2008-12-05T02:39:11Z", "text": "*** Bug 36440 has been marked as a duplicate of this bug. ***"}]