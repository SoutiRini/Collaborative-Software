[{"count": 0, "tags": [], "bug_id": 10560, "attachment_id": null, "text": "The documentation states that an hourly rolling file appender rolls \napproximately on the hour.\nI am surprised that nobody complained till now that if no events occur for that \nparticular appender after the rolling time, it could actually never roll over \neven if the application is still running, or it could roll over after several \nrolling periods of time.\nThe particular application that I work on consolidates several hourly log files \nin a tar file 5 minutes after each hour, it is a problem that even at this time \nsome logfiles may be not rolled over yet.\nIs version 1.2 fixing this problem?\nThanks, Carol", "id": 19124, "time": "2002-07-08T17:16:17Z", "creator": "cszabo@ups.com", "creation_time": "2002-07-08T17:16:17Z", "is_private": false}, {"count": 1, "tags": [], "creator": "mwomack@apache.org", "attachment_id": null, "id": 19136, "time": "2002-07-08T20:27:42Z", "bug_id": 10560, "creation_time": "2002-07-08T20:27:42Z", "is_private": false, "text": "I believe this problem has been reported previously, but it is not fixed in the \ncurrent version of 1.2.\n\nCeki, this would be a good example of something that could use the TimerMgr we \nhave discussed previously.  That way it would not consume a thread to make the \nroll over happen.  I think we should add the TimerMgr to 1.3."}, {"count": 2, "tags": [], "bug_id": 10560, "attachment_id": null, "text": "Carol,\n\nWhile it is true true that roll overs will not necessarily happen at\nthe top of the hour (or whatever the period is), when a rollover\nhappens, it will be correct. In other words, all logging output will\nbe placed in the correct files according to their date.\n\nThe problem you observe is due to the fact that rollover for period n\noccurs at the arrival of the first logging event *after* the\ncompletion of period n. The first logging event after the completion\nof period n can arrive minutes, hours, or even days after the\ncompletion of period n. \n\nWould it be possible for you to consolidate files 1/2 hour after the\ntop of the hour instead of 5 minutes?\n\nMark,\n\nYes, the rollover problem can indeed be solved with a TimerTask.\n", "id": 19140, "time": "2002-07-08T21:28:47Z", "creator": "ceki@apache.org", "creation_time": "2002-07-08T21:28:47Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 10560, "attachment_id": null, "text": "I perfectly understand the reasons why you do what you do (it is much easier to \nimplement and cheaper as resource requirements) and I understand how the \nDailyRollingAppender works, but in my case some logs may not get entries for a \ncouple of hours during the night, and I need my previous's day's logs \nconsolidated before 1am when an enterprise wide log backup is happening.\nThat is why now I am working on a special appender class that uses one thread \nto rollover timely all appenders of that class. Probably, once \nthe \"TimerManager\" kicks in, it will be obsolete, but I need this Appender \nfaster than that.\nBest,\nCarol", "id": 19163, "time": "2002-07-09T13:56:48Z", "creator": "cszabo@ups.com", "creation_time": "2002-07-09T13:56:48Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 10560, "attachment_id": null, "text": "I have a similar problem occurring (using version 1.1.1). The daily rollover \ntime that is specified for my log is midnight and the application server has an \nauto restart at 2 a.m. everyday. The log file specified for the appender is \ncalled egi.log and I have a DatePattern='.'yyyy-MM-dd.  \n\nIf there is no log activity between midnight and the restart at 2 a.m. then the \nprevious days log activity will not rollover into a new log with a name of \negi.log.yyyy-MM-dd (corresponding to the previous days date) but will remain in \negi.log. If there is no log activity again the next day between midnight and \nthe 2 a.m. restart then the same thing will happen again. No data is lost, but \nseveral days (or more) logging can end up in the one log file. When the file \ndoes eventually get rolled over (due to midnight to 2 a.m. activity) the \nseveral days worth of log activity remains in the newly created egi.log.yyyy-MM-\ndd file. This behaviour seems contrary to comments made on 2002-07-08 21:28 \n('all logging output will be placed in the correct files according to their \ndate').\n\nIt would appear that an egi.log.yyyy-MM-dd file only gets created when there is \nsome log activity between midnight and the 2 a.m. application server restart.\n\nIs this behaviour due to be fixed in a future 1.2 or 1.3 release?\n\nThanks,\n\nDavid", "id": 25736, "time": "2002-11-05T23:45:12Z", "creator": "david.corbett@suncorpmetway.com.au", "creation_time": "2002-11-05T23:45:12Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 10560, "attachment_id": null, "text": "A quick fix to daves problem is to:\n\nDo a rollover on the shutdown of an application. This would mean that future \nrollovers might have to append to an already existing file(rename will fail or \nnuke) if there are multiple shutdowns within a rollover period.\n\nA system crash would mean no rollover, but because we are not nuking files, the \ninfo will not be lost, just in the wrong place. \n\nNot the most elegant, but it does get closer to what we would like!", "id": 42669, "time": "2003-08-13T10:43:40Z", "creator": "piedcow@hotmail.com", "creation_time": "2003-08-13T10:43:40Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 10560, "attachment_id": null, "text": "For Dave's problem, we added a simple class that is run in a script before the \napplication restarts, that does the roll itself, it handles the case of no \nactivity, and could handle the crash case if needed. ", "id": 42685, "time": "2003-08-13T16:07:56Z", "creator": "rich.gibbs@enhansiv.com", "creation_time": "2003-08-13T16:07:56Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 10560, "attachment_id": null, "text": "Rich that case suffices for apps that are running all the time. However for \napps that shutdown before the end of a rollover period and restart 1 + x  \nrollover periods later results in logging to events to files x periods ahead of \nthe event.\n\nRollover on shutdown ensures logging to correct period. I think a combination \nof rollover on startup and shutdown would mean the incorrectly logged events \nare on crash and where restart is not within the same rollover period.\n\nUnlikely since most people restart their apps straight away on crash. ", "id": 42718, "time": "2003-08-14T08:11:41Z", "creator": "piedcow@hotmail.com", "creation_time": "2003-08-14T08:11:41Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 10560, "attachment_id": null, "text": "If two servers are writing on the same log file, when the time comes to remame \nthe file, the first server that tries to rename the file fails because the \nother server is locking (still writing) the file.\n\nIn this case you loose log information, up to the time the other server rename \nthe file.\n\nThis happen often during the night because servers are inactive and the rename \nprocedure is executed at the first request after the rool-over period has been \nreached (that can be much later).\n\nPersonal note:\n\nThe appender should write directly on a file named with the data in it \n(file.<date>.log and simply open a new file when time comes to switch.", "id": 44116, "time": "2003-09-12T17:26:58Z", "creator": "m.stefanutti@reply.it", "creation_time": "2003-09-12T17:26:58Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 10560, "attachment_id": null, "text": "Hi,\n\nI am using log4j 1.2.8 for a long time now. I am using the \nDailyRollingAppender. Uptil now I was using the rolling pattern as '.'yyyy-MM-\ndd but due to the size of the log file getting large, I modified the rolling \nformat to '.'yyyy-MM-dd-HH\n\nAfter doing this, the files started rolling on a hourly basis, but the backup \nof the rolled files is not getting created. The logs are getting lost :'(\n\nRegards\n\nKartik\n\nCan you tell me what is the error due to which the backup files are not \ngetting created.", "id": 60766, "time": "2004-07-18T14:25:22Z", "creator": "consultforjava@yahoo.com", "creation_time": "2004-07-18T14:25:22Z", "is_private": false}, {"count": 10, "tags": [], "creator": "yoavs@computer.org", "attachment_id": null, "id": 68423, "time": "2004-12-13T20:47:07Z", "bug_id": 10560, "creation_time": "2004-12-13T20:47:07Z", "is_private": false, "text": "log4j 1.3's new RollingPolicy and related classes solve these problems, so I'm \nclosing the issue.  All of you raised good points, solutions, and ideas: but \nBugzilla is not a good discussion forum.  Please try out log4j 1.3 and comment \non the log4j-user mailing list as you see fit.  "}]