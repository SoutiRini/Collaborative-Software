[{"count": 0, "tags": [], "creator": "mikemci@us.ibm.com", "text": "Some Signature consumers are not able to accept Signatures containing \nwhitespace in certain places even though the standard allows for it.\n\nAn example of a solution would be:\n\npublic static void addReturnToElement(Element e) {\n  if (null == System.getProperty\n(\"org.apache.xml.security.util.XMLUtils.ignoreAddReturnToElement\")) {\n    Document doc = e.getOwnerDocument();\n    e.appendChild(doc.createTextNode(\"\\n\"));\n  }\n}", "id": 101469, "time": "2007-04-05T09:55:20Z", "bug_id": 42061, "creation_time": "2007-04-05T09:55:20Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 42061, "text": "Fixed. If you set the system property named\n\"org.apache.xml.security.ignoreLineBreaks\" to true, line breaks will not be\ninserted in the Signature. This includes line breaks after elements and in\nbase64 encoded values.", "id": 108985, "time": "2007-10-04T07:11:26Z", "creator": "sean.mullan@oracle.com", "creation_time": "2007-10-04T07:11:26Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "coheigea@apache.org", "text": "Created attachment 23167\nA patch to allow programatic disabling of line breaks\n\n\nThis is a patch to add a programatic means of disabling line breaks, rather than just polling a system property statically. I also disabled some printlns that were introduced in revision 609737.", "id": 124315, "time": "2009-01-23T06:03:39Z", "bug_id": 42061, "creation_time": "2009-01-23T06:03:39Z", "is_private": false, "attachment_id": 23167}, {"count": 3, "tags": [], "creator": "sean.mullan@oracle.com", "text": "Thanks for the patch, but I was thinking that you were going to add a method that would enable this feature on a per-signature basis. Since it is a static method, it affects all applications which is not ideal. I would suggest adding a non-static method to the XMLSignature class.", "id": 124438, "time": "2009-01-28T07:42:09Z", "bug_id": 42061, "creation_time": "2009-01-28T07:42:09Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 42061, "attachment_id": null, "text": "Hi Sean,\n\nSorry for the delay in replying to this.\n\n\"Thanks for the patch, but I was thinking that you were going to add a method\nthat would enable this feature on a per-signature basis. Since it is a static\nmethod, it affects all applications which is not ideal. I would suggest adding\na non-static method to the XMLSignature class.\"\n\nThe problem is that the existing method of disabling line breaks is static, as it polls the system property statically. The existing method *already* affects all applications, my patch was just a means of providing programmatic access to changing this value. In my particular case I'm fine with disabling it for all applications as I don't want any new lines inserted in any of the DOM created by XML-Security, e.g. not just ds:Signature but also ds:KeyInfo elements.\n\nMy point is that enforcing whether to insert new-lines or not by polling a system property once is unnecessarily restrictive, as it doesn't give the programmer any control over this. \n\nI guess ideally there should be no static variable which controls this for all applications, and it should be done by non-static methods on each of the classes. \n\nThanks,\n\nColm.", "id": 126185, "time": "2009-04-10T04:27:34Z", "creator": "coheigea@apache.org", "creation_time": "2009-04-10T04:27:34Z", "is_private": false}, {"count": 5, "tags": [], "creator": "sean.mullan@oracle.com", "text": "\n(In reply to comment #4)\n\n> My point is that enforcing whether to insert new-lines or not by polling a\n> system property once is unnecessarily restrictive, as it doesn't give the\n> programmer any control over this. \n\nAgree. Personally, I'm not a big fan of system properties. They have their place of course, and are good for workarounds where the API can't be changed, or you can't or don't want to change your application. In hindsight I think I should have initially added an API to control this behavior on a per signature basis. I think adding a static method to toggle this behavior could cause more harm than good. \n\n> I guess ideally there should be no static variable which controls this for all\n> applications, and it should be done by non-static methods on each of the\n> classes. \n\nSo what I'll do is leave this open to add a method on a per Signature basis, as that seems easy enough to add for the next release.", "id": 126297, "attachment_id": null, "bug_id": 42061, "creation_time": "2009-04-16T12:30:11Z", "time": "2009-04-16T12:30:11Z", "is_private": false}, {"count": 6, "attachment_id": 23692, "creator": "coheigea@apache.org", "text": "Created attachment 23692\nA new patch for this issue\n\nHi Sean,\n\nI had a look at disabling line breaks on a per-signature basis. It's more tricky than it appears, as there are lots of calls to insert line breaks in various constructors, and you quickly end up with a lot of work. \n\nPlease see attached for a revised (and simple!) patch. It just fixes the case in Base64 for automatically inserting line breaks when the encoded length was greater than 76. So even when line breaks were disabled via the System property, xml-sec was still inserting line-breaks e.g. in <ds:Modulus>...</ds:Modulus>.\n\nI'm happy just to leave things as they are, and to close this JIRA once the new patch is applied.\n\nColm.", "id": 127164, "time": "2009-05-19T08:50:24Z", "bug_id": 42061, "creation_time": "2009-05-19T08:50:24Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 42061, "attachment_id": null, "text": "Patch looks good. I have integrated it. Thanks!", "id": 127275, "time": "2009-05-22T05:24:12Z", "creator": "sean.mullan@oracle.com", "creation_time": "2009-05-22T05:24:12Z", "is_private": false}]