[{"count": 0, "tags": [], "bug_id": 27780, "attachment_id": null, "text": "Hi,\n\nSometimes a web based application expects to receive a request with content \ntype multipart/form-data and does not accept a simple post request. A browser \ncreates a multipart/form-data request even if no file is uploaded, if the user \nleaves the upload-field empty. However, with jmeter it is not possible to \ncreate a multipart/form-data request without uploading a file, jmeter just \nsends a simple post form. It would be nice if there was a checkbox in the GUI \nto create a multipart/form-data request even without uploading a file.\n\nAlso, while recording a workflow with a multipart/form-data request without \nuploaded file with the jmeter proxy, the proxy resends it as a simple request. \nIt would be nice if the content-type of the original request would be preserved \nin the call by the proxy. Even more problematic is that the HTTP header still \nproclaims the sent request to have the content type multipart/form-data, even \nif the body does not contain the multipart boundary.\n\nThen, if a file is choosen which is not present in the directory where jmeter \nwas started, the Jmeter proxy displays a FileNotFoundException in the Browser, \nalthough the proxy is located on the same host as the browser and the full path \nwas given when selecting the file. To prevent this error, I had to put a file \nwith the same name in the directory where jmeter was started from. If possible, \nit would be nice if the jmeter proxy would use the full path when re-sending \nthe request to the server. (I don't know enough about proxies: probably the \nimage is already contained in the request sent by the browser, so it is not \nnecessary to access the file system again ???)\n\nCheers, Thomas", "id": 54230, "time": "2004-03-18T16:16:26Z", "creator": "fischer@seitenbau.de", "creation_time": "2004-03-18T16:16:26Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 27780, "attachment_id": null, "text": "I notice a problem in org.apache.jmeter.protocol.http.sampler.PostWriter at line \n137 in setHeaders.(line 98 at version 2.0.1)\n\nThe filename should be acquired from getFilename().\n\nThe filename should look like :\nString filename = sampler.getFilename();\nand not :\nString filename = sampler.getFileField();\n\nThanks,\n\nTakuya", "id": 66202, "time": "2004-10-31T13:10:14Z", "creator": "tshimizu@ga2.so-net.ne.jp", "creation_time": "2004-10-31T13:10:14Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 27780, "is_private": false, "text": "Created attachment 19792\nSuggested patch\n\nThis is a sugggested patch for improving the HTTP POST request functionality.\n\nThis patch adds support for using multipart/form-data even if no file is being\nuploaded. I have not currently added a property in the jmeter.properties file\nto control that you want multipart/form-data. In the start, I want to let the\nProxy Server create \"HTTP Samplers\" that are using multipart/form-data.\n\nMore headers are set both on the request, and in the multiparts, for both\nHTTPSampler and HTTPSampler2. That means that both content-type, and\ncontent-length are now set.\n\nAlso the encoding used are set for the multiparts.\nI think this means that different encodings are now supported for POSTs. You\nhave to set the \"content encoding\" in the \"HTTP Request\" gui, to have the POST\nsent with the correct encoding. This applies for both x-www-form-urlencoded and\nmultipart/form-data. The \"HTTPSamplerBase.getQyeryString\" could not be used,\nsince that always encodes to UTF-8, also the parameter values.\n\nBoth the HTTPSampler and HTTPSampler2 is changed, so that the \"querystring\"\nwhich is set on the created sample, more fully represents what is being sent to\nthe web server. For multipart/form-data, that means that the multiparts are\ndisplayed, except the actual file content.\n\nIt changes PostWriter, by changing methods to non-static, i.e. requiring that\nPostWriter is instantiated. This is needed to keep state set in \"setHeaders\",\nand reuse that state when doing \"sendPostHeaders\".\n\nWhat I currently do not like about the patch :\nHTTPSampler and HTTPSampler2 are using different \"default encoding\" if none is\nspecified in the \"HTTP Request\" GUI. HTTPSampler uses iso-8859-1, while\nHTTPSampler2 uses us-ascii. I think both should use the same default encoding.\nI think the default should be iso-8859-1, I think that is what most browsers\nuse by default.\n\nThe HTTPSampler currently provides the full path to the file in the header of\nthe file multipart. I think it is correct to only include the filename. That is\nalso what the HTTPSampler2 does.\n\nI am not 100% confident that I am handling the \"httpargument.isalwaysencoded\"\ncorrectly. As of now, I ignore it, and always encode the parameter name and\nvalue. I think the \"isalwaysencoded\" only applies to parameters that should be\nused in a HTTP GET request. But I might very well be wrong.\n\nConclusion :\nI think this patch has potential for solving a number of issues related to HTTP\nPOST handling. But please have a review of the code, and ask and comment about\nthe code. I'll also look into making some automated tests for HTTP POST\nhandling.", "id": 100857, "time": "2007-03-24T11:56:33Z", "creator": "alf@i100.no", "creation_time": "2007-03-24T11:56:33Z", "attachment_id": 19792}, {"count": 3, "tags": [], "bug_id": 27780, "text": "Created attachment 19814\nPatch for unit test for svn version of PostWriter\n\nThis adds unit tests for the PostWriter that is currently in SVN.\nThe code lines with // at the very start of the line, will fail in this\nversion, if uncommented.\nThe whole \"testSendFormData_Multipart\" will also fail, since there is no way to\ntell HTTPSampler to write a multipart/form-data request, if you are not\nuploading files.\n\nThe \"testSendPostData_FileAsBody\" will also fail for the last test, because the\ncurrent PostWriter writes the file content to the body, if both a filename and\nsome form data are present in the HTTPSampler.", "id": 101034, "time": "2007-03-27T06:29:07Z", "creator": "alf@i100.no", "creation_time": "2007-03-27T06:29:07Z", "is_private": false, "attachment_id": 19814}, {"count": 4, "tags": [], "bug_id": 27780, "attachment_id": 19815, "is_private": false, "id": 101035, "time": "2007-03-27T06:36:40Z", "creator": "alf@i100.no", "creation_time": "2007-03-27T06:36:40Z", "text": "Created attachment 19815\nUnit test for the suggested updated PostWriter / HTTPSampler in patch above\n\nThis is unit tests for the suggested updated PostWriter / HTTPSampler, the\npatch for that is in this same bugzilla issue.\n\nThis unit tests passes all tests.\nSo it shows that the content length is set correctly for all requests.\nAnd it shows that multipart/form-data works even if you have no files to\nupload.\n\nAnd it shows that posting of UTF-8 values as part of multipart/form-data works,\nwhich is not working in the current PostWriter.\nThe lines 113 and 114 in the unit test for the current PostWriter looks like\nthis (i.e. look in the patch for unit test for current PostWriter)\n//\t  checkContentLength(connection, expectedFormBody.length);\t  \n//\t  checkArraysHaveSameContent(expectedFormBody,\nconnection.getOutputStreamContent());\nbecause it fails for current PostWriter.\n\nAnd it shows that if a HTTPSampler contains both form parameters, and just a\nfilename, then only the form parameters will be sent, and not the file as post\nbody."}, {"count": 5, "tags": [], "bug_id": 27780, "text": "Created attachment 19826\nPatch for unit test for current svn version of PostWriter\n\nPatch for unit test for svn version of PostWriter.\nThis adds on the patch for current svn version of PostWriter, by adding test\ncases for adding HTTPArguments with values which have been urlencoded by hand\nadding it to the HTTPSampler.\n\nThis patch also contains a new class TestHTTPSamplersAgainstHttpMirrorServer,\nwhich executes real samples against the HttpMirrorServer. The test does not\ncare about what reply one gets from the HttpMirrorServer, but it allows to test\non the request headers and content created by the HTTPSampler and HTTPSampler2.\n\n\nAs before, the lines starting with // at the very beginning of the lines, are\neither tests which fail with current svn versions of the HTTPSampler/2 code, or\nthat depends on new code being in place.", "id": 101095, "time": "2007-03-28T05:55:26Z", "creator": "alf@i100.no", "creation_time": "2007-03-28T05:55:26Z", "is_private": false, "attachment_id": 19826}, {"count": 6, "tags": [], "bug_id": 27780, "text": "Created attachment 19827\nUpdated patch for unit testing for new suggested PostWriter/HTTPSampler/2\n\nThis patch contains updated PostWriterTest.java for the suggested new\nPostWriter and HTTPSampler and HTTPSampler2, i.e. the \"main\" suggested patch of\nthis bugzilla entry.\n\nIt also contains the TestHTTPSamplersAgainstHttpMirrorServer, where all tests\npasses when the suggested patch for HTTPSampler, PostWriter and HTTPSampler2 is\nin place.", "id": 101096, "time": "2007-03-28T05:58:43Z", "creator": "alf@i100.no", "creation_time": "2007-03-28T05:58:43Z", "is_private": false, "attachment_id": 19827}, {"count": 7, "tags": [], "bug_id": 27780, "text": "Created attachment 19846\nUpdated patch for unit testing of current svn version of PostWriter/HTTPSampler/2\n\nUpdated, and I think final, version of unit testing of PostWriter, HTTPSampler\nand HTTPSampler2.\n\nCompared to the previous suggested patch for unit testing og current svn\nversions of PostWriter, HTTPSampler and HTTPSampler2, this patch adds checking\nagainst the reply sent from the mirror server. The HTTP Mirror server is\nsending back the request headers and body we sent to the mirror server.\nI have also added a test on using JMeterVariables, to replace values in form\ndata., i.e. use variables as part of a form parameter value.", "id": 101214, "time": "2007-03-30T04:21:31Z", "creator": "alf@i100.no", "creation_time": "2007-03-30T04:21:31Z", "is_private": false, "attachment_id": 19846}, {"count": 8, "tags": [], "creator": "alf@i100.no", "attachment_id": 19847, "text": "Created attachment 19847\nUpdated patch for unit testing for new suggested PostWriter/HTTPSampler/2\n\nUpdated, and I think final, version of unit testing of PostWriter, HTTPSampler\nand HTTPSampler2.\n\nCompared to the previous suggested patch for unit testing of the suggested new\nversions of PostWriter, HTTPSampler and HTTPSampler2, this patch adds checking\nagainst the reply sent from the mirror server. The HTTP Mirror server is\nsending back the request headers and body we sent to the mirror server.\nI have also added a test on using JMeterVariables, to replace values in form\ndata., i.e. use variables as part of a form parameter value.", "id": 101215, "time": "2007-03-30T04:24:03Z", "bug_id": 27780, "creation_time": "2007-03-30T04:24:03Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 27780, "attachment_id": null, "is_private": false, "id": 101270, "time": "2007-03-31T09:42:48Z", "creator": "sebb@apache.org", "creation_time": "2007-03-31T09:42:48Z", "text": "(In reply to comment #7)\n> Created an attachment (id=19846) [edit]\n> Updated patch for unit testing of current svn version of\n> PostWriter/HTTPSampler/2\n> Updated, and I think final, version of unit testing of PostWriter, \nHTTPSampler\n> and HTTPSampler2.\n> Compared to the previous suggested patch for unit testing og current svn\n> versions of PostWriter, HTTPSampler and HTTPSampler2, this patch adds \nchecking\n> against the reply sent from the mirror server. The HTTP Mirror server is\n> sending back the request headers and body we sent to the mirror server.\n> I have also added a test on using JMeterVariables, to replace values in form\n> data., i.e. use variables as part of a form parameter value.\n\nWhen the above patch is applied, I get 4 test failures:\ncheckContentTypeUrlEncoded(PostWriterTest.java:821)\ncheckContentTypeMultipart(PostWriterTest.java:817)\ncheckContentLength(PostWriterTest.java:825)\ncheckPostRequestFormMultipart(TestHTTPSamplersAgainstHttpMirrorServer.java:295)\nAre these expected? The code does not indicate so."}, {"count": 10, "tags": [], "bug_id": 27780, "attachment_id": 19859, "text": "Created attachment 19859\nUpdated patch for unit testing of current svn version of PostWriter/HTTPSampler/2\n\nIn this updated patch for unit testing of current svn version of\nPostWriter/HTTPSampler/2, I have commented out all tests that were failing\nexpectedly.\n\nSince PostWriter/HTTPSampler/2 does not produce multipart/form-data requests,\nif only form parameters are present, the whole method for testing that has been\ncommented out.\n\nI have also commented out tests in PostWriter for testing sending parameter\nwhich has been url decoded beforehand, and when the request is made using a\ncontent type different from UTF-8, because that is not working in the current\nPostWriter version.\n\nSo if you now apply this patch, all the unit tests should pass.", "id": 101295, "time": "2007-04-01T06:48:01Z", "creator": "alf@i100.no", "creation_time": "2007-04-01T06:48:01Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 27780, "attachment_id": null, "text": "Applied patch 19859; SVN r524624.", "id": 101303, "time": "2007-04-01T09:17:08Z", "creator": "sebb@apache.org", "creation_time": "2007-04-01T09:17:08Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 27780, "attachment_id": null, "is_private": false, "id": 101308, "time": "2007-04-01T15:10:00Z", "creator": "sebb@apache.org", "creation_time": "2007-04-01T15:10:00Z", "text": "Patch 19792 applied to SVN (r524696).\nThis required some fixes to the test cases for the additional headers."}, {"text": "Created attachment 19892\nFix bug in PostWriter2 for content transfer encoding, and add unit tests\n\nAttached is patch for PostWriter, to fix bug where \"Content-Transfer-Encoding:\n8bit\" was sent instead of the correct \"Content-Transfer-Encoding: binary\" for\nthe file multipart. This makes PostWriter work like HTTPSampler2.\n\nI have also enabled more of the unit tests in\nTestHTTPSamplersAgainstHttpMirrorServer, which were commented out. And I have\nalso added unit tests for file upload in that class, although I am not doing as\nmuch testing on the post body sent as I wish I had.\n\nI have also changed the ENCODING of PostWriter to \"ISO-8859-1\", i.e. uppercase.\nI do not think it is case sensitive, but I think it is most common to use\nuppercase.\nSee for example :\nhttp://www.iana.org/assignments/character-sets which says \"Alias: ISO-8859-1\n(preferred MIME name)\"\n\nI have also made a constant HTTP_ENCODING for both PostWriterTest and\nTestHTTPSamplersAgainstHttpMirrorServer.", "tags": [], "bug_id": 27780, "is_private": false, "count": 13, "id": 101337, "time": "2007-04-02T12:36:53Z", "creator": "alf@i100.no", "creation_time": "2007-04-02T12:36:53Z", "attachment_id": 19892}, {"count": 14, "tags": [], "bug_id": 27780, "text": "(In reply to comment #13)\n> Created an attachment (id=19892) [edit]\n> Fix bug in PostWriter2 for content transfer encoding, and add unit tests\n> Attached is patch for PostWriter, to fix bug where \"Content-Transfer-\nEncoding:\n> 8bit\" was sent instead of the correct \"Content-Transfer-Encoding: binary\" for\n> the file multipart. This makes PostWriter work like HTTPSampler2.\n> I have also enabled more of the unit tests in\n> TestHTTPSamplersAgainstHttpMirrorServer, which were commented out. And I have\n> also added unit tests for file upload in that class, although I am not doing \nas\n> much testing on the post body sent as I wish I had.\n> I have also changed the ENCODING of PostWriter to \"ISO-8859-1\", i.e. \nuppercase.\n> I do not think it is case sensitive, but I think it is most common to use\n> uppercase.\n> See for example :\n> http://www.iana.org/assignments/character-sets which says \"Alias: ISO-8859-1\n> (preferred MIME name)\"\n> I have also made a constant HTTP_ENCODING for both PostWriterTest and\n> TestHTTPSamplersAgainstHttpMirrorServer.\n\nApplied", "id": 101341, "time": "2007-04-02T14:40:40Z", "creator": "sebb@apache.org", "creation_time": "2007-04-02T14:40:40Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 27780, "text": "Created attachment 19936\nSuggested patch to allow user to choose to use multipart/form-data for post, as well as HTTP Proxy server\n\nThe suggested patch adds an option in the HTTP Request GUI, to allow the user\nto choose wether a HTTP POST request should use multipart/form-data or\napplication/x-www-form-urlencoded.\nIf a file is uploaded, the multipart/form-data is used whatever the flag is set\nto.\n\nThis patch also changes the HTTP Proxy server, so that if the proxy sees a HTTP\nPOST multipart/form-data request, it will insert such a request into the test\nplan.\n\nIf this patch is applied, I think this bug can be closed as \"fixed\".", "id": 101613, "time": "2007-04-12T06:15:21Z", "creator": "alf@i100.no", "creation_time": "2007-04-12T06:15:21Z", "is_private": false, "attachment_id": 19936}, {"count": 16, "tags": [], "bug_id": 27780, "attachment_id": null, "is_private": false, "id": 101713, "time": "2007-04-14T04:59:17Z", "creator": "sebb@apache.org", "creation_time": "2007-04-14T04:59:17Z", "text": "Patch 19936 applied to SVN in r528796"}]