[{"count": 0, "tags": [], "creator": "carnold@apache.org", "attachment_id": null, "id": 90566, "time": "2006-06-23T21:30:43Z", "bug_id": 39895, "creation_time": "2006-06-23T21:30:43Z", "is_private": false, "text": "apr_os_strerror which provides message for operating system messages for Windows\ndoes not consistently modify the lpBuffer and nSize arguments to the call to\nFormatMessage which could result in overrunning the passed buffer on WinCE or\nany build when _UNICODE is defined.  \n\nThe character lpBuffer argument is cast to LPTSTR (char* or wchar_t* depending\non state of _UNICODE).  The nSize argument is supposed to be the number of\nTCHAR's available in the buffer, but is not adjusted for the size of TCHAR.  If\n_UNICODE is set, the nSize value will be twice the proper value.\n\nThe patch addresses the issue by explicitly specifying FormatMessageA for non-CE\nbuilds and casting the buffer to LPSTR instead of LPTSTR.  This will cause the\ncode to always compile to the current behavior for \"normal\" Windows regardless\nof the state of _UNICODE.\n\nFor Windows CE, the invariant locale is specified instead of using the user's\ncurrent language which should allow the naive in-place conversion of the message\nto US-ASCII to produce reasonable diagnostic messages.  Since APR messages are\nnot localized, it should be acceptible that OS message are not localized either.\non that platform.  A more capable conversion using WideCharToMultiByte would\nrequire allocating a new buffer for the result and would introduce more\ncomplexity."}, {"count": 1, "tags": [], "creator": "carnold@apache.org", "attachment_id": 18527, "id": 90567, "time": "2006-06-23T21:32:06Z", "bug_id": 39895, "creation_time": "2006-06-23T21:32:06Z", "is_private": false, "text": "Created attachment 18527\nExplicitly call FormatMessageA on Win32, naive transcode on WinCE"}, {"count": 2, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "id": 93849, "time": "2006-09-19T19:54:42Z", "bug_id": 39895, "creation_time": "2006-09-19T19:54:42Z", "is_private": false, "text": "Mass reassign the 44 open apr-bugs to apr bug list"}, {"count": 3, "tags": [], "creator": "wrowe@apache.org", "text": "Of course, FormatMessageA is the wrong API when OS >= NT (and the unicode output\nshould be passed through the utf-8 filter, just as we do the filenames)...\n\nso the patch needs a bit of massaging before it's committed, but I agree with\nthe spirit of your patch.", "id": 93933, "time": "2006-09-20T18:58:19Z", "bug_id": 39895, "creation_time": "2006-09-20T18:58:19Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 39895, "is_private": false, "id": 102644, "attachment_id": null, "creator": "davi@apache.org", "creation_time": "2007-04-29T15:32:55Z", "time": "2007-04-29T15:32:55Z", "text": "It compiles and builds fine on VS C++ 6.0, but it introduces C++ comments (//) \non C code."}, {"count": 5, "attachment_id": 20120, "bug_id": 39895, "text": "Created attachment 20120\nSlight modification of previous patch\n\nSlight modification of previous patch, removing C++ style comment and checking\nfor negative TCHAR values.", "id": 102821, "time": "2007-05-03T08:44:58Z", "creator": "carnold@apache.org", "creation_time": "2007-05-03T08:44:58Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "carnold@apache.org", "attachment_id": 20121, "id": 102823, "time": "2007-05-03T08:48:05Z", "bug_id": 39895, "creation_time": "2007-05-03T08:48:05Z", "is_private": false, "text": "Created attachment 20121\nAlternative minimal patch for the issue\n\nThis patch eliminates the problematic call to FormatMessage on WinCE entirely\nand falls back to just output the error code."}, {"count": 7, "attachment_id": null, "bug_id": 39895, "text": "I looked hard at trying to address Will Rowe's comments on 2006-09-20, but I\ncould not come up with a simple solution.  Both patches will address my original\nissue (only getting the first letter of any message and possible buffer overrun\non WinCE) without changing the established behavior on other platforms.  I 'd\nprefer the in-place transcode over skipping the formatted message, but either is\nfine.  \n\nThe issue that apr_strerror may not return a UTF-8 encoded message is not a\nWinCE specific issue and I've really tried to make no change to behavior on\nother platforms in the WinCE patches.  \n\nIf there were a pool handy, it would be simple to allocate memory double the\nsize of the destination buffer, call FormatMessage, and then\napr_conv_ucs2_to_utf8 to transcode to UTF-8.  However,  without a memory pool,\nthen you are constrained by the buffer available.  Even if you were able to\nwrite a bulletproof in-place transcoder, you would still have the side effect of\nreducing the maximum message that can be placed in the buffer by half.  If this\nwas to be addressed (maybe if APR 2 and got a pool in scope), it should be split\noff into a different bug and not hold up the WinCE specific fix.\n\nIf your concern was that a caller was expecting UTF-8 and might get a message in\nthe current default encoding that was not valid UTF-8, you still call\nFormatMessageA but walk through the message and replace any code point >= 0x80\nwith '?'.  However, again that is not something WinCE specific and should be\ndone under a different bug.\n\n(WinCE does not have FormatMessageA or FormatMessageW, just FormatMessage which\ntakes LPWSTR regardless of the state of _UNICODE or _MBCS).", "id": 102825, "time": "2007-05-03T09:14:57Z", "creator": "carnold@apache.org", "creation_time": "2007-05-03T09:14:57Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "bug_id": 39895, "text": "Created attachment 20122\nPrevious mid contained spurious test changes", "id": 102826, "attachment_id": 20122, "creator": "carnold@apache.org", "creation_time": "2007-05-03T09:33:49Z", "time": "2007-05-03T09:33:49Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 39895, "is_private": false, "id": 102827, "attachment_id": 20123, "creator": "carnold@apache.org", "creation_time": "2007-05-03T09:34:24Z", "time": "2007-05-03T09:34:24Z", "text": "Created attachment 20123\nPrevious min contained spurious test changes"}, {"count": 10, "attachment_id": null, "bug_id": 39895, "text": "(In reply to comment #7)\n> The issue that apr_strerror may not return a UTF-8 encoded message is not a\n> WinCE specific issue and I've really tried to make no change to behavior on\n> other platforms in the WinCE patches.  \n\nHold on .. why do you make that assumption?  What is the issue with returing\na UTF-8 message?  The issue is that utf8 can be reasonably rendered in an ascii\nderived character set, and ONLY utf8 will represent the filename/symbol/entity\nthat is was substituted from the OS call with unicode args.\n\nIn any case, it won't fit, we can't rely on formatting this forwards or reverse\ninto utf-8 since utf-8 is variably sized smaller or longer than the original\nbytestream, so my thought is that only TLS store would help us here.  Since I'm\nnot hacking that in today - I've deployed your 'ascii only' flavor in trunk\nfor the moment, which is better than nothing.\n\nIf both TLS and proper string handling is deployed, I'll be all for bumping\nthis back to 1.2/0.9, so note the initial patch to trunk is r543549.", "id": 103972, "time": "2007-06-01T10:40:06Z", "creator": "wrowe@apache.org", "creation_time": "2007-06-01T10:40:06Z", "tags": [], "is_private": false}]