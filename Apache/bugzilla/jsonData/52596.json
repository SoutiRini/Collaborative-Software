[{"count": 0, "tags": [], "bug_id": 52596, "attachment_id": null, "text": "In the current JMeter (all the way up to 2.6), Thread Groups cannot be 'grouped' in any way in a test plan. Purely for organizational sake, it would be nice to be able to have some sort of 'folder' to group together Thread Groups.\n\nSome features that would be desirable for the folders:\n\n1) Disable entire folder (and all test elements within). (Priority High)\n\n2) Hide/Show folder elements - collapse all sub-elements to a single line. (Priority High)\n\n3) Independent Test Scope for 'Config Elements' within a folder - the ability to setup config elements that control the configuration of only thread groups (or sub-elements) within the folder. (Priority Medium)\n\n4) Multiple layers - e.g., the ability to create folders within folders, for organizing various sets of test functionality. (Priority Low)\n\n5) Include \"test plan\" as a folder. The ability to load a separate test plan as a folder in my current test plan. Ideally, it would load the currently saved version of the separate test plan when I load the 'master' test plan (similar to the Include Module), but it would actually suck the entire plan into the folder - and let me edit it there. (Nice to have)\n\nUse Case:\n\nI have a test plan that includes 10 thread groups. The first 5 thread groups perform a variety of data setup functions, which are necessary for the second group of 5 thread groups. It would be nice to group these into 2 folders: \"data setup\" and \"main test\". Moreover, there are times where I want to setup the data, but not run the \"main test\" thread groups immediately (I might have some review or additional 'non-automated' setup tasks that I want to run.) So it would be very handy to be able to disable 1 folder, and only run the other.\n\nLastly, It would be very nice to have different test scope for each folder - so that I can setup config elements within the folder to control the thread groups within that folder. Needless to say, if we had this, we would still need the ability to have a 'master' set of configs (peers to the first folder level) that would be the default config for all sub-elements, but within a folder you could override the defaults with local scope config elements.", "id": 153422, "time": "2012-02-03T21:00:53Z", "creator": "rwilson.2@gmail.com", "creation_time": "2012-02-03T21:00:53Z", "is_private": false}]