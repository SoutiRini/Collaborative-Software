[{"count": 0, "tags": [], "bug_id": 59010, "is_private": false, "id": 188465, "creation_time": "2016-02-16T11:33:28Z", "time": "2016-02-16T11:33:28Z", "creator": "rashmikatagall@in.ibm.com", "text": "I have implemented a service using Http11Protocol and I have disabled the socketBuffer for the object by setting its value to \"-1\". When the client disconnects before the server responds, then on windows I see the exception:\n\nSEVERE: Error processing request\njava.net.SocketException: Unrecognized Windows Sockets error: 0: socket write er\nror\n        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:125)\n        at java.net.SocketOutputStream.write(SocketOutputStream.java:171)\n        at org.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffe\nr.doWrite(InternalOutputBuffer.java:243)\n        at org.apache.coyote.http11.filters.IdentityOutputFilter.doWrite(Identit\nyOutputFilter.java:84)\n        at org.apache.coyote.http11.AbstractOutputBuffer.doWrite(AbstractOutputB\nuffer.java:192)\n        at org.apache.coyote.Response.doWrite(Response.java:499)\n        at dummyAdapter.service(dummyAdapter.java:49)\n\nBut on linux, I don't see any exception raised.\n\nMy listener looks like this:\npublic class TomcatCipherTst {\n   public static void main(String[] args) throws Exception {\n\tHttp11Protocol h1p = new BrokerProtocolHandler();  \n\th1p.setSocketBuffer(-1);\n        h1p.setMaxKeepAliveRequests(-1);\n        Adapter ac = new dummyAdapter();\n        h1p.setAdapter(ac);\n        h1p.setPort(7677);\n\th1p.init();\n\th1p.start();\n\t\n\tboolean status = ((BrokerProtocolHandler)h1p).getEndpoint().isRunning();\n\t\t  \n        System.out.println(\"status = \" + status);\n\t\t  \n        Thread.sleep(1000000);  \n      }\n    }\n\nMy adapter service implementation looks like this:\npublic class dummyAdapter implements Adapter {\n  public boolean asyncDispatch(Request arg0, Response arg1, SocketStatus arg2)\n\t\t\tthrows Exception {\n\t\t\treturn false;\n\t}\n\n\tpublic boolean event(Request arg0, Response arg1, SocketStatus arg2)\n\t\t\tthrows Exception {\n\t\treturn false;\n\t}\n\n\tpublic String getDomain() {\n\t\treturn null;\n\t}\n\n\tpublic void log(Request arg0, Response arg1, long arg2) {\n\t\t\n\t}\n\n\tpublic void service(Request req, Response res) throws Exception {\n\t\n        System.out.println(\"We got em\");\n        Thread.sleep(3000);\n\t\t\n\tString resp = new String(\"We got request for |\" + req.requestURI().toString() + \"|\");\n        ByteChunk bc = new ByteChunk();\n        byte[] respBA = resp.getBytes(\"utf-8\");\n        bc.setBytes(respBA, 0, respBA.length);\n        res.setContentLength(respBA.length);\n        res.doWrite(bc);\n        res.finish();\n\t}\n\n\tpublic void checkRecycled(Request arg0, Response arg1) {\n\t\t\n\t}\n\n\tpublic void errorDispatch(Request arg0, Response arg1) {\n\t\t\n\t}\n}\n\nBrokerProtocolHandler is:\npublic class BrokerProtocolHandler extends org.apache.coyote.http11.Http11Protocol\n{\n    public BrokerProtocolHandler() {\n        super();\n    }\n \n    public AbstractEndpoint getEndpoint() {\n        return endpoint;\n    }\n}\n\n\n\nCan you please take a look at this and help us understand why there is no exception on linux?", "attachment_id": null}, {"count": 1, "text": "Can you please help me with this? I work for IBM L3 support and customer is looking for an answer.", "bug_id": 59010, "is_private": false, "id": 188551, "time": "2016-02-18T03:48:19Z", "creator": "rashmikatagall@in.ibm.com", "creation_time": "2016-02-18T03:48:19Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "id": 188574, "time": "2016-02-18T15:30:51Z", "bug_id": 59010, "creation_time": "2016-02-18T15:30:51Z", "is_private": false, "text": "This looks like a JVM bug to me: error code 0 is usually considered \"success\". It could also be some other networking component (e.g. software firewall, virus-scanner, etc.) interfering with the channel.\n\nDo you have anything like that running that might unexpectedly close a network connection, or otherwise cause data to refuse to write?\n\nA similar issue closed INVALID based upon the assumption that it's a problem with the OS (more likely the JVM, but possibly the OS):\nhttps://issues.apache.org/jira/browse/HTTPCLIENT-957\n\nAnother similar issue (no JVM involved, I think), claiming that the problem is with a firewall (seems like a sketchy explanation to me):\nhttp://www-01.ibm.com/support/docview.wss?uid=swg21968078"}, {"count": 3, "tags": [], "bug_id": 59010, "text": "So to clarify further, when we set socketBuffer to \"-1\" and if the client disconnects before the server responds, what is the expected behaviour?\nIs it that a socket error exception must be seen like on windows or the server silently attempt to send response and not throw an error if that's not possible like on linux?\n\nThe socket error thrown on windows is very useful on server side as we know that there was an error sending response as the client disconnected. Is there any other way we can make the server log the error when client disconnects other than setting socketBuffer to \"-1\"", "id": 188597, "time": "2016-02-19T08:08:13Z", "creator": "rashmikatagall@in.ibm.com", "creation_time": "2016-02-19T08:08:13Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 59010, "text": "Are you positive you have the same endpoint configuration on both servers (Windows/Linux)? You appear to be using the BIO endpoint on Windows (given the stack trace), but you didn't say what you were using on Linux. The handler and the endpoint must agree on I/O strategy, or at least so-says the javadoc for AbstractProtocol.endpoint (starting at line 80 in Tomcat 7.0.x trunk):\n\n    /**\n     * Endpoint that provides low-level network I/O - must be matched to the\n     * ProtocolHandler implementation (ProtocolHandler using BIO, requires BIO\n     * Endpoint etc.).\n     */", "id": 188635, "time": "2016-02-20T16:19:44Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-02-20T16:19:44Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 59010, "text": "I think the same configuration is used on Linux as well. We are using the same code sample attached in the first comment on both servers and the jre is also the same.", "id": 188671, "time": "2016-02-22T10:25:05Z", "creator": "rashmikatagall@in.ibm.com", "creation_time": "2016-02-22T10:25:05Z", "is_private": false, "attachment_id": null}, {"count": 6, "text": "When I:\n- run your test code on linux\n- add a break point immediately after the sleep in DummyAdapter\n- kill the client when the break point is reached\n\nthen I see a broken pipe exception with Linux.\n\nThere is always going to be an element of timing and buffering at play in experiments such as this. If the client goes away after the server has written the data but before the client has read it then things are going to get lost and there is very little you can do about that.", "bug_id": 59010, "attachment_id": null, "id": 188704, "time": "2016-02-23T11:46:41Z", "creator": "markt@apache.org", "creation_time": "2016-02-23T11:46:41Z", "tags": [], "is_private": false}, {"count": 7, "text": "Since this code is part of our runtime, we cannot add breakpoint to confirm the behaviour. However I added a very long sleep of 1 minute and disconnected the client as soon as sending the request. But still dont see the broken pipe :(\n\nPlease suggest what could be wrong with the linux box?", "bug_id": 59010, "attachment_id": null, "id": 188750, "time": "2016-02-24T05:18:17Z", "creator": "rashmikatagall@in.ibm.com", "creation_time": "2016-02-24T05:18:17Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 59010, "is_private": false, "count": 8, "id": 188751, "time": "2016-02-24T09:26:50Z", "creator": "markt@apache.org", "creation_time": "2016-02-24T09:26:50Z", "text": "No idea but unless you can provide a reproducible test case that demonstrates a problem, this isn't a Tomcat bug.\n\nIf you want a \"what might be going wrong\" discussion then this isn't the place. Please use the users mailing list."}, {"attachment_id": null, "tags": [], "bug_id": 59010, "is_private": false, "count": 9, "id": 188758, "time": "2016-02-24T10:27:33Z", "creator": "rashmikatagall@in.ibm.com", "creation_time": "2016-02-24T10:27:33Z", "text": "Can you please check it without the breakpoint and with increased sleep time?"}, {"count": 10, "tags": [], "bug_id": 59010, "attachment_id": null, "id": 188759, "time": "2016-02-24T11:17:04Z", "creator": "remm@apache.org", "creation_time": "2016-02-24T11:17:04Z", "is_private": false, "text": "Ok, so you now get the \"not nice\" answer ...\n\nYou are providing paid support to a third party, and are actively annoying / spamming the community with your customer issue. That is not fine in BZ, please move the discussion to the user list."}]