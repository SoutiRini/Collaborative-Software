[{"count": 0, "tags": [], "bug_id": 55324, "text": "When you create an excel file and use the following forumula, if condition is true, we see a #VALUE in Excel. However if you click on the cell (or press F2 key) and press enter, the formula gets populated. \n\n=IF(LEN(A1)>4,MID(A1,4,2),A1)", "id": 168889, "attachment_id": null, "creator": "w.deprez@specinov.fr", "creation_time": "2013-07-29T09:23:28Z", "time": "2013-07-29T09:23:28Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 55324, "text": "As detailed in the documentation, and covered in a lot of detail at <http://poi.apache.org/spreadsheet/eval.html>, after making changes to formulas or the cells they depend on you need to re-evaluate the formulas to update the cached value that gets stored with them in the file.", "id": 168890, "attachment_id": null, "creator": "apache@gagravarr.org", "creation_time": "2013-07-29T09:39:13Z", "time": "2013-07-29T09:39:13Z", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 55324, "is_private": false, "id": 168894, "time": "2013-07-29T10:22:02Z", "creator": "w.deprez@specinov.fr", "creation_time": "2013-07-29T10:22:02Z", "tags": [], "text": "I have read the documentation. I added this line before  saving and closing the workbook but nothing change.\n\nFormulaEvaluator evaluator = wb.getCreationHelper().createFormulaEvaluator();\nevaluator.clearAllCachedResultValues and \nevaluator.evaluateAll(); \nwb.setForceFormulaRecalculation(true);"}, {"count": 3, "attachment_id": null, "creator": "w.deprez@specinov.fr", "is_private": false, "id": 168965, "time": "2013-07-31T07:09:55Z", "bug_id": 55324, "creation_time": "2013-07-31T07:09:55Z", "tags": [], "text": "After few tests, \n\n* LEN(A1) works perfectly\n* MID(A1,4,2) works perfectly\n* IF (LEN(A1)>0, A1, A2) works perfectly\n* IF (1==1, MID(A1,4,2), A1) works bad\n* IF (1==1, A1, MID(A1,4,2)) works bad\n\nall formulas are re-evaluate before closing workbook.\n\nAll works perfectly with XSSF but not with HSSF.\n\nare you sure there is no bug when combinating IF instruction and MID ?"}, {"attachment_id": null, "tags": [], "creator": "w.deprez@specinov.fr", "text": "After few tests, \n\n* LEN(A1) works perfectly\n* MID(A1,4,2) works perfectly\n* IF (LEN(A1)>0, A1, A2) works perfectly\n* IF (1=1, MID(A1,4,2), A1) works bad\n* IF (1=1, A1, MID(A1,4,2)) works bad\n* IF (MID(A1,4,2)=\"ab\", A1, \"bad\") works fine\n\nall formulas are re-evaluate before closing workbook.\n\nAll works perfectly with XSSF but not with HSSF.\n\nare you sure there is no bug when combinating IF instruction and MID ?", "count": 4, "id": 168966, "time": "2013-07-31T07:27:09Z", "bug_id": 55324, "creation_time": "2013-07-31T07:27:09Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "w.deprez@specinov.fr", "is_private": false, "count": 5, "id": 168967, "time": "2013-07-31T07:34:52Z", "bug_id": 55324, "creation_time": "2013-07-31T07:34:52Z", "text": "excuse me there is a bug in my comment, \n* LEN(A1) works perfectly\n* MID(A1,4,2) works perfectly\n* IF (LEN(A1)>0, A1, A2) works perfectly\n* IF (1=1, MID(A1,4,2), A1) works bad\n* IF (MID(A1,4,2)=\"ab\", A1, \"bad\") works fine\n* IF (1=1, A1, MID(A1,4,2)) works fine\n* IF (1>2, A1, MID(A1,4,2)) works bad"}, {"count": 6, "tags": [], "bug_id": 55324, "text": "(In reply to Nick Burch from comment #1)\n> As detailed in the documentation, and covered in a lot of detail at\n> <http://poi.apache.org/spreadsheet/eval.html>, after making changes to\n> formulas or the cells they depend on you need to re-evaluate the formulas to\n> update the cached value that gets stored with them in the file.\n\nare you sure there is no bug ?\n\n=IF(1=1,MID(A1,4,2),A1) works bad\n=IF(1=1,MID(\"abcdefgh\",4,2),A1) works perfectly.\n\nthanks for your answer", "id": 168994, "time": "2013-08-01T08:58:57Z", "creator": "w.deprez@specinov.fr", "creation_time": "2013-08-01T08:58:57Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 55324, "is_private": false, "id": 169004, "attachment_id": null, "creator": "apache@gagravarr.org", "creation_time": "2013-08-01T09:49:52Z", "time": "2013-08-01T09:49:52Z", "text": "There might be a bug, it's always possible...\n\nI'd suggest you try running BiffViewer on the file saved by POI, and then on a file loaded by excel + explicitly evaluated + saved. Find the formula record for the cell, and compare the POI one to the Excel one. Are the ptgs the same? Cached value the same? etc"}, {"count": 8, "tags": [], "bug_id": 55324, "is_private": false, "text": "(In reply to Nick Burch from comment #7)\n> There might be a bug, it's always possible...\n> \n> I'd suggest you try running BiffViewer on the file saved by POI, and then on\n> a file loaded by excel + explicitly evaluated + saved. Find the formula\n> record for the cell, and compare the POI one to the Excel one. Are the ptgs\n> the same? Cached value the same? etc\n\nit seems that cached value are the same but ptgs are not (one difference on ptg[6])\nhere are ptgs generate by POI\n\n[FORMULA]\n    .row    = 0x0004\n    .col    = 0x0004\n    .xfindex= 0x000F\n  .value\t = <string> [00, 00, 00, 00, 00, 00]\n  .options   = 0x0002\n    .alwaysCalc= false\n    .calcOnLoad= true\n    .shared    = false\n  .zero      = 0x00000000\n    Ptg[0]=org.apache.poi.ss.formula.ptg.IntPtg [1].\n    Ptg[1]=org.apache.poi.ss.formula.ptg.IntPtg [2].\n    Ptg[2]=class org.apache.poi.ss.formula.ptg.GreaterThanPtg.\n    Ptg[3]=org.apache.poi.ss.formula.ptg.AttrPtg [if dist=9].\n    Ptg[4]=org.apache.poi.ss.formula.ptg.RefPtg [A5]R\n    Ptg[5]=org.apache.poi.ss.formula.ptg.AttrPtg [skip dist=21].\n    Ptg[6]=org.apache.poi.ss.formula.ptg.RefPtg [A5]R\n    Ptg[7]=org.apache.poi.ss.formula.ptg.IntPtg [4].\n    Ptg[8]=org.apache.poi.ss.formula.ptg.IntPtg [2].\n    Ptg[9]=org.apache.poi.ss.formula.ptg.FuncPtg [MID nArgs=3]V\n    Ptg[10]=org.apache.poi.ss.formula.ptg.AttrPtg [skip dist=3].\n    Ptg[11]=org.apache.poi.ss.formula.ptg.FuncVarPtg [IF nArgs=3]V\n[/FORMULA]\n\nOffset=0x00003801(14337) recno=174 sid=0x0207 size=0x0005(5)\n[STRING]\n    .string            = $$\n[/STRING]\n\n\n\n\nptgs generate by Excel\n\n[FORMULA]\n    .row    = 0x0004\n    .col    = 0x0004\n    .xfindex= 0x000F\n  .value\t = <string> [00, 00, 84, 2C, 4F, 06]\n  .options   = 0x0000\n    .alwaysCalc= false\n    .calcOnLoad= false\n    .shared    = false\n  .zero      = 0xFE040005\n    Ptg[0]=org.apache.poi.ss.formula.ptg.IntPtg [1].\n    Ptg[1]=org.apache.poi.ss.formula.ptg.IntPtg [2].\n    Ptg[2]=class org.apache.poi.ss.formula.ptg.GreaterThanPtg.\n    Ptg[3]=org.apache.poi.ss.formula.ptg.AttrPtg [if dist=9].\n    Ptg[4]=org.apache.poi.ss.formula.ptg.RefPtg [A5]R\n    Ptg[5]=org.apache.poi.ss.formula.ptg.AttrPtg [skip dist=21].\n    Ptg[6]=org.apache.poi.ss.formula.ptg.RefPtg [A5]V\n    Ptg[7]=org.apache.poi.ss.formula.ptg.IntPtg [4].\n    Ptg[8]=org.apache.poi.ss.formula.ptg.IntPtg [2].\n    Ptg[9]=org.apache.poi.ss.formula.ptg.FuncPtg [MID nArgs=3]V\n    Ptg[10]=org.apache.poi.ss.formula.ptg.AttrPtg [skip dist=3].\n    Ptg[11]=org.apache.poi.ss.formula.ptg.FuncVarPtg [IF nArgs=3]V\n[/FORMULA]\n\nOffset=0x00001022(4130) recno=169 sid=0x0207 size=0x0005(5)\n[STRING]\n    .string            = $$\n[/STRING]\n\n\n\n$$ was the formula result value\n\nIs this difference on ptg is important ? are there any solution ?\n\nall Formula where re-evaluate before closing workbook.\n\nif (_evaluator == null)\n   _evaluator = _workbook.getCreationHelper().createFormulaEvaluator();\n   _evaluator.clearAllCachedResultValues();\n   for(int sheetNum = 0; sheetNum < _workbook.getNumberOfSheets(); sheetNum++) {\n      Sheet sheet = _workbook.getSheetAt(sheetNum);\n\tfor(Row r : sheet) {\n           for(Cell c : r) {\n              if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n                 _evaluator.setDebugEvaluationOutputForNextEval(true);\n                 _evaluator.evaluateFormulaCell(c);\n              }\n           }\n        }\n  }\n_workbook.setForceFormulaRecalculation(true);", "id": 169016, "time": "2013-08-01T12:55:51Z", "creator": "w.deprez@specinov.fr", "creation_time": "2013-08-01T12:55:51Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "it seems that the ptg[6] was a reference in POI but in Excel it was a value.\n\nIt think that the bug is in OperandClassTransformer but i don't know how to resolve it.\n\nCan you help me ?", "is_private": false, "id": 169032, "creator": "w.deprez@specinov.fr", "time": "2013-08-02T10:29:59Z", "bug_id": 55324, "creation_time": "2013-08-02T10:29:59Z", "attachment_id": null}, {"count": 10, "attachment_id": null, "bug_id": 55324, "text": "why POI puts in some case a reference or a value to the cell in the MID function ?\nis there a workaround ?", "id": 169037, "time": "2013-08-02T12:48:42Z", "creator": "w.deprez@specinov.fr", "creation_time": "2013-08-02T12:48:42Z", "tags": [], "is_private": false}, {"count": 11, "attachment_id": null, "bug_id": 55324, "text": "have you a solution for this problem ?", "id": 169173, "time": "2013-08-06T09:23:50Z", "creator": "w.deprez@specinov.fr", "creation_time": "2013-08-06T09:23:50Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "bug_id": 55324, "is_private": false, "text": "You'll need to step through the formula evaluator in a debugger, and try to work out what area of the code is responsible for outputting the Ptg different to Excel. Once that's narrowed down, the fix will hopefully be easier to identify!", "id": 169174, "time": "2013-08-06T09:35:48Z", "creator": "apache@gagravarr.org", "creation_time": "2013-08-06T09:35:48Z", "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 55324, "attachment_id": null, "text": "If I change the second line in the resource file functionMetadata.txt by \n\"1\tIF\t2\t3\tR\tV V V\"\t\n\nall works perfectly.\n\nby default, MID Function return Value class. Or in IF function, the second and third parameter is a reference class. Could it be the problem ?", "id": 169260, "time": "2013-08-07T15:56:02Z", "creator": "w.deprez@specinov.fr", "creation_time": "2013-08-07T15:56:02Z", "is_private": false}]