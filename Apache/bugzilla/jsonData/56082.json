[{"count": 0, "tags": [], "bug_id": 56082, "attachment_id": 31267, "id": 172772, "time": "2014-01-29T00:11:33Z", "creator": "evernat@free.fr", "creation_time": "2014-01-29T00:11:33Z", "is_private": false, "text": "Created attachment 31267\nSource to reproduce\n\nIn Tomcat, java.util.logging.LogManager.getLogManager() is in general an instance of org.apache.juli.ClassLoaderLogManager.\n\nIn a webapp, when iterating over the result of LogManager.getLogManager().getLoggerNames(), a ConcurrentModification can sometimes occur.\n\nTo reproduce :\n- download attached test-1.0.zip\n- run \"mvn clean package\" using Maven\n- copy \"target/test-1.0.war\" into tomcat/webapps\n- start Tomcat\n- see a lot of \"Issue reproduced: java.util.ConcurrentModificationException\" in the System output\n\nThis webapp uses simple Logger.getLogger(String) and LogManager.getLoggerNames() in threads.\nI my case, this is reproduced using Tomcat 7.0.42 and JDK 1.7. \n\nI suppose that a copy of the result could be made in org.apache.juli.ClassLoaderLogManager.getLoggerNames()"}, {"count": 1, "tags": [], "bug_id": 56082, "attachment_id": null, "id": 172773, "time": "2014-01-29T00:14:10Z", "creator": "evernat@free.fr", "creation_time": "2014-01-29T00:14:10Z", "is_private": false, "text": "This issue was first reported here:\nhttps://code.google.com/p/javamelody/issues/detail?id=370"}, {"count": 2, "tags": [], "bug_id": 56082, "attachment_id": null, "id": 172803, "time": "2014-01-30T09:19:43Z", "creator": "markt@apache.org", "creation_time": "2014-01-30T09:19:43Z", "is_private": false, "text": "This has been fixed in 8.0.x for 8.0.2 onwards and in 7.0.x for 7.0.51 onwards. It has also been proposed for 6.0.x."}, {"count": 3, "tags": [], "bug_id": 56082, "attachment_id": null, "id": 173897, "time": "2014-03-18T09:42:52Z", "creator": "markt@apache.org", "creation_time": "2014-03-18T09:42:52Z", "is_private": false, "text": "Fixed in 6.0.x for 6.0.40 onwards."}]