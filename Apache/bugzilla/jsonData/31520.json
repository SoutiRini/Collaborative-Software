[{"count": 0, "tags": [], "creator": "bernd@dutkowski.net", "text": "SPI is well known and used but not supported by ANT.\nMaybe something like this:\n\n<jar ...>\n  ...\n  <service type=\"java.io.spi.CharCodec\">\n    <provider class=\"sun.io.StandardCodec\"/>\n  </service>\n</jar>", "id": 64535, "time": "2004-10-04T00:25:39Z", "bug_id": 31520, "creation_time": "2004-10-04T00:25:39Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "We would certainly consider it, especially if you were to provide docs and unit\ntests alongside the code :)\n\nIt'd be best if the code was like <manifest>; it could also act as a self\ncontained task to create the relevant file outside the JAR itself. Some people\nlike that.", "is_private": false, "id": 64548, "creator": "stevel@apache.org", "time": "2004-10-04T09:37:06Z", "bug_id": 31520, "creation_time": "2004-10-04T09:37:06Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 31520, "is_private": false, "count": 2, "id": 64582, "time": "2004-10-04T20:46:41Z", "creator": "bernd@dutkowski.net", "creation_time": "2004-10-04T20:46:41Z", "text": "I had al look at the ANT 1.6.2 Sources and tis is my Idea:\n\npackage org.apache.tools.ant.taskdefs;\n\nclass Service\n{\n  private String type;\n  private List providerList;\n\n  setType(String type)...\n  Provider createProvider()...\n  //writing the File\n  void write(ZipOutputStream zOut)\n  {\n     \n  }\n}\n\nclass Provider\n{\n private String clazz;\n setClass(String clazz)...\n}\n\nclass Jar ..\n{\n  private List serviceList = new LinkedList();\n\n  ...\n\n    protected void initZipOutputStream(ZipOutputStream zOut)\n        throws IOException, BuildException {\n\n        if (!skipWriting) {\n            Manifest jarManifest = createManifest();\n            writeManifest(zOut, jarManifest);\n            writeService(zOut);//add this line\n        }\n    }\n\n  public Service createService()\n  {\n    Service service = new Service();\n    serviceList.add(service);\n    return service;\n  }\n\n  private void writeService(ZipOutputStream zOut)\n  {\n     Iterator i = serviceList.iterator();\n     while(i.hasNext())\n     {\n       ((Service) i.next()).write(zOut);\n     }\n  }\n}\n\nI will try to implement this."}, {"count": 3, "tags": [], "creator": "j_a_fernandez@yahoo.com", "attachment_id": null, "text": "Do you really need to use \"createService()\" instead of\n \"addConfiguredService(Service s)\" or any other of the \"add...\" methods.\n\nThe main difference between the two, is that \"add...\" would allow having\npolimorphic usage of services, while \"create...\" does not.\n\nIf we eventually manage to do polimorphism, \"add...\" is a much better starting \npoint.\n", "id": 64615, "time": "2004-10-05T10:48:35Z", "bug_id": 31520, "creation_time": "2004-10-05T10:48:35Z", "is_private": false}, {"count": 4, "attachment_id": 12971, "creator": "bernd@dutkowski.net", "is_private": false, "id": 64722, "time": "2004-10-06T21:52:17Z", "bug_id": 31520, "creation_time": "2004-10-06T21:52:17Z", "tags": [], "text": "Created attachment 12971\nfirst impl."}, {"count": 5, "tags": [], "creator": "peterreilly@apache.org", "text": "Committed a slightly modified version of this.\nThanks for the patch!", "id": 94180, "time": "2006-09-27T21:12:38Z", "bug_id": 31520, "creation_time": "2006-09-27T21:12:38Z", "is_private": false, "attachment_id": null}]