[{"attachment_id": 35128, "tags": [], "bug_id": 61295, "is_private": false, "count": 0, "id": 199770, "time": "2017-07-13T19:31:51Z", "creator": "tallison@mitre.org", "creation_time": "2017-07-13T19:31:51Z", "text": "Created attachment 35128\ntriggering file\n\nI started experimenting with randomly corrupting files based on feedback from Luis Filipe Nassif [1].  The attached file triggers this:\n\njava.lang.OutOfMemoryError: Java heap space\n\n\tat org.apache.poi.hpsf.Vector.read(Vector.java:43)\n\tat org.apache.poi.hpsf.TypedPropertyValue.readValue(TypedPropertyValue.java:219)\n\tat org.apache.poi.hpsf.VariantSupport.read(VariantSupport.java:174)\n\tat org.apache.poi.hpsf.Property.<init>(Property.java:179)\n\tat org.apache.poi.hpsf.MutableProperty.<init>(MutableProperty.java:53)\n\tat org.apache.poi.hpsf.Section.<init>(Section.java:237)\n\tat org.apache.poi.hpsf.MutableSection.<init>(MutableSection.java:41)\n\tat org.apache.poi.hpsf.PropertySet.init(PropertySet.java:494)\n\tat org.apache.poi.hpsf.PropertySet.<init>(PropertySet.java:196)\n\tat org.apache.tika.parser.microsoft.SummaryExtractor.parseSummaryEntryIfExists(SummaryExtractor.java:83)\n\tat org.apache.tika.parser.microsoft.SummaryExtractor.parseSummaries(SummaryExtractor.java:74)\n\tat org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:155)\n\tat org.apache.tika.parser.microsoft.OfficeParser.parse(OfficeParser.java:131)\n\n\n[1] https://issues.apache.org/jira/browse/TIKA-2428?focusedCommentId=16086045&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-16086045"}, {"attachment_id": null, "tags": [], "bug_id": 61295, "is_private": false, "count": 1, "id": 199999, "time": "2017-07-25T01:27:12Z", "creator": "tallison@mitre.org", "creation_time": "2017-07-25T01:27:12Z", "text": "The actual Vector size that is causing an OOM in Tika is 1,358,954,497 on one triggering file.  We could arbitrarily set a max_value << Integer.MAX_VALUE, or we could use a list and then convert that to an array.  If we do the latter, and there is a corrupt size value, the LittleEndianInputStream will throw an exception when asked to read beyond what is available in the stream.\n\nI somewhat prefer the second option.  Commit on way...\n\nHappy to go with the first or open to other options..."}, {"attachment_id": null, "tags": [], "bug_id": 61295, "is_private": false, "count": 2, "id": 200000, "time": "2017-07-25T01:39:58Z", "creator": "tallison@mitre.org", "creation_time": "2017-07-25T01:39:58Z", "text": "r1802879\n\nI didn't add a test file because I didn't think the test was worth 65kb.\n\nI can look for a shorter triggering file if necessary."}]