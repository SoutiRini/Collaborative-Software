[{"text": "Within our project exist a director-tree which is very deep (partially more than\n10 levels) and contains about 8000 Files. These files are automatically\ngenerated files in the complete tree exists no java file.\ndefinig a javac task like that:\n        <javac srcdir=\"${src}\"\n               destdir=\"${build}\"\n               debug=\"${compile.debug}\"\n               listfiles=\"true\">\n            <exclude name=\"root/data/create\"/>\n            <exclude name=\"root/data/create/**\"/>\n            <include name=\"root/**/*.java\"/>\n            <classpath refid=\"build_path\" />\n        </javac>\nwhere data/create contains the deep directory structure causes an\nOutOfMemoryError. Forking of the compiler or -ms128m -mx512m doesn't help it\nseems to me that the problem is the generation of the fileset for the compiler.\nThe only solution I've found is not to include the root/**/*.java but include\neach single subdirectory of root which contains java sources, avoiding\nroot/data/create.\nHere is the output of ant -verbose:\n------------------------------\n>ant -Dbasedir=$PROJECT_BASE -verbose compile\nApache Ant version 1.6.5 compiled on June 2 2005\nBuildfile: build.xml\nDetected Java version: 1.4 in: /app/java/j2sdk1.4.2_05/jre\nDetected OS: Linux\nparsing buildfile /home/pvigier/prj/build.xml with URI =\nfile:///home/pvigier/prj/build.xml\nProject base dir set to: /home/pvigier/prj\nBuild sequence for target(s) `compile' is [init, compile]\nComplete build sequence is [init, compile, compile_gensrc, gensrc,\ncompile_customers, compile_all, deploy, clean, clean_all, clean_jar, make_jar, buil\nd_all, build, cvs_update, ]\n\ninit:\n\ncompile:\n\nBUILD FAILED\njava.lang.OutOfMemoryError\n        at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1225)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1185)\n        at\norg.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:40)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1068)\n        at org.apache.tools.ant.Main.runBuild(Main.java:668)\n        at org.apache.tools.ant.Main.startAnt(Main.java:187)\n        at org.apache.tools.ant.launch.Launcher.run(Launcher.java:246)\n        at org.apache.tools.ant.launch.Launcher.main(Launcher.java:67)\nCaused by: java.lang.OutOfMemoryError\n--- Nested Exception ---\njava.lang.OutOfMemoryError", "tags": [], "creator": "Peter.Vigier@b4e.biz", "attachment_id": null, "count": 0, "id": 77296, "time": "2005-07-14T16:34:41Z", "bug_id": 35739, "creation_time": "2005-07-14T16:34:41Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 35739, "attachment_id": null, "is_private": false, "id": 77322, "time": "2005-07-15T09:10:32Z", "creator": "Peter.Vigier@b4e.biz", "creation_time": "2005-07-15T09:10:32Z", "text": "To be clear: in my opinion the bug is more the fact that ant ingnores the\nexclude-tags and parses the directory tree either than the OutOfMemoryError.\nBest regards\nPeter"}, {"count": 2, "tags": [], "bug_id": 35739, "attachment_id": null, "is_private": false, "id": 123427, "time": "2008-12-19T08:10:21Z", "creator": "bodewig@apache.org", "creation_time": "2008-12-19T08:10:21Z", "text": "Ant 1.7.0 will ignore the excluded directories, so if this is the problem, then it should have been fixed there."}]