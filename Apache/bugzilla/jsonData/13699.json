[{"count": 0, "tags": [], "bug_id": 13699, "attachment_id": null, "id": 24631, "time": "2002-10-16T15:34:19Z", "creator": "joachim.unger@softwareag.com", "creation_time": "2002-10-16T15:34:19Z", "is_private": false, "text": "Starting the method driver.run() within many threads may cause an exception, if \nimages (gif/jpg) are embbeded. \n\nWorkaround: Be sure to catch Throwable and re-new Driver\n\nStacktrace:\n\njava.lang.NullPointerException\n  \tat org.apache.fop.image.GifJpegImage.loadImage(GifJpegImage.java:131)\n\tat org.apache.fop.image.AbstractFopImage.getBitmaps\n(AbstractFopImage.java:212)\n\tat org.apache.fop.pdf.PDFXObject.output(PDFXObject.java:67)\n\tat org.apache.fop.pdf.PDFDocument.output(PDFDocument.java:1137)\n\tat org.apache.fop.render.pdf.PDFRenderer.render(PDFRenderer.java:694)\n\tat org.apache.fop.apps.StreamRenderer.queuePage(StreamRenderer.java:181)\n\tat org.apache.fop.layout.AreaTree.addPage(AreaTree.java:81)\n\tat org.apache.fop.fo.pagination.PageSequence.format\n(PageSequence.java:306)\n\tat org.apache.fop.apps.StreamRenderer.render(StreamRenderer.java:166)\n\tat org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:155)\n\tat org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown \nSource)\n\tat org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanEndElement\n(Unknown Source)\n\tat \norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.\ndispatch(Unknown Source)\n\tat org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument\n(Unknown Source)\n\tat org.apache.xerces.parsers.DTDConfiguration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.DTDConfiguration.parse(Unknown Source)\n\tat org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n\tat org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n\tat org.apache.fop.apps.Driver.render(Driver.java:424)\n\tat org.apache.fop.apps.Driver.run(Driver.java:508)\n\tat Converter.run(Converter.java:123) \n\nRegards,\nJoachim"}, {"count": 1, "tags": [], "text": "This particular bug has been fixed, I think. There may still be some multi-\nthreading bugs around in today's version, though. I recommend you upgrade to \n0.20.3 or later.", "attachment_id": null, "id": 24632, "creator": "jeremias.maerki@outline.ch", "time": "2002-10-16T15:38:49Z", "bug_id": 13699, "creation_time": "2002-10-16T15:38:49Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 13699, "attachment_id": null, "is_private": false, "id": 24879, "time": "2002-10-18T19:13:02Z", "creator": "joachim.unger@softwareag.com", "creation_time": "2002-10-18T19:13:02Z", "text": "\nHello!\n\nIt's not really fisex. \nWe tested 0.20.3 and also 0.20.4.\nIn MT-Envs we had exceptions!!!\n\nTo resolve:\n\n1) in org.apache.fop.image.AbstractFopImage:\n\n    public  _synchronized_  byte[] getBitmaps() throws FopImageException {\n        if (this.m_bitmaps == null)\n            this.loadImage();\n\n        return this.m_bitmaps;\n    }\n\n\n2) (may be superflowous because of (1)\n    in org.apache.fop.image.analyser.ImageReaderFactory:\n    \n    static public ImageReader Make(String uri,\n                          InputStream in) throws FopImageException {\n\t\n        \tsynchronized (sem) {\n\t\tif (formats==null) {\n\t\t\t// need to use a config file and remove static methods\n\t\t\tformats = new Vector();\n\t\t\tformats.addElement(new JPEGReader());\n\t\t\tformats.addElement(new BMPReader());\n\t\t\tformats.addElement(new GIFReader());\n\t\t\tformats.addElement(new PNGReader());\n\t\t\tformats.addElement(new TIFFReader());\n\t\t\tformats.addElement(new EPSReader());\n\t\t\tformats.addElement(new SVGReader());\n\t\t\t//\n\t\t}\n\t}\n         .....\n\n\nOkay! That\u00c4s not really good solution. But it scales without bottleneck.\n\nCiao,\nJoachim\n\n\n"}, {"count": 3, "tags": [], "text": "Please accept my apology. My answer was a shot from the hip with a good chance \nof hitting its target. I must confess that, although I am a FOP committer, I \nstill work with a CVS snapshot from February 2002 at work. Currently, we make \nsure that only one FOP instance is running in a VM at a time. I thought most \nproblems were solved in the meantime, but apparently not so. I didn't have as \nmuch time this weekend as I wanted, and I'll be away next week for military \nservice (a swiss speciality), but I'll look into this after that. I'm planning \nto write a testcase that runs multiple FOPs simultaneously to find out where \nthe buggers are. Maybe we can then finally fix those last multi-threading bugs. \nAnd I'll have a look at your proposed changes if someone else doesn't do it \nbeforehand.", "attachment_id": null, "id": 24916, "creator": "jeremias.maerki@outline.ch", "time": "2002-10-20T17:06:06Z", "bug_id": 13699, "creation_time": "2002-10-20T17:06:06Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 13699, "is_private": false, "text": "There are other parts, where 'synchronized' should be appended: \n  public static FopImage Make(String href)   \nin class  FopImageFactory. \nThis method searchs the url \"href\" in \n  private static Hashtable m_urlMap = new Hashtable();\n...\n// check if already created\nFopImage imageObject = (FopImage)m_urlMap.get(href);\nif (imageObject != null) // Concurrently testing threads begin \n                         // work in following lines\n  return imageObject;\n... // following lines\n\nI tried to find the reason for exceptions in GifImage in line *) below:\n\n// Should take care of the ColorSpace and bitsPerPixel\nif  (this.m_width == 0)\n  System.err.println (\"this.m_width:  0  !\");\nif  (this.m_height == 0)\n  System.err.println (\"this.m_height:  0  !\");\n// On Exception we didn't get a message\n\nthis.m_bitmapsSize = this.m_width * this.m_height * 3;\n\nif  (this.m_bitmapsSize == 0)\n  System.err.println (\"this.m_bitmapsSize:  0  !\");\n\nthis.m_bitmaps = new byte[this.m_bitmapsSize];  \n\nint p=0;\ntry  {\n  for (int i = 0; i < this.m_height; i++) {\n    for (int j = 0; j < this.m_width; j++) {\n      p = tmpMap[i * this.m_width + j];\n      int r = (p >> 16) & 0xFF;\n      int g = (p >> 8) & 0xFF;\n      int b = (p) & 0xFF;\n      this.m_bitmaps[3 * (i * this.m_width + j)] = (byte)(r & 0xFF);  // *)\n      this.m_bitmaps[3 * (i * this.m_width + j) + 1] = (byte)(g & 0xFF);\n      this.m_bitmaps[3 * (i * this.m_width + j) + 2] = (byte)(b & 0xFF);\n    }\n  }  \n}\ncatch (Exception e) {\n  System.err.println (\"Bytes:\" + this.m_bitmapsSize);\t\t\n  System.err.println (\"p:\" + p);\t\n  System.err.println (\"width:\" + this.m_width);\n  System.err.println (\"height:\" + this.m_height);\n  e.printStackTrace ();\n}\n\nOutput: \n  Bytes:0  :-((\n  p:-1\n  width:314\n  height:109\n\nCould that be?\n", "id": 25191, "time": "2002-10-25T12:51:18Z", "creator": "joachim.unger@softwareag.com", "creation_time": "2002-10-25T12:51:18Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "In Method AbstractFopImage.close() I have deleted\n\t...\n\tthis.m_bitmaps = null;\n\tthis.m_bitmapsSize = 0;\n\t...\n\nIf a thread closes the FopImage another Thread may crash in getBitmaps().\n\n", "attachment_id": null, "bug_id": 13699, "id": 25262, "time": "2002-10-28T11:11:12Z", "creator": "joachim.unger@softwareag.com", "creation_time": "2002-10-28T11:11:12Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 13699, "attachment_id": null, "is_private": false, "id": 25907, "time": "2002-11-08T10:19:17Z", "creator": "jeremias.maerki@outline.ch", "creation_time": "2002-11-08T10:19:17Z", "text": "I've just committed your work to the maintenance branch in CVS. I've created a \ntestbed on my dev machine to run multiple FOPs at the same time. I was able to \nreproduce the NPEs almost always. After applying the changes, they went away. \nThe image caching code is still somewhat suspect in multiple ways, but it seems \nto work now. I'll close the bug but please reopen it, if you still experience \nproblems. I'm especially unsure about your last entry (the close() method). I \nstill don't know how this should really be done. I'd like to delegate a \nsolution to this to the redesign. I hope this works for you."}, {"count": 7, "tags": [], "bug_id": 13699, "is_private": false, "text": "I checked the 0.20.5rc version. the code in close() is the same as before. did \nYou change any other codde to avoid the problem in multithreading nvironment? \n(I will prove the version and write additional comments if anything happens.)\n", "id": 30161, "time": "2003-01-28T13:41:31Z", "creator": "joachim.unger@softwareag.com", "creation_time": "2003-01-28T13:41:31Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 13699, "is_private": false, "text": "Sorry that I didn't respond to your question. I did change close() at that \ntime, see:\n\nhttp://cvs.apache.org/viewcvs.cgi/xml-\nfop/src/org/apache/fop/image/Attic/AbstractFopImage.java.diff?\nr1=1.5.2.4&r2=1.5.2.5&diff_format=h\n\nSo, can I close this entry? Does it work for you? My tests show no multi-\nthreading bugs anymore.", "id": 37161, "time": "2003-05-14T08:37:16Z", "creator": "jeremias@apache.org", "creation_time": "2003-05-14T08:37:16Z", "attachment_id": null}, {"count": 9, "attachment_id": null, "bug_id": 13699, "is_private": false, "id": 37165, "time": "2003-05-14T09:05:38Z", "creator": "joachim.unger@softwareag.com", "creation_time": "2003-05-14T09:05:38Z", "tags": [], "text": "It works in my test cases!"}, {"count": 10, "tags": [], "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "attachment_id": null, "bug_id": 13699, "id": 155910, "time": "2012-04-01T06:48:04Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:48:04Z", "is_private": false}]