[{"count": 0, "tags": [], "creator": "sebastian.ricaldoni@gmail.com", "text": "I am experiencing an issue with my code running in tomcat 7.0.53 which is returning a JasperException Caused by: javax.el.MethodNotFoundException: Unable to find unambiguous method: class java.lang.String.replace(java.lang.String, java.lang.String)\n\nBelow is the JSP code causing the problem. This does not happen in previous versions of Tomcat including 7.0.50 and 7.0.52.\n\n\n<div class=\"slyout-container ${object.replace('.', '_')}\" data-searchbox-target=\"${target }\">\n\nobject is of type String with values such as \"module.submodule\" and I want to make it \"module_submodule\"\n\n\nBelow is the stack trace. \n\nCaused by: org.apache.jasper.JasperException: javax.el.MethodNotFoundException: Unable to find unambiguous method: class java.lang.String.replace(java.lang.String, java.lang.String)\nat org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:549)\nat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:470)\nat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:390)\nat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:334)\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:727)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\nat org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:748)\nat org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:604)\nat org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:543)\nat org.apache.jasper.runtime.JspRuntimeLibrary.include(JspRuntimeLibrary.java:954)\nat org.apache.jsp.layouts.window_jsp._jspService(window_jsp.java:92)\nat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:727)\nat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:432)\nat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:390)\nat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:334)\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:727)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\nat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\nat org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:748)\nat org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:486)\nat org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:411)\nat org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:338)\nat org.apache.tiles.servlet.context.ServletTilesRequestContext.forward(ServletTilesRequestContext.java:241)\n... 51 more\nCaused by: javax.el.MethodNotFoundException: Unable to find unambiguous method: class java.lang.String.replace(java.lang.String, java.lang.String)\nat javax.el.Util.findWrapper(Util.java:333)\nat javax.el.Util.findMethod(Util.java:214)\nat javax.el.BeanELResolver.invoke(BeanELResolver.java:174)\nat org.apache.jasper.el.JasperELResolver.invoke(JasperELResolver.java:139)\nat org.apache.el.parser.AstValue.getValue(AstValue.java:173)\nat org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:184)\nat org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:967)\nat org.apache.jsp.WEB_002dINF.views.core.search.searchForm_jsp._jspService(searchForm_jsp.java:171)\nat org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:727)\nat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:432)\n... 77 more\n\n\nThanks,\nSebastian", "id": 174688, "time": "2014-04-17T19:12:41Z", "bug_id": 56425, "creation_time": "2014-04-17T19:12:41Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 56425, "attachment_id": null, "text": "In the String class there is no such method as \"replace(String, String)\"\n\nThe methods are\nreplace(CharSequence, CharSequence)\nreplace(char, char)\n\nMethod matching was changed in 7.0.53 (implementing fix for bug 55483).\n\nApparently when searching for a method in Util.findWrapper() there is no distinction between \"isAssignableFrom\" and \"isCoercibleFrom\" parameters when weighting potential matches.\n\nI do not see any place in EL specification that clarifies how method matching is performed.\n\n\nBy the way, for your use case I can suggest to use fn:replace() function from JSTL tag library,\nhttp://tomcat.apache.org/taglibs/standard/", "id": 174698, "time": "2014-04-18T12:53:06Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-04-18T12:53:06Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 56425, "attachment_id": null, "text": "Thanks for the report. This has been fixed in 8.0.x for 8.0.6 onwards and in 7.0.x for 7.0.54 onwards.", "id": 174886, "time": "2014-04-25T19:55:11Z", "creator": "markt@apache.org", "creation_time": "2014-04-25T19:55:11Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 56425, "attachment_id": null, "text": "Can I see the commit where this bug was fixed?\n\nI ran into this bug when upgrading from 7.0.50 to 7.0.55.\n\nI was looking at the latest code for BeanELResolver.java and Util.java.\n\nAt a glance, it looks like:\n\ngetWrapper() does a bunch of fancy things including type coercion\ngetMethod() only looks for a perfect match.\n\nI don't see BeanELResolver calling getWrapper() anywhere, only getMethod().\n\nThis matches the behaviour I'm seeing, where I get MethodNotFoundExceptions forr mappings like:\n\ndoFoo(Integer bar) -> doFoo(int bar)", "id": 178467, "time": "2014-10-15T00:45:25Z", "creator": "lafleche@amazon.com", "creation_time": "2014-10-15T00:45:25Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 56425, "attachment_id": null, "id": 178468, "time": "2014-10-15T06:26:26Z", "creator": "violetagg@apache.org", "creation_time": "2014-10-15T06:26:26Z", "is_private": false, "text": "Hi,\n\nThis is the revision r1590121. Can you provide a test where you see the issue?\n\nRegards,\nVioleta"}, {"count": 5, "tags": [], "creator": "violetagg@apache.org", "attachment_id": 32137, "text": "Created attachment 32137\nTest\n\nThe following test reproduces the issue.", "id": 178676, "time": "2014-10-22T13:48:06Z", "bug_id": 56425, "creation_time": "2014-10-22T13:48:06Z", "is_private": false}, {"count": 6, "tags": [], "creator": "violetagg@apache.org", "attachment_id": 32140, "text": "Created attachment 32140\nTest\n\nThe first problem in the attached test - testBug56425a is:\n\n\njava.lang.ClassCastException: java.lang.Long cannot be cast to [Ljava.lang.Object;\n\tat org.apache.el.lang.ELSupport.coerceToArray(ELSupport.java:497)\n\tat org.apache.el.lang.ELSupport.coerceToType(ELSupport.java:484)\n\tat org.apache.el.ExpressionFactoryImpl.coerceToType(ExpressionFactoryImpl.java:47)\n\tat javax.el.Util.isCoercibleFrom(Util.java:493)\n\tat javax.el.Util.findWrapper(Util.java:293)\n\tat javax.el.Util.findMethod(Util.java:213)\n\tat javax.el.BeanELResolver.invoke(BeanELResolver.java:157)\n\tat javax.el.CompositeELResolver.invoke(CompositeELResolver.java:84)\n\tat org.apache.el.parser.AstValue.getValue(AstValue.java:157)\n\tat org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:187)\n\tat javax.el.ELProcessor.getValue(ELProcessor.java:61)\n\tat javax.el.ELProcessor.eval(ELProcessor.java:54)\n\tat javax.el.TestUtil.testBug56425a(TestUtil.java:48)\n\n\n\nI'm attaching possible fix for this ClassCastException.\n\nThe second problem in the test - testBug56425b still failes with:\n\njavax.el.MethodNotFoundException: Unable to find unambiguous method: class javax.el.TesterBean.setValueInt(java.lang.Long)\n\tat javax.el.Util.findWrapper(Util.java:343)\n\tat javax.el.Util.findMethod(Util.java:213)\n\tat javax.el.BeanELResolver.invoke(BeanELResolver.java:157)\n\tat javax.el.CompositeELResolver.invoke(CompositeELResolver.java:84)\n\tat org.apache.el.parser.AstValue.getValue(AstValue.java:157)\n\tat org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:187)\n\tat javax.el.ELProcessor.getValue(ELProcessor.java:61)\n\tat javax.el.ELProcessor.eval(ELProcessor.java:54)\n\tat javax.el.TestUtil.testBug56425b(TestUtil.java:55)", "id": 178695, "time": "2014-10-23T08:44:59Z", "bug_id": 56425, "creation_time": "2014-10-23T08:44:59Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 56425, "attachment_id": null, "text": "The array handling fix looks lood to me. I'm looking into the second issue now.", "id": 178703, "time": "2014-10-23T13:01:38Z", "creator": "markt@apache.org", "creation_time": "2014-10-23T13:01:38Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 56425, "attachment_id": null, "text": "The second test case is not valid. Numeric literals are treated as instances of Long (as per the EL spec). There are two matching methods. One with a paremeter of int and one with a parameter of Integer. There is no way for EL to differentiate bewtween them. The match is ambiguous (both matches would require co-ercion). Therefore Tomcat's behaviour here is correct.\n\nI'll get the fix for the first issue committed shortly.", "id": 178704, "time": "2014-10-23T13:18:06Z", "creator": "markt@apache.org", "creation_time": "2014-10-23T13:18:06Z", "is_private": false}, {"count": 9, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 178705, "time": "2014-10-23T13:28:28Z", "bug_id": 56425, "creation_time": "2014-10-23T13:28:28Z", "is_private": false, "text": "The additional array issue has been fixed in Tomcat 8.0.x in 8.0.15 onwards. It does not occur in earlier versions."}]