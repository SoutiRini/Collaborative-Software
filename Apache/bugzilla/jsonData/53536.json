[{"count": 0, "tags": [], "creator": "daniel.stankiewicz@asseco.pl", "attachment_id": 29048, "text": "Created attachment 29048\nLog4j XML configuration\n\nI'm using org.apache.log4j.rolling.RollingFileAppender together with org.apache.log4j.rolling.TimeBasedRollingPolicy to rotate log files periodically. I need log files to be placed in directories based on date pattern.\n\nUnfortunately, the first log file is created properly, while after rollover RollingFileAppender doesn't check if for newly calculated log file path the whole directory path exists and tries to create FileOutputStream directly, which causes FileNotFoundException:\n\nlog4j:WARN Exception during rollover, rollover deferred.\njava.io.FileNotFoundException: c:\\ssr\\log\\20120711_1336\\ssr.log (The system cannot find the path specified)\n\tat java.io.FileOutputStream.open(Native Method)\n\tat java.io.FileOutputStream.<init>(FileOutputStream.java:194)\n\tat java.io.FileOutputStream.<init>(FileOutputStream.java:116)\n\tat org.apache.log4j.rolling.RollingFileAppender.rollover(RollingFileAppender.java:286)\n\tat org.apache.log4j.rolling.RollingFileAppender.subAppend(RollingFileAppender.java:353)\n\tat org.apache.log4j.WriterAppender.append(WriterAppender.java:162)\n\tat org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:251)\n\tat org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:66)\n\tat org.apache.log4j.Category.callAppenders(Category.java:206)\n\tat org.apache.log4j.Category.forcedLog(Category.java:391)\n\tat org.apache.log4j.Category.info(Category.java:666)\n\tat asseco.ssr.common.Log4jTests.main(Log4jTests.java:21)\n\nThe similar bug 9150 was filled for base Log4J FileAppender class and it is now fixed. That's why first log file is created successfully. But during rollover() in RollingFileAppender new FileOutputStream is created without creating a new parent directory, which results in the above exception and the file is not rolled.", "id": 160585, "time": "2012-07-11T11:48:09Z", "bug_id": 53536, "creation_time": "2012-07-11T11:48:09Z", "is_private": false}, {"count": 1, "tags": [], "creator": "daniel.stankiewicz@asseco.pl", "attachment_id": null, "text": "org.apache.log4j.FileAppender contains the following code for creating FileOutputStream, which should be incorporated also to org.apache.log4j.rolling.RollingFileAppender:\n\n    FileOutputStream ostream = null;\n    try {\n          //\n          //   attempt to create file\n          //\n          ostream = new FileOutputStream(fileName, append);\n    } catch(FileNotFoundException ex) {\n          //\n          //   if parent directory does not exist then\n          //      attempt to create it and try to create file\n          //      see bug 9150\n          //\n          String parentName = new File(fileName).getParent();\n          if (parentName != null) {\n             File parentDir = new File(parentName);\n             if(!parentDir.exists() && parentDir.mkdirs()) {\n                ostream = new FileOutputStream(fileName, append);\n             } else {\n                throw ex;\n             }\n          } else {\n             throw ex;\n          }\n    }", "id": 160586, "time": "2012-07-11T12:04:38Z", "bug_id": 53536, "creation_time": "2012-07-11T12:04:38Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 53536, "text": "Created attachment 29049\nProposed patch\n\nThe code of proposed patch is copied from org.apache.log4j.FileAppender.setFile(String, boolean, boolean, int) method.\n\nIt would be best to extract this functionality in FileAppender to another protected method so that derived classes (like org.apache.log4j.rolling.RollingFileAppender) could use the method and the code wouldn't be duplicated.", "id": 160588, "time": "2012-07-11T12:40:15Z", "creator": "daniel.stankiewicz@asseco.pl", "creation_time": "2012-07-11T12:40:15Z", "is_private": false, "attachment_id": 29049}, {"count": 3, "tags": [], "bug_id": 53536, "attachment_id": null, "id": 167238, "time": "2013-05-16T09:41:46Z", "creator": "grobmeier@gmail.com", "creation_time": "2013-05-16T09:41:46Z", "is_private": false, "text": "Thanks for the patch! \n\nI used the duplicated method. You are right, it should be refactored. But with log4j 2 arriving to stable soon, we are minimizing our efforts to log4j 1"}]