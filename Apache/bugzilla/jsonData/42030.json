[{"count": 0, "tags": [], "bug_id": 42030, "attachment_id": null, "text": "build.xml:\n\n<manifest>\n  <attribute name=\"Class-Path\" value=\"commons-cli-1.0.jar commons-lang-2.2.jar\nresolver.jar xercesImpl.jar xml-apis.jar\" />\n  <attribute name=\"Main-Class\" value=\"edu.bu.cs.snbench.snafuc.snafugg.Snafugg\" />\n</manifest>\n\nMETA-INF/MANIFEST.MF:\n\nManifest-Version: 1.0\nAnt-Version: Apache Ant 1.7.0\nCreated-By: 1.5.0_07-87 (\"Apple Computer, Inc.\")\nMain-Class: edu.bu.cs.snbench.snafuc.snafugg.Snafugg\nClass-Path: commons-cli-1.0.jar commons-lang-2.2.jar resolver.jar xerc\n esImpl.jar xml-apis.jar\n\n\nProblem:\nThe Class-Path attribute should come immediately after the Manifest-Version\nattribute, otherwise the jar won't load with the classpath. This bug has been\nconfirmed on Windows XP with Sun JDK 1.5, and MacOSX with Apple's JDK 1.5. This\nproblem has been here since as least Ant 1.6.5.", "id": 101361, "time": "2007-04-03T02:47:28Z", "creator": "wyuenho@gmail.com", "creation_time": "2007-04-03T02:47:28Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 42030, "text": "You should know that we regularly reject most (but not all) bugreps about\nmanifest setup, on the basis that we follow the specifications to the letter:\nhttp://java.sun.com/javase/6/docs/technotes/guides/jar/jar.html\n\nThe normal problems we have with programs handling ant-created manifests are\nwith programs that don't read the spec fully, and make a mess of things like\nwrapping long documents.\n\n1. please identify in the specification *or elsewhere in the sun site*, anywhere\nwhere it requires the Class-Path entry to be the first on the list.\n\n2. please identify the complete JDK versions and installations. One is the Apple\none, the other the sun one? Which sub versions, e.g. 1.5.06?\n\n3. what is the error and the complete build file?\n", "id": 101363, "time": "2007-04-03T03:05:44Z", "creator": "stevel@apache.org", "creation_time": "2007-04-03T03:05:44Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "peterreilly@apache.org", "text": "Marking as needinfo as per steve's comments", "id": 101364, "time": "2007-04-03T03:26:06Z", "bug_id": 42030, "creation_time": "2007-04-03T03:26:06Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "wyuenho@gmail.com", "text": "Created attachment 19902\nbuild.xml\n\nRead line 50 to 62", "id": 101376, "time": "2007-04-03T11:10:22Z", "bug_id": 42030, "creation_time": "2007-04-03T11:10:22Z", "is_private": false, "attachment_id": 19902}, {"count": 4, "text": "Steve:\n\n1. This requirement is nowhere to be found on the internet.\n2. Sun's JDK 1.6.0, and 1.5.0_11 on Windows, Apple's JDK 1.5.0_07 and JDK 1.6.0\n3. The build file has been attached\n\nThe problem with Ant generated manifests is that somehow Class-Path always gets\nappended to the end. Suppose the Main-Class is referencing some classes in the\nClass-Path, the above JDKs' java commands can't load the Class-Path before the\nloading the Main-Class and executing the jar file results in\nNoClassDefFoundErrors. This problem does not exist by using the JDK supplied jar\nutility because the Class-Path attribute is always merged in a place before the\nMain-Class. This may be a JDK implementation-specific bug but it's a big one.\nMay be Ant can do something about this for now?", "creator": "wyuenho@gmail.com", "is_private": false, "id": 101377, "time": "2007-04-03T11:17:54Z", "bug_id": 42030, "creation_time": "2007-04-03T11:17:54Z", "tags": [], "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 42030, "text": "Look at this 9-year old bug on Sun's website.\n\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4164467", "id": 101378, "time": "2007-04-03T11:30:31Z", "creator": "wyuenho@gmail.com", "creation_time": "2007-04-03T11:30:31Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "wyuenho@gmail.com", "attachment_id": null, "id": 101473, "time": "2007-04-05T13:23:13Z", "bug_id": 42030, "creation_time": "2007-04-05T13:23:13Z", "is_private": false, "text": "Changed Hadware, and OS to their proper values. Sorry, I should have done this\nwhen I filed this bug. I'm changing them because I can't search for bug."}, {"count": 7, "tags": [], "creator": "peterreilly@apache.org", "attachment_id": null, "text": "I have done some testing with a simple build.\nIt does not seem to matter which order the Class-Path\nand Main-Class is used.\n\nIf the main class in the the Class-Path, a NoClassDefFoundError\nis caused.\n\nCan you check that changing the order works for you?\n(use the jar task and add a META-INF/MANIFEST.MF by hand).\n", "id": 103864, "time": "2007-05-31T02:57:37Z", "bug_id": 42030, "creation_time": "2007-05-31T02:57:37Z", "is_private": false}, {"count": 8, "attachment_id": null, "bug_id": 42030, "is_private": false, "id": 103929, "time": "2007-05-31T18:08:42Z", "creator": "wyuenho@gmail.com", "creation_time": "2007-05-31T18:08:42Z", "tags": [], "text": "I'm not sure what you are asking because I have clearly said in comment #4 that\nthe manifest attributes' order matters on the current set of JDKs from Sun.\n\nMy current work-around involves generating a manifest file with the manifest\ntask, then use the exec task to invoke the native jar command to do the merging."}, {"count": 9, "text": "The problem is that we need a simple example\nthat shows the problem. We cannot change\nthe code blindly - i.e. we need an example\nthat fails with the current behavior and works\nwith the suggested behavior. I tried to make\nsure a test build and have not yet succeeded.", "bug_id": 42030, "attachment_id": null, "id": 103946, "time": "2007-06-01T00:35:28Z", "creator": "peterreilly@apache.org", "creation_time": "2007-06-01T00:35:28Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "bug_id": 42030, "attachment_id": 20304, "text": "Created attachment 20304\ntest package\n\nThis is a simple package that will produce the NoClassDefFoundError.\n\nExtract this file and invoke the jar file like so:\n\njava -jar test.jar -v\n\nA simpler test will put the Test class in a default top level package, in this\ncase the attributes order in the manifest file will not matter, but once the\nclass is inside a package, the attribute's order became significant.", "id": 103996, "time": "2007-06-01T20:02:58Z", "creator": "wyuenho@gmail.com", "creation_time": "2007-06-01T20:02:58Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 42030, "text": "Thanks for the example.\nThere is a couple of bugs with the build file.\n1) if you do a jar tf on test.jar, you will see that\n   the jar file does not include any classes.\n2) the Main-Class is set to Test and not to  edu.bu.cs.snbench.snafuc.Test\n3) (minor) the classpath ref in the build file may include\n   the created jar file (not good practice).\n\n1) is due to the <include> nested element in the <jar> task,\n   it is not needed and in its current form will only include the\n   directory and not the contents.\n\nI am including a new build file that fixes these issues:\nproject name=\"test\" default=\"test\" basedir=\".\">\n  <path id=\"classpath\">\n    <fileset dir=\".\">\n      <include name=\"*.jar\" />\n    </fileset>\n  </path>\n  \n  <target name=\"test\">\n    <mkdir dir=\"bin\"/>\n    <javac srcdir=\".\"\n\t   destdir=\"bin\"\n\t   deprecation=\"true\"\n\t   debug=\"true\"\n\t   debuglevel=\"lines,vars,source\"\n\t   classpath=\"commons-cli-1.0.jar\">\n      <include name=\"*.java\" />\n    </javac>\n    <mkdir dir=\"META-INF\" />\n    <jar destfile=\"test.jar\"\n\t basedir=\"bin\"\n       >\n      <!--<include name=\"edu\" /> -->\n      <manifest>\n\t<attribute name=\"Class-Path\"\n\t\t   value=\"commons-cli-1.0.jar\" />\n\t<attribute name=\"Main-Class\"\n\t\t   value=\"edu.bu.cs.snbench.snafuc.Test\" />\n      </manifest>\n    </jar>\n    <delete dir=\"META-INF\" />\n  </target>\n  <target name=\"clean\">\n    <delete dir=\"bin\"/>\n    <delete>\n      <fileset dir=\".\" includes=\"test.jar\"/>\n    </delete>\n  </target>\n</project>\n\nLooking at your original build.xml, I see the same problem\n  <include name=\"edu/bu/cs/snbench/snafuc/snafugg/*\" />\n  <include name=\"edu/bu/cs/snbench/snafuc/SnBenchTypes.class\" />\n\neither drop the <include> or do <include name=\"edu/**\"/>\n(note the two **'s)\n\n\n", "id": 103999, "time": "2007-06-02T07:05:47Z", "creator": "peterreilly@apache.org", "creation_time": "2007-06-02T07:05:47Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 42030, "text": "Ah now I get it. Thanks for pointing this out. The include thing really screwed\nme over. ", "id": 104001, "time": "2007-06-02T10:53:03Z", "creator": "wyuenho@gmail.com", "creation_time": "2007-06-02T10:53:03Z", "is_private": false, "attachment_id": null}]