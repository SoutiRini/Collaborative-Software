[{"count": 0, "text": "Just an idea: visual diff and merge functionality for JMeter scripts. By this I \nmean:\n1. Functionality to visually display differences between two JMX files \n   (For eg:, by the highlighting the differing elements)\n2. Functionality to accept or reject specific differences.\n\nThis is useful in a multi-developer environment\n\nAn average \"JMeter developer\" generally creates JMXs using the graphical \ninterface, not text tools. A straight text diff between two JMX files is quite \nincomprehensible to the average developer. Instead, differences need to be \ndiplayed in the same visual interface in which JMXs are created.\n\nSince JMX scripts are XML, and there are tools to compare XML documents (e.g.: \nhttp://www.xml.com/pub/r/738 ), this should be quite do-able. However, quite \nsome work would be required in JMeter to \"understand\" the XML differences and \ndisplay them visually, and to build the \"merge\" functionality.", "bug_id": 33305, "attachment_id": null, "id": 70255, "time": "2005-01-31T02:33:47Z", "creator": "sonam.chauhan@ce.com.au", "creation_time": "2005-01-31T02:33:47Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "sonam.chauhan@ce.com.au", "attachment_id": null, "id": 124958, "time": "2009-02-18T19:49:05Z", "bug_id": 33305, "creation_time": "2009-02-18T19:49:05Z", "is_private": false, "text": "Just wanted to present an alternative approach, that \"waters down\" this feature request somewhat.\n\nModern version control tools (e.g., Subversion) have 'pluggable-diff' functionality. Essentially, a 'diff' operation in Subversion can be configured to call arbitrary external diff program - Subversion passes it the paths to two files to diff. Now, Jmeter scripts are XML. Open-source XML diff-ing tools exist (see http://www.manageability.org/blog/stuff/open-source-xml-diff-in-java ) \n\nSo this approach would support diff operation for JMeter scripts using version control software: Subversion Diff on a JMX would call a wrapper that uses XML diff software to output a set of changed, added and deleted XML nodes in the JMX \n\nThe last bit of the puzzle requires JMeter support: \n\n1. Visual representation of changes in JMeter GUI\nCan the JMeter GUI be enhanced to 'outline' elements in different colours. For instance, if a sampler has been added, the sampler is displayed in the test plan with a green Swing bounding box. If a POST parameter in a HTTP sampler was deleted, it is displayed with a red (or 'crossed-out') bounding box. \n\nThis could either be driven by 'color=\"green\"' attribute in the (modified) JMX, or preferably, an independent XSL stylesheet which gives styling hints for elements displayed in JMeter GUI.\n\n2. Support for merging changes \nCan JMeter be enhanced to support copy and paste between JMeter instances? \n\n\n"}]