[{"count": 0, "tags": [], "bug_id": 48318, "text": "If a directory contains a file that is not readable by the Tomcat\nprocess (eg file permissions, dangling symlink) then Tomcat throws a\nNullPointerException and returns a 500 Internal Server Error to the\nclient.\n\nThrowing NPE in these circumstances is certainly wrong.  Returning 500\nwith no further information is unhelpful behavior and should be fixed.\nGenerally, interfaces of this type at least list inaccessible files\n(Windows Explorer, UNIX ls(1), BSD FTP client, ...) and only return an\nerror when one attempts to access such a file.\n\nmarkt suggests an alternative of simply ignoring inaccessible files but notes\nthat \"could cause issues if a user tries to upload a file of that name\" and\nsuggests better error reporting.\n\n\nStack:\n\n    SEVERE: Servlet.service() for servlet webdav threw exception\n    java.lang.NullPointerException\n            at org.apache.catalina.servlets.WebdavServlet.parseProperties(Unknown Source)\n            at org.apache.catalina.servlets.WebdavServlet.doPropfind(Unknown Source)\n            at org.apache.catalina.servlets.WebdavServlet.service(Unknown Source)\n            at javax.servlet.http.HttpServlet.service(Unknown Source)\n            ...\n\n\nMethod parseProperties() is in\njava/org/apache/catalina/servlets/WebdavServlet.java.org and the NPE\nhappens when cacheEntry.attributes is null (case FIND_BY_PROPERTY in my\ntesting and possibly in other cases too).\n\nFollowing the breadcrumbs via:\n\n    cacheEntry = resources.lookupCache(path);\n\nleads eventually to java/org/apache/naming/resources/FileDirContext.java:\n\n    public Attributes getAttributes(String name, String[] attrIds)\n        throws NamingException {\n        // Building attribute list\n        File file = file(name);\n        if (file == null)\n            throw new NamingException\n                (sm.getString(\"resources.notFound\", name));\n    ...\n    protected File file(String name) {\n        File file = new File(base, name);\n        if (file.exists() && file.canRead()) {\n            ... // do useful stuff\n        } else {\n            return null; // ouch\n        }", "id": 132548, "time": "2009-12-01T07:07:07Z", "creator": "mcarpenter@free.fr", "creation_time": "2009-12-01T07:07:07Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 134465, "time": "2010-02-12T22:16:32Z", "bug_id": 48318, "creation_time": "2010-02-12T22:16:32Z", "tags": [], "text": "This has been fixed in trunk and proposed for 6.0.x"}, {"count": 2, "tags": [], "bug_id": 48318, "text": "This has been fixed in 6.0.x and will be included in 6.0.25 onwards.", "id": 134793, "time": "2010-02-22T21:15:22Z", "creator": "markt@apache.org", "creation_time": "2010-02-22T21:15:22Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 48318, "is_private": false, "text": "Besides dead links or missing permissions, also a folder with a trailing dot in its name leads to this error. e.g. \"00.\"", "id": 145015, "time": "2011-03-15T09:23:23Z", "creator": "r.neubauer@seeburger.de", "creation_time": "2011-03-15T09:23:23Z", "attachment_id": null}]