[{"attachment_id": null, "tags": [], "creator": "qiyaoltc@gmail.com", "text": "In java/javax/el/BeanELResolver.java,\n255                 private Method read(ELContext ctx) {\n256                         if (this.read == null) {\n257                                 this.read = getMethod(this.owner, descriptor.getReadMethod());\n258                                 if (this.read == null) {\n259                                         throw new PropertyNotFoundException(message(ctx,\n260                                                         \"propertyNotReadable\", new Object[] {\n261                                                                         type.getName(), descriptor.getName()\n    }));\n262                                 }\n263                         }\n264                         return this.read;\n265                 }\n\nIf two threads execute method write in parallel, the value of this.read is non-determined.\nThe output below is what we got from race detector (http://www.alphaworks.ibm.com/tech/msdk), and this result shows that threads http-8080-x may access this field in parallel.\nOne possible fix to this problem is to move line 256-257 to synchronization block.\n\n\n---------------------------------------------------------------------------\nData Race 1 : javax.el.BeanELResolver$BeanProperty : read\n\n  Thread \"http-8080-5\" : Tid 36 : WRITE\n        Lock Set : [ ]\n      [javax.el.BeanELResolver$BeanProperty : read(Ljavax/el/ELContext;)Ljava/lang/reflect/Method; :  : 257]\n      [javax.el.BeanELResolver$BeanProperty : access$000(Ljavax/el/BeanELResolver$BeanProperty;Ljavax/el/ELContext;)Ljava/lang/reflect/Method; :  : 209]\n      [javax.el.BeanELResolver : getValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; :  : 60]\n      [javax.el.CompositeELResolver : getValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; :  : 54]\n      [org.apache.el.parser.AstValue : getValue(Lorg/apache/el/lang/EvaluationContext;)Ljava/lang/Object; :  : 118]\n........\n  Thread \"http-8080-1\" : Tid 32 : WRITE\n        Lock Set : [ ]\n      [javax.el.BeanELResolver$BeanProperty : read(Ljavax/el/ELContext;)Ljava/lang/reflect/Method; :  : 257]\n      [javax.el.BeanELResolver$BeanProperty : access$000(Ljavax/el/BeanELResolver$BeanProperty;Ljavax/el/ELContext;)Ljava/lang/reflect/Method; :  : 209]\n      [javax.el.BeanELResolver : getValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; :  : 60]\n      [javax.el.CompositeELResolver : getValue(Ljavax/el/ELContext;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; :  : 54]\n      [org.apache.el.parser.AstValue : getValue(Lorg/apache/el/lang/EvaluationContext;)Ljava/lang/Object; :  : 118]", "count": 0, "id": 134762, "time": "2010-02-22T06:17:59Z", "bug_id": 48791, "creation_time": "2010-02-22T06:17:59Z", "is_private": false}, {"count": 1, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 134796, "time": "2010-02-22T21:30:27Z", "bug_id": 48791, "creation_time": "2010-02-22T21:30:27Z", "tags": [], "text": "It might be inefficient (although I doubt you'd notice it in any realistic test), it might be poor coding style (that is arguable) but it isn't a bug."}, {"count": 2, "text": "(In reply to comment #1)\n> It might be inefficient (although I doubt you'd notice it in any realistic\n> test), it might be poor coding style (that is arguable) but it isn't a bug.\nCan you explain a little bit why it isn't a bug?\nIf two threads access the following code,\n255        private Method read(ELContext ctx) {\n256            if (this.read == null) {\n257              this.read = getMethod(this.owner,descriptor.getReadMethod());\n\nThe value of this.read will be either return value of getMethod invoked by two threads.  Can we change it to this manner,\n\nif (this.read == null) {\n      synchronized (lock4Read){\n           if (this.read == null){\n             this.read = getMethod(this.owner,descriptor.getReadMethod());\n           }\n      }\n\nThis change is still efficient, and make sure no race in it.  How do you think?", "bug_id": 48791, "is_private": false, "id": 134985, "time": "2010-03-02T02:38:55Z", "creator": "qiyaoltc@gmail.com", "creation_time": "2010-03-02T02:38:55Z", "tags": [], "attachment_id": null}]