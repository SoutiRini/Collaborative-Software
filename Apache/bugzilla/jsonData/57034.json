[{"count": 0, "tags": [], "bug_id": 57034, "text": "Workbook workbook = new SXSSFWorkbook();\n        Sheet sheet = workbook.createSheet();\n        \n        Row row = sheet.createRow(1);\n        Cell cell = row.createCell(0);\n        String x = null;\n        cell.setCellValue(x);\n        sheet.autoSizeColumn(0, true);\n\nI tested HSSFWorkbook, XSSFWorkbook, SXSSFWorkbook, only SXSSFWorkbook throws NullPointerException\n\ndue to different result to null String value\n\ncell.getRichStringCellValue().getString() return null", "id": 178160, "time": "2014-09-29T02:20:12Z", "creator": "guoh0115@gmail.com", "creation_time": "2014-09-29T02:20:12Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "apache@gagravarr.org", "text": "I'm not sure that setting a null String as the cell value should be allowed, so I think we should probably be throwing an exception at the cell.setCellValue((String)null) point, rather than later in the auto size\n\nCan anyone spot a problem with that as an approach?", "count": 1, "id": 178168, "time": "2014-09-29T11:19:03Z", "bug_id": 57034, "creation_time": "2014-09-29T11:19:03Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 57034, "text": "Still valid on 3.11-Final\n\nI think that NPE should be prevented when autosizing column and value should be treated as empty string.\n\nCode of SheetUtil.java\n\n        if (cellType == Cell.CELL_TYPE_STRING) {\n            RichTextString rt = cell.getRichStringCellValue();\n!!!         String[] lines = rt.getString().split(\"\\\\n\");      !!! this is wrong !!!\n            for (int i = 0; i < lines.length; i++) {\n                String txt = lines[i] + defaultChar;\n\n                AttributedString str = new AttributedString(txt);\n                copyAttributes(font, str, 0, txt.length());\n\n                if (rt.numFormattingRuns() > 0) {\n                    // TODO: support rich text fragments\n                }\n\n                width = getCellWidth(defaultCharWidth, colspan, style, width, str);\n            }\n        }\n\nIt could be a benefit if we can set how to treat NULL values when setting Cell values. For me, it would be better to accept NULL value as empty string (maybe based on some parameter). When exporting list of objects to Excel via POI, it is quite annoying to handle all getters like \n\n        object.getValue() == null ? \"\" : object.getValue();", "id": 188301, "time": "2016-02-09T08:14:03Z", "creator": "wors@email.cz", "creation_time": "2016-02-09T08:14:03Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 57034, "text": "In r1729849 I've added a common unit test for HSSF + XSSF + SXSSF for this. It already passed with no changes needed for the first two, and is now fixed for SXSSF. Setting a string cell value of null then auto-sizing works fine, with the column getting the default size if no other values exist", "id": 188359, "time": "2016-02-11T15:14:31Z", "creator": "apache@gagravarr.org", "creation_time": "2016-02-11T15:14:31Z", "is_private": false, "attachment_id": null}]