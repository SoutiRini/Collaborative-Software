[{"count": 0, "tags": [], "bug_id": 4861, "attachment_id": null, "text": "We use log4j 1.1.3 extensively in long running server processes. Periodically \nwe see the following traceback being dumped to stderr. This does not terminate \nthe server process, though log data does appear to be lost.\n\nlog4j:ERROR Failed to flush writer,\njava.io.InterruptedIOException\n        at java.io.FileOutputStream.writeBytes(Native Method)\n        at java.io.FileOutputStream.write(FileOutputStream.java:212)\n        at java.io.OutputStreamWriter.flushBuffer(OutputStreamWriter.java:230)\n        at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:244)\n        at org.apache.log4j.helpers.QuietWriter.flush(QuietWriter.java:49)\n        at org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:309)\n        at org.apache.log4j.WriterAppender.append(WriterAppender.java:157)\n        at org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:251)\n        at org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders\n(AppenderAttachableImpl.java:57)\n        at org.apache.log4j.Category.callAppenders(Category.java:255)\n        at org.apache.log4j.Category.forcedLog(Category.java:445)\n        at org.apache.log4j.Category.error(Category.java:364)", "id": 7908, "time": "2001-11-14T01:52:40Z", "creator": "rmb@apama.com", "creation_time": "2001-11-14T01:52:40Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 4861, "attachment_id": null, "id": 11554, "time": "2002-03-07T18:27:43Z", "creator": "george.hawkins@pobox.com", "creation_time": "2002-03-07T18:27:43Z", "is_private": false, "text": "This error occurs consistently in my short lived client application running on \nSolaris using JDK 1.4 and log4j-1.2beta3 (this bug does not occur when running \non Win2K).\n\nIt always occurs when I call System.exit(0) in the main thread and there are \nother threads. In my case these are daemon threads (I'm afraid I haven't \nchecked to see if this is relevant). The root of the resulting stack trace is \nalways a thread run() method, like so:\n\nlog4j:ERROR Failed to flush writer,\njava.io.InterruptedIOException\n        at java.io.FileOutputStream.writeBytes(Native Method)\n        at java.io.FileOutputStream.write(FileOutputStream.java:257)\n        at sun.nio.cs.StreamEncoder$CharsetSE.writeBytes(StreamEncoder.java:334)\n        at sun.nio.cs.StreamEncoder$CharsetSE.implFlushBuffer\n(StreamEncoder.java:403)\n        at sun.nio.cs.StreamEncoder$CharsetSE.implFlush(StreamEncoder.java:407)\n        at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:150)\n        at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:213)\n        at org.apache.log4j.helpers.QuietWriter.flush(QuietWriter.java:49)\n        at org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:314)\n        at org.apache.log4j.WriterAppender.append(WriterAppender.java:153)\n        at org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:221)\n        at org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders\n(AppenderAttachableImpl.java:57)\n        at org.apache.log4j.Category.callAppenders(Category.java:199)\n        at org.apache.log4j.Category.forcedLog(Category.java:392)\n        at org.apache.log4j.Category.info(Category.java:680)\n        at example.DataManager$1.run(DataManager.java:328)\n\nSorry I don't have time to create a good minimal demo application to show off \nthis bug but I'm at a customer site at the moment.\n\n[ PS the version numbers displayed in Bugzilla for Log4j only go up to 1.1 ]\n"}, {"count": 2, "tags": [], "bug_id": 4861, "attachment_id": null, "text": "\nIt looks like a a JVM problem to me. Would you care to report this problem on \nthe log4j-dev list? Thanks, Ceki", "id": 11759, "time": "2002-03-13T20:59:54Z", "creator": "ceki@apache.org", "creation_time": "2002-03-13T20:59:54Z", "is_private": false}, {"count": 3, "tags": [], "text": "I too get this exception on Solaris using JVM 1.4.1 and 1.4.2 but not on XP. I \nwonder what the correct log4j behaviour should be. \n\nI have a thread manager class and many worker threads rnuning in the \nbackground. If the thread manager decides to stop (e.g. because there are too \nmany errors being reported by the worker threads), it tells threads to close \n(by setting a flag) and also sending an interrupt (for those waiting for items \nin a FIFO queue fed by producer threads). I get the error in a worker thread \nwhen my thread manager class tells the worker thread to close. What is log4j's \nintended behaviour since what is being reporting is correct? From the JDK \njavadoc, InterruptedIOException \"indicate[s] that an input or output transfer \nhas been terminated because the thread performing it was interrupted\". This \nseems to me whatis happening. It would be preferable if log4j retried. This \ndoesn't answer why it works on XP and not Solaris.\n\n", "is_private": false, "bug_id": 4861, "id": 42098, "time": "2003-08-04T18:42:20Z", "creator": "praful.kapadia@ubsw.com", "creation_time": "2003-08-04T18:42:20Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "I get this problem too, but only on Solaris and not on aix51, hp11, or win2k.  \nI am using a 1.4.2 JVM.\n\nI see it after I interupt a thread and try to log a message when I catch the \ninterrupted exception.  This \"failed to flush\" error gets logs in place of the \nfirst message I try to log, but subsequent messages log fine.", "is_private": false, "bug_id": 4861, "id": 49902, "time": "2003-12-31T14:27:46Z", "creator": "donald.dylla@hp.com", "creation_time": "2003-12-31T14:27:46Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 4861, "is_private": false, "text": "oops, I also see the problem on hp11 too.  (aix51 and win2k are still fine)\n", "id": 49903, "time": "2003-12-31T14:38:21Z", "creator": "donald.dylla@hp.com", "creation_time": "2003-12-31T14:38:21Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "yoavs@computer.org", "attachment_id": null, "id": 68365, "time": "2004-12-13T16:46:53Z", "bug_id": 4861, "creation_time": "2004-12-13T16:46:53Z", "is_private": false, "text": "I've never seen this error, either on Solaris or on Win2K, either with JDK 1.3, \n1.4, or recently J2SE 5.0.  Even if this were an error, wouldn't it be a JVM \nissue?  Maybe it's related to OS-level patches for the JVM: I used to get \nerrors like this (but never related to log4j) on several Solaris boxes before I \nrealized you had to install all these Sun Solaris OS patches with every JDK \ninstallation."}, {"count": 7, "tags": [], "bug_id": 4861, "attachment_id": null, "id": 137124, "time": "2010-05-25T17:51:20Z", "creator": "daniel.schwager@dtnet.de", "creation_time": "2010-05-25T17:51:20Z", "is_private": false, "text": "yust for info - i got the same error\nusing logback and jdk 1.6.0_20 on solaris 10, x86\n\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at java.io.InterruptedIOException\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at java.io.FileOutputStream.writeBytes(Native Method)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at java.io.FileOutputStream.write(FileOutputStream.java:260)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.core.recovery.ResilientOutputStreamBase.write(ResilientOutputStreamBase.java:52)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at java.io.OutputStream.write(OutputStream.java:58)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.core.encoder.LayoutWrappingEncoder.doEncode(LayoutWrappingEncoder.java:103)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.core.OutputStreamAppender.writeOut(OutputStreamAppender.java:193)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.core.FileAppender.writeOut(FileAppender.java:220)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.core.OutputStreamAppender.subAppend(OutputStreamAppender.java:216)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.core.rolling.RollingFileAppender.subAppend(RollingFileAppender.java:148)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.core.OutputStreamAppender.append(OutputStreamAppender.java:108)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.core.UnsynchronizedAppenderBase.doAppend(UnsynchronizedAppenderBase.java:91)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.core.spi.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:64)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.classic.Logger.appendLoopOnAppenders(Logger.java:275)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.classic.Logger.callAppenders(Logger.java:262)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.classic.Logger.buildLoggingEventAndAppend(Logger.java:465)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(Logger.java:419)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at ch.qos.logback.classic.Logger.info(Logger.java:623)\nINFO   | jvm 1    | 2010/05/25 23:29:59 |       at      at de.example.server.exec.ExecutionHandler.handleCommandDoneEvent(ExecutionHandler.java:129)\nINFO"}]