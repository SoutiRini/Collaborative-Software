[{"count": 0, "tags": [], "creator": "bp@thinkpink.com", "attachment_id": null, "id": 78730, "time": "2005-08-19T22:38:30Z", "bug_id": 36282, "creation_time": "2005-08-19T22:38:30Z", "is_private": false, "text": "ConsoleAppender, as a subclass of WriterAppender, should behave correctly when\nits encoding is set to something other than the system default.\n\nSince the ConsoleAppender is already wrapping System.out and System.err in an\nOutputStreamWriter it's a simple matter to create an OutputStreamWriter with the\ndesired encoding.\n\nOne could argue that System.{out,err} have system-defined encodings and that\nthose should stand. But it seems equally important, if not more so, to be able\nto write software that has predictable behavior in the face of varying system\ndefaults."}, {"count": 1, "tags": [], "creator": "carnold@apache.org", "attachment_id": null, "id": 78734, "time": "2005-08-19T23:06:24Z", "bug_id": 36282, "creation_time": "2005-08-19T23:06:24Z", "is_private": false, "text": "Reviewing the v1_2-branch and CVS HEAD, it looks right to me.  ConsoleAppender.activateOptions calls \nWriterAppender.createWriter() in the same manner as the FileAppender does and the encoding handling \ncode should behave identically.  Can you confirm that you see the offending behavior with a current build \n(any of the log4j 1.2.12 release candidates should do)?  If you still see the problem, could you provide a \nscenario that demonstrates the problem."}, {"count": 2, "text": "Thanks for the prompt feedback.  I've verified that this is fixed in 1.2.12 rc3.  Closing as invalid.\n", "bug_id": 36282, "is_private": false, "id": 78837, "time": "2005-08-22T21:03:42Z", "creator": "bp@thinkpink.com", "creation_time": "2005-08-22T21:03:42Z", "tags": [], "attachment_id": null}]