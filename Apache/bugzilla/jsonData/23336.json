[{"count": 0, "tags": [], "text": "I use Linux Mandrake 9.2, with Sun JDK 1.4.1.\n\nHibernate is a open source persistence layer (http://hibernate.bluemars.net/),\nand I want to use it on my webapp.\nThen, I have the following line to import the Hibernate libraries at my JSP page :\n<%@ page import = \"net.sf.hibernate.* \" %>\n\nAlso, I have the following line, to load a bean of my application :\n\n<jsp:useBean id=\"userSession\" scope=\"session\" class=\"jgroups.UserSession\" />\n\nBut, there is the following problem. When Tomcat compiles the JSP, give me the\nfollowing message :\n\nGenerated servlet error:\n    [javac] Compiling 1 source file\n\n/usr/local/lib/jakarta-tomcat-4.1.18-LE-jdk14/work/Standalone/localhost/jgroups/menu_jsp.java:60:\nreference to InstantiationException is ambiguous, both class\nnet.sf.hibernate.InstantiationException in net.sf.hibernate and class\njava.lang.InstantiationException in java.lang match\n            throw new InstantiationException(exc.getMessage());\n\nI see the .java generated for the JSP page, and contains the following code :\n\njgroups.UserSession userSession = null;\n      synchronized (session) {\n        userSession = (jgroups.UserSession)\npageContext.getAttribute(\"userSession\", PageContext.SESSION_SCOPE);\n        if (userSession == null){\n          try {\n            userSession = (jgroups.UserSession)\njava.beans.Beans.instantiate(this.getClass().getClassLoader(),\n\"jgroups.UserSession\");\n          } catch (ClassNotFoundException exc) {\n            throw new InstantiationException(exc.getMessage());\n          } catch (Exception exc) {\n            throw new ServletException(\"Cannot create bean of class \" +\n\"jgroups.UserSession\", exc);\n          }\n          pageContext.setAttribute(\"userSession\", userSession,\nPageContext.SESSION_SCOPE);\n        }\n      }\n\nThe problem is that there is a InstantiationException into the Hibernate package\nand into the Java standard library, and the compiler dont know what must to use.\n\nThe solution is change the generated code \"new\nInstantiationException(exc.getMessage());\" to \"new\njava.lang.InstantiationException(exc.getMessage());\".\n\nI think all the JSP generated code must be fully package qualified to avoid\nthese kind of problems.", "is_private": false, "id": 44466, "creator": "tonibennasaro@terra.es", "time": "2003-09-22T21:53:31Z", "bug_id": 23336, "creation_time": "2003-09-22T21:53:31Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 23336, "text": "<%@ page import = \"net.sf.hibernate.* \" %>\n\nThis is not a tomcat problem. You can easily fix this in your code\ninstead of doing an import \"net.sf.hibernate.*\", just import the classes.\nand if you need to catch an instantion exception, then do \n\n}catch ( net.sf.hibernate.InstantiationException x ){ .... }\n\n", "count": 1, "id": 44467, "time": "2003-09-22T22:00:32Z", "creator": "filip@filip.net", "creation_time": "2003-09-22T22:00:32Z", "is_private": false}, {"count": 2, "tags": [], "text": "Thanks for the response. I will do it, but I think this is not a solution, it's\na \"work arround\" and this is a bug.", "is_private": false, "id": 44528, "creator": "tonibennasaro@terra.es", "time": "2003-09-23T18:04:11Z", "bug_id": 23336, "creation_time": "2003-09-23T18:04:11Z", "attachment_id": null}]