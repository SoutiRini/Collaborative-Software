[{"count": 0, "tags": [], "creator": "soulsina80@gmail.com", "attachment_id": null, "text": "The following reverse proxy configuration is placed to my front end server:\n\nAllowEncodedSlashes NoDecode\n\n<Location /path-to-server-01/>\n\n    ProxyPass http://server-01-ip:8888/ nocanon retry=0 timeout=180\n    ProxyPassReverse http://server-01-ip:8888/\n    \n    Order Deny,Allow\n    Deny from All\n    Allow from All\n\n</Location>\n\nhttp://front-end-server-ip/path-to-server-01/linka/156752%2F%2F156752%2F%2FENG works without any problem. \n\nhttps://front-end-server-ip/path-to-server-01/linka/156752%2F%2F156752%2F%2FENG\ndoes not work at all because of %2F%2F that are in the URI.\n \nhttps://front-end-server-ip/path-to-server-01/linka/156752 also work to proove that the https mode works with my configuration.\n\nI found the following in my ssl_error_log (when i made the Loglevel to trace8):\n\n[Fri Oct 02 18:03:57.826073 2015] [core:info] [pid 6179] [client address-ip:56842] AH00026: found %2f (encoded '/') in URI (decoded='/linka/156752//156752//ENG'), returning 404\n\nLast thing, i am in the labo, for that my reverse proxy has not domain name FQDN and the https is self signed. I think these are not a problem.\n\nI am on CentOS 6.7. The httpd servers that i tested for this are httpd 2.2.15 (AllowEncodedSlashes On) and httpd24-httpd-2.4.12 (AllowEncodedSlashes NoDecode)\n\nI am asking to my self: Why ssl forces the core to decode %2f%2f in the URI ? Is there any security reason ?.\n\nThank's very much for your qick answer. I am so confused now by this problem. Every thing is depending to it.", "id": 185626, "time": "2015-10-05T10:01:44Z", "bug_id": 58479, "creation_time": "2015-10-05T10:01:44Z", "is_private": false}, {"count": 1, "tags": [], "creator": "soulsina80@gmail.com", "text": "To fix this problem we have to put the following \n\"AllowEncodedSlashes NoDecode\" or \n\"AllowEncodedSlashes On\"  in the ssl.conf file to ovoid ssl to decode the slashes befoe sending te request to the internal server.\nSorry about that. The problem was me, not Apache.\nThank's.", "id": 185687, "time": "2015-10-07T11:47:26Z", "bug_id": 58479, "creation_time": "2015-10-07T11:47:26Z", "is_private": false, "attachment_id": null}]