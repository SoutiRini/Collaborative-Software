[{"count": 0, "tags": [], "text": "In its make_cookie function which is called via a fixups hook (late in the request \\\ncycle!) it seems to fail to append its cookie to whatever cookies are already\nset by \\\nother modules (effectively deleting all previous entries for \"Set-Cookie\" in \\\nr->headers_out).\n\nIt removes other modules cookies!\nAn unfriendly act to other third parties.\n\nIt calls apr_table_setn rather than apr_table_add or similar.\n\nThis the function in question:-\n\n\n\nstatic void make_cookie(request_rec *r)\n{\n    cookie_log_state *cls = ap_get_module_config(r->server->module_config,\n\t\t\t\t\t\t &usertrack_module);\n    /* 1024 == hardcoded constant */\n    char cookiebuf[1024];\n    char *new_cookie;\n    const char *rname = ap_get_remote_host(r->connection, r->per_dir_config,\n\t\t\t\t\t   REMOTE_NAME, NULL);\n    cookie_dir_rec *dcfg;\n\n    dcfg = ap_get_module_config(r->per_dir_config, &usertrack_module);\n\n    /* XXX: hmm, this should really tie in with mod_unique_id */\n    apr_snprintf(cookiebuf, sizeof(cookiebuf), \"%s.%\" APR_TIME_T_FMT, rname, \n                 apr_time_now());\n\n    if (cls->expires) {\n\n        /* Cookie with date; as strftime '%a, %d-%h-%y %H:%M:%S GMT' */\n        new_cookie = apr_psprintf(r->pool, \"%s=%s; path=/\",\n                                  dcfg->cookie_name, cookiebuf);\n\n        if ((dcfg->style == CT_UNSET) || (dcfg->style == CT_NETSCAPE)) {\n\t    apr_time_exp_t tms;\n            apr_time_exp_gmt(&tms, r->request_time \n                                 + apr_time_from_sec(cls->expires));\n            new_cookie = apr_psprintf(r->pool,\n                                       \"%s; expires=%s, \"\n                                       \"%.2d-%s-%.2d %.2d:%.2d:%.2d GMT\",\n                                       new_cookie, apr_day_snames[tms.tm_wday],\n                                       tms.tm_mday,\n                                       apr_month_snames[tms.tm_mon],\n                                       tms.tm_year % 100,\n                                       tms.tm_hour, tms.tm_min, tms.tm_sec);\n        }\n        else {\n            new_cookie = apr_psprintf(r->pool, \"%s; max-age=%d\",\n                                      new_cookie, cls->expires);\n        }\n    }\n    else {\n        new_cookie = apr_psprintf(r->pool, \"%s=%s; path=/\",\n                                  dcfg->cookie_name, cookiebuf);\n    }\n    if (dcfg->cookie_domain != NULL) {\n        new_cookie = apr_pstrcat(r->pool, new_cookie, \"; domain=\",\n                                 dcfg->cookie_domain,\n                                 (dcfg->style == CT_COOKIE2\n                                  ? \"; version=1\"\n                                  : \"\"),\n                                 NULL);\n    }\n\n    apr_table_setn(r->headers_out,\n                   (dcfg->style == CT_COOKIE2 ? \"Set-Cookie2\" : \"Set-Cookie\"),\n                   new_cookie);\n    apr_table_setn(r->notes, \"cookie\", apr_pstrdup(r->pool, cookiebuf));   /* log \\\nfirst time */  return;\n}", "is_private": false, "id": 51777, "creator": "hm@clickstream.com", "time": "2004-02-05T18:10:36Z", "bug_id": 26693, "creation_time": "2004-02-05T18:10:36Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 26693, "is_private": false, "count": 1, "id": 51789, "time": "2004-02-05T23:22:13Z", "creator": "nd@perlig.de", "creation_time": "2004-02-05T23:22:13Z", "text": "\n\n*** This bug has been marked as a duplicate of 26002 ***"}]