[{"count": 0, "tags": [], "text": "There was a discussion at the dev list how one could prevent his app from scanning all the classpath if a ServletContextInitializer is found:\n\nhttp://tomcat.10.n6.nabble.com/tomcat-7-0-29-startup-time-td4984446.html\n\nMark pointed me at a current EG discussion: \nhttp://java.net/jira/browse/SERVLET_SPEC-36\n\nThe agreed status seems to be that _if_ an <absolute-ordering> element exists in WEB-INF/web.xml, then only the web-fragments mentioned therein shall be scanned. This is especially true if the <absolute-ordering> contains no <others/> element.\n\nAn empty <absolute-ordering/> shall therefore disable scanning at all as far as I understood.\n\nThis seems already be reflected in servlet-3.0 section 8.2.2 \"Ordering of web.xml and web-fragment.xml\" paragraph 1.d:\n\"If a discovered ServletContainerInitializer is loaded from an excluded jar, it will be ignored. Excluded jars are not scanned for classes to be handled by any ServletContainerInitializer.\"\n\n\nWhat I do not yet completely understand is that servlet-3.0 section 8.2.1 \"Modularity of web.xml\" explicitly defines as general rule:\n\n\"As before, if the metadata-complete element is set to true in the web.xml descriptor, annotations in the class files and web-fragments bundled in jars will not be processed.\"\n\nThis not only contradicts the 'clarification' of the EG regarding the ServletContextInitializer which is in question here, but also could be interpreted as : \"if metadata-complete is true, then no web-fragment handling is done. Thus also no <absolute-ordering> will be evaluated\".\nNot that I would like this, I just like to have this clarified upfront (before we have to throw away some work afterwards).\n\nDid I miss something in this regard?", "is_private": false, "id": 160993, "creator": "struberg@yahoo.de", "time": "2012-07-30T07:44:33Z", "bug_id": 53619, "creation_time": "2012-07-30T07:44:33Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "struberg@yahoo.de", "attachment_id": null, "id": 160994, "creation_time": "2012-07-30T08:11:38Z", "time": "2012-07-30T08:11:38Z", "bug_id": 53619, "text": "whoops s/ServletContextInitializer/ServletContainerInitializer/", "is_private": false}, {"count": 2, "tags": [], "text": "The required behaviour has been present from 7.0.29 onwards in anticipation of the clarification from the EG.", "attachment_id": null, "id": 161271, "creator": "markt@apache.org", "time": "2012-08-11T19:28:50Z", "bug_id": 53619, "creation_time": "2012-08-11T19:28:50Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 53619, "attachment_id": null, "is_private": false, "id": 164479, "time": "2013-01-08T13:34:11Z", "creator": "bmesserer@gmx.at", "creation_time": "2013-01-08T13:34:11Z", "text": "Provided I understand Mark's comments correctly, the current behavior (tomcat 7.0.34) is incorrect regarding this:\n\n\"An empty <absolute-ordering/> shall therefore disable scanning at all as far as I understood.\"\n\nIt does not, an empty 'absolute-ordering' element has no effect whatsoever (regarding this bug). From short debugging, org.apache.catalina.deploy.WebXml.absoluteOrdering only contains the child elements of the tag (see WebXml#addAbsoluteOrdering*(...)).\n\nHope that somebody can clarify whether current behavior is wrong or abovementioned comment is, so won't change status of this."}, {"count": 4, "tags": [], "bug_id": 53619, "attachment_id": null, "is_private": false, "id": 164480, "time": "2013-01-08T13:44:51Z", "creator": "markt@apache.org", "creation_time": "2013-01-08T13:44:51Z", "text": "https://issues.apache.org/bugzilla/show_bug.cgi?id=54262"}]