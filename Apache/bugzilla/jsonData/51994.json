[{"count": 0, "tags": [], "creator": "jan@unixpapa.com", "attachment_id": null, "id": 150318, "time": "2011-10-07T15:35:20Z", "bug_id": 51994, "creation_time": "2011-10-07T15:35:20Z", "is_private": false, "text": "I think the major defect with mod_authn_socache is that it lacks a way to flush the authentication cache. The timeout just isn't fully satisfactory. It means that it takes minutes before a password change actually takes effect, and a user can keep accessing resources for minutes after his account has been deleted.  If there were some mechanism by which a password change program or account deletion program could signal mod_authn_socache to flush it's cache, then not only would these actions take effect instantaneously, but administrators could freely set their timeout values higher, improving performance on all authentications.\n\nEither a mechanism that empties the entire cache or one that just de-caches a single user would be fine.\n\nI think the easiest way to do this would be to have a special password that flushes the cache. So, if a user makes a request with the special password, say 'AllOthersPayCache' then (1) mod_authn_socache would erase it's cache entry for the user, and (2) mod_authn_socache pass on the authentication, just as it would if the user wasn't in cache. So even if some ridiculous user chose that as their password, the site would still work for them, though without caching.\n\nSite administrators would have to train their user deletion and password change programs to hit the website with a request with the username and special password, but that's not hard.\n\nLots of other mechanisms could be used, and probably one can think of some that are more graceful than this one (though probably not one that's easier to implement) but I really think you would double the practical value of the module if some such mechanism were available."}, {"count": 1, "tags": [], "bug_id": 51994, "attachment_id": null, "id": 150320, "time": "2011-10-07T16:10:35Z", "creator": "nick@webthing.com", "creation_time": "2011-10-07T16:10:35Z", "is_private": false, "text": "This is documented behaviour!\n\nDoes a server restart (or 'graceful') fix it?  That might depend on what socache backend you're using."}, {"count": 2, "tags": [], "bug_id": 51994, "attachment_id": null, "text": "Yes, it's documented, so this an enhancement request, not a bug request.\n\nWithout a cache flush you put administrators into the tricky position of having to decide between long timeouts for performance and short timeouts so password changes and account deletions happen smoothly. That dilemma is a false one, arising out of an weakness in the software design. Good caches are flushable.\n\nYeah, server restart probably works for some back-ends, at least. Kind of extreme. If they are using a dbd file it might not be hard to write a separate program that erases it. With more work, they could probably even do that with shared memory. But if that's the way to go, then do we expect every administrator to write their own? They might be able to do something with setting the cache timeout temporarily to zero, hitting the page with the user ID and a random bad password, and setting it back again. No,that won't work - looks like changing the timeout won't effect the timeout of things already in the cache. I can't say any of these solutions are elegant.\n\nI don't know. I think this is going to be a common enough concern with users of mod_authn_socache that a reasonably clean and graceful way of handling it ought to be part of the design. It's worth at least making the attempt to come up with a smart solution to the problem.\n\nMaybe it'd be good enough to have authn_cache_store() modified so that if you pass it a NULL for the data argument it removes that user from the cache. Then third-party modules could be written that do cache flushes. The scheme I described in my original post could totally be a separate module, listed before socache on the AuthBasicProvider directive, if only it had a way to ask mod_authn_socache to flush a cache entry.", "id": 150325, "time": "2011-10-07T18:19:15Z", "creator": "jan@unixpapa.com", "creation_time": "2011-10-07T18:19:15Z", "is_private": false}]