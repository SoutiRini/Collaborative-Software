[{"count": 0, "tags": [], "bug_id": 9750, "text": "I am using log4j to provide logging for a tomcat web application.\nI am initializing log4j as described in \nhttp://jakarta.apache.org/log4j/docs/manual.html :\n\nI am placing log4j.jar in WEB-INF/lib\nI am placing log4jconfig.xml in WEB-INF/classes\nand I am specifing the system property log4j.configuration=log4jconfig.xml\nwhen starting the servlet container.\n\nNormally I can start tomcat, perform a few simple operations that create log \nentries, and shutdown tomcat properly (remote connection triggers process end).\n\nHowever, when I use a configuration that includes an AsynchAppender, different \nbehaviour occurs.  Tomcat starts as normal, the program progress and log \nentries happen as normal, but when tomcat is shut down, the virtual machine \ndoes not end.\n\nI have been able to reproduce this problem with a very simple test case, which \nI will attach shortly.", "id": 17505, "time": "2002-06-10T17:38:09Z", "creator": "sreilly@point2.com", "creation_time": "2002-06-10T17:38:09Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "Created attachment 2049\njava source code that reproduces the issue", "is_private": false, "id": 17506, "creator": "sreilly@point2.com", "time": "2002-06-10T17:39:06Z", "bug_id": 9750, "creation_time": "2002-06-10T17:39:06Z", "attachment_id": 2049}, {"count": 2, "attachment_id": 2050, "bug_id": 9750, "text": "Created attachment 2050\nlog4j config that causes the console to hang", "id": 17507, "time": "2002-06-10T17:39:41Z", "creator": "sreilly@point2.com", "creation_time": "2002-06-10T17:39:41Z", "tags": [], "is_private": false}, {"count": 3, "attachment_id": 2051, "bug_id": 9750, "text": "Created attachment 2051\nlog4j config that causes the console not to hand", "id": 17508, "time": "2002-06-10T17:40:05Z", "creator": "sreilly@point2.com", "creation_time": "2002-06-10T17:40:05Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "text": "Created attachment 2052\nlog4j jar file used in test case (log4j.jar from v 1.2.3)", "is_private": false, "id": 17509, "creator": "sreilly@point2.com", "time": "2002-06-10T17:41:06Z", "bug_id": 9750, "creation_time": "2002-06-10T17:41:06Z", "attachment_id": 2052}, {"count": 5, "tags": [], "text": "Created attachment 2053\nlog4j.dtd used in test runs (from v 1.2.3)", "is_private": false, "id": 17510, "creator": "sreilly@point2.com", "time": "2002-06-10T17:41:42Z", "bug_id": 9750, "creation_time": "2002-06-10T17:41:42Z", "attachment_id": 2053}, {"count": 6, "tags": [], "text": "This test case was compiled and run using JDK1.4\nIt should run in earlier versions with the addition of an xml parser.\n\ncompiled with \"javac -classpath log4j.jar Test.java\"\nthe nohang case is run with \"%JAVA_HOME_14%\\bin\\java -cp log4j.jar;. -\nDlog4j.configuration=log4jconfig_nohang.xml Test\"\n\nit generated the following output:\n2002-06-10 11:36:59,874: DEBUG (test)  - starting\n2002-06-10 11:36:59,889: DEBUG (test)  - finishing\n\nthe hanging case is run with \"C:\\log4j_case>%JAVA_HOME_14%\\bin\\java -cp \nlog4j.jar;. -Dlog4j.configuration=log4jconfig_hang.xml Test\"\n\nit generates the same output:\n2002-06-10 11:37:04,670: DEBUG (test)  - starting\n2002-06-10 11:37:04,670: DEBUG (test)  - finishing\n\nexcept that execution does not stop.  The process continues until forcibly \nterminated (Ctrl-C on the console, for example).\n\nIf you need any other test cases, or if I have missed any information you would \nlike to have, please let me know.\n\nSean Reilly\n\n", "is_private": false, "id": 17512, "creator": "sreilly@point2.com", "time": "2002-06-10T17:45:29Z", "bug_id": 9750, "creation_time": "2002-06-10T17:45:29Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "sreilly@point2.com", "attachment_id": null, "text": "Potential solution:\n\nI believe that the VM is continuing execution because the thread created by \nAsyncAppender is not a daemon thread.  If this thread were to be set as a \nDaemon thread then the VM should be able to exit properly.\n\nHere is a change to the constructor of Dispatcher (internal class in \nAsyncAppender) that would accomplish this:\n\nBefore:\n\nDispatcher(BoundedFIFO bf, AsyncAppender container) {\n    this.bf = bf;\n    this.container = container;\n    this.aai = container.aai;\n    // set the dispatcher priority to lowest possible value\n    this.setPriority(Thread.MIN_PRIORITY);\n    this.setName(\"Dispatcher-\"+getName());\n    // set the dispatcher priority to MIN_PRIORITY plus or minus 2\n    // depending on the direction of MIN to MAX_PRIORITY.\n    //+ (Thread.MAX_PRIORITY > Thread.MIN_PRIORITY ? 1 : -1)*2);\n\n  }\n\nAfter:\nDispatcher(BoundedFIFO bf, AsyncAppender container) {\n    this.bf = bf;\n    this.container = container;\n    this.aai = container.aai;\n    this.setDaemon(true);\n    // set the dispatcher priority to lowest possible value\n    this.setPriority(Thread.MIN_PRIORITY);\n    this.setName(\"Dispatcher-\"+getName());\n    // set the dispatcher priority to MIN_PRIORITY plus or minus 2\n    // depending on the direction of MIN to MAX_PRIORITY.\n    //+ (Thread.MAX_PRIORITY > Thread.MIN_PRIORITY ? 1 : -1)*2);\n\n  }\n\nThis of course leaves the appender vunerable to the possibility of a VM \nshutdown resulting in logging message loss.  If this is an issue, then perhaps \na finalizer could be added that would call the dispatcher's close() method?", "id": 17514, "time": "2002-06-10T17:53:50Z", "bug_id": 9750, "creation_time": "2002-06-10T17:53:50Z", "is_private": false}, {"count": 8, "tags": [], "text": "\nLog4j 1.2.4 fixes this bug.", "attachment_id": null, "bug_id": 9750, "id": 19044, "time": "2002-07-05T10:43:58Z", "creator": "ceki@apache.org", "creation_time": "2002-07-05T10:43:58Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 9750, "text": "Is this bug only fixed if you call AsyncAppender.close()?  \n\nI'm experiencing the same issue with 1.2.6, but I'm not calling the close method\nexplicitly (the app using the Appender causes application shutdown, so I have\nlittle control over 'when' the app is done with the Appender.", "id": 22944, "time": "2002-09-16T18:05:48Z", "creator": "jesse.j.aalberg@accenture.com", "creation_time": "2002-09-16T18:05:48Z", "is_private": false, "attachment_id": null}]