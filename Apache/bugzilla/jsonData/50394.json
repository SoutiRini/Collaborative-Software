[{"count": 0, "tags": [], "bug_id": 50394, "attachment_id": null, "id": 142258, "time": "2010-12-01T11:38:03Z", "creator": "hugh@acunu.com", "creation_time": "2010-12-01T11:38:03Z", "is_private": false, "text": "I'm using tomcat-native-1.1.20 and tomcat-6.0.29 on CentOS 5.5, and I've written a servlet that is sent large (gigabyte) streams of bytes over HTTP.\n\nFrom time to time it fails with the following stacktrace:\n\n\nCaused by: java.io.IOException\n        at org.apache.coyote.http11.InternalAprInputBuffer.fill(InternalAprInputBuffer.java:798)\n        at org.apache.coyote.http11.InternalAprInputBuffer$SocketInputBuffer.doRead(InternalAprInputBuffer.java:827)\n        at org.apache.coyote.http11.filters.IdentityInputFilter.doRead(IdentityInputFilter.java:116)\n        at org.apache.coyote.http11.InternalAprInputBuffer.doRead(InternalAprInputBuffer.java:738)\n        at org.apache.coyote.Request.doRead(Request.java:428)\n        at org.apache.catalina.connector.InputBuffer.realReadBytes(InputBuffer.java:304)\n        at org.apache.tomcat.util.buf.ByteChunk.substract(ByteChunk.java:403)\n        at org.apache.catalina.connector.InputBuffer.read(InputBuffer.java:327)\n        at org.apache.catalina.connector.CoyoteInputStream.read(CoyoteInputStream.java:193)\n        at java.io.BufferedInputStream.read1(BufferedInputStream.java:273)\n        at java.io.BufferedInputStream.read(BufferedInputStream.java:334)\n        at java.io.FilterInputStream.read(FilterInputStream.java:107)\n[...]\n\n\nUnfortunately, InternalAprInputBuffer throws away the error code on line 798, but I've run it under a debugger and nRead was -70014.\n\nIf you look in the source of apr-1.3.8 at include/apr_errno.h, you'll see this is -APR_EOF.\n\nThe bug is in the implementation of recvbb at line 892 onwards in tomcat-native-1.1.20-src/jni/native/src/network.c. Specifically, at the end of the function we check for APR_SUCCESS, and assume all other codes are an error, returning -ss. It should also check for EOF (APR_STATUS_IS_EOF), and return zero. (Or at least, InternalAprInputBuffer assumes that a return code of 0 <=> EOF).\n\nIncidentally, apr-1.3.8/include/apr_network_io.h says in its comment on apr_socket_recv() that \"It is possible for both bytes to be received and an APR_EOF or other error to be returned.\". This is a lie. All provided implementations of apr_socket_recv return with *len == 0 in case of APR_EOF."}, {"count": 1, "tags": [], "bug_id": 50394, "attachment_id": null, "text": "The code in org/apache/coyote/http11/InternalAprInputBuffer is:\n+++\n            nRead = Socket.recvbb(socket, 0, buf.length - lastValid);\n            if (nRead > 0) {\n                bbuf.limit(nRead);\n                bbuf.get(buf, pos, nRead);\n                lastValid = pos + nRead;\n            } else {\n                if ((-nRead) == Status.ETIMEDOUT || (-nRead) == Status.TIMEUP) {\n                    throw new SocketTimeoutException(sm.getString(\"iib.failedread\"));\n                } else {\n                    throw new IOException(sm.getString(\"iib.failedread\"));\n                }\n            }\n+++\nSo returning 0 won't help.", "id": 144909, "time": "2011-03-10T07:43:44Z", "creator": "jfclere@gmail.com", "creation_time": "2011-03-10T07:43:44Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "hugh@acunu.com", "text": "Ok, well perhaps my proposed fix won't work, but this is still an issue since it's not conforming to the InputStream specification.", "id": 145018, "time": "2011-03-15T11:52:12Z", "bug_id": 50394, "creation_time": "2011-03-15T11:52:12Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 50394, "attachment_id": null, "text": "Fix by 1148254 backport proposed.", "id": 147992, "time": "2011-07-19T09:39:49Z", "creator": "jfclere@gmail.com", "creation_time": "2011-07-19T09:39:49Z", "is_private": false}, {"count": 4, "tags": [], "creator": "rohini.aditya@gmail.com", "text": "We hit this issue yesterday with tomcat-native-1.1.20 when uploading 1G file. But found that if we did not use BufferedInputStream and read directly into a buffer it worked fine. \n\nInputStream in = request.getInputStream(); //new BufferedInputStream(request.getInputStream());\nint bytesRead;\n      while ((bytesRead = in.read(buf)) != -1) {\n        out.write(buf, 0, bytesRead);\n      }", "id": 148824, "time": "2011-08-25T16:58:33Z", "bug_id": 50394, "creation_time": "2011-08-25T16:58:33Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "(In reply to comment #3)\n> Fix by 1148254 backport proposed.\n\nThere is some confusion on the status of this issue.\nThe r1148254 mentioned above was essentially reverted by r1148815.\n\nThe actual fix is in Tomcat-Native 1.1.22 by r1148814.\n\nNative 1.1.22 is already released - you may download it.\n\nIt seems that part of r1148815 still needs a backport to 6.0 and 5.5:\ns/} else {/} else if (nRead != 0) {/", "attachment_id": null, "id": 148826, "creator": "knst.kolinko@gmail.com", "time": "2011-08-25T17:26:42Z", "bug_id": 50394, "creation_time": "2011-08-25T17:26:42Z", "is_private": false}, {"count": 6, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": 27437, "id": 148840, "time": "2011-08-26T12:33:39Z", "bug_id": 50394, "creation_time": "2011-08-26T12:33:39Z", "is_private": false, "text": "Created attachment 27437\n2011-08-26_tc55_50394_InternalAprInputBuffer.patch"}, {"count": 7, "tags": [], "bug_id": 50394, "text": "Created attachment 27438\n2011-08-26_tc6_50394_InternalAprInputBuffer.patch", "id": 148841, "time": "2011-08-26T12:34:10Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-08-26T12:34:10Z", "is_private": false, "attachment_id": 27438}, {"count": 8, "tags": [], "bug_id": 50394, "attachment_id": null, "id": 148842, "time": "2011-08-26T12:43:33Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-08-26T12:43:33Z", "is_private": false, "text": "Proposed the patches for Tomcat 6.0 and 5.5."}, {"count": 9, "attachment_id": null, "creator": "markt@apache.org", "text": "Fixed in 6.0.x and will be included in 6.0.34 onwards", "id": 148980, "time": "2011-09-02T11:53:16Z", "bug_id": 50394, "creation_time": "2011-09-02T11:53:16Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 50394, "text": "Fixed in 5.5.x with r1171684 and will be in 5.5.34 onwards.", "count": 10, "id": 149337, "time": "2011-09-16T18:52:09Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-09-16T18:52:09Z", "is_private": false}]