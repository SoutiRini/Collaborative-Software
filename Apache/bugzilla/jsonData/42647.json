[{"count": 0, "attachment_id": null, "creator": "michael.menz@dbv-winterthur.de", "is_private": false, "id": 104356, "time": "2007-06-13T01:08:37Z", "bug_id": 42647, "creation_time": "2007-06-13T01:08:37Z", "tags": [], "text": "Log4J V1.2.13\n\nCode line contains call of method \"trace(text)\"\n\nConfiguration constains \"<param name=\"Threshold\" value=\"DEBUG\"/>\" for \nConsoleAppender\n\n=> Log4J prints the text message with level DEBUG instead of TRACE (though the \nmessage shouldn't be printed at all because of the configuration level DEBUG!)"}, {"count": 1, "attachment_id": null, "creator": "johnjaylward@yahoo.com", "text": "I'm seeing this too. It seems like TRACE loglevel is a synonym for DEBUG, when\nreally it should be it's own entity.", "id": 105942, "time": "2007-07-25T11:15:13Z", "bug_id": 42647, "creation_time": "2007-07-25T11:15:13Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 42647, "text": "o yeah, forgot to mention I'm using log4j 1.2.14 on linux with sun jvm 1.5.\n\nSteps to reproduce:\n\n1. set log level to ALL in config\n2. run sample code below\n\tLog logger = Logger.getRootLogger();\n\tlogger.trace(\"Trace Logging enabled.\");\n\tlogger.debug(\"Debug Logging enabled.\");\n\tlogger.info(\"Info Logging enabled.\");\n\tlogger.warn(\"Warn Logging enabled.\");\n\tlogger.error(\"Error Logging enabled.\");\n\tlogger.fatal(\"Fatal Logging enabled.\");\n3. view log\n4. Set Log level to DEBUG in config\n5. re-run sample code\n6. view log", "id": 105943, "time": "2007-07-25T11:20:25Z", "creator": "johnjaylward@yahoo.com", "creation_time": "2007-07-25T11:20:25Z", "tags": [], "is_private": false}, {"count": 3, "attachment_id": null, "creator": "carnold@apache.org", "is_private": false, "id": 105951, "time": "2007-07-25T21:27:38Z", "bug_id": 42647, "creation_time": "2007-07-25T21:27:38Z", "tags": [], "text": "If I recall correctly log4j 1.2.13 had a bug that was corrected in 1.2.14 that resulted in DEBUG appearing \nwhen TRACE should have.\n\nThe last example appears as if Jakarta Commons Logging is being used (note the class Log instead of \nLogger).  Jakarta Commons had a TRACE level before log4j 1.2 did and so it just made the equivalent \ndebug calls.  Recent versions of Jakarta Commons Logging I believe keep TRACE as a distinct level when \nrunning against later log4j versions, but I don't follow JCL development that closely.\n\nI'm marking the bug as NEEDINFO for now.  If the problems still appear with the latest Jakarta Commons \nLogging or log4j 1.2.15 release candidate, please provide the info."}, {"count": 4, "attachment_id": null, "bug_id": 42647, "text": "You're right! The issue was the missing TRACE level support in Jakarta Commons \nLogging 1.0.\n\nWith Log4J v1.2.14 and JCL 1.1 the TRACE level works correctly.", "id": 105954, "time": "2007-07-26T00:11:06Z", "creator": "michael.menz@dbv-winterthur.de", "creation_time": "2007-07-26T00:11:06Z", "tags": [], "is_private": false}]