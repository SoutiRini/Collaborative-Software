[{"count": 0, "tags": [], "text": "Looks like a possible RFC 2616 MUST violation. \nApache cache ignores max-age cache-control directive.\n\nSee attached traces for details and ways to reproduce\nsome of the violations mentioned above.\n\nTest case IDs in the trace link to human-oriented test case\ndescription and RFC quotes, if available.", "attachment_id": null, "id": 28983, "creator": "coad@measurement-factory.com", "time": "2003-01-07T22:16:10Z", "bug_id": 15869, "creation_time": "2003-01-07T22:16:10Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 15869, "attachment_id": 4365, "is_private": false, "id": 28984, "time": "2003-01-07T22:16:55Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-01-07T22:16:55Z", "text": "Created attachment 4365\ntest case trace"}, {"count": 2, "tags": [], "bug_id": 15869, "attachment_id": null, "is_private": false, "id": 29012, "time": "2003-01-08T14:12:27Z", "creator": "scaglione@starnetone.de", "creation_time": "2003-01-08T14:12:27Z", "text": "I noticed too something strange withe the max-age header, but I think apache \nMUST only add a warning sayng that the result is stale.\n\nThis is an example taken with muffin snoop filter, proxy.zzz.yy is a squid \ncache and misses, www.xxx.yy is an apache mod-proxy and hits. \n\n<begin example>\nHTTP/1.0 200 OK\nVia: 1.1 www.xxx.yy\nCache-Control: max-age=600\nETag: \"23e050-f13-3e1a1119\"\nAccept-Ranges: bytes\nContent-Type: image/jpeg\nAge: 1217\nDate: Wed, 08 Jan 2003 13:41:51 GMT\nProxy-Connection: keep-alive\nServer: Apache/1.3.27 (Unix) \nX-Cache: HIT from www.xxx.yy\nX-Cache: MISS from proxy.zzz.yy\nLast-Modified: Mon, 06 Jan 2003 23:28:25 GMT\nContent-Length: 3859\n<end example>\nAge is 1217 and max-age is 600 so it looks like squid is right and apache not \nbut the standard says:\n<begin rfc 2616>\nIf a cache returns a stale response, either because of a max-stale directive on \na request, or because the cache is configured to override the expiration time \nof a response, the cache MUST attach a Warning header to the stale response, \nusing Warning 110 (Response is stale). \n\nA cache MAY be configured to return stale responses without validation, but \nonly if this does not conflict with any \"MUST\"-level requirements concerning \ncache validation (e.g., a \"must-revalidate\" cache-control directive). \n\n<end rfc 2616>\nHowever when the CacheMaxExpire on www.xxx.yy has expired mod proxy returns \nthis:\n<begin example>\nVia: 1.1 www.bunte.t-online.de\nCache-Control: max-age=600\nETag: \"23e050-f13-3e1a1119\"\nAccept-Ranges: bytes\nContent-Type: image/jpeg\nDate: Wed, 08 Jan 2003 13:58:40 GMT\nProxy-Connection: keep-alive\nServer: Apache/1.3.27 (Unix) PHP/4.2.3\nX-Cache: HIT from www.xxx.yy (with revalidation)\nX-Cache: MISS from proxy.zzz.yyy\nLast-Modified: Mon, 06 Jan 2003 23:16:03 GMT\nContent-Length: 4019\n<end example>\n\nAgain squid misses and apache returns a stale document this time revalidated \nand with a warning (this should probably be a warning 110). This is what the \nstandard says:\n<begin rfc 2616>\nmax-age \nWhen an intermediate cache is forced, by means of a max-age=0 directive, to \nrevalidate its own cache entry, and the client has supplied its own validator \nin the request, the supplied validator might differ from the validator \ncurrently stored with the cache entry. In this case, the cache MAY use either \nvalidator in making its own request without affecting semantic transparency. \nHowever, the choice of validator might affect performance. The best approach is \nfor the intermediate cache to use its own validator when making its request. If \nthe server replies with 304 (Not Modified), then the cache can return its now \nvalidated copy to the client with a 200 (OK) response. If the server replies \nwith a new entity and cache validator, however, the intermediate cache can \ncompare the returned validator with the one provided in the client's request, \nusing the strong comparison function. If the client's validator is equal to the \norigin server's, then the intermediate cache simply returns 304 (Not Modified). \nOtherwise, it returns the new entity with a 200 (OK) response. \n<end rfc 2616>\n\n"}, {"count": 3, "tags": [], "text": "oopps,this bug refers to apache 2.0 mod_cache. Anyway looks like the behaviour \nof Apache 2.0 is coherent with that of mod_proxy apache 1.3.27.\n\nThe return code for the second example in my previous comment was \"HTTP/1.0 200 \nOK\".", "attachment_id": null, "id": 29027, "creator": "scaglione@starnetone.de", "time": "2003-01-08T17:46:56Z", "bug_id": 15869, "creation_time": "2003-01-08T17:46:56Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 15869, "attachment_id": null, "id": 29029, "time": "2003-01-08T18:20:18Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-01-08T18:20:18Z", "is_private": false, "text": "Ermanno,\n\nThe cache MUST treat the entity as stale. This implies that the cache MUST\nmiss, revalidate, or add a Warning (if configured to do so). Apache does\nneither.\n\nAlso, please note that we are talking about max-age _response_ directive\n(some of the requirements you quote are for max-age request directive, IIRC).\n"}, {"count": 5, "tags": [], "text": "Created attachment 7028\nThe Fix is attached. The Util_script.c, the place where the cache is read into headers_out, Cache-Control header was missed out. I have added that. Line number 594 to 596", "is_private": false, "id": 39638, "creator": "sragavan@indiatimes.com", "time": "2003-06-30T10:16:39Z", "bug_id": 15869, "creation_time": "2003-06-30T10:16:39Z", "attachment_id": 7028}, {"count": 6, "tags": [], "bug_id": 15869, "attachment_id": 7123, "is_private": false, "id": 40084, "time": "2003-07-07T18:09:24Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-07-07T18:09:24Z", "text": "Created attachment 7123\ntest case trace, patched 2.0.46"}, {"count": 7, "tags": [], "bug_id": 15869, "attachment_id": null, "id": 40085, "time": "2003-07-07T18:12:26Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-07-07T18:12:26Z", "is_private": false, "text": "After applying the changes to 2.0.46,\nthe test case still fails.\nThe corresponding trace is attached.\n\nWe cannot test against HEAD at this\ntime because it segfaults too often."}, {"count": 8, "tags": [], "text": "HEAD of which branch?  HEAD of the MAIN branch is 2.1-dev.  If it's segfaulting, can \nyou give us a backtrace?  But more importantly, can you test against the \nAPACHE_2_0_BRANCH, which is 2.0.47-dev (about to be 2.0.48-dev). ", "is_private": false, "id": 40103, "creator": "jwoolley@apache.org", "time": "2003-07-07T20:30:06Z", "bug_id": 15869, "creation_time": "2003-07-07T20:30:06Z", "attachment_id": null}, {"count": 9, "tags": [], "creator": "coad@measurement-factory.com", "is_private": false, "id": 40108, "creation_time": "2003-07-07T21:09:05Z", "time": "2003-07-07T21:09:05Z", "bug_id": 15869, "text": "AFAIK, CVS has only one HEAD :-)\nIf my interpretation of Apache devel instructions is correct,\nCVS HEAD corresponds to 2.1.0-dev version of apache. The Server\nheader emited by Apache seems to suggest that as well.\n\nI am sure the segfault cause will be removed before we have\ntime to produce the corresponding bug report. This has\nhappened before. We will do our best, but please note that\nwe have to concentrate on compliance problems.\n\nWe will try to test the same change against APACHE_2_0_BRANCH.\n", "attachment_id": null}, {"count": 10, "tags": [], "text": "HEAD is the head of the unstable 2.1 development branch and may, on occaision,\nbe unstable. APACHE_2_0_BRANCH is head of the stable 2.0 branch and should\nalways be a stable base of code to test on.", "is_private": false, "id": 40110, "creator": "rederpj@remulak.net", "time": "2003-07-07T21:24:07Z", "bug_id": 15869, "creation_time": "2003-07-07T21:24:07Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 15869, "attachment_id": 7139, "id": 40119, "time": "2003-07-07T22:00:57Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-07-07T22:00:57Z", "is_private": false, "text": "Created attachment 7139\nhopefully same changes, unified diff format (against APACHE_2_0_BRANCH)"}, {"count": 12, "tags": [], "bug_id": 15869, "attachment_id": 7140, "text": "Created attachment 7140\ntest case trace against patched APACHE_2_0_BRANCH", "id": 40121, "time": "2003-07-07T22:08:56Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-07-07T22:08:56Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 15869, "attachment_id": null, "is_private": false, "id": 40122, "time": "2003-07-07T22:10:18Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-07-07T22:10:18Z", "text": "After applying the changes to APACHE_2_0_BRANCH,\nthe test case still fails.\nThe corresponding trace is attached.\n"}, {"count": 14, "tags": [], "creator": "sragavan@novell.com", "attachment_id": 7151, "text": "Created attachment 7151\nThis patch will make this work. But actually this is a defect dependent on 21392, which i have filed. Put this patch in addition to what i gave already submitted..", "id": 40149, "time": "2003-07-08T06:43:33Z", "bug_id": 15869, "creation_time": "2003-07-08T06:43:33Z", "is_private": false}, {"count": 15, "tags": [], "text": "Created attachment 7167\ngdb stack trace with patch #7151", "attachment_id": 7167, "id": 40202, "creator": "coad@measurement-factory.com", "time": "2003-07-08T18:29:44Z", "bug_id": 15869, "creation_time": "2003-07-08T18:29:44Z", "is_private": false}, {"count": 16, "tags": [], "text": "Created attachment 7168\ntest case trace (leading to a coredump with patch#7151)", "is_private": false, "id": 40203, "creator": "coad@measurement-factory.com", "time": "2003-07-08T18:32:43Z", "bug_id": 15869, "creation_time": "2003-07-08T18:32:43Z", "attachment_id": 7168}, {"count": 17, "tags": [], "bug_id": 15869, "text": "The latest patch (#7151) does make a difference -- we get a reproduceable\ncoredump :-). Co-Advisor trace and stack trace are attached. Removing\nthe patch prevents Apache from dumping core, but leaves the violation.\n\nAre we doing something wrong?\n", "id": 40204, "time": "2003-07-08T18:34:22Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-07-08T18:34:22Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "text": "Note that bug 21392 (that you mentioned as related) depends\non Expires header present. This bug does not. IIRC, this bug\nalso prevents us from testing Apache against few other\nrelated RFC 2616 requirements, including max-age and Expires\nrelationship. Hope you can nail it down!", "is_private": false, "id": 40205, "creator": "coad@measurement-factory.com", "time": "2003-07-08T18:43:07Z", "bug_id": 15869, "creation_time": "2003-07-08T18:43:07Z", "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 15869, "text": "I know this problem. But this looks like a different problem. Because, In \n2.0.46, when i tried a scenario like, the server has a cache, that is stale and \ntries to re-validate what it has, It was dumping core even with out my any fix. \nI assumed that this is a defect, may be they are working on. I develop on \nNetware. We have something like strict memory check. So it happens every time, \nwhen i say strict memory check, all re-validation abends (core dumps) on my \nserver. May be i will try with out my fix. And if i am able to reprocude my \ndefect, i'll file it and get it fixed. So that we can go forward in this defect.\n\n-Srini.", "id": 40238, "time": "2003-07-09T03:43:53Z", "creator": "sragavan@novell.com", "creation_time": "2003-07-09T03:43:53Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "bug_id": 15869, "attachment_id": null, "is_private": false, "id": 47802, "time": "2003-11-21T17:15:24Z", "creator": "trawick@apache.org", "creation_time": "2003-11-21T17:15:24Z", "text": "I'm going through the bug db to make sure patches are findable.  Please see \nhttp://httpd.apache.org/dev/patches.html\n"}, {"count": 21, "tags": [], "text": "Can you test this again with 2.0.54? I believe it is fixed now.", "is_private": false, "id": 75902, "creator": "chip@force-elite.com", "time": "2005-06-03T02:45:53Z", "bug_id": 15869, "creation_time": "2005-06-03T02:45:53Z", "attachment_id": null}, {"count": 22, "tags": [], "bug_id": 15869, "attachment_id": null, "is_private": false, "id": 76005, "time": "2005-06-04T01:00:09Z", "creator": "coad@measurement-factory.com", "creation_time": "2005-06-04T01:00:09Z", "text": "Yes, this violation appears to be fixed\nin httpd-2.0.54. Thank you.\n"}]