[{"count": 0, "tags": [], "bug_id": 48482, "is_private": false, "id": 133308, "creation_time": "2010-01-04T10:14:53Z", "time": "2010-01-04T10:14:53Z", "creator": "johnt@jdtangney.com", "text": "To summarize:\n1) We are using 6.0.18.\n2) A single Tomcat works fine and joins the cluster.\n3) Two Tomcats on the SAME MACHINE (different ports - duh) but multicasting\nto DIFFERENT multicast IPs each join their respective clusters. (yes, two\nclusters.)\n4) Two Tomcats on the SAME machine multicasting to the SAME multicast IP and\nwe get \"An operation was attempted on something that is not a socket\" when\nwe launch the second tomcat.\n5) The exact setup works fine on RHEL and Mac OS X\n\n* This is NOT the 6.0.20 regression (https://issues.apache.org/bugzilla/show_bug.cgi?id=47308) \u2013 we're using 6.0.18.\n* This is NOT an issue with Windows getting confused by the bind attribute \u2013 it works fine in cases 2 & 3 above.\n\nCould it be that windows won't allow two apps to multicast to the same address at the same time?\n\nHere is some log output:\nINFO: Initializing Coyote HTTP/1.1 on http-8180\nDec 22, 2009 2:17:07 PM org.apache.catalina.startup.Catalina load\nINFO: Initialization processed in 332 ms\nDec 22, 2009 2:17:07 PM org.apache.catalina.core.StandardService start\nINFO: Starting service Catalina\nDec 22, 2009 2:17:07 PM org.apache.catalina.core.StandardEngine start\nINFO: Starting Servlet Engine: Apache Tomcat/6.0.18\nDec 22, 2009 2:17:07 PM org.apache.catalina.ha.tcp.SimpleTcpCluster start\nINFO: Cluster is about to start\nDec 22, 2009 2:17:07 PM org.apache.catalina.tribes.transport.ReceiverBase bind\nINFO: Receiver Server Socket bound to:/10.5.1.102:4000\nDec 22, 2009 2:17:07 PM org.apache.catalina.tribes.membership.McastServiceImpl setupSocket\nINFO: Attempting to bind the multicast socket to /224.0.0.0:45564\nDec 22, 2009 2:17:07 PM org.apache.catalina.tribes.membership.McastServiceImpl setupSocket\nINFO: Setting multihome multicast interface to:/10.5.1.102\nDec 22, 2009 2:17:07 PM org.apache.catalina.ha.tcp.SimpleTcpCluster start\nSEVERE: Unable to start cluster.\norg.apache.catalina.tribes.ChannelException: java.net.SocketException: An operation was attempted on something that is not a socket; No faulty members identified.\n...\nCaused by: java.net.SocketException: An operation was attempted on something that is not a socket\n\n------------------\nReply from Konstantin Kolinko:\n\"An operation was tried on something that is not a socket.\" is the\nmessage that corresponds to the WinSock error code WSAENOTSOCK\n(10038), see here:\nhttp://support.microsoft.com/kb/819124\n\nFrom TC 6.0.18 source bundle and from JDK sources it can be seen that\nLine 206 in McastServiceImpl is\nsocket.setInterface(mcastBindAddress);\nand that results in some setOption(SocketOptions.IP_MULTICAST_IF) call\nthat goes into native code.\nsee java.net.SocketOptions\n\n\n\nRegarding the listening on the same address/port:\n\nWith some search I found the following blog entry by Anthony Wong:\nhttp://blogs.msdn.com/anthonywong/archive/2005/09/30/475884.aspx\nthat says:\n\n[cite]\nBecause multicasting is a one to many communication, there maybe some\noccasions when you would like multiple UdpClient instances on the same\nmachine to receive data from the same multicast group and port. To do\nthis, you would need to set the SO_REUSEADDR socket option before\njoining the multicast group.\n[/cite]\n\nThe relevant option in java.net.SocketOptions is\nSocketOption.SO_REUSEADDR and it is settable through\nDatagramSocket.setReuseAddress().\n\nThe JavaDoc for SO_REUSEADDR says that \"it is set by default for\nMulticastSockets\", and it is indeed so:  you can see in JDK sources\nthat java.net.MulticastSocket class constructor calls\nsetReuseAddress(true).\nThe JavaDoc for setReuseAddress() says that support for this option is\nsystem-dependent, and also suggests you to check result of\ngetReuseAddress(), that \"will be false if it is not supported\".\n\n\nIn the list of errors there is WSAEADDRINUSE error (Address already in\nuse).  I wondered why it was not used, because it is directly relevant\nto the SO_REUSEADDR, if that is actually the cause, but I see that\nthat WSAEADDRINUSE is not listed among the codes returned by the\nsetsockopt() socket API function:\nhttp://www.sockets.com/winsock.htm#SetSockOpt\nhttp://msdn.microsoft.com/en-us/library/ms740476%28VS.85%29.aspx\n\nWSAEADDRINUSE error code is returned by the bind() operation.\n\n\n\nReturning back to the java code of McastServiceImpl.java of tribes\nTC 6.0.18:\nhttp://svn.apache.org/viewvc/tomcat/tc6.0.x/tags/TOMCAT_6_0_18/java/org/apache/catalina/tribes/membership/McastServiceImpl.java?view=markup\n\nCurrent code:\nhttp://svn.apache.org/viewvc/tomcat/tc6.0.x/trunk/java/org/apache/catalina/tribes/membership/McastServiceImpl.java?view=markup\n\n\nLocking in McastServiceImpl.setupSocket()\n1) I wonder whether \"address\" is ignored at all, unless \"bind\" is also set.\nI mean, in the first lines of the method\n       if (mcastBindAddress != null) {\n           try {\n               log.info(\"Attempting to bind the multicast socket to\n\"+address+\":\"+port);\n               socket = new MulticastSocket(new\nInetSocketAddress(address,port));\nwhy mcastBindAddress is used in the if() condition, and not address.\n\nThis code was introduced in rev.586228\nhttp://svn.apache.org/viewvc/tomcat/tc6.0.x/tags/TOMCAT_6_0_18/java/org/apache/catalina/tribes/membership/McastServiceImpl.java?r1=586227&r2=586228&\n\n\n2) John Tangney,\ndo you see the following one or two INFO messages in Tomcat log:\nlog.info(\"Attempting to bind the multicast socket to \"+address+\":\"+port);\nlog.info(\"Binding to multicast address, failed. Binding to port only.\");\n\n3)\nIt is possible to create unbound MulticastSocket, by passing a null\ninstead of  SocketAddress to its constructor.\n\nMaybe the  socket.setInterface(mcastBindAddress);  call will succeed\nif we create an unbound socket with \"new MulticastSocket(null)\", make\nsetInterface() call, and call bind() later.", "attachment_id": null}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "This works for me with:\n- Windows Server 2008 x64 Enterprise install\n- VMWare Tools (it was a VM)\n- Java 1.6.0_17 x64\n- Tomcat 6.0.18 and Tomcat 6.0.x latest\n\nThis looks like it is an issue with your environment.\n\nSome things to check:\n- Are you using the latest Java version?\n- Are you network drivers up to date?\n- Can you write a simple Java program to reproduce this?\n- Can you repeat this on other systems?\n\nGiven that this does not appear to be a Tomcat bug, please continue this issue on the users list.", "id": 133497, "time": "2010-01-11T01:57:54Z", "bug_id": 48482, "creation_time": "2010-01-11T01:57:54Z", "is_private": false}]