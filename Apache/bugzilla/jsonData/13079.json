[{"count": 0, "attachment_id": null, "creator": "pr@webapp.de", "text": "Two Threads access same global image and one of the thread kill the content\nbefore the other thread can load the image !\n\n\norg.apache.fop.pdf.PDFXObject\n...\n   protected int output(OutputStream stream) throws IOException {\n.... \n             // don't know if it's the good place (other objects can have \nreferences to it)\n                fopimage.close();\n...\n>>>>\n\nThis is the absolute wrong place to close the image!\n\nPlease delete the line!", "id": 23537, "time": "2002-09-27T14:10:02Z", "bug_id": 13079, "creation_time": "2002-09-27T14:10:02Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 13079, "text": "It depends and I'm not sure if we should really change that. Deleting the line \nresults in a change in behaviour. See our discussion on fop-dev during the last \nfew days. At least, the multi-threading issue should now be fixed.\n\nThis is a link to the discussion about this topic:\nhttp://marc.theaimsgroup.com/?t=103657310800005&r=1&w=2", "id": 25909, "time": "2002-11-08T10:45:11Z", "creator": "jeremias.maerki@outline.ch", "creation_time": "2002-11-08T10:45:11Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 13079, "attachment_id": null, "id": 156290, "time": "2012-04-01T07:08:34Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T07:08:34Z", "is_private": false, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed"}]