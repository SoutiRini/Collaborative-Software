[{"count": 0, "attachment_id": null, "bug_id": 14017, "is_private": false, "id": 25276, "time": "2002-10-28T15:46:25Z", "creator": "unicoletti@prometeo.it", "creation_time": "2002-10-28T15:46:25Z", "tags": [], "text": "<?xml version=\"1.0\"?>\n<document>\n<properties>\n<title>Apache 2.0.43 - Tomcat 4.1.12 - jk2 - virtual host HOWTO</title>\n<author email=\"unicoletti at prometeo.it\">Umberto Nicoletti</author>\n<date>Tue 22 Oct 2002 11:58:28 AM GMT-5</date>\n</properties>\n\n<section name=\"Disclaimer\">\n<p>\nInsert usual disclaimer here.\n\nunusual disclaimer\nPlease forget:\n1) my English\n2) typos\n3) names of hosts and installation directories\n</p>\n<p>\nAlso be warned that this is a beta version I just wrote as a reminder. if you\nencounter errors or discrepancies between what it is written here and what\nhappens to\nyou following this howto (or just want to point out something more clearly) please\nemail me a corrected version of this HOWTO.\n</p>\n</section>\n\n<section name=\"Scenario\">\n<ul>\n<li>RedHat Linux 7.2</li>\n<li>Latest 1.4.x Sun JDK:\n#java -version\n\tjava version \"1.4.1_01\"\n\tJava(TM) 2 Runtime Environment, Standard Edition (build 1.4.1_01-b01)\n\tJava HotSpot(TM) Client VM (build 1.4.1_01-b01, mixed mode)</li>\n<li>Tomcat 4.1.12 binary</li>\n<li>Apache 2.0.43 built from source\n\t[./configure -prefix=/usr/local/apache2.0.43 --sysconfdir=/etc/apache\n--localstatedir=/var --disable-dav --enable-so --enable-proxy\n--enable-proxy-connect --enable-proxy-http]</li>\n<li>jk2 connector binary from jakarta.apache.org</li>\n</ul>\n</section>\n\n<section name=\"Requirements\">\n<p>\nDeploy three (in my case) web applications under three different virtual hosts,\nmaking the default vhost\nrespond to any name and to the bare IP address.\n</p>\n</section>\n\n<section name=\"Installing JDK\">\n\t<p>Note: download the jdk, not just the jre!</p>\n\t<p>\nUncompress the jdk somewhere in the filesystem:\nI chose /usr/local/:\n\t\t<source>\n[root@ARLIN72AGE279 apache]# ll /usr/local/             \ntotal 48\nlrwxrwxrwx    1 root     root           13 Oct 18 17:20 apache -> apache2.0.43/\ndrwxr-xr-x   15 root     root         4096 Oct 21 16:40 apache2.0.43\ndrwxr-xr-x    2 root     root         4096 Feb  6  1996 bin\ndrwxr-xr-x    2 root     root         4096 Feb  6  1996 doc\ndrwxr-xr-x    2 root     root         4096 Feb  6  1996 etc\ndrwxr-xr-x    2 root     root         4096 Feb  6  1996 games\ndrwxr-xr-x    2 root     root         4096 Jun 22  2001 include\ndrwxr-xr-x    9 root     root         4096 Oct 18 16:37 j2sdk1.4.1_01\nlrwxrwxrwx    1 root     root           14 Oct 18 16:38 java -> j2sdk1.4.1_01/\ndrwxr-xr-x    2 root     root         4096 Feb  6  1996 lib\ndrwxr-xr-x    2 root     root         4096 Jun 22  2001 libexec\ndrwxr-xr-x    2 root     root         4096 Feb  6  1996 sbin\ndrwxr-xr-x    4 root     root         4096 Oct 18 13:07 share\ndrwxr-xr-x    2 root     root         4096 Feb  6  1996 src\n\t\t</source>\nmake a symlink named java to <source>j2sdk1.4.1_01/</source> so that you can\neasily switch back and forth\nbetween different jvms. We will use the same trick for apache and tomcat afterwards.\n</p>\n<p>\nNow tell your bash shell where to find java binaries: create a file named java.sh in\n/etc/profile.d with the following content:\n<source>\n[root@ARLIN72AGE279 apache]# cat /etc/profile.d/java.sh \n# set java environment\n\nexport JAVA_HOME=/usr/local/java\nexport PATH=$PATH:$JAVA_HOME/bin\n\nexport CLASSPATH=$JAVA_HOME/lib\n</source>\ndo a chmod:\n<source>\n#chmod 700 /etc/profile.d/java.sh\n</source>\nNow open a new shell and try this:\n<source>\n[root@ARLIN72AGE279 apache]# which java\n/usr/local/java/bin/java\n</source>\nYou should get the answer given above. If not chek your environment and make\nsure that java.sh is executed\nwhen opening a new shell.\nTry to run a java program or the following: java -version.\n</p>\n<p>\nIf you don't like this way of installing java please ignore it.\n\nMake sure everything is ok and then jump to next step.\n</p>\n</section>\n\n<section name=\"Installing Apache\">\n<p>\nDownload the latest release, uncompress it, cd into the newly created directory\nand run the following:\n<source>\n[root@ARLIN72AGE279 apache]# ./configure -prefix=/usr/local/apache2.0.43\n--sysconfdir=/etc/apache --localstatedir=/var --disable-dav --enable-so\n</source>\nOf course you can customize the installation specifying other modules to enable\nor whatever you like.\nJust don't forget to ENABLE-SO, because that's what you need to load the\napache-tomcat connector.\n</p>\n<p>\nRun make and make install. Create the log directories and others (you can skip\nthis if you know how\nto configure where apache puts its log files -> edit httpd.conf):\n<source>\n#mkdir /var/logs\n#mkdir /usr/local/apache2.0.43/conf\n#mkdir /usr/local/apache2.0.43/logs\n</source>\nCreate the symlink /usr/local/apache to /usr/local/apache2.0.43 and test your\ninstallation\nby executing:\n<source>\n#/usr/local/apache/bin/apachectl start\n</source>\nOpen a browser and point it to the linux box: you should get a page telling you\nthat the apache installation\nwas successful.\nIf not check the logs and troubleshoot: common errors in this configuration\nare that some directory holding log or configuration files is missing.\n</p>\n</section>\n\n<section name=\"Installing Tomcat\">\n<p>\nUncompress the tomcat binaries in a directory of your choice. In this howto we\nwill use /opt.\nCreate a symlink named jakarta to the newly created directory so that you have\nsomething like the following:\n<source>\n[root@ARLIN72AGE279 root]# ll /opt/\ntotal 4\nlrwxrwxrwx    1 root     root           31 Oct 18 16:38 jakarta ->\njakarta-tomcat-4.1.12-LE-jdk14/\ndrwxr-xr-x   12 root     root         4096 Oct 18 18:10\njakarta-tomcat-4.1.12-LE-jdk14\n</source>\nStart tomcat by running <source>/opt/jakarta/bin/startup.sh</source>. After a\nfew seconds point your browser at the IP of\nthe linux box on port 8080 and you should see the tomcat welcome page.\nIf not check the catalina.out log file in /opt/jakarta/logs and fix all errors\nuntil Tomcat comes up.\n</p>\n</section>\n\n<section name=\"Configuring Tomcat to listen to Apache ajp13 requests\">\n<p>\nHere is a sample server.xml file. Please note that the location of directories\nand log files is absolutely\narbitrary and you have to edit it to make it suit your needs.\n<source>\n&lt;!-- Umberto Server Configuration File --&gt;\n\n&lt;Server port=\"8005\" shutdown=\"SHUTDOWN\" debug=\"0\"&gt;\n  &lt;!-- Define an Apache-Connector Service --&gt;\n\n  &lt;Service name=\"Tomcat-Apache\"&gt;\n \n   &lt;!-- Define a Coyote/JK2 AJP 1.3 Connector on port 8009 --&gt;\n    &lt;Connector className=\"org.apache.coyote.tomcat4.CoyoteConnector\"\n               port=\"8009\" minProcessors=\"5\" maxProcessors=\"75\"\n               enableLookups=\"true\" redirectPort=\"8443\"\n               acceptCount=\"10\" debug=\"0\" connectionTimeout=\"20000\"\n               useURIValidationHack=\"false\"\n               protocolHandlerClassName=\"org.apache.jk.server.JkCoyoteHandler\"/&gt;\n\n\t&lt;Engine name=\"Apache\" defaultHost=\"www.home.net\" debug=\"0\"&gt;\n\n      &lt;Logger className=\"org.apache.catalina.logger.FileLogger\"\n              prefix=\"apache_log.\" suffix=\".txt\"\n              timestamp=\"true\"/&gt;\n\t  &lt;!-- Access log processes all requests for this virtual host. --&gt;\n      &lt;Valve className=\"org.apache.catalina.valves.AccessLogValve\"\n                 directory=\"logs\"  prefix=\"localhost_access_log.\" suffix=\".txt\"\n                 pattern=\"common\" resolveHosts=\"false\"/&gt;\n\n\t&lt;Host name=\"www.home.net\" debug=\"0\"\nappBase=\"/opt/jakarta-tomcat-4.1.12-LE-jdk14/webapps/struts-example\" \n       unpackWARs=\"true\" autoDeploy=\"true\"&gt;\n\t\t&lt;Alias&gt;localhost&lt;/Alias&gt;\n\t\t&lt;Alias&gt;www&lt;/Alias&gt;\n\t\t&lt;Alias&gt;10.0.0.10&lt;/Alias&gt;\n\n\n\t\t&lt;Context path=\"\" docBase=\"\" debug=\"1\"/&gt;\n\n\t\t&lt;Valve className=\"org.apache.catalina.valves.AccessLogValve\"\n                 directory=\"logs\"  prefix=\"home_access_log.\" suffix=\".txt\"\n                 pattern=\"common\" resolveHosts=\"false\"/&gt;\n\t&lt;/Host&gt;\n\n\t&lt;Host name=\"www.customer1.it\" debug=\"0\"\nappBase=\"/opt/jakarta-tomcat-4.1.12-LE-jdk14/webapps/struts-blank\" \n       unpackWARs=\"true\" autoDeploy=\"true\"&gt;\n\n\t\t&lt;Context path=\"\" docBase=\"\" debug=\"1\"/&gt;\n\n\t\t&lt;Valve className=\"org.apache.catalina.valves.AccessLogValve\"\n                 directory=\"logs\"  prefix=\"cust1_access_log.\" suffix=\".txt\"\n                 pattern=\"common\" resolveHosts=\"false\"/&gt;\n\t&lt;/Host&gt;\n\n\t&lt;Host name=\"www.customer2.net\" debug=\"0\"\nappBase=\"/opt/jakarta-tomcat-4.1.12-LE-jdk14/webapps/root\" \n       unpackWARs=\"true\" autoDeploy=\"true\"&gt;\n\n\t\t&lt;Context path=\"\" docBase=\"\" debug=\"1\"/&gt;\n\n\t\t&lt;Valve className=\"org.apache.catalina.valves.AccessLogValve\"\n                 directory=\"logs\"  prefix=\"cust2_log.\" suffix=\".txt\"\n                 pattern=\"common\" resolveHosts=\"false\"/&gt;\n\t&lt;/Host&gt;\n\n    &lt;/Engine&gt;\n\n  &lt;/Service&gt;\n\n&lt;/Server&gt;\n</source>\n</p>\n<p>\nThis is a very minimalistic conf file, because we have taken away the HTTP1.1\nconnector that allows us to talk directly to Tomcat.\nIt might not be good for development, but it should be good for production.\nIf you feel like you need also the Tomcat Standalone service then copy and paste\nit from your original server.xml file\n(you did back it up, didn't you?).\n</p>\n<p>\nTry to start tomcat again and check catalina.out to see if everything is up and\nrunning. If it complains about\nmissing apr stuff try to edit /opt/jakarta/conf/jk2.properties and make it look so:\n<source>\n# list of needed handlers.\nhandler.list=channelSocket,request\n# Override the default port for the channelSocket\nchannelSocket.port=8009\n</source>\nIf everything is ok move on to next section.\n</p>\n</section>\n\n<section name=\"Configuring Apache virtual hosting\">\n<p>\nrtfm at <a\nhref=\"http://httpd.apache.org/docs-2.0/vhosts/\">http://httpd.apache.org/docs-2.0/vhosts/</a>\nIn the appendix you can find the httpd.conf file I used to write and test this\nHOWTO.\n</p>\n</section>\n\n<section name=\"Configuring Apache to talk to Tomcat\">\n<p>\nDownload the jk2 shared library for you version of apache and copy it in\n/usr/local/apache/modules\n(create the  directory if necessary). If you can't find a suitable version of\njk2 ask it to the tomcat-user ml\nor download the source and build it yourself (this is another HOWTO).\n</p>\n<p>\nCreate, if you haven't already, the /usr/local/apache/conf directory and create\na file named\nworkers2.properties with this content in it:\n<source>\n# only at beginnin. In production uncomment it out\n[logger.apache2]\nlevel=DEBUG\n\n[shm]\nfile=/usr/local/apache/logs/shm.file\nsize=1048576\n\n# Example socket channel, override port and host.\n[channel.socket:localhost:8009]\nport=8009\nhost=127.0.0.1\n\n# define the worker\n[ajp13:localhost:8009]\nchannel=channel.socket:localhost:8009\n\n# Uri mapping\n[uri:10.0.0.10/*.jsp]\nworker=ajp13:localhost:8009\n\n[uri:www.home.net/*.jsp]\nworker=ajp13:localhost:8009\n\n[uri:www.customer1.it/*.jsp]\nworker=ajp13:localhost:8009\n\n[uri:www.customer2.net/*.jsp]\nworker=ajp13:localhost:8009\n</source>\n</p>\n<p>\nEdit the file, change ip addresses and names to suit your needs and save it.\n</p>\n<p>\nEdit http.conf and add the following line in the Modules section:\n<source>\nLoadModule jk2_module modules/mod_jk2.so\n</source>\nSave http.conf and try to start apache. It should now load the jk2 connector and\nthe configuration\nfrom workers2.properties.\nCheck the error log to make sure everything is ok.\n</p>\n<p>\nStart tomcat and try to load a HTML page in your browser: apache should return\nthe page\nwithout problems.\nNow try with a jsp page: it should display after a little.\n\nIf you get errors check that the path and host names (double check also the\nconfiguration of DNS\nwith your network administrator) are ok, the directories are readable by both\nTomcat and Apache.\nAgain look into the log files.\n</p>\n<p>\nIf everything works go to next section.\n</p>\n</section>\n\n<section name=\"The last trick\">\n<p>\nNow ask your network administrator to set up an alias for your brand new server\n(use jspsrc if\nyou like to stick to this howto).\nIf you don't have easy access to dns try to edit your hosts file (on the client\nwhere you open the browser)\nand add a line as follows:\n<source>\n10.0.0.10\t\tjspsrc\n</source>\nwhere 10.0.0.10 is the ip of your server. Open your browser and type this in\nyour location bar:\n<source>\nhttp://jspsrc\n</source>\nand navigate to a jsp page. You should get the source of the jsp page into your\nbrowser!\n</p>\n<p>\nThis is clearly a security problem, if not a major annoyance.\n</p>\n<p>\nWhat's wrong with the setup we came up so far? The problem is (or should be)\nthat the ajp13\nconnector can't find a virtual host that matches the jspsrc uri.\nWhat we need to do is set up the default virtual host so that ALL *.jsp requests\nget handled by tomcat.\n</p>\n<p>\nHow do we do it?\n</p>\n<p>\nRead on if you want to know how.\n</p>\n</section>\n\n<section name=\"JK directives in httpd.conf\">\n<p>\nIn addition to the workers2.properties you can put Jk diretives directly into\nthe httpd.conf file (just as you did\nwith jk and webapp).\nEdit the default virtual host section in httpd.conf and add the following lines\nin the end, before\n<i>&lt;/VirtualHost&gt;</i>:\n<source>\n    &lt;Location \"/*.jsp\"&gt;\n        JkUriSet worker ajp13:localhost:8009 \n    &lt;/Location&gt;\n</source>\nRestart Apache and test the jspsrc url again.\n</p>\n<p>\nThe jsp source should not be displayed anymore.\n</p>\n</section>\n\n<section name=\"Notes\">\n<p>\nI think a better approach would be to remove all uri directives from\nworkers2.properties\nand to put them in http.conf as we did in the previous section for the defualt\nvirtual host.\nExperiment and let me know.\n</p>\n</section>\n\n<section name=\"APPENDIX A: httpd.conf\">\n<p><source>\n#\n# Umberto Nicoletti, 18/10/2002\n#\n\n### Section 1: Global Environment\n\nServerRoot \"/usr/local/apache\"\nErrorLog logs/error_log\n\n&lt;IfModule !mpm_winnt.c&gt;\n&lt;IfModule !mpm_netware.c&gt;\n#LockFile logs/accept.lock\n&lt;/IfModule&gt;\n&lt;/IfModule&gt;\n\n# ScoreBoardFile: File used to store internal server process information.\n&lt;IfModule !mpm_netware.c&gt;\n&lt;IfModule !perchild.c&gt;\n#ScoreBoardFile logs/apache_runtime_status\n&lt;/IfModule&gt;\n&lt;/IfModule&gt;\n\n&lt;IfModule !mpm_netware.c&gt;\nPidFile logs/httpd.pid\n&lt;/IfModule&gt;\n\nTimeout 300\n\nKeepAlive On\nMaxKeepAliveRequests 100\nKeepAliveTimeout 15\n\n&lt;IfModule prefork.c&gt;\nStartServers         5\nMinSpareServers      5\nMaxSpareServers     10\nMaxClients         150\nMaxRequestsPerChild  0\n&lt;/IfModule&gt;\n\n&lt;IfModule worker.c&gt;\nStartServers         2\nMaxClients         150\nMinSpareThreads     25\nMaxSpareThreads     75 \nThreadsPerChild     25\nMaxRequestsPerChild  0\n&lt;/IfModule&gt;\n\n&lt;IfModule perchild.c&gt;\nNumServers           5\nStartThreads         5\nMinSpareThreads      5\nMaxSpareThreads     10\nMaxThreadsPerChild  20\nMaxRequestsPerChild  0\n&lt;/IfModule&gt;\n\n# listen on all ports\nListen 80\n\n#\n# Dynamic Shared Object (DSO) Support\n#\nLoadModule jk2_module modules/mod_jk2.so\n\n### Section 2: 'Main' server configuration\n\n&lt;IfModule !mpm_winnt.c&gt;\n&lt;IfModule !mpm_netware.c&gt;\n#\n# If you wish httpd to run as a different user or group, you must run\n# httpd as root initially and it will switch.  \n#\n# User/Group: The name (or #number) of the user/group to run httpd as.\n#  . On SCO (ODT 3) use \"User nouser\" and \"Group nogroup\".\n#  . On HPUX you may not be able to use shared memory as nobody, and the\n#    suggested workaround is to create a user www and use that user.\n#  NOTE that some kernels refuse to setgid(Group) or semctl(IPC_SET)\n#  when the value of (unsigned)Group is above 60000; \n#  don't use Group #-1 on these systems!\n#\nUser nobody\nGroup #-1\n&lt;/IfModule&gt;\n&lt;/IfModule&gt;\n\nServerAdmin whatever@you.want\nServerName www.home.net\nUseCanonicalName Off\n\n#\n# The following directives define some format nicknames for use with\n# a CustomLog directive (see below).\n#\nLogFormat \"%h %l %u %t \\\"%r\\\" %&gt;s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined\nLogFormat \"%h %l %u %t \\\"%r\\\" %&gt;s %b\" common\nLogFormat \"%{Referer}i -&gt; %U\" referer\nLogFormat \"%{User-agent}i\" agent\n\nLogLevel debug\nCustomLog logs/access.log common\n\nDocumentRoot \"/opt/jakarta-tomcat-4.1.12-LE-jdk14/webapps/struts-example\"\n\n&lt;Directory /opt/jakarta-tomcat-4.1.12-LE-jdk14/webapps/struts-example&gt;\n    Options None\n    AllowOverride None\n&lt;/Directory&gt;\n\nDirectoryIndex index.html index.jsp\n\n&lt;Directory /&gt;\n    Options None\n    AllowOverride None\n&lt;/Directory&gt;\n\n&lt;Files ~ \"^\\.ht\"&gt;\n    Order allow,deny\n    Deny from all\n&lt;/Files&gt;\n\n&lt;Location /WEB-INF/&gt;\n    Order Allow,Deny\n&lt;/Location&gt;\n\nNameVirtualHost *\n\n&lt;VirtualHost *&gt;\n    ServerName www.home.net\n\tServerAlias www\n\tServerAlias localhost\n    ServerAdmin sysmaster@arpa.veneto.it\n    DocumentRoot /opt/jakarta-tomcat-4.1.12-LE-jdk14/webapps/struts-example\n\n    ErrorLog logs/home.net-errorlog\n\tCustomLog logs/home.net-access.log common\n\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *&gt;\n    ServerName www.customer1.it\n    ServerAdmin sysmaster@arpa.veneto.it\n    DocumentRoot /opt/jakarta-tomcat-4.1.12-LE-jdk14/webapps/struts-blank\n    ErrorLog logs/cust1-errorlog\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *&gt;\n    ServerName www.customer2.net\n    ServerAdmin sysmaster@arpa.veneto.it\n    DocumentRoot /opt/jakarta-tomcat-4.1.12-LE-jdk14/webapps/root\n    ErrorLog logs/cust2-errorlog\n&lt;/VirtualHost&gt;\n</source>\n</p>\n\n</section>\n</document>"}, {"count": 1, "tags": [], "text": "Thanks, Umberto - this has helped me a lot.\n\nI was assuming the DefaultContext would deal with my JSPs (in my virtual host \ndirectory /ROOT) and my servlets (in the virtual directory /servlet) without me \nhaving to define them - this is how I recall JK and tomcat3 worked.\n\nI defined the Contexts in server.xml as you did, and the \"uris\" in \nworkers2.properties - defining the JSP and servlets directories in both files - \nand it works now!", "is_private": false, "id": 34755, "creator": "jswedberg@mail.com", "time": "2003-04-08T19:36:07Z", "bug_id": 14017, "creation_time": "2003-04-08T19:36:07Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 14017, "text": "If you could rewrite it using xml (see jk2 docs in cvs), we could include it in\nCVS....", "id": 34777, "time": "2003-04-09T08:52:26Z", "creator": "hgomez@apache.org", "creation_time": "2003-04-09T08:52:26Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "unicoletti@prometeo.it", "attachment_id": null, "is_private": false, "id": 34853, "time": "2003-04-10T07:02:12Z", "bug_id": 14017, "creation_time": "2003-04-10T07:02:12Z", "text": "It is already formatted in xml, and it used to 'compile' correctly as of version\n4.1.12 of jakarta-tomcat-connectors documentation.\nIn fact the only thing that should be necessary is to cut and paste it into the\njakarta-tomcat-connectors/jk/xdocs/jk2 directory. If you encounter problems\nplease let me know and I'll be glad to help you."}, {"count": 4, "attachment_id": null, "bug_id": 14017, "is_private": false, "id": 34864, "time": "2003-04-10T13:08:04Z", "creator": "hgomez@apache.org", "creation_time": "2003-04-10T13:08:04Z", "tags": [], "text": "You should use more screen tags to make visual diff between standard text and\ncommand...\n\nTake an example in current jk doc"}, {"count": 5, "attachment_id": 5769, "bug_id": 14017, "is_private": false, "id": 34867, "time": "2003-04-10T15:01:15Z", "creator": "unicoletti@prometeo.it", "creation_time": "2003-04-10T15:01:15Z", "tags": [], "text": "Created attachment 5769\nHowto rewritten using screen tags"}, {"count": 6, "tags": [], "bug_id": 14017, "text": "commited...\n\nThanks", "id": 34870, "time": "2003-04-10T15:35:54Z", "creator": "hgomez@apache.org", "creation_time": "2003-04-10T15:35:54Z", "is_private": false, "attachment_id": null}]