[{"count": 0, "tags": [], "bug_id": 5390, "attachment_id": null, "text": "The following code in the web.xml does not fire up the jsp on startup.  In the \nweb.dtd, it states:\n\n<!-- The servlet element contains the declarative data of a\nservlet. If a jsp-file is specified and the load-on-startup element is\npresent, then the JSP should be precompiled and loaded. -->\n\nNo matter what I did, tomcat would not compile and load the jsp on startup.  I \nhave an jspInit() method in the jsp which grabs the init parmameters and \nnothing happens.  I notice in the logs that the \"LoadOnStartupInterceptor: \nInitializing JSP with JspWrapper\" is invoked but nothing happens.  No compile \nis done until I call it manually with a browser.  And even when I do, the \njspInit method fires but there are no config.getInitParameter(\"param1\") there?  \nPlease advise.  Thank you.  I noticed there is a bug id 4518 with a similar \nproblem, but that was for tomcat 4.\n================================================================\n    <servlet>\n        <servlet-name>loadonstartup</servlet-name>\n        <jsp-file>/loadonstartup.jsp</jsp-file>\n        <init-param>\n            <param-name>param1</param-name>\n            <param-value>ValueOfParam1</param-value>\n        </init-param>\n\t<load-on-startup>1</load-on-startup>\n    </servlet>\n================================================================", "id": 8846, "time": "2001-12-12T12:09:23Z", "creator": "mike@ds808.net", "creation_time": "2001-12-12T12:09:23Z", "is_private": false}, {"count": 1, "tags": [], "creator": "william.barker@wilshire.com", "text": "This is now fixed in the CVS HEAD and will appear in the next nightly.\n\nNote that the initParameter only applies to the JSP page accessed through a \nservlet-mapping of the defined servlet.  Accessing via \nhttp://myserver/myapp/loadonstartup.jsp is a different servlet.", "id": 8879, "time": "2001-12-12T20:23:40Z", "bug_id": 5390, "creation_time": "2001-12-12T20:23:40Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 5390, "is_private": false, "id": 8880, "time": "2001-12-12T21:06:28Z", "creator": "mike@ds808.net", "creation_time": "2001-12-12T21:06:28Z", "tags": [], "text": "So are you saying if I added this:\n    <servlet-mapping>\n        <servlet-name>loadonstartup</servlet-name>\n        <url-pattern>/loadonstartup.jsp</url-pattern>\n    </servlet-mapping>\n\nthat I would be able to get the init-param value at startup as well as \nsubsequent requests for /loadonstartup.jsp since I now have the servlet-mapping \nin place for this jsp-file running off the root context?  I forgot to mention \nthat this root context is within a virtual host <Host ...>...</Host> although \nit should work in whatever host+context this web.xml is associated with."}, {"count": 3, "tags": [], "bug_id": 5390, "attachment_id": null, "text": "The virtual host shouldn't matter, although I admit to not having tested \nagainst it.  The ROOT context isn't treated any differently than any other \ncontext.\n\nYes, an explicit mapping will take precedence over the default \"*.jsp\" mapping, \nso that you will get the declared servlet (which has the initParameters).\n\nOf course, none of this works unless you build from a cvs checkout, or wait \nuntil tomorrow's nightly.", "id": 8881, "time": "2001-12-12T21:41:59Z", "creator": "william.barker@wilshire.com", "creation_time": "2001-12-12T21:41:59Z", "is_private": false}, {"count": 4, "tags": [], "text": "I'll wait for the nightly build and test it with virtual hosts for you.  If I \nhave problems, I will request to reopen this bug report.  Could you mention \nwhat java source file was patched.\n\nThanks Much ... Mike", "is_private": false, "bug_id": 5390, "id": 8882, "time": "2001-12-12T21:50:52Z", "creator": "mike@ds808.net", "creation_time": "2001-12-12T21:50:52Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 5390, "attachment_id": null, "is_private": false, "id": 8883, "time": "2001-12-12T22:04:28Z", "creator": "william.barker@wilshire.com", "creation_time": "2001-12-12T22:04:28Z", "text": "jakarta-\ntomcat/src/facade22/org/apache/tomcat/facade/LoadOnStartupIntercepter.java"}, {"count": 6, "attachment_id": null, "bug_id": 5390, "is_private": false, "id": 8959, "time": "2001-12-16T16:21:30Z", "creator": "mike@ds808.net", "creation_time": "2001-12-16T16:21:30Z", "tags": [], "text": "Everything works as advertised.\nThanks Much!\n"}, {"count": 7, "tags": [], "bug_id": 5390, "attachment_id": null, "is_private": false, "id": 9157, "time": "2001-12-24T11:45:35Z", "creator": "mike@ds808.net", "creation_time": "2001-12-24T11:45:35Z", "text": "There appears to be a side effect to this fix.  With the jsp file used as the \nload-on-startup present in the web.xml, when I start tomcat and the first thing \nI type in is an invalid url (e.g. xxx.jsp), the tomcat engine blows up on a \nstack overflow problem and it's dead.  If I remove, the web.xml entries, and do \nthe same thing, everything works as expected with a 404 error.\n\nThe full exception stack is over 1040 lines long so here is snippet:\n...\n2001-12-24 09:21:24 - ContextManager: Adding  www.yourdomain.com:/examples3\n2001-12-24 09:21:24 - ContextManager: Adding  DEFAULT:/ROOT\n2001-12-24 09:21:24 - Ctx() : Validating web.xml\n2001-12-24 09:21:24 - LoadOnStartupInterceptor: Initializing JSP with JspWrapper\n2001-12-24 09:21:43 - Ajp12Interceptor: Starting on 8007\n2001-12-24 09:21:43 - Ajp13Interceptor: Starting on 8009\n2001-12-24 09:21:52 - Ctx() : Class not found: xxx_0\n2001-12-24 09:21:52 - Ctx() : Status code:404 request:R(  + /xxx.jsp + null) \nmsg:null\n2001-12-24 09:21:53 - Ctx() : Exception in R(  + /xxx.jsp + null) - \njava.lang.StackOverflowError\n\tat java.util.zip.ZipEntry.initFields(Native Method)\n\tat java.util.zip.ZipEntry.<init>(ZipEntry.java:95)\n\tat java.util.zip.ZipFile.getEntry(ZipFile.java:150)\n...\n\nPlease advise.  The code base being used was from 12/13 nightly build.\n"}, {"count": 8, "tags": [], "text": "Everything up to the \"Status code:404\" line is normal, and AFAIK none of the \nchanges to the App-Classloader should be able to cause this.  If you can add \nthe log as an attachment, I might be able to track something down, but since my \nsimple attempt to reproduce failed to fail I don't have enough info to go on.\n\nIf you have your own 404 handler, you might also want to check there (although \nI can't see how to write one buggy enough to blow up here :).", "is_private": false, "id": 9163, "creator": "william.barker@wilshire.com", "time": "2001-12-24T14:03:59Z", "bug_id": 5390, "creation_time": "2001-12-24T14:03:59Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "The reporter has told me that this works now.", "is_private": false, "id": 9368, "creator": "william.barker@wilshire.com", "time": "2002-01-04T21:27:52Z", "bug_id": 5390, "creation_time": "2002-01-04T21:27:52Z", "attachment_id": null}]