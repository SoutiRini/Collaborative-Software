[{"count": 0, "tags": [], "bug_id": 50280, "attachment_id": null, "is_private": false, "id": 141747, "time": "2010-11-16T14:09:06Z", "creator": "mike.pechkin@gmail.com", "creation_time": "2010-11-16T14:09:06Z", "text": "Server: Solaris 10u3 + 10Recommended (6.10.2010)\nSoft: Apache 2.2.15 (compiled by Sun Studio 12 + latest patches)\nSoft: openssl 0.9.8n from opencsw\n\nThis combination of soft coredumps 20+ times per day under load.\nI can't repeat this in test bed.\n\nI still believe they came from one source.\nI see *several* types of crashes:\n\n1.\n# mdb core.httpd.5168\nLoading modules: [ libc.so.1 libuutil.so.1 ld.so.1 ]\n> ::stack\nlibc.so.1`_brk_unlocked+8(2000, ff035770, 700910, 7b6e8, 6fe910, dea89200)\nlibc.so.1`sbrk+0x24(2000, 6fd508, 7b728, fef57088, ff0303d8, ffffdfe7)\nlibc.so.1`_morecore+0xdc(2000, 6fd508, 6fe910, ff039338, 7ffffc00, 0)\nlibc.so.1`_malloc_unlocked+0x1fc(3000, 6fd508, 13f8, 6fd508, ff033a20, 0)\nlibc.so.1`malloc+0x4c(3000, 1, d95ac, ff1f0fd0, ff0303d8, ff03a5a0)\nlibapr-1.so.0`allocator_alloc+0x424(681b58, 2018, 1ac00, fe768ff8, aec98, 6fd4c8)\nlibapr-1.so.0`apr_palloc+0x120(681be0, 2018, fed0a6b8, fec9c384, 6a0b48, fecd8e94)\nmod_ssl.so`bio_filter_out_ctx_new+0x20(6823f8, 681ed0, 1ac00, fe768ff8, aec98, 6fd4c8)\nmod_ssl.so`ssl_io_filter_init+0xc4(681ed0, 6a0b48, fed0a6b8, fec9c384, 6a0b48, fecd8e94)\nmod_ssl.so`ssl_init_ssl_connection+0x300(681ed0, 1ea, 6, 0, 681ed0, fed1f89c)\nmod_ssl.so`ssl_hook_pre_connection+0x194(681ed0, 681c20, 681c20, 1f1, 681ec8, 687c88)\nap_run_pre_connection+0x7c(681ed0, 681c20, 0, 1f1, 687c88, 1)\nap_process_connection+0x24(681ed0, 681c20, 681c20, 1f1, 681ec8, 687c88)\nprocess_socket+0xc4(681be0, 681c20, 0, 1f1, 687c88, 1)\nworker_thread+0x2e0(480848, 23e058, 0, 0, 0, 0)\nlibapr-1.so.0`dummy_worker+0x24(480848, dd97c000, 0, 0, ff2084f8, 1)\nlibc.so.1`_lwp_start(0, 0, 0, 0, 0, 0)\n> \n\n2.\n\n# mdb core.httpd.3215\nLoading modules: [ libc.so.1 libuutil.so.1 ld.so.1 ]\n> ::stack\nlibc.so.1`_read+0xc(8, ffbff90b, 1, 0, ff035960, ff162a00)\nap_mpm_pod_check+0x30(153790, 6f038, 6fd68, 1c0430, 1c02e8, 250669)\nchild_main+0x3ec(1, 6e988, 0, 0, ff035960, ff162a00)\nmake_child+0x134(b1178, 1, 7, 0, b1178, 8ca94)\nperform_idle_server_maintenance+0x61c(ffbffbb8, ffbffbb4, ffbffba0, af280, 0, 0)\nserver_main_loop+0x2c4(0, 6dd, 7, 0, b1178, 8ca94)\nap_mpm_run+0x3ec(af280, dd338, b1178, b1178, 0, 0)\nmain+0xe50(3, ffbffd6c, ffbffd7c, a0400, ff160100, 0)\n_start+0x108(0, 0, 0, 0, 0, 0)\n> \n\n3.\n\n# mdb core.httpd.5550\nLoading modules: [ libc.so.1 libuutil.so.1 ld.so.1 ]\n> ::stack\nlibc.so.1`__lwp_park+0x14(dea8fa00, 0, ff033a20, 0, 1c00, 1d3c)\nlibc.so.1`free+0x1c(776138, 34, d871c, feca6550, ff0303d8, 67fbc8)\nlibcrypto.so.0.9.8`CRYPTO_free+0x48(0, 618, 400, fe768ff8, 127b40, 776138)\nlibssl.so.0.9.8`tls1_setup_key_block+0x128(65bab0, 34, 20, 776138, 14, 67fbc8)\nlibssl.so.0.9.8`ssl3_accept+0x6e0(65bab0, 21d0, fed0c518, 2000, 21d0, 67fbc8)\nlibssl.so.0.9.8`ssl23_get_client_hello+0x784(65bab0, b, 2210, 3, fecd6fa0, dcc7b91c)\nlibssl.so.0.9.8`ssl23_accept+0x29c(65bab0, fed0c518, 0, 225e50, fecd6fa0, 2000)\nmod_ssl.so`ssl_io_filter_connect+0x3a0(62fe40, 6a4bf0, 1, 0, 0, 0)\nmod_ssl.so`ssl_io_filter_input+0x1a0(6a2de8, 6a4bf0, 1, 0, 0, 0)\nap_get_brigade+0x70(6a2de8, 6a4bf0, 1, 0, 0, 0)\nap_rgetline_core+0x90(6a3e60, 2000, dcc7bc44, 6a3e48, 0, 6a4bf0)\nread_request_line+0x7c(6a3e48, 6a4bf0, ffffffff, 0, 0, 6a3ff1)\nap_read_request+0x224(62f918, 3, 0, 1fe, 6336a8, 1)\nap_process_http_connection+0x28(62f918, 62f668, 62f668, 3fe, 62f910, 6336a8)\nap_run_process_connection+0x74(62f918, 62f668, 1, 1fe, 6336a8, 1)\nap_process_connection+0x88(62f918, 62f668, 62f668, 3fe, 62f910, 6336a8)\nprocess_socket+0xc4(62f628, 62f668, 1, 1fe, 6336a8, 1)\nworker_thread+0x2e0(4809e8, 23e070, 0, 0, 0, 0)\nlibapr-1.so.0`dummy_worker+0x24(4809e8, dcc7c000, 0, 0, ff2084f8, 1)\nlibc.so.1`_lwp_start(0, 0, 0, 0, 0, 0)\n> \n\np.s. Next week I will deploy apache 2.2.17 + openssl 0.9.8o (opencsw) and install latest kernel patch 144488-03"}, {"count": 1, "tags": [], "text": "updated:\no) latest 144488-03\no) 2.2.17 compiled by patched sun studio 12\no) latest openssl and expat from opencsw\no) latest glassfish loadbalancer (build 18)\n\nit still coredumps!!!", "attachment_id": null, "id": 142102, "creator": "mike.pechkin@gmail.com", "time": "2010-11-29T02:34:17Z", "bug_id": 50280, "creation_time": "2010-11-29T02:34:17Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 50280, "attachment_id": null, "is_private": false, "id": 142169, "time": "2010-11-29T23:35:20Z", "creator": "wrowe@apache.org", "creation_time": "2010-11-29T23:35:20Z", "text": "Best to post the updated backtrace unless it is altogether identical."}, {"count": 3, "tags": [], "creator": "mike.pechkin@gmail.com", "attachment_id": 26356, "text": "Created attachment 26356\nuniq coredumps after upgrade to 2.2.17\n\nunique back traces of 26 coredumps for today.", "id": 142178, "time": "2010-11-30T05:24:44Z", "bug_id": 50280, "creation_time": "2010-11-30T05:24:44Z", "is_private": false}, {"count": 4, "tags": [], "creator": "mike.pechkin@gmail.com", "is_private": false, "text": "p.s. post service request to Oracle.", "id": 142180, "time": "2010-11-30T05:25:35Z", "bug_id": 50280, "creation_time": "2010-11-30T05:25:35Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 50280, "attachment_id": null, "id": 142191, "time": "2010-11-30T08:16:35Z", "creator": "mike.pechkin@gmail.com", "creation_time": "2010-11-30T08:16:35Z", "is_private": false, "text": "Request has been rejected by Oracle."}, {"count": 6, "tags": [], "bug_id": 50280, "attachment_id": null, "is_private": false, "id": 142194, "time": "2010-11-30T08:47:47Z", "creator": "nick@webthing.com", "creation_time": "2010-11-30T08:47:47Z", "text": "Is that openssl compiled by the same sun studio or something different, possibly gcc?  Or is it possible that Apache/APR might be compiled against headers for a different version to the openssl library used?\n\nIs there a reason you can't either use Sun webstack or compile everything including openssl yourself, to be sure you're on compatible versions?"}, {"count": 7, "tags": [], "bug_id": 50280, "is_private": false, "id": 142198, "attachment_id": null, "creator": "mike.pechkin@gmail.com", "creation_time": "2010-11-30T08:59:09Z", "time": "2010-11-30T08:59:09Z", "text": "1. Apache compiles --with-included-apr\n2. core #2 from 1st note doesn't use ssl code but it coredumps.\n\nI could compile apache and openssl by default gcc"}, {"count": 8, "tags": [], "text": "If it were me I'd try enabling AJP in GlassFish (ISTR that GF 3 supports it out of the box???) and use mod_jk or mod_proxy_ajp in httpd in order to minimize 3rd party code.  Something/anything in your httpd processes is misusing the heap.  The GF module is the most out out-of-the-ordinary component of your setup compared with everyone else using httpd and SSL.", "is_private": false, "id": 142199, "creator": "trawick@apache.org", "time": "2010-11-30T09:41:48Z", "bug_id": 50280, "creation_time": "2010-11-30T09:41:48Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 50280, "text": "no coredumps without *glassfish* loadbalancer for the last 24h.\nyou could close the report.", "id": 142465, "time": "2010-12-07T14:28:52Z", "creator": "mike.pechkin@gmail.com", "creation_time": "2010-12-07T14:28:52Z", "is_private": false, "attachment_id": null}, {"count": 10, "attachment_id": null, "bug_id": 50280, "text": "OP said it only happened with glassfish loadbalanacer and requested close.", "id": 149417, "time": "2011-09-17T19:33:09Z", "creator": "covener@gmail.com", "creation_time": "2011-09-17T19:33:09Z", "tags": [], "is_private": false}]