[{"count": 0, "tags": [], "bug_id": 4669, "text": "I am installing Cocoon on a RH Linux box (7.2).\n\nWhen I startup Tomcat (4.0) with the cocoon samples webapp, the cocoon servlet \nfails to start up with the following stack trace in the cocoon.log.0000001 log \nfile.\nBut this exception only appears if the computer cannot open the GUI.\nIf I make the GUI startable, then the samples from cocoon succeed.\n\nCocoon Version : Cocoon-2_0rc1a.tar.gz\nBatik Lib Version : ??? Probably 1.0 (from the manifest)\n\nI have looked at the 1_1rc3 code, and I believe the DefaultSystemColorResolver \ncould profitably be altered to return hard coded colours.\nI understand that that could be a touchy subject, and I don't know all the \nplaces the class is used, so let me give you my reasoning.\n\nThe Batik libraries should be able to be run quickly on 'headless' environments \nsuch as the popular linux rack mounted web hosting boxes, and high end Unix \nboxes. If this dependency remains then it could limit the usefulness of batik.\nAs to the Fast requirement above, the test to see if the GUI is there is not a \nquick one, it may require a network timeout. \nFor Windows people, the unix GUI (X11) is a full networked application. It \nwould involve having a screen open and logged in (on the network) that the \nheadless machine could connect to, and if that machine died, so would the \napplication.\n\nAlternatively, the cocoon project could use an alternate SystemColorResolver \nwith hard coded colour values, for server side deployment, I suspect that would \nneed to be initiated in Batik's code.\n\nOnce you've decided how this will be fixed, I can program it for you, it \nshouldn't take me more than a week (I need to get up to speed with the code \nfirst). Hard coded solution might be faster ;)\n\nStack Trace Below.\njava.lang.InternalError: Can't connect to X11 window server using 'win98:0' as t\nhe value of the DISPLAY variable.\n        at sun.awt.X11GraphicsEnvironment.initDisplay(Native Method)\n        at sun.awt.X11GraphicsEnvironment.<clinit>(X11GraphicsEnvironment.java:5\n9)\n        at java.lang.Class.forName0(Native Method)\n        at java.lang.Class.forName(Class.java:120)\n        at java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(GraphicsEnvi\nronment.java:58)\n        at sun.awt.motif.MToolkit.<clinit>(MToolkit.java:57)\n        at java.lang.Class.forName0(Native Method)\n        at java.lang.Class.forName(Class.java:120)\n        at java.awt.Toolkit$2.run(Toolkit.java:512)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.awt.Toolkit.getDefaultToolkit(Toolkit.java:503)\n        at java.awt.SystemColor.updateSystemColors(SystemColor.java:342)\n        at java.awt.SystemColor.<clinit>(SystemColor.java:335)\n        at org.apache.batik.css.value.DefaultSystemColorResolver.activeBorder(De\nfaultSystemColorResolver.java:27)\n        at org.apache.batik.css.value.ColorFactory.<init>(ColorFactory.java:75)\n        at org.apache.batik.css.value.CommonValueFactoryMap.<init>(CommonValueFa\nctoryMap.java:39)\n        at org.apache.batik.css.svg.SVGValueFactoryMap.<init>(SVGValueFactoryMap\n.java:39)", "id": 7578, "time": "2001-11-06T01:26:32Z", "creator": "Andrew_Russell@pobox.com", "creation_time": "2001-11-06T01:26:32Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "tkormann@apache.org", "is_private": false, "id": 7652, "creation_time": "2001-11-07T10:28:41Z", "time": "2001-11-07T10:28:41Z", "bug_id": 4669, "text": "AWT requires X11 to run under linux. This issue will be solved in the next jdk\nversion.\n\n", "attachment_id": null}]