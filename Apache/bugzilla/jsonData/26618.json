[{"count": 0, "tags": [], "text": "This allows the generated output file to have these in it.\nWe have a branch of XSLTProcess that does this and use it widely.\nIt is one change to two files, simple.\nDiscussed on email with Stephane Bailliez.\n\nThe enhancement means that when you generate a java file, you can generate it's \npackage to match the source it was generated from.  Or when you generate a BPEL \nprocess or WSDL definition, the generated target namespace can match the \nartefact you genereated if from.  Very common requirements.\n\nSuggested implementation:\n\nCHANGE 1: add the parameters to before transforming\n\naround line 507 in XSLTProcess add this (the constants are suggested here):\n\n                // TODO setup parameters - Only block added by David Keeley\n                // Intention is to get this added to apache ANT source\n                String sourceFile = xmlFile;\n                String sourcePath = xmlFile.replace('\\\\', '/');\n                int pos = sourcePath.lastIndexOf('/');\n                if (pos != -1) {\n                  sourceFile = xmlFile.substring(pos+1);\n                  sourcePath = sourcePath.substring(0, pos);\n                }\n                else {\n                  sourcePath = \"\";\n                }\n                liaison.addParam(\"source-xml-file\", sourceFile); \n                liaison.addParam(\"source-xml-path\", sourcePath);\n                log(\"SOURCE \" + sourcePath + \" \" + sourceFile);\n\n                liaison.transform(inFile, outFile);\n\nCHANGE 2: make sure they are not immutable in the transformer, so change from \nfile to file\n\nin TraXLiaison, comment this out around line 164:\n\n//        if (transformer == null) {\n            createTransformer();\n//        }\n\nand modify this method as shown :\n\n    private void createTransformer() throws Exception {\n      if (transformer == null) {\n        if (templates == null) {\n            readTemplates();\n        }\n\n        transformer = templates.newTransformer();\n\n        // configure the transformer...\n        transformer.setErrorListener(this);\n        if (uriResolver != null) {\n            transformer.setURIResolver(uriResolver);\n        }\n        for (int i = 0; i < outputProperties.size(); i++) {\n            final String[] pair = (String[]) outputProperties.elementAt(i);\n            transformer.setOutputProperty(pair[0], pair[1]);\n        }\n      }  \n      for (int i = 0; i < params.size(); i++) {\n        final String[] pair = (String[]) params.elementAt(i);\n        transformer.setParameter(pair[0], pair[1]);\n      }\n    }", "attachment_id": null, "bug_id": 26618, "id": 51628, "time": "2004-02-02T22:02:44Z", "creator": "keeleyd@clear.net.nz", "creation_time": "2004-02-02T22:02:44Z", "is_private": false}, {"count": 1, "tags": [], "creator": "apache-bugzilla@vitoni.de", "attachment_id": null, "text": "This bug seems to be related to bug 21042.\n\nI would propose to use a Map for the parameters,  since having a List will\ncreate a new entry on each call instead of replacing the old one.", "id": 89109, "time": "2006-05-14T20:04:01Z", "bug_id": 26618, "creation_time": "2006-05-14T20:04:01Z", "is_private": false}, {"count": 2, "text": "\n\n*** This bug has been marked as a duplicate of 21042 ***", "bug_id": 26618, "attachment_id": null, "id": 91770, "time": "2006-08-01T16:39:31Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-08-01T16:39:31Z", "tags": [], "is_private": false}]