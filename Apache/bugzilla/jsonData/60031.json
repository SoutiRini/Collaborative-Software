[{"count": 0, "tags": [], "creator": "sodoww+bz.apache.org@gmail.com", "attachment_id": null, "id": 193276, "time": "2016-08-23T08:35:23Z", "bug_id": 60031, "creation_time": "2016-08-23T08:35:23Z", "is_private": false, "text": "When you have a date format which has two segments (date and time) and the month indicator (\"MM\") is placed at the end of date segment than it's replaced to minutes indicator (\"mm\") within DataFormatter#createDateFormat(String, double) for loop.\nEg.: \"yyyy\\\\-dd\\\\-mm\\\\ hh:mm:ss\" -> \"yyyy-dd-mm HH:mm:ss\"\nand even: \"yyyy-dd-MM HH:mm:ss\" -> \"yyyy-dd-mm HH:mm:ss\"\n\nIt's obviously caused by the \"if 'M' precedes 's' it should be minutes ('m')\" part of code (l.565 for POI 3.15b2) which uses obsolete \"ms\" variable. Wouldn't clearing \"ms\" variable within last else (for white spaces; l.589 in 3.15b2) be sufficient to solve this issue?"}, {"count": 1, "tags": [], "creator": "sodoww+bz.apache.org@gmail.com", "attachment_id": null, "id": 193277, "time": "2016-08-23T08:42:32Z", "bug_id": 60031, "creation_time": "2016-08-23T08:42:32Z", "is_private": false, "text": "Of course the obvious result of this bug is parsing date from double incorrectly, eg. date 23-08-2016 08:51:01 which is 42605.368761574071 as double will be parsed with format \"yyyy-dd-MM HH:mm:ss\" into \"2016-23-51 08:51:01\".\n\nProblem occurred on POI 3.11 but it can also be reproduced on 3.15b2."}, {"count": 2, "tags": [], "text": "Unfortunately your proposed simple fix of clearing ms causes other tests to fail, e.g. this one:\n\nassertEquals(\"57:07.2\", dfUS.formatRawCellContents(.123, -1, \"mm:ss.0;@\"));\n\nA unit-test to verify your bug is:\n\n    @Test\n    public void testBug60031() {\n        // 23-08-2016 08:51:01 which is 42605.368761574071 as double will be parsed\n        // with format \"yyyy-dd-MM HH:mm:ss\" into \"2016-23-51 08:51:01\".\n        DataFormatter dfUS = new DataFormatter(Locale.US);\n        assertEquals(\"2016-23-08 08:51:01\", dfUS.formatRawCellContents(42605.368761574071, -1, \"yyyy-dd-MM HH:mm:ss\"));\n    }", "is_private": false, "bug_id": 60031, "id": 194441, "time": "2016-10-14T21:40:22Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-10-14T21:40:22Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Created attachment 34431\nsolution proposal\n\nMade a fix which also tackles the problem mentioned before. I'm attaching the patch with this fix and test case made by Dominik.", "attachment_id": 34431, "id": 194892, "creation_time": "2016-11-09T14:51:39Z", "time": "2016-11-09T14:51:39Z", "creator": "sodoww+bz.apache.org@gmail.com", "bug_id": 60031, "is_private": false}, {"count": 4, "tags": [], "creator": "sodoww+bz.apache.org@gmail.com", "attachment_id": null, "id": 194901, "time": "2016-11-10T08:39:56Z", "bug_id": 60031, "creation_time": "2016-11-10T08:39:56Z", "is_private": false, "text": "Unfortunately my patch introduces a failure in TestHSSFSheet#autoSizeDate. Fortunately it's caused by parsing cell values correctly (IMHO).\nCell values in this test are formatted with pattern \"yyyy-mm-dd MMMM hh:mm:ss\". There are 2 cells: first with numerical value 1 (1.01.1900) and second with numerical value 123456 (3.01.2238).\nBefore my patch:\n- result pattern is: \"yyyy-MM-dd mmmm HH:mm:ss\"\n- String value of first cell is: 1900-01-01 0000 00:00:00\n- String value of second cell is: 2238-01-03 0000 00:00:00\nAfter my patch:\n- result pattern is: \"yyyy-mm-dd MMMM hh:mm:ss\"\n- String value of first cell is: 1900-01-01 January 00:00:00\n- String value of second cell is: 2238-01-03 January 00:00:00\n\nI am not providing a patch for this issue yet as I would prefer sbd verify my assumptions.\n\nBTW. There're typos within above-mentioned test (TestHSSFSheet#autoSizeDate l.729). Guess there should be 1 instead of 0 for #getColumnWidth invocations arguments."}, {"count": 5, "tags": [], "creator": "dtn-asfbugs@corefiling.co.uk", "attachment_id": null, "id": 195825, "time": "2017-01-03T17:32:07Z", "bug_id": 60031, "creation_time": "2017-01-03T17:32:07Z", "is_private": false, "text": "(In reply to Andrzej Witecki from comment #4)\n\n> I am not providing a patch for this issue yet as I would prefer sbd verify\n> my assumptions.\n\nVerified - as per the comments in the code, Excel formats both mmmm and MMMM as the full month name. Please go ahead and extend your patch accordingly."}, {"count": 6, "attachment_id": 34632, "bug_id": 60031, "is_private": false, "id": 196116, "time": "2017-01-17T16:12:09Z", "creator": "sodoww+bz.apache.org@gmail.com", "creation_time": "2017-01-17T16:12:09Z", "tags": [], "text": "Created attachment 34632\nFinal patch\n\nIncluding new patch which also tackles problems (introduced by my changes) in TestHSSFSheet#autoSizeDate and TestDataFormatter"}, {"count": 7, "tags": [], "creator": "onealj@apache.org", "attachment_id": null, "is_private": false, "id": 196229, "time": "2017-01-20T05:37:38Z", "bug_id": 60031, "creation_time": "2017-01-20T05:37:38Z", "text": "Applied to trunk in r1779564. Thanks for the patch!\n\nThis will be included in POI 3.16 beta 2.\n\nFixed TestHSSFSheet typo in r1779565."}]