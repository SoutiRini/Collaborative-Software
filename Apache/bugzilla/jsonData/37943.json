[{"count": 0, "tags": [], "creator": "tech@jotobjects.com", "attachment_id": null, "id": 83752, "time": "2005-12-16T22:34:45Z", "bug_id": 37943, "creation_time": "2005-12-16T22:34:45Z", "is_private": false, "text": "This bug has some similarities to bug #33572.  I'm not sure if this is supposed\nto be fixed already or if this is expected behavior, but here is the scenario:\n\n- include META-INF/context.xml in myapp.war\n\n- deploy myapp.war to webapps for the first time. This unpacks the war to\nwebapps/myapp and creates conf/catalina/localhost/myapp as a copy of the\nMETA-INF/context.xml in the war file\n\n- shutdown tomcat, delete conf/catalina/localhost/myapp, and make some change to\nwebapps/myapp/META-INF/context.xml\n\n- restart tomcat. This recreates conf/catalina/localhost/myapp as a copy of the\ncontext.xml FROM the war file (which is now different from the context.xml in\nthe unpacked webapps/myapp) - \"PROBLEM #1\" - This can be surprising and confusing.\n\n- stop tomcat. Put a new mayapp.war file in webapps with a changed\nMETA-INF/context.xml. Remove the old webapps/myapp directory.\n\n- restart tomcat. This unpacks the new war and puts the new cntext.xml in\nwebapps/myapp/META-INF/context.xml. \"PROBLEM #2\" - The old\nconf/catalina/localhost/myapp is unchanged and this is what tomcat uses, not the\nnew context.xml.\n\nWorkaround - Be sure to remove conf/catalina/localhost/myapp when deploying a\nnew myapp.war file.  \"PROBLEM #3\" - This required deployment step is not documented."}, {"count": 1, "attachment_id": null, "bug_id": 37943, "text": "Correction to bug description: The context file that Tomcat creates is named\nconf/Catalina/localhost/myapp.xml (with .xml extension).\n\n", "id": 83992, "time": "2005-12-26T17:59:32Z", "creator": "tech@jotobjects.com", "creation_time": "2005-12-26T17:59:32Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 37943, "is_private": false, "id": 84238, "creation_time": "2006-01-04T23:52:01Z", "time": "2006-01-04T23:52:01Z", "creator": "mech@tngtech.com", "text": "I guess the real problem behind this issue is the way Tomcat handles\nMETA-INF/context.xml (a problem that exists since releases (at least 5.0.28, but\nI guess even back in 4.1.x) and still in 5.5.x.\n\nMETA-INF/context.xml is \"only\" taken into account, if a webapp is deployed from\na .WAR and unpacked. \n\nhttp://tomcat.apache.org/tomcat-5.5-doc/config/host.html says for autodeployment:\n\"\nAny subdirectory within the application base directory  that appears to be an\nunpacked web application (that is, it contains a /WEB-INF/web.xml file) will\nreceive an automatically generated Context element, even if this directory is\nnot mentioned in the conf/server.xml file. This generated Context entry will be\nconfigured according to the properties set in any DefaultContext  element nested\nin this Host element. The context path for this deployed Context will be a slash\ncharacter (\"/\") followed by the directory name, unless the directory name is\nROOT, in which case the context path will be an empty string (\"\").\"\n\nThis means that whenever the webapp is unpacked already for some reason, and for\nsome reason (deleleted, incomplete deployment, war locking...) the content of\nthe context deployment descriptor in /conf/Catalina/localhost doesn't match the\none in META-INF/context.xml in the webapp it is simply not taken into account.\nInstead the DefaultContext is used, ignoring the docBase etc.\n\nI stumbled upon this releases ago and I think Tomcat should be enhanced to first\nlook for a META-INF/context.xml in this case. Of course, some fixes had been\nmade, but I guess it was never solved completely. \n\nActually this has practical problems in production environments. E.g. we use a\nsymlinked webapps directory in order to have to deploy a webapp only once, have\npatches available for all, have only one physical location, etc. in a multi\nTomcat instances loadbalanced environment. In production we also don't use\nautoDeploy, only deployOnStartup. We deploy only WAR files, as real drop-in\ndeployments.\n\nMoreover we have important information in META-INF/context.xml -> e.g. JNDI\nresource links that need to be resolved and taken into account when the context\nstarts (nothing that happens when just DefaultContext is used, and something\nthat causes our DB connection to fail by a JNDI lookup exception).\n\nIn effect this has the following impact (on Tomcat 5.0.28, but I see no change\nthat could cause 5.5.x to work differently):\n\n1. clean webapps directory filled with just .WAR files,\n(/conf/Catalina/localhost wiped, too.)\n\nTomcat #1 starts up, deploys on startup, unpacks war files, meanwhile the\nMETA-INF/context.xml gets renamed/copied to that Tomcat instance's /conf/ as it\nshould.\n\nNow the problem arises...\n\nTomcat 2..n starts up nearly simultanously, .WAR is already unpacked (delay),\nhence Tomcat 2..n will ignore META-INF/context.xml, just use DefaultContext,\nJNDI resource unavailable, etc. -> webapp not really \"successfully\" deployed,\neventhough it is deployed with incomplete context setup. Actually it just does\nwhat the docu says, eventhough it's not a good idea...\n\n-> Workaround: copy the /conf/Catalina/localhost/<yourapp>.xml of Tomcat #1 to\nTomcat #2..#n and restart the context on all other Tomcat instances. Not nice,\nbut works. \n\nUsually I make /conf/Catalina/localhost/*.xml readonly after the initial\ndeployment for all instances. This way when I undeploying/hot deploy a context\nthe context.xml won't get deleted (and usually META-INF/context.xml stays the\nsame, even if you deploy new webapp versions). Thus this problem occurs only the\nvery first time.\n\nStill annoying... Could be solved by always prefering META-INF/context.xml, if\navailable. \nIn fact I assumed this deployment descriptor was introduced for this reason, so\nwhy not always obey its preciding information?\n\nOf course, one could still ignored docBase and assume the .WAR equals the\ndirectory/context name, eventhough it would be nicer if even this information\nwould be used for unpacking. But it would help already to always use the\nMETA-INF/context.xml if that is easier to implement.\n\nProbably one should change this bug to \"ENHANCEMENT\" to get .WAR deployment with\nMETA-INF/context.xml consequently implemented in future versions and make them\nwork for some more complex installation scenarios without tweaking.", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 37943, "attachment_id": null, "is_private": false, "id": 97226, "time": "2006-12-24T09:22:59Z", "creator": "yoavs@computer.org", "creation_time": "2006-12-24T09:22:59Z", "text": "This code and behavior has been discussed and analyzed at length.  You can check\nout the dev@tomcat.apache.org mailing list archives at your leisure, and you can\nstart a new discussion there if you feel like it.  Pursuant to these mailing\nlist discussions, I'm going to close this issue for now as WONTFIX.  If you have\na precise patch just for this use case, created and tested against Tomcat\n5.5.20, please feel free to reopen this issue and and attach said patch for\nreview.  However, the chances of this enhancement getting done for 5.5 are\nfairly slim at this point."}, {"count": 4, "tags": [], "creator": "tech@jotobjects.com", "attachment_id": null, "id": 97447, "time": "2006-12-29T08:10:08Z", "bug_id": 37943, "creation_time": "2006-12-29T08:10:08Z", "is_private": false, "text": "I didn't find these extensive discussions on the dev maillist. Do you have any\npointers to dates or subject lines to find those threads?\n\nIt seems to me that the META-INF feature is essentially unusable for redeploying\ncontext.xml without following undocumented manual deployment steps as outlined\nin this bug report.  At the least, the documentation is misleading which leads\nto a perception that Tomcat is ill behaved.  I would like to read the maillist\ndiscussions to understand the rationale for leaving this unresolved in future\nreleases.(In reply to comment #3)"}]