[{"count": 0, "tags": [], "text": "While testing one of our applications we noticed that whenever we tried to hit\nany of the JSP files in a particular directory, we always got 404 errors - even\nthough the files were definitely there. We tried moving those same JSP files to\nother directories - in some directories they worked fine, in others we got 404\nerrors, an in still others we got 500 errors telling us Tomcat was unable to\ncreate the .class file. Same thing when we moved JSPs that worked in other\ndirectories into the directory where we originally noticed the problem - some\nstill worked, some always gave 404 errors, some gave 500 errors.\n\nIt took us several days to debug this, but we were finally able to determine\nthat it was the length of the JSP URLs that was causing the problem. Or more\nprecisely, the length of the filenames of the .java and .class files that Tomcat\nproduces when compiling the JSPs.\n\nWhen Tomcat tries to compile the following JSP (with full path from the\napplication root, application name was osdm-address):\n\nen.us/prompts/default_dm/address/56789012345.jsp\n\nThe filename of the .class file that it attempts to compile (cut and pasted this\ndirectly from the HTTP 500 error message) is:\n\nC:\\Program Files\\Apache\nGroup\\jakarta-tomcat-3.2.3\\work\\localhost_8080%2Fosdm-address\\en_0005fus\\prompts\\d_00025fault_0005fdm\\address\\_0002fen_0002eus_0002fprompts_0002fdefault_0005fdm_0002faddress_0002f_00035_00036_00037_00038_00039_00030_00031_00032_00033_00034_00035_0002ejsp56789012345_jsp_0.class\n\nThis is longer than 255 characters, which is the NTFS limit for file names.\n\nI suspect that the 404 error occurs when the intermediate .java filename is too\nlong, and the 500 error occurs when the final .class filename is too long. Or\nsomething like that, my experimentation shows extremely long URLs lead to 404\nerrors, whereas somewhat shorter URLs lead to the 500 error.\n\nYou should note that we had previously tested this same application on JRun and\nfound everything worked fine. Reason being that JRun uses a different naming\nscheme for these temporary files, one which results in shorter filenames. The\ndifference is in the way non-alphabetic characters like '/' or '_' that may\nappear in the original URL are converted. JRun just replaces all\nnon-alphanumeric characters with an underscore. Tomcat, on the other hand, seems\nto convert all non-alphabetic characters (including digits) into an underscore\nfollowed by a 5-character hex representation of the ASCII value for that\ncharacter. That can add up to a lot of characters pretty quick if your URL has a\nlot of non-alphabetic characters!\n\nObviously there is a work-around - to simplify our directory structure, shorten\nthe directory and file names we're using, and/or try to eliminate non-alphabetic\ncharacters from directory and file names. But it seems like that shouldn't be\nnecessary, I think the length and format of our URLs is quite reasonable. At the\nvery least, even if you decide not to allow longer path/filenames, you should\nmake sure that when the max is exceeded the error messages produced by Tomcat\nare more verbose and explain exactly why the JSP cannot be loaded, rather than\njust producing generic 404 or 500 errors.", "is_private": false, "id": 16563, "creator": "andrewprevost@hotmail.com", "time": "2002-05-22T19:14:01Z", "bug_id": 9326, "creation_time": "2002-05-22T19:14:01Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 9326, "attachment_id": null, "id": 16564, "time": "2002-05-22T19:19:34Z", "creator": "william.barker@wilshire.com", "creation_time": "2002-05-22T19:19:34Z", "is_private": false, "text": "This is fixed in both 3.3 and 4.x\n\n*** This bug has been marked as a duplicate of 1210 ***"}]