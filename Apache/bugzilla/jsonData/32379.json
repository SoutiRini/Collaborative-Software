[{"count": 0, "tags": [], "bug_id": 32379, "is_private": false, "text": "My property file(s) has properties like env.dir.base etc. \nI have various config files which are \"master\" files, and used to create the \nfinal config file (based on the contents of the property files). \n\nIn the master file however I don't want to write \n>>>> \n<config basedir=\"env.dir.base\">\n<<<< \n\nInstead I want to be able to make it clearly visible by enclosing the strings \nto be replaced into delimiters. E.g. \n>>>> \n<config basedir=\"%env.dir.base%\">\n<<<< \n\nI could achieve this by writing the property files like: \n%env.dir.base% = /dir/val/used \n\n.... but .... this is ugly. I don't want property names to contain the \ndelimiter characters (%). \n\nSolution: \nProvide an optional argument \"delimiterstring\" to be used with \nreplacefilterfile. E.g. \n\n<replace file=\"e:\\\\test.txt\" \n         replacefilterfile=\"testSecond.properties\"\n         delimiterstring=\"%\"/>\n\nAnd now don't treat each property as token, but instead use %property% as \ntoken.", "id": 67415, "time": "2004-11-24T13:51:42Z", "creator": "lewold@jbusters.com", "creation_time": "2004-11-24T13:51:42Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 32379, "text": "I believe that you can do this by using a <filterset> in the <copy> task.", "id": 67416, "time": "2004-11-24T14:39:46Z", "creator": "stevel@apache.org", "creation_time": "2004-11-24T14:39:46Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "lewold@jbusters.com", "attachment_id": null, "text": "That's a good tip, which basically works. \nWe have just one problem: We use \"nested tokens\". E.g. \n%cost.%delivery.system%% --> %cost.cd%   (in first replace iteration) \n%cost.cd% --> 100 (in second replace iteration) \n\nWe could solve this by copying the file to a temp file first, and then to the \nfinal file. But somehow I don't like that - I would prefer to replace contents \nin one file. \n\nI think exactly those begin/endtoken from filterset would fit perfectly into \nthe Replace task. \n\nAdditionally there is one problem with filterset. ${} Variables don't get \nreplaced. The same problem happens with the replace task also, but only when \nusing replacefilterfile. \nI think this is already reported with defect 8972 however. If you know a \nworkaround there it would rock. \n\n", "id": 67449, "time": "2004-11-25T10:48:06Z", "bug_id": 32379, "creation_time": "2004-11-25T10:48:06Z", "is_private": false}]