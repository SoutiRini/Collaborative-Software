[{"count": 0, "tags": [], "bug_id": 45279, "attachment_id": null, "id": 117981, "time": "2008-06-25T12:21:15Z", "creator": "robert.newson@gmail.com", "creation_time": "2008-06-25T12:21:15Z", "is_private": false, "text": "McastServiceImpl does not close its socket in stop() as it claims. It merely calls leaveGroup(), which is sufficient to stop receiving messages, but does not close the socket. \n\nThis causes a file descriptor leak each time the service is stopped.\n\nadd;\n\nsocket.close();\n\nafter leaveGroup();"}, {"count": 1, "tags": [], "bug_id": 45279, "text": "\nbtw, since it unreferences the socket without closing it, the next start() makes a new socket anyway.\n\nI've hacked around this by using reflection to grab the reference to the multicast socket object before calling stop, then calling stop, then closing the socket myself.\n\n", "id": 117983, "attachment_id": null, "creator": "robert.newson@gmail.com", "creation_time": "2008-06-25T13:13:34Z", "time": "2008-06-25T13:13:34Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 45279, "text": "Fix suggested for back port into 6.0 branch", "id": 117985, "time": "2008-06-25T13:48:05Z", "creator": "fhanik@apache.org", "creation_time": "2008-06-25T13:48:05Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 45279, "text": "Fixed in 6.0.x branch, will be included in 6.0.17 and forward\n\n", "id": 118126, "time": "2008-06-30T13:03:21Z", "creator": "fhanik@apache.org", "creation_time": "2008-06-30T13:03:21Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 45279, "attachment_id": null, "text": "Also applied to TC 5.5 as r790337.\nWill be part of 5.5.28.", "id": 128466, "time": "2009-07-01T12:31:52Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2009-07-01T12:31:52Z", "is_private": false}]