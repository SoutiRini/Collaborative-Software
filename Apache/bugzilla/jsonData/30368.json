[{"count": 0, "tags": [], "text": "Hello,\n\nThere seems to be a problem with the URLDecoding of the pathInfo I can obtain \nwith getPathInfo() of interface HttpServletRequest.\n\nExample: be my URL :\n\nhttp://localhost:8080/myapp/snoop/rel/%C3%9Cbersicht+PSS+Familie_V1.pdf\n\nBe a servlet which handles this request mapped to \"/snoop/*\".\nThen the pathInfo (not URLDecoded) would be: \n\n/rel/%C3%9Cbersicht+PSS+Familie_V1.pdf\n\nBut what Tomcat returns decoded with getPathInfo() is not correct. I cannot say \nexactly what ist wrong with the implementation of the URLDecode() method in \nclass RequestUtils, but the error ist the same if I URLDecode the string \nreturned by getRequestURI() with java.net.URLDecoder.decode(). Maybe this gives \nyou an idea.\n\nBTW, %C3%9C is the URLencoding of the UTF-8-encoded german U-Umlaut. \n\nBest Regards\n\nMichael", "is_private": false, "bug_id": 30368, "id": 61242, "time": "2004-07-28T15:16:46Z", "creator": "ms@docware.de", "creation_time": "2004-07-28T15:16:46Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 30368, "attachment_id": null, "is_private": false, "id": 61287, "time": "2004-07-29T06:01:56Z", "creator": "ms@docware.de", "creation_time": "2004-07-29T06:01:56Z", "text": "BTW, our app has been Unicode enabled for a long time, so I am sure there is \nreally a problem. Up to now we have passed all as request parameters and \ngetParameter() has been always URLdecoded correctly. So there must be a \ndifference in Tomcat between URLencoding the parameters and the pathInfo.\n\nMichael"}, {"count": 2, "tags": [], "text": "Character encoding in URLs is often problematic. Set the following parameters \non your connector and all should be OK:\nURIEncoding=\"UTF8\"\nuseBodyEncodingForURI=\"false\"\n\nThis has caused much confusion in the past. In an attempt at clarification I \nput together the following notes that might be helpful.\n\nREQUESTS\n========\n\nThere are a number of situations where there may be a requirement to use non-\nUS ASCII characters in a URI. These include:\n- Parameters in the query string\n- Servlet paths\n\nThere is a standard for encoding URIs (http://www.w3.org/International/O-URL-\ncode.html) but this standard is not consistently followed by clients. This \ncauses a number of problems.\n\nThe functionality provided by Tomcat (4 and 5) to handle this less than ideal \nsituation is described below.\n\n1. The Coyote HTTP/1.1 connector has a useBodyEncodingForURI attribute which \nif set to true will use the request body encoding to decode the URI query \nparameters.\n  - The default value is true for TC4 (breaks spec but gives consistent \nbehaviour across TC4 versions)\n  - The default value is false for TC5 (spec compliant but there may be \nmigration issues for some apps)\n2. The Coyote HTTP/1.1 connector has a URIEncoding attribute which defaults to \nISO-8859-1.\n3. The parameters class (o.a.t.u.http.Parameters) has a QueryStringEncoding \nfield which defaults to the URIEncoding. It must be set before the parameters \nare parsed to have an effect.\n\nThings to note regarding the servlet API:\n1. HttpServletRequest.setCharacterEncoding() normally only applies to the \nrequest body NOT the URI.\n2. HttpServletRequest.getPathInfo() is decoded by the web container.\n3. HttpServletRequest.getRequestURI() is not decoded by container.\n\nOther tips:\n1. Use POST with forms to return parameters as the parameters are then part of \nthe request body.\n\n\nRESPONSES\n=========\n\nHTML META tags are ignored by Tomcat. You may use <%@ page pagEncoding=\"...\" %\n> for JSPs.", "is_private": false, "bug_id": 30368, "id": 61419, "time": "2004-07-31T18:14:35Z", "creator": "markt@apache.org", "creation_time": "2004-07-31T18:14:35Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Mark thanks for your reply.\nMy expected behaviour was (and still is) that the servlet container should make \nno assumption about an encoding of the URI. getPathInfo() should URLdecode the %\nxx characters but nothing else. The further interpretation should be in the \nresponsibility of my servlet, i.e. in our case we UTF-8-decode the servlet path \nas well as the query string. From your comment I read that you consider \nquerystring parameters the same as servlet paths but the default behaviour in \nTomcat is not the same.\nAs I wrote we have passed UTF-8-Strings via querystring parameters for a long \ntime. getParameter() does the URLdecoding and afterwards we manually UTF-8-\ndecode this string.\nNow we have started to use the servlet path and use getPathInfo() and expected \nthe same and run into the problem described here.\nWith your connector attributes I think we should Tomcat let UTF-8-decode the \nURL but then we have to omit the UTF-8-decoding from our servlet. But is that \nportable across other servlet containers? We will not use your suggestion but \nuse our own implementation of getPathInfo().\n\nAgain in short: IMO the servlet path obtained by getPathInfo() should be \nhandled the same way as the querystring handled by getParameter().\n\nMichael", "is_private": false, "bug_id": 30368, "id": 61741, "time": "2004-08-10T07:56:28Z", "creator": "ms@docware.de", "creation_time": "2004-08-10T07:56:28Z", "attachment_id": null}]