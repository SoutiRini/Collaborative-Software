[{"count": 0, "tags": [], "creator": "derrick.koes@smith-nephew.com", "text": "log4j:ERROR Could not parse input source [org.xml.sax.InputSource@cd107f].\njava.net.MalformedURLException: no protocol: log4j.dtd\n        at java.net.URL.<init>(URL.java:579)\n        at java.net.URL.<init>(URL.java:476)\n        at java.net.URL.<init>(URL.java:425)\n        at org.apache.xerces.impl.XMLEntityManager.startEntity(XMLEntityManager.\njava:807)\n        at org.apache.xerces.impl.XMLEntityManager.startDTDEntity(XMLEntityManag\ner.java:767)\n        at org.apache.xerces.impl.XMLDTDScannerImpl.setInputSource(XMLDTDScanner\nImpl.java:275)\n        at org.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch(\nXMLDocumentScannerImpl.java:841)\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XM\nLDocumentFragmentScannerImpl.java:329)\n        at org.apache.xerces.parsers.DTDConfiguration.parse(DTDConfiguration.jav\na:525)\n        at org.apache.xerces.parsers.DTDConfiguration.parse(DTDConfiguration.jav\na:581)\n        at org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:152)\n        at org.apache.xerces.parsers.DOMParser.parse(DOMParser.java:253)\n        at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.\njava:201)\n        at org.apache.log4j.xml.DOMConfigurator.doConfigure(DOMConfigurator.java\n:672)\n        at org.apache.log4j.xml.DOMConfigurator.doConfigure(DOMConfigurator.java\n:616)\n        at org.apache.log4j.xml.DOMConfigurator.doConfigure(DOMConfigurator.java\n:602)\n        at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionCon\nverter.java:460)\n        at org.apache.log4j.LogManager.<clinit>(LogManager.java:145)\n        at org.apache.log4j.Logger.getLogger(Logger.java:85)\n        at org.apache.jsp.index$jsp._jspService(index$jsp.java:223)\n        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:107)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at org.apache.jasper.servlet.JspServlet$JspServletWrapper.service(JspSer\nvlet.java:201)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:3\n81)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:473)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl\nicationFilterChain.java:247)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF\nilterChain.java:193)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperV\nalve.java:243)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:566)\n        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.jav\na:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextV\nalve.java:190)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:566)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(Authentica\ntorBase.java:531)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:564)\n        at org.apache.catalina.valves.CertificatesValve.invoke(CertificatesValve\n.java:246)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:564)\n        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.jav\na:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\n        at org.apache.catalina.core.StandardContext.invoke(StandardContext.java:\n2347)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.j\nava:180)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:566)\n        at org.apache.catalina.valves.ErrorDispatcherValve.invoke(ErrorDispatche\nrValve.java:170)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:564)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.j\nava:170)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:564)\n        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:\n468)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:564)\n        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.jav\na:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineVal\nve.java:174)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(StandardPipeline\n.java:566)\n        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.jav\na:472)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:943)\n\n        at org.apache.ajp.tomcat4.Ajp13Processor.process(Ajp13Processor.java:458\n)\n        at org.apache.ajp.tomcat4.Ajp13Processor.run(Ajp13Processor.java:551)\n        at java.lang.Thread.run(Thread.java:536)", "id": 22369, "time": "2002-09-06T15:41:04Z", "bug_id": 12366, "creation_time": "2002-09-06T15:41:04Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 12366, "attachment_id": null, "text": "\nI was not very careful with the stack trace.  If I would have looked more \nclosely, I would have noticed the error is that \"log4j.dtd\" in the XML \nconfiguration file is not a valid URL.", "id": 22377, "time": "2002-09-06T17:34:21Z", "creator": "derrick.koes@smith-nephew.com", "creation_time": "2002-09-06T17:34:21Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 12366, "text": "I have also noted this problem and have looked at the code.\n\nWhat the log4j code does is looks for the log4j.dtd file as a resource in the \nlog4j.jar file and finds it. It then sets the system id on the input source for \nthe log4j.xml file to be the url of the resource thus overiding the dtd from \nthe document.\n\nWhat happens in xerces2.1 is that it seems to ignore the system id dtd set in \nthe input source and try to load the dtd using the dtd specified in the \ndocument. Therefore it tries to load the dtd using the log4j.dtd from the file \nsystem as a url which causes the error.\n\nShould this be raised as a bug for xerces?\n\nI would also like to see a fix for this.\n\nThanks,\nPaul", "count": 2, "id": 22752, "time": "2002-09-12T18:09:42Z", "creator": "paul@austin.name", "creation_time": "2002-09-12T18:09:42Z", "is_private": false}, {"count": 3, "tags": [], "text": "Which version of Tomcat were you using?", "attachment_id": null, "bug_id": 12366, "id": 24164, "time": "2002-10-08T23:11:54Z", "creator": "ceki@apache.org", "creation_time": "2002-10-08T23:11:54Z", "is_private": false}, {"count": 4, "tags": [], "text": "This is also a problem with Xerces 2.2.1.\nIt seems only to happen when the path has spaces in it for me. \n\nThere is an alternative which does work with Xerces 2.2.1 which is to use an\nEntity resolver.\n\nWhen setting up the doc builder call:\ndocbuilder.setEntityResolver(new XMLEntityResolver(DOCTYPE_PUBLICID,\n\"/path/to/log4j.dtd\"));\n\nThe XMLEntityResolver class looks like this:\npublic class XMLEntityResolver implements EntityResolver {\n    \n    String m_dtdId;\n    String m_dtdResource;\n    \n    /**\n     * Construct a new XMLEntityResolver\n     * @param id the public Id that this entity resolver will match\n     * @paramm resource the path to the resource to load the DTD from\n     */\n    public XMLEntityResolver(String id, String resource) {\n        m_dtdId = id;\n        m_dtdResource = resource;\n    }\n    \n    public InputSource resolveEntity(String publicId, String systemId) throws\nSAXException, IOException {\n        if (publicId == null) {return null; }\n        if ( publicId.equals(m_dtdId) ) {\n            InputStream input = this.getClass().getResourceAsStream(m_dtdResource);\n            InputSource isrc = new InputSource(input);\n            return isrc;\n        } else {\n            return null;\n        }\n    }\n    \n}\n\nHTH\nAndi.", "attachment_id": null, "bug_id": 12366, "id": 29626, "time": "2003-01-17T18:30:43Z", "creator": "Andrew.Everitt@gbr.xerox.com", "creation_time": "2003-01-17T18:30:43Z", "is_private": false}, {"count": 5, "tags": [], "creator": "hoju@visi.com", "attachment_id": null, "id": 29628, "time": "2003-01-17T18:45:28Z", "bug_id": 12366, "creation_time": "2003-01-17T18:45:28Z", "is_private": false, "text": "Check out the latest CVS for DOMConfigurator.  It *is* using an entity \nresolver.  I think Log4j-1.2.8 should be released because it both fixes a \nlog4j.jar locking problem when Tomcat's ant manager tasks are used to \ninstall/remove a WAR structure.  With the stock 1.2.7, after Tomcat \"remove\", a \nclean will fail to delete the directory that was previously deployed because \nTomcat will still old a lock on the log4j.jar in WEB-INF/lib.  With the recent \nchanges, this is solved.  I'm not positive the changes solve this bug, but \nmaybe you can try the latest CVS and test it out.  If it does solve it, I think \nthat is pretty good reason to get out a 1.2.8 release ASAP.\n\nJake"}, {"count": 6, "tags": [], "creator": "ceki@apache.org", "text": "\nThis has apparently caused Jboss folks trouble as well:\n\nhttps://sourceforge.net/tracker/?\nfunc=detail&atid=376685&aid=669112&group_id=22866", "id": 30193, "time": "2003-01-28T19:09:08Z", "bug_id": 12366, "creation_time": "2003-01-28T19:09:08Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "sachsee@hsn.net", "text": "I am getting this bug with Xerces 2.3.0 under IBM's Visual Age Java 3.5.  I am \nusing Log4J 1.2.4\n\nI am passing this in at the command line:  \n-Dlog4j.configuration=file:/C:/myLogConfig.xml\n\nlog4j:ERROR Could not parse input source [org.xml.sax.InputSource@4ef3].\njava.io.FileNotFoundException: /C:/Program%20Files/IBM/VisualAge%20for%\n20Java/ide/project_resources/Jakarta%20Log4J/org/apache/log4j/xml/log4j.dtd\n\tjava.lang.Throwable(java.lang.String)\n\tjava.lang.Exception(java.lang.String)\n\tjava.io.IOException(java.lang.String)\n\tjava.io.FileNotFoundException(java.lang.String)\n\tjava.net.URLConnection \ncom.ibm.uvm.net.www.protocol.valoader.Handler.openConnection(java.net.URL)\n\tjava.net.URLConnection java.net.URL.openConnection()\n\tjava.io.InputStream java.net.URL.openStream()\n\tjava.lang.String \norg.apache.xerces.impl.XMLEntityManager.setupCurrentEntity(java.lang.String, \norg.apache.xerces.xni.parser.XMLInputSource, boolean, boolean)\n\tvoid org.apache.xerces.impl.XMLEntityManager.startEntity\n(java.lang.String, org.apache.xerces.xni.parser.XMLInputSource, boolean, \nboolean)\n\tvoid org.apache.xerces.impl.XMLEntityManager.startDTDEntity\n(org.apache.xerces.xni.parser.XMLInputSource)\n\tvoid org.apache.xerces.impl.XMLDTDScannerImpl.setInputSource\n(org.apache.xerces.xni.parser.XMLInputSource)\n\tboolean \norg.apache.xerces.impl.XMLDocumentScannerImpl$DTDDispatcher.dispatch(boolean)\n\tboolean \norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(boolean)\n\tboolean org.apache.xerces.parsers.DTDConfiguration.parse(boolean)\n\tvoid org.apache.xerces.parsers.DTDConfiguration.parse\n(org.apache.xerces.xni.parser.XMLInputSource)\n\tvoid org.apache.xerces.parsers.XMLParser.parse\n(org.apache.xerces.xni.parser.XMLInputSource)\n\tvoid org.apache.xerces.parsers.DOMParser.parse(org.xml.sax.InputSource)\n\torg.w3c.dom.Document org.apache.xerces.jaxp.DocumentBuilderImpl.parse\n(org.xml.sax.InputSource)\n\tvoid org.apache.log4j.xml.DOMConfigurator.doConfigure\n(org.xml.sax.InputSource, org.apache.log4j.spi.LoggerRepository)\n\tvoid org.apache.log4j.xml.DOMConfigurator.doConfigure\n(java.io.InputStream, org.apache.log4j.spi.LoggerRepository)\n\tvoid org.apache.log4j.xml.DOMConfigurator.doConfigure(java.net.URL, \norg.apache.log4j.spi.LoggerRepository)\n\tvoid org.apache.log4j.helpers.OptionConverter.selectAndConfigure\n(java.net.URL, java.lang.String, org.apache.log4j.spi.LoggerRepository)\n\torg.apache.log4j.Logger org.apache.log4j.Logger.getLogger\n(java.lang.String, org.apache.log4j.spi.LoggerFactory)\n\torg.apache.log4j.Logger org.apache.log4j.Logger.getLogger\n(java.lang.String, org.apache.log4j.spi.LoggerFactory)\n\torg.apache.log4j.Logger net.hsn.clic.util.ClicCategory.getLogger\n(java.lang.String)\n\tnet.hsn.clic.util.ClicCategory net.hsn.clic.util.ClicCategory.getAppLog\n(java.lang.String)\n\tnet.hsn.clic.util.ClicCategory net.hsn.clic.util.ClicCategory.getAppLog\n(java.lang.Class)\n\n", "id": 31307, "time": "2003-02-14T18:51:44Z", "bug_id": 12366, "creation_time": "2003-02-14T18:51:44Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 12366, "attachment_id": null, "text": "Hi Eric,\n\nTry using the log4j jar file I am linking to below.  It is log4j-1.2.7 + the \nmodified entity resolver stuff I mentioned in my previous comment.  If that \nfixes the problem, I really think we should release log4j-1.2.8 soon.\n\nhttp://barracudamvc.org/cvs/Barracuda/WEB-INF/lib-cvs/log4j-1.2.7a.jar\n\nJake", "id": 31311, "time": "2003-02-14T20:00:52Z", "creator": "hoju@visi.com", "creation_time": "2003-02-14T20:00:52Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 12366, "text": "Jake\n\nThe 1.2.7a jar file worked with my unit tests.  I want to run some extensive \nregression tests before I release this to my other developers and ultimately to \nmy production system, but this looks like a resolution for my issues.\n\nI cannot wait for the 1.2.8 release.\n\nThanks", "count": 9, "id": 31314, "time": "2003-02-14T20:39:48Z", "creator": "sachsee@hsn.net", "creation_time": "2003-02-14T20:39:48Z", "is_private": false}, {"count": 10, "tags": [], "text": "Very cool!\n\nCeki, is it possible to release log4j-1.2.8 sometime soon?  Once it is \nreleased, this bug can be resolved as fixed.\n\nJake", "attachment_id": null, "id": 31317, "creation_time": "2003-02-14T22:00:15Z", "time": "2003-02-14T22:00:15Z", "creator": "hoju@visi.com", "bug_id": 12366, "is_private": false}, {"count": 11, "tags": [], "creator": "ceki@apache.org", "text": "\nAs much as I would like to stop making 1.2 based releases, it might well be \nnecessary. I'll look into this on monday.\n", "id": 31338, "time": "2003-02-15T14:21:10Z", "bug_id": 12366, "creation_time": "2003-02-15T14:21:10Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "ceki@apache.org", "text": "\nFixed in 1.2.8.", "id": 31540, "time": "2003-02-18T17:43:39Z", "bug_id": 12366, "creation_time": "2003-02-18T17:43:39Z", "is_private": false, "attachment_id": null}]