[{"count": 0, "text": "the javac task on being run with my project is giving an exception in ant which in turn mentions an \nexception from teh javac. However when I pick the exact javac options from the debug output and ran \non command line - it works fine.\n\nAlso I observer that this occurs always while one particular \nfile in my project , which from command prompt compiles fine. the version of ant and java are \n:\n\nAnt version 1.4.1 compiled on October 11 2001\n\njava version \"1.3.1\"\nJava(TM) 2 \nRuntime Environment, Standard Edition (build 1.3.1-b24)\n\nI am including the relevant part of \nthe debug output below:\n\n    [javac] An exception has occurred in the compiler (1.3.0). Please \nfile a bug at the Java Developer Connection (http\nrt.cgi).  Include your program and the \nfollowing diagnostic in your report.  Thank you.\n    [javac] java.lang.InternalError: \nassertion failed\n    [javac]     at com.sun.tools.javac.v8.util.Util.assert(Util.java:25)\n    \n[javac]     at com.sun.tools.javac.v8.util.Bits.incl(Bits.java:65)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.checkInit(Flow.java:184)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:843)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$Ident.visit(Tree.java:983)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeExpr(Flow.java:339)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:829)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$TypeCast.visit(Tree.java:904)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeExpr(Flow.java:339)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:848)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$Select.visit(Tree.java:963)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeExpr(Flow.java:339)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:744)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$Apply.visit(Tree.java:785)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeExpr(Flow.java:339)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:733)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$Return.visit(Tree.java:751)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeStat(Flow.java:394)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeStats(Flow.java:413)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:520)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$Block.visit(Tree.java:492)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeStat(Flow.java:394)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:488)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$MethodDef.visit(Tree.java:441)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeDef(Flow.java:379)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:456)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$ClassDef.visit(Tree.java:402)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeDef(Flow.java:379)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:756)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$NewClass.visit(Tree.java:810)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeExpr(Flow.java:339)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:733)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$Return.visit(Tree.java:751)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeStat(Flow.java:394)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeStats(Flow.java:413)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:520)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$Block.visit(Tree.java:492)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeStat(Flow.java:394)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:488)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$MethodDef.visit(Tree.java:441)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeDef(Flow.java:379)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:456)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$ClassDef.visit(Tree.java:402)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeDef(Flow.java:379)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:756)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$NewClass.visit(Tree.java:810)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeExpr(Flow.java:339)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:507)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$VarDef.visit(Tree.java:470)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeDef(Flow.java:379)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow._case(Flow.java:445)\n    [javac]     at \ncom.sun.tools.javac.v8.tree.Tree$ClassDef.visit(Tree.java:402)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyze(Flow.java:321)\n    [javac]     at \ncom.sun.tools.javac.v8.comp.Flow.analyzeDef(Flow.java:379)\n    [javac]     at \ncom.sun.tools.javac.v8.JavaCompiler.compile(JavaCompiler.java:380)\n    [javac]     at \ncom.sun.tools.javac.v8.Main.compile(Main.java:247)\n    [javac]     at \ncom.sun.tools.javac.Main.compile(Main.java:26)\n    [javac]     at \njava.lang.reflect.Method.invoke(Native Method)\n    [javac]     at \norg.apache.tools.ant.taskdefs.compilers.Javac13.execute(Javac13.java:92)\n    [javac]     \nat org.apache.tools.ant.taskdefs.Javac.execute(Javac.java:557)\n    [javac]     at \norg.apache.tools.ant.Task.perform(Task.java:217)\n    [javac]     at \norg.apache.tools.ant.Target.execute(Target.java:184)\n    [javac]     at \norg.apache.tools.ant.Target.performTasks(Target.java:202)\n    [javac]     at \norg.apache.tools.ant.Project.executeTarget(Project.java:601)\n    [javac]     at \norg.apache.tools.ant.Project.executeTargets(Project.java:560)\n    [javac]     at \norg.apache.tools.ant.Main.runBuild(Main.java:454)\n    [javac]     at \norg.apache.tools.ant.Main.start(Main.java:153)\n    [javac]     at \norg.apache.tools.ant.Main.main(Main.java:176)\n\nBUILD FAILED", "bug_id": 6679, "is_private": false, "id": 11161, "time": "2002-02-26T13:16:20Z", "creator": "prashant_chaudhari@yahoo.com", "creation_time": "2002-02-26T13:16:20Z", "tags": [], "attachment_id": null}, {"count": 1, "text": "what happens when you set fork=true in javac?", "bug_id": 6679, "is_private": false, "id": 11168, "time": "2002-02-26T18:43:37Z", "creator": "steve_l@iseran.com", "creation_time": "2002-02-26T18:43:37Z", "tags": [], "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 6679, "is_private": false, "count": 2, "id": 11198, "time": "2002-02-27T06:03:10Z", "creator": "prashant_chaudhari@yahoo.com", "creation_time": "2002-02-27T06:03:10Z", "text": "Absolutely no difference with fork=\"true\". \nAlso I tried compiling ONLY the suspect file and \nthe file next to it with ant each separately and they compile fine - if thats of any help."}, {"count": 3, "tags": [], "creator": "prashant_chaudhari@yahoo.com", "attachment_id": null, "id": 12109, "time": "2002-03-21T06:08:23Z", "bug_id": 6679, "creation_time": "2002-03-21T06:08:23Z", "is_private": false, "text": "The bug happens to be actually a bug with the javac version. The same was \neliminated when I replaced the jdk1.3 with next version of java (1.3.1_02). \n\nThanks and Regards\n\nPrashant Chaudhari"}]