[{"count": 0, "text": "Set each cell encoding to ENCODING_UTF_16.\nWrite 6 cells in a row.  The 2nd, 3rd, 4th and 5th cells have long strings \n(9000 characters).  The 1st and last are very short.\nTry to open the generated excel, got \"Not Enough Memory\" or \"Corrupted file\".\nSee attached program.\nHowever, the file will be fine with out the last cell (Comment out line 40 of \nthe attached file) or without the encoding.\n\nimport java.io.FileOutputStream;\n\nimport org.apache.poi.hssf.usermodel.HSSFCell;\nimport org.apache.poi.hssf.usermodel.HSSFCellStyle;\nimport org.apache.poi.hssf.usermodel.HSSFFont;\nimport org.apache.poi.hssf.usermodel.HSSFRow;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.hssf.util.HSSFColor;\n \npublic class PoiTest \n{\n\tprivate int longStringSize = 9000;\n\t\n\tpublic static void main(String[] args) \n\t{\n\t\tPoiTest pt = new PoiTest();\n\t\tpt.writeExcel();\n\t}\n\n    public PoiTest() {\n    }\n    \n\tpublic void writeExcel(){\n\t\ttry {\n\t    HSSFWorkbook wb = new HSSFWorkbook();\n\t    HSSFSheet sheet = wb.createSheet(\"new sheet\");\n\t\n\t    // Create a row and put some cells in it. Rows are 0 based.\n\t    HSSFRow row = sheet.createRow((short)0);\n\t    // Create a cell and put a value in it.\n\t    \n\t    String longString = createLongString();\n\t    \n\t    createCellWithString(row, 0, \"1\");\n\t    createCellWithString(row, 1, longString);\n\t    createCellWithString(row, 2, longString);\n\t    createCellWithString(row, 3, longString);\n\t    createCellWithString(row, 4, longString);\n\t    createCellWithString(row, 5, \"end\");\n\t    \n\t    // Write the output to a file\n\t    FileOutputStream fileOut = new FileOutputStream(\"workbook.xls\");\n\t    wb.write(fileOut);\n\t    fileOut.close();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\t\n\tprivate void createCellWithString(HSSFRow row,\n\t    int cellId, String cellStr) {\n\t    HSSFCell cell = row.createCell((short) cellId);\n\t    cell.setEncoding(HSSFCell.ENCODING_UTF_16);\n\t    cell.setCellValue(cellStr);\n\t}\n\t\n\tprivate String createLongString() {\n\t\tStringBuffer sb = new StringBuffer();\n\t\tfor (int i=0; i<longStringSize; i++) {\n\t\t\tsb.append('a');\n\t\t}\n\t\tsb.append(longStringSize);\n\t\treturn sb.toString();\n\t}", "creator": "vgeng@ariba.com", "attachment_id": null, "id": 37454, "time": "2003-05-19T22:05:38Z", "bug_id": 20045, "creation_time": "2003-05-19T22:05:38Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 20045, "attachment_id": null, "is_private": false, "id": 39755, "time": "2003-07-01T15:01:32Z", "creator": "avik@apache.org", "creation_time": "2003-07-01T15:01:32Z", "text": "\n\n*** This bug has been marked as a duplicate of 19974 ***"}]