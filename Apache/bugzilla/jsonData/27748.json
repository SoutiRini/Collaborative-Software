[{"count": 0, "tags": [], "bug_id": 27748, "attachment_id": null, "id": 54166, "time": "2004-03-17T16:36:13Z", "creator": "leumas@solv.com", "creation_time": "2004-03-17T16:36:13Z", "is_private": false, "text": "Over time (a few days, with an average of 350k hits of which 25k are authed with\nauth_ldap) it will stop authenticating random users, with the error:\n\n[Wed Mar 17 08:40:51 2004] [warn] [client 147.178.68.203] [26904] auth_ldap\nauthenticate: user {username} authentication failed; URI {path} [User not\nfound][No such object]\n\nIt does this in the middle of a functional session (i.e. the user was logged in,\nclicking around and suddenly pop, no access).  The 'fix' is to restart the\nwebserver.  I presume this is a cacheing issue.  We are running 2.0.49rc1"}, {"count": 1, "tags": [], "bug_id": 27748, "attachment_id": null, "id": 54679, "time": "2004-03-25T20:23:21Z", "creator": "leumas@solv.com", "creation_time": "2004-03-25T20:23:21Z", "is_private": false, "text": "This is linked against OpenLDAP stable 2.1.25.  Is there a way to perhaps turn\noff the cache, to see if that is what is causing the problem?  I have written a\nperl script that watches the log for this error and immediately cross-checks\nLDAP for the user, if the user exists it restarts Apache.  We are seeing about\n30 restarts a day."}, {"count": 2, "tags": [], "bug_id": 27748, "attachment_id": 11078, "is_private": false, "id": 54988, "time": "2004-03-31T18:36:52Z", "creator": "leumas@solv.com", "creation_time": "2004-03-31T18:36:52Z", "text": "Created attachment 11078\nfix for ldap rebinding failures"}, {"count": 3, "tags": [], "bug_id": 27748, "attachment_id": null, "is_private": false, "id": 54989, "time": "2004-03-31T18:39:31Z", "creator": "leumas@solv.com", "creation_time": "2004-03-31T18:39:31Z", "text": "The problem is in the poor way the ldap session is managed (which could cause\nother severe problems, if individual users cannot browse the tree, and it should\nbe re-considered).  Kurt Olsen has found this problem and come up with a quick\nfix (see patch).  Note: this also relates to bug# 17274.  Kurt's description:\n\n--------------\nIn the file util_ldap.c, in the function util_ldap_cache_checkuserid, when a\nuser tries to authenticate the module takes these steps:\n\n1) check the cache, returning success or failure if results cached.\n2) open a connection via the function util_ldap_connection_open, using the ldc\nstruct.\n   if ldc->bound = 1, then don't do anything in util_ldap_connection_open.\n3) do a search to validate, and locate the dn for, the username provided.\n4) verify that there is only 1 result of the search in #3.\n5) verify that the password is non empty.\n6) rebind with the dn found in step 3 with the password provided, using the ldc\nstruct.\n   if there is a failure then return failure status.\n   on success update cache and return success status.\n\nThe problem is that the ldc used in #6 is the same ldc used to lookup a user's\ndn in the tree.  So if the password is incorrect then the ldap_simple_bind_s\nused to verify the password will have screwed up the ldc->ldap binding.\nThe next time this ldc struct is used, the ldc->bound value is set to 1, but\nthe actual valid bind has been hosed. One simple fix is to add an \"ldc->bound = 0;\"\ninto the two tests for failure after the ldap_simple_bind_s. This causes\nthe util_ldap_connection_open to re-bind with the proper DN prior to looking\nup users.\n\nEven in the case where the users are logging in correctly, there is still\nthe problem that when user A authenticates the ldc->ldap bind is now bound\nwith his username and password. If user A doesn't have rights to search the\ntree, then when user B comes along at a later point in time the search for\nuser B's dn in the tree will fail. The correct fix would be to create an\nutil_ldap_connection_t *foo; that would be used for testing provided passwords,\nbut would not have an impact on the ldc struct used for searching and what not.\n\nKurt Olsen"}, {"count": 4, "tags": [], "bug_id": 27748, "attachment_id": null, "id": 55245, "time": "2004-04-03T22:41:57Z", "creator": "nd@perlig.de", "creation_time": "2004-04-03T22:41:57Z", "is_private": false, "text": "Not fixed in the code yet...\nadding Patchavailable keyword."}, {"count": 5, "tags": [], "bug_id": 27748, "attachment_id": null, "id": 55863, "time": "2004-04-15T21:36:46Z", "creator": "olsenk@iomega.com", "creation_time": "2004-04-15T21:36:46Z", "is_private": false, "text": "Additional bugs with this issue and some of them also have fixes:\n\n17274\n17599\n18661\n21787\n24595\n24683 (probably, commentary is old)\n27134\n27271\n\nAnd\n\n28413 may be the same thing, but it's not really clear except that they\nexperience failures against AD.\n\nI think that the comment that a connection should be marked as unbound after any\nuser bind is the proper solution. The patch included in this report only marks\nunbound upon auth failures. Adding an ldc->bound = 0; at line 847 in util_ldap.c\n(release 2.0.49) should fix both issues I have addressed in my re-explanation of\nthe problem."}, {"count": 6, "tags": [], "creator": "minfrin@sharp.fm", "attachment_id": null, "text": "The attached patch has been committed to v2.1.0-dev, and is included against\nv2.0.49.\n\nPlease test and tell me whether this fixes the problem.\n", "id": 57739, "time": "2004-05-20T22:37:01Z", "bug_id": 27748, "creation_time": "2004-05-20T22:37:01Z", "is_private": false}, {"count": 7, "tags": [], "creator": "minfrin@sharp.fm", "attachment_id": 11618, "text": "Created attachment 11618\nRollup of LDAP fixes to v2.1.0 against v2.0.49", "id": 57740, "time": "2004-05-20T22:47:43Z", "bug_id": 27748, "creation_time": "2004-05-20T22:47:43Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 27748, "attachment_id": null, "id": 57741, "time": "2004-05-20T22:49:08Z", "creator": "minfrin@sharp.fm", "creation_time": "2004-05-20T22:49:08Z", "is_private": false, "text": "The attachment includes bnicholes fix:\n\n    *) mod_ldap calls ldap_simple_bind_s() to validate the user\n       credentials.  If the bind fails, the connection is left\n       in an unbound state.  Make sure that the ldap connection\n       record is updated to show that the connection is no longer\n       bound.\n"}, {"count": 9, "tags": [], "creator": "minfrin@sharp.fm", "attachment_id": null, "text": "*** Bug 25764 has been marked as a duplicate of this bug. ***", "id": 57765, "time": "2004-05-21T01:17:11Z", "bug_id": 27748, "creation_time": "2004-05-21T01:17:11Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 27748, "attachment_id": null, "id": 57800, "time": "2004-05-21T14:20:10Z", "creator": "minfrin@sharp.fm", "creation_time": "2004-05-21T14:20:10Z", "is_private": false, "text": "*** Bug 17599 has been marked as a duplicate of this bug. ***"}, {"count": 11, "tags": [], "bug_id": 27748, "attachment_id": null, "is_private": false, "id": 57805, "time": "2004-05-21T14:49:38Z", "creator": "minfrin@sharp.fm", "creation_time": "2004-05-21T14:49:38Z", "text": "*** Bug 21787 has been marked as a duplicate of this bug. ***"}, {"count": 12, "tags": [], "bug_id": 27748, "attachment_id": null, "text": "*** Bug 24595 has been marked as a duplicate of this bug. ***", "id": 57807, "time": "2004-05-21T14:50:08Z", "creator": "minfrin@sharp.fm", "creation_time": "2004-05-21T14:50:08Z", "is_private": false}, {"count": 13, "tags": [], "text": "*** Bug 27134 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 27748, "id": 57816, "time": "2004-05-21T15:30:29Z", "creator": "minfrin@sharp.fm", "creation_time": "2004-05-21T15:30:29Z", "attachment_id": null}, {"count": 14, "tags": [], "creator": "minfrin@sharp.fm", "attachment_id": null, "text": "*** Bug 24683 has been marked as a duplicate of this bug. ***", "id": 57824, "time": "2004-05-21T15:51:29Z", "bug_id": 27748, "creation_time": "2004-05-21T15:51:29Z", "is_private": false}, {"count": 15, "tags": [], "text": "*** Bug 18661 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 27748, "id": 57842, "time": "2004-05-21T16:58:11Z", "creator": "minfrin@sharp.fm", "creation_time": "2004-05-21T16:58:11Z", "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 27748, "attachment_id": null, "is_private": false, "id": 57882, "time": "2004-05-21T23:18:46Z", "creator": "minfrin@sharp.fm", "creation_time": "2004-05-21T23:18:46Z", "text": "Fixed in v2.0.50-dev."}, {"count": 17, "tags": [], "creator": "atlunde@panix.com", "attachment_id": null, "text": "I repeated my test set-up that I'd been using under bug 27134, with the roll-up\npatch 11618 from bug 27748. This was on Red Hat Linux 9.0, building Apache from\npatched 2.0.49 sources (not Red Hat sources)\n\nThis uses two test data sets with 11 valid username/password pairs and some\npseudo-random failures. One data set walks through the usernames in nearly\nserial order (because this will tend to show the worst-case usage of the\nconnection pool). This makes 103 requests. The other data set uses a more random\nseries of usernames. This makes 804 requests.\n\nThe results look good.\n\nI'm now getting no unexpected authentication results, and socket usage looks\nsimilar to Denis Gervalle's previous patch.\n\nI still have the warning \"LDAP cache: Unable to init \nShared Cache: no file\", but I suppose that's a different issue.\n\nI did the tests first with the default settings of\n\nStartServers         5\nMinSpareServers      5\nMaxSpareServers     10\nMaxClients         150\nMaxRequestsPerChild  0\n\nFor comparison, I set up a low process number test with:\n\nStartServers         1\nMinSpareServers      1\nMaxSpareServers     1\nMaxClients         150\nMaxRequestsPerChild  0\n\nand high process number test with:\n\nStartServers         10\nMinSpareServers      10\nMaxSpareServers     20\nMaxClients         150\nMaxRequestsPerChild  0\n\nAll the tests give correct results (authentication works or fails as expected).\n\nI looked at sockets in use with \"netstat -an\" on the LDAP server.\n\nWith the default prefork process config:\nthe serial data set left 9 sockets to the LDAP server in use at the end;\nthe random data set left 4 sockets in use at the end\n\nWith the \"low process\" config:\nthe serial data set left 1 socket in use at the end;\nthe random data set left 0 sockets in use at the end\n\nWith the \"high process\" config\nthe serial data set left 14 sockets in use at the end;\nthe random data set left 11 sockets in use at the end;\n\nI'm guessing that if I could get rid of the \"Unable to init \nShared Cache\" warning I'd get results more like the \"low\nprocess\" config. Can anyone suggest another fix/bug that\napplies to that issue?\n", "id": 57988, "time": "2004-05-24T20:43:36Z", "bug_id": 27748, "creation_time": "2004-05-24T20:43:36Z", "is_private": false}]