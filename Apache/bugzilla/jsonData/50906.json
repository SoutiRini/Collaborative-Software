[{"count": 0, "tags": [], "text": "I'm using Tomcat 7.0.8 on Ubuntu 10.10.\n\nWhen using the APR based Tomcat Native Library (libtcnative), responses from Tomcat are being sent with a chunked encoding, but the \"0\" terminating the chunked response isn't sent until exactly 1 minute later.\n\nThe response is being written to an org.apache.catalina.connector.CoyoteOutputStream. The following calls are made:\nout.write(resp);\nout.flush();\nout.close();\n\nIf I just remove the libtcnative-1.so, so that Tomcat loads without using it, then the response still uses chunked encoding, but the terminating \"0\" is sent immediately, with the rest of the response.", "attachment_id": null, "bug_id": 50906, "id": 144890, "time": "2011-03-09T17:13:43Z", "creator": "chris@blaze.io", "creation_time": "2011-03-09T17:13:43Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 50906, "attachment_id": null, "id": 144919, "time": "2011-03-10T12:50:01Z", "creator": "chris@blaze.io", "creation_time": "2011-03-10T12:50:01Z", "is_private": false, "text": "I'm including some additional info that I'd posted to the mailing list:\n\n- I'm running with nginx in front of tomcat\n- The 60 second timeout is happening in nginx and not tomcat\n- Regardless of whether or not I'm using libtcnative, I don't see the terminating \"0\\r\\n\\r\\n\" being sent by tomcat to nginx\n- When not using libtcnative, the connection is closed after writing the response; there's a FIN, in addition to ACK on the last TCP packet from tomcat. Nginx seems to use this to infer the end of the response and add the \"0\\r\\n\\r\\n\" to the reply sent to the client.\n- When using libtcnative, there is no FIN on the last TCP ACK packet, and the connection stays open. One minute later nginx times out waiting for the response to complete and adds the \"0\\r\\n\\r\\n\" to the response to the client.\n- I notice that if I use curl to make a request directly to tomcat (instead of going through nginx), then I do see the terminating \"0\\r\\n\\r\\n\". I still see a difference in that tomcat disconnects immediately after the reply when not using the native library.\n\nLater I said...:\nI've narrowed this down even further.\n\n As I mentioned below, the \"0\\r\\n\\r\\n\" was not being sent to nginx, although it was being sent to curl. The difference was that nginx was doing a GET HTTP/1.0, while curl was using HTTP/1.1. If I configure curl to use HTTP/1.0 then I get the same result: no \"0\\r\\n\\r\\n\" is sent.\n\nSo, to summarize:\n- GET HTTP/1.0 results in no terminating \"0\\r\\n\\r\\n\" for the chunked response, regardless of whether libtcnative is being used.\n- The difference when using libtcnative is that the connection isn't terminated after the response is sent."}, {"count": 2, "tags": [], "text": "I have done some testing and I can't reproduce this. You'll need to provide the simplest possible web application (ideally a single Servlet) that demonstrates Tomcat sending chunked responses for an HTTP 1.0 request. Please include the source code.\n\nWithout a test case that demonstrates this bug, it will get resolved as WORKSFORME.", "attachment_id": null, "id": 144976, "creator": "markt@apache.org", "time": "2011-03-13T15:04:02Z", "bug_id": 50906, "creation_time": "2011-03-13T15:04:02Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 50906, "attachment_id": null, "id": 144977, "time": "2011-03-13T20:31:09Z", "creator": "chris@blaze.io", "creation_time": "2011-03-13T20:31:09Z", "is_private": false, "text": "After upgrading to 7.0.11 I'm no longer seeing the problem. This seems to be the relevant changelog entry:\n\n\"Fix issues that prevented asynchronous servlets from working when used with the HTTP APR connector on platforms that support TCP_DEFER_ACCEPT. (markt)\"\n\nThe fact that the servlet was doing async processing was probably an important fact that I neglected to mention earlier."}]