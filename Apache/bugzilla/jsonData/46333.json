[{"count": 0, "attachment_id": null, "creator": "gm@ulmail.net", "text": "I've seen recently something like\n\nListen ${PORT}\n\nin a httpd.conf.\n\nBut i'm unable to find the documentation for the variable interpolation.\nI think env.html or configuring.html is a good place for that.", "id": 123051, "time": "2008-12-03T10:24:34Z", "bug_id": 46333, "creation_time": "2008-12-03T10:24:34Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "creator": "rpluem@apache.org", "is_private": false, "id": 123057, "time": "2008-12-03T11:55:39Z", "bug_id": 46333, "creation_time": "2008-12-03T11:55:39Z", "tags": [], "text": "You haven't found it in the documentation because this is no feature of httpd. Maybe this is possible with 3rd party modules like mod_macro."}, {"count": 2, "tags": [], "bug_id": 46333, "is_private": false, "text": "Hi R\u00fcdiger,\n\nI think the op means the environment variable interpolation in config. If you have a shell environment variable XX and use ${XX} in the config, httpd resolves it. You can find that in server/util.c:\n\n/* Check a string for any ${ENV} environment variable\n * construct and replace each them by the value of\n * that environment variable, if it exists. If the\n * environment value does not exist, leave the ${ENV}\n * construct alone; it means something else.\n */\nAP_DECLARE(const char *) ap_resolve_env(apr_pool_t *p, const char * word)\n\nmod_define allows you to set variables inside httpd config, but if you simply want to use external env vars, that's build in.\n\nTo the original reporter: do you have a documentation patch?", "id": 123061, "time": "2008-12-03T13:49:56Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-12-03T13:49:56Z", "attachment_id": null}, {"count": 3, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "text": "What about this:\n\nIndex: configuring.xml\n===================================================================\n--- configuring.xml     (revision 723103)\n+++ configuring.xml     (working copy)\n@@ -77,6 +77,9 @@\n     and white space occurring before a directive are ignored, so\n     you may indent directives for clarity.</p>\n\n+    <p>Shell environment variables can be used in arguments\n+    using the syntax <code>${MYVAR}</code>.</p>\n+\n     <p>You can check your configuration files for syntax errors\n     without starting the server by using <code>apachectl\n     configtest</code> or the <code>-t</code> command line\n", "id": 123064, "time": "2008-12-03T14:38:00Z", "bug_id": 46333, "creation_time": "2008-12-03T14:38:00Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 46333, "text": "That's what i've meant. The patch looks fine to me. Thank you.", "id": 123069, "time": "2008-12-04T01:01:41Z", "creator": "gm@ulmail.net", "creation_time": "2008-12-04T01:01:41Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 46333, "is_private": false, "text": "I just spent a while trying to find documentation for this functionality, too.  I was surprised to discover that it has been available since version 2.0a2 (according to e.g.\nhttp://svn.apache.org/viewvc/httpd/httpd/branches/2.0.x/CHANGES?revision=87174&view=co\n), but still doesn't seem to be mentioned or explained in the httpd v2.2 or 2.3 documentation anywhere.\n\nI see that since this bug was filed, the configuring.xml file has been updated to include a mention of the line-length limit:\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=45888\n\nPerhaps something like the following could be added as well (replacing that new paragraph with the following slightly modified one):\n\n    <p>The values of shell environment variables can be used in configuration\n    file lines using the syntax <code>${ENVVAR}</code>.  If \"ENVVAR\" is\n    the name of a valid environment variable, the value of that\n    variable is substituted into that spot on the configuration file line,\n    and processing continues as if that text were found directly in the \n    configuration file.  (If the ENVVAR variable is not found, the characters\n    \"${ENVVAR}\" are left unchanged for use by later stages in the config \n    file processing.)</p>\n\n    <p>The maximum length of a line in the configuration file,\n    after environment-variable substitution, joining any continued\n    lines, and removing leading and trailing white space, is 8192\n    characters.</p>", "id": 132913, "time": "2009-12-17T10:17:45Z", "creator": "apachebugs@nathanst.com", "creation_time": "2009-12-17T10:17:45Z", "attachment_id": null}, {"count": 6, "attachment_id": null, "creator": "poirier@pobox.com", "is_private": false, "id": 132934, "time": "2009-12-18T07:49:02Z", "bug_id": 46333, "creation_time": "2009-12-18T07:49:02Z", "tags": [], "text": "I never knew you could do that, and it looks handy.\n\nThanks for the doc patch.  Committed to trunk in r892280\nand 2.2.x in r892282."}]