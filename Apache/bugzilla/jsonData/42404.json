[{"count": 0, "tags": [], "creator": "software+apache-httpd@kd6lvw.ampr.org", "attachment_id": null, "is_private": false, "id": 103148, "time": "2007-05-13T12:32:20Z", "bug_id": 42404, "creation_time": "2007-05-13T12:32:20Z", "text": "I'm not certain whether what I'm reporting is actually a bug, a feature \nrequest, or both.  Therefore, I've submit it as a low priority enhancement.\n\nNormally, Apache has the ability to return the filename for a local resource \nvia PHP's apache_lookup_uri() function call.  When Apache is acting as a proxy \nserver, there is no local filename for remote URLs.  However, there may be a \nlocal file created should mod_disk_cache capture and hold a working copy of a \nproxied resource (should it be told to do so via the configuration file).  \nTherefore, if a local filename is available, I question whether it should be \nreturned.  Currently, the function returns \"proxy:REMOTE_URL\" for all proxied \nrequests, not a local filename from the disk cache.  I would like a local \nfilename returned if one is available.\n\nWhat I'm trying to do:  I'm trying to return certain information from my \nserver's disk cache about proxied resources, such as when they were last \nupdated (i.e. fetched), last accessed, etc.  This information is available from \nfilesystem calls for the file in the cache holding the data portion of the \nURL.  Sometimes, some but not all of the information is available in the cached \nHTTP headers.  The PHP code I've wrote is:\n\n$URL is the disk-cached, proxied URL to retrieve information about.\n\n    $QS = (strstr($URL, \"?\") == FALSE) ? \"?\" : \"\";    /* FOOTNOTE */\n    $parse = get_object_vars(apache_lookup_uri(\"/cache?\".$URL.$QS));\n    $file = $parse['filename'];\n\n$file should be a local filename for a local file, but seems to \nbe \"proxy:REMOTE_URL\" for all proxied resources.  I'd like this to be the file \npathname from the local disk cache if such is available.  This way, I could \nreport the created, last-modified, and last-accessed times to a user (for \nstatistical purposes).\n\n\"/cache\" is defined in the server configuration file to do a proxied rewrite \nrule on its QUERY_STRING variable (using \"RewriteRule ... [P]\") should the \nappropriate security conditions be met.\n\nI've looked at mod_disk_cache.c, and from what I can determine, this line \ninserted at the end of \"open_entity()\" should do it (about line 480):\n\n+    r->filename = apr_pstrdup(r->pool, dobj->datafile);\n     return OK;\n\nOf course, one should probably free any prior assignment of \"r->filename\" else \nthere would be a small memory leak.  However, as is, this does not seem to do \nthe requested job.  (For locally served files, the true local filename should \nbe used, not the disk cache's filename, but that can be handled by prefixing \nthe code with a conditional - which wasn't necessary for the test.)  What am I \nmissing, or what can be done to make this work?\n\n-------\nFootnote:  $QS is necessary, else any QUERY_STRING passed to the PHP script \nwould be inherited by the lookup of the proxied URL.  The only way I found to \nsuppress the inheritance was to append a \"null query string\" to the URL, which \nshould only be done if it lacks its own query string."}, {"count": 1, "attachment_id": null, "creator": "minfrin@sharp.fm", "is_private": false, "id": 130843, "time": "2009-10-03T08:36:26Z", "bug_id": 42404, "creation_time": "2009-10-03T08:36:26Z", "tags": [], "text": "The problem with gaining access to a file is that the file only makes sense if there is a single file, and in the case of the disk cache, there are multiple separate files that represent the body of each variant, and the headers of each variant.\n\nA better approach would be to expose a more formal API to query the status of cached URLs."}, {"count": 2, "tags": [], "creator": "minfrin@sharp.fm", "is_private": false, "text": "htcacheclean in httpd-trunk how has the ability to list entries in the cache (-a flag), and list entries in the cache along with a complete dump of cached metadata (-A flag).\n\nWill this be enough?", "id": 140807, "time": "2010-10-18T19:07:14Z", "bug_id": 42404, "creation_time": "2010-10-18T19:07:14Z", "attachment_id": null}, {"count": 3, "attachment_id": null, "creator": "software+apache-httpd@kd6lvw.ampr.org", "text": "RE - Comment #1:  I am aware that the cache generates two files (header and body) per request cached, and additional files when the request varies.  The file would be the body file returned according to the headers given in the subrequest after variance is applied.  This reduces the subrequest to a single file, if one exists.  If one does not exist, then \"proxy:URL\" (or other appropriate substitute string) that is currently returned will still be returned.\n\nClarification:  The concept is akin to the ability to retrieve the last cached copy of a resource like certain search engines keep around (e.g. google).\n\nRE - Comment #2:  No.  My idea concerned making the local filename (from the cache when the URL is remote) available to the HTTP request itself (as a subrequest if appropriate).  Therefore, availability to the htcacheclean program does not help.  (However, it may be helpful for maintenance purposes.)\n\nDoes that make more sense about what I am suggesting?", "id": 140815, "time": "2010-10-19T02:38:09Z", "bug_id": 42404, "creation_time": "2010-10-19T02:38:09Z", "tags": [], "is_private": false}]