[{"count": 0, "tags": [], "text": "In org.apache.tools.ant.util.FileUtils there is the method:\n    public void copyFile(File sourceFile, File destFile,\n                         FilterSetCollection filters, Vector filterChains,\n                         boolean overwrite, boolean preserveLastModified,\n                         String encoding, Project project)\n\nOn line 379 & 380 and 392 & 393the in and out streams are closed.  The code\nshould be wrapped in try {} finally {} blocks so that the files get closed even\nif the code above them fails.\n\nNormally, this code can fail and noboby will see it because java cleans up open\nfiles on exit, however, if you keep ant in memory in a program that has an\nextended lifecycle, these open files can become problematic.\n\nIf I may, I'd like to suggest the following code, it will drop an IOException if\nboth close() calls throw IOExceptions, however, I don't think you can write this\ncode safely without redesigning the entire class so that none of the copy\nmethods throw IOException.\n\ntry {\n   // open streams and do work (right now this code starts on line 341)\n} finally {\n   try {\n      if (out != null)\n         out.close();\n   } finally {\n      if (in != null)\n         in.close();\n   }\n}", "attachment_id": null, "bug_id": 7302, "id": 12105, "time": "2002-03-20T23:37:09Z", "creator": "Jed_Anderson@oti.com", "creation_time": "2002-03-20T23:37:09Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 7302, "is_private": false, "id": 12111, "time": "2002-03-21T08:09:49Z", "creator": "bodewig@apache.org", "creation_time": "2002-03-21T08:09:49Z", "tags": [], "text": "fixed in nightly build 2002-03-22"}]