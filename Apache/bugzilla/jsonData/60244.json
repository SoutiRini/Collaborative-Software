[{"count": 0, "tags": [], "creator": "e-apache@wthack.de", "is_private": false, "text": "Hi, I just tried to move my webserver to use http2 and discovered the following phenomenon.\n\nThis happens in chrome as well as in firefox with apache2 2.4.23.\n\nIf I open one tab to my http2 enabled domain (using h2) and it does background ajax long-polling to a php script on the server (The script just does sleep(30)).\nWhile the longpoll is running, if i try to open a new tab to the same server, the new request gets stuck in the \"pending\" state until the longpoll is finished.\nThe second request can be against a static .html file (so no php processing) and still gets stuck.\nIf I disable http2 for this setup, the requests finish in parallel just fine.\n\nIt seems to me that I somehow cause all requests to be serialized for the same connection but different streams.\nThis does NOT happen for different connections, so longpoll in chrome and second request in firefox is fine.\n\nList of my used modules:\ncore.c, http_core.c, mod_access_compat.c, mod_actions.c, mod_alias.c, mod_auth_basic.c, mod_authn_core.c, mod_authn_file.c, mod_authz_core.c, mod_authz_groupfile.c, mod_authz_host.c, mod_authz_unixgroup.c, mod_authz_user.c, mod_autoindex.c, mod_cgi.c, mod_dav.c, mod_dav_fs.c, mod_deflate.c, mod_dir.c, mod_env.c, mod_filter.c, mod_headers.c, mod_http2.c, mod_include.c, mod_info.c, mod_log_config.c, mod_logio.c, mod_mime.c, mod_negotiation.c, mod_php7.c, mod_proxy.c, mod_proxy_http.c, mod_reqtimeout.c, mod_rewrite.c, mod_setenvif.c, mod_so.c, mod_socache_shmcb.c, mod_ssl.c, mod_status.c, mod_unixd.c, mod_version.c, mod_watchdog.c, mod_wsgi.c, prefork.c", "id": 194362, "time": "2016-10-12T11:59:33Z", "bug_id": 60244, "creation_time": "2016-10-12T11:59:33Z", "attachment_id": null}, {"count": 1, "text": "Additional insight:\n\nThis happens _only_ during requests that involve php.\n\nIf i have a long running download that shares a connection with another static file requests, everything is fine.\nCould it be that mod_php7 somehow gets an exclusive lock on the connection except just on the stream?", "creator": "e-apache@wthack.de", "is_private": false, "id": 194363, "time": "2016-10-12T12:11:51Z", "bug_id": 60244, "creation_time": "2016-10-12T12:11:51Z", "tags": [], "attachment_id": null}, {"count": 2, "text": "loglevel trace8 of the situation pls?", "bug_id": 60244, "is_private": false, "id": 194369, "time": "2016-10-12T14:30:18Z", "creator": "covener@gmail.com", "creation_time": "2016-10-12T14:30:18Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "creator": "e-apache@wthack.de", "attachment_id": 34368, "is_private": false, "id": 194370, "time": "2016-10-12T15:13:56Z", "bug_id": 60244, "creation_time": "2016-10-12T15:13:56Z", "text": "Created attachment 34368\nloglevel trace8 of a session that has the problem\n\nThis shows the following series of event:\n\nRequest to /test/first.html in tab #1, which loads the basic html and some javascript.\nThe javascript of first.html then does an ajax request to /test/longpoll.php which hangs for 30 seconds.\nThis phase is clearly visible because of the 30 second long period of:\nOpenSSL: I/O error, 5 bytes expected to read on BIO#558423e82670\n\n2 seconds after the longpoll.php request is initiated, i open another tab #2 to /test/second.html. This one does not really show up in the log just yet.\n\nAfter the longpoll in Tab #1 finished, the log says:\nAH02034: Subsequent (No.3) HTTPS request received for child 2 (server exi.wthack.de:443)\n\nWhich goes to /test/second.html and finished immediately.\n\nAnything else i could provide to help solve this?"}, {"count": 4, "attachment_id": null, "bug_id": 60244, "is_private": false, "id": 194371, "time": "2016-10-12T15:33:42Z", "creator": "stefan@eissing.org", "creation_time": "2016-10-12T15:33:42Z", "tags": [], "text": "The problem is that you run 'prefork' as your mpm. In prefork there is only one connection/request per process. So, when you browser reuses the h2 connection, it ends up in the very same process that is working on the longpoll.\n\nWhat can you do?\n1. Disable http2\n2. Switch to mpm_event\n3. Enable more H2Workers per process (the default on prefork is 1, since prefork is intended to not have multithreading).\n\n2 would be my recommendation. 3 might not work if you really need prefork. 1 makes me sad."}, {"count": 5, "tags": [], "bug_id": 60244, "attachment_id": null, "text": "I went for mpm_event + mod_fcgid which works nicely for php. Thank you", "id": 194390, "time": "2016-10-13T10:32:37Z", "creator": "e-apache@wthack.de", "creation_time": "2016-10-13T10:32:37Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 60244, "text": "This behaviour should really be documented. It makes sense once you understand the reason, but is unexpected nevertheless, and has the potential for triggering hard-to-track bugs where it looks like the client may be at issue. Current browsers show the connections as \"stalled\" even though they may in fact have done their part in issuing the request.\n\nWhile HTTP/2 is not doing anything \"wrong\", per-se, it is a case where it breaks website workflows which worked fine with HTTP/1.1 on the same MPM.\n\nPossible locations to mention it:\nhttps://httpd.apache.org/docs/2.4/howto/http2.html\nhttps://httpd.apache.org/docs/2.4/mod/mod_http2.html#h2maxworkers (\"If this directive is not used, mod_http2 will chose a value suitable for the mpm module loaded.\" is not enough, because it does not specify a value or the implications.)", "id": 194604, "time": "2016-10-20T23:51:03Z", "creator": "greenreaper@hotmail.com", "creation_time": "2016-10-20T23:51:03Z", "is_private": false, "attachment_id": null}]