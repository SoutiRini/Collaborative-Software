[{"count": 0, "attachment_id": null, "creator": "marius.scurtescu@gmail.com", "is_private": false, "id": 48762, "time": "2003-12-09T22:22:42Z", "bug_id": 25373, "creation_time": "2003-12-09T22:22:42Z", "tags": [], "text": "The timestamp on generated .java and .class files is the time when they are\ngenerated and this can cause problems. The timestamp on these files should be\nexactly the same timestamp as the one on the corresponding .jsp file.\n\nHere is an example:\n- revision 6 of a file called index.jsp is timestamped at May 10, 10:00 am\n- this revision 6 is labeled and branched for a production rollout\n- the main branch gets a new revision, not meant for rollout yet: revision 7 at\nMay 11, 9:00 am\n- the production is finally rolled out on May 12 and the page gets compiled upon\nthe first hit at May 12, 3:00 pm\n- the index.java and index.class files are stamped with May 12, 3:00 pm\n- in a month a new production rollout, now revision 7 of index.jsp makes it to\nthe production server\n- the timestamps are as follows at this point (on the production server):\n  - index.jsp: May 11, 9:00 am (revision 7)\n  - index.java and index.class: May 12, 3:00 pm (based on revision 6)\n- hits on index.jsp will not trigger a recompile even though they should"}, {"count": 1, "tags": [], "creator": "funkman@joedog.org", "text": "If anything this is an enhancement. But this is a WONTFIX.", "id": 53229, "time": "2004-02-29T21:16:41Z", "bug_id": 25373, "creation_time": "2004-02-29T21:16:41Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "Could you please give some details why this is an enhancement and not a bug?\n\nThis problem is causing real trouble in production environments.\n\nJust marking it as WONTFIX without any explanation is quite discouraging. Do you\nreally need bug reports from users?", "attachment_id": null, "id": 53244, "creator": "marius.scurtescu@gmail.com", "time": "2004-03-01T04:21:21Z", "bug_id": 25373, "creation_time": "2004-03-01T04:21:21Z", "is_private": false}, {"count": 3, "text": "Nothing in the spec dictates what the timestamps of the compiled class should\nbe. In fact, an implementation could delete the compiled class file after it is\nloaded into the JVM. \n\nThe root cause of this \"bug\" is tomcat compares the create time of the class\nfile to the last modify time of the JSP. Currently, the JSP is recompiled if the\nJSP's timestamp is newer than the timestamp of the class file. The real fix is\nto add the the last modify date (of the JSP) as a \"constant\" in the java\ngenerated file. Then the comparison would be done on the embedded timestamp. But\nthis can also have unknown side effects since I'm not a jasper guru.\n\nChoosing a different (or alternate) deployment strategy or precompiling the\nJSP's would fix your problem.", "bug_id": 25373, "is_private": false, "id": 53265, "time": "2004-03-01T12:22:04Z", "creator": "funkman@joedog.org", "creation_time": "2004-03-01T12:22:04Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 25373, "attachment_id": null, "id": 53285, "time": "2004-03-01T17:52:38Z", "creator": "marius.scurtescu@gmail.com", "creation_time": "2004-03-01T17:52:38Z", "is_private": false, "text": "Thanks for your reply Tim.\n\nI think that the fix is much simpler. Just timestamp the generated .java and/or\n.class files with the same time as the corresponding .jsp file. Nothing else.\nThere is no need to add a special constant in the generated .java file.\n\nIf the container chooses to delete the .class files after loading them then we\nhave a totally different scenario (and this is not the case). The container will\nhave to track the time stamp of the loaded classes anyhow or give up on\nrecompiling jsp pages.\n\nI did find an alternate way of deployment (I delete all the compiled pages), but\nthis is making the whole recompilation architecure useless, this is not a solution."}, {"count": 5, "tags": [], "bug_id": 25373, "is_private": false, "id": 53297, "creation_time": "2004-03-01T23:24:13Z", "time": "2004-03-01T23:24:13Z", "creator": "kin-man.chung@sun.com", "text": "I agree this should be a WONTFIX.\n\nThe time stamps for the .class files indicate the time when they are generated,\nas they should be.  Re-stamping them with different values would have\nperformance impact, without any real benefit.\n\nOne solution to the \"problem\" decsribed in your scenario is to touch revision 7\nof index.jsp when it is deployed for production, if it is different from revision 6.\n\nThe automatic recompilation for outdated JSP pages is intended for development,\nyou should precompile your pages when you deploy your application, as Tim suggested.", "attachment_id": null}, {"count": 6, "tags": [], "text": "The simple fact that workaround solutions are suggested is the best proof that\nthis is a bug (without double quotes around it).\n\nIf I have to precompile the JSP pages or selectively touch some of them then the\nserver is broken, it is not doing what it is supposed to do: recompile pages\nthat are out of sync.\n\nI am not so sure that the timestamp on .class files should indicate the time\nwhen they were generated. As this bug shows it may be better to use the same\ntime as on the corresponding .jsp fil. Here is a parallel with a revision system\nlike CVS. The timestamp of the files in my sandbox are not set to the time when\nthey were checked out (created locally) but to the time when the corresponding\nfile in the repository was last changed. This is the only way CVS can properly\ntrack what changed in my sandbox. This is very similar to our case. The sandbox\nfile is the .class file and the repository file is the .jsp.\n\nThe performance impact should be minimal and the benefit is fixing a bug which\ncan create really obscure problems. This special timestamping should be done\nevery time a page is compiled. Compared to the time needed to compile the page\nthe time needed to set a timestamp is negligible (I doubt you can even detect\nit). Also this is one time deal, once compiled you don't need to timestamp\nanymore, so I would ignore the whole performance issue.\n\nThe fact that recompilation of JSP pages should be done in development\nenvironments only is questionable. The fact that there is a bug remains. This\nbug can easily surface in development as well if periodically you deploy to an\ninternal development or testing server.", "attachment_id": null, "bug_id": 25373, "id": 53338, "time": "2004-03-02T18:06:46Z", "creator": "marius.scurtescu@gmail.com", "creation_time": "2004-03-02T18:06:46Z", "is_private": false}]