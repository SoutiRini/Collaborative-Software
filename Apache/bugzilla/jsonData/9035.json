[{"count": 0, "tags": [], "bug_id": 9035, "text": "I have two faily big REs dealing with Latitude and Longitude.  When I use them \nseparately, no problems.  However, when I combine the 2 REs, so I can pass one \nLatitude-Longitude string to it, it bombs out with an exception (detailed \nbelow).\n\nHere is the test program.  Refer to the example run for usage:\n\nimport java.io.*;\nimport java.util.*;\nimport org.apache.regexp.*;\n\npublic class LatLonREBug\n{\n  private static final String LATITUDE_RE_STRING =\n    \n\"-?(([0-8]?[0-9]((\\\\.[0-9]+)|((([0-5][0-9])|60)((([0-5][0-9])|60))?))?)|90)[nNsS]\";\n  private static final String LONGITUDE_RE_STRING =\n    \n\"-?(((([0-9]?[0-9])|(1[0-7][0-9]))((\\\\.[0-9]+)|((([0-5][0-9])|60)(([0-5][0-9])|60)?))?)|180)[eEwW]\";\n\n  public static final String LATITUDE_LONGITUDE_RE_STRING =\n    \"^\" + LATITUDE_RE_STRING + LONGITUDE_RE_STRING + \"$\";\n\n  public static void main(String[] args)\n    throws Throwable\n  {\n    RE latlonRE = new RE(LATITUDE_LONGITUDE_RE_STRING);\n    System.out.println(\"LATITUDE_LONGITUDE_RE_STRING: \" +\n                       LATITUDE_LONGITUDE_RE_STRING);\n\n    RE latRE = new RE(\"^\" + LATITUDE_RE_STRING + \"$\");\n    System.out.println(\"LATITUDE_RE_STRING: \" + LATITUDE_RE_STRING);\n\n    RE lonRE = new RE(\"^\" + LONGITUDE_RE_STRING + \"$\");\n    System.out.println(\"LONGITUDE_RE_STRING: \" + LONGITUDE_RE_STRING);\n\n    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n    String line = br.readLine();\n    while (line != null && !line.equals(\"quit\") && !line.equals(\"exit\"))\n    {\n      StringTokenizer st = new StringTokenizer(line);\n      int tokens = st.countTokens();\n\n      if (tokens > 1)\n      {\n        String command = st.nextToken();\n\n        if (command.equalsIgnoreCase(\"lat\"))\n        {\n          String lat = st.nextToken();\n          latRE.match(lat);\n          System.out.println(lat + \" is a properly formatted latitude\");\n        }\n        else if (command.equalsIgnoreCase(\"lon\"))\n        {\n          String lon = st.nextToken();\n          lonRE.match(lon);\n          System.out.println(lon + \" is a properly formatted longitude\");\n        }\n        else if (command.equalsIgnoreCase(\"latlon\"))\n        {\n          String latlon = st.nextToken();\n          latlonRE.match(latlon);\n          System.out.println(latlon + \" is a properly formatted lat-lon\");\n        }\n        else\n        {\n          System.out.println(\"unknown command: \" + command);\n        }\n      }\n      else\n      {\n        System.out.println(\"invalid line: \" + line);\n      }\n\n      line = br.readLine();\n    }\n  }\n}\n\nHere is an example run of the test-case.  As you will see, when just doing \nlatitude or longitude, the REs match as expected.  But, when I do a 'latlon' \nstring, it pukes...\n\n[mnewcomb@localhost sandbox]$ java -classpath \n/usr/local/regexp/jakarta-regexp-1.2.jar:. LatLonREBug\nLATITUDE_LONGITUDE_RE_STRING: \n^-?(([0-8]?[0-9]((\\.[0-9]+)|((([0-5][0-9])|60)((([0-5][0-9])|60))?))?)|90)[nNsS]-?(((([0-9]?[0-9])|(1[0-7][0-9]))((\\.[0-9]+)|((([0-5][0-9])|60)(([0-5][0-9])|60)?))?)|180)[eEwW]$\nLATITUDE_RE_STRING: \n-?(([0-8]?[0-9]((\\.[0-9]+)|((([0-5][0-9])|60)((([0-5][0-9])|60))?))?)|90)[nNsS]\nLONGITUDE_RE_STRING: \n-?(((([0-9]?[0-9])|(1[0-7][0-9]))((\\.[0-9]+)|((([0-5][0-9])|60)(([0-5][0-9])|60)?))?)|180)[eEwW]\nlat 55N\n55N is a properly formatted latitude\nlat 55.454N\n55.454N is a properly formatted latitude\nlat 5545N\n5545N is a properly formatted latitude\nlon 123E\n123E is a properly formatted longitude\nlon 5E\n5E is a properly formatted longitude\nlon 123.444E\n123.444E is a properly formatted longitude\nlon 1784532W\n1784532W is a properly formatted longitude\nlatlon 55N44E\n55N44E is a properly formatted lat-lon\nlatlon 55N44.33E\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException\n\tat org.apache.regexp.RE.getParenEnd(RE.java:724)\n\tat org.apache.regexp.RE.matchNodes(RE.java:942)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:933)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchNodes(RE.java:910)\n\tat org.apache.regexp.RE.matchNodes(RE.java:1376)\n\tat org.apache.regexp.RE.matchAt(RE.java:1448)\n\tat org.apache.regexp.RE.match(RE.java:1498)\n\tat org.apache.regexp.RE.match(RE.java:1468)\n\tat org.apache.regexp.RE.match(RE.java:1561)\n\tat LatLonREBug.main(LatLonREBug.java:54)\n[mnewcomb@localhost sandbox]$ \n\n\nAny help will be greatly appreciated.\n\nThanks,\nMichael", "id": 16008, "time": "2002-05-13T14:16:20Z", "creator": "mnewcomb@tacintel.com", "creation_time": "2002-05-13T14:16:20Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 9035, "text": "Created attachment 1846\ntest case, sorry, didn't see 'attach file' option", "id": 16010, "time": "2002-05-13T14:20:48Z", "creator": "mnewcomb@tacintel.com", "creation_time": "2002-05-13T14:20:48Z", "is_private": false, "attachment_id": 1846}, {"count": 2, "attachment_id": null, "creator": "mnewcomb@tacintel.com", "text": "This is a problem caused by too many parentheses.  Please apply the patch \nsupplied in bug # 8467 by Vadim Gritsenko (thanks Vadim!).\n\nThere is no reason for this to not be applied as is.  I did it on a fresh \ncheck-out from cvs and my code is working perfectly.\n\nIs there anyone with write-access for REGEX available to apply Vadim's patch?\n\nMichael\n", "id": 16018, "time": "2002-05-13T16:43:54Z", "bug_id": 9035, "creation_time": "2002-05-13T16:43:54Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 9035, "is_private": false, "id": 16561, "creation_time": "2002-05-22T17:50:02Z", "time": "2002-05-22T17:50:02Z", "creator": "vgritsenko@apache.org", "text": "So my patch is useful not only for me :)", "attachment_id": null}]