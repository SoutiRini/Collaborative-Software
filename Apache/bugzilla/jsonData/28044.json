[{"count": 0, "tags": [], "bug_id": 28044, "attachment_id": null, "text": "Team, \n\nAttaching the patch that will convert FOP to using Commons Logging [1].  \n\nI've tested several sample files with it, it appears to run fine throughout, \nbut as the changes are extensive, I suspect there will be a few places where a \nlogger was not properly set, etc.  Let me know what you see, but I suspect many \nsmall bugs we can fix after the patch is applied.\n\nOnly issue found was in setting a logger for an Avalon \"ContainerUtil\", which \ncurrently won't work with Commons Logging and needs its own Avalon logger.  I \njust commented out the line (in two places) where that ContainerUtil logging \nwould otherwise have been enabled (I don't think we're currently using this \nfunctionality anyway.)  In the future, we can look at other options here--such \nas just feeding it an Avalon console logger, to providing a file conversion \nbetween the two logging choices, to just not logging here, to using an \nalternative to ContainerUtil.\n\nI'll hold off on this for three days to allow for team comments.  (Please \nminimize your changes to the HEAD code base in the interim, as updating this \npatch would be very complex.)\n\nThanks,\nGlen\n\n[1] http://marc.theaimsgroup.com/?l=fop-dev&m=108009551327746&w=2", "id": 54864, "time": "2004-03-30T10:46:51Z", "creator": "glenmazza@yahoo.com", "creation_time": "2004-03-30T10:46:51Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 28044, "attachment_id": 11047, "text": "Created attachment 11047\npatch file, avalon logging->commons logging conversion", "id": 54865, "time": "2004-03-30T10:49:03Z", "creator": "glenmazza@yahoo.com", "creation_time": "2004-03-30T10:49:03Z", "is_private": false}, {"count": 2, "tags": [], "creator": "jeremias@apache.org", "text": "Hi Glen\n\nI'm a bit surprised at the way you did the change. Like this I don't see any \nbenefit over Avalon-style logging. You still have to pass a lot of loggers to \nseveral objects. This simply trades a 70KB JAR with a 30KB JAR for the same \nthing while Avalon still provides some additional features.\n\nI'd have expected you to make use of the \"static\" way to obtain a logger (as \nseen in Commons Digester for example):\n\n    protected Log log =\n        LogFactory.getLog(\"org.apache.commons.digester.Digester\");\n\nThe logger is then configured externally. This makes life a lot easier for the \nFO tree (if you use a static variable) and for the PDF library, for example.\n\nSee also:\nhttp://jakarta.apache.org/commons/logging/guide.html", "id": 54867, "time": "2004-03-30T11:37:12Z", "bug_id": 28044, "creation_time": "2004-03-30T11:37:12Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 28044, "attachment_id": null, "text": "Glen,\n\nthe Avalon logger for the containerUtil that you mention. I think this is the \nlogger for Batik in the Transcoder. If we dont set it, does this mean there is \nno way of seeing warnings from Batik processing?\n\nHave a look at PDFTranscoder.transcode method to see what I mean.", "id": 54875, "time": "2004-03-30T13:22:41Z", "creator": "bowditch_chris@hotmail.com", "creation_time": "2004-03-30T13:22:41Z", "is_private": false}, {"count": 4, "tags": [], "creator": "glenmazza@yahoo.com", "text": "[Jeremias]\n\nYes, this work definitely needs optimization--what you mention is a major area \n(Axis does exactly as you say over and over again.)--I just did a straight \nconversion first (several hours of work).  I'm not a logging expert--I just \nneed a foothold for the conversion that can *then* be optimized.  If right now \nas you say, we're just the same as Avalon, I'm quite thrilled that I could even \nmanage that.  The changes you are suggesting can happen next.    \n\nBTW, would you already know how to make these changes quickly, after I commit \nthe patch?  If you can zoom through this in 20-30 minutes, that would save me a \nlot of time.  Else I'll research it.  \n\n\n[Chris]\n\n<Q>\nI think this is the logger for Batik in the Transcoder. If we dont set it, does \nthis mean there is no way of seeing warnings from Batik processing?\n</Q>\n\nWell, Batik doesn't use Avalon.  It was the logger for the Avalon ContainerUtil \n(whether the latter is currently activated, I didn't research), which in turn \ncan't accept a Commons-Logger.  If we need to, we can give it an Avalon \nConsoleLogger instead.  Or, switch to a Container that will allow us to use \nCommons-Logging.  Or, not use a container at all (I don't know what \na \"container\" here does for us anyway.)  Or, switch to System.err.println() a \nla Batik and Xalan.  I don't care much here.  (Perhaps even ContainerUtil can \nbe subclassed to take a Commons Logging object?)  Comments welcome--but we \nshould probably get this working as well.\n\nGlen\n", "id": 54907, "time": "2004-03-30T22:14:32Z", "bug_id": 28044, "creation_time": "2004-03-30T22:14:32Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "glenmazza@yahoo.com", "attachment_id": null, "id": 54910, "time": "2004-03-30T23:36:04Z", "bug_id": 28044, "creation_time": "2004-03-30T23:36:04Z", "is_private": false, "text": "Chris,\n\nGood news--I fixed the issue you brought up below--never mind my previous\nresponse.  It turns out that ContainerUtil.enableLogging() [1] is just a\nconvenience function for setting a logger for the object in question.  Once I\nrealized what it did, it was trivial to directly to do the same directly via a\nCommons-Logger.  I fixed it in two of three places.  In the third\n(AbstractPSTranscoder), no logger was defined for this class, nor is any logging\nyet done within it.  So enableLogging() below wouldn't do anything for it, and\nso I skipped giving it a Commons-Logger at this time.  \n\nI'll upload a new patch.\n\nThanks,\nGlen\n\n[1]\nhttp://avalon.apache.org/framework/api/org/apache/avalon/framework/container/ContainerUtil.html\n\nJeremias, if you wish I'll happily take care of the issue you mentioned\npreviously.  It's just you know more about the static loggers (and\ncentralization of them) than me, so I suspect you can get this looking really\nclean much more quickly than I after I apply this patch.  Your choice,\nhowever--I realize you weren't the biggest proponent of this switch to begin\nwith! ;)\n\nThanks,\nGlen"}, {"count": 6, "tags": [], "bug_id": 28044, "attachment_id": 11066, "id": 54911, "time": "2004-03-30T23:51:29Z", "creator": "glenmazza@yahoo.com", "creation_time": "2004-03-30T23:51:29Z", "is_private": false, "text": "Created attachment 11066\nnew logger patch, disregard previous"}, {"count": 7, "tags": [], "bug_id": 28044, "attachment_id": null, "text": "ContainerUtil is just a little helper to avoid a lot of checks when setting up \nAvalon-compliant objects. Avalon Framework defines a number of interfaces \n(LogEnabled for one) which are all optional to implement. ContainerUtil simply \ndoes a check if a logger or a Configuration can be set, because one \nimplementation may, the other may not.\n\nI'm busy today but I'll try to do the whole thing for the PDF and library code \non Thursday evening (CET). Does anyone mind if I just check in these parts? \nAvalon is not necessary there and when they get extracted into separate \ncomponents it is better for them to use JCL instead of Avalon Logging.", "id": 54926, "time": "2004-03-31T06:34:12Z", "creator": "jeremias@apache.org", "creation_time": "2004-03-31T06:34:12Z", "is_private": false}, {"count": 8, "tags": [], "creator": "glenmazza@yahoo.com", "attachment_id": null, "id": 54952, "time": "2004-03-31T11:02:11Z", "bug_id": 28044, "creation_time": "2004-03-31T11:02:11Z", "is_private": false, "text": "Fantastic, I committed the change.  I will next update the examples--and copy\nwhat you do in the PDF libraries elsewhere if its advisable (Please advise!) \nOnce all this is done, back to layout bugs for me...Bugzilla is getting huge.\n\nAlso, it is good to know that ContainerUtil can work without a CommonsLogger, we\njust need to set it directly on the object in question.  I.e., other portions of\nAvalon, including those that the Barcode generator may need to interface with\nFOP, can be kept.\n\nDon't forget--all three of the Jakarta web frameworks (Struts, Turbine,\nTapestry) as well as Tomcat have now standardized on C-L, we're going to have a\nlot of happy future web app developers as a result of this change.\n\nThanks for your help!\n\nGlen"}, {"count": 9, "tags": [], "bug_id": 28044, "attachment_id": null, "text": "If you're talking about the Barcode generator (Barcode4J/Krysalis Barcode, \nright?), that one doesn't need any interfacing over Avalon with FOP. It only \nuses Avalon services internally. BTW, the Barcode4J FOP extension for HEAD \ndoesn't exist, yet. :-)", "id": 54954, "time": "2004-03-31T12:05:08Z", "creator": "jeremias@apache.org", "creation_time": "2004-03-31T12:05:08Z", "is_private": false}, {"count": 10, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 155699, "time": "2012-04-01T06:36:21Z", "bug_id": 28044, "creation_time": "2012-04-01T06:36:21Z", "is_private": false, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed"}]