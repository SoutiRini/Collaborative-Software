[{"count": 0, "tags": [], "bug_id": 7971, "attachment_id": null, "is_private": false, "id": 13262, "time": "2002-04-11T16:20:23Z", "creator": "Andreas.Junghans@fh-karlsruhe.de", "creation_time": "2002-04-11T16:20:23Z", "text": "The current implementation of StandardContext prevents our application from \nshutting down cleanly during a reload or stop. There are two problems that are \ndescribed below and fixed by the attached patch (which needs competent review!).\n\n1) We use a ServletContextListener to free application wide resource when the \ncontext is shut down. At this point, we need access to context attributes to \nfree all our resources. When Tomcat is shut down, all works well. However, when \nthe context is reloaded, all context attributes are cleared before the \nlistener's contextDestroyed method is called (see source of \nStandardManager.reload()).\n\nThe fix is simple: The call to listenerStop() has to be put before the place \nwhere the context attributes are cleared. However, I don't know which side \neffects this may have, so this needs an expert review. As a side note, I think \nit is completely spec conformant to access context attributes in the \ncontextDestroyed event (quote from Servlets 2.3 JavaDoc: \"Notification that the \nservlet context is ***about to be*** shut down.\").\n\n2) We need to free resources and save some settings when a session is destroyed \n(note that we have disabled persistent sessions). To do this, we need a) access \nto session attributes and b) access to resources within our app (via \nServletContext.getResourceAsStream()). Point a) prevents us from using an \nHttpSessionListener, since the spec says \"Notification that a session *** was \n*** invalidated\". Thus, we use an HttpSessionBindingListener. However, the \ncurrent implementation of StandardContext shuts down the session manager too \nearly in both stop() and reload() methods. As a result, \nServletContext.getResourceAsStream() returns null at this stage.\n\nThe fix seems simple enough: Stop the session manager at a point where access \nto a webapp's resources is still possible. I think it is reasonable to assume \nthat these resources are available within a valueUnbound() event. However, I'm \nnot sure if I picked the right place for shutting down the manager in my patch. \nI don't know enough about Catalina's internal architecture to tell what the \nother effects (besides solving my problem) might be.\n\nThe patch is relative to the nightly sources of 2002-04-09. I've tested it with \nand without persistent sessions, and it seems to work fine. Could a committer \nplease have a look and apply the fix if it seems reasonable (or tell me what is \nwrong with it)?\n\nThis is a high priority issue for us since it prevents us from using the reload \nfeature and also from shutting down our sessions cleanly when Tomcat is \nshutdown.\n\nThanks in advance"}, {"count": 1, "tags": [], "bug_id": 7971, "text": "Created attachment 1524\nProposed patch", "id": 13263, "time": "2002-04-11T16:21:13Z", "creator": "Andreas.Junghans@fh-karlsruhe.de", "creation_time": "2002-04-11T16:21:13Z", "is_private": false, "attachment_id": 1524}, {"count": 2, "tags": [], "creator": "Andreas.Junghans@fh-karlsruhe.de", "text": "I just reread my report and noticed a mistake. For issue number 2), I meant to \nsay we need access to _context_ attributes, not _session_ attributes. This \ndoesn't change the getResourceAsStream issue though.\n", "id": 13271, "time": "2002-04-11T18:49:39Z", "bug_id": 7971, "creation_time": "2002-04-11T18:49:39Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 7971, "is_private": false, "id": 13344, "creation_time": "2002-04-12T10:12:19Z", "time": "2002-04-12T10:12:19Z", "creator": "remm@apache.org", "text": "Thanks for the patch. I'm not eager to fix this as part of the 4.0.x branch. \nFor the 4.0-HEAD branch, I am willing to experiment along these lines, and this \nlooks like a good starting point.", "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 7971, "text": "This should be fixed in the latest nightly builds. I applied a broader version\nof the patch, which should fix other related issues.", "id": 13754, "time": "2002-04-16T10:28:43Z", "creator": "remm@apache.org", "creation_time": "2002-04-16T10:28:43Z", "tags": [], "is_private": false}]