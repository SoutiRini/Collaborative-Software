[{"count": 0, "tags": [], "bug_id": 10533, "attachment_id": null, "is_private": false, "id": 19095, "time": "2002-07-07T17:00:15Z", "creator": "apcwhite@tds.net", "creation_time": "2002-07-07T17:00:15Z", "text": "In my application I require parsing text files that contain color names.  I'm \nusing Batik/SVG in other parts of my program, so I assumed I could simply use \nBatik's ability to convert color names (String) to colors (RGBColorValue).  I \nhave found that I cannot because of an issue with StringMap - which I hope can \nbe fixed.\n\nWhat\n----\n\nI want is to have the 'get' and 'put' methods in \norg.apache.batik.css.engine.value.StringMap changed.\n\ncurrent:\n\t    if ((e.hash == hash) && e.key == key) {\nproposed:\n\t    if ((e.hash == hash) && e.key.equals(key)) {\n\n\nWhy? \n----\n\nWell the key is a String after all.  And I'd like to simply query ColorManager \nfor a Color for a given string.  I think I have a very simple solution, except \nfor the problem above.  Please correct me if I'm making a poor assumption.\n\nHow to reproduce?\n-----------------\n\nMake a subclass of org.apache.batik.css.engine.value.svg.ColorManager:\n\n    class PColorManager extends ColorManager {\n        public Color getColor(String s) {\n            Object o = computedValues.get(s);\n            if ((o != null) && (o instanceof RGBColorValue)) {\n                RGBColorValue rgb = (RGBColorValue) o;\n                return new Color(Integer.parseInt(rgb.getRed().toString()),\n                    Integer.parseInt(rgb.getGreen().toString()),\n                    Integer.parseInt(rgb.getBlue().toString()));\n            }\n            \n            return null;\n        }\n    };\n\nthen use it like this:\n\n    PColorManager cm = new PColorManager();\n    String a = \"pi\";\n    String b = \"nk\";\n        \n    System.out.println(cm.getColor(\"pink\"));\n    System.out.println(cm.getColor(a + b));\n\noutput:\n\njava.awt.Color[r=255,g=192,b=203]\nnull\n\nthe \"pink\" works because Java pools all String contstants and so \n\n    String CSS_PINK_VALUE = \"pink\";\n\nin CSSConstants really is the same object.\n\nWhen reading 'pink' from a file it does not get treated as a constant so it is \nlike the 'a + b' example...and only a null is returned.\n\nAfter applying my proposed solution both examples work.\n\nCons:\n\nthe equals method is slower than using ==.  StringMap is probably used \nfrequently in Batik.\n\nPros:\n\nFlexiblity and more 'correct' for the data type"}, {"text": "Use the String.intern() method to put your strings in the constant pool (ie. \nSystem.out.println(cm.getColor((a + b).intern())); will work).\n", "tags": [], "bug_id": 10533, "is_private": false, "count": 1, "id": 19111, "time": "2002-07-08T10:14:00Z", "creator": "hillion@apache.org", "creation_time": "2002-07-08T10:14:00Z", "attachment_id": null}]