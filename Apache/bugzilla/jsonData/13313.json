[{"count": 0, "tags": [], "creator": "michael.rosovsky@viryanet.com", "text": "PropertyFile task writes corrupted output with jdk1.3.1\nif Windows drive name is presented in the property value.\nFor example \"D:/dir\" property value will be written \nas \"D\\:/dir\". The problem is in PropertyFile.writeFile() method which is\nusing Properties.store(). \nI've fixed it in my installation of Ant.", "id": 23960, "time": "2002-10-04T20:31:49Z", "bug_id": 13313, "creation_time": "2002-10-04T20:31:49Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": 3359, "bug_id": 13313, "text": "Created attachment 3359\nThe PropertyFile.writeFile() method has been changed", "id": 23961, "time": "2002-10-04T20:35:27Z", "creator": "michael.rosovsky@viryanet.com", "creation_time": "2002-10-04T20:35:27Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 13313, "text": "I'm certain that you are incorrect here.  There is no problem with the\nproperties files created.  The backslash escaping is necessary and loading the\nproperties file back in using either Java Properties.load or <property\nfile=\"...\"/> yields the desired results.\n\nHow are you determining that what you've experienced is a problem?", "id": 23963, "time": "2002-10-04T20:43:24Z", "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-10-04T20:43:24Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 13313, "text": "Hello Erik,\nI've tested the result property file with backslash in it: it absolutely\nunusable - the application (in my case - WebSphere) can't use such a property\nfile. If I  understand it correctly the main objective of property file is to\nbe a property file, but not only to be loadable by Propeties class.\nSo, as a  property file this output is wrong.\n\nMichael", "id": 23965, "time": "2002-10-04T21:37:04Z", "creator": "michael.rosovsky@viryanet.com", "creation_time": "2002-10-04T21:37:04Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "ddevienne@lgc.com", "text": "The Properties class documentation defines the exact format a properties file \nshould have (see \nhttp://java.sun.com/j2se/1.4.1/docs/api/java/util/Properties.html#load\n(java.io.InputStream) ) . According to this format, colon (:) is one of the \nseparators between the property name and it's value. It must thus be 'escaped' \nif used in the property key, but not in the value. I believe Michael may have a \npoint here!?!? Especially since the doc mentions that the only escape sequence \nrecognized in the value are \\t, \\n, \\r, \\\\, \\\", \\', \\ (a backslash and a \nspace), and \\uxxxx (which doesn't include \\:).\n\nSo I was going to concur with Erik, but I think Michael is right. Colon should \nonly be escaped in the key, not in the value (except if it comes as the first \ncharacter of the value... it's not clear there). --DD", "id": 23966, "time": "2002-10-04T21:53:14Z", "bug_id": 13313, "creation_time": "2002-10-04T21:53:14Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "jakarta@ehatchersolutions.com", "text": "Ok, I'm reopening, but its pretty strange that Properties.store cannot save\nthings that Properties.load can read.  Is this perhaps a WebSphere bug or can\nthis be duplicated outside of WebSphere?", "id": 23971, "time": "2002-10-04T22:22:28Z", "bug_id": 13313, "creation_time": "2002-10-04T22:22:28Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "bodewig@apache.org", "text": "Michael, Websphere is running on a 1.1 JDK, yes?\n\nThe problem is that the backslash escaping is necessary and Ant uses the \ndefined way, but that they are not compatible between 1.1 and 1.2+.  In fact,\nI haven't found any way to escape spaces in the keys of a properties file for\nJDK 1.1 (see Ant's testcase for <input> for an ugly example).\n\nThe neat thing is that JDK 1.1 is unable to read a properties file created by\nstore (or was it save) using the same JDK.\n\nI'm afraid this is a case of CANTFIX.", "id": 24053, "time": "2002-10-07T07:05:42Z", "bug_id": 13313, "creation_time": "2002-10-07T07:05:42Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 13313, "attachment_id": null, "text": "It doesn't look like WebSphere bug, at least it has never happened before\n( and this is the old 3.0 version of WebSphere). I think, Dominique is perfectly\nright about specification.  Besides, this property file may be used not only\nby Properties.class ( there still are some non-Java applications in the \nworld :).\nAs to CANTFIX, I've sent some exmple of fix, using Iterator instead of \nProperties.store(). It's working  OK, at least with my WebSphere and a property\nfile is looking in more convinient way with this fix.\nMichael", "id": 24129, "time": "2002-10-08T13:19:53Z", "creator": "michael.rosovsky@viryanet.com", "creation_time": "2002-10-08T13:19:53Z", "is_private": false}, {"count": 8, "tags": [], "creator": "antoine@apache.org", "attachment_id": null, "id": 43365, "time": "2003-08-27T12:59:56Z", "bug_id": 13313, "creation_time": "2003-08-27T12:59:56Z", "is_private": false, "text": "I have had a look at this bug report.\n\n1) When one uses Properties#load with a property file containing \nsomekey=D\\:/mydir, Java has then in memory somekey ==> D:/mydir (OK)\nSo Websphere might not be using Properties#load to read the property file.\n\n2) We might want to be more flexible than Websphere and solve the issue on our side.\n\n3) The patch attached to this bug report works certainly in simple cases, but\nwill not for instance save properly non ASCII characters which need to be\nUNICODE escaped.\n\n4) I have had a look at the bug report 13323 which is also about the\nPropertyFile task and contains a larger patch."}, {"count": 9, "tags": [], "bug_id": 13313, "text": "If as Antoine, points out, this is Websphere not respecting the escaping on a\nproperty load, then the problem appears again to be a Websphere issue. I'm\nresolving now as INVALID.", "id": 44112, "time": "2003-09-12T14:15:23Z", "creator": "conor@apache.org", "creation_time": "2003-09-12T14:15:23Z", "is_private": false, "attachment_id": null}]