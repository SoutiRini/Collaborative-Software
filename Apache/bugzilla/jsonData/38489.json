[{"attachment_id": null, "tags": [], "bug_id": 38489, "is_private": false, "count": 0, "id": 85349, "time": "2006-02-02T15:37:10Z", "creator": "prashanthsukumaran@yahoo.com", "creation_time": "2006-02-02T15:37:10Z", "text": "Hi,\n\nWe have Tomcat 5.5.12 with J2SDK 1.4.1_01 with Compatibility patch.  We are \ngetting frequent SocketException (Broken Pipe).  Every minute.\n\nJan 30, 2006 11:34:18 PM org.apache.jk.core.MsgContext action\nWARNING: Error sending end packet\njava.net.SocketException: Broken pipe\n        at java.net.SocketOutputStream.socketWrite0(Native Method)\n        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)\n        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)\n        at org.apache.jk.common.ChannelSocket.send(ChannelSocket.java:508)\n        at org.apache.jk.common.JkInputStream.endMessage\n(JkInputStream.java:112)\n        at org.apache.jk.core.MsgContext.action(MsgContext.java:293)\n        at org.apache.coyote.Response.action(Response.java:182)\n        at org.apache.coyote.Response.finish(Response.java:304)\n        at org.apache.jk.server.JkCoyoteHandler.invoke\n(JkCoyoteHandler.java:204)\n        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:282)\n        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:744)\n        at org.apache.jk.common.ChannelSocket.processConnection\n(ChannelSocket.java:674)\n        at org.apache.jk.common.ChannelSocket$SocketConnection.runIt\n(ChannelSocket.java:866)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:536)\nJan 30, 2006 11:34:18 PM org.apache.jk.common.ChannelSocket processConnection\nWARNING: processCallbacks status 2"}, {"count": 1, "attachment_id": null, "bug_id": 38489, "text": "This should be 'fixed' in the SVN trunk, and will appear in 5.5.17.\n\nThe message itself is harmless (except for the disk space it takes up in the \nlog), but it suggests a problem with your mod_jk configuration (so WARNING is \nan appropriate level).  If you continue to have problems, follow up on \nusers@tomcat for possible ways to resolve this.", "id": 87295, "time": "2006-03-27T01:47:17Z", "creator": "william.barker@wilshire.com", "creation_time": "2006-03-27T01:47:17Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 38489, "attachment_id": null, "text": "Yep, I get it also:tomcat-5.0.29\n\nJun 24, 2006 6:57:45 PM org.apache.jk.core.MsgContext action\nWARNING: Error sending end packet\njava.net.SocketException: Broken pipe\n        at java.net.SocketOutputStream.socketWrite0(Native Method)\n        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)\n        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)\n        at org.apache.jk.common.ChannelSocket.send(ChannelSocket.java:518)\n        at org.apache.jk.common.JkInputStream.endMessage(JkInputStream.java:112)\n        at org.apache.jk.core.MsgContext.action(MsgContext.java:293)\n        at org.apache.coyote.Response.action(Response.java:182)\n        at org.apache.coyote.Response.finish(Response.java:304)\n        at org.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java:204)\n        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:282)\n        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:754)\n        at\norg.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java:684)\n        at\norg.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java:876)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:595)", "id": 90593, "time": "2006-06-25T07:50:10Z", "creator": "bryce1@obviously.com", "creation_time": "2006-06-25T07:50:10Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 38489, "text": "# grep -ir mod_jk /opt/httpd-2.2.0/conf/*\n# locate mod_jk\n\nshows nothing.  Any hints on WHAT might be misconfigured?", "id": 90594, "time": "2006-06-25T07:55:10Z", "creator": "bryce1@obviously.com", "creation_time": "2006-06-25T07:55:10Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "neverlast01@aim.com", "text": "This bug still occurs in Tomcat 5.5.17.  We are able to recreate the bug by\nputting the server under heavy load and frequently clicking new links in the\nnavigation tree of our web application.\n\nIt seems as though Tomcat is not correctly handling connections to Apache that\nare closed (due to end-user's browser aborting the connection).  It seems that\nTomcat is in the process of writing to the output stream when it is closed.", "id": 98513, "time": "2007-01-25T08:28:37Z", "bug_id": 38489, "creation_time": "2007-01-25T08:28:37Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 38489, "is_private": false, "id": 98827, "time": "2007-01-31T02:15:43Z", "creator": "Bjorn.Wiberg@uadm.uu.se", "creation_time": "2007-01-31T02:15:43Z", "tags": [], "text": "We are experiencing this now and then with Tomcat 5.5.20 and an application\ncalled DivePort (part of the Dimensional Insight Inc. Diver Solution) on IBM AIX\n5.3 with Apache 2.2.4 and mod_jk 1.2.19.\n\nWhen it happens, the application stops responding (the requests reach Apache\nHTTPd and are presumably reaching Apache Tomcat via mod_jk as well, but nothing\nhappens).\n\nRequiring a restart of Tomcat -- when requesting one, one gets this in catalina.out:\n\n---8<---\n2007-jan-31 09:16:19 org.apache.catalina.core.StandardWrapper unload\nINFO: Waiting for 8 instance(s) to be deallocated\n--->8---\n\n...which seems to take an eternity, so using 'kill' on the Tomcat PID seems to\nbe needed.\n\nThe catalina.out log from the error appearing looks like:\n\n--->8---\n2007-jan-30 11:22:25 org.apache.jk.core.MsgContext action\nWARNING: Error sending end packet\njava.net.SocketException: Broken pipe\n        at java.net.SocketOutputStream.socketWrite0(Native Method)\n        at\njava.net.SocketOutputStream.socketWrite(SocketOutputStream.java(Compiled Code))\n        at java.net.SocketOutputStream.write(SocketOutputStream.java(Compiled Code))\n        at org.apache.jk.common.ChannelSocket.send(ChannelSocket.java(Inlined\nCompiled Code))\n        at\norg.apache.jk.common.JkInputStream.endMessage(JkInputStream.java(Compiled Code))\n        at org.apache.jk.core.MsgContext.action(MsgContext.java(Compiled Code))\n        at org.apache.coyote.Response.action(Response.java(Compiled Code))\n        at org.apache.coyote.Response.finish(Response.java(Inlined Compiled Code))\n        at\norg.apache.jk.server.JkCoyoteHandler.invoke(JkCoyoteHandler.java(Compiled Code))\n        at\norg.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java(Compiled Code))\n        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java(Compiled\nCode))\n        at\norg.apache.jk.common.ChannelSocket.processConnection(ChannelSocket.java(Compiled\nCode))\n        at\norg.apache.jk.common.ChannelSocket$SocketConnection.runIt(ChannelSocket.java(Compiled\nCode))\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)\n        at java.lang.Thread.run(Thread.java:570)\n2007-jan-30 11:22:25 org.apache.jk.common.ChannelSocket processConnection\nWARNING: processCallbacks status 2\n--->8---\n\nBest regards,\nBj\u00f6rn"}, {"count": 6, "tags": [], "bug_id": 38489, "is_private": false, "id": 99952, "creation_time": "2007-03-01T19:05:06Z", "time": "2007-03-01T19:05:06Z", "creator": "markt@apache.org", "text": "(In reply to comment #4)\n> It seems as though Tomcat is not correctly handling connections to Apache that\n> are closed (due to end-user's browser aborting the connection).  It seems that\n> Tomcat is in the process of writing to the output stream when it is closed.\n\nTomcat correctly handles this situation and logs the message you see to tell you\nwhat it has done. These messages are expected in the circumstances you describe.", "attachment_id": null}, {"count": 7, "tags": [], "creator": "markt@apache.org", "text": "(In reply to comment #5)\n> ---8<---\n> 2007-jan-31 09:16:19 org.apache.catalina.core.StandardWrapper unload\n> INFO: Waiting for 8 instance(s) to be deallocated\n> --->8---\n> \n> ...which seems to take an eternity, so using 'kill' on the Tomcat PID seems to\n> be needed.\n\nThis is indicative of an application issue. I have seen this when the request\nprocessing gets into an infinite loop due to a coding error. The looping can\nconsume large amounts of CPU making Tomcat unresponsive.\n\nI am marking this issue as fixed as per comment #1 since this is most\nappropriate for the original issue.\n\nHad the report in comment #5 been in a separate issue it would be resolved as\ninvalid.", "id": 99953, "time": "2007-03-01T19:08:53Z", "bug_id": 38489, "creation_time": "2007-03-01T19:08:53Z", "is_private": false, "attachment_id": null}]