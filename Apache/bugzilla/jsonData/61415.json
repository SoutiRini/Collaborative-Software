[{"count": 0, "tags": [], "bug_id": 61415, "text": "It seems that there is a problem with openssl when replacing JSSE. It is a a problem when certificateVerficiation is enabled.\nI replaced JSSE/NIO with OpenSSL/NIO because I wanted to enable HTTP/2.\nWe are using Spring Boot application with tomcat embedded. During startup I was able to load tcnative-1 using AprLifecycleListener. Spring Boot does not support APR connector due to different keystore configuration, but I was able to boot using OpenSSL/NIO. When opening the application in any browser I was getting SSL protocol errors.\n\nI was able to reproduce the same problem using standalone tomcat without any applications deployed.\n\nHow to reproduce:\n- download Tomcat 8.5.20 Windows x64 & unzip it\n- generate keystore: \"%JAVA_HOME%\\bin\\keytool\" -genkey -alias tomcat -keyalg RSA -keystore tomcat_keystore.jks (enter localhost and other data, with password tomcat)\n- copy cacerts to conf folder from JRE folder (for example: C:\\Program Files\\Java\\jdk1.8.0_131\\jre\\lib\\security)\n- edit server.xml and add Connector\n\n    <Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n               maxThreads=\"150\" SSLEnabled=\"true\">\n\t\t<UpgradeProtocol className=\"org.apache.coyote.http2.Http2Protocol\" />\n\t\t<SSLHostConfig truststoreFile=\"conf/cacerts\" truststorePassword=\"\" certificateVerification=\"optional\">\n            <Certificate certificateKeystoreFile=\"conf/tomcat_keystore.jks\"\n                         certificateKeystorePassword=\"tomcat\"\n                         type=\"RSA\" />\n        </SSLHostConfig>\n    </Connector>\n\n- open Chrome and navigate to https://localhost:8443 (you don't need to select any client certificate)\n- you should see tomcat welcome page\n- press Ctrl + F5 fast couple of times and you should start seeing SSL protocol error\n\nFirst I added comment inside https://bz.apache.org/bugzilla/show_bug.cgi?id=61394, but after a bit more testing I doubt it is the same problem.", "id": 200306, "time": "2017-08-15T07:39:45Z", "creator": "matej.spiller@gmail.com", "creation_time": "2017-08-15T07:39:45Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "markt@apache.org", "text": "I can reproduce this with the latest tomcat-native and 9.0.x\n\nI also see a JVM crash when shutting down Tomcat after this error.\n\nMy guess at this point is that Tomcat isn't handling an I/O error during the initial handshake correctly.\n\nWhile the error is easily repeatable, tracking it down is going to be a little tricky because the timing is uncertain. I'm currently investigating tools to make finding this (and similar bugs) a little easier.", "id": 200390, "time": "2017-08-21T09:36:29Z", "bug_id": 61415, "creation_time": "2017-08-21T09:36:29Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 61415, "is_private": false, "text": "The tools (omniscient debuggers) were a washout. All the ones I could find were either unmaintained for several years and didn't support Java 8, or were so slow with an application of Tomcat's complexity as to be unusable (which isn't really surprising given what they are trying to do). Back to doing it the hard way...", "id": 200410, "time": "2017-08-22T07:18:49Z", "creator": "markt@apache.org", "creation_time": "2017-08-22T07:18:49Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 61415, "is_private": false, "text": "Found it. The information I needed was in the debug logs all along. The root cause was in Tomcat code, not native code.\n\nFixed in:\n- trunk for 9.0.0.M27 onwards\n- 8.5.x for 8.5.21 onwards", "id": 200412, "time": "2017-08-22T11:25:54Z", "creator": "markt@apache.org", "creation_time": "2017-08-22T11:25:54Z", "attachment_id": null}]