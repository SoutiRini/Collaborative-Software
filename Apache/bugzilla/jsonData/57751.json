[{"count": 0, "tags": [], "bug_id": 57751, "text": "I've been working on an architecture composed of an Apache and a set of Tomcat clusters for several years without any problems. Apache acts as a reverse proxy to the Tomcat clusters by using mod_proxy and mod_proxy_http and everything has been working fine. \n\nHowever, my problems have started when I've included websockets in the applications running in the Tomcat environment. Now, my configuration is similar to this (using mod_proxy, mod_proxy_http and mod_proxy_wstunnel, among other modules):\n\n---------------------------------\n-- Begin configuration snippet --\n---------------------------------\n\n<Proxy balancer://clusterAPP1Websocket>\n        BalancerMember wss://localhost:8443/app1/messaging route=1\n        BalancerMember wss://localhost:9443/app1/messaging route=2\n        ProxySet stickysession=ROUTEID\n</Proxy>\n\n<Proxy balancer://clusterAPP1>\n        BalancerMember https://localhost:8443/app1 route=1\n        BalancerMember https://localhost:9443/app1 route=2\n        ProxySet stickysession=ROUTEID\n</Proxy>\n\n<Proxy balancer://clusterAPP2Websocket>\n        BalancerMember wss://localhost:10443/app2/messaging route=1\n        BalancerMember wss://localhost:11443/app2/messaging route=2\n        ProxySet stickysession=ROUTEID\n</Proxy>\n\n<Proxy balancer://clusterAPP2>\n        BalancerMember https://localhost:10443/app2 route=1\n        BalancerMember https://localhost:11443/app2 route=2\n        ProxySet stickysession=ROUTEID\n</Proxy>\n\nProxyPass /app1/messaging balancer://clusterAPP1Websocket\nProxyPass /app1 balancer://clusterAPP1\nProxyPassReverse /app1/messaging balancer://clusterAPP1Websocket\nProxyPassReverse /app1 balancer://clusterAPP1\n\nProxyPass /app2/messaging balancer://clusterAPP2Websocket\nProxyPass /app2 balancer://clusterAPP2\nProxyPassReverse /app2/messaging balancer://clusterAPP2Websocket\nProxyPassReverse /app2 balancer://clusterAPP2\n\n---------------------------------\n-- End configuration snippet --\n---------------------------------\n\nThe thing is that when I open an URL like https://localhost/app1/messaging/info (I'm using the SockJS client and the first step is to open a connection to this URL) and right after I open an URL like https://localhost/app2/something (with the same browser instance), the reverse proxy send the request to the APP1 cluster (balancer://clusterAPP1) instead of to the APP2 cluster. Therefore, I get an HTTP 404 return code from the Tomcat running in the APP1 cluster. It's like the first opened connection using for the first request is reused to send the second one.\n\nOne tip: if after opening https://localhost/app1/messaging/info I wait for a while (around 30 seconds), the connection to the server is closed (I don't know if the connection is closed by the browser or by Apache) and the following request to https://localhost/app2/something is correctly routed to the second cluster.\n\nI hope I have explained the problem clearly.\n\nThanks in advance and best regards.", "id": 182061, "time": "2015-03-24T15:12:33Z", "creator": "albegarcia@gmail.com", "creation_time": "2015-03-24T15:12:33Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 57751, "text": "Can you share some trace?", "id": 182062, "time": "2015-03-24T15:15:47Z", "creator": "covener@gmail.com", "creation_time": "2015-03-24T15:15:47Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": 32605, "creator": "albegarcia@gmail.com", "text": "Created attachment 32605\nError log in debug level\n\nThis is an error log with LogLevel established to debug.\n\nAs you can see, the URLs and the ports in the log file are not the same as in the description of the bug. This is because I tried to simplify my configuration.\n\nThe steps I've done to get this log are the following:\n\n1. Start the server\n2. Request to https://localhost/rni/ssooMessaging/info\n3. Request to https://cvtfssoo.operaciones.adif.es/cas/login (with the same browser instance)\n4. Stop the server\n\nThanks.", "id": 182064, "time": "2015-03-24T15:59:10Z", "bug_id": 57751, "creation_time": "2015-03-24T15:59:10Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 57751, "is_private": false, "text": "Can you confirm this is still an issue w/ the latest version (2.4.23)?", "id": 192220, "time": "2016-07-07T17:48:21Z", "creator": "jim@apache.org", "creation_time": "2016-07-07T17:48:21Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 57751, "attachment_id": null, "is_private": false, "id": 193491, "time": "2016-09-05T14:20:37Z", "creator": "albegarcia@gmail.com", "creation_time": "2016-09-05T14:20:37Z", "text": "It works fine with the last version (2.4.23). However, I had to do some changes in my configuration:\n\n---------------------------------\n-- Begin configuration snippet --\n---------------------------------\n\n<Proxy balancer://clusterAPP1Websocket>\n        BalancerMember wss://localhost:8443/app1/messaging route=1\n        BalancerMember wss://localhost:9443/app1/messaging route=2\n        ProxySet stickysession=ROUTEID\n</Proxy>\n\n<Proxy balancer://clusterAPP1>\n        BalancerMember https://localhost:8443/app1 route=1\n        BalancerMember https://localhost:9443/app1 route=2\n        ProxySet stickysession=ROUTEID\n</Proxy>\n\n<Proxy balancer://clusterAPP2Websocket>\n        BalancerMember wss://localhost:10443/app2/messaging route=1\n        BalancerMember wss://localhost:11443/app2/messaging route=2\n        ProxySet stickysession=ROUTEID\n</Proxy>\n\n<Proxy balancer://clusterAPP2>\n        BalancerMember https://localhost:10443/app2 route=1\n        BalancerMember https://localhost:11443/app2 route=2\n        ProxySet stickysession=ROUTEID\n</Proxy>\n\nProxyPassMatch \"/app1/messaging/(.*)/websocket\" balancer://clusterAPP1Websocket/$1/websocket\nProxyPass /app1 balancer://clusterAPP1\nProxyPassReverse /app1/messaging balancer://clusterAPP1Websocket\nProxyPassReverse /app1 balancer://clusterAPP1\n\nProxyPass \"/app2/messaging/(.*)/websocket\" balancer://clusterAPP2Websocket/$1/websocket\nProxyPass /app2 balancer://clusterAPP2\nProxyPassReverse /app2/messaging balancer://clusterAPP2Websocket\nProxyPassReverse /app2 balancer://clusterAPP2\n\n---------------------------------\n-- End configuration snippet --\n---------------------------------\n\nThe change was due to the fact that the request to /app1/messaging/info was done without sending the websockets headers (Upgrade: WebSocket, Connection: Upgrade). For this reason, there wasn't a valid handler for this request in the clusterAPP1Websocket. With the new configuration, request to /app1/messaging/info are handled by clusterAPP1 (by using mod_proxy_http) and the rest of the request relative to websockets (in the form of \"app1/messaging/997/5vkkyptu/websocket\", I'm using Java + Spring + SockJS) are handled by clusterAPP1Websocket (by using mod_proxy_wstunnel) in the correct way.\n\nThanks a lot."}]