[{"count": 0, "tags": [], "creator": "emmanuel.blot@free.fr", "is_private": false, "text": "Initial bug report:\nhttp://projects.edgewall.com/trac/ticket/2901\n\nEnvironment:\n * Linux 2.6, Debian testing\n * modpython (reproduced with 3.1.3 (debian) and 3.2.8 (custom build))\n * python (reproduced with 2.3.5 (debian) and 2.4.2 (custom build))\n * LDAP authentication support (mod_auth_ldap)\n * Apache2 using the \"prefork\" engine\n\nNote:\n * PHP5 and MySQL were used on the server, and as I read (mailing list) that\nPHP5 and ModPython may conflict is some rare cases, I disabled the PHP module in\nthe server config, but the same crashes kept occuring under the same conditions.\n\nWhen authentication is performed (againt a LDAP directory) in a Python web\napplication context (Trac, see URL), the Apache server doesn't reply to the web\nbrowser request as it dies. The Apache2 log message shows the following:\n\n\"child pid <n> exit signal Segmentation fault (11)\"\n\nThe root cause seems to be the LDAP authentication module:\nIt defines an extra environment variable AUTHENTICATE_UID, which may takes an\ninvalid (null ?) value.\n\nThis value is retrieved in modpython/apache.py:build_cgi_env(req) and added to\nthe CGI environment variable.\n\nWhen this dictionnary/hash table is duplicated using environ.duplicate() Python\ncall, the server thread crashes.\n\nWhen the duplicate() method attempts to duplicate the value of the\nAUTHENTICATE_UID key, it produces an invalid call which ends up in calling the\nlibc strlen() function with an invalid parameter, and eventually crashes the\ncurrent Apache thread.\n\nThe same crash occurs whenever the value (environ['AUTHENTICATE_UID']) is\naccessed from the dictionnary.\n\nUsing GDB to run the Apache server, the backtrace shows the following:\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread -1215211840 (LWP 31344)]\n0xb7a781e3 in strlen () from /lib/tls/libc.so.6\n\n#0  0xb7a781e3 in strlen () from /lib/tls/libc.so.6\n#1  0xb7777ec5 in PyString_FromString () from /usr/lib/libpython2.3.so.1.0\n#2  0xb78324e9 in MpTable_New () from /usr/lib/apache2/modules/mod_python.so\n#3  0xb774704a in PyObject_GetItem () from /usr/lib/libpython2.3.so.1.0\n#4  0xb776f922 in PyDict_Merge () from /usr/lib/libpython2.3.so.1.0\n#5  0xb776fa2d in PyDict_Update () from /usr/lib/libpython2.3.so.1.0\n#6  0xb776fa64 in PyDict_Update () from /usr/lib/libpython2.3.so.1.0\n#7  0xb77aa9d9 in _PyEval_SliceIndex () from /usr/lib/libpython2.3.so.1.0\n#8  0xb77ab646 in PyEval_EvalCodeEx () from /usr/lib/libpython2.3.so.1.0\n#9  0xb775ef5a in PyFunction_SetClosure () from /usr/lib/libpython2.3.so.1.0\n#10 0xb7744bb7 in PyObject_Call () from /usr/lib/libpython2.3.so.1.0\n#11 0xb774c106 in PyMethod_New () from /usr/lib/libpython2.3.so.1.0\n#12 0xb7744bb7 in PyObject_Call () from /usr/lib/libpython2.3.so.1.0\n#13 0xb77829ae in _PyObject_SlotCompare () from /usr/lib/libpython2.3.so.1.0\n#14 0xb7780075 in PyType_IsSubtype () from /usr/lib/libpython2.3.so.1.0\n#15 0xb7744bb7 in PyObject_Call () from /usr/lib/libpython2.3.so.1.0\n#16 0xb77a74c1 in _PyEval_SliceIndex () from /usr/lib/libpython2.3.so.1.0\n#17 0xb77aa906 in _PyEval_SliceIndex () from /usr/lib/libpython2.3.so.1.0\n#18 0xb77ab646 in PyEval_EvalCodeEx () from /usr/lib/libpython2.3.so.1.0\n#19 0xb775ef5a in PyFunction_SetClosure () from /usr/lib/libpython2.3.so.1.0\n#20 0xb7744bb7 in PyObject_Call () from /usr/lib/libpython2.3.so.1.0\n#21 0xb774c106 in PyMethod_New () from /usr/lib/libpython2.3.so.1.0\n#22 0xb7744bb7 in PyObject_Call () from /usr/lib/libpython2.3.so.1.0\n#23 0xb774886e in PyObject_CallMethod () from /usr/lib/libpython2.3.so.1.0\n#24 0xb7837c58 in python_cleanup () from /usr/lib/apache2/modules/mod_python.so\n#25 0xb7839359 in python_cleanup () from /usr/lib/apache2/modules/mod_python.so\n#26 0x08079045 in ap_run_handler ()\n#27 0x08079481 in ap_invoke_handler ()\n#28 0x0806a558 in ap_process_request ()\n#29 0x08065218 in _start ()", "id": 87063, "time": "2006-03-21T11:23:42Z", "bug_id": 39045, "creation_time": "2006-03-21T11:23:42Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "francois.pesce@gmail.com", "attachment_id": 17997, "id": 87344, "time": "2006-03-28T03:33:59Z", "bug_id": 39045, "creation_time": "2006-03-28T03:33:59Z", "is_private": false, "text": "Created attachment 17997\nPatch to avoid NULL value for env in mod_auth_ldap\n\nIf the problem comes from a NULL value in AUTHENTICATE_* environment variable,\nas you said, this little patch may fix it."}, {"count": 2, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "id": 87345, "time": "2006-03-28T03:47:31Z", "bug_id": 39045, "creation_time": "2006-03-28T03:47:31Z", "is_private": false, "text": "Never reassign bugs off the notification lists please.  Add yourself as a cc,\nor simply use the additional-comment-from key to search for your own incidents :)"}, {"count": 3, "tags": [], "creator": "emmanuel.blot@free.fr", "attachment_id": null, "is_private": false, "id": 100234, "time": "2007-03-09T14:54:05Z", "bug_id": 39045, "creation_time": "2007-03-09T14:54:05Z", "text": "Any update about this issue?"}, {"count": 4, "attachment_id": null, "creator": "nick@webthing.com", "is_private": false, "id": 100236, "time": "2007-03-09T16:20:25Z", "bug_id": 39045, "creation_time": "2007-03-09T16:20:25Z", "tags": [], "text": "(In reply to comment #3)\n> Any update about this issue?\n\nThe bug seems to be in mod_python rather than apache (whose documentation\ndoesn't AFAICS promise any such environment variables).\n\nHaving said that, the patch looks fine.  The drawback is, it fixes just one\ninstance of the underlying bug.\n\n(this is a quick reaction to your question, and ICBW)."}, {"count": 5, "tags": [], "text": "Any reason for the pstrdup in your patch?  Surely no consumer is going to write to memory returned from an env var?", "attachment_id": null, "bug_id": 39045, "id": 120458, "time": "2008-09-08T07:45:23Z", "creator": "nick@webthing.com", "creation_time": "2008-09-08T07:45:23Z", "is_private": false}, {"count": 6, "tags": [], "text": "Probably because I've been too much bothered of memory leaks in other open source projects where a function heterogeneously and randomly returns const char OR allocated result, that made me unable to know when to deallocate or not.\nFeel free to change that if you want.\n\nI know some (not all) of the subtleties and differences from pools allocation in comparison to \"classic\" allocation function, but I've decided to keep an homogeneous allocation type to this result.\n\nAnd vals[i] is usualy allocated via apr_pstrdup().\n\nFeel free to change it if you prefer.", "attachment_id": null, "bug_id": 39045, "id": 120483, "time": "2008-09-08T16:25:56Z", "creator": "francois.pesce@gmail.com", "creation_time": "2008-09-08T16:25:56Z", "is_private": false}, {"count": 7, "attachment_id": null, "creator": "nick@webthing.com", "is_private": false, "id": 120486, "time": "2008-09-08T17:52:28Z", "bug_id": 39045, "creation_time": "2008-09-08T17:52:28Z", "tags": [], "text": "modified patch committed in r693328"}, {"count": 8, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "id": 154183, "time": "2012-02-26T16:38:52Z", "bug_id": 39045, "creation_time": "2012-02-26T16:38:52Z", "is_private": false, "text": "fixed in 2.4.1"}]