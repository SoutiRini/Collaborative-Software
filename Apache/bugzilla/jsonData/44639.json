[{"count": 0, "tags": [], "bug_id": 44639, "attachment_id": null, "is_private": false, "id": 114764, "time": "2008-03-19T11:42:50Z", "creator": "davelee53@yahoo.com", "creation_time": "2008-03-19T11:42:50Z", "text": "Description:\nI am running Apache 2.2.3 on Solaris 5.9 and the MPM is prefork. I got this Segmentation fault 11 error right after the Apache started up and the errors kept going forever.\n\nThe only workaround is to start the Apache as non-root user on the port other than 80, say 8080.\n\nNote, my Solaris uses LDAP as system level user/group authentication (not the Apache's modules, mod_ldap or mod_auth_ldap for HTTP basic auth). And everything was working fine using LDAP in previous Apache 1.3. So I wonder if this issue has anything to do with the support of LDAP as system level authentication in Apache 2.2.3.\n\nObservation:\nThe parent process stayed up and the 5 child processes errored out with Segfault 11 and then another 5 new child processes were created, then errored out again...\n\n----httpd-errors log\n[Wed Mar 05 14:56:24 2008] [notice] Apache/2.2.3 (Unix) mod_ssl/2.2.3 OpenSSL/0.9.8d configured -- resuming normal operations\n[Wed Mar 05 14:56:24 2008] [info] Server built: Oct 31 2007 06:21:59\n[Wed Mar 05 14:56:24 2008] [debug] prefork.c(991): AcceptMutex: fcntl (default: fcntl)\n[Wed Mar 05 14:56:25 2008] [notice] child pid 19514 exit signal Segmentation fault (11), possible coredump in /opt/Apache2\n[Wed Mar 05 14:56:25 2008] [notice] child pid 19513 exit signal Segmentation fault (11), possible coredump in /opt/Apache2\n[Wed Mar 05 14:56:25 2008] [notice] child pid 19516 exit signal Segmentation fault (11)\n:\n\nI added some debuggings in Apache sources and found it failed in getting the system group privileges (native call - nss_search()). So I am guessing that each child process was trying to verify the user's group privileges by calling the native nss_search() but something went wrong during nss_search() that the child was forced to segfault out.\n\nMy questions are:\n1. Is there a known issue in Apache 2.x with ldap as os or system level authentication? Or is it supported?  (Again, it was working fine in previous Apache 1.3)\n2. If I rebuild Apache2 with configure option like \"--with-ldap\" or \"--enable-ldap\", would that help? My understanding of mod_ldap or mod_auth_ldap is for Apache application level of http basic auth. But curious if this config option, --with-ldap, would do anything when deal with system level authentication.\n\n I appreciate if any folk here can provide any pointer related to this issue.\n I might be complete wrong with ldap as root cause but curious if anyone encounter the same error and also using ldap.\n\nthanks,\ndave\n\n--- /etc/nsswitch.conf ---------\n:\n:\npasswd:  files  ldap\ngroup:   files  ldap\n:\n:\n\n---Apache Configure options used ---------------------------------\n\t./configure \\\n\t--prefix=$TOP/sys/toolkits/http/apache2/installation \\\n        --with-ssl =/sys/toolkits/http/apache2/openssl/sol \\\n\t--enable-usertrack --enable-unique-id \\\n\t--enable-most --enable-so --enable-vhost-alias \\\n\t--enable-info --enable-access --enable-expires --enable-headers \\\n\t--enable-imagemap --enable-rewrite --enable-speling --enable-cern-meta \\\n\t--disable-proxy --disable-log-forensic --enable-mime-magic --enable-ssl"}, {"count": 1, "tags": [], "bug_id": 44639, "attachment_id": null, "is_private": false, "id": 114774, "time": "2008-03-19T14:01:49Z", "creator": "rpluem@apache.org", "creation_time": "2008-03-19T14:01:49Z", "text": "Please provide a gdb backtrace of the crashed process (http://httpd.apache.org/dev/debugging.html)"}, {"count": 2, "tags": [], "creator": "davelee53@yahoo.com", "attachment_id": null, "is_private": false, "id": 114778, "time": "2008-03-19T14:53:42Z", "bug_id": 44639, "creation_time": "2008-03-19T14:53:42Z", "text": "Here you go. Thanks, dave\n\n\n  main(0x3, 0xffbff07c, 0xffbff08c, 0x3a6c00, 0x0, 0x0)\n   ap_mpm_run(0x3ddaf0, 0x41fbf8, 0x3e4298, 0x3e4298, 0x0, 0x0)\n   perform_idle_server_maintenance(0x3ddaf0, 0xffbfef44, 0xffbfef30, 0x3ddaf0,           0x3e4298, 0x377990)\n   make_child(0x3e4298, 0x0, 0xffbfef48, 0x1, 0x3ddaf0, 0x348864)\n   child_main(0x0, 0x2367b8, 0x1, 0x0, 0xffbfee50, 0xffbfee40)\n   unixd_setup_child(0x0, 0x520440, 0x567090, 0x0, 0x0, 0x0)\n   set_group_privs(0x0, 0x567090, 0x520440, 0x0, 0x0, 0x0)\n   _initgroups(0x4efbb0, 0x65, 0x0, 0x0, 0x0, 0x0)\n   _getgroupsbymember(0x4efbb0, 0x560658, 0x10, 0x1, 0x0, 0x5606a1)\n   _nss_search(0x2, 0xfeeb614c, 0x56b090, 0xffbfeb44, 0x4e455449, 0xff03f084)\n   0xfeeb6178(0x55fee8, 0xffbfeb44, 0x30, 0x56b0e8, 0x72000000, 0x72000000)\n   0xfeeb2e50(0x2, 0xff000000, 0x0, 0x56b144, 0x0, 0x0)\n   0xfee89d90(0x0, 0x0, 0x0, 0xfeebbea8, 0xfeebbeb8, 0xfeece478)\n   0xfee89768(0x4debd8, 0x566b98, 0x4dd5f8, 0x0, 0x0, 0xffbfe520)\n   0xfee888ac(0xffffffff, 0x566b98, 0x1, 0xffbfe524, 0x0, 0x40)\n   0xfee88170(0x0, 0x3, 0xfeea1f78, 0xfeea2304, 0xad8, 0x1)\n   0x0(0x0, 0x800, 0x0, 0x0, 0x800, 0x0)\n\n"}, {"count": 3, "tags": [], "creator": "rpluem@apache.org", "text": "Please do *not* change the assignment of bugs. This removes it from other developers scope as they no longer get notifications about this bug.", "id": 114780, "time": "2008-03-19T15:00:51Z", "bug_id": 44639, "creation_time": "2008-03-19T15:00:51Z", "is_private": false, "attachment_id": null}, {"count": 4, "attachment_id": null, "creator": "rpluem@apache.org", "text": "(In reply to comment #2)\n> Here you go. Thanks, dave\n> \n> \n>   main(0x3, 0xffbff07c, 0xffbff08c, 0x3a6c00, 0x0, 0x0)\n>    ap_mpm_run(0x3ddaf0, 0x41fbf8, 0x3e4298, 0x3e4298, 0x0, 0x0)\n>    perform_idle_server_maintenance(0x3ddaf0, 0xffbfef44, 0xffbfef30, 0x3ddaf0, \n>          0x3e4298, 0x377990)\n>    make_child(0x3e4298, 0x0, 0xffbfef48, 0x1, 0x3ddaf0, 0x348864)\n>    child_main(0x0, 0x2367b8, 0x1, 0x0, 0xffbfee50, 0xffbfee40)\n>    unixd_setup_child(0x0, 0x520440, 0x567090, 0x0, 0x0, 0x0)\n>    set_group_privs(0x0, 0x567090, 0x520440, 0x0, 0x0, 0x0)\n>    _initgroups(0x4efbb0, 0x65, 0x0, 0x0, 0x0, 0x0)\n>    _getgroupsbymember(0x4efbb0, 0x560658, 0x10, 0x1, 0x0, 0x5606a1)\n>    _nss_search(0x2, 0xfeeb614c, 0x56b090, 0xffbfeb44, 0x4e455449, 0xff03f084)\n>    0xfeeb6178(0x55fee8, 0xffbfeb44, 0x30, 0x56b0e8, 0x72000000, 0x72000000)\n>    0xfeeb2e50(0x2, 0xff000000, 0x0, 0x56b144, 0x0, 0x0)\n>    0xfee89d90(0x0, 0x0, 0x0, 0xfeebbea8, 0xfeebbeb8, 0xfeece478)\n>    0xfee89768(0x4debd8, 0x566b98, 0x4dd5f8, 0x0, 0x0, 0xffbfe520)\n>    0xfee888ac(0xffffffff, 0x566b98, 0x1, 0xffbfe524, 0x0, 0x40)\n>    0xfee88170(0x0, 0x3, 0xfeea1f78, 0xfeea2304, 0xad8, 0x1)\n>    0x0(0x0, 0x800, 0x0, 0x0, 0x800, 0x0)\n> \n\nCould you please provide a gdb backtrace? It should give us more information.", "id": 114781, "time": "2008-03-19T15:10:40Z", "bug_id": 44639, "creation_time": "2008-03-19T15:10:40Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "text": "Your description reminds me of a similar problem. Does your ldap client configuration contain two ldap servers? If so, does the problem go away, if you se only one ldap server in the ldap client configuration?", "is_private": false, "id": 114784, "creator": "rainer.jung@kippdata.de", "time": "2008-03-19T15:30:47Z", "bug_id": 44639, "creation_time": "2008-03-19T15:30:47Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "covener@gmail.com", "text": "Is the LDAP in /etc/nsswitch.conf ultimately loading some other version of openssl?  Can you link httpd with the system SSL instead of the alternate one?", "count": 6, "id": 114795, "time": "2008-03-19T18:25:52Z", "bug_id": 44639, "creation_time": "2008-03-19T18:25:52Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 44639, "attachment_id": null, "text": "(In reply to comment #4)\n> (In reply to comment #2)\n> > Here you go. Thanks, dave\n> > \n> > \n> >   main(0x3, 0xffbff07c, 0xffbff08c, 0x3a6c00, 0x0, 0x0)\n> >    ap_mpm_run(0x3ddaf0, 0x41fbf8, 0x3e4298, 0x3e4298, 0x0, 0x0)\n> >    perform_idle_server_maintenance(0x3ddaf0, 0xffbfef44, 0xffbfef30, 0x3ddaf0, \n> >          0x3e4298, 0x377990)\n> >    make_child(0x3e4298, 0x0, 0xffbfef48, 0x1, 0x3ddaf0, 0x348864)\n> >    child_main(0x0, 0x2367b8, 0x1, 0x0, 0xffbfee50, 0xffbfee40)\n> >    unixd_setup_child(0x0, 0x520440, 0x567090, 0x0, 0x0, 0x0)\n> >    set_group_privs(0x0, 0x567090, 0x520440, 0x0, 0x0, 0x0)\n> >    _initgroups(0x4efbb0, 0x65, 0x0, 0x0, 0x0, 0x0)\n> >    _getgroupsbymember(0x4efbb0, 0x560658, 0x10, 0x1, 0x0, 0x5606a1)\n> >    _nss_search(0x2, 0xfeeb614c, 0x56b090, 0xffbfeb44, 0x4e455449, 0xff03f084)\n> >    0xfeeb6178(0x55fee8, 0xffbfeb44, 0x30, 0x56b0e8, 0x72000000, 0x72000000)\n> >    0xfeeb2e50(0x2, 0xff000000, 0x0, 0x56b144, 0x0, 0x0)\n> >    0xfee89d90(0x0, 0x0, 0x0, 0xfeebbea8, 0xfeebbeb8, 0xfeece478)\n> >    0xfee89768(0x4debd8, 0x566b98, 0x4dd5f8, 0x0, 0x0, 0xffbfe520)\n> >    0xfee888ac(0xffffffff, 0x566b98, 0x1, 0xffbfe524, 0x0, 0x40)\n> >    0xfee88170(0x0, 0x3, 0xfeea1f78, 0xfeea2304, 0xad8, 0x1)\n> >    0x0(0x0, 0x800, 0x0, 0x0, 0x800, 0x0)\n> > \n> \n> Could you please provide a gdb backtrace? It should give us more information.\n> \n\nThis issue occurred on a Customer production box that does not have debug tool like gdb.\nAlso, the Apache we built is using Sun's cc compiler, not the g++. Doesn't gdb only debug symbols that are generated by g++? The stack traces I provided above was from a core dump using Sun's workshop (dbx). I can email you the core file if you need.\nthanks,\ndave\n\n\n", "id": 114819, "time": "2008-03-20T11:06:40Z", "creator": "davelee53@yahoo.com", "creation_time": "2008-03-20T11:06:40Z", "is_private": false}, {"count": 8, "tags": [], "creator": "davelee53@yahoo.com", "attachment_id": null, "is_private": false, "id": 114820, "time": "2008-03-20T11:10:25Z", "bug_id": 44639, "creation_time": "2008-03-20T11:10:25Z", "text": "(In reply to comment #5)\n> Your description reminds me of a similar problem. Does your ldap client\n> configuration contain two ldap servers? If so, does the problem go away, if you\n> se only one ldap server in the ldap client configuration?\n> \nIt is only configured to use one ldap server. Again, if I flip back to use Apache1.3 on the same machine, it works fine. It seems the underline os authentication is not transparent to Apache application layer. \nthanks,\ndave\n"}, {"count": 9, "tags": [], "text": "(In reply to comment #6)\n> Is the LDAP in /etc/nsswitch.conf ultimately loading some other version of\n> openssl?  Can you link httpd with the system SSL instead of the alternate one?\n> \nI didn't see the nsswitch.conf has the configuration to load ssl stuffs. Although the Apache was built the mod_ssl static linked into it, the httpd.conf is not configured to use SSL. \nthanks,\ndave \n", "is_private": false, "id": 114821, "creation_time": "2008-03-20T11:14:38Z", "time": "2008-03-20T11:14:38Z", "creator": "davelee53@yahoo.com", "bug_id": 44639, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 44639, "attachment_id": null, "id": 114825, "time": "2008-03-20T12:14:47Z", "creator": "davelee53@yahoo.com", "creation_time": "2008-03-20T12:14:47Z", "is_private": false, "text": "(In reply to comment #7)\n> (In reply to comment #4)\n> > (In reply to comment #2)\n> > > Here you go. Thanks, dave\n> > > \n> > > \n> > >   main(0x3, 0xffbff07c, 0xffbff08c, 0x3a6c00, 0x0, 0x0)\n> > >    ap_mpm_run(0x3ddaf0, 0x41fbf8, 0x3e4298, 0x3e4298, 0x0, 0x0)\n> > >    perform_idle_server_maintenance(0x3ddaf0, 0xffbfef44, 0xffbfef30, 0x3ddaf0, \n> > >          0x3e4298, 0x377990)\n> > >    make_child(0x3e4298, 0x0, 0xffbfef48, 0x1, 0x3ddaf0, 0x348864)\n> > >    child_main(0x0, 0x2367b8, 0x1, 0x0, 0xffbfee50, 0xffbfee40)\n> > >    unixd_setup_child(0x0, 0x520440, 0x567090, 0x0, 0x0, 0x0)\n> > >    set_group_privs(0x0, 0x567090, 0x520440, 0x0, 0x0, 0x0)\n> > >    _initgroups(0x4efbb0, 0x65, 0x0, 0x0, 0x0, 0x0)\n> > >    _getgroupsbymember(0x4efbb0, 0x560658, 0x10, 0x1, 0x0, 0x5606a1)\n> > >    _nss_search(0x2, 0xfeeb614c, 0x56b090, 0xffbfeb44, 0x4e455449, 0xff03f084)\n> > >    0xfeeb6178(0x55fee8, 0xffbfeb44, 0x30, 0x56b0e8, 0x72000000, 0x72000000) > > >    0xfeeb2e50(0x2, 0xff000000, 0x0, 0x56b144, 0x0, 0x0)\n> > >    0xfee89d90(0x0, 0x0, 0x0, 0xfeebbea8, 0xfeebbeb8, 0xfeece478)\n> > >    0xfee89768(0x4debd8, 0x566b98, 0x4dd5f8, 0x0, 0x0, 0xffbfe520)\n> > >    0xfee888ac(0xffffffff, 0x566b98, 0x1, 0xffbfe524, 0x0, 0x40)\n> > >    0xfee88170(0x0, 0x3, 0xfeea1f78, 0xfeea2304, 0xad8, 0x1)\n> > >    0x0(0x0, 0x800, 0x0, 0x0, 0x800, 0x0)\n> > > \n> > \n> > Could you please provide a gdb backtrace? It should give us more information.\n> > \n> \n> This issue occurred on a Customer production box that does not have debug tool\n> like gdb.\n> Also, the Apache we built is using Sun's cc compiler, not the g++. Doesn't gdb\n> only debug symbols that are generated by g++? The stack traces I provided above\n> was from a core dump using Sun's workshop (dbx). I can email you the core file\n> if you need.\n> thanks,\n> dave\n> \n\nI took the core and ran it with the gdb on my local box, it gives the following: (doesn't seem to much help though.)\n   (gdb) core-file core\n   Core was generated by `/opt/Apache/httpd/bin/nhihttpd -f /opt/ Apache/httpd/conf/http'.\n   Program terminated with signal 11, Segmentation fault.\n   #0  0x00000000 in ?? ()"}, {"attachment_id": null, "tags": [], "creator": "rpluem@apache.org", "text": "(In reply to comment #10)\n> (In reply to comment #7)\n> > (In reply to comment #4)\n> > > (In reply to comment #2)\n> > > > Here you go. Thanks, dave\n> > > > \n> > > > \n> > > >   main(0x3, 0xffbff07c, 0xffbff08c, 0x3a6c00, 0x0, 0x0)\n> > > >    ap_mpm_run(0x3ddaf0, 0x41fbf8, 0x3e4298, 0x3e4298, 0x0, 0x0)\n> > > >    perform_idle_server_maintenance(0x3ddaf0, 0xffbfef44, 0xffbfef30, 0x3ddaf0, \n> > > >          0x3e4298, 0x377990)\n> > > >    make_child(0x3e4298, 0x0, 0xffbfef48, 0x1, 0x3ddaf0, 0x348864)\n> > > >    child_main(0x0, 0x2367b8, 0x1, 0x0, 0xffbfee50, 0xffbfee40)\n> > > >    unixd_setup_child(0x0, 0x520440, 0x567090, 0x0, 0x0, 0x0)\n> > > >    set_group_privs(0x0, 0x567090, 0x520440, 0x0, 0x0, 0x0)\n> > > >    _initgroups(0x4efbb0, 0x65, 0x0, 0x0, 0x0, 0x0)\n> > > >    _getgroupsbymember(0x4efbb0, 0x560658, 0x10, 0x1, 0x0, 0x5606a1)\n> > > >    _nss_search(0x2, 0xfeeb614c, 0x56b090, 0xffbfeb44, 0x4e455449, 0xff03f084)\n> > > >    0xfeeb6178(0x55fee8, 0xffbfeb44, 0x30, 0x56b0e8, 0x72000000, 0x72000000) > > >    0xfeeb2e50(0x2, 0xff000000, 0x0, 0x56b144, 0x0, 0x0)\n> > > >    0xfee89d90(0x0, 0x0, 0x0, 0xfeebbea8, 0xfeebbeb8, 0xfeece478)\n> > > >    0xfee89768(0x4debd8, 0x566b98, 0x4dd5f8, 0x0, 0x0, 0xffbfe520)\n> > > >    0xfee888ac(0xffffffff, 0x566b98, 0x1, 0xffbfe524, 0x0, 0x40)\n> > > >    0xfee88170(0x0, 0x3, 0xfeea1f78, 0xfeea2304, 0xad8, 0x1)\n> > > >    0x0(0x0, 0x800, 0x0, 0x0, 0x800, 0x0)\n> > > > \n> > > \n> > > Could you please provide a gdb backtrace? It should give us more information.\n> > > \n> > \n> > This issue occurred on a Customer production box that does not have debug tool\n> > like gdb.\n> > Also, the Apache we built is using Sun's cc compiler, not the g++. Doesn't gdb\n> > only debug symbols that are generated by g++? The stack traces I provided above\n> > was from a core dump using Sun's workshop (dbx). I can email you the core file\n> > if you need.\n> > thanks,\n> > dave\n> > \n> \n> I took the core and ran it with the gdb on my local box, it gives the\n> following: (doesn't seem to much help though.)\n>    (gdb) core-file core\n>    Core was generated by `/opt/Apache/httpd/bin/nhihttpd -f /opt/\n> Apache/httpd/conf/http'.\n>    Program terminated with signal 11, Segmentation fault.\n>    #0  0x00000000 in ?? ()\n\n\nYou cannot do this on your local box. This only works on the box that generated the core unless your box is a perfect clone of the box where the core dump happened :-).\nNevertheless, googling around I found similar reports of crashes in Samba and other applications that all fail when using initgroups on Solaris 9, so this could be a Solaris 9 bug.\nI am no dbx expert, but it would be nice to know what string is stored at 0x4efbb0.\nFurthermore please provide the settings of the User and Group directives in your httpd.conf and the name of the group with the id 101.\n", "count": 11, "id": 114828, "time": "2008-03-20T13:40:37Z", "bug_id": 44639, "creation_time": "2008-03-20T13:40:37Z", "is_private": false}, {"count": 12, "tags": [], "text": "Two more ideas:\n\nOne from sunsolve: does the ldap client configuration contain NS_LDAP_SERVER_PREF? Sun Bug ID seems to indicate a problem with that.\n\nThe other from my own experience: Sun changed the interaction between libsldap and libldap in an incompatible way between Solaris 8 and 9. I assume you compile the httpd on Solaris 9? If you run pmap against the core, which ldap libraries get listed (libldap, libsldap), especially which versions of them? If you can see libldap.so.4, then that might be the reason for the crash. It should be libldap.so.5 (and of course no ldap libs from non syytem paths).", "is_private": false, "id": 114829, "creator": "rainer.jung@kippdata.de", "time": "2008-03-20T14:06:13Z", "bug_id": 44639, "creation_time": "2008-03-20T14:06:13Z", "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 44639, "text": "(In reply to comment #11)\n> (In reply to comment #10)\n> > (In reply to comment #7)\n> > > (In reply to comment #4)\n> > > > (In reply to comment #2)\n\n> > > \n> > > This issue occurred on a Customer production box that does not have debug tool\n> > > like gdb.\n> > > Also, the Apache we built is using Sun's cc compiler, not the g++. Doesn't gdb\n> > > only debug symbols that are generated by g++? The stack traces I provided above\n> > > was from a core dump using Sun's workshop (dbx). I can email you the core \n> \n> You cannot do this on your local box. This only works on the box that generated\n> the core unless your box is a perfect clone of the box where the core dump\n> happened :-).\n> Nevertheless, googling around I found similar reports of crashes in Samba and\n> other applications that all fail when using initgroups on Solaris 9, so this\n> could be a Solaris 9 bug.\n> I am no dbx expert, but it would be nice to know what string is stored at\n> 0x4efbb0.\n> Furthermore please provide the settings of the User and Group directives in\n> your httpd.conf and the name of the group with the id 101.\n> \n\nYes, my box is not quite the same although both are Solaris 9. Also mine uses NIS rather than LDAP.\n\nHere are the settings of User and Group in httpd.conf\nUser       ehealth\nGroup      ehealth\n\nThe group id 101 (x65) is ehealth, so that does match the one in httpd.conf.\n\nAs for Solaris 9, but why the Apache 1.3 works fine on the same server? That's why I questioned that the os level of authentication is not transparent to Apache.\n\n\n", "id": 114833, "time": "2008-03-20T15:14:39Z", "creator": "davelee53@yahoo.com", "creation_time": "2008-03-20T15:14:39Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 44639, "attachment_id": null, "id": 114834, "time": "2008-03-20T15:20:10Z", "creator": "davelee53@yahoo.com", "creation_time": "2008-03-20T15:20:10Z", "is_private": false, "text": "(In reply to comment #12)\n> Two more ideas:\n> \n> One from sunsolve: does the ldap client configuration contain\n> NS_LDAP_SERVER_PREF? Sun Bug ID seems to indicate a problem with that.\n> \n> The other from my own experience: Sun changed the interaction between libsldap\n> and libldap in an incompatible way between Solaris 8 and 9. I assume you\n> compile the httpd on Solaris 9? If you run pmap against the core, which ldap\n> libraries get listed (libldap, libsldap), especially which versions of them? If\n> you can see libldap.so.4, then that might be the reason for the crash. It\n> should be libldap.so.5 (and of course no ldap libs from non syytem paths).\n> \n\nYes I built the httpd on Solaris 9. But I guess I need to run pmap against the core file on customer's box to find out which ldap libs it tries to use. \nBut thanks for the info, I will try to get the pmap info from customer's box.\n\nHowever, again, if this is ldap shared libs issue, why the Apache 1.3 works?\n\nthanks,\ndave\n"}, {"count": 15, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 114844, "time": "2008-03-21T03:39:07Z", "bug_id": 44639, "creation_time": "2008-03-21T03:39:07Z", "tags": [], "text": "Concerning differences to httpd 1.3: 2.2 uses apr helper libraries, which encapsulate platform specific implementation details of several general purpose APIs. On of those libs is libaprutil-1.so, which has dependencies against ldap. It could be, that your httpd 2.2 got compiled against a pre existing ldap enabled libaprutil-1.so?\n\nYou will see from the pmap, where the apr libs came from, and if something loaded a wrong version 4 ldap lib. If so, you can check via ldd, if the dependency comes from httpd (unlikely because of your configure flag) or from some other of the libs included in the pmap."}, {"attachment_id": null, "tags": [], "bug_id": 44639, "text": "(In reply to comment #15)\n> Concerning differences to httpd 1.3: 2.2 uses apr helper libraries, which\n> encapsulate platform specific implementation details of several general purpose\n> APIs. On of those libs is libaprutil-1.so, which has dependencies against ldap.\n> It could be, that your httpd 2.2 got compiled against a pre existing ldap\n> enabled libaprutil-1.so?\n> \n> You will see from the pmap, where the apr libs came from, and if something\n> loaded a wrong version 4 ldap lib. If so, you can check via ldd, if the\n> dependency comes from httpd (unlikely because of your configure flag) or from\n> some other of the libs included in the pmap.\n> \n\nHi,\n We compile/build libapprutil-1.so as part of building httpd, so a pre existing ldap enabled libaprutil-1.so may not be the case.\n\nAnyway, I ran a couple of tests and here are the results:\n\nTest 1: I rebuilt httpd with  \"--with-ldap\" and \"--enable-ldap\" in configure (although the whole issue is not from mod_ldap or mod_auth_ldap, no ldap directives in httpd.conf)\n\n  Result: It dies at beginning. A symbol ldapssl_client_init is not found in libaprutil-1.so.0.\n\n----- from httpd-errors file------------\n[Fri Mar 21 10:55:10 2008] [info] Init: Seeding PRNG with 0 bytes of entropy\n[Fri Mar 21 10:55:10 2008] [info] Init: Generating temporary RSA private keys (512/1024 bits)\n[Fri Mar 21 10:55:10 2008] [info] Init: Generating temporary DH parameters (512/1024 bits)\n[Fri Mar 21 10:55:10 2008] [warn] Init: Session Cache is not configured [hint: SSLSessionCache]\n[Fri Mar 21 10:55:10 2008] [info] Init: Initializing (virtual) servers for SSL\n[Fri Mar 21 10:55:10 2008] [info] Server: Apache/2.2.3, Interface: mod_ssl/2.2.3, Library: OpenSSL/0.9.8d\n[Fri Mar 21 10:55:10 2008] [info] Init: Seeding PRNG with 0 bytes of entropy\n[Fri Mar 21 10:55:10 2008] [info] Init: Generating temporary RSA private keys (512/1024 bits)\n[Fri Mar 21 10:55:10 2008] [info] Init: Generating temporary DH parameters (512/1024 bits)\n[Fri Mar 21 10:55:10 2008] [info] Init: Initializing (virtual) servers for SSL\n[Fri Mar 21 10:55:10 2008] [info] Server: Apache/2.2.3, Interface: mod_ssl/2.2.3, Library: OpenSSL/0.9.8d\n[Fri Mar 21 10:55:10 2008] [info] APR LDAP: Built with Sun Microsystems Inc. LDAP SDK\nld.so.1: httpd: fatal: relocation error: file /opt/Apache/web/httpd/bin/libaprutil-1.so.0: symbol ldapssl_client_init: referenced symbol not found\n\n\nTest 2 - pmap the core file\n   The results indicate the following two ldap related shared libs.   \n/app/local/padl/lib/libldap.so.2.0.124\n/app/local/padl/lib/nss_ldap.so.1\n\n-----------pmap result\nbash-2.05$ pmap core\ncore 'core.1' of 19809: /opt/Apache/web/httpd/bin/httpd -f /opt/Apache/web/httpd/\n\n00010000    3600K r-x--  /opt/Apache/web/httpd/bin/httpd\n003A2000     168K rwx--  /opt/Apache/web/httpd/bin/httpd\n003CC000    1688K rwx--    [ heap ]\nFEAE0000      32K r-x--  /app/local/lib/libgcc_s.so.1\nFEC34000       8K rwx--  /app/local/ssl/lib/libcrypto.so.0.9.7\nFEC72000      16K rwx--  /app/local/padl/lib/libsasl2.so.2.0.18\nFEC80000      24K r-x--  /usr/lib/libgen.so.1\nFECEE000      16K rwx--  /usr/lib/libresolv.so.2\nFED00000     768K r-x--  /app/local/padl/lib/libdb-4.2.so\nFEE22000       8K rwx--  /app/local/ssl/lib/libssl.so.0.9.7\nFEE30000       8K rwx--\nFEE5A000       8K rwx--  /app/local/padl/lib/liblber.so.2.0.124\nFEE60000     192K r-x--  /app/local/padl/lib/libldap.so.2.0.124\nFEE9E000      24K rwx--  /app/local/padl/lib/libldap.so.2.0.124\nFEEB0000      56K r-x--  /app/local/padl/lib/nss_ldap.so.1\nFEECC000       8K rwx--  /app/local/padl/lib/nss_ldap.so.1\nFEECE000      40K rwx--  /app/local/padl/lib/nss_ldap.so.1\nFEEE0000      24K r-x--  /usr/lib/nss_files.so.1\nFEEF6000       8K rwx--  /usr/lib/nss_files.so.1\nFEF00000      16K rw---\n:\nFF1A6000       8K rwx--  /usr/lib/libpthread.so.1\nFF1B0000      40K r-x--  /usr/lib/libsocket.so.1\nFF1E6000       8K rwx--  /usr/lib/librt.so.1\nFF202000       8K rwx--  /usr/lib/libsendfile.so.1\nFF210000     288K r-x--  /opt/Apache/web/httpd/bin/libapr-1.so.0\nFF2BE000      16K rwx--  /opt/Apache/web/httpd/bin/libexpat.so.0\nFF2FA000      16K rwx--  /opt/Apache/web/httpd/bin/libapriconv.so.0\nFF310000     176K r-x--  /opt/Apache/web/httpd/bin/libaprutil-1.so.0\n\nFF396000       8K rwx--  /usr/lib/libm.so.1\nFF3A0000       8K r-x--  /usr/platform/sun4u-us3/lib/libc_psr.so.1\n\nFF3F0000       8K rwx--  /usr/lib/ld.so.1\nFF3FA000       8K rwx--  /usr/lib/libdl.so.1\nFFBF8000      32K rwx--    [ stack ]\n total     11616K\n--------------------------------------\n\nStill doesn't have much clue on this. Do Apache 1.3 and Apache2.x might link against different ldap or nss related shared libs?\n\nthanks,\ndave\n\n\n", "count": 16, "id": 114854, "time": "2008-03-21T13:46:39Z", "creator": "davelee53@yahoo.com", "creation_time": "2008-03-21T13:46:39Z", "is_private": false}, {"count": 17, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "text": "So we see, that you are loading \"foreign\" ldap libs. It's likely that they are not compatible with the Solaris nsswitch.\n\nIf you want to understand how to avoid it (and why this doesn't happen for httpd 1.3) you might need to find out, why the libs from /app/local/padl/lib get loaded. You could e.g. use ldd or better \"ldd -v\" against the various libs in pmap to find out, which one loads those unwanted libs.\n\nIf you think you don't need them and you don't want them, make sure that you don't have /app/local/padl/lib in your LD_LIBRARY_PATH (not only during runtime, but also during compilation). Then those libs should not have a chance to get included.\n\nThe only exception would be if one of the three other none system libs, that you use during build\n\n/app/local/lib/libgcc_s.so.1\n/app/local/ssl/lib/libcrypto.so.0.9.7\n/app/local/ssl/lib/libssl.so.0.9.7\n\nwere previously compiled with a dependency against any lib in /app/local/padl/lib. But those usually don't have a foreign dependency and also I assume you use the same ones for building your httpd 1.3.", "id": 114855, "time": "2008-03-21T14:14:51Z", "bug_id": 44639, "creation_time": "2008-03-21T14:14:51Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 44639, "is_private": false, "count": 18, "id": 114923, "time": "2008-03-24T12:29:54Z", "creator": "davelee53@yahoo.com", "creation_time": "2008-03-24T12:29:54Z", "text": "(In reply to comment #17)\n> So we see, that you are loading \"foreign\" ldap libs. It's likely that they are\n> not compatible with the Solaris nsswitch.\n> \n> If you want to understand how to avoid it (and why this doesn't happen for\n> httpd 1.3) you might need to find out, why the libs from /app/local/padl/lib\n> get loaded. You could e.g. use ldd or better \"ldd -v\" against the various libs\n> in pmap to find out, which one loads those unwanted libs.\n> \n> If you think you don't need them and you don't want them, make sure that you\n> don't have /app/local/padl/lib in your LD_LIBRARY_PATH (not only during\n> runtime, but also during compilation). Then those libs should not have a chance\n> to get included.\n> \n> The only exception would be if one of the three other none system libs, that\n> you use during build\n> \n> /app/local/lib/libgcc_s.so.1\n> /app/local/ssl/lib/libcrypto.so.0.9.7\n> /app/local/ssl/lib/libssl.so.0.9.7\n> \n> were previously compiled with a dependency against any lib in\n> /app/local/padl/lib. But those usually don't have a foreign dependency and also\n> I assume you use the same ones for building your httpd 1.3.\n> \n\nThanks for the hints. Yes those libs in /app/local/padl/lib do look suspicous. \nThe Apache I built is against the Solaris 9 /usr/lib/libldap.so.5. The /app/local/padl/lib is not in the LD_LIBRARY_PATH nor in compilation. I wonder if other PATHs get set besides LD_LIBRARY_PATH when Apache is started by root but ran as the user specified in the \"User\" directive in httpd.conf.\n\nAs I mentioned, the current work around is to start the Apache as non-root user on port other than 80. So I think either the non-root user has different LD_LIBRARY_PATH set comparing to root or it didn't even (need to) contact ldap server for group privilege validation.\nBut again, as for Apache 1.3, it's still unclear to me. Maybe Apache1.3 is loading the Solaris system libldap.so or nss_ldap from /usr/lib.\n\nTo clarify this, I am asking the customer to run the pmap against a child process id in the following working scenarios:\n1. Run as non-root user on port 8080\n2. Run Apache 1.3\nHopefully the pmap results will indicate different libldap.so or nss_ldap are used and that should explain the cause of this issue.\nthanks,\ndave"}, {"count": 19, "tags": [], "creator": "nick@webthing.com", "text": "Have you run ldd on the relevant binaries (httpd and libaprutil and indeed mod_ldap) to check what ldap libs are bing loaded?\n\nAnd indeed whether you get the same outcome for the case that crashes and the normal-user-on-8080 case that works, bearing in mind that the two might have different paths, library paths, or even mounts.", "id": 116483, "time": "2008-05-11T09:33:49Z", "bug_id": 44639, "creation_time": "2008-05-11T09:33:49Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "bug_id": 44639, "attachment_id": null, "text": "(In reply to comment #19)\n> Have you run ldd on the relevant binaries (httpd and libaprutil and indeed\n> mod_ldap) to check what ldap libs are bing loaded?\n> \n> And indeed whether you get the same outcome for the case that crashes and the\n> normal-user-on-8080 case that works, bearing in mind that the two might have\n> different paths, library paths, or even mounts.\n> \n\nThe issue turned out is the older version of ldap libs (libldap.so.2.0.124 and nss_ldap.so.1) from PADL is replacing the newer ones coming from Solaris 9.  And those ldap libs were built against older libc.so. \nSo the issue is the mismatched shared lib that is causing the Apache to fail in calling the system call nss_search() -- the nss_search() in turns calls the nss_ldap.so.1 to connect the LDAP server.\n  The non-admin user worked, I guess is because the Apache doesn't need to find the group privileges for that user so it didn't even invoke the ldap shared libs.\n\nThanks for all the responses.\ndave", "id": 116832, "time": "2008-05-19T14:57:18Z", "creator": "davelee53@yahoo.com", "creation_time": "2008-05-19T14:57:18Z", "is_private": false}]