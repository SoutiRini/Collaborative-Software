[{"count": 0, "tags": [], "creator": "oliver.schoett@capgemini-sdm.com", "attachment_id": null, "is_private": false, "id": 124088, "time": "2009-01-15T05:19:32Z", "bug_id": 46538, "creation_time": "2009-01-15T05:19:32Z", "text": "The Apache folks are about to fix the problem that ETags are the same for compressed and uncompressed versions of a resource:\n\n   https://issues.apache.org/bugzilla/show_bug.cgi?id=39727\n\nTomcat 6.0.18 suffers from the same problem.\n\nThe effect is that if a caching proxy holds a gzipped version of a resource and is asked by a client for an unzipped version, it requests one from the server with the ETag of the cached version.  The server sees that the ETag of the version it would send out is the same as that of the version the cache already holds and tells the cache that its version is OK (response status code 304).  In the case of a Squid cache, this results in a gzipped version to be sent to the client, and this breaks in IE6 and IE7 when they are configured to use the HTTP 1.0 protocol.\n\nSquid has been provided with a work-around option for this problem:\n\n   http://www.squid-cache.org/Versions/v2/2.6/cfgman/broken_vary_encoding.html\n\nbut we should not rely on caches world-wide to provide a work-around for a Tomcat bug."}, {"count": 1, "tags": [], "text": "Created attachment 23190\nPatch to correct ETags and Vary headers for compression\n\nHere is a patch that corrects the ETag and Vary behaviour:\n\n- ETags differ for gzipped and ungzipped output\n\n- Vary: Accept-Encoding ist sent whenever a gzipped version is available\n\nThe latter change makes it possible for users of differently capable browsers to receive gzipped and ungzipped reponses through the same proxy cache. Previously, an ungzipped cached version would be delivered also to compression-capable browsers, because the cache could not know there was a gzipped version available.\n\nThis patch will be put in production on an e-commerce website shortly.", "attachment_id": 23190, "bug_id": 46538, "id": 124461, "time": "2009-01-29T03:42:56Z", "creator": "oliver.schoett@capgemini-sdm.com", "creation_time": "2009-01-29T03:42:56Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 46538, "attachment_id": null, "id": 124462, "time": "2009-01-29T03:56:52Z", "creator": "oliver.schoett@capgemini-sdm.com", "creation_time": "2009-01-29T03:56:52Z", "is_private": false, "text": "Here is the new behaviour when a resource is fetched without and with compression enabled:\n\ncurl -v -HPragma: http://tomcat6.example.com/web3/js/hbx.js\n\n> GET /web3/js/hbx.js HTTP/1.1\n> User-Agent: curl/7.16.3 (i686-pc-cygwin) libcurl/7.16.3 OpenSSL/0.9.8i zlib/1.2.3 libssh2/0.15-CVS\n> Host: tomcat6.example.com\n> Accept: */*\n\n< Server: Apache-Coyote/1.1\n< Expires: Thu, 29 Jan 2009 13:27:07 GMT\n< ETag: W/\"15453-1233218608000\"\n< Last-Modified: Thu, 29 Jan 2009 08:43:28 GMT\n< Vary: Accept-Encoding\n< Content-Type: text/javascript\n< Content-Length: 15453\n< Date: Thu, 29 Jan 2009 11:27:07 GMT\n\ncurl -v -HPragma: --compressed http://tomcat6.example.com/web3/js/hbx.js | wc -c\n\n> GET /web3/js/hbx.js HTTP/1.1\n> User-Agent: curl/7.16.3 (i686-pc-cygwin) libcurl/7.16.3 OpenSSL/0.9.8i zlib/1.2.3 libssh2/0.15-CVS\n> Host: tomcat6.example.com\n> Accept: */*\n> Accept-Encoding: deflate, gzip\n\n< HTTP/1.1 200 OK\n< Server: Apache-Coyote/1.1\n< Expires: Thu, 29 Jan 2009 13:26:48 GMT\n< ETag: W/\"15453-1233218608000-gz\"\n< Last-Modified: Thu, 29 Jan 2009 08:43:28 GMT\n< Vary: Accept-Encoding\n< Content-Type: text/javascript\n< Transfer-Encoding: chunked\n< Content-Encoding: gzip\n< Date: Thu, 29 Jan 2009 11:26:48 GMT\n\nNote that the first response also has a Vary header, and the second response has a different ETag.\n\nWhen this patch is employed, the work-around configured by default in Squid caches (broken_vary_encoding) is no longer necessary.  If you want to avoid this work-around for your server, you might configure a server string that does NOT start with \"Apache\".\n"}, {"count": 3, "tags": [], "creator": "oliver.schoett@capgemini-sdm.com", "attachment_id": null, "id": 124485, "time": "2009-01-29T09:05:04Z", "bug_id": 46538, "creation_time": "2009-01-29T09:05:04Z", "is_private": false, "text": "Warning: the patch I submitted does not work well in connection with the Akamai CDN.\n\nFirst, the Akamai edge servers transparently decompress content without changing the ETag (so that compressed and uncompressed versions are sent with the same Etag).\n\nSecond, the Akamai servers treat responses with Vary: Accept-Encoding but without Content-Encoding header as uncacheable (ESConfigGuide-Customer, p. 54, Note: TTL and the Vary Header).  My patch triggers this in the case of uncompressed responses (due to missing client capability) that the server would be willing to compress."}, {"count": 4, "tags": [], "bug_id": 46538, "attachment_id": null, "text": "Thanks for the patch. I have applied a modified version of it to trunk that also  extended it to the NIO and APR connectors.\n\nThe extended patch has been proposed for 6.0.x", "id": 126298, "time": "2009-04-16T12:34:10Z", "creator": "markt@apache.org", "creation_time": "2009-04-16T12:34:10Z", "is_private": false}, {"count": 5, "tags": [], "text": "I disagree with this. Regardless on what happens with the transport, the entity does not change once it is decoded.\n-1 for this \"fix\".", "is_private": false, "id": 126305, "creator": "remm@apache.org", "time": "2009-04-16T13:57:58Z", "bug_id": 46538, "creation_time": "2009-04-16T13:57:58Z", "attachment_id": null}, {"text": "The I suggest you read section 14.19 of RFC 2616 that makes it quite clear ETags are per variant not per resource.", "tags": [], "bug_id": 46538, "attachment_id": null, "count": 6, "id": 126307, "time": "2009-04-16T14:16:56Z", "creator": "markt@apache.org", "creation_time": "2009-04-16T14:16:56Z", "is_private": false}, {"count": 7, "tags": [], "text": "Well, that does not sound very smart (and I had read that on the httpd bug, sigh ...). But overall, I do think the patch is bad (see status file).", "attachment_id": null, "bug_id": 46538, "id": 126308, "time": "2009-04-16T14:35:15Z", "creator": "remm@apache.org", "creation_time": "2009-04-16T14:35:15Z", "is_private": false}, {"count": 8, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 126320, "time": "2009-04-17T01:44:38Z", "bug_id": 46538, "creation_time": "2009-04-17T01:44:38Z", "text": "I've reverted the fix from trunk and withdrawn the backport proposal as whilst it fixed this issue, it introduced others."}, {"count": 9, "tags": [], "text": "Yes, sorry, the patch is indeed not sufficient. It fixes the \"sending\" side of the problem in that it sends out ETags that conform to the spec.  However, I now understand that we also need to fix the \"receiving\" side of the problem, that is, deal with the ETags wet get back in If-Match, If-None-Match and If-Range header fields and make appropriate responses.\n\nThis is much harder to fix, as currently the decision \"can I compress or not\" is made at a completely different point from the base ETag calculation, and yet we must know the set of ETags of the variants we are capable of producing to handle the If-... Requests involving ETags.\n\nSince my client needed a fix urgently (IE users behind proxy caches did receive unusable JavaScript files), I have removed ETag generation and handling completely from his production Tomcats (can supply patch if there is interest).  This way, the logic for \"304 Not Modified\" responses relies entirely on If-Modified-Since, which works well enough if you keep the date stamps between identical copies of a resource on different servers of a farm in sync.\n\n--\n\nBTW, the part of RFC2616 that makes it most clear that ETags are per variant is in Section 13.6; for example:\n\n   If an entity tag was assigned to a cached representation,\n   the forwarded request SHOULD be conditional and include\n   the entity tags in an If-None-Match header field from all\n   its cache entries for the resource. This conveys to the\n   server the set of entities currently held by the cache,\n   so that if any one of these entities matches the requested\n   entity, the server can use the ETag header field in its\n   304 (Not Modified) response to tell the cache which entry\n   is appropriate.\n\nThis algorithm makes no sense unless ETags are per variant.  Unfortunately, the section that defines ETags (14.19) says nothing about this.", "is_private": false, "id": 126330, "creator": "oliver.schoett@capgemini-sdm.com", "time": "2009-04-17T07:59:02Z", "bug_id": 46538, "creation_time": "2009-04-17T07:59:02Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 46538, "attachment_id": null, "id": 126332, "time": "2009-04-17T08:17:37Z", "creator": "remm@apache.org", "creation_time": "2009-04-17T08:17:37Z", "is_private": false, "text": "Yes, that's my point, the only solution I see in Tomcat 6 about this is an option to remove the etag if compression is active for the request.\n\nAnd about your spec quoting, it is great to adhere to specs and stuff, but it might be that clients apparently only really support content-encoding, which is not supposed to be used for on-the-fly compression (but is, since I am very not sure about support for transfer-encoding which is the proper way to do that; originally, I had planned all sorts of filters which would be added according to the T-E header, but in the end, the only thing which was workable then was a hardcoded gzip output filter which used the content-encoding header). You have to do things which work ..."}, {"count": 11, "tags": [], "text": "The current state of T-E support in the browsers is:\n- Opera advertises T-E support, works with T-E\n- Moziila doesn't advertise T-E support, works with T-E\n- IE doesn't advertise T-E support, doesn't work with T-E\n\nMy reading of the C-E discussion above is that any solution is a hack that will have an issue somewhere. T-E is the right solution. Moving from the current status quo is as likely or more likely to cause issues compared to the current behaviour which while wrong, is at least understood. We could provide a handful of options to allow users to configure the various hacks but this would add a lot of code (and possibly  complexity) to the critical path.\n\nI would like to use T-E by default and fallback to C-E if T-E is not supported. However, the patchy browser support means that another set of options would be required to give folks a reasonable chance of configuring a 'good' behaviour for most clients.\n\nMy inclination is to mark this issue as WONTFIX with the longer term plan being implementing T-E and switching to T-E once the browser support is reasonable.", "is_private": false, "id": 126608, "creator": "markt@apache.org", "time": "2009-04-29T03:00:51Z", "bug_id": 46538, "creation_time": "2009-04-29T03:00:51Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 46538, "attachment_id": null, "id": 126619, "time": "2009-04-29T05:39:05Z", "creator": "remm@apache.org", "creation_time": "2009-04-29T05:39:05Z", "is_private": false, "text": "I think I used mostly IE when I tried it back then. Did you test with IE 7 and 8 ?\n\nI agree with this kind of browser support, it is still not doable to use T-E :("}, {"count": 13, "tags": [], "bug_id": 46538, "attachment_id": null, "id": 126621, "time": "2009-04-29T06:01:47Z", "creator": "markt@apache.org", "creation_time": "2009-04-29T06:01:47Z", "is_private": false, "text": "IE7 and IE8 - no joy with T-E"}, {"count": 14, "tags": [], "bug_id": 46538, "is_private": false, "id": 126627, "attachment_id": null, "creator": "remm@apache.org", "creation_time": "2009-04-29T10:16:59Z", "time": "2009-04-29T10:16:59Z", "text": "Maybe something could be done when the client advertises the T-E, and drop to C-E if it does not ?"}, {"text": "As suggested in comment 11 I am going to resolve this as WONTFIX.\n\nMy reasons are:\n- any change to use T-E is as likely or more likely to cause breakage\n- patchy browser support means another handful of options would be required to give sys admins a reasonable chance of configuring a working configuration compatible with users and their combination of proxies and/or caches\n- I believe the complexity this would add to the critical path isn't worth the benefit\n\nIn my view the tipping point will be when IE supports T-E whether or not it advertises support for it. At that point I would be all for switching to the spec compliant way of doing compression.", "tags": [], "bug_id": 46538, "attachment_id": null, "count": 15, "id": 130254, "time": "2009-09-09T10:00:36Z", "creator": "markt@apache.org", "creation_time": "2009-09-09T10:00:36Z", "is_private": false}, {"count": 16, "tags": [], "creator": "oliver.schoett@capgemini-sdm.com", "attachment_id": 24245, "is_private": false, "id": 130286, "time": "2009-09-10T07:17:08Z", "bug_id": 46538, "creation_time": "2009-09-10T07:17:08Z", "text": "Created attachment 24245\nDisable sending and interpreting ETags (needs to be made into an option)\n\nNot fixing this bug makes it impossible to enable gzip compression on public web sites, because IE6 users behind Squid 2.6 and 2.7 proxies will receive broken content:  IE6 by default does not allow compression behind a proxy, but Squid 2.6+ will deliver gzipped content that it already has in the cache, and which is not accepted by IE.\n\nSquid has implemented the option broken_vary_encoding to work around this, which by default is enabled for servers whose header begins with \"Apache\".  However, this option is buggy (http://www.squid-cache.org/bugs/show_bug.cgi?id=2574), and Tomcat should not require work-arounds by others for its broken behavior.\n\nThus, an option is needed to disable ETags to make public sites work reliably.  What needs to be done is contained in the patch, which disables sending and interpreting ETags.  This patch (against 6.0.18) has been used successfully in production since February on a German e-commerce site (90 Mill. PV/month).  There is no performance impact, because 304 responses are still generated according to the \"If-Modified-Since\" logic. Unfortunately, I do not know Tomcat well enough to make this a configurable option."}, {"count": 17, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 130297, "time": "2009-09-10T14:43:14Z", "bug_id": 46538, "creation_time": "2009-09-10T14:43:14Z", "text": "Since ETag handling is wholly within the DefaultServlet, just add an option to that servlet. You can use the DefaultServlet's readOnly option as a template."}]