[{"count": 0, "attachment_id": null, "bug_id": 27773, "is_private": false, "id": 54219, "time": "2004-03-18T12:53:51Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-03-18T12:53:51Z", "tags": [], "text": "I have tried to solve a few problems concerning hyphenation:\n- show the '-' at the end of the hyphenated lines\n- use the fo:hyphenate property to enable hyphenation, instead of the alignment\n- specify the hyphenation character using the fo:hyphenation-character property\n\nWith this simple .fo file it is possible to see that before changes the result \nis the opposite of what expected: hyphenation is done when it shoud not, and \nnot when it shoud.\n\n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\n<fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n  <fo:layout-master-set>\n    <fo:simple-page-master master-name=\"simple\" margin=\"0.5in\">\n      <fo:region-body margin=\"1in\"/>\n    </fo:simple-page-master>\n  </fo:layout-master-set>\n  <fo:page-sequence master-reference=\"simple\">\n    <fo:flow flow-name=\"xsl-region-body\">\n      <fo:block>The following block has language=\"it\", hyphenate=\"false\" and \ntext-align=\"justify\"; it should NOT be hyphenated.</fo:block>\n      <fo:block start-indent=\"0.2in\" end-indent=\"0.2in\" language=\"it\" \nhyphenate=\"false\" text-align=\"justify\">Lunghissime parolone esagerevoli \ncostringerebbero sillabazione auspicabilmente: precipitevolissimevolmente \ntransatlantico catastrofico.</fo:block>\n      <fo:block>The following block has language=\"it\", hyphenate=\"true\" and \ntext-align=\"start\"; it should be hyphenated.</fo:block>\n      <fo:block start-indent=\"0.2in\" end-indent=\"0.2in\" language=\"it\" \nhyphenate=\"true\" text-align=\"start\">Lunghissime parolone esagerevoli \ncostringerebbero sillabazione auspicabilmente: precipitevolissimevolmente \ntransatlantico catastrofico.</fo:block>\n      <fo:block>The following block has language=\"it\", hyphenate=\"true\", text-\nalign=\"justify\" and hyphenation-character=\"_\".</fo:block>\n      <fo:block start-indent=\"0.2in\" end-indent=\"0.2in\" language=\"it\" \nhyphenate=\"true\" text-align=\"justify\" hyphenation-character=\"_\">Lunghissime \nparolone esagerevoli costringerebbero sillabazione auspicabilmente: \nprecipitevolissimevolmente transatlantico catastrofico.</fo:block>\n    </fo:flow>\n  </fo:page-sequence>\n</fo:root>\n\n\nThis is the diff:\n\nIndex: xml-fop/src/java/org/apache/fop/fo/PropertyManager.java\n===================================================================\nRCS file: /home/cvspublic/xml-\nfop/src/java/org/apache/fop/fo/PropertyManager.java,v\nretrieving revision 1.24\ndiff -w -u -r1.24 PropertyManager.java\n--- xml-fop/src/java/org/apache/fop/fo/PropertyManager.java\t27 Feb 2004 \n17:57:40 -0000\t1.24\n+++ xml-fop/src/java/org/apache/fop/fo/PropertyManager.java\t18 Mar 2004 \n12:43:55 -0000\n@@ -494,6 +494,9 @@\n             textInfo.textTransform\n                     = this.propertyList.get(PR_TEXT_TRANSFORM).getEnum();\n \n+            textInfo.hyphChar = this.propertyList.get(\n+                                  PR_HYPHENATION_CHARACTER).getCharacter();\n+\n         }\n         return textInfo;\n     }\nIndex: xml-fop/src/java/org/apache/fop/fo/TextInfo.java\n===================================================================\nRCS file: /home/cvspublic/xml-fop/src/java/org/apache/fop/fo/TextInfo.java,v\nretrieving revision 1.6\ndiff -w -u -r1.6 TextInfo.java\n--- xml-fop/src/java/org/apache/fop/fo/TextInfo.java\t27 Feb 2004 17:57:40 -\n0000\t1.6\n+++ xml-fop/src/java/org/apache/fop/fo/TextInfo.java\t18 Mar 2004 12:43:55 -\n0000\n@@ -50,8 +50,8 @@\n     /** fo:letter-spacing property */\n     public SpaceVal letterSpacing;\n \n-    /** can this text be hyphenated? */\n-    public boolean bCanHyphenate = true;\n+    /* the hyphenation character to be used */\n+    public char hyphChar = '-';\n \n     /** fo:text-decoration property: is text underlined? */\n     public boolean underlined = false;\nIndex: xml-fop/src/java/org/apache/fop/layoutmgr/LineLayoutManager.java\n===================================================================\nRCS file: /home/cvspublic/xml-\nfop/src/java/org/apache/fop/layoutmgr/LineLayoutManager.java,v\nretrieving revision 1.15\ndiff -w -u -r1.15 LineLayoutManager.java\n--- xml-fop/src/java/org/apache/fop/layoutmgr/LineLayoutManager.java\t18 Mar \n2004 00:22:40 -0000\t1.15\n+++ xml-fop/src/java/org/apache/fop/layoutmgr/LineLayoutManager.java\t18 Mar \n2004 12:44:00 -0000\n@@ -20,6 +20,7 @@\n \n import org.apache.fop.datatypes.Length;\n import org.apache.fop.fo.PropertyManager;\n+import org.apache.fop.fo.Constants;\n import org.apache.fop.fo.properties.CommonMarginBlock;\n import org.apache.fop.fo.properties.CommonHyphenation;\n import org.apache.fop.layout.hyphenation.Hyphenation;\n@@ -209,7 +210,7 @@\n \n                     // This break position doesn't fit\n                     // TODO: If we are in nowrap, we use it as is!\n-                    if (bTextAlignment == TextAlign.JUSTIFY || prevBP == \nnull) {\n+                    if (hyphProps.hyphenate == Constants.TRUE) {\n                         // If we are already in a hyphenation loop, then stop.\n \n                         if (inlineLC.tryHyphenate()) {\nIndex: xml-fop/src/java/org/apache/fop/layoutmgr/TextLayoutManager.java\n===================================================================\nRCS file: /home/cvspublic/xml-\nfop/src/java/org/apache/fop/layoutmgr/TextLayoutManager.java,v\nretrieving revision 1.12\ndiff -w -u -r1.12 TextLayoutManager.java\n--- xml-fop/src/java/org/apache/fop/layoutmgr/TextLayoutManager.java\t17 Mar \n2004 03:37:32 -0000\t1.12\n+++ xml-fop/src/java/org/apache/fop/layoutmgr/TextLayoutManager.java\t18 Mar \n2004 12:44:02 -0000\n@@ -46,12 +46,14 @@\n         private short iBreakIndex;\n         private short iWScount;\n         private MinOptMax ipdArea;\n+        private boolean bHyphenated;\n         public AreaInfo(short iSIndex, short iBIndex, short iWS,\n-                 MinOptMax ipd) {\n+                 MinOptMax ipd, boolean bHyph) {\n             iStartIndex = iSIndex;\n             iBreakIndex = iBIndex;\n             iWScount = iWS;\n             ipdArea = ipd;\n+            bHyphenated = bHyph;\n         }\n     }\n \n@@ -107,7 +109,7 @@\n         // With CID fonts, space isn't neccesary currentFontState.width(32)\n         spaceCharIPD = foText.textInfo.fs.getCharWidth(' ');\n         // Use hyphenationChar property\n-        hyphIPD = foText.textInfo.fs.getCharWidth('-');\n+        hyphIPD = foText.textInfo.fs.getCharWidth(foText.textInfo.hyphChar);\n         // Make half-space: <space> on either side of a word-space)\n         SpaceVal ws = foText.textInfo.wordSpacing;\n         halfWS = new SpaceVal(MinOptMax.multiply(ws.getSpace(), 0.5),\n@@ -201,7 +203,7 @@\n         boolean bCanHyphenate = true;\n         int iStopIndex = iNextStart + hc.getNextHyphPoint();\n \n-        if (textArray.length < iStopIndex || foText.textInfo.bCanHyphenate == \nfalse) {\n+        if (textArray.length < iStopIndex) {\n             iStopIndex = textArray.length;\n             bCanHyphenate = false;\n         }\n@@ -396,7 +398,8 @@\n \n         // Position is the index of the info for this word in the vector\n         vecAreaInfo.add(\n-          new AreaInfo(iWordStart, iNextStart, iWScount, ipd));\n+          new AreaInfo(iWordStart, iNextStart, iWScount, ipd, \n+                       ((flags & BreakPoss.HYPHENATED) != 0)));\n         BreakPoss bp = new BreakPoss(\n                          new LeafPosition(this, vecAreaInfo.size() - 1));\n         ipdTotal = ipd;\n@@ -493,6 +496,11 @@\n             adjust = 1;\n         }\n         String str = new String(textArray, iStart, ai.iBreakIndex - iStart - \nadjust);\n+\n+        // add hyphenation character if the last word is hyphenated\n+        if (ai.bHyphenated) {\n+            str += foText.textInfo.hyphChar;\n+        }\n \n         if (\" \".equals(str)) {\n             word = new Space();"}, {"count": 1, "tags": [], "bug_id": 27773, "attachment_id": 10868, "text": "Created attachment 10868\npatch created using cvs diff", "id": 54258, "time": "2004-03-19T11:38:03Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-03-19T11:38:03Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 27773, "attachment_id": 10869, "is_private": false, "id": 54259, "time": "2004-03-19T11:39:59Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-03-19T11:39:59Z", "text": "Created attachment 10869\nFO sample file to test the behavior of fop before and after the patch"}, {"count": 3, "tags": [], "bug_id": 27773, "attachment_id": null, "id": 55291, "time": "2004-04-05T09:22:32Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-04-05T09:22:32Z", "is_private": false, "text": "Hi all\n\nI apologize for having posted some proposed changes without a line explaining \nwhat I was changing and why.\nReally sorry, I'm going to try and do it now.\n\nFirst of all, the condition now tested in the \nLineLayoutManager.getNextBreakPoss() to decide whether or not to try \nhyphenation is:\n  if (bTextAlignment == TextAlign.JUSTIFY || prevBP == null) {\n      ...\n  }\nSo hyphenation is tried for *every* justified block of text; only if \nthe \"language\" attribute is not set the getHyphenContext() method returns null \nand hyphenation is not actually done.\nMy suggestion is to change it so that the fo property hyphenate (7.9.4 in the \nrecommendation, and already implemented in the CommonHyphenation class) is \ntested instead:\n  if (hyphProps.hyphenate == Constants.TRUE) {\n      ...\n  }\nIn the TextInfo class there is a boolean attribute called \"bCanHyphenate\", but \nit is given a default value of true, and it is no more modified. It seems to \nme that it is quite useless.\nIs is used in the TextLayoutManager.getHyphenIPD() method:\n  if (textArray.length < iStopIndex || foText.textInfo.bCanHyphenate == false) \n{\n      ...\n  }\nbut this method is called only if context.tryHyphenate() is true; with my \nsuggested change, context.tryHyphenate() returns true only if the fo property \nhyphenate is true, and so it is no more necessary to test \nfoText.textInfo.bCanHyphenate.\n\nThe second problem is that the hyphenation character is not shown: to fix this \nI added in the AreaInfo class (which stores information about the area that \nwill be generated) a boolean attribute \"bHyphenated\".\nIs is set according to the value of the flags of the corresponding BreakPoss, \nand it is tested in the TextLayoutManager.addAreas() method to decide whether \nto add the hyphen.\n\nLast (and least): I tried to implement the fo property hyphenation-character \n(7.9.5 in the recommendation).\nAs it applies to blocks, I thought to store it as a character variable in the \nTextInfo class, with initial value \"-\".\nIt is set in the PropertyManager.getTextLayoutProps() method, together with \nthe other TextInfo attribute.\nIs is used to calculate the hyphIPD in the TextLayoutManager constructor, and \nin the addAreas method.\n\nBye\n    Luca"}, {"count": 4, "tags": [], "text": "Sorry, I'm here again (hope I am not making too much a mess!) :-)\n\nI'm going to attach an updated proposed patch, as I noticed there was an error \nin the one I posted before.\nIn the TextLayoutManager.addAreas() method, the hyphen size must be added to \nthe total inline progression dimension of the line *before* the adjustment \ncalculation; this involves also moving a few lines of code.\n\nBye\n    Luca", "attachment_id": null, "id": 55332, "creator": "lfurini@cs.unibo.it", "time": "2004-04-05T16:40:13Z", "bug_id": 27773, "creation_time": "2004-04-05T16:40:13Z", "is_private": false}, {"count": 5, "text": "Created attachment 11138\nupdated diff", "bug_id": 27773, "is_private": false, "id": 55333, "time": "2004-04-05T16:41:56Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-04-05T16:41:56Z", "tags": [], "attachment_id": 11138}, {"count": 6, "attachment_id": null, "bug_id": 27773, "is_private": false, "id": 55557, "time": "2004-04-09T09:28:43Z", "creator": "spepping@apache.org", "creation_time": "2004-04-09T09:28:43Z", "tags": [], "text": "Hi Luca,\n\nYour patch looks good. It works fine on your test fo, and it also\nworks fine on a test fo I had lying around.\n\nThere are a few things to note:\n\nAreaInfo.bHyphenated is identical to (flags & BreakPoss.HYPHENATED);\nai.ipdArea = MinOptMax.add(ai.ipdArea, new MinOptMax(hyphIPD)) is\nequivalent to bp.setStackingSize(MinOptMax.add(ipd, new\nMinOptMax(hyphIPD))). In other words, the same information is present\nin the BreakPoss, which is held by the LineLM. Unfortunately, this\ninformation is not accessible in the addAreas method of TextLM. This\nis so because posIter.next() returns the position member of the\nBreakPoss, not the BreakPoss itself. I believe that is an error in\nPositionIterator which eventually needs correction. For now your\nsolution is a good one.\n\nYour proposed TextInfo.hypChar is also known as\nLineLM.hyphProps.hyphenationChar. This information is not passed on to\nchildLMs and thus not known to TextLM. Storing it in TextInfo seems a\ngood idea; perhaps it is not even needed in hyphProps.\n\nIt is not completely clear that \n\n+        if (ai.bHyphenated) {\n+            str += foText.textInfo.hyphChar;\n+            ai.ipdArea = MinOptMax.add(ai.ipdArea, new MinOptMax(hyphIPD));\n+        }\n\nis always correct. This happens on the last AI returned by\nposIter.next(), which is not necessarily the last one in the line. But\nit is hard to conceive of an AI which is last in its LM and also\nhyphenated; therefore it will work. Ideally, the LineLM indicates\nwhich BP is the one ending the line; perhaps this needs correction at\nsome time.\n\nRegards, Simon\n\n"}, {"count": 7, "tags": [], "bug_id": 27773, "attachment_id": null, "id": 55778, "time": "2004-04-14T19:00:09Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-04-14T19:00:09Z", "is_private": false, "text": "Yes, I was quite surprised to see that all the information stored in the \nBreakPoss was \"thrown away\" before adding areas; I chose to duplicate the \nneeded values because this involved fewer and less radical changes.\n\nI have found another small bug concerning hyphenation in the \nHyphenationTree.hyphenate() method.\nBefore checking the exception list or using the algorithm, the \nfunction \"normalizes\" the word: during this phase, if a non-letter character \nis found null is returned.\n    // normalize word\n    char[] c = new char[2];\n    for (i = 1; i <= len; i++) {\n        c[0] = w[offset + i - 1];\n        int nc = classmap.find(c, 0);\n        if (nc < 0) {    // found a non-letter character, abort\n            return null;\n        }\n        word[i] = (char)nc;\n    }\nI think the condition (nc < 0) is too strong: at the moment words followed by \npunctuation marks, or in parenthesis, are not hyphenated.\n\nThis is how I tried to fix this problem:\n- non-letter characters at the beginning are not copied into word[]\n- if a non-letter character is found which is not at the beginning, it is not \ncopied into word[] and a boolean variable becomes true\n- if a letter-character is found when the variable is true, null is returned; \notherwise, word[] is used to find hyphenation points\n\nI have also added a little optimization: if, after the normalization and the \nnon-letter character removal, the word size is less than (remainCharCount + \npushCharCount), null is returned, without checking the exception list and \nperforming the algorithm.\n\nI'm going to attach the proposed patch and a test fo file which shows a few \nexamples.\n\nRegards\n\n    Luca"}, {"count": 8, "tags": [], "text": "Created attachment 11237\nproposed patch to HyphenationTree", "is_private": false, "id": 55779, "creator": "lfurini@cs.unibo.it", "time": "2004-04-14T19:02:13Z", "bug_id": 27773, "creation_time": "2004-04-14T19:02:13Z", "attachment_id": 11237}, {"count": 9, "attachment_id": 11238, "creator": "lfurini@cs.unibo.it", "is_private": false, "id": 55780, "time": "2004-04-14T19:03:27Z", "bug_id": 27773, "creation_time": "2004-04-14T19:03:27Z", "tags": [], "text": "Created attachment 11238\ntest fo file: words with punctuation marks and parenthesis"}, {"count": 10, "tags": [], "bug_id": 27773, "attachment_id": null, "id": 58364, "time": "2004-05-29T08:56:23Z", "creator": "spepping@apache.org", "creation_time": "2004-05-29T08:56:23Z", "is_private": false, "text": "Applied. Thanks.\n\nSimon\n"}, {"count": 11, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "creator": "gadams@apache.org", "is_private": false, "id": 155794, "time": "2012-04-01T06:41:12Z", "bug_id": 27773, "creation_time": "2012-04-01T06:41:12Z", "tags": [], "attachment_id": null}]