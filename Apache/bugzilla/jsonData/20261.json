[{"count": 0, "tags": [], "creator": "lnaber@pressenter.com", "attachment_id": null, "text": "I have a modification to the sql task that accepts the 'outputDelimiter' \nparameter so that the column delimiter can be changed, default is \",\".  Is it \npossible to submit a patch to the project?", "id": 37840, "time": "2003-05-27T13:41:59Z", "bug_id": 20261, "creation_time": "2003-05-27T13:41:59Z", "is_private": false}, {"count": 1, "tags": [], "text": "The output file contains the columns selected by src (SQL statements)\nseparated by comma. In some cases I need a different sparator, e.g.\nDB2 7.x on OS/390 needs comma plus SPACE as separator if I use\nthe output file to create SQL insert statements.  \n\nThere are only a very few loc to change in class SQLExec:\n\n-->let comma be a private string \n     /**\n     * Print output delimiter.\n     */\n    private String outputDelimiter = \",\";\n\n-->create the setter for outputDelimiter\n    /**\n     * Set the delimiter that separates the columns in the output. Defaults to \n&quot;;,&quot;;\n     * optional\n     *\n     * <p>For example, set this to \", \" for DB2 (OS/390).</p>\n     * \n     * @param outputDelimiter\n     */\n    public void setOutputDelimiter(String outputDelimiter) {\n        this.outputDelimiter = outputDelimiter;\n    }\n\n-->change 2 lines in the printResults() method\n...\n            if (showheaders) {\n                for (int col = 1; col < columnCount; col++) {\n                     line.append(md.getColumnName(col));\n<<del<<                line.append(\",\");\n>>ins>>                line.append(outputDelimiter);\n                }\n                line.append(md.getColumnName(columnCount));\n                out.println(line);\n                line = new StringBuffer();\n            }\n            while (rs.next()) {\n                boolean first = true;\n                for (int col = 1; col <= columnCount; col++) {\n                    String columnValue = rs.getString(col);\n                    if (columnValue != null) {\n                        columnValue = columnValue.trim();\n                    }\n\n                    if (first) {\n                        first = false;\n                    } else {\n<<del<<                line.append(\",\");\n>>ins>>                line.append(outputDelimiter);\n                    }\n                    line.append(columnValue);\n                }\n                out.println(line);\n                line = new StringBuffer();\n            }\n", "is_private": false, "id": 57518, "creation_time": "2004-05-16T16:15:57Z", "time": "2004-05-16T16:15:57Z", "creator": "derwerbebriefkasten@gmx.de", "bug_id": 20261, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 20261, "attachment_id": null, "id": 92504, "time": "2006-08-24T19:51:27Z", "creator": "imfthomp@yahoo.com", "creation_time": "2006-08-24T19:51:27Z", "is_private": false, "text": "ANT SQL task currently hard codes the column separator as a ',' which means:\n1) selects of data columns containing commas effectively introduces extra \ncolumns, randomly, according to appearance of commas in the data.\n2) separately, if you did want a different column separator you then have to do \nan extra processing step (replaceregexp comma to desired-separator).\n\nWorkaround for data containing commas where you want a desired-separator is:\n1) SQL - instead of SELECT data do SELECT REPLACE(data,',',COMMA_MARKER) on any \nselected column that might contain comma.\n2) REPLACEREGEXP on result of 1 to map commas from ANTs SQL output back to \ndesired-separator.\n3) REPLACEREGEXP on result of 2 to map COMMA_MARKER back to ','      \n\nAn alternative is to write your own SQL task.\n"}, {"count": 3, "tags": [], "text": "This bug is also described in a portion of Bug 29516.", "is_private": false, "bug_id": 20261, "id": 92514, "time": "2006-08-24T21:25:55Z", "creator": "imfthomp@yahoo.com", "creation_time": "2006-08-24T21:25:55Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 129317, "time": "2009-07-31T04:02:39Z", "bug_id": 20261, "creation_time": "2009-07-31T04:02:39Z", "is_private": false, "text": "*** Bug 26484 has been marked as a duplicate of this bug. ***"}, {"count": 5, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 129885, "time": "2009-08-24T06:32:33Z", "bug_id": 20261, "creation_time": "2009-08-24T06:32:33Z", "is_private": false, "text": "\n\n*** This bug has been marked as a duplicate of bug 35627 ***"}]