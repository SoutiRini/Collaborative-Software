[{"attachment_id": null, "tags": [], "creator": "calestyo@scientia.net", "is_private": false, "count": 0, "id": 142070, "time": "2010-11-28T14:46:24Z", "bug_id": 50356, "creation_time": "2010-11-28T14:46:24Z", "text": "Throughout the documentation there are examples for matching file-extensions via <Files> or <FilesMatch>, e.g. in these places:\nhttp://httpd.apache.org/docs/2.2/mod/mod_mime.html#removeencoding\nhttp://httpd.apache.org/docs/2.2/mod/core.html#files\nhttp://httpd.apache.org/docs/2.2/mod/core.html#filesmatch\n\nMay I suggest to change all of them from matching:\n*.extension(s) (or the PCRE equivalent)\nto:\n*?.extensions(s) (or the PCRE equivalent)\n\nThis has the advantage that files like \".gz.asc\" would not be interpreted as gzipped+encrypted file, but just as encrypted one (assuming that asc stands for OpenPGP ASCII armor).\nA file like \".gz.asc\" is usually not a gzipped file, but rather the file \".gz\", which has been (e.g.) encrypted."}, {"count": 1, "tags": [], "text": "The examples that you reference use this syntax:\n\n<FilesMatch \"\\.(gif|jpe?g|png)$\">\n\nThat is, as I understand it, exactly what you're asking for. That is, it matches something.png but does not match something.png.asc\n\nThe $ in that regex explicitly means \"ends with.\"\n\nCan you clarify what problem you're trying to avoid, and how these examples don't avoid it? It certainly seems to me that they already do what you're asking for.", "is_private": false, "bug_id": 50356, "id": 142071, "time": "2010-11-28T16:11:46Z", "creator": "rbowen@apache.org", "creation_time": "2010-11-28T16:11:46Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "calestyo@scientia.net", "is_private": false, "text": "As I tried to explain in my example before:\n<FilesMatch \"\\.(gif|jpe?g|png)$\">\nwould also match the files\n\".gif\", \".jpg\", \".jpeg\" and \".png\" (without any charachters before the leading \".\", right?\n\nSuch files are however typically neither of one of the image types from above. And the same us true for other extensions like compression.", "id": 142072, "time": "2010-11-28T16:16:39Z", "bug_id": 50356, "creation_time": "2010-11-28T16:16:39Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "<FilesMatch \".*?\\.(asc|md5|sha1)$\"> seems like nit-picking to me.\n\nIf you really have that many hidden files in your DocumentRoot, with such strange names, you should consider cleaning up", "attachment_id": null, "bug_id": 50356, "id": 142078, "time": "2010-11-28T17:27:31Z", "creator": "i.galic@brainsware.org", "creation_time": "2010-11-28T17:27:31Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 50356, "is_private": false, "text": "Well of course, but IMHO it's more about what is in principle right and what not.\nAnd we should not \"forbid\" people having files like \".pdf\" just because it's uncommon.", "id": 142082, "time": "2010-11-28T17:47:56Z", "creator": "calestyo@scientia.net", "creation_time": "2010-11-28T17:47:56Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 50356, "is_private": false, "id": 142099, "time": "2010-11-28T20:26:55Z", "creator": "rbowen@apache.org", "creation_time": "2010-11-28T20:26:55Z", "tags": [], "text": "I'm obviously still missing the point of this ticket.\n\nThis is about files with names like '.gif'? Really?\n\nThe examples that we give in the documentation are intended to reflect the *most common* cases, not some bizarre edge cases. Who has files named .pdf?\n\nThese examples do not forbid these file names, they merely reflect the most common scenario, in the simplest possible example.\n\nOn the other hand, I'm still not clear on what you're suggesting as an alternative. Are you suggesting that the examples should *force* the filename to have something before the file extension, as in:\n\n<filesmatch .+\\.(gif|png|jpg)$>\n\nMy only complaint with that is that it makes the regex one step more complicated. And since regular expressions are in the top five list of things that people get confused about, I'm reluctant to make things one step more complicated.\n\nAm I understanding you correctly?"}, {"count": 6, "tags": [], "bug_id": 50356, "attachment_id": null, "is_private": false, "id": 142109, "time": "2010-11-29T05:47:11Z", "creator": "calestyo@scientia.net", "creation_time": "2010-11-29T05:47:11Z", "text": "Well I never claimed that this is a big issue,.. it's rather just a cosmetic issue to make things more perfect.\n\nIndeed it's probably bizarre with the example \".pdf\",... but just have a look at /etc/mime.types and the extensions listed there... for some of them it's definitely easily possible to have a plain \".<extension>\" file.\n\nYes your example (<filesmatch .+\\.(gif|png|jpg)$>) is what we IMHO suggest people.\n\n(or the non-PCRE alternative \"*?.(gif|png|jpg)\".\n\nAnd IMHO that's not very much more complicated...\n\nBut again,.. this issue is just perfectionism,... and not a major thingy worth to argue weeks ;)"}, {"count": 7, "tags": [], "creator": "rbowen@apache.org", "is_private": false, "text": "On further documentation within the docs team, I think we want to stick with documenting the common case, rather than complicating the examples to cover an uncommon one.", "id": 143910, "time": "2011-02-02T10:20:17Z", "bug_id": 50356, "creation_time": "2011-02-02T10:20:17Z", "attachment_id": null}]