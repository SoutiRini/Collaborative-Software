[{"count": 0, "tags": [], "creator": "ceki@apache.org", "attachment_id": null, "is_private": false, "id": 31825, "time": "2003-02-23T21:40:32Z", "bug_id": 17323, "creation_time": "2003-02-23T21:40:32Z", "text": "To reproduce the bug:\n\n1) Configure an SSL connector: \n\n  In server.xml, uncomment the SSL connector element and set its\n  minProcessors and maxProcessors attributes to small values, say 2.\n\n2) Create any trivial web-application. This web-app should contain a\nlarge file, for example a zipped archive file.\n\n3) Using IE or Netscape, attempt to download the zipped file with\nSSL. When prompted to open or save the file, cancel the request. This\nwill cause the following exception:\n\n2003-02-23 17:44:50 StandardWrapperValve[default]: Servlet.service() for \nservlet default threw exception\njava.net.SocketException: Connection reset by peer: socket write error\n        at java.net.SocketOutputStream.socketWrite0(Native Method)\n        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)\n        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)\n        at com.sun.net.ssl.internal.ssl.OutputRecord.a(DashoA6275)\n        at com.sun.net.ssl.internal.ssl.SSLSocketImpl.a(DashoA6275)\n        at com.sun.net.ssl.internal.ssl.AppOutputStream.write(DashoA6275)\n        at \norg.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer.doWrite\n(InternalOutputBuffer.java:668)\n        at org.apache.coyote.http11.filters.IdentityOutputFilter.doWrite\n(IdentityOutputFilter.java:160)\n        at org.apache.coyote.http11.InternalOutputBuffer.doWrite\n(InternalOutputBuffer.java:523)\n        at org.apache.coyote.Response.doWrite(Response.java:524)\n        at org.apache.coyote.tomcat4.OutputBuffer.realWriteBytes\n(OutputBuffer.java:384)\n        at org.apache.tomcat.util.buf.ByteChunk.flushBuffer(ByteChunk.java:360)\n        at org.apache.tomcat.util.buf.ByteChunk.append(ByteChunk.java:338)\n        at org.apache.coyote.tomcat4.OutputBuffer.writeBytes\n(OutputBuffer.java:411)\n        at org.apache.coyote.tomcat4.OutputBuffer.write(OutputBuffer.java:398)\n        at org.apache.coyote.tomcat4.CoyoteOutputStream.write\n(CoyoteOutputStream.java:110)\n        at org.apache.catalina.servlets.DefaultServlet.copyRange\n(DefaultServlet.java:1996)\n        at org.apache.catalina.servlets.DefaultServlet.copy\n(DefaultServlet.java:1745)\n        at org.apache.catalina.servlets.DefaultServlet.serveResource\n(DefaultServlet.java:1073)\n        at org.apache.catalina.servlets.DefaultServlet.doGet\n(DefaultServlet.java:506)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:247)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:193)\n        at qos.user.IdFilter.doFilter(IdFilter.java:60)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:213)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:193)\n        at org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:260)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:643)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:191)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:643)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke\n(AuthenticatorBase.java:493)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:641)\n        at org.apache.catalina.valves.CertificatesValve.invoke\n(CertificatesValve.java:246)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:641)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at org.apache.catalina.core.StandardContext.invoke\n(StandardContext.java:2415)\n        at org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:180)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:643)\n        at org.apache.catalina.valves.ErrorDispatcherValve.invoke\n(ErrorDispatcherValve.java:170)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:641)\n        at org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:172)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:641)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:174)\n        at \norg.apache.catalina.core.StandardPipeline$StandardPipelineValveContext.invokeNex\nt(StandardPipeline.java:643)\n        at org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:480)\n        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:995)\n        at org.apache.coyote.tomcat4.CoyoteAdapter.service\n(CoyoteAdapter.java:223)\n        at org.apache.coyote.http11.Http11Processor.process\n(Http11Processor.java:432)\n        at \norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnectio\nn(Http11Protocol.java:386)\n        at org.apache.tomcat.util.net.TcpWorkerThread.runIt\n(PoolTcpEndpoint.java:534)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:530)\n        at java.lang.Thread.run(Thread.java:536)\n\nIf you repeat step 3 several times, all connectors will become\ndisfunctional and Tomcat will eventually stop responding to HTTPS\nrequests.\n\nThe following bug can be reproduced on XP or Linux with JDK 1.4.1 and\nTomcat 4.1.18.\n\nIn addition, if your web-app uses log4j and struts 1.1x, and if you\nplace commons-logging and log4j.jar in WEB-INF/lib, then you will get\nthe following error in catalina.out (on top of the previous\njava.net.SocketException):\n\nFeb 23, 2003 5:44:46 PM org.apache.tomcat.util.log.CommonLogHandler log\nSEVERE: Caught exception executing \norg.apache.tomcat.util.net.TcpWorkerThread@1e4eb5b, terminating thread\norg.apache.commons.logging.LogConfigurationException: \norg.apache.commons.logging.LogConfigurationException: \norg.apache.commons.logging.LogCo\nnfigurationException: Class org.apache.commons.logging.impl.Log4JCategoryLog \ndoes not implement Log\n        at org.apache.commons.logging.impl.LogFactoryImpl.newInstance\n(LogFactoryImpl.java:555)\n        at org.apache.commons.logging.impl.LogFactoryImpl.getInstance\n(LogFactoryImpl.java:289)\n        at org.apache.commons.logging.LogFactory.getLog(LogFactory.java:409)\n        at org.apache.tomcat.util.log.CommonLogHandler.log\n(CommonLogHandler.java:97)\n        at org.apache.tomcat.util.log.Log.log(Log.java:198)\n        at org.apache.tomcat.util.log.Log.log(Log.java:192)\n        at org.apache.tomcat.util.net.PoolTcpEndpoint.log\n(PoolTcpEndpoint.java:427)\n        at org.apache.tomcat.util.net.TcpWorkerThread.runIt\n(PoolTcpEndpoint.java:510)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:530)\n        at java.lang.Thread.run(Thread.java:536)\nCaused by: org.apache.commons.logging.LogConfigurationException: \norg.apache.commons.logging.LogConfigurationException: Class org.apache.comm\nons.logging.impl.Log4JCategoryLog does not implement Log\n        at org.apache.commons.logging.impl.LogFactoryImpl.getLogConstructor\n(LogFactoryImpl.java:420)\n        at org.apache.commons.logging.impl.LogFactoryImpl.newInstance\n(LogFactoryImpl.java:548)\n        ... 9 more\nCaused by: org.apache.commons.logging.LogConfigurationException: Class \norg.apache.commons.logging.impl.Log4JCategoryLog does not implement L\nog\n        at org.apache.commons.logging.impl.LogFactoryImpl.getLogConstructor\n(LogFactoryImpl.java:416)\n        ... 10 more\n  \n\nThis makes the bug quite hard to identify, because the user who was\nusing log4j and commons-logging in lead to believe that the bug was in\n\"logging\" where as the bug is in the connector *and* in the deployment\nof commons-logging jar files:\nTOMCAT_HOME/server/lib/commons-logging.ar\nTOMCAT_HOME/commons/lib/commons-logging-api.jar\nWEB-INF/lib/commons-logging.jar\nWEB-INF/lib/log4j.jar."}, {"attachment_id": null, "tags": [], "creator": "paul@paulrowe.com", "is_private": false, "count": 1, "id": 33883, "time": "2003-03-27T01:40:44Z", "bug_id": 17323, "creation_time": "2003-03-27T01:40:44Z", "text": "I've got the same problem, but not with Https.  I've got an older linux machine \nthat sometimes swaps the tomcat process out.  Sometimes, linux takes a bit to \nswap tomcat back in, and in the interim, the client closes the socket.  As a \nresult, the HttpConnector blows up and tomcat will stop responding after.  I \nthink this stack trace blows the HttpConnector out of the water:\n\norg.apache.commons.logging.LogConfigurationException: \norg.apache.commons.logging.LogConfigurationException: \norg.apache.commons.logging.LogConfigurationException: Class \norg.apache.commons.logging.impl.SimpleLog does not implement Log\n\tat org.apache.commons.logging.impl.LogFactoryImpl.newInstance\n(LogFactoryImpl.java:530)\n\tat org.apache.commons.logging.impl.LogFactoryImpl.getInstance\n(LogFactoryImpl.java:285)\n\tat org.apache.commons.logging.LogFactory.getLog(LogFactory.java:401)\n\tat org.apache.tomcat.util.log.CommonLogHandler.log\n(CommonLogHandler.java:97)\n\tat org.apache.tomcat.util.log.Log.log(Log.java:198)\n\tat org.apache.tomcat.util.log.Log.log(Log.java:192)\n\tat org.apache.tomcat.util.log.Log.log(Log.java:174)\n\tat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:536)\n\tat java.lang.Thread.run(Thread.java:484)\n\nI've got 4.1.12 on an older linux kernal with jdk 1.3.1_01\n"}, {"count": 2, "tags": [], "bug_id": 17323, "attachment_id": null, "id": 33887, "time": "2003-03-27T02:35:00Z", "creator": "paul@paulrowe.com", "creation_time": "2003-03-27T02:35:00Z", "is_private": false, "text": "I just lost what I typed.  I have a feeling this bug is a commons-logging-api \nissue because LogConfigurationException is a runtime exception that is blowing \nthe HttpConnector out of the water.\n\nBasically, I have a feelign this bug is related to 17894.  I transplanted \ncommons-logging-api.jar from 4.1.18 into my 4.1.12 instance hoping that the \ncommons-logging-api.jar in 4.1.12 is bogus.  "}, {"count": 3, "tags": [], "bug_id": 17323, "is_private": false, "text": "This was fixed. (hint: report security issues, such as DoS attacks, to security\nat apache.org; you should know that, I think).", "id": 35535, "time": "2003-04-18T14:03:34Z", "creator": "remm@apache.org", "creation_time": "2003-04-18T14:03:34Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "\nI have tried to accurately describe the bug to make it easily reproducible. \nHint: think before shooting the messenger.\n\nIn any case, thank you for correcting the bug. However, you do realize that \nthere are two bugs, right? One related to the SSL connection and another \nrelated to logging. Was the latter bug also fixed?", "attachment_id": null, "bug_id": 17323, "id": 35603, "time": "2003-04-18T21:42:50Z", "creator": "ceki@apache.org", "creation_time": "2003-04-18T21:42:50Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 17323, "attachment_id": null, "id": 48063, "time": "2003-11-25T01:29:45Z", "creator": "mjericho@gmx.net", "creation_time": "2003-11-25T01:29:45Z", "is_private": false, "text": "Which build has this been fixed in?  It still seems to occur in Tomcat 4.1.27.\nIs there a patch or workaround available without going to a nightly build?"}]