[{"count": 0, "tags": [], "creator": "markt@apache.org", "is_private": false, "id": 181431, "attachment_id": 32539, "bug_id": 57653, "creation_time": "2015-03-02T10:26:30Z", "time": "2015-03-02T10:26:30Z", "text": "Created attachment 32539\nCrash log\n\nWith the patch below applied (it forces writes onto a separate thread when using HTTP upgrade) repeated running of the org.apache.coyote.http11.upgrade.TestUpgrade unit test eventually (after a few minutes on OSX and Linux) triggers a JVM crash.\n\nI suspect that a socket is closed in one thread while it is still in the Poller. However, I have not yet been able to identify the code path that triggers this.\n\nI have attached the crash report.\n\n\n\nIndex: java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java\n===================================================================\n--- java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java\t(revision 1663237)\n+++ java/org/apache/coyote/http11/upgrade/UpgradeServletOutputStream.java\t(working copy)\n@@ -21,11 +21,9 @@\n import javax.servlet.ServletOutputStream;\n import javax.servlet.WriteListener;\n \n-import org.apache.coyote.ContainerThreadMarker;\n import org.apache.juli.logging.Log;\n import org.apache.juli.logging.LogFactory;\n import org.apache.tomcat.util.ExceptionUtils;\n-import org.apache.tomcat.util.net.DispatchType;\n import org.apache.tomcat.util.net.SocketWrapperBase;\n import org.apache.tomcat.util.res.StringManager;\n \n@@ -114,11 +112,11 @@\n         synchronized (registeredLock) {\n             registered = true;\n             // Container is responsible for first call to onDataAvailable().\n-            if (ContainerThreadMarker.isContainerThread()) {\n-                socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n-            } else {\n+            //if (ContainerThreadMarker.isContainerThread()) {\n+            //    socketWrapper.addDispatch(DispatchType.NON_BLOCKING_WRITE);\n+            //} else {\n                 socketWrapper.registerWriteInterest();\n-            }\n+            //}\n         }\n \n         this.listener = listener;"}, {"count": 1, "tags": [], "bug_id": 57653, "text": "NIO2 also did double closes of the sockets running the websockets tests before the latest refactoring. Syncing closeSocket could be the only solution.", "id": 181432, "time": "2015-03-02T11:14:57Z", "creator": "remm@apache.org", "creation_time": "2015-03-02T11:14:57Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57653, "attachment_id": 32543, "text": "Created attachment 32543\nSafety patch for tcnative 1.1.x branch\n\nPlease patch tcnative with this and see if it catches the exact problem (likely \"invalid socket\"). Note that this is not a fix: it's only doing sanity-checking on the pollset and the sockets being manipulated.", "id": 181487, "time": "2015-03-03T21:24:25Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-03-03T21:24:25Z", "is_private": false}, {"count": 3, "tags": [], "text": "Thanks for the safety patch. I can see what it is doing (and it looks) right but the crash still occurs.", "is_private": false, "id": 181662, "creator": "markt@apache.org", "time": "2015-03-11T10:30:07Z", "bug_id": 57653, "creation_time": "2015-03-11T10:30:07Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 57653, "attachment_id": null, "is_private": false, "id": 181664, "time": "2015-03-11T12:10:44Z", "creator": "markt@apache.org", "creation_time": "2015-03-11T12:10:44Z", "text": "This is the line that is failing:\nhttp://svn.eu.apache.org/viewvc/tomcat/native/branches/1.1.x/native/src/poll.c?view=annotate#l365\n\nAPR_RING_REMOVE(s->pe, link);\n\nAnd the core dump shows s->pe is 0x0.\n\nSo that explains why it is crashing.\n\nI should be able to add another safety check for that to prevent the crash.\n\nNext step is to figure out how it gets into that state in the first place."}, {"attachment_id": null, "tags": [], "bug_id": 57653, "text": "I think I have got to the bottom of this.\n\nLooking at the docs for apr_pollset_poll [1], it states \"Multiple signalled conditions for the same descriptor may be reported in one or more returned apr_pollfd_t structures, depending on the implementation.\".\n\nThe crash is occurring when the socket is registered for read and write.\n\nThe tc-native code assumes that there is only ever one returned structure per descriptor.\n\nThe unit test + modified code I am using just happens - if the timing is right - to register a socket for read and write which almost instantly becomes available for both. It looks like OSX rerurns mutiple apr_pollfd_t structures for mutliple events on the same descriptor and that triggers the crash.\n\nI've thrown together a quick patch to test this theory and the unit test has been running in a loop now for 20+ minutes without crashing so I am fairly confident this is the issue.\n\n\n[1] http://apr.apache.org/docs/apr/1.4/group__apr__poll.html#ga6b31d7b3a7b2d356370403dd2b79ecf3", "count": 5, "id": 181670, "time": "2015-03-11T14:35:12Z", "creator": "markt@apache.org", "creation_time": "2015-03-11T14:35:12Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 57653, "text": "I had a look at the origins of that APR comment:\n\nhttp://svn.apache.org/viewvc?view=revision&revision=748951\n\nIt was especialy added to allow for an APR internal optimization when used in combination with the kqueue pollset implementation. And kqueue is the default pollset implof APR on OSX (and BSD).\n\nQuoting:\n\n\"Allow the kqueue pollset implementation to support checking both APR_POLLIN and\nAPR_POLLOUT for the same descriptor.  This requires separate kevent structures\nfor both conditions.\n\nImportantly, if both conditions are present, they will be returned in separate\napr_pollfd_t structures with this implementation (to avoid the cycles to coalesce \ninto the minimal number of structures).\"\n\nSo that fits nicely with your \"The crash is occurring when the socket is registered for read and write.\" OTOH that means it would not in an obvious way provide a reason if this problem occured on other platforms than OSX or BSD. Although the code comment doesn't limit itself to kqueue ...\n\nRegards,\n\nRainer", "id": 181672, "time": "2015-03-11T16:27:48Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2015-03-11T16:27:48Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 57653, "text": "Not knowing a great deal about the underlying issue...\n\nIf the fd is registered for both READ and WRITE, and we get multiple \"responses\" from apr_pollset_poll, are those happening (somewhat) simultaneously in two separate threads? So one of them fetches the fd, then the other fetches the same fd, then one of them removes the fd, then the other tries to do that same thing?\n\nOr do we need to examine the return from apr_pollset_poll to find out if we got the READ versus WRITE notification and make sure it's the one we were expecting?", "id": 181673, "time": "2015-03-11T18:20:13Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-03-11T18:20:13Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 57653, "text": "(In reply to Christopher Schultz from comment #7)\n> Not knowing a great deal about the underlying issue...\n\nIt is worth reading AprEndpoint.Poller.run() and the native implementation of poll()\n\n> If the fd is registered for both READ and WRITE, and we get multiple\n> \"responses\" from apr_pollset_poll, are those happening (somewhat)\n> simultaneously in two separate threads?\n\nNo.\n\n> So one of them fetches the fd, then\n> the other fetches the same fd, then one of them removes the fd, then the\n> other tries to do that same thing?\n\nNo. It happens sequentially in a single thread.\n\n> Or do we need to examine the return from apr_pollset_poll to find out if we\n> got the READ versus WRITE notification and make sure it's the one we were\n> expecting?\n\nThat is handled in Poller.run()\n\nThe fundamental problem is that poll() assumed that there would never be multiple notifications for the same socket. That assumption was not valid.", "id": 181674, "time": "2015-03-11T18:24:03Z", "creator": "markt@apache.org", "creation_time": "2015-03-11T18:24:03Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 57653, "text": "*** Bug 56313 has been marked as a duplicate of this bug. ***", "id": 181793, "time": "2015-03-15T23:48:39Z", "creator": "markt@apache.org", "creation_time": "2015-03-15T23:48:39Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 181794, "creation_time": "2015-03-15T23:53:25Z", "time": "2015-03-15T23:53:25Z", "bug_id": 57653, "text": "(In reply to Rainer Jung from comment #6)\n\n> So that fits nicely with your \"The crash is occurring when the socket is\n> registered for read and write.\" OTOH that means it would not in an obvious\n> way provide a reason if this problem occured on other platforms than OSX or\n> BSD. Although the code comment doesn't limit itself to kqueue ...\n\nBug 56313 which appears to be the same issue is happening on Windows. It also appears to be a standard web applicaion without concurrent read/write.\n\nThe poller event merging code added to APR probably needs a few tweaks:\n- enable it for all OS's\n- add some debug logging as to what events are being merged incase there is something else going on we haven't figured out yet.\n\nThe patch I mentioned in comment #5 has been applied to tomcat-native 1.1.x and I am planning a 1.1.33 release shortly.", "is_private": false}, {"count": 11, "tags": [], "creator": "markt@apache.org", "is_private": false, "id": 181803, "attachment_id": null, "bug_id": 57653, "creation_time": "2015-03-16T13:58:31Z", "time": "2015-03-16T13:58:31Z", "text": "This has been fixed for Tomcat 8.0.21 and tc-native 1.1.33 onwards. i.e. you need at least these versions of both components to avoid this bug.\n\nIt would be helpful if folks experiencing these issues on platforms other than OSX and BSD installed the above versions (when available) and enabled debug logging for AprEndpoint and reported any poller event merge messages that are logged."}, {"attachment_id": null, "tags": [], "bug_id": 57653, "is_private": false, "count": 12, "id": 181807, "time": "2015-03-16T14:57:27Z", "creator": "pavel.rekun@gmail.com", "creation_time": "2015-03-16T14:57:27Z", "text": "where can I download from the new version of tomcat and the dll? do I need to compile it myself?"}, {"count": 13, "tags": [], "text": "(In reply to Pavel from comment #12)\n> where can I download from the new version of tomcat and the dll? do I need\n> to compile it myself?\n\nI'm working on the tc-native 1.1.33 release at the moment. A release candidate will hopefully be available for testing later today (otherwise tomorrow). Keep an eye on the dev list for details.\n\nA 8.0.21 release will follow once we have a successful 1.1.33 release.", "is_private": false, "id": 181808, "creator": "markt@apache.org", "time": "2015-03-16T15:01:21Z", "bug_id": 57653, "creation_time": "2015-03-16T15:01:21Z", "attachment_id": null}, {"count": 14, "tags": [], "creator": "pavel.rekun@gmail.com", "is_private": false, "id": 182087, "attachment_id": null, "bug_id": 57653, "creation_time": "2015-03-25T09:21:17Z", "time": "2015-03-25T09:21:17Z", "text": "I saw that 1.1.33 was released - just wanted to confirm, can this be used with tomcat 7? or must i upgrade the tomcat as well? (I thought the fix was in the tc-native dll itself).\n\ncurrently using tomcat 7.0.54.\n\nThanks."}, {"count": 15, "tags": [], "bug_id": 57653, "text": "Upgrading tc-native will avoid the crash but may still experience a bug where Tomcat doesn't recognise that a connection is ready for read/write. You'll need Tomcat 7.0.60 onwards for that part of the fix.", "id": 182088, "time": "2015-03-25T09:29:38Z", "creator": "markt@apache.org", "creation_time": "2015-03-25T09:29:38Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 57653, "text": "Got it.\n\nDo you have an ETA for tomcat 7.0.60?\n\nThanks again for the quick reply.", "count": 16, "id": 182089, "time": "2015-03-25T09:42:30Z", "creator": "pavel.rekun@gmail.com", "creation_time": "2015-03-25T09:42:30Z", "is_private": false}]