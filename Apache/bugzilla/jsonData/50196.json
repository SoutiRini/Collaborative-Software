[{"count": 0, "tags": [], "creator": "matthias8283@gmx.at", "attachment_id": 26247, "text": "Created attachment 26247\nTestcase\n\nThere is a problem when using padding-left on a fo:inline element inside a repeating table header. The padding-left value is ignored on the repeated table header on the next page.", "id": 141330, "time": "2010-11-01T20:18:20Z", "bug_id": 50196, "creation_time": "2010-11-01T20:18:20Z", "is_private": false}, {"count": 1, "tags": [], "creator": "matthias8283@gmx.at", "is_private": false, "id": 142096, "attachment_id": 26351, "bug_id": 50196, "creation_time": "2010-11-28T19:38:16Z", "time": "2010-11-28T19:38:16Z", "text": "Created attachment 26351\nPatch"}, {"count": 2, "tags": [], "bug_id": 50196, "text": "Created attachment 26354\nPatch\n\nPatch didn't work when hyphenation was enabled. This is fixed now.", "id": 142148, "time": "2010-11-29T17:14:14Z", "creator": "matthias8283@gmx.at", "creation_time": "2010-11-29T17:14:14Z", "is_private": false, "attachment_id": 26354}, {"count": 3, "tags": [], "creator": "matthias8283@gmx.at", "is_private": false, "id": 142821, "attachment_id": 26419, "bug_id": 50196, "creation_time": "2010-12-17T15:42:18Z", "time": "2010-12-17T15:42:18Z", "text": "Created attachment 26419\nPatch\n\nPrevious patch didn't work when positions were unwrapped and wrapped in InlineStackingLayoutManager and getChangedKnuthElements() of InlineLayoutManager wasn't called.\nJunit layout testcases pass with no errors after applying the patch."}, {"count": 4, "tags": [], "text": "Created attachment 26426\nPatch\n\nSorry for adding a patch again... (still learning ;-) ) But finally I've come up with a much simpler solution for this issue. Using the isFirst method of InlineLM seems to correctly detect the first position and can therefore be used to reset the areaCreated instance variable.", "is_private": false, "bug_id": 50196, "id": 142852, "time": "2010-12-19T19:42:55Z", "creator": "matthias8283@gmx.at", "creation_time": "2010-12-19T19:42:55Z", "attachment_id": 26426}, {"count": 5, "tags": [], "text": "Patch committed in rev. 1079969:\nhttp://svn.apache.org/viewvc?rev=1079969&view=rev\n\nYou managed to find an elegant solution to this issue. Sorry for the delay, and thanks for your contribution!\n\nRegards,\nVincent", "attachment_id": null, "bug_id": 50196, "id": 144883, "time": "2011-03-09T15:17:47Z", "creator": "vhennebert@gmail.com", "creation_time": "2011-03-09T15:17:47Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 50196, "text": "Created attachment 26756\nPatch\n\nVincent,\n\nthanks for applying the patch (and your encouraging words :-) ).\n\nSorry for adding this so late but I had to make a minimal change to my original patch because in some cases the index of the first knuth position was -1 causing isFirst() to throw an exception. I think this has something to do with auxiliary positions used for borders inside nested fo:inline elements but unfortunately I have no test case for reproducing the error. I could be that this change is not necessary anymore due to Simon's refactoring of the whole wrapping/unwrapping part of knuth elements. But just to be on the safe side, I'd recommend to apply this patch too.\n\nRegards,\nMatthias", "id": 144886, "time": "2011-03-09T16:07:36Z", "creator": "matthias8283@gmx.at", "creation_time": "2011-03-09T16:07:36Z", "is_private": false, "attachment_id": 26756}, {"count": 7, "tags": [], "creator": "vhennebert@gmail.com", "is_private": false, "id": 145096, "attachment_id": null, "bug_id": 50196, "creation_time": "2011-03-18T15:03:29Z", "time": "2011-03-18T15:03:29Z", "text": "(In reply to comment #6)\n\nHi Matthias,\n\nThanks for letting us know. If you could come up with a test case that would be brilliant. I've tried to reproduce the error on my side and haven't managed.\n\nMeanwhile, I'll re-open this bug as a reminder.\n\nVincent"}, {"count": 8, "tags": [], "creator": "u4729733@anu.edu.au", "attachment_id": 27078, "is_private": false, "id": 146693, "time": "2011-05-28T05:57:36Z", "bug_id": 50196, "creation_time": "2011-05-28T05:57:36Z", "text": "Created attachment 27078\nLayout engine testcase for checking  inline padding after a page break in table headers and footers\n\nHi Vincent,\n\nThe attachment is a test case for the inline header/footer padding bug.\n\nThank you,\nDarshan"}, {"count": 9, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "is_private": false, "id": 146694, "time": "2011-05-28T06:34:03Z", "bug_id": 50196, "creation_time": "2011-05-28T06:34:03Z", "text": "\nThanks for the testcase. I checked a pristine version of FOP trunk, with the one additional change in Matthias' last patch, and the full test suite still failed with the message:\n\n    [junit] Testcase: table-header_table-footer_padding.xml(org.apache.fop.layoutengine.LayoutEngineTestSuite$LayoutEngineTestCase):\tCaused an ERROR\n    [junit] Expected XPath expression to evaluate to '20000', but got '' (XPath: /areatree/pageSequence/pageViewport[2]/page/regionViewport/regionBody/mainReference/span/flow/block/block[10]/block/linearea/inlineparent/@padding-start)\n    [junit] java.lang.RuntimeException: Expected XPath expression to evaluate to '20000', but got '' (XPath: /areatree/pageSequence/pageViewport[2]/page/regionViewport/regionBody/mainReference/span/flow/block/block[10]/block/linearea/inlineparent/@padding-start)\n    [junit] \tat org.apache.fop.layoutengine.EvalCheck.doCheck(EvalCheck.java:86)\n    [junit] \tat org.apache.fop.layoutengine.EvalCheck.check(EvalCheck.java:60)\n    [junit] \tat org.apache.fop.layoutengine.LayoutEngineTester.doATChecks(LayoutEngineTester.java:226)\n    [junit] \tat org.apache.fop.layoutengine.LayoutEngineTester.checkAll(LayoutEngineTester.java:159)\n    [junit] \tat org.apache.fop.layoutengine.LayoutEngineTester.runTest(LayoutEngineTester.java:141)\n    [junit] \tat org.apache.fop.layoutengine.LayoutEngineTestSuite$LayoutEngineTestCase.runTest(LayoutEngineTestSuite.java:206)\n\nDo you run your test against FOP trunk or against 1.0?"}, {"count": 10, "tags": [], "creator": "u4729733@anu.edu.au", "text": "\nI ran it against the trunk as the patch has been applied after the release of version 1.0.\n\nThank you,\nDarshan", "id": 146695, "attachment_id": null, "bug_id": 50196, "creation_time": "2011-05-28T06:46:47Z", "time": "2011-05-28T06:46:47Z", "is_private": false}, {"count": 11, "tags": [], "creator": "adelmelle@apache.org", "text": "(In reply to comment #10)\n> I ran it against the trunk as the patch has been applied after the release of\n> version 1.0.\n\nAaaaah... *blush*\nMy mistake. I was still checking the test you sent earlier, instead of the latest one. The most recent one indeed passes.\n\nHowever, the reason this bug report was still left open, is that we did not have a test for that latest small patch. Whether I apply that patch or not, the test still passes, so it seems like it is not exactly what we were looking for, unfortunately... :(", "id": 146717, "attachment_id": null, "bug_id": 50196, "creation_time": "2011-05-28T17:49:13Z", "time": "2011-05-28T17:49:13Z", "is_private": false}, {"count": 12, "tags": [], "creator": "matthias8283@gmx.at", "is_private": false, "id": 146728, "attachment_id": null, "bug_id": 50196, "creation_time": "2011-05-29T15:59:23Z", "time": "2011-05-29T15:59:23Z", "text": "(In reply to comment #11)\n> (In reply to comment #10)\n> > I ran it against the trunk as the patch has been applied after the release of\n> > version 1.0.\n> \n> Aaaaah... *blush*\n> My mistake. I was still checking the test you sent earlier, instead of the\n> latest one. The most recent one indeed passes.\n> \n> However, the reason this bug report was still left open, is that we did not\n> have a test for that latest small patch. Whether I apply that patch or not, the\n> test still passes, so it seems like it is not exactly what we were looking for,\n> unfortunately... :(\n\nIn order to reproduce the exception mentioned in comment 6 you have to svn update fop trunk to revision 1052560 and run the additional testcase I'm attaching.\nWith revision 1052561 this exception doesn't occur anymore because KnuthElement Positions are not unwrapped and rewrapped anymore (due to hyphenation) and this has the effect that the positions index is never -1 (at least for the positions iterated by InlineLayoutManger).\nSince this error only occurred when hyphenation is active, it's actual a hyphenation test case.\n\nThat's the stack trace of the exception:\n\njava.lang.IllegalArgumentException: Only non-null Positions with an index can be checked\n        at org.apache.fop.cli.InputHandler.transformTo(InputHandler.java:303)\n        at org.apache.fop.cli.InputHandler.renderTo(InputHandler.java:130)\n        at org.apache.fop.cli.Main.startFOP(Main.java:177)\n        at org.apache.fop.cli.Main.main(Main.java:208)\nCaused by: java.lang.IllegalArgumentException: Only non-null Positions with an index can be checked\n        at org.apache.fop.layoutmgr.AbstractLayoutManager.verifyNonNullPosition(AbstractLayoutManager.java:322)\n        at org.apache.fop.layoutmgr.AbstractLayoutManager.isFirst(AbstractLayoutManager.java:334)\n        at org.apache.fop.layoutmgr.inline.InlineLayoutManager.addAreas(InlineLayoutManager.java:431)\n        at org.apache.fop.layoutmgr.inline.LineLayoutManager.addInlineArea(LineLayoutManager.java:1517)\n        at org.apache.fop.layoutmgr.inline.LineLayoutManager.addAreas(LineLayoutManager.java:1417)\n        at org.apache.fop.layoutmgr.BlockLayoutManager.addAreas(BlockLayoutManager.java:389)\n        at org.apache.fop.layoutmgr.AreaAdditionUtil.addAreas(AreaAdditionUtil.java:124)\n        at org.apache.fop.layoutmgr.FlowLayoutManager.addAreas(FlowLayoutManager.java:351)\n        at org.apache.fop.layoutmgr.PageBreaker.addAreas(PageBreaker.java:286)\n        at org.apache.fop.layoutmgr.AbstractBreaker.addAreas(AbstractBreaker.java:675)\n        at org.apache.fop.layoutmgr.AbstractBreaker.addAreas(AbstractBreaker.java:546)\n        at org.apache.fop.layoutmgr.PageBreaker.doPhase3(PageBreaker.java:314)\n        at org.apache.fop.layoutmgr.AbstractBreaker.doLayout(AbstractBreaker.java:499)\n        at org.apache.fop.layoutmgr.PageBreaker.doLayout(PageBreaker.java:90)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.activateLayout(PageSequenceLayoutManager.java:107)\n        at org.apache.fop.area.AreaTreeHandler.endPageSequence(AreaTreeHandler.java:238)\n        at org.apache.fop.fo.pagination.PageSequence.endOfNode(PageSequence.java:120)\n        at org.apache.fop.fo.FOTreeBuilder$MainFOHandler.endElement(FOTreeBuilder.java:349)\n        at org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:177)\n        at org.apache.xalan.transformer.TransformerIdentityImpl.endElement(TransformerIdentityImpl.java:1101)\n        at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)\n        at org.apache.xerces.xinclude.XIncludeHandler.endElement(Unknown Source)\n        at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanEndElement(Unknown Source)\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n        at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n        at org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)\n        at org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:484)\n        at org.apache.fop.cli.InputHandler.transformTo(InputHandler.java:300)\n        ... 3 more\n\n---------\n\njava.lang.IllegalArgumentException: Only non-null Positions with an index can be checked\n        at org.apache.fop.layoutmgr.AbstractLayoutManager.verifyNonNullPosition(AbstractLayoutManager.java:322)\n        at org.apache.fop.layoutmgr.AbstractLayoutManager.isFirst(AbstractLayoutManager.java:334)\n        at org.apache.fop.layoutmgr.inline.InlineLayoutManager.addAreas(InlineLayoutManager.java:431)\n        at org.apache.fop.layoutmgr.inline.LineLayoutManager.addInlineArea(LineLayoutManager.java:1517)\n        at org.apache.fop.layoutmgr.inline.LineLayoutManager.addAreas(LineLayoutManager.java:1417)\n        at org.apache.fop.layoutmgr.BlockLayoutManager.addAreas(BlockLayoutManager.java:389)\n        at org.apache.fop.layoutmgr.AreaAdditionUtil.addAreas(AreaAdditionUtil.java:124)\n        at org.apache.fop.layoutmgr.FlowLayoutManager.addAreas(FlowLayoutManager.java:351)\n        at org.apache.fop.layoutmgr.PageBreaker.addAreas(PageBreaker.java:286)\n        at org.apache.fop.layoutmgr.AbstractBreaker.addAreas(AbstractBreaker.java:675)\n        at org.apache.fop.layoutmgr.AbstractBreaker.addAreas(AbstractBreaker.java:546)\n        at org.apache.fop.layoutmgr.PageBreaker.doPhase3(PageBreaker.java:314)\n        at org.apache.fop.layoutmgr.AbstractBreaker.doLayout(AbstractBreaker.java:499)\n        at org.apache.fop.layoutmgr.PageBreaker.doLayout(PageBreaker.java:90)\n        at org.apache.fop.layoutmgr.PageSequenceLayoutManager.activateLayout(PageSequenceLayoutManager.java:107)\n        at org.apache.fop.area.AreaTreeHandler.endPageSequence(AreaTreeHandler.java:238)\n        at org.apache.fop.fo.pagination.PageSequence.endOfNode(PageSequence.java:120)\n        at org.apache.fop.fo.FOTreeBuilder$MainFOHandler.endElement(FOTreeBuilder.java:349)\n        at org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:177)\n        at org.apache.xalan.transformer.TransformerIdentityImpl.endElement(TransformerIdentityImpl.java:1101)\n        at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)\n        at org.apache.xerces.xinclude.XIncludeHandler.endElement(Unknown Source)\n        at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanEndElement(Unknown Source)\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source)\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)\n        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)\n        at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)\n        at org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)\n        at org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.java:484)\n        at org.apache.fop.cli.InputHandler.transformTo(InputHandler.java:300)\n        at org.apache.fop.cli.InputHandler.renderTo(InputHandler.java:130)\n        at org.apache.fop.cli.Main.startFOP(Main.java:177)\n        at org.apache.fop.cli.Main.main(Main.java:208)"}, {"count": 13, "tags": [], "creator": "matthias8283@gmx.at", "text": "Created attachment 27087\nTestcase\n\nAdditional test case showing possible IllegalArgumentException prior rev 1052561", "id": 146729, "attachment_id": 27087, "bug_id": 50196, "creation_time": "2011-05-29T16:01:47Z", "time": "2011-05-29T16:01:47Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 50196, "text": "does the reported problem still exist? if so, is it reproducible? if not, can this bug be moved to resolved?", "id": 157034, "time": "2012-04-01T21:14:11Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T21:14:11Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "creator": "gadams@apache.org", "is_private": false, "id": 157035, "attachment_id": null, "bug_id": 50196, "creation_time": "2012-04-01T21:15:01Z", "time": "2012-04-01T21:15:01Z", "text": "see comment 14"}, {"count": 16, "tags": [], "text": "(In reply to comment #14)\n> does the reported problem still exist? if so, is it reproducible? if not, can\n> this bug be moved to resolved?\n\nNo, it isn't reproducible anymore. Before this issue gets closed, it would be good to add the latest test case I provided:\nhttps://issues.apache.org/bugzilla/attachment.cgi?id=27087", "attachment_id": null, "bug_id": 50196, "id": 157038, "time": "2012-04-01T21:18:58Z", "creator": "matthias8283@gmx.at", "creation_time": "2012-04-01T21:18:58Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 50196, "text": "resetting P2 open bugs to P3 pending further review", "id": 157575, "time": "2012-04-07T01:44:46Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:44:46Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "creator": "gadams@apache.org", "text": "need to add test case per comment 16", "id": 158333, "attachment_id": null, "bug_id": 50196, "creation_time": "2012-04-24T05:28:51Z", "time": "2012-04-24T05:28:51Z", "is_private": false}, {"count": 19, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "added additional test case at http://svn.apache.org/viewvc?view=revision&revision=1329865", "id": 158385, "time": "2012-04-24T17:20:21Z", "bug_id": 50196, "creation_time": "2012-04-24T17:20:21Z", "is_private": false}]