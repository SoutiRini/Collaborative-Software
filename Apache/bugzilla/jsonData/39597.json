[{"count": 0, "tags": [], "bug_id": 39597, "is_private": false, "text": "Given three buildfiles a.xml, b.xml and c.xml (see attachemnts)\na.xml calls b.xml with\n<ant antfile=\"b.xml\" target=\"b\">\n  <reference refid=\"somereference\"/>\n</ant>\n\nIn b.xml there is an\n<include file=\"c.xml\"/>\n\nand in c.xml the reference 'somereference' is used outside any target\ne.g.\n<project ...>\n  <pathconvert refid=\"somereference\" .../>\n</project>\n\nThe reference can not be seen in c.xml ??", "id": 89192, "time": "2006-05-17T10:33:52Z", "creator": "juerg@pyx.ch", "creation_time": "2006-05-17T10:33:52Z", "attachment_id": null}, {"attachment_id": 18297, "tags": [], "creator": "juerg@pyx.ch", "is_private": false, "count": 1, "id": 89193, "time": "2006-05-17T10:37:10Z", "bug_id": 39597, "creation_time": "2006-05-17T10:37:10Z", "text": "Created attachment 18297\nThe 'master' buildfile\n\nBUILD FAILED\n/tmp/a.xml:10: The following error occurred while executing this line:\n/tmp/b.xml:3: The following error occurred while executing this line:\n/tmp/c.xml:5: Reference somepath not found."}, {"count": 2, "tags": [], "creator": "juerg@pyx.ch", "attachment_id": 18298, "text": "Created attachment 18298\nThe sub buildfile", "id": 89194, "time": "2006-05-17T10:37:43Z", "bug_id": 39597, "creation_time": "2006-05-17T10:37:43Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 39597, "text": "Created attachment 18299\nThe imported buildfile", "id": 89195, "time": "2006-05-17T10:38:14Z", "creator": "juerg@pyx.ch", "creation_time": "2006-05-17T10:38:14Z", "is_private": false, "attachment_id": 18299}, {"count": 4, "tags": [], "text": "If b.xml is written like:\n<project name=\"b\" default=\"b\">\n  <pathconvert refid=\"somepath\" pathsep=\":\" property=\"xx\"/>\n  <target name=\"b\"/>\n</project>\n\nit also fails.\n\nhowever this works and may be used as a work-around for the moment.\n\n<project name=\"b\" default=\"b\">\n  <target name=\"b-init\">\n    <pathconvert refid=\"somepath\" pathsep=\":\" property=\"xx\"/>\n  </target>\n  <target name=\"b\" depends=\"b-init\"/>\n</project>\n\nThe problem is a little historic. In ant 1.5, it was\nnot possible to have top-level tasks (except property).\nAs this was the case, references would not be used except\nin targets. As this was the case, it was decided to allow\nreferences in sub-projects to be over-ridden by references\nspecified in the reference nested element of <ant>. This\nis implemented by running all the top level tasks and types\nof the sub-project and then setting the references set\nin the <reference> element of ant.", "is_private": false, "bug_id": 39597, "id": 93997, "time": "2006-09-22T10:50:03Z", "creator": "peterreilly@apache.org", "creation_time": "2006-09-22T10:50:03Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 39597, "text": "Given Peter's explanation of why this occurs, should we just close this bug as a won't fix?  Seems like changing the current behavior could have dire implications for existing projects and the workaround seems reasonable.", "id": 135323, "time": "2010-03-13T17:15:34Z", "creator": "clark.archer@gmail.com", "creation_time": "2010-03-13T17:15:34Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 39597, "text": "This is a message I posted to the users mailinglist which is relevant to this bug. The work around suggested by Peter Reilly will not work for my use case because the import task cannot be put inside a target element. Hence, references must be resolvable outside targets. \n\nI will attach to this bug report a tweak to the \"Ant\" task source that seems to work for me.\n\nMAILINGLIST MESSAGE:\n\nI've been looking at various ways of importing other ant buildfiles\nfrom the classpath to reduce coupling in my multimodule build. This would\nallow me to checkout only the code and build files I intend to\nchange.\n\nI've been looking at using Maven to facilitate this. My solution uses\nthe maven ant-run plugin to run a build.xml file with a classpath\nthat includes a file echo.xml on which build.xml depends (see diagram below).\n\nHowever, this requires a few modifications to both ant and the ant-run \nplugin. \n\nThe modification to the ant-run plugin is pretty trivial, we \njust need it to use ant 1.8.1 so we can put <javaresource/> types inside\n<import/>, this basically a change to the ant-run pom.xml so that we bring\nant 1.8.1 onto the classpath instead of 1.7.1. We then reinstall the ant-run plugin into our repository.\n\nSomewhat more siginificant is the change to ant. To support this mechanism \nwe need to be able inherit references in the file being called by the \n\"Ant\" task. The Ant tasks supports this, but what is not clear is that \nit will not export references in the preamble of an ant build file. \nReferences are only available within targets. However, since the <import/> element \ncannot exist within a <target/> making references in the preable is really \nnecessary in order for this to work.\n\nHence, I made a change to the \"Ant\" task, so that it brings in import references \nbefore the file (build.xml in the example) is parsed. Consequently, the\nreferences should be available in the preamble.\n\nThe example I have given seems to work ok with this code change.\n\nI would like to ask if this tweak to the ant task code is a good idea and\nwhether there is any chance of it or something similar being adopted in ant itself.\n\nThe change is only one line, but I am worried I might be missing some serious \nconsequences.\n\nI attach a patch for the ant task which should apply cleanly to the ANT_181 tag on svn.\n\n-------\nExample\n-------\n\n\nBuildCommon Project:\n--------------------\n\nBuildCommon\n|\n+-src\n| |\n| +-resources\n|   |\n|   +echo.xml // the ant file I want to import.\n|  \n+-pom.xml // bog standard pom, builds a jar which has echo.xml at the root\n\n\necho.xml:\n*********\n<project name=\"echo\">\n\n\n\t<target name=\"echo\">\n\t\t<echo>Hello Modular Ant World!! </echo>\n\t</target>\n\n</project>\n\n\nBuildClient Project:\n--------------------\n\nBuildClient\n|\n+-pom.xml // standard pom, with ant-run executing build.xml in \"compile\" phase\n|\n+-build.xml // the ant file with classpath dependencies that we want to run.\n\npom.xml\n*******\n// ... standard pom header\n\n<build>\n    <plugins>\n      <plugin>\n        <artifactId>maven-antrun-plugin</artifactId>\n        <executions>\n          <execution>\n            <phase>compile</phase>\n            <configuration>\n              <tasks>\n              \n\t<ant antfile=\"build.xml\" target=\"echo\" inheritrefs=\"true\"/>\n\n              </tasks>\n            </configuration>\n            <goals>\n              <goal>run</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n    </plugins>\n  </build>\n\n// ... dependencies\n\n\nbuild.xml\n*********\n<project name=\"BuildClient\">\n\t\n\t<import>\n\t\t<javaresource name=\"echo.xml\">\n\t\t\t<classpath refid=\"maven.compile.classpath\" />\n\t\t</javaresource>\n\t</import>\n\n</project>", "id": 136757, "time": "2010-05-10T11:16:00Z", "creator": "fajwilson@gmail.com", "creation_time": "2010-05-10T11:16:00Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "creator": "fajwilson@gmail.com", "attachment_id": 25422, "text": "Created attachment 25422\ntweak to \"Ant\" task", "id": 136758, "time": "2010-05-10T11:17:08Z", "bug_id": 39597, "creation_time": "2010-05-10T11:17:08Z", "is_private": false}]