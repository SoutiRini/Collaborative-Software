[{"count": 0, "tags": [], "bug_id": 5633, "attachment_id": null, "id": 9220, "creation_time": "2001-12-30T14:26:56Z", "time": "2001-12-30T14:26:56Z", "creator": "gregw@mortbay.org", "text": "The client for HttpServletResponseWrapperSendErrorIgnoreHeaderTest does not\nsend a host header, then complains when the response location header is\n\n  Location: http://127.0.0.1:8080/HttpServletResponseWrapperRedirectedTest\n\nrather than\n\n  Location: http://localhost:8080/HttpServletResponseWrapperRedirectedTest\n\nWithout a host header, the server has no way of telling what name or IP the\nclient expects the server to be known by.  Furthermore a server cannot\nassume the DNS context of the client, so it is safest for the server to \nuse IPs rather than host names when the request does not contain a host header.", "is_private": false}, {"count": 1, "attachment_id": null, "creator": "Ryan.Lubke@Sun.COM", "text": "This idea is certainly valid from an HTTP/1.1 perspective, but HTTP1.0\ndoesn't define the Host request header.  I understand that most 1.0 browsers\nsend the Host header, however, I have a feeling that if this was changed to send\nthe Host header, there would be an implementation that only supports HTTP/1.0\nand is very strict in their interpretation of the HTTP/1.0 RFC.\n\nCurrently GTest sends all requests using HTTP/1.0.  GTest could be enhanced to\nsend an initial request before starting the tests to determine the version of\nHTTP supported by the target server.  If the target supports HTTP/1.0, then the\nrequest version used by GTest would be 'upgraded' to 1.1 and would include the\nHost header.\n\nAn alternate solution still needs to be found for 1.0 servers.  I'm still\nworking on this.\n\n\n", "id": 9748, "time": "2002-01-18T14:46:30Z", "bug_id": 5633, "creation_time": "2002-01-18T14:46:30Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "Ryan.Lubke@Sun.COM", "is_private": false, "text": "Took a look at what it would take to get GTest to work as an HTTP/1.1 client.\nThe header part would be easy, however, GTest would need to be able to handle a\nchunked response.  This alone is probably enough reason to start using the\nHttpClient of the Jakarta Commons project.\n\nSo, until this is implemented, is there any reason you can't invoke the tests\npassing an IP address for the host?\n\nant -Dhost=127.0.0.1 servlet\n\nThis should allow you to pass tests that look for the hostname.\n\n", "id": 9798, "time": "2002-01-22T16:56:08Z", "bug_id": 5633, "creation_time": "2002-01-22T16:56:08Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "Ryan.Lubke@Sun.COM", "attachment_id": null, "is_private": false, "id": 10025, "time": "2002-01-29T17:09:17Z", "bug_id": 5633, "creation_time": "2002-01-29T17:09:17Z", "text": "I stand corrected.  Section 19.6.1.1 of RFC 2616 states that HTTP/1.0\napplication be updated to support handling the Host header (where updates are\npossible of course).\n\nI've put the change back to the repository."}]