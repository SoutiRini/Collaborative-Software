[{"count": 0, "tags": [], "text": "I may be missing something, as I am not an ant guru -- but if there isn't a way\nto echo the classpath (the stuff you gather up in your <classpath> element\ninside your <javac> task) when doing a compile, then there should be.  And I\ncouldn't figure out how to do this, so I'll assume that you can't.  \n\nNow I know that you can set up your classpath in a property, and then echo out\nthat property, but if you have to do things that way just to be able to know for\nsure what your classpath really is, then the value of the <classpath> element is\ngreatly reduced.  \n\nAs far as why this should be added, it is widely known that a great number of\ncompilation troubles involve an incorrectly set classpath.  So it is of obvious\nbasic utility to everyone to be able to see what classpath their compiler\nactually ran against.  They say design for the common case, and this is it!\n\nFor example, maybe someone misused the syntax of a <pathelement> in some way and\nthey are assuming that a jar has been added to the classpath that ant couldn't\nfind.  It would immediately clue them in that something was wrong with how they\nused that <pathelement> if they looked at what their actual classpath was and\nsaw that the class they thought they included wasn't there.\n\nThere are at least a million and one other situations in which this would be\nhelpful.", "is_private": false, "id": 36005, "creator": "s_p_a_m_bin@hotmail.com", "time": "2003-04-24T18:11:39Z", "bug_id": 19280, "creation_time": "2003-04-24T18:11:39Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 19280, "is_private": false, "id": 36007, "time": "2003-04-24T18:21:11Z", "creator": "ddevienne@lgc.com", "creation_time": "2003-04-24T18:21:11Z", "tags": [], "text": "Two ways to print a path, both littering the archives... See <property \nrefid=\"pathID\"/> and <pathconvert> for a nicely formatted version. --DD"}, {"count": 2, "tags": [], "creator": "jakarta@ehatchersolutions.com", "is_private": false, "text": "Dominique's suggestions require defining a classpath outside of <javac> and reusing it there.  But \nyou can also run with the -debug (maybe even -verbose works?) switch and it will output the \ndetails of javac.", "id": 36010, "time": "2003-04-24T18:32:19Z", "bug_id": 19280, "creation_time": "2003-04-24T18:32:19Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "ddevienne@lgc.com", "text": "Yeah, sure, it must be declared outside, and refid'd inside <javac>.\n\nAlso forgot to mention <echopath> that I posted, and should be thus in the \narchives as well. --DD", "id": 36011, "time": "2003-04-24T18:38:03Z", "bug_id": 19280, "creation_time": "2003-04-24T18:38:03Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 19280, "text": "If you want to echo the classpath used in <javac> as a quick check, ant -verbose\nshould work.\n\nFor more advanced cases, go the \"define outside of task and <echo>\" route.", "count": 4, "id": 36044, "time": "2003-04-25T06:36:36Z", "creator": "bodewig@apache.org", "creation_time": "2003-04-25T06:36:36Z", "is_private": false}]