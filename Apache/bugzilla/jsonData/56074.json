[{"count": 0, "attachment_id": null, "creator": "andre.wendel@bmw.de", "text": "Hello,\n\ni tried to upgrade an Apache 2.4.4 up to version 2.4.6 with the following ProxyPassMatch-Rules:\n\nProxyPassMatch ^(.*\\.jsp(?:;.*)?)$ balancer://appcluster$1\nProxyPassMatch ^(.*\\.do(?:;.*)?)$ balancer://appcluster$1\nProxyPassMatch ^(.*/servlet/.*(?:;.*)?)$ balancer://appcluster$1\n\nDuring the syntax check the Apache 2.4.6 failed with the following error:\n\nProxyPass unable to parse: ^(.*\\\\.jsp(?:;.*)?)$\n\nBy changing the order of the rules and putting the servlet rule in front the other rules the Apache 2.4.6 starts without any problem:\n\nProxyPassMatch ^(.*/servlet/.*(?:;.*)?)$ balancer://appcluster$\nProxyPassMatch ^(.*\\.jsp(?:;.*)?)$ balancer://appcluster$1\nProxyPassMatch ^(.*\\.do(?:;.*)?)$ balancer://appcluster$1\n\nI also found out the following bug for apache 2.2.x https://issues.apache.org/bugzilla/show_bug.cgi?id=46665, which shows nearly the same problem and recommends to change the rules i.e. \n\nProxyPassMatch ^/(.*\\.jsp(?:;.*)?)$ balancer://appcluster$1\nProxyPassMatch ^/(.*\\.do(?:;.*)?)$ balancer://appcluster$1\nProxyPassMatch ^(.*/servlet/.*(?:;.*)?)$ balancer://appcluster$1\n\nthe curious point here for me is, why does apache 2.4.6 break if an \"incorrect\" match (in 2.4.4 the matches worked well, without any problems) is placed as first match, but not as a follwoing match if the first one has an prefixed / like ^(.*/servlet/.*(?:;.*)?)$.\n\nCheers,\nAndr\u00e9", "id": 172730, "time": "2014-01-28T12:09:22Z", "bug_id": 56074, "creation_time": "2014-01-28T12:09:22Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "andre.wendel@bmw.de", "attachment_id": null, "text": "I have done some more informations here and found out that the problem is not the \"/\" inside the ProxyPassMatch, the problem is the perl regex \"?:\".\n\nI have tried multiple configurations of apache and the problem appears if an APR-UTIL > 1.5.1 is used!\n\nCurrent compile tests runs, with problem:\n\nHTTP 2.4.6\nAPR 1.50\nAPR-UTIL 1.5.1\nPCRE 8.34\n\nThe following breaks:\nHTTP 2.4.6\nAPR 1.50\nAPR-UTIL 1.5.2\nPCRE 8.34\n\nWill close this case and open a bug inside the APR-UTIL library.\n\nBest regards,\nAndr\u00e9", "id": 172822, "time": "2014-01-31T13:08:19Z", "bug_id": 56074, "creation_time": "2014-01-31T13:08:19Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 56074, "attachment_id": null, "text": "I guess you get hit by the following Change in apr-util 1.5.2:\n\n  *) apr_uri_parse(): Do not accept invalid characters in the scheme.\n     Per RFC 3986 3.3, enforce that the first segment of a relative path does\n     not contain a colon. PR 52479. [Stefan Fritsch]\n\nBut I guess the more interesting question is if doing an apr_uri_parse in ap_proxy_update_balancer is the correct thing to do in the regex case.", "id": 172827, "time": "2014-01-31T14:57:34Z", "creator": "rpluem@apache.org", "creation_time": "2014-01-31T14:57:34Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 56074, "is_private": false, "text": "Can you please try if the following patch solves your issue?\n\nIndex: proxy_util.c\n===================================================================\n--- proxy_util.c        (revision 1562932)\n+++ proxy_util.c        (working copy)\n@@ -1116,6 +1116,9 @@\n                                                 const char *url)\n {\n     apr_uri_t puri;\n+    if (!url) {\n+        return NULL;\n+    }\n     if (apr_uri_parse(p, url, &puri) != APR_SUCCESS) {\n         return apr_psprintf(p, \"unable to parse: %s\", url);\n     }\nIndex: mod_proxy.c\n===================================================================\n--- mod_proxy.c (revision 1562932)\n+++ mod_proxy.c (working copy)\n@@ -1584,13 +1584,26 @@\n     /* Distinguish the balancer from worker */\n     if (ap_proxy_valid_balancer_name(r, 9)) {\n         proxy_balancer *balancer = ap_proxy_get_balancer(cmd->pool, conf, r, 0);\n+        char *fake_copy;\n+\n+        /*\n+         * In the regex case supplying a fake URL doesn't make sense as it\n+         * cannot be parsed anyway with apr_uri_parse later on in\n+         * ap_proxy_define_balancer / ap_proxy_update_balancer\n+         */\n+        if (use_regex) {\n+            fake_copy = NULL;\n+        }\n+        else {\n+            fake_copy = f;\n+        }\n         if (!balancer) {\n-            const char *err = ap_proxy_define_balancer(cmd->pool, &balancer, conf, r, f, 0);\n+            const char *err = ap_proxy_define_balancer(cmd->pool, &balancer, conf, r, fake_copy, 0);\n             if (err)\n                 return apr_pstrcat(cmd->temp_pool, \"ProxyPass \", err, NULL);\n         }\n         else {\n-            ap_proxy_update_balancer(cmd->pool, balancer, f);\n+            ap_proxy_update_balancer(cmd->pool, balancer, fake_copy);\n         }\n         for (i = 0; i < arr->nelts; i++) {\n             const char *err = set_balancer_param(conf, cmd->pool, balancer, elts[i].key,", "id": 172828, "time": "2014-01-31T15:15:25Z", "creator": "rpluem@apache.org", "creation_time": "2014-01-31T15:15:25Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 56074, "text": "i tried the patch and it worked with 2.4.6, apr 1.5.0 and apr-util 1.5.3, so my issue seems to be solved, for the moment.\n\nCheers,\nAndr\u00e9", "id": 172872, "time": "2014-02-03T14:39:08Z", "creator": "andre.wendel@bmw.de", "creation_time": "2014-02-03T14:39:08Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "rpluem@apache.org", "text": "Committed to trunk as r156443.", "id": 172888, "attachment_id": null, "bug_id": 56074, "creation_time": "2014-02-04T19:37:54Z", "time": "2014-02-04T19:37:54Z", "is_private": false}, {"count": 6, "tags": [], "text": "(In reply to Ruediger Pluem from comment #5)\n> Committed to trunk as r156443.\n\nYou probably meant r1564437..", "is_private": false, "bug_id": 56074, "id": 172901, "time": "2014-02-05T10:21:09Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-02-05T10:21:09Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "(In reply to Yann Ylavic from comment #6)\n> (In reply to Ruediger Pluem from comment #5)\n> > Committed to trunk as r156443.\n> \n> You probably meant r1564437..\n\nYes. Thanks.", "is_private": false, "bug_id": 56074, "id": 172905, "time": "2014-02-05T12:49:39Z", "creator": "rpluem@apache.org", "creation_time": "2014-02-05T12:49:39Z", "attachment_id": null}]