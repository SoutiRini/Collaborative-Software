[{"count": 0, "attachment_id": null, "creator": "bughunt@gluino.name", "is_private": false, "id": 72074, "time": "2005-03-09T20:28:06Z", "bug_id": 33938, "creation_time": "2005-03-09T20:28:06Z", "tags": [], "text": "I'm seeing quick resource exhaustion if a Realm uses pooled connections\nusing DataSourceRealm. I checked whether every 'open' was correctly followed\nby a close. In org.apache.catalina.realm.DataSourceRealm.getRoles(), one\nfinds code that seems to miss something:\n\n   /**\n     * Return the roles associated with the gven user name.\n     */\n    protected ArrayList getRoles(String username) {\n\n        ResultSet rs = null;\n        PreparedStatement stmt = null;\n        Connection dbConnection = null;\n\n        // Ensure that we have an open database connection\n        dbConnection = open();\n        if (dbConnection == null) {\n            return null;\n        }\n\n        try {\n            // Accumulate the user's roles\n            ArrayList list = new ArrayList();\n            stmt = roles(dbConnection, username);\n            rs = stmt.executeQuery();\n            while (rs.next()) {\n                String role = rs.getString(1);\n                if (role != null) {\n                    list.add(role.trim());\n                }\n            }\n            \n            return (list);\n        } catch(SQLException e) {\n        \tcontainer.getLogger().error(sm\n\t                .getString(\"datasourceRealm.getRoles.exception\",\n\t        \t\t           username));\n        } finally {\n        \ttry {\n\t            if (rs != null) {\n\t                rs.close();\n\t            }\n\t            if (stmt != null) {\n\t                stmt.close();\n\t            }\n            } catch(SQLException e) {\n            \tcontainer.getLogger().error(sm\n    \t                .getString(\"datasourceRealm.getRoles.exception\",\n    \t        \t\t           username));\n        \t}\n        }\n\n        return (null);\n    }\n\n\nThe 'finally' of getPassword() looks better:\n\n\n} finally {\n        \ttry {\n\t            if (rs != null) {\n\t                rs.close();\n\t            }\n\t            if (stmt != null) {\n\t                stmt.close();\n\t            }\n\t            if( !dbConnection.getAutoCommit() ) {\n\t                dbConnection.commit();             \n\t            }\n        \t} catch (SQLException e) {\n            \tcontainer.getLogger().error(sm\n                        .getString(\"datasourceRealm.getPassword.exception\",\n        \t\t                   username));\n        \t\t\n        \t}\n            // Release the database connection we just used\n            close(dbConnection);\n            dbConnection = null;\n\n        }"}, {"count": 1, "tags": [], "bug_id": 33938, "text": "\n\n*** This bug has been marked as a duplicate of 33357 ***", "id": 72090, "time": "2005-03-09T23:27:05Z", "creator": "remm@apache.org", "creation_time": "2005-03-09T23:27:05Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 33938, "attachment_id": null, "text": "Great stuff! \n\nBut that's the *other* half of my Madeira wine bottle gone right there!\n\nThe code for getPassword() and authenticate() has been modified too, right?\n\nauthenticate() leaks the connection if the commit() throws.", "id": 72092, "time": "2005-03-09T23:52:38Z", "creator": "bughunt@gluino.name", "creation_time": "2005-03-09T23:52:38Z", "is_private": false}]