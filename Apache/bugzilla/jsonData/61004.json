[{"count": 0, "tags": [], "bug_id": 61004, "attachment_id": 34925, "text": "Created attachment 34925\nExcel file generated from POI APIs\n\nThe following code example works fine with poi-3.15-20160924.jar on Google App Engine environment:\n\n  private static CellStyle newCellStyle( Workbook oWorkbook )\n  {\n    CellStyle oCellStyle = oWorkbook.createCellStyle();\n    oCellStyle.setBorderBottom(BorderStyle.THIN);\n    oCellStyle.setBorderTop(BorderStyle.THIN);\n    oCellStyle.setBorderLeft(BorderStyle.THIN);\n    oCellStyle.setBorderRight(BorderStyle.THIN);\n    oCellStyle.setAlignment(HorizontalAlignment.CENTER);\n    oCellStyle.setVerticalAlignment(VerticalAlignment.CENTER);\n    oCellStyle.setWrapText(true);\n\n    return oCellStyle;\n  }\n\nThe same code throws java.lang.NoClassDefFoundError error with latest poi-3.16-20170419.jar:\n\nError for /betacapm \njava.lang.NoClassDefFoundError: java.awt.Color is a restricted class. Please see the Google App Engine developer's guide for more details.\n at com.google.apphosting.runtime.security.shared.stub.java.awt.Color.<clinit>(Color.java)\n at org.apache.poi.hssf.util.HSSFColor$HSSFColorPredefined.<init>(HSSFColor.java:113)\n at org.apache.poi.hssf.util.HSSFColor$HSSFColorPredefined.<clinit>(HSSFColor.java:55)\n at org.apache.poi.hssf.model.InternalWorkbook.createExtendedFormat(InternalWorkbook.java:1450)\n at org.apache.poi.hssf.model.InternalWorkbook.createCellXF(InternalWorkbook.java:921)\n at org.apache.poi.hssf.usermodel.HSSFWorkbook.createCellStyle(HSSFWorkbook.java:1326)\n at org.apache.poi.hssf.usermodel.HSSFWorkbook.createCellStyle(HSSFWorkbook.java:123)\n at com.betacapm.api.PortfolioWorkbook.newCellStyle(PortfolioWorkbook.java:163)\n\nMy use case is to create an Excel spreadsheet. As mentioned before, this use case works with POI v3.15 in the Google App Engine environment, but breaks with v3.16.\n\nI had encountered a similar issue when I migrated from v3.13 to v3.14. See bug https://bz.apache.org/bugzilla/show_bug.cgi?id=59194 for details. This was fixed in v3.15.\n\nThere are no Jetty jars in my GAE setup. Outside of the default GAE jars, this is what I package into my app:\n\ncommons-codec-1.10.jar\ncommons-lang3-3.5.jar\ncommons-logging-1.2.jar\ncommons-math3-3.6.1.jar\ngson-2.8.0.jar\n\nCurrently, my only workaround is to revert to v3.15.\n\nAttachment Stocks.xls shows a sample Excel fie created with POI apis.", "id": 198340, "time": "2017-04-18T19:22:51Z", "creator": "rahul.herwadkar@gmail.com", "creation_time": "2017-04-18T19:22:51Z", "is_private": false}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "text": "It looks to me like we're using java.awt.Color just as a friendly way to store and retrieve RGB values, as well as looking up some pre-defined colour values.\n\nI think it might be fairly quick to replace that with a custom RGB class, but I'll defer to others to check/confirm/etc", "id": 198343, "time": "2017-04-19T05:37:32Z", "bug_id": 61004, "creation_time": "2017-04-19T05:37:32Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "onealj@apache.org", "text": "Do we need to make an effort to exclude java.awt.Color or java.awt.* from our codebase if we want to support restricted environments?\n\nIf this is a commitment that we can and want to make, we should add the appropriate rules to forbidden apis. This would keep this behavior from lapsing back once fixed (we already fixed this before in bug 59194).\n\nIf I remember correctly, HSLF relies on java.awt for positioning of shapes and rendering of slides, so running HSLF in a restricted environments is less likely. HSSF might not have the same quantity of java.awt usages.\n\nPerhaps this discussion should take place on the dev list.", "id": 198347, "time": "2017-04-19T08:23:34Z", "bug_id": 61004, "creation_time": "2017-04-19T08:23:34Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 198349, "time": "2017-04-19T08:48:32Z", "bug_id": 61004, "creation_time": "2017-04-19T08:48:32Z", "is_private": false, "text": "I think the agreement from last time was that we'd make small/minor changes to support common alternate environments like GAE, but we wouldn't re-write huge swathes (though we might accept patches that do). Generally major re-packaging / tweaking needs to happen elsewhere, eg the .Net port or the Android with the centic9/poi-on-android rework\n\nSo, that'd probably mean we wouldn't re-do lots of the HSLF/XSLF stuff, but we'd entertain a small (eg 1-2 class) tweak where possible. We can't easily exclude AWT from all of the SpreadSheet stuff though, as some parts (eg drawing or font size calculations) require it heavily + couldn't be easily changed to do without it."}, {"count": 4, "tags": [], "creator": "onealj@apache.org", "text": "(In reply to Nick Burch from comment #1)\n> It looks to me like we're using java.awt.Color just as a friendly way to\n> store and retrieve RGB values, as well as looking up some pre-defined colour\n> values.\n> \n> I think it might be fairly quick to replace that with a custom RGB class,\n> but I'll defer to others to check/confirm/etc\n\nThis regression was the result of completely rewriting the HSSFColor class from a bunch of singleton subclasses of HSSFColor to instances of HSSFColor that are stored in an enum. This was a much needed change.\n\nThis also hopefully puts us in a little better position to differentiate between predefined colors, indexed colors, and custom colors.\n\nUsing java.awt.Color is a natural way to store the rgb triplet, and will accommodate future code consolidation with XSSFColor, which also supports alpha transparency and transformations (HSB, brighter, darker).\n\nIf someone cares to author a patch for HSSFColor without java.awt.Color, using either int and o.a.p.util.BitFields, 3 shorts, or a short[3] to store the rbg, I'd be willing to review it, though please keep the XSSFColor merge in mind.", "id": 198361, "time": "2017-04-19T10:15:06Z", "bug_id": 61004, "creation_time": "2017-04-19T10:15:06Z", "is_private": false, "attachment_id": null}]