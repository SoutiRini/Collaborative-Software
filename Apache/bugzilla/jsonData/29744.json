[{"count": 0, "tags": [], "text": "connect method don't work if the client is connecting to the apache proxy \nthrough ssl socket.", "attachment_id": null, "id": 59730, "creator": "byosxxu@no-spam.hu", "time": "2004-06-22T19:45:28Z", "bug_id": 29744, "creation_time": "2004-06-22T19:45:28Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rsnel@cube.dyndns.org", "attachment_id": null, "text": "I have this problem also, let me explain a little bit further. I have configured\napache/mod_proxy to allow CONNECT requests to port 25 (and I have an http server\non port 80 and an https server on port 443).\n\nOn port 80 there is no problem:\n---- transcript ----\n> telnet <server> 80\nTrying 192.168.2.2...\nConnected to server.\nEscape character is '^]'.\nCONNECT localhost:25 HTTP/1.0\n\nHTTP/1.0 200 Connection Established\nProxy-agent: Apache/2.0.49 (Gentoo/Linux) mod_ssl/2.0.49 OpenSSL/0.9.7d DAV/2\nSVN/1.0.4\n\n220 <server> ESMTP Postfix\n----\n\nWhen I do the same (using openssl s_client as ssl-aware telnet) on port 443,\nsomething interesting happens:\n----\n>openssl s_client -connect server:443 -debug\n[SNIP]\nCONNECT localhost:25 HTTP/1.0\nwrite to 080ADC10 [080B8098] (106 bytes => 106 (0x6A))\n0000 - 17 03 00 00 20 be 08 8a-42 af f3 ee 82 a3 ca f2   .... ...B.......\n0010 - 49 9a 74 f1 d4 28 f1 9e-3f 47 21 32 8a 7b 3b 85   I.t..(..?G!2.{;.\n0020 - e5 03 11 8e 34 17 03 00-00 40 93 02 51 1d d9 86   ....4....@..Q...\n0030 - 19 a2 bd ee 51 d2 75 39-ce 2c 8e 3f 7c 0f b1 26   ....Q.u9.,.?|..&\n0040 - b0 43 5b 4b 25 5e 93 3d-f4 bb 0a 23 29 d5 25 49   .C[K%^.=...#).%I\n0050 - 2f 61 46 c7 84 f9 ac cd-a4 77 e6 9e 74 09 60 2f   /aF......w..t.`/\n0060 - f2 13 af ef f0 46 7c 61-60 e3                     .....F|a`.\n\nwrite to 080ADC10 [080B8098] (74 bytes => 74 (0x4A))\n0000 - 17 03 00 00 20 0c 0d 67-8e 91 3e f8 ed b0 19 97   .... ..g..>.....\n0010 - 57 9d 84 b0 ff d4 ed 92-cb 4f a0 48 19 9a cb 2b   W........O.H...+\n0020 - 0d 0e 74 f3 82 17 03 00-00 20 7c a3 fb 93 7c ef   ..t...... |...|.\n0030 - 90 e2 ce bd 40 21 34 b9-17 40 58 7e 0a f8 b0 1d   ....@!4..@X~....\n0040 - ed 65 1e cd a8 9b 49 52-cf c4                     .e....IR..\nread from 080ADC10 [080B3888] (5 bytes => 5 (0x5))\n0000 - 48 54 54 50 2f                                    HTTP/\nwrite to 080ADC10 [080B8098] (37 bytes => 37 (0x25))\n0000 - 15 54 54 00 20 3b 18 d2-4b 20 6f 47 59 c5 84 99   .TT. ;..K oGY...\n0010 - 6d d6 14 ac c7 e2 c9 03-b2 89 22 dd 4c 29 52 b7   m.........\".L)R.\n0020 - 14 94 34 ec 53                                    ..4.S\n2069:error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version number:s3_pkt.c:2\n86:\nwrite to 080ADC10 [080B8098] (37 bytes => 37 (0x25))\n0000 - 15 54 54 00 20 60 90 0f-be 91 f6 5e c7 ea 5a 14   .TT. `.....^..Z.\n0010 - 93 23 97 de ac ac 00 6c-8a c6 d0 74 88 3f 96 cf   .#.....l...t.?..\n0020 - 46 5b 80 c9 d9                                    F[...\n\nSo the CONNECT request is sent to the server. It is received (according to\nssl_request_log) and accepted (according to ssl_access_log). The ssl client\nbails out with an error because apache sends nonsense.\n\nSpeculation: the nonsense is \"HTTP/\" (as seen in the debug output above). It\nseems that apache/mod_proxy is bypassing the ssl encryption and is answering\nunencrypted. Since https is supposed to be 'http over ssl', the ssl encryption\nshould not be bypassed and be maintained until the connection is closed.\n\nI hope this description is helpful.", "id": 60381, "time": "2004-07-09T19:44:57Z", "bug_id": 29744, "creation_time": "2004-07-09T19:44:57Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 60475, "time": "2004-07-12T14:02:02Z", "creator": "jorton@redhat.com", "creation_time": "2004-07-12T14:02:02Z", "is_private": false, "text": "Well, I wouldn't expect that to work.  The CONNECT request is supposed to\nestablish an end-to-end tunnel, not a tunnel through an SSL connection.  Did\nthis work using mod_ssl for Apache 1.3?\n\nThe error handling is clearly bad though."}, {"count": 3, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 60558, "time": "2004-07-13T17:25:01Z", "creator": "rsnel@cube.dyndns.org", "creation_time": "2004-07-13T17:25:01Z", "is_private": false, "text": "I can't test if it works with mod_ssl of apache 1.3, but I think mod_ssl\nis not the guilty party; it is entirely bypassed by mod_proxy as soon as\nmod_proxy starts answering (HTTP/1.0 200 Connection Established...).\n\nI read through modules/proxy/proxy_connect.c and the author states\nthat he is using the wrong functions to write to the client (i.e. apr_send\ndirectly on the client socket, instead of using ap_rwrite), IMO that is easily\nto fix fixed.\n\nThe bigger problem is that proxy_connect also reads from the client through the\nclient socket (and not the chain of filters, which includes the ssl encryption),\nI also don't know if it is even possible to read from the client in a clean way\nif the HTTP request is complete ( CONNECT bla:22 HTTP/1.0\\r\\n\\r\\n ).\n\nThe standards are not explicit about allowing/disallowing CONNECT over https,\nthey only state https = http + TLS (or SSL) from which I conclude that the\ntunnel should traverse the currently established connection (so tunnel over ssl\nin the case of https).\n\nShort explanation why I even bother with this: suppose you have a firewall\nsomewhere which only allows traffic through port 443 and you want to ssh home.\nYou could, of course, run ssh on port 443, but then you can not run\napache+mod_ssl there. It would be an elegant solution to tunnel a connection to\nport 22 though the https server."}, {"count": 4, "tags": [], "creator": "brad_boyer@symantec.com", "attachment_id": 13393, "text": "Created attachment 13393\nUse normal I/O routines in proxy_connect.c", "id": 66695, "time": "2004-11-10T23:33:57Z", "bug_id": 29744, "creation_time": "2004-11-10T23:33:57Z", "is_private": false}, {"count": 5, "tags": [], "creator": "brad_boyer@symantec.com", "attachment_id": null, "text": "The patch I just attached converts proxy_connect.c to use the bb/filter routines\nto do I/O instead of directly using apr_send/apr_recv on the sockets. I've\ntested it both with a normal web browser using it for SSL proxying (uses normal\nHTTP), and with a custom written client that uses HTTPS to talk to the proxy. It\nworks for me. It's against 2.0.52, but it doesn't look like that stuff has\nchanged any time recently.", "id": 66696, "time": "2004-11-10T23:37:27Z", "bug_id": 29744, "creation_time": "2004-11-10T23:37:27Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 66742, "time": "2004-11-11T17:54:36Z", "creator": "rsnel@cube.dyndns.org", "creation_time": "2004-11-11T17:54:36Z", "is_private": false, "text": "I tested your patch on the 2.0.52 release and it seems to work fine. Thanks\nBrad. Hopefully the maintainer of mod_proxy_connect will review and accept the\npatch. "}, {"count": 7, "tags": [], "creator": "brad_boyer@symantec.com", "attachment_id": 14066, "text": "Created attachment 14066\nproxy_connect.c patch modified to work with 2.1\n\nHere's a new version of the patch that applies cleanly to 2.1.2-alpha. It's a\nlittle longer due to the new error checking to match the changes that already\ngot done in CVS. The changes are the same at a fundamental level.", "id": 69966, "time": "2005-01-22T00:01:59Z", "bug_id": 29744, "creation_time": "2005-01-22T00:01:59Z", "is_private": false}, {"count": 8, "tags": [], "creator": "chip@force-elite.com", "attachment_id": null, "text": "*** Bug 11232 has been marked as a duplicate of this bug. ***", "id": 76550, "time": "2005-06-20T01:25:16Z", "bug_id": 29744, "creation_time": "2005-06-20T01:25:16Z", "is_private": false}, {"count": 9, "tags": [], "creator": "brad_boyer@symantec.com", "attachment_id": 16105, "text": "Created attachment 16105\nproxy_connect patch updated for 2.1.6\n\nThis version of the patch is updated for the file rename that happened after\n2.1.2. It also has some minor fixes to the error handling.", "id": 78667, "time": "2005-08-18T22:27:28Z", "bug_id": 29744, "creation_time": "2005-08-18T22:27:28Z", "is_private": false}, {"count": 10, "tags": [], "creator": "satinders@safenet-inc.com", "attachment_id": null, "text": "(In reply to comment #9)\n> Created an attachment (id=16105) [edit]\n> proxy_connect patch updated for 2.1.6\n> This version of the patch is updated for the file rename that happened after\n> 2.1.2. It also has some minor fixes to the error handling.\n\npatch is not working when ssl client talks chunked encoding with CONNECTed \nserver. I am using patch over 2.0.53", "id": 86383, "time": "2006-03-02T10:08:23Z", "bug_id": 29744, "creation_time": "2006-03-02T10:08:23Z", "is_private": false}, {"count": 11, "tags": [], "creator": "emmanuel.e@gmx.net", "attachment_id": null, "text": "Hi,\nI think the issue has been resolved since apache 2.0.54. I can confirm that this\nbug dosent exist on WinXP. If someone can confirm on other platforms we could\nclose this bug.\nThanks,\nEmmanuel", "id": 86385, "time": "2006-03-02T10:27:44Z", "bug_id": 29744, "creation_time": "2006-03-02T10:27:44Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 29744, "text": "(In reply to comment #10)\nHow are you trying to use chunked encoding? The RFC seems to say it's a straight\nchannel with no encoding of any sort. The httpd server is just forwarding bytes\nas soon as the connection is established.", "id": 86416, "time": "2006-03-02T18:28:22Z", "creator": "brad_boyer@symantec.com", "creation_time": "2006-03-02T18:28:22Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "text": "(In reply to comment #11)\nThe bug is definitely still present in 2.0.55. I am testing on Linux, and I\nsuspect most of the others involved have been testing on something that uses the\nunix build of httpd in one way or another.\n\nHowever, I would be surprised if this is a platform specific bug, based on what\nthe real problem is (bug is in proxy_connect, not in mod_ssl). Are you sure you\nunderstand the original test case? For my testing, I am using \"openssl s_client\n-connect 127.0.0.1:443\" on the same machine running the server, and sending a\nCONNECT request to the server through this SSL channel. The client errors out\nwith \"15949:error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version\nnumber:s3_pkt.c:286:\" when the proxy_connect module starts to send data because\nproxy_connect is writing to the socket directly instead of going through the\nfilter stack. Because it skips the filter stack, the SSL module doesn't get\ncalled and the data is sent in the clear.", "attachment_id": null, "id": 86417, "creator": "brad_boyer@symantec.com", "time": "2006-03-02T18:58:22Z", "bug_id": 29744, "creation_time": "2006-03-02T18:58:22Z", "is_private": false}, {"count": 14, "tags": [], "creator": "emmanuel.e@gmx.net", "attachment_id": null, "text": "Hi Everyone,\n\nFirstly chunked encoding could possibly fail because of this if mod_proxy_http\nalso has some direct writes to the socket instead of through the ap_rwrite. I\nhavent combed through the source but I am fairly sure that chunked transfer\nseems to work fine in my experience.\n\nSecondly I do understand what you are saying in the test case. I am actually\nrunning a proxy on an SSL enabled apache server. Since browsers so far cant be\neasily tweaked to communicate over SSL to a proxy I've written a small Perl\nscript which acts as another proxy between the browser and the SSL enabled\nproxy. The browser talks normal HTTP to the Perl script. The Perl script talks\nSSL to the SSL enabled proxy. I ran into problems when the browser tried to\nCONNECT to a secure site over this setup. The Perl script would negotiate SSL\nallright but then as soon as the CONNECT request went through mod_proxy_connect\nwould hijack the connection and send back normal HTTP. There seems to be no\nproblem with mod_proxy, mod_proxy_http and mod_proxy_ftp.\n\nThats how I came across this bug. I had a hard time compiling apache on Windows\nbut after very clear instructions from www.devside.net I finally managed to\ncompile the patch. The patch worked great with 2.0.52. Recently I decided to set\nup another machine as a similar proxy. This time also as usual I picked up the\nprecompiled binary at http://www.apache.org/dist/perl/win32-bin/. The version\nhad been upgraded to 2.0.54. On a whim I decided to check it out without\ninstalling the patch. Surprisingly it worked fine. Thats how I came to the\nconclusion that mod_proxy_connect seems to have been fixed. I really dont have\nanother spare machine to test this again to reconfirm. But let me see what I can do.\n\nEmmanuel", "id": 86477, "time": "2006-03-04T04:50:37Z", "bug_id": 29744, "creation_time": "2006-03-04T04:50:37Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 29744, "text": "We have discovered the same problem while trying to connect proxytunnel over a\nlocal proxy to a remote apache/ssl proxy on port 443. You can find a description\nof the setup (and why this is useful) at:\n\n    http://dag.wieers.com/howto/ssh-http-tunneling/\n\nIt works fine without SSL, but using SSL it fails to handle the CONNECT.", "id": 87028, "time": "2006-03-20T14:56:14Z", "creator": "dag@wieers.com", "creation_time": "2006-03-20T14:56:14Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "text": "Really, nobody should ever be doing this.  I'd leave this bug open because the\npatches are a reasonable cleanup and/or the error handling is bad, not because\nthe bug has a reasonable motivation.\n\nCONNECT is defined to allow tunneling an SSL connection through a proxy.  You do\nnot connect to a proxy via SSL, *then* send a CONNECT request.  It's\nnon-sensical and it's behaviour not specified by any RFC.", "attachment_id": null, "id": 87032, "creator": "jorton@redhat.com", "time": "2006-03-20T15:51:56Z", "bug_id": 29744, "creation_time": "2006-03-20T15:51:56Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 87038, "time": "2006-03-20T18:20:19Z", "creator": "apache@nagilum.org", "creation_time": "2006-03-20T18:20:19Z", "is_private": false, "text": "I think we all can agree on that we should refrain from telling people on what\nthey should and what they should not do. Even if some things are not advisable\nsomeone might have no alternative.\nSSL is supposed to be a layer upon which an application may run its own\nprotocol. In that regard I think Apache should not behave differently whether\nI'm talking to it through SSL or not.\n"}, {"count": 18, "tags": [], "creator": "apache@nagilum.org", "attachment_id": null, "text": "Ok, back to the subject, \nthe good news first, s_client can connect through the proxy, no patch needed,\nbut ONLY with ssl2!\nThen I tried sslwrap:\n(sslwrap  -nocert -state -bugs -debug -ssl2 -port 443 -addr 10.1.1.1 -accept 2001)\nwhich yielded:\n\nSSL_accept:before/accept initialization\nSSL_accept:error in SSLv2 read client hello B\nERROR\n2411:error:140EC0AF:SSL routines:SSL2_READ_INTERNAL:non sslv2 initial\npacket:/cakebox/src/secure/lib/libssl/../../../crypto/openssl/ssl/s2_pkt.c:187:\n\nor similary for ssl3:\n\nSSL_accept:before/accept initialization\nSSL_accept:error in SSLv3 read client hello B\nERROR\n2416:error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version\nnumber:/cakebox/src/secure/lib/libssl/../../../crypto/openssl/ssl/s3_pkt.c:297:\n\nI also tried stunnel3:\n(stunnel3 -f -D 7 -c -d 2001 -r ns:443)\n\n2006.03.20 21:35:12 LOG6[2378:134633472]: SSL connected: previous session reused\n2006.03.20 21:35:17 LOG7[2378:134633472]: SSL alert (write): fatal: handshake\nfailure\n2006.03.20 21:35:17 LOG3[2378:134633472]: SSL_read: 1408F10B: error:1408F10B:SSL\nroutines:SSL3_GET_RECORD:wrong version number\n2006.03.20 21:35:17 LOG5[2378:134633472]: Connection reset: 44 bytes sent to\nSSL, 0 bytes sent to socket\n2006.03.20 21:35:17 LOG7[2378:134633472]: stunnel3 finished (0 left)\n\nand finally s_client:\n(openssl s_client -connect cakebox:443 -tls1 -bugs -state -debug)\nfter sucessfully conting, requesting the tunnel aborts with:\nSSL3 alert write:fatal:protocol version\n2431:error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version\nnumber:/cakebox/src/secure/lib/libssl/../../../crypto/openssl/ssl/s3_pkt.c:286:\nwrite to 0808D700 [080B4000] (37 bytes => 37 (0x25))\n0000 - 15 54 54 00 20 01 6e f3-14 fc bb f8 fc 4b 1e 3e   .TT. .n......K.>\n0010 - 7e 73 89 3a cb 3e f0 d2-43 e2 45 01 9b 12 88 dc   ~s.:.>..C.E.....\n0020 - ff 3e 90 5a ed                                    .>.Z.\nSSL3 alert write:warning:close notify\n\nand very similar with ssl3:\n(openssl s_client -connect cakebox:443 -ssl3 -bugs -state -debug)\nSSL3 alert write:fatal:handshake failure\n2451:error:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version\nnumber:/cakebox/src/secure/lib/libssl/../../../crypto/openssl/ssl/s3_pkt.c:286:\nwrite to 0808D700 [080B4000] (37 bytes => 37 (0x25))\n0000 - 15 54 54 00 20 14 70 c4-f8 7e b4 9d bc 18 5b a2   .TT. .p..~....[.\n0010 - a4 66 33 43 7b 89 00 b8-75 25 7f 92 8e 8e 0a 64   .f3C{...u%.....d\n0020 - b7 03 f3 46 80                                    ...F.\nSSL3 alert write:warning:close notify\n\nAll of this was tested against Apache2.0.55 (FreeBSD) PHP/4.4.2 mod_ssl/2.0.55\nrunning FreeBSD 6.1-PRERELEASE on the server and the client.\nOpenSSL 0.9.7e-p1 25 Oct 2004 was installed on both systems.\nI also applied the patch for 2.0.52 which still applies just fine on 2.0.55, but\nthe behaviour didnt change.\nI hope this helps.\n", "id": 87047, "time": "2006-03-20T20:58:28Z", "bug_id": 29744, "creation_time": "2006-03-20T20:58:28Z", "is_private": false}, {"count": 19, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "(In reply to comment #17)\n> I think we all can agree on that we should refrain from telling people on what\n> they should and what they should not do. Even if some things are not advisable\n> someone might have no alternative.\n\nIt is not about telling people what they should do. If you want to use httpd for\nword processing I won't tell you that you should not do, but I would not accept\nany bug that says, that it fails to print. Furthermore I would not support any\nenhancement requests to teach httpd to do so (This report here is an enhancement\nrequest).\n\nConnecting via SSL to a proxy and issuing a CONNECT command is not specified in\nany RFC and thus it is no bug.\nAs you can currently see, there is no conviction that this is useful or no\npriority on this issue by the developers working on the reports in bugzilla.\nBut it is open source. So feel free to prepare a patch that solves this issue\ntest it and try to convince the developer community on the dev@httpd.apache.org\nlist that this is something useful that it should be added to httpd.\nAnd if the developers do not like it, you can use it at least for own.", "id": 87048, "time": "2006-03-20T21:00:54Z", "bug_id": 29744, "creation_time": "2006-03-20T21:00:54Z", "is_private": false}, {"count": 20, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "text": "\"Connecting via SSL to a proxy and issuing a CONNECT command is not specified \nin any RFC and thus it is no bug.\"\n\nI can concur this is an enhancment request, but please cite where RFC 2818\ncites POST or GET?  Should these be unsupported as well?  Suggestion to all\non this issue thread; stop making it personal.  The request is legitimate,\nfor example, to proxy through the DMZ to a private subnet using http: - the\nrequest would not be encrypted (the backend only honoring http:) and should\ntherefore be carried with HTTP/1.1 CONNECT over ssl through the public net.\n\nThat said, there are two concerns;\n\n1. Memory growth; there are already potential issues of unbounded memory\ngrowth from bucket/brigade reallocations which have been reported by folks\nattempting to serve or proxy streaming feeds such as audio/video.  Whatever\nissues occur there, will also be evidenced here in this use case.  Not only\ndoes the underlying bug need to be addressed but the \n\n2. Double-encryption; carrying an https: connection over a proxy CONNECT\ntunnel would result in the client performing double SSL encryption, which\nwould be sub-optimal.  The client to proxy stream would reencrypt the client\nto backend server encrypted channel.  This means it's especially important\nfor the client to backend server to employ any deflation of the stream first,\nbecause no compression of the client to proxy connection is possible with\nencrypted data.\n\nThere is no benefit to the double-encryption example cited above.\n", "id": 87049, "time": "2006-03-20T22:24:22Z", "bug_id": 29744, "creation_time": "2006-03-20T22:24:22Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 87050, "time": "2006-03-20T22:30:17Z", "creator": "wrowe@apache.org", "creation_time": "2006-03-20T22:30:17Z", "is_private": false, "text": "\"Not only does the underlying bug need to be addressed but the \"...\n\n...new code must be evaluated against the corrected use of brigades and buckets\nto ensure the issue doesn't occur in CONNECT streams either.\n\nOne additional observation, it's necessary for the patch to drill back down\nto only connection-oriented filters, beyond any body filters that are in the\nfilter stack, to avoid corruption the CONNECT stream. "}, {"count": 22, "tags": [], "bug_id": 29744, "text": "(In response to comment #21)\nIs setting r->output_filters = NULL not enough to kill all the filters above the\nconnection level? The current patch does leave that in the code, and it seems to\nwork. I must say I'm no expert in the way apache filters work internally.", "id": 87054, "time": "2006-03-21T02:46:02Z", "creator": "brad_boyer@symantec.com", "creation_time": "2006-03-21T02:46:02Z", "is_private": false, "attachment_id": null}, {"count": 23, "tags": [], "creator": "brad_boyer@symantec.com", "attachment_id": null, "text": "(In response to the \"should we\" comment thread)\n1) The comments in the original code specifically state that it is doing things\nthe wrong way, and the way the patch does it is more or less the suggested fix\nfrom the old comments.\n\n2) Just as a use-case, I am actually using the CONNECT method to tunnel an\nunencrypted protocol (don't ask) and taking advantage of the SSL handling in\napache to add security and authentication to an otherwise completely unsecured\nconnection. I know this isn't the original intended use of CONNECT, but it seems\nto me to be a valid usage.\n", "id": 87055, "time": "2006-03-21T02:52:01Z", "bug_id": 29744, "creation_time": "2006-03-21T02:52:01Z", "is_private": false}, {"count": 24, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 87056, "time": "2006-03-21T03:52:39Z", "creator": "wrowe@apache.org", "creation_time": "2006-03-21T03:52:39Z", "is_private": false, "text": "Nope, you can't null the output_filter.\n\nYou -can- set input_filter and output_filter to the conn_rec's input and\noutput filter, stripping the connection of all http/body filters.\n\n "}, {"count": 25, "tags": [], "creator": "dag@wieers.com", "attachment_id": null, "text": "> There is no benefit to the double-encryption example cited above.\n\nThe way I see it is that the double encryption in this case is a trade-off to\nhave the initial connection to the remote (HTTPS) proxy encrypted (the SSH\nconnection string). The overhead is a calculated one in the case you use this\nsetup (or one that you are forced to use in case there is layer 7 inspection).", "id": 87123, "time": "2006-03-22T20:57:33Z", "bug_id": 29744, "creation_time": "2006-03-22T20:57:33Z", "is_private": false}, {"count": 26, "tags": [], "creator": "emmanuel.e@gmx.net", "attachment_id": null, "text": "Hi Everyone,\n\nI was finally able to check the issue again and yes the bug does exist in the\n2.0.54 release on WinXP. Brad's patch works great. Thanks Brad. Sorry about the\nbad testing earlier.\n\nEmmanuel\n\n(In reply to comment #14)\n> Hi Everyone,\n> \n> Firstly chunked encoding could possibly fail because of this if mod_proxy_http\n> also has some direct writes to the socket instead of through the ap_rwrite. I\n> havent combed through the source but I am fairly sure that chunked transfer\n> seems to work fine in my experience.\n> \n> Secondly I do understand what you are saying in the test case. I am actually\n> running a proxy on an SSL enabled apache server. Since browsers so far cant be\n> easily tweaked to communicate over SSL to a proxy I've written a small Perl\n> script which acts as another proxy between the browser and the SSL enabled\n> proxy. The browser talks normal HTTP to the Perl script. The Perl script talks\n> SSL to the SSL enabled proxy. I ran into problems when the browser tried to\n> CONNECT to a secure site over this setup. The Perl script would negotiate SSL\n> allright but then as soon as the CONNECT request went through mod_proxy_connect\n> would hijack the connection and send back normal HTTP. There seems to be no\n> problem with mod_proxy, mod_proxy_http and mod_proxy_ftp.\n> \n> Thats how I came across this bug. I had a hard time compiling apache on Windows\n> but after very clear instructions from www.devside.net I finally managed to\n> compile the patch. The patch worked great with 2.0.52. Recently I decided to set\n> up another machine as a similar proxy. This time also as usual I picked up the\n> precompiled binary at http://www.apache.org/dist/perl/win32-bin/. The version\n> had been upgraded to 2.0.54. On a whim I decided to check it out without\n> installing the patch. Surprisingly it worked fine. Thats how I came to the\n> conclusion that mod_proxy_connect seems to have been fixed. I really dont have\n> another spare machine to test this again to reconfirm. But let me see what I\ncan do.\n> \n> Emmanuel", "id": 87585, "time": "2006-04-05T05:30:56Z", "bug_id": 29744, "creation_time": "2006-04-05T05:30:56Z", "is_private": false}, {"count": 27, "tags": [], "text": "Created attachment 18222\nFixed patch with read loops and updated to 2.2.0\n\nThis is a new version of the patch to use the filter I/O in proxy_connect. Some\nmodules don't return everything with a single ap_get_brigade() call, so this\nversion loops until there is no data pending. The filter chains in the request\nare now set to the ones from the connection instead of NULL. I also have\nupdated to 2.2.0 and changed some log messages.", "attachment_id": 18222, "id": 88791, "creator": "brad_boyer@symantec.com", "time": "2006-05-03T22:27:40Z", "bug_id": 29744, "creation_time": "2006-05-03T22:27:40Z", "is_private": false}, {"count": 28, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 92108, "time": "2006-08-10T13:46:23Z", "creator": "arnaud.boulan@libertysurf.fr", "creation_time": "2006-08-10T13:46:23Z", "is_private": false, "text": "Hello,\nI'd like to see this feature integrated in the official apache distribution,\nbecause it can be very convenient in some cases. It is the only solution I have\nfound in order to access my home computer from my office.\n\nIndeed, here at work we have a firewall/proxy that filters applicative content\nand will only accept HTTP on port 80 and SSL on port 443\nI could have run an stunnel server on port 443 at home, but i have an apache\nserver there that i want to also handle ssl requests.\n\nSo, what i needed is that apache be able to behave also as a \"stunnel\" server. I\nhave been thinking of writing a patch like the one attached until i found this\nbug report and saw that someone had already written it.\n\nI've been using this patch for some time (now against 2.0.59) and it is working\nperfectly.\n"}, {"count": 29, "tags": [], "creator": "lionel.victor@free.fr", "attachment_id": null, "text": "I've downloaded recently the source code from apache 2.2.0 but the patch won't \napply... Which other patches are required ?\n\nI'm running a 2.2.3 apache server and none of the patches here seem to apply. \nThis is why I'm now trying with the 2.2.0 official distrib, but I get more or \nless the same result.\n\nI tried to debug the code myself but I barely know the apache API. I'm \nwondering what the backconn socket in the patch represent, where does it come \nfrom ? there are references to some c-> structure but I don't have any c \nvariable in my https 2.2.0 original code ??? then there is this \"packet \nbrigade\" stuff that is used to copy blocks but I dont have it in the original \nsource eihter ?? then finally there are thes input/ouput filters.. ???\n\ncan anyone point my out of this stuff ? or just mail me a plain patched \nmod_proxy_connect.c file from the 2.2.0 distrib so I can start from something \nconcrete instead of some patch work that makes no sense to me so far ?\n\nwhy isn't the 2220 patch working on the httpd2.2.0 original source code ? \napplying a patch is as easy as patch -u -p0 < patch_file... damn what could I \nmiss ???\n\nmany many many thx in advance for your tips/hints help.\n\n(In reply to comment #27)\n> Created an attachment (id=18222) [edit]\n> Fixed patch with read loops and updated to 2.2.0\n> This is a new version of the patch to use the filter I/O in proxy_connect. \nSome\n> modules don't return everything with a single ap_get_brigade() call, so this\n> version loops until there is no data pending. The filter chains in the \nrequest\n> are now set to the ones from the connection instead of NULL. I also have\n> updated to 2.2.0 and changed some log messages.\n\n", "id": 97911, "time": "2007-01-10T13:40:38Z", "bug_id": 29744, "creation_time": "2007-01-10T13:40:38Z", "is_private": false}, {"count": 30, "tags": [], "bug_id": 29744, "text": "maybe you could check out the 2.0.5x version. at least it works there.\n\n(In reply to comment #29)\n> I've downloaded recently the source code from apache 2.2.0 but the patch won't \n> apply... Which other patches are required ?\n> \n> I'm running a 2.2.3 apache server and none of the patches here seem to apply. \n> This is why I'm now trying with the 2.2.0 official distrib, but I get more or \n> less the same result.\n> \n> I tried to debug the code myself but I barely know the apache API. I'm \n> wondering what the backconn socket in the patch represent, where does it come \n> from ? there are references to some c-> structure but I don't have any c \n> variable in my https 2.2.0 original code ??? then there is this \"packet \n> brigade\" stuff that is used to copy blocks but I dont have it in the original \n> source eihter ?? then finally there are thes input/ouput filters.. ???\n> \n> can anyone point my out of this stuff ? or just mail me a plain patched \n> mod_proxy_connect.c file from the 2.2.0 distrib so I can start from something \n> concrete instead of some patch work that makes no sense to me so far ?\n> \n> why isn't the 2220 patch working on the httpd2.2.0 original source code ? \n> applying a patch is as easy as patch -u -p0 < patch_file... damn what could I \n> miss ???\n> \n> many many many thx in advance for your tips/hints help.\n> \n> (In reply to comment #27)\n> > Created an attachment (id=18222) [edit] [edit]\n> > Fixed patch with read loops and updated to 2.2.0\n> > This is a new version of the patch to use the filter I/O in proxy_connect. \n> Some\n> > modules don't return everything with a single ap_get_brigade() call, so this\n> > version loops until there is no data pending. The filter chains in the \n> request\n> > are now set to the ones from the connection instead of NULL. I also have\n> > updated to 2.2.0 and changed some log messages.\n> \n> \n\n", "id": 97918, "time": "2007-01-10T20:22:32Z", "creator": "emmanuel.e@gmx.net", "creation_time": "2007-01-10T20:22:32Z", "is_private": false, "attachment_id": null}, {"count": 31, "tags": [], "bug_id": 29744, "text": "Created attachment 19504\nFix broken patch 18222 for 2.2.0; includes cleanups (see text)\n\nI discovered that the last patch posted for 2.2.0 is faultly since it appears\nthe diff was taken against an older 2.1.6 tree rather than the 2.2.0 tree.\nHence I have merged these changes into a patch that works for me when applied\nagainst 2.2.2.\n\nNote that I have tidied up parts of the patch, in particular removing the\nentries for changes in white space and changes to/from\nap_log_error/ap_log_rerror, plus changing the order of parts of the patch in\norder to fit the newer code in 2.2.2.", "id": 98931, "time": "2007-02-03T09:25:22Z", "creator": "mark.cave-ayland@ilande.co.uk", "creation_time": "2007-02-03T09:25:22Z", "is_private": false, "attachment_id": 19504}, {"count": 32, "tags": [], "creator": "lionel.victor@free.fr", "attachment_id": null, "text": "Thank you so much everyone... actually I did managed to patch the sources I \nhad downloaded but I did not post anything here becaus I was not sure that it \nwould work for everybody (at least it is still working for what I wanted to \nachieve).\n\nI did it based on what I read about the bug (module is outputing data directly \nto the socket instead of using a filter) and a book a firend borrowed me on \napache API... (you can guess how ugly it finally gets)\n\nI believe that your new attachement will save time to other people so thank \nyou very much again. I will probably try to apply it sooner or later and \nreplace my ugly code... It will eventually save me from my own bugs !\n\nmany many thanks indeed.\n\n(In reply to comment #31)\n> Created an attachment (id=19504) [edit]\n> Fix broken patch 18222 for 2.2.0; includes cleanups (see text)\n> I discovered that the last patch posted for 2.2.0 is faultly since it appears\n> the diff was taken against an older 2.1.6 tree rather than the 2.2.0 tree.\n> Hence I have merged these changes into a patch that works for me when applied\n> against 2.2.2.\n> Note that I have tidied up parts of the patch, in particular removing the\n> entries for changes in white space and changes to/from\n> ap_log_error/ap_log_rerror, plus changing the order of parts of the patch in\n> order to fit the newer code in 2.2.2.\n\n", "id": 98969, "time": "2007-02-05T05:26:02Z", "bug_id": 29744, "creation_time": "2007-02-05T05:26:02Z", "is_private": false}, {"count": 33, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 99603, "time": "2007-02-21T01:09:51Z", "creator": "julian@d-and-j.net", "creation_time": "2007-02-21T01:09:51Z", "is_private": false, "text": "I tried the latest patch given (by Mark, the one against the 2.2.2 version), and\napplied it to the 2.2.3 tree.  It did not work, in the sense that proxytunnel\nsaid the following:\n\nburnside:~ $ ssh -p 8080 localhost\nSSL enabled\nlocalhost is 127.0.0.1\nConnected to localhost:443\nTunneling to localhost:8080 (destination)\nConnect string sent to Proxy: 'CONNECT localhost:8080 HTTP/1.0\nProxy-Connection: Keep-Alive\n\n'\nDEBUG: recv: ''analyze_HTTP: borken\nUnsupported HTTP version number\nssh_exchange_identification: Connection closed by remote host\n\n\nSo it seems that the problem may still be there.  Any suggestions?\n\n   Julian\n"}, {"count": 34, "tags": [], "creator": "lionel.victor@free.fr", "attachment_id": null, "text": "Well.. I have not tested the latest patch. I did not post mine because it is \nmore a hack than a patch...\n\nYou can get my source file here:\n\nhttp : lionel.victor.free.fr/mod_proxy_connect.c\n\nI did not produce a diff so you can diff it yourself from your source and \nverify what I did. (be carefull, i changed indentation so you'd better use -w \nwhen using diff)\n\nthe source above is modified from the original 2.2.3 source code downloaded \nfrom the apache project.\n\nNow, concerning your problem, I advise you to really debug step by step. I \nfirst though that i would use proxytunnel alone (with the encrypt option) but \nI was wrong... I definitely had a problem similar to yours.\nHowever, I am using mutual authentication on some parts of my HTTPS host, I \ntherefore though that proxytunnel could not handle the special SSL handshake. \nMaybe it just does not work at all with SSL...\n\nI'm now using proxytunnel to link to my machine (and listen to local \nconnections), then stunnel to open the ssl tunnel and present the client \ncertificate... then another proxytunnel to do what I have to do.\n\nhope it helps\n\n(In reply to comment #33)\n> I tried the latest patch given (by Mark, the one against the 2.2.2 version), \nand\n> applied it to the 2.2.3 tree.  It did not work, in the sense that proxytunnel\n> said the following:\n> burnside:~ $ ssh -p 8080 localhost\n> SSL enabled\n> localhost is 127.0.0.1\n> Connected to localhost:443\n> Tunneling to localhost:8080 (destination)\n> Connect string sent to Proxy: 'CONNECT localhost:8080 HTTP/1.0\n> Proxy-Connection: Keep-Alive\n> '\n> DEBUG: recv: ''analyze_HTTP: borken\n> Unsupported HTTP version number\n> ssh_exchange_identification: Connection closed by remote host\n> So it seems that the problem may still be there.  Any suggestions?\n>    Julian\n\n", "id": 99612, "time": "2007-02-21T03:13:03Z", "bug_id": 29744, "creation_time": "2007-02-21T03:13:03Z", "is_private": false}, {"count": 35, "tags": [], "bug_id": 29744, "text": "Thanks for your comments (comment #34).  I tried your version of\nmod_proxy_connect.c, but it made no difference.  It seems that the issue is in\nproxytunnel: it appears to send plain HTTP headers, even over an HTTPS\nconnection.  Hmmm.\n\nPlease could you describe your solution a little more fully - I've never played\nwith stunnel and don't understand the setup you've described.\n\nThanks!\n", "id": 99659, "time": "2007-02-21T16:57:18Z", "creator": "julian@d-and-j.net", "creation_time": "2007-02-21T16:57:18Z", "is_private": false, "attachment_id": null}, {"count": 36, "tags": [], "creator": "lionel.victor@free.fr", "attachment_id": null, "text": "Sorry for that late answer.\n\nWhat you described with the Unsupported HTTP version number message seems to \nbe a bug from proxytunnel... I haven't had the time to investigate the -e \noption which is used to specify that proxytunnel must use SSL so I cannot \ncomment on that.\n\nBasically, as it did not work for me I used an extra tool called stunnel that \nsimply listen to a port locally and open an SSL session to a remotehost. You \njust send traffic in clear to the local port and stunnel makes the connection \nto the remote host:port with ssl and deals with the crypto.\n\nNow, if you want to connect through an HTTP proxy, you use\nproxytunnel.exe -p proxy:proxyport -d targethost:targetport -a anylocalport\n\nIf you have to proxy other SSL, you must first launch stunnel with an entry \nlike that in your stunnel.conf\n[ssh-tunnel]\naccept = porttolistento\nconnect = ssltargethost:ssltargetport\nclient = yes\n\nThen any combination is possible... in my case:\n\nproxytunnel-1 creates a tunnel to a remote host with apache-proxy-ssl\nproxytunnel-1 listent to port 443 (-a 443)\nhere is the command line\nproxytunnel.exe -p proxy:proxyport -d apache-proxy-ssl-host:443 -a 443\n\nthen stunnel unwrap the ssl layer:\nhere is the entry for ssl-tunnel.conf\n[ssh-tunnel]\naccept = 8080\nconnect = 127.0.0.1:443\nclient = yes\n\nthen another proxytunnel creates the tunnel through apache-proxy:\nproxytunnel.exe -p localhost:8080 -d anywhere:anyport\n\nOf course, anywhere anyport must match your configuration on the apache-proxy-\nssl-host, otherwise, you will be rejected.\n\nThe second proxytunnel.exe is not necessary.. you can also configure your \nexplorer to use localhost:8080 as a proxy instead...\n\nWell you get the idea:\n- proxytunnel just connect to an http host throug a proxy\n- stunnel manages the ssl traffic: it converts https into http for you if you \nprefer...\n\nnow, based on your needs, you must embedd tunnels to jump from host to host \nand decrypt the traffic... the exact config depends on what you want to \nachieve.\n\nThe nice thing is that you can now secure the apache-proxy module with ssl \n(including client authentication) and it opens some new opportunities to \nsecure a network.\n\nhope it helps\n\n\n(In reply to comment #35)\n> Thanks for your comments (comment #34).  I tried your version of\n> mod_proxy_connect.c, but it made no difference.  It seems that the issue is \nin\n> proxytunnel: it appears to send plain HTTP headers, even over an HTTPS\n> connection.  Hmmm.\n> Please could you describe your solution a little more fully - I've never \nplayed\n> with stunnel and don't understand the setup you've described.\n> Thanks!\n\n", "id": 100477, "time": "2007-03-16T07:15:13Z", "bug_id": 29744, "creation_time": "2007-03-16T07:15:13Z", "is_private": false}, {"count": 37, "tags": [], "bug_id": 29744, "attachment_id": 19723, "id": 100479, "time": "2007-03-16T07:43:34Z", "creator": "julian@d-and-j.net", "creation_time": "2007-03-16T07:43:34Z", "is_private": false, "text": "Created attachment 19723\nPatch for proxytunnel 1.7.0 to have two proxies with second one SSL encrypted\n\nThanks for this advice!  Amusingly, I fixed the problem just yesterday: I used\nthe SVN version of proxytunnel, patched so that I could do the following:\n\nputty -> proxytunnel -> local proxy (unencrypted) -> remote Apache HTTPS\nencrypted -> SSH\n\n(The firewall required the second CONNECT to be encrypted.)  The patch is\nattached; it includes recent SVN fixes, as well as my patch to introduce -R,\nmeaning encrypt from the second proxy.\tThe command line will then read:\n\nproxytunnel -q -R -p proxy.local:8000 -r proxy.remote.org:443 -d\nssh.remote.org:22\n\nI hope this is of help to others.\n\nJulian"}, {"count": 38, "tags": [], "creator": "parwy@parwy.com", "attachment_id": null, "text": "Hi Julian, I was very excited about this patch as its exactly what I'm looking\nfor.  I tried applying this patch to \"proxytunnel 1.7.0 2007-02-25 11:46\".  On\nexecuting ssh with something akin to:\n\nproxytunnel -q -R -p proxy.local:8080 -r proxy.remote.org:443 -d ssh.remote.org:22\n\nit CONNECTs through the first proxy, CONNECTs through the second proxy to\nssh.remote.org:22, however is immediately disconnected.  When I look at\n/var/log/secure all I see is a message like:\n\nMay 17 22:25:16 server1 sshd[31530]: Did not receive identification string from\n127.0.0.1\n\nfor every connect attempt.  Did you experience anything similar, any ideas? \nI've tried testing with 2 proxies where the second proxy is running without SSL\n(and so also without using the -R option) and everything works okay.  Its only\nwhen I make the second proxy use SSL and add the -R option that I get immediate\ndisconnect from the sshd daemon.\n\nRegards\nParwy Sekhon\n\n(In reply to comment #37)\n> Created an attachment (id=19723) [edit]\n> Patch for proxytunnel 1.7.0 to have two proxies with second one SSL encrypted\n> \n> Thanks for this advice!  Amusingly, I fixed the problem just yesterday: I used\n> the SVN version of proxytunnel, patched so that I could do the following:\n> \n> putty -> proxytunnel -> local proxy (unencrypted) -> remote Apache HTTPS\n> encrypted -> SSH\n> \n> (The firewall required the second CONNECT to be encrypted.)  The patch is\n> attached; it includes recent SVN fixes, as well as my patch to introduce -R,\n> meaning encrypt from the second proxy.\tThe command line will then read:\n> \n> proxytunnel -q -R -p proxy.local:8000 -r proxy.remote.org:443 -d\n> ssh.remote.org:22\n> \n> I hope this is of help to others.\n> \n> Julian\n\n(In reply to comment #37)\n> Created an attachment (id=19723) [edit]\n> Patch for proxytunnel 1.7.0 to have two proxies with second one SSL encrypted\n> \n> Thanks for this advice!  Amusingly, I fixed the problem just yesterday: I used\n> the SVN version of proxytunnel, patched so that I could do the following:\n> \n> putty -> proxytunnel -> local proxy (unencrypted) -> remote Apache HTTPS\n> encrypted -> SSH\n> \n> (The firewall required the second CONNECT to be encrypted.)  The patch is\n> attached; it includes recent SVN fixes, as well as my patch to introduce -R,\n> meaning encrypt from the second proxy.\tThe command line will then read:\n> \n> proxytunnel -q -R -p proxy.local:8000 -r proxy.remote.org:443 -d\n> ssh.remote.org:22\n> \n> I hope this is of help to others.\n> \n> Julian\n\n", "id": 103321, "time": "2007-05-17T16:06:27Z", "bug_id": 29744, "creation_time": "2007-05-17T16:06:27Z", "is_private": false}, {"count": 39, "tags": [], "bug_id": 29744, "text": "Have you tried running proxytunnel with the -v (verbose) flag instead of -q to\nsee exactly what is happening?", "id": 103325, "time": "2007-05-17T23:47:01Z", "creator": "julian@d-and-j.net", "creation_time": "2007-05-17T23:47:01Z", "is_private": false, "attachment_id": null}, {"count": 40, "tags": [], "creator": "parwy@parwy.com", "attachment_id": null, "text": "Yes, as expected from the /var/log.secure I get\n\nSSL local to remote proxy enabled\nProxy basic auth is xxxx\nLocal proxy proxy.local.org resolves to xxxx\nConnected to proxy.local.org:8080 (local proxy)\nTunneling to proxy.remote.org:443 (remote proxy)\nConnect string sent to local proxy:\n-> CONNECT proxy.remote:443 HTTP/1.0\n-> Proxy-authorization: Basic xxxx\n-> User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win32)\n-> Proxy-Connection: Keep-Alive\nData received from local proxy:\n<- HTTP/1.0 200 Connection established\n<- Proxy-Agent: NetCache NetApp/6.0.3D2\nTunneling to ssh.remote.org:22 (destination)\nConnect string sent to remote proxy:\n-> CONNECT ssh.remote.org:22 HTTP/1.0\n-> User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win32)\n-> Proxy-Connection: Keep-Alive\nReceived from remote proxy:\nerror: Socket read error.\nssh_exchange_identification: Connection closed by remote host\n\nPS: machines names and basic authorisation changed to hide details.\n\n(In reply to comment #39)\n> Have you tried running proxytunnel with the -v (verbose) flag instead of -q to\n> see exactly what is happening?", "id": 103349, "time": "2007-05-18T11:14:35Z", "bug_id": 29744, "creation_time": "2007-05-18T11:14:35Z", "is_private": false}, {"count": 41, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 103569, "time": "2007-05-23T12:13:31Z", "creator": "issues.apache.org@krudde.nl", "creation_time": "2007-05-23T12:13:31Z", "is_private": false, "text": "I am experiencing the same problem (when hopping with http through the first\nproxy and ssl through the second proxy to an ssh server):\n\nReceived from remote proxy:\nerror: Socket read error.\nssh_exchange_identification: Connection closed by remote host\n\nAnyone got suggestions or solutions?"}, {"count": 42, "tags": [], "bug_id": 29744, "attachment_id": 20331, "id": 104233, "time": "2007-06-08T13:30:35Z", "creator": "oeufdure@gmail.com", "creation_time": "2007-06-08T13:30:35Z", "is_private": false, "text": "Created attachment 20331\nFixed patch updated to 2.2.4"}, {"count": 43, "tags": [], "creator": "david@gence.biz", "attachment_id": 20379, "text": "Created attachment 20379\nPort of the patch from 2.2.2 to 2.2.4\n\nHi,\n\nI tried the patch join in the \"20331: Fixed patch updated to 2.2.4\" message,\nbut it didn't work for me.\nI had those kind of message:\n=> In the standar output\n...\nReceived from remote proxy:\nerror: Socket read error.\nssh_exchange_identification: Connection closed by remote host\n\n=> In the ssh log\nJun 21 13:34:48 [sshd] Did not receive identification string from\nXXX.XXX.XXX.XXX\n\nI made this patch by porting the existing one for apache 2.2.2, and now it work\nfor me.\nI hope it will help.", "id": 104593, "time": "2007-06-21T06:00:37Z", "bug_id": 29744, "creation_time": "2007-06-21T06:00:37Z", "is_private": false}, {"count": 44, "tags": [], "creator": "ioldanach@gmail.com", "attachment_id": null, "text": "Who should I talk to to suggest that this patch be moved into the official\ndistribution?  Whether or not CONNECT is specified to work over ssl it would be\nuseful if it did.  There are certainly circumstances where it might be desirable\nto securely proxy the first leg of a connection, regardless of the underlying\nconnection's protocol.  I'd like to be able to use the functionality without\nhaving to move to a patched apache server.", "id": 106870, "time": "2007-08-17T12:51:28Z", "bug_id": 29744, "creation_time": "2007-08-17T12:51:28Z", "is_private": false}, {"count": 45, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 108190, "time": "2007-09-14T01:56:24Z", "creator": "pergh@inbis.no", "creation_time": "2007-09-14T01:56:24Z", "is_private": false, "text": "With the behaviour of encrypted CONNECT not specified by an RFC and obviously\ntwo different uses of CONNECT are proven to be in demand (and the original\nwriter leaving comments in the code stating that the current state of affairs\nisn't necessarily the right way of doing things) I don't see why this feature\nisn't included in the official distribution. \n\nAll that is needed is a new directive to control the behaviour, for instance\nCONNNECTEncryption plain | encrypted | sameAsOrigin. The default may very well\nbe todays behaviour to ensure compatibility.\n\nToday, I have to use at least a day to add this patch to my servers each time\nthere is a new Debian release of Apache2. I loose the ease of use of a\ndistribution, and my servers are potentially less secure because this perpetual\npatch doesn't get the amount of competent eyeballing and feedback it deserve.\n"}, {"count": 46, "tags": [], "text": "Created attachment 20911\nPort of the patch from 2.2.4 to 2.2.6", "attachment_id": 20911, "id": 108953, "creator": "dag@wieers.com", "time": "2007-10-03T09:39:46Z", "bug_id": 29744, "creation_time": "2007-10-03T09:39:46Z", "is_private": false}, {"count": 47, "tags": [], "creator": "ioldanach@gmail.com", "attachment_id": null, "text": "(In reply to comment #46)\n> Created an attachment (id=20911) [edit]\n> Port of the patch from 2.2.4 to 2.2.6\n> \n\nI applied this patch to fresh 2.2.6 source and it didn't work.  Afterwards\nthough I upgraded to 2.2.6 through yum and was able, with no issues, to get the\nsource rpm for 2.2.4, apply the patch to that, compile it with mod_proxy_connect\nas shared, and then copy the mod_proxy_connect.so file into the 2.2.6 modules\ndirectory and it worked just fine.\n\nIncidentally, the command that works in my ssh config is:\n\n        ProxyCommand /usr/tunnel/proxytunnel/trunk/proxytunnel/proxytunnel.exe\n-p proxy.com:443 -d sshhost.com:22 -u myuser -s mypass -E\n", "id": 109034, "time": "2007-10-05T11:28:21Z", "bug_id": 29744, "creation_time": "2007-10-05T11:28:21Z", "is_private": false}, {"count": 48, "tags": [], "bug_id": 29744, "attachment_id": 20946, "id": 109133, "time": "2007-10-08T11:00:22Z", "creator": "timmy@invisibles.org", "creation_time": "2007-10-08T11:00:22Z", "is_private": false, "text": "Created attachment 20946\nWorking port of the patch from 2.2.4 to 2.2.6\n\nA working port of the patch from 2.2.4 to 2.2.6."}, {"count": 49, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 109205, "time": "2007-10-10T11:58:21Z", "creator": "bugmenot@lortemail.dk", "creation_time": "2007-10-10T11:58:21Z", "is_private": false, "text": "Yes, can we please get this into the official release?  I use apt and don't want\nto have to patch and recompile for every release.\n\nThanks."}, {"count": 50, "tags": [], "creator": "mark.cave-ayland@ilande.co.uk", "attachment_id": null, "text": "I don't think that any developers are following this bug anymore; I'd imagine\nwe'd have to bring up the topic on one of the mailing lists...", "id": 109485, "time": "2007-10-18T12:54:49Z", "bug_id": 29744, "creation_time": "2007-10-18T12:54:49Z", "is_private": false}, {"count": 51, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 114272, "time": "2008-03-04T15:17:50Z", "creator": "sudhaker@yahoo.com", "creation_time": "2008-03-04T15:17:50Z", "is_private": false, "text": "\nBump... +1 from me too.\n\nThis is more than 3-1/2 year old issue. Committers, please consider this so-very-obvious fix for merging. This is certainly a good feature and nice to have. \n\nSSL is a transport layer feature and SSL-inside-SSL is a very valid use-case. Not sure why bug-fix team is reluctant in this.\n\nThanks,\n"}, {"count": 52, "tags": [], "text": "This report is opened against 2.0-HEAD so I doubt anyone from the developers is actually looking at it. I guess we have to move it to 2.3-HEAD ?\n\nOr someone need to bring it up on the developers mailinglist as suggested in #50. Anyone willing to describe the possible use-cases and a well written rationale ?\n\n", "attachment_id": null, "id": 114273, "creator": "dag@wieers.com", "time": "2008-03-04T16:33:54Z", "bug_id": 29744, "creation_time": "2008-03-04T16:33:54Z", "is_private": false}, {"count": 53, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 114276, "time": "2008-03-04T23:14:44Z", "creator": "nick@webthing.com", "creation_time": "2008-03-04T23:14:44Z", "is_private": false, "text": "If any patch is to be applied, it needs to be evaluated.  A patch that works against current /trunk/ and any usage cases / test cases would reduce the developer time required to evaluate it, and could thus improve your chances.  All I see here is inconclusive to merit evaluating (patches that work for some but fail for others, etc)."}, {"count": 54, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 114284, "time": "2008-03-05T05:34:01Z", "creator": "dag@wieers.com", "creation_time": "2008-03-05T05:34:01Z", "is_private": false, "text": "I do not agree, we first need closure on the fact whether the Apache developers want to support CONNECT over an SSL connection. There are cases where this functionality is needed and useful, but as long as this is not acknowledge by any of the developers, why should we bother with patches ?\n\nI also do not agree with your assessement of this bugreport. Did you try or use the functionality yourself ? Did you have a problem with it ?"}, {"count": 55, "tags": [], "bug_id": 29744, "text": "(In reply to comment #54)\n> I do not agree, we first need closure on the fact whether the Apache developers\n> want to support CONNECT over an SSL connection.\n\nYou won't get that by posting here.  This isn't the dev list.\n\n>    There are cases where this\n> functionality is needed and useful, but as long as this is not acknowledge by\n> any of the developers, why should we bother with patches ?\n\nPeople have lots of demands on their time, and a chronic shortage of round tuits.  Evidently no committer sees a need for this (or it would have got their attention before now).  If anyone wants a patch, you have to convince us it's worth our time and effort to review it.\n\n> I also do not agree with your assessement of this bugreport. Did you try or use\n> the functionality yourself ? Did you have a problem with it ?\n\nI have no use for it.\n\nI took a look, because the sheer number of people subscribed seems to indicate a real demand.  But when I see numerous competing patches, and lots of comments about them not working, it's too much effort to figure out where to start.", "id": 114286, "time": "2008-03-05T07:03:13Z", "creator": "nick@webthing.com", "creation_time": "2008-03-05T07:03:13Z", "is_private": false, "attachment_id": null}, {"count": 56, "tags": [], "bug_id": 29744, "text": "\nWe can possibly fork this effort and someone can publish various pre-compiled and patched \"mod_proxy_connect.so\". This can take away the pain of individually re-compiling the module ;-)\n\nLast night I compiled \"mod_proxy_connect\" for 2.2.3 using patch given at https://issues.apache.org/bugzilla/attachment.cgi?id=20379 (had to fix httpd-2.2.3 that comes with CentOS5). It worked great after I replace the original \"mod_ssl_connect.so\" with this patched one :-)\n\nI use Stunnel at client-end to theoretically abstracts me from underlying SSL connections and get a normal local http-proxy at localhost:8080 which bridges to apache running at my home machine (over SSL). FYI, my <Proxy> settings are inside SSL VirtualHost and it is not exposed without encryption.\n\nThis technique works great for ssh-over-connect with dynamic-forward enabled at port 1080. Then I can then set socks-proxy to localhost:1080 in any application and it works.\n\nOther use-case is when I configure my applications to use http-proxy at localhost:8080 ; This is where things get complicated and I see \"SSL3_GET_RECORD:bad decompression\" in my stunnel log file. Setting \"sslVersion  = TLSv1\" in my \"stunnel.conf\" eventually fixes it (not tested comprehensively). Guess there are some combinations of protocols which breaks even with this patch.\n\nFollowings are possible combinations we may need to test \n\nPlain-over-SSLv2, SSLv2-over-SSLv2, SSLv3-over-SSLv2, TSLv1-over-SSLv2\nPlain-over-SSLv3, SSLv2-over-SSLv3, SSLv3-over-SSLv3, TSLv1-over-SSLv3\nPlain-over-TSLv1, SSLv2-over-TSLv1, SSLv3-over-TSLv1, TSLv1-over-TSLv1\n\nQuestion for SSL expert:- Are there any technical challenges in implementing SSL-inside-SSL?\n\nCheers,\nSudhaker\n", "id": 114289, "time": "2008-03-05T08:03:06Z", "creator": "sudhaker@yahoo.com", "creation_time": "2008-03-05T08:03:06Z", "is_private": false, "attachment_id": null}, {"count": 57, "tags": [], "creator": "emmanuel.e@gmx.net", "attachment_id": null, "text": "I dont see why CONNECT should not be supported over an SSL connection. I mean after all a proxy is a proxy and ssl is ssl. The proxy should do its job and ssl should do its.\n\nI think writing directly to the socket instead of the handler that called it not a great idea on the part of mod_proxy.\n\nThis is becoming a much needed functionality given the increasing restrictiveness of corporate firewalls. If I (and others) get access only to port 443 and I need to run a secure webserver as well as a proxy then apache is the only solution. If I use SSHD then only I will benefit and others cannot use the secure web server (since I cant be handing out ssh logins to all and sundry). Most people do not get 2 IP addresses to run both SSHD and Apache separately.\n\nI have been running this patch on winxp for over 3 years now and it works great. Managed to compile it using MSVC++. One can get a free one month ssl certificate from rapidssl. Since this certificate will be verifiable from the certificate store of all browsers (except for the expired date) it provides fairly good security against a man in the middle attack too.\n\nI think if this patch is made mainstream, interesting apps on bypassing restrictive firewalls will make their appearance. I myself have one which I have not released because of this unfixed issue.\n\nHavent had problems with plain over SSLv3 or SSLv3 over SSLv3 using putty and/or mozilla and my own app which does what stunnel does except that it verifies the certificate (unlike stunnel).\n\nSometimes disconnects are a problem, but it could be because of intermediate proxies. Setting keep-alives in putty does keep the connection going for a fairly long time (a couple of hours at least).\n\nIn any case I think Apache has a rather intimidating attitude towards requests. The default hypothesis seems to be that most requests are worthless. But then I guess that the problem with the world. A few people control resources that affect far too many people, some of whom may not even be aware of how it is affecting or not affecting them. Look at our politicians or bureaucrats or even our bosses within the organization. Some requests may be worthless, some may be worth it, but demand is never a very great indicator at least in this case. I am sure not many really cared whether man had to go to the moon, or whether Mozart should have composed his famous pieces. After all these were paid for by the majority since Mozart didnt possibly go farming in the mornings.\n\nBut why intimidation and sarcasm should always be part of the response I often fail to understand.\n\nEnough said I guess. Glad to help in case anyone needs help compiling or setting up. I'd really like this to be included or else a fork to happen. Que sera sera.\n\n\n(In reply to comment #55)\n> (In reply to comment #54)\n> > I do not agree, we first need closure on the fact whether the Apache developers\n> > want to support CONNECT over an SSL connection.\n> \n> You won't get that by posting here.  This isn't the dev list.\n> \n> >    There are cases where this\n> > functionality is needed and useful, but as long as this is not acknowledge by\n> > any of the developers, why should we bother with patches ?\n> \n> People have lots of demands on their time, and a chronic shortage of round\n> tuits.  Evidently no committer sees a need for this (or it would have got their\n> attention before now).  If anyone wants a patch, you have to convince us it's\n> worth our time and effort to review it.\n> \n> > I also do not agree with your assessement of this bugreport. Did you try or use\n> > the functionality yourself ? Did you have a problem with it ?\n> \n> I have no use for it.\n> \n> I took a look, because the sheer number of people subscribed seems to indicate\n> a real demand.  But when I see numerous competing patches, and lots of comments\n> about them not working, it's too much effort to figure out where to start.\n> \n\n", "id": 114293, "time": "2008-03-05T09:07:12Z", "bug_id": 29744, "creation_time": "2008-03-05T09:07:12Z", "is_private": false}, {"count": 58, "tags": [], "creator": "pergh@inbis.no", "attachment_id": null, "text": "(In reply to comment #55)\n> (In reply to comment #54)\n[snip]\n\n> If anyone wants a patch, you have to convince us it's\n> worth our time and effort to review it.\n> \n[snip]\n> \n> I took a look, because the sheer number of people subscribed seems to indicate\n> a real demand.  But when I see numerous competing patches, and lots of comments\n> about them not working, it's too much effort to figure out where to start.\n\nThanks for taking a look. The two patches I attach here, positively work for us on their respective Apache versions, daily and with concurrent users on several servers. Using .deb install of Apache2 on Debian with kernel 2.6.18-5-686.\n\nI once upon a time downloaded these patches from the attachments on this thread, but I fail to remember exactly which post, which is why I post these two again.\n\nWhat this patch solves for us:\n\nWe host a web based service that uses Apache2 to serve Java Applets that in turn connects back to the server on port 443. The Java applets use CONNECT and mod_proxy to connect to other Java applets connected to that server. This works like a charm, even with the network restrictions of unsigned Java applets. Since we use port 443, our service work behind most corporate firewalls too.\n\nThe reason we in some cases use unsigned Java applets is that they work on all jre (even 1.1.7 from MS), while signed Java applets fail on some of them. Regrettably, there are still a lot of 1.1.7 in active use.\n\nThe alternative would be to implement encryption and a decent web server into our simple home-brewed proxy component. Which would be expensive enough to make the whole project infeasible.\n\nWell, that's our story.\n\nI believe a generic use case is that you can bind any service to the loopback interface and use Apache and mod_proxy to provide secure access, without sacrificing secure web hosting on that very server.\n\nMany corporate firewalls allow only port 80 and 443 for outbound connections.\n\nAn additional bonus is that user access can be administered by using certificates and existing Apache management tools.\n\n", "id": 114294, "time": "2008-03-05T09:39:12Z", "bug_id": 29744, "creation_time": "2008-03-05T09:39:12Z", "is_private": false}, {"count": 59, "tags": [], "bug_id": 29744, "text": "Created attachment 21628\nWorking patches for 2.2.4 and 2.2.6 with i686 dropin binaries.", "id": 114295, "time": "2008-03-05T09:56:59Z", "creator": "pergh@inbis.no", "creation_time": "2008-03-05T09:56:59Z", "is_private": false, "attachment_id": 21628}, {"count": 60, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "(In reply to comment #57)\n\n> In any case I think Apache has a rather intimidating attitude towards requests.\n> The default hypothesis seems to be that most requests are worthless. But then I\n\nIt may look intimidating to the outsider, but in fact it is not. It simply works differently from what you expect. As Nick said please come over to the dev@httpd.apache.org list with a patch against trunk and some reasoning. This will give you the highest chance of getting this added. Why?\n\n- The audience on dev@ is much bigger than here in this single report.\n- As the patch needs to be applied to trunk first anyway and might be backported afterwards most committers will not take care of it, because the first step is not straight forward for them, as they need to review the patch in a context different from the one were it was created and need to forward port it eventually. The easier you make it for committers to review your work, the most likely it is that it gets applied. BTW: The same is true for me if I want to get my peer committers to review my patches which is required for backports.\n- As Nick correctly explained the developer resources are very tight. So many of us focus on two things: Fixing bugs (this report is an enhancement) and scratching our own itches and the itches of our employers as long as the solutions for these itches fit into the project which is not always the case. Obviously and thats back luck this report currently does not scratch the itch of any committer having read this report.\n\nAnd yes, I admit that even the approach above is no guarantee that the patch gets applied but it increases the chance.", "id": 114302, "time": "2008-03-05T13:01:14Z", "bug_id": 29744, "creation_time": "2008-03-05T13:01:14Z", "is_private": false}, {"count": 61, "tags": [], "bug_id": 29744, "text": "\n@ Nick & Pluem \n\nThanks for your nice words and helping us understand how things work in apache-developer world. Many kudos for putting your hard work to apache project.\n\n@ Emmanuel Elango\n\nI agree with your statement.\n\n> I dont see why CONNECT should not be supported over an SSL connection. I mean\n> after all a proxy is a proxy and ssl is ssl. The proxy should do its job and\n> ssl should do its.\n\n@ Others \n\nI still don't see any email on mailing list (dev@httpd.apache.org) related to this issue. Can someone please take care of this - preferably the patch maker or someone who understands it well?\n\nIt was nice to see the convincing from \"Per Gunnar Hans\". At least we have one person who is requesting this patch for genuine reasons. I don\u2019t want to start debate on worth-fullness of our intended proxy-avoidance but simply request committers to accept the patch for the sake of \"doing right thing in right way\". Writing directly to socket in-place of handler is really not a great idea and should be fixed ASAP.\n\nCheers,\nSudhaker\n\n", "id": 114374, "time": "2008-03-06T12:45:19Z", "creator": "sudhaker@yahoo.com", "creation_time": "2008-03-06T12:45:19Z", "is_private": false, "attachment_id": null}, {"count": 62, "tags": [], "creator": "brad_boyer@symantec.com", "attachment_id": null, "text": "As the original patch author, I'll be quite honest and say that the project for which I wrote the original patch is dead and buried. For this reason, I'm not really in a position to spend a lot of time on updating it to the latest version and push for its acceptance on the mailing list. If I find some time on the side, I'll update the patch and maybe clean it up a bit but no guarantees.\n\nIt would be best if someone who needs this patch going forward would take ownership of the issue.", "id": 114382, "time": "2008-03-06T13:45:32Z", "bug_id": 29744, "creation_time": "2008-03-06T13:45:32Z", "is_private": false}, {"count": 63, "tags": [], "creator": "pergh@inbis.no", "attachment_id": null, "text": "(In reply to comment #62)\n> As the original patch author, I'll be quite honest and say that the project for\n> which I wrote the original patch is dead and buried. For this reason, I'm not\n> really in a position to spend a lot of time on updating it to the latest\n> version and push for its acceptance on the mailing list. If I find some time on\n> the side, I'll update the patch and maybe clean it up a bit but no guarantees.\n> \n> It would be best if someone who needs this patch going forward would take\n> ownership of the issue.\n> \n\nMy C programming skills currently stretch to type \"make all\", and deploying this patch introduced me to the 'patch' program, so I don't know about ownership of the patch.\n\nBut if you can update the patch to HEAD, I'll run some tests and front it on the dev mailinglist.\n\n", "id": 114408, "time": "2008-03-07T04:22:50Z", "bug_id": 29744, "creation_time": "2008-03-07T04:22:50Z", "is_private": false}, {"count": 64, "tags": [], "creator": "sudhaker@yahoo.com", "attachment_id": null, "text": "\n\nThen guess, I'm on it.\n\nThanks,", "id": 114421, "time": "2008-03-07T09:18:27Z", "bug_id": 29744, "creation_time": "2008-03-07T09:18:27Z", "is_private": false}, {"count": 65, "tags": [], "creator": "marek@palatinus.cz", "attachment_id": null, "text": "Hi to all,\n\nbecause I'm not allowed to run my own apache modules on the server I use, I'm thinking about workaround.\n\nFor security reasons I really want to use HTTPS with basic auth.\nI have one server listening on port 443, which removes SSL and through mod_proxy sends the requests to other apaches (which listen on other ports).\n\nI was thinking about doing the same with proxytunnel: master (first) apache would remove the HTTPS and slave (second) apache would do base auth with the original (from ASF) mod_connect.\n\nDo you think it could somehow work?\n\nThank you,\nMarek", "id": 114517, "time": "2008-03-12T02:25:23Z", "bug_id": 29744, "creation_time": "2008-03-12T02:25:23Z", "is_private": false}, {"count": 66, "tags": [], "bug_id": 29744, "text": "\nThe only benefit of using patched mod_connect is that you get client's real IP address. So your filtering rules, log files operate on real IPs. \n\nSimply use stunnel at other end. \n\n[Browser] <=> [Stunnel client] <=> {INTERNET} <=> [Stunnel server] <=> [Apache mod_proxy] \n\nI've been using this flawlessly for a long time with only problem that every request has 127.0.0.1 as client IP.\n\nHope this helps.\n\nThanks,\n", "id": 114523, "time": "2008-03-12T05:46:54Z", "creator": "sudhaker@yahoo.com", "creation_time": "2008-03-12T05:46:54Z", "is_private": false, "attachment_id": null}, {"count": 67, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "text": "With respect to comments 65 / 66,\n\n#1 never hijack bugs; create a new incident (if a legitimate bug exists).\n\n#2 bugzilla is NOT a user support forum, refer to the appropriate channels\n   for peer support, not this issue tracking service.\n\nthank you.\n", "id": 114536, "time": "2008-03-12T11:23:52Z", "bug_id": 29744, "creation_time": "2008-03-12T11:23:52Z", "is_private": false}, {"count": 68, "tags": [], "creator": "emmanuel.e@gmx.net", "attachment_id": 21703, "text": "Created attachment 21703\nDropin binary for win32 (2.2x?) based on Per Gunnar Hans' patch (attachment 21628)\n\nReplace the mod_proxy_connect.so file in the apache install directory, typically \n\\Apache2.2\\modules, with this file.\n\nOptionally back up the existing mod_proxy_connect.so file.\n\nCompiled with a lot of pain using MS VC++ Express 8.0.\n\nSee http://www.apachelounge.com/forum/viewtopic.php?p=8304. Grab the perl script from there. Eases some amount of pain.\n\nlibhttpd, mod_proxy and mod_proxy_connect have to be almost manually compiled as they fail at the step rc.exe is invoked.\n\nSee workaround at http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=593794&SiteID=1\nDelete Preprocessor options and add additional options by hand. Works only once. If you want to repeat you will have to manually modify the .proj file again.\n\nTested on 2.2.8. Should work on 2.2.6 and maybe on 2.2.x", "id": 114896, "time": "2008-03-23T06:24:48Z", "bug_id": 29744, "creation_time": "2008-03-23T06:24:48Z", "is_private": false}, {"count": 69, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 115747, "time": "2008-04-21T10:05:12Z", "creator": "alefor@gmx.de", "creation_time": "2008-04-21T10:05:12Z", "is_private": false, "text": "mod_proxy_connect.c at comment #34 works for apache2 2.2.3 on Debian 4.0:\n$ apt-get source apache2\ncopy the file above in modules/proxy\n$ ./configure --enable-proxy --enable-proxy-connect --enable-mods-shared=\"proxy proxy-connect\"\n$ make\nUse the DLL in modules/proxy/.libs/mod_proxy_connect.so\nOpenSSH ProxyCommand and Putty 0.60 local proxy command:\nproxytunnel -q -E -p proxy:443 -d host:22"}, {"count": 70, "tags": [], "bug_id": 29744, "text": "I have just successfully tested the following scenario:\n\n- Apache 2.2.8 (on Gentoo)\n- the patch from Per Gunnar Hans (the .so binary)\n- the new version of proxytunnel (v.1.9.0), using SSL encryption from the first to the second proxy using the new --encrypt-remproxy option. Proxytunnel, what a great tool!\n\nIt works great!\n\nAnd yes, it would be nice if the mod_proxy_connect patch would be accepted...\n\nregards,\nFitzgerald.", "id": 116908, "time": "2008-05-22T13:33:23Z", "creator": "issues.apache.org@krudde.nl", "creation_time": "2008-05-22T13:33:23Z", "is_private": false, "attachment_id": null}, {"count": 71, "tags": [], "creator": "krcroft@gmail.com", "attachment_id": 22248, "text": "Created attachment 22248\nproxy_connect patch updated for 2.2.9\n\nTested under Gentoo (x86_64 build) with the following steps:\n\nDownload sources & patch to /tmp\n  cd /tmp\n  tar jxf httpd-2.2.9.tar.bz2 \n  cd httpd-2.2.9/\n  cat /tmp/httpd-2.2.9-proxytunnel.patch | patch -p1\n\nset your CFLAGS (on gentoo): \n  source /etc/make.conf\n\nconfig and build:\n  ./configure --enable-modules=all --enable-mods-shared=all --enable-proxy --enable-proxy-connect --enable-proxy-ftp --enable-proxy-http --enable-ssl\n  gmake all -j3\n\ninstall and restart:\n  find -name \"*proxy*.so\" | xargs cp -t /usr/lib64/apache2/modules\n  apache2ctl configtest && /etc/init.d/apache2 restart\n\n\ntest from the remote machine:\n\ncat ~/.ssh/config\nHost remote.machine.org\n        ProxyCommand proxytunnel -v -E -p remote.machine.org:443 -d %h:%p\n\nssh remote.machine.org\nSSL client to proxy enabled\nLocal proxy remote.machine.org resolves to 123.321.111.222\nConnected to remote.machine.org:443 (local proxy)\nTunneling to remote.machine.org:22 (destination)\nCommunication with local proxy:\n -> CONNECT remote.machine.org:22 HTTP/1.0\n -> Proxy-Connection: Keep-Alive\n <- HTTP/1.0 200 Connection Established\n <- Proxy-agent: Apache\n\nTunnel established.", "id": 118585, "time": "2008-07-11T14:53:19Z", "bug_id": 29744, "creation_time": "2008-07-11T14:53:19Z", "is_private": false}, {"count": 72, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 120551, "time": "2008-09-11T16:34:50Z", "creator": "julian@d-and-j.net", "creation_time": "2008-09-11T16:34:50Z", "is_private": false, "text": "(In reply to comment #71)\n> Created an attachment (id=22248) [details]\n> proxy_connect patch updated for 2.2.9\n> \n> Tested under Gentoo (x86_64 build) with the following steps:\n\nI've tried this on my Debian testing system, and it hasn't worked for me.  Does anyone have any clue why not?\n\nHere's what I'm getting, using Debian's apache 2.2.9-7, patched with this 2.2.9 proxy_connect_patch:\n\nburnside:~ $ ssh -p 8080 localhost\nLinux burnside 2.6.26-1-686 #1 SMP Thu Aug 28 12:00:54 UTC 2008 i686\n[...]\n\nso ssh itself works (and there's nothing exciting in ~/.ssh/config).  However:\n\n\nburnside:~ $ proxytunnel -E -v -p machine.internet.net:443 -d localhost:8080\nLocal proxy machine.internet.net resolves to 1.2.3.4\nConnected to machine.internet.net:443 (local proxy)\n\nTunneling to localhost:8080 (destination)\nCommunication with local proxy:\n -> CONNECT localhost:8080 HTTP/1.0\n -> Proxy-Connection: Keep-Alive\nerror: Socket write error.\nburnside:~ $ \n\nThis is a relatively new error, due most likely to either the upgraded apache or the upgraded ssh, and I'm not sure where it originates or why.  Any ideas what I can do about it?\n\nMany thanks,\n\nJulian"}, {"count": 73, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 120691, "time": "2008-09-16T13:07:43Z", "creator": "julian@d-and-j.net", "creation_time": "2008-09-16T13:07:43Z", "is_private": false, "text": "(In reply to comment #72)\n> I've tried this on my Debian testing system, and it hasn't worked for me.  Does\n> anyone have any clue why not?\n> [...]\n\nD'oh - it was an Apache configuration error: my ssl site had\n<VirtualHost _default_:443>\nwhile my main site had\n<VirtualHost _default_>\ninstead of\n<VirtualHost _default_:80>\n\nSo panic over and all works again!\n\nJulian"}, {"count": 74, "tags": [], "creator": "alexey.pelykh@gmail.com", "attachment_id": null, "text": "Hi everyone.\nI think I've found a bug, that is connected with this bug.\nI have Apache vhost, that is configured to allow CONNECT to 13128 port, and SQUID proxy server at 13128, on same server. When I try to establish tunnel connection\nExternal SQUID Proxy :: CONNECT home_server:443 using SSL =>\nHome Apache server :: CONNECT home_server:13128 =>\nHome SQUID server :: CONNECT gmail.com:443(for example, really this does not matter what request to feed to SQUID)\nit replies 400 Bad request.\n\nBut if to do same, but without SSL in tunnel, everything is OK, like\nExternal SQUID Proxy :: CONNECT home_server:443 (SSL is disabled at my Apache server) =>\nHome Apache server :: CONNECT home_server:13128 =>\nHome SQUID server :: CONNECT gmail.com:443(for example, really this does not matter what request to feed to SQUID)\nit replies 200 Connection Established\n\nSo I think it's Apache mod_proxy_connect has some bug.. Can I have some feedback? I know that such way is rarely used (if used by someone else except me), but this is the only solution acceptable :(\n\n", "id": 121264, "time": "2008-10-07T04:05:33Z", "bug_id": 29744, "creation_time": "2008-10-07T04:05:33Z", "is_private": false}, {"count": 75, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 121266, "time": "2008-10-07T05:59:19Z", "creator": "thomas@stewarts.org.uk", "creation_time": "2008-10-07T05:59:19Z", "is_private": false, "text": "Just to confirm, applying the latest patch: \"proxy_connect patch updated for 2.2.9\" fixes the problem for me.\n\nbefore:\n$ gnutls-cli some.ssl.apache.proxy -p 443\n<SNIP>\n- Simple Client Mode:\n\nCONNECT localhost:22 HTTP/1.0\n\n*** Fatal error: A record packet with illegal version was received.\n*** Server has terminated the connection abnormally.\n$\n\nafter:\n$ gnutls-cli some.ssl.apache.proxy -p 443\n<SNIP>\n- Simple Client Mode:\n\nCONNECT localhost:22 HTTP/1.0\n\nHTTP/1.0 200 Connection Established\nProxy-agent: Apache/2.2.9 (Debian) PHP/5.2.6-5 with Suhosin-Patch mod_ssl/2.2.9 OpenSSL/0.9.8g\n\nSSH-2.0-OpenSSH_5.1p1 Debian-2\n$ \n\nAny idea when this will be applied?\n\nRegards\n--\nTom\n"}, {"count": 76, "tags": [], "bug_id": 29744, "text": "The current patch (\"proxy_connect patch updated for 2.2.9\") has the following problem: If the client disconnects but the backend server continues to send data fast, apache will continue to read the data and not abort the connection to the backend (or only after a long time).\n\nI think proxy_connect_transfer() should exit the loop and return an error if c_o->aborted. And proxy_connect_handler() should forcibly close the backend connection in this case and not call ap_lingering_close().\n\n\nAnother issue is that mod_status does not give useful output for the tunnel. The child stays in R (reading request) state and the transferred data is not counted in the Conn, Child, and Slot fields.\n\nBTW, I also tested for memory leaks and couldn't find any: The process size did not increase even after transfer of >20GB.\n", "id": 122322, "time": "2008-11-09T13:20:33Z", "creator": "sf@sfritsch.de", "creation_time": "2008-11-09T13:20:33Z", "is_private": false, "attachment_id": null}, {"count": 77, "tags": [], "text": "Created attachment 22877\nDrop in binaries for 2.2.10 and possibly below\n\nApplied Kevin Croft's patch to 2.2.10 source on Win 32. Should work fine as the svn apache repository says mod_proxy_connect.c has been unchanged for the last 7 months. (http://svn.apache.org/viewvc/httpd/httpd/trunk/modules/proxy/)\n\nmod_proxy_connect.c \t 645455 \t 7 months \t pquerna \t Remove all references to CORE_PRIVATE.\nmod_proxy_connect.dsp \t 495126 \t 22 months \t wrowe \t Embed the .manifest files of all httpd binaries as a post-build operation. This...\n\nJust two warnings about unreferenced local variables \"i\" and \"o\" in line 133, but otherwise works fine.\n\nThe patch could possibly be updated to remove declarations of variables \"i\" and \"o\".\n\nTested and works fine on windows xp.\n\nCheers,\nEmmanuel", "attachment_id": 22877, "id": 122512, "creator": "emmanuel.e@gmx.net", "time": "2008-11-15T02:50:24Z", "bug_id": 29744, "creation_time": "2008-11-15T02:50:24Z", "is_private": false}, {"count": 78, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 124175, "time": "2009-01-18T16:19:19Z", "creator": "pgollucci@apache.org", "creation_time": "2009-01-18T16:19:19Z", "is_private": false, "text": "CC myself on FreeBSD related bugs"}, {"count": 79, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 124709, "time": "2009-02-07T17:23:47Z", "creator": "nemesis@icequake.net", "creation_time": "2009-02-07T17:23:47Z", "is_private": false, "text": "Works without modification now on 2.2.11 on Debian.\n\nA bit tired of waiting for this patch to be included..."}, {"count": 80, "tags": [], "creator": "viktor.stujber@gmail.com", "attachment_id": null, "text": "Apache's mod_proxy supports tunneling ssh over plaintext HTTP, as suggested on http://httpd.apache.org/docs/2.2/mod/mod_proxy_connect.html. But in this scenario, an eavesdropping adversary will see\n1. that you're trying to proxy a connection\n2. the destination server's address\n3. your proxy credentials (!!)\n4. that you're tunneling ssh\n5. the sshd's version string\n6. the ssh handshake and subsequent encrypted data\n\nTo avoid being compromised, one could instead talk to the proxy using HTTP over SSL (a.k.a. HTTPS). That way, the adversary can only observe a SSL handshake with the proxy. Since the proxy also acts as a web-server, the adversary cannot directly discern between a normal legitimate https page request and an ssh tunnel negotiation.\n\nSo the only difference between the two is that we add an extra crypto layer. This layer would transparent to the HTTP channel - no modification necessary. The only requirement is that the server properly maintains this layered model.\n\nFrom comment #1 and others, it is shown that Apache actually does use this model, but only for client -> server traffic: the SSL layer is established and the HTTP CONNECT request parsed. But in the server -> client direction, the SSL layer is skipped and data written directly to socket.\n\nSo unless I made a mistake, I can only see this problem as a defect in mod_proxy's code logic - code that only works when there are no extra communication layers.", "id": 125312, "time": "2009-03-04T05:23:15Z", "bug_id": 29744, "creation_time": "2009-03-04T05:23:15Z", "is_private": false}, {"count": 81, "tags": [], "bug_id": 29744, "text": "Created attachment 23840\nUpdated patch for Apache 2.2.11 mod_proxy_connect.c to implement CONNECT over SSL\n\nI found that Kevin Croft's excellent patch for 2.2.9 (2008-07-11) no longer worked on Apache 2.2.11; this patch addresses minor changes to line numbering in mod_proxy_connect.c and seems to work fine.", "id": 128127, "time": "2009-06-21T15:08:37Z", "creator": "rudolf@pobox.com", "creation_time": "2009-06-21T15:08:37Z", "is_private": false, "attachment_id": 23840}, {"count": 82, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 128981, "time": "2009-07-19T11:38:54Z", "creator": "ineyaa@gmail.com", "creation_time": "2009-07-19T11:38:54Z", "is_private": false, "text": "Bug or feature request,.. this functionality is missing. This feature seems like a very nice solution for people behind very restrictive company proxies. Of course I could just turn off apache and use stunnel on port 443, but I prefer 'enhanced' mod_proxy to do that. Other option is to multiplex tls traffic by completely new module. I wrote one as excerise, but eventually revisited idea with mod_proxy.\n\nIs it really that difficult to include some kind of switch to allow CONNECT to work over SSL? I'm completely fine with the default as 'off'."}, {"count": 83, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 128990, "time": "2009-07-20T02:04:50Z", "creator": "lionel.victor@free.fr", "creation_time": "2009-07-20T02:04:50Z", "is_private": false, "text": "(In reply to comment #82)\n\nWell stunnel won't let you to enforce a security policy based on SSL mutual auth to allow proxy_connect access (for instance): so you can have both a ssl web site for everyone PLUS a proxy for authenticated users... Indeed you are right, the feature is missing...\n\nFrom comment #60 someone suggested that we push a patch on the @dev mailing list... I guess most people agree with the fact the patch is acceptable (if it does not introduce any kind of regression)\n\nFrom what I could gather from the archives of the apache dev mailing list there were a few posts by \"Sudhaker Raj\" but not patch proposal ?\n\nSo it's up to us... we took something at some point we should give it back now...\n\nSudhaker ? did you manage to build something out of trunk (at some point in time) and propose a patch ?\n\nCan we help ?\n\nI suppose the apache team has validation campaings to validate their code both in terms of bugs (regression) and performances... I will not be able to support that, but I can probably checkout trunk patch and propose a fix on the dev mailing list if it hasn't been done...\n\nThis bug is marked 'ASSIGNED' can the bug owner write some kind of directions ? or simply confirm that we must keep pushing on the dev mailing list ?\n\ncheers\n\n> Bug or feature request,.. this functionality is missing. This feature seems\n> like a very nice solution for people behind very restrictive company proxies.\n> Of course I could just turn off apache and use stunnel on port 443, but I\n> prefer 'enhanced' mod_proxy to do that. Other option is to multiplex tls\n> traffic by completely new module. I wrote one as excerise, but eventually\n> revisited idea with mod_proxy.\n> \n> Is it really that difficult to include some kind of switch to allow CONNECT to\n> work over SSL? I'm completely fine with the default as 'off'."}, {"count": 84, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 129247, "time": "2009-07-29T09:10:12Z", "creator": "evanc@nortel.com", "creation_time": "2009-07-29T09:10:12Z", "is_private": false, "text": "One side effect of this change is that mod_logio byte counting seems to work better (not rigorously verified, but previously the output bytes was always 0, and now is something relatively aligned with my expectations).  Oddly, the standard byte count (%b/%B) is still not set.\n\nAlso, I noticed that the mod_log_config connection status (%X) is now \"X\" for CONNECT, which seems more correct than the previous \"+\".\n\nI assume these changes are because the core filters are not being NULLed as in the original implementation.\n\nSo, this patch's behaviour has benefit even if one doesn't need an SSL proxy service.  We are using the proxy for controlling access to an internal network and having correct byte counting alone is of high interest."}, {"count": 85, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 129552, "time": "2009-08-06T16:26:42Z", "creator": "lionel.victor@free.fr", "creation_time": "2009-08-06T16:26:42Z", "is_private": false, "text": "FYI\nI've pushed a patch on the dev mailing list...\nhttp://mail-archives.apache.org/mod_mbox/httpd-dev/200907.mbox/%3C1924324104.1978811248793507749.JavaMail.root@spooler10-g27.priv.proxad.net%3E\n\nThe patch itself has been mailed in another message whose date is \"Sun, 02 Aug, 13:31\" but I can't get a peralink to it... so you'll need to browse mailing list archive...\n\nSomeone answered he would take a look:\nhttp://mail-archives.apache.org/mod_mbox/httpd-dev/200908.mbox/%3C4A75B32E.9040105@sharp.fm%3E\n\nhope it helps... and many thanx to the people here who posted diffs... the patch really helps me on a daily basis !"}, {"count": 86, "tags": [], "bug_id": 29744, "text": "Applied to httpd-trunk in r813178, can you test and verify it works on trunk?", "id": 130269, "time": "2009-09-09T16:57:39Z", "creator": "minfrin@sharp.fm", "creation_time": "2009-09-09T16:57:39Z", "is_private": false, "attachment_id": null}, {"count": 87, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 130334, "time": "2009-09-12T15:26:32Z", "creator": "sf@sfritsch.de", "creation_time": "2009-09-12T15:26:32Z", "is_private": false, "text": "The version in trunk has two issues:\n\n1) If the client disconnects and the backend continues to send data fast, the backend connection will be closed only after a long time, if at all. \n\n2) If the backend closes the connection, but the client doesn't, the apache thread hangs and will not close the connection to the client. Here is a stack trace:\n\n#0  0xf7fca430 in __kernel_vsyscall ()\nNo symbol table info available.\n#1  0xf7e22e2b in poll () from /lib/i686/cmov/libc.so.6\nNo symbol table info available.\n#2  0xf7f25f84 in apr_wait_for_io_or_timeout (f=0x0, s=0x8511f40, for_read=1) at support/unix/waitio.c:51\n        pfd = {fd = 12, events = 1, revents = 0}\n        rc = <value optimized out>\n        timeout = 300000\n#3  0xf7f1f370 in apr_socket_recv (sock=0x8511f40, buf=0x8525f60 \"\\r\\nNNECT localhost:5555 HTTP/1.0\\r\\n\", len=0xff8263b4)\n    at network_io/unix/sendrecv.c:87\n        rv = <value optimized out>\n        arv = <value optimized out>\n#4  0xf7f5b997 in socket_bucket_read (a=0x8521fb8, str=0xff8263b8, len=0xff8263b4, block=APR_BLOCK_READ)\n    at buckets/apr_buckets_socket.c:36\n        p = (apr_socket_t *) 0x8511f40\n        buf = 0x8525f60 \"\\r\\nNNECT localhost:5555 HTTP/1.0\\r\\n\"\n        rv = <value optimized out>\n        timeout = <value optimized out>\n#5  0x08083882 in ap_core_input_filter (f=0x85126d0, b=0x855a650, mode=AP_MODE_READBYTES, block=APR_BLOCK_READ,\n    readbytes=8192) at core_filters.c:242\n        e = (apr_bucket *) 0x8521fb8\n        e = <value optimized out>\n        rv = <value optimized out>\n        net = <value optimized out>\n        ctx = (core_ctx_t *) 0x8512700\n        str = <value optimized out>\n        len = <value optimized out>\n#6  0x080bceae in logio_in_filter (f=0x85126a8, bb=0x855a650, mode=AP_MODE_READBYTES, block=APR_BLOCK_READ,\n    readbytes=4294966780) at mod_logio.c:125\n        length = -580820504886116352\n        status = <value optimized out>\n#7  0x080e7ce9 in ap_discard_request_body (r=0x8523f88) at http_filters.c:1345\n        bucket = (apr_bucket *) 0x8523f88\n        bb = (apr_bucket_brigade *) 0x855a650\n        rv = 139607944\n#8  0x08077472 in ap_finalize_request_protocol (r=0x8523f88) at protocol.c:1141\nNo locals.\n#9  0x080e75a8 in ap_process_async_request (r=0x8523f88) at http_request.c:329\n        c = (conn_rec *) 0x85120d8\n        access_status = 0\n#10 0x080e762d in ap_process_request (r=0x8523f88) at http_request.c:346\n        bb = <value optimized out>\n        b = <value optimized out>\n        c = (conn_rec *) 0x85120d8\n        rv = <value optimized out>\n#11 0x080e44aa in ap_process_http_connection (c=0x85120d8) at http_core.c:194\nNo locals.\n#12 0x0808b8f9 in ap_run_process_connection (c=0x85120d8) at connection.c:41\n        n = 0\n        rv = 300000\n#13 0x0811e363 in child_main (child_num_arg=<value optimized out>) at prefork.c:660\n        current_conn = <value optimized out>\n        csd = (void *) 0x8511f40\n        thd = (apr_thread_t *) 0x850ff38\n        osthd = 4157912816\n        ptrans = (apr_pool_t *) 0x8511f00\n        allocator = (apr_allocator_t *) 0x8465440\n        status = <value optimized out>\n        i = <value optimized out>\n        lr = <value optimized out>\n        pollset = (apr_pollset_t *) 0x8510190\n        sbh = (ap_sb_handle_t *) 0x8510188\n        bucket_alloc = (apr_bucket_alloc_t *) 0x8521f40\n        last_poll_idx = 0\n#14 0x0811e6a3 in make_child (s=0x83ea9b0, slot=0) at prefork.c:754\nNo locals.\n#15 0x0811ee1a in prefork_run (_pconf=0x83df0a8, plog=0x845b408, s=0x83ea9b0) at prefork.c:772\n        index = <value optimized out>\n        remaining_children_to_start = 5\n        rv = <value optimized out>\n#16 0x080726d7 in ap_run_mpm (pconf=0x83df0a8, plog=0x845b408, s=0x83ea9b0) at mpm_common.c:88\n        n = 0\n        rv = 300000\n#17 0x0806dcb4 in main (argc=138326344, argv=0x845b408) at main.c:782\n        c = 0 '\\0'\n        configtestonly = 0\n        showcompile = 0\n        confname = 0x8120df9 \"conf/httpd.conf\"\n        def_server_root = 0x8120e09 \"/usr/local/apache2\"\n        temp_error_log = 0x0\n        error = <value optimized out>\n        process = (process_rec *) 0x83dd130\n        pconf = (apr_pool_t *) 0x83df0a8\n        plog = (apr_pool_t *) 0x845b408\n        ptemp = (apr_pool_t *) 0x83eb148\n        pcommands = (apr_pool_t *) 0x83e1120\n        opt = (apr_getopt_t *) 0x83e11c0\n        rv = 135581348\n        mod = (module **) 0x814cea4\n        optarg = 0xf7e68a09 \"\\201???\\003\""}, {"count": 88, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": 24252, "text": "Created attachment 24252\nClose backend connection when client disconnects\n\nThis patch fixes the first of the two issues above.", "id": 130335, "time": "2009-09-12T15:28:32Z", "bug_id": 29744, "creation_time": "2009-09-12T15:28:32Z", "is_private": false}, {"count": 89, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "(In reply to comment #88)\n> Created an attachment (id=24252) [details]\n> Close backend connection when client disconnects\n> \n> This patch fixes the first of the two issues above.\n\nThanks for the patch, but the key question that needs to be answered first and that I already posted on dev@ is: Why don't we stick with direct socket communication with the backend, but wrap a connection around it.", "id": 130338, "time": "2009-09-13T04:18:36Z", "bug_id": 29744, "creation_time": "2009-09-13T04:18:36Z", "is_private": false}, {"count": 90, "tags": [], "creator": "minfrin@sharp.fm", "attachment_id": null, "text": "I would argue for the exact opposite - if you're using a connection to communicate on the front, then use a connection to communicate on the back. Mixing the two is ugly, as the comment in the original code (now removed as it is fixed) stated.", "id": 130339, "time": "2009-09-13T04:28:51Z", "bug_id": 29744, "creation_time": "2009-09-13T04:28:51Z", "is_private": false}, {"count": 91, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "(In reply to comment #90)\n> I would argue for the exact opposite - if you're using a connection to\n> communicate on the front, then use a connection to communicate on the back.\n> Mixing the two is ugly, as the comment in the original code (now removed as it\n> is fixed) stated.\n\nMoving over to dev@ where it belongs.", "id": 130340, "time": "2009-09-13T04:39:09Z", "bug_id": 29744, "creation_time": "2009-09-13T04:39:09Z", "is_private": false}, {"count": 92, "tags": [], "text": "(In reply to comment #86)\n> Applied to httpd-trunk in r813178, can you test and verify it works on trunk?\n\nAs far as I'm concerned, the version in trunk works. I haven't tested it as thoroughly as what is described in Comment #87 though.\n\nWhat Stefan Fritsch writes reminds me of something I read... I though it was fixed in the patch I proposed... I guess I was wrong. Sorry about that.\n\nI have a frequent use of the patch but it is set up on low bandwidth server with very few authenticated clients. Never setup a test environment for the patch.\n\n\nAbout the other issue (Why don't we stick with direct socket communication with the backend)... well... my answer would be that if we use SSL that's probably because we do not want that traffic in clear...so having apache ignoring our security policy and replying directly into the socket hence bypassing the ssl layer is not nice (and IS buggy). I admit that the security issue is not a deadly one though :o) ! (but well... with some time and pain... that may be a nice door to something... use it as an oracle or... Shame I don't have time to dig and think about it...)", "attachment_id": null, "id": 130349, "creator": "lionel.victor@free.fr", "time": "2009-09-13T13:00:04Z", "bug_id": 29744, "creation_time": "2009-09-13T13:00:04Z", "is_private": false}, {"count": 93, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "text": "(In reply to comment #92)\n> (In reply to comment #86)\n\n> About the other issue (Why don't we stick with direct socket communication with\n> the backend)... well... my answer would be that if we use SSL that's probably\n> because we do not want that traffic in clear...so having apache ignoring our\n> security policy and replying directly into the socket hence bypassing the ssl\n> layer is not nice (and IS buggy). I admit that the security issue is not a\n> deadly one though :o) ! (but well... with some time and pain... that may be a\n> nice door to something... use it as an oracle or... Shame I don't have time to\n> dig and think about it...)\n\nI still see confusion here over my comment. So I try to rephrase it:\nThe old code uses direct socket communication to the client *and* to the backend.\nIn order to get the connection to the client encrypted the communication to the client needed to be changed to go through the httpd connection filter stack which\nbrings mod_ssl and its features in the game. I don't argue with this.\nMy point is the communication to the backend: There is *no* SSL encryption from httpd side here, on the contrary it is explicitly turned off by calling ap_proxy_ssl_disable(backconn). So where is the point of shoving all the data through the filter stack when we do *not* want the filters to touch the data?", "id": 130350, "time": "2009-09-13T13:55:29Z", "bug_id": 29744, "creation_time": "2009-09-13T13:55:29Z", "is_private": false}, {"count": 94, "tags": [], "bug_id": 29744, "text": "(In reply to comment #93)\n> The old code uses direct socket communication to the client *and* to the\n> backend.\n> In order to get the connection to the client encrypted the communication to the\n> client needed to be changed to go through the httpd connection filter stack\n> which\n> brings mod_ssl and its features in the game. I don't argue with this.\n> My point is the communication to the backend: There is *no* SSL encryption from\n> httpd side here, on the contrary it is explicitly turned off by calling\n> ap_proxy_ssl_disable(backconn). So where is the point of shoving all the data\n> through the filter stack when we do *not* want the filters to touch the data?\n\nAs the author of the first version of the patch, I'd like to add some justification. There were two reasons I considered for wanting the full connection and filter stack on the back connection.\n\nThe original reason is that I liked the symmetry of it. That's not a great justification, but it really is why I did it that way initially.\n\nAfter some thought, I realized it should be possible to allow SSL on the backconn as well. However, I didn't really have the time to spend doing that properly. It would have needed some extra care to make sure that the backconn was only SSL when that was desired. I was too lazy to do the more complete set of work that would have allowed that, but I didn't want to make it harder for someone in the future.\n\nThe original usage I had was one where the httpd setup was effectively being used as a poor man's VPN. Because of this, the link from the real client to the proxy in httpd was untrusted, but everything behind it was trusted. Other people might want to use it as a proxy with untrusted networks on both sides. I'm sure that's a relatively obscure usage by comparison, but it should be possible with a few more changes.", "id": 130351, "time": "2009-09-13T16:08:08Z", "creator": "brad_boyer@symantec.com", "creation_time": "2009-09-13T16:08:08Z", "is_private": false, "attachment_id": null}, {"count": 95, "tags": [], "creator": "ivan.krivyakov@sungard.com", "attachment_id": 24615, "text": "Created attachment 24615\nPatch for version 2.2.14\n\nThis is a patch for version 2.2.14. It is more or less mechanically derived from the 2.2.11 patch. I compiled this version and it seems to work fine for me.", "id": 132329, "time": "2009-11-25T10:31:36Z", "bug_id": 29744, "creation_time": "2009-11-25T10:31:36Z", "is_private": false}, {"count": 96, "tags": [], "text": "Created attachment 24616\nWin32 binary for patched version 2.2.14\n\nCompiled patched version 2.2.14. It is installed on my server and seems to work OK.", "attachment_id": 24616, "id": 132330, "creator": "ivan.krivyakov@sungard.com", "time": "2009-11-25T10:38:37Z", "bug_id": 29744, "creation_time": "2009-11-25T10:38:37Z", "is_private": false}, {"count": 97, "tags": [], "bug_id": 29744, "text": "(In reply to comment #95)\n> Created an attachment (id=24615) [details]\n> Patch for version 2.2.14\n> \n> This is a patch for version 2.2.14. It is more or less mechanically derived\n> from the 2.2.11 patch. I compiled this version and it seems to work fine for\n> me.\n\nHave you tried applying this patch to the 2.2.14 sources?\n\n# wget -O - http://apache.mirror.rafal.ca/httpd/httpd-2.2.14.tar.bz2 | tar jx\n# cd httpd-2.2.14/modules/proxy\n# curl https://issues.apache.org/bugzilla/attachment.cgi?id=24615 | patch -p1 --verbose\n\nHmm...  Looks like a unified diff to me...\nThe text leading up to this was:\n--------------------------\n|--- 2.2.14/mod_proxy_connect.c 2009-11-22 00:24:14.762000000 -0500\n|+++ 2.2.14-new/mod_proxy_connect.c     2009-11-22 00:29:27.954000000 -0500\n--------------------------\nPatching file mod_proxy_connect.c using Plan A...\nHunk #1 FAILED at 21.\nHunk #2 FAILED at 73.\nHunk #3 FAILED at 125.\nHunk #4 FAILED at 208.\nHunk #5 FAILED at 253.\nHunk #6 FAILED at 314.\nHunk #7 FAILED at 326.\nHunk #8 FAILED at 351.\nHunk #9 FAILED at 369.\nHunk #10 FAILED at 379.\nHunk #11 FAILED at 420.\n11 out of 11 hunks FAILED -- saving rejects to file mod_proxy_connect.c.rej\ndone", "id": 132367, "time": "2009-11-28T08:33:26Z", "creator": "krcroft@gmail.com", "creation_time": "2009-11-28T08:33:26Z", "is_private": false, "attachment_id": null}, {"count": 98, "tags": [], "creator": "ivan.krivyakov@sungard.com", "attachment_id": null, "text": "(In reply to comment #97)\n> \n> Have you tried applying this patch to the 2.2.14 sources?\n>\n\nHm... Yes I have. Can't get to it now, but I will investigate ASAP.", "id": 132379, "time": "2009-11-28T21:02:20Z", "bug_id": 29744, "creation_time": "2009-11-28T21:02:20Z", "is_private": false}, {"count": 99, "tags": [], "creator": "colin@xvpsource.org", "attachment_id": null, "text": "Can I just put in another plea that this patch be incorporated into the 2.2 stream, so people don't have to keep updating it and re-applying it.\n\nIn my case I'm using it with a browser based application that provides web access to VNC consoles of virtual machines.  The user sees the available machines in a conventional dynamic web page, and when selecting a console to view, a Java applet is run.  With this patch, the VNC (RFB) connection can be securely tunneled over the same HTTPS connection as the main page - without it lots of VNC ports have to be opened to the outside world.\n\nAlthough I can patch my Apache installation, I have users of the same application in other organizations who want to use a standard distribution and aren't comfortable patching and recompiling.\n\nBy the way, I'm also puzzling over the best way to enable HTTP CONNECT proxying but not generic HTTP 0.9/1.0/1.1, AJP13 and FTP.  The best I've managed so far is:\n\n  ProxyRequests On\n  AllowCONNECT 5900\n\n  <ProxyMatch /.*/>\n    Order deny,allow\n    Deny from all\n  </ProxyMatch>\n\nwhich does seem to allow CONNECT proxying only, because the ProxyMatch doesn't seem to match this (unlike <Proxy *>, which matches all kinds of forward proxying).  But this seems very ugly!  I guess I'm looking for a <ProxyMatchProtocol> feature.", "id": 132388, "time": "2009-11-29T07:20:58Z", "bug_id": 29744, "creation_time": "2009-11-29T07:20:58Z", "is_private": false}, {"count": 100, "tags": [], "creator": "ivan.krivyakov@sungard.com", "attachment_id": null, "text": "> \n> Have you tried applying this patch to the 2.2.14 sources?\n>\n> # wget -O - http://apache.mirror.rafal.ca/httpd/httpd-2.2.14.tar.bz2 | tar jx\n> # cd httpd-2.2.14/modules/proxy\n> # curl https://issues.apache.org/bugzilla/attachment.cgi?id=24615 | patch -p1\n> --verbose\n>\n\nI have double-checked it -- it works fine with Win32 sources.\n\nunzip httpd-2.2.14-win32-src.zip \ncd httpd-2.2.14\\modules\\proxy  \npatch -p1 <mod_proxy_connect.patch \n\npatching file mod_proxy_connect.c\n\nThe resulting file is identical to my modified version, so the patch worked. \n\nIt could be the end-of-line thing, GNU patch.exe for Windows insists on line endings to be /r/n, so this is what went into the patch file. I don't have a Linux instance handy to check this.", "id": 132392, "time": "2009-11-29T10:55:12Z", "bug_id": 29744, "creation_time": "2009-11-29T10:55:12Z", "is_private": false}, {"count": 101, "tags": [], "creator": "krcroft@gmail.com", "attachment_id": null, "text": "(In reply to comment #100)\n> > \n> > Have you tried applying this patch to the 2.2.14 sources?\n> >\n> > # wget -O - http://apache.mirror.rafal.ca/httpd/httpd-2.2.14.tar.bz2 | tar jx\n> > # cd httpd-2.2.14/modules/proxy\n> > # curl https://issues.apache.org/bugzilla/attachment.cgi?id=24615 | patch -p1\n> > --verbose\n> >\n> \n> I have double-checked it -- it works fine with Win32 sources.\n> \n> unzip httpd-2.2.14-win32-src.zip \n> cd httpd-2.2.14\\modules\\proxy  \n> patch -p1 <mod_proxy_connect.patch \n> \n> patching file mod_proxy_connect.c\n> \n> The resulting file is identical to my modified version, so the patch worked. \n> \n> It could be the end-of-line thing, GNU patch.exe for Windows insists on line\n> endings to be /r/n, so this is what went into the patch file. I don't have a\n> Linux instance handy to check this.\n\nIvan, that was it. Converted the patch using 'dos2unix', and it applies cleanly to the generic sources httpd-2.2.14.tar.bz2. Thanks again for the patch, and sorry for the false alarm!", "id": 132528, "time": "2009-11-30T22:03:28Z", "bug_id": 29744, "creation_time": "2009-11-30T22:03:28Z", "is_private": false}, {"count": 102, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 132790, "time": "2009-12-12T20:04:19Z", "creator": "whoreperl@gmail.com", "creation_time": "2009-12-12T20:04:19Z", "is_private": false, "text": "I tried the patch.\n\nPatch applied successfully but it still does not work with SSL.\n\nThis is my configuration in httpd.conf\n#=====================================================\n<VirtualHost 123.123.123.123:443>\nServerName lol.mydomain.com\nSSLEngine on\nSSLCertificateFile /root/SSL/ssh-proxy/server.crt\nSSLCertificateKeyFile /root/SSL/ssh-proxy/server.key\n\nCustomLog \"/root/empty/ssh-access.log\" common\nErrorLog \"/root/empty/ssh-error.log\"\n\nHostnameLookups On\nProxyRequests on\nAllowCONNECT 22 2022\nProxyVia on\n\n<ProxyMatch lol.mydomain.com>\nOrder deny,allow\nDeny from all\nAllow from 59.93\n</ProxyMatch>\n</VirtualHost> \n#=====================================================\n\nIt works if I disable SSL"}, {"count": 103, "tags": [], "bug_id": 29744, "text": "Comment on attachment 24252\nClose backend connection when client disconnects\n\npatch commited as r924455", "id": 135404, "time": "2010-03-17T20:10:38Z", "creator": "sf@sfritsch.de", "creation_time": "2010-03-17T20:10:38Z", "is_private": false, "attachment_id": 24252}, {"count": 104, "tags": [], "bug_id": 29744, "text": "(In reply to comment #103)\n> (From update of attachment 24252 [details])\n> patch commited as r924455\n\nWhat is this for?  Is it relevant to this bug (about mod_proxy CONNECT forwarding over SSL connections?)\n\nJulian", "id": 135575, "time": "2010-03-24T01:45:53Z", "creator": "julian@d-and-j.net", "creation_time": "2010-03-24T01:45:53Z", "is_private": false, "attachment_id": null}, {"count": 105, "tags": [], "creator": "julian@d-and-j.net", "attachment_id": null, "text": "(In reply to comment #103)\n> (From update of attachment 24252 [details])\n> patch commited as r924455\n\nWhat is this for?  Is it relevant to this bug (about mod_proxy CONNECT forwarding over SSL connections?)\n\nJulian", "id": 135576, "time": "2010-03-24T01:45:55Z", "bug_id": 29744, "creation_time": "2010-03-24T01:45:55Z", "is_private": false}, {"count": 106, "tags": [], "text": "Just a typo... see\n\nhttp://svn.apache.org/viewvc?view=revision&revision=813178\n\nthat would be the fix, no?  Please validate against 2.2.15 before reopening.", "attachment_id": null, "id": 135577, "creator": "wrowe@apache.org", "time": "2010-03-24T04:05:58Z", "bug_id": 29744, "creation_time": "2010-03-24T04:05:58Z", "is_private": false}, {"count": 107, "tags": [], "bug_id": 29744, "text": "That was the patch, it is not backported, here is the log to watch;\n\nhttp://svn.apache.org/viewvc/httpd/httpd/branches/2.2.x/modules/proxy/mod_proxy_connect.c?view=log", "id": 135578, "time": "2010-03-24T04:43:33Z", "creator": "wrowe@apache.org", "creation_time": "2010-03-24T04:43:33Z", "is_private": false, "attachment_id": null}, {"count": 108, "tags": [], "text": "Indeed, it has not been backported to 2.2.x.  Furthermore, some change between 2.2.14 and 2.2.15 has meant that, even applying the patch attached to this report to 2.2.15, CONNECTing over SSL now drops the connection very quickly, say after about 15-100 keystrokes and data transfers, making it fairly unusable.\n\nI have no idea what has caused this, or whether it is not in apache.\n\nJulian", "attachment_id": null, "id": 135586, "creator": "julian@d-and-j.net", "time": "2010-03-24T12:21:29Z", "bug_id": 29744, "creation_time": "2010-03-24T12:21:29Z", "is_private": false}, {"count": 109, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 135738, "time": "2010-03-28T22:23:25Z", "creator": "sf@sfritsch.de", "creation_time": "2010-03-28T22:23:25Z", "is_private": false, "text": "(In reply to comment #105)\n> (In reply to comment #103)\n> > (From update of attachment 24252 [details] [details])\n> > patch commited as r924455\n> \n> What is this for?  Is it relevant to this bug (about mod_proxy CONNECT\n> forwarding over SSL connections?)\n\nIt fixes the first of the two issues described in comment 87:\n\n> 1) If the client disconnects and the backend continues to send data fast, the\n> backend connection will be closed only after a long time, if at all. \n\nI expect that the second issue is still there, but I haven't checked:\n\n> 2) If the backend closes the connection, but the client doesn't, the apache\n> thread hangs and will not close the connection to the client."}, {"count": 110, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "text": "(In reply to comment #108)\n> Indeed, it has not been backported to 2.2.x.  Furthermore, some change between\n> 2.2.14 and 2.2.15 has meant that, even applying the patch attached to this\n> report to 2.2.15, CONNECTing over SSL now drops the connection very quickly,\n> say after about 15-100 keystrokes and data transfers, making it fairly\n> unusable.\n\nIf you have mod_reqtimeout enabled, that's probably (another) bug there. I will look at it when I have time.", "id": 135739, "time": "2010-03-28T22:25:56Z", "bug_id": 29744, "creation_time": "2010-03-28T22:25:56Z", "is_private": false}, {"count": 111, "tags": [], "creator": "julian@d-and-j.net", "attachment_id": null, "text": "Yes, I have mod_reqtimeout enabled.  I'll try disabling this and see what happens...\n\nThanks for the idea!\n\nJulian", "id": 135740, "time": "2010-03-28T23:05:54Z", "bug_id": 29744, "creation_time": "2010-03-28T23:05:54Z", "is_private": false}, {"count": 112, "tags": [], "creator": "newhouse@gmx.net", "attachment_id": null, "text": "(In reply to comment #109)\n> (In reply to comment #105)\n> > (In reply to comment #103)\n> > > (From update of attachment 24252 [details] [details] [details])\n> > > patch commited as r924455\n> > \n> > What is this for?  Is it relevant to this bug (about mod_proxy CONNECT\n> > forwarding over SSL connections?)\n> \n> It fixes the first of the two issues described in comment 87:\n> \n@Stefan: I am working with Apache 2.2.15 on a Windows environment. I have\nno idea how to compile this patch. Would it be possible for you to post\nthe binary mod_proxy.so file?\nMany thanks in advance.", "id": 135789, "time": "2010-03-30T14:39:53Z", "bug_id": 29744, "creation_time": "2010-03-30T14:39:53Z", "is_private": false}, {"count": 113, "tags": [], "bug_id": 29744, "text": "The patch for version 2.2.9 worked very well but after update on a debian lenny. I have an error again : Error on auth.log : sshd[6042]: Bad protocol version identification '\\025TT' from 127.0.0.1\n\nChange during this update :\n\nSetting up cpio (2.9-13lenny1) ...^M\nSetting up libssl0.9.8 (0.9.8g-15+lenny7) ...^M\nSetting up libssl-dev (0.9.8g-15+lenny7) ...^M\nSetting up nano (2.0.7-5) ...^M\nSetting up libapr1 (1.2.12-5+lenny2) ...^M\nSetting up apache2-utils (2.2.9-10+lenny8) ...^M\nSetting up apache2.2-common (2.2.9-10+lenny8) ...^M\nSetting up apache2-mpm-prefork (2.2.9-10+lenny8) ...^M\nStarting web server: apache2.^M\nSetting up apache2 (2.2.9-10+lenny8) ...^M\nSetting up libgtk2.0-common (2.12.12-1~lenny2) ...^M\nSetting up libxext6 (2:1.0.4-2) ...^M\nSetting up libgtk2.0-0 (2.12.12-1~lenny2) ...^M\nSetting up libgtk2.0-bin (2.12.12-1~lenny2) ...^M\nSetting up libpoppler3 (0.8.7-3.1) ...^M\nSetting up libpoppler-qt4-3 (0.8.7-3.1) ...^M\nSetting up linux-headers-2.6.26-2-common (2.6.26-24) ...^M\nSetting up linux-headers-2.6.26-2-686 (2.6.26-24) ...^M\nSetting up linux-libc-dev (2.6.26-24) ...^M\nSetting up openssl (0.9.8g-15+lenny7) ...^M\nSetting up python-support (0.8.4lenny2) ...^M\nSetting up usbutils (0.73-10lenny2) ...^M\n\nI have read the patch note and say that fixed something in mod_proxy.\nSomeone have the same problem with this version and Lenny ?", "id": 138616, "time": "2010-07-21T15:54:06Z", "creator": "nings@mailinator.com", "creation_time": "2010-07-21T15:54:06Z", "is_private": false, "attachment_id": null}, {"count": 114, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 138640, "time": "2010-07-22T17:44:29Z", "creator": "lionel.victor@free.fr", "creation_time": "2010-07-22T17:44:29Z", "is_private": false, "text": "(In reply to comment #113)\n\nNot sure I get what you did... You patched apache then updated your distro ?\nIf I get it right, that defeats the point totally. The update obviously swept away your patching... Sorry it seems so stupid : I must be missing something.\n\nBTW I still don't get what is missing with the proposed work-around and why it does not make its way into the trunk ?\nCan someone who understands the details of the patch summarize what regression it could bring ? And why after all this time it did not officially passed to production ?\n\nI tried to push it back to the developpers mailing list at some point but got only few answers from very busy guys... Then I've been busy myself and got flooded by the mail flow on the list. I could not keep the pace and stopped reading/waiting for someone to actually look into the patch from there...\n\nCheers,\nLionel\n\n> The patch for version 2.2.9 worked very well but after update on a debian\n> lenny. I have an error again : Error on auth.log : sshd[6042]: Bad protocol\n> version identification '\\025TT' from 127.0.0.1\n> \n> Change during this update :\n> \n> Setting up cpio (2.9-13lenny1) ...^M\n> Setting up libssl0.9.8 (0.9.8g-15+lenny7) ...^M\n> Setting up libssl-dev (0.9.8g-15+lenny7) ...^M\n> Setting up nano (2.0.7-5) ...^M\n> Setting up libapr1 (1.2.12-5+lenny2) ...^M\n> Setting up apache2-utils (2.2.9-10+lenny8) ...^M\n> Setting up apache2.2-common (2.2.9-10+lenny8) ...^M\n> Setting up apache2-mpm-prefork (2.2.9-10+lenny8) ...^M\n> Starting web server: apache2.^M\n> Setting up apache2 (2.2.9-10+lenny8) ...^M\n> Setting up libgtk2.0-common (2.12.12-1~lenny2) ...^M\n> Setting up libxext6 (2:1.0.4-2) ...^M\n> Setting up libgtk2.0-0 (2.12.12-1~lenny2) ...^M\n> Setting up libgtk2.0-bin (2.12.12-1~lenny2) ...^M\n> Setting up libpoppler3 (0.8.7-3.1) ...^M\n> Setting up libpoppler-qt4-3 (0.8.7-3.1) ...^M\n> Setting up linux-headers-2.6.26-2-common (2.6.26-24) ...^M\n> Setting up linux-headers-2.6.26-2-686 (2.6.26-24) ...^M\n> Setting up linux-libc-dev (2.6.26-24) ...^M\n> Setting up openssl (0.9.8g-15+lenny7) ...^M\n> Setting up python-support (0.8.4lenny2) ...^M\n> Setting up usbutils (0.73-10lenny2) ...^M\n> \n> I have read the patch note and say that fixed something in mod_proxy.\n> Someone have the same problem with this version and Lenny ?"}, {"count": 115, "tags": [], "creator": "lionel.victor@free.fr", "attachment_id": null, "text": "(In reply to comment #113)\n\nNot sure I get what you did... You patched apache then updated your distro ?\nIf I get it right, that defeats the point totally. The update obviously swept away your patching... Sorry it seems so stupid : I must be missing something.\n\nBTW I still don't get what is missing with the proposed work-around and why it does not make its way into the trunk ?\nCan someone who understands the details of the patch summarize what regression it could bring ? And why after all this time it did not officially passed to production ?\n\nI tried to push it back to the developpers mailing list at some point but got only few answers from very busy guys... Then I've been busy myself and got flooded by the mail flow on the list. I could not keep the pace and stopped reading/waiting for someone to actually look into the patch from there...\n\nCheers,\nLionel\n\n> The patch for version 2.2.9 worked very well but after update on a debian\n> lenny. I have an error again : Error on auth.log : sshd[6042]: Bad protocol\n> version identification '\\025TT' from 127.0.0.1\n> \n> Change during this update :\n> \n> Setting up cpio (2.9-13lenny1) ...^M\n> Setting up libssl0.9.8 (0.9.8g-15+lenny7) ...^M\n> Setting up libssl-dev (0.9.8g-15+lenny7) ...^M\n> Setting up nano (2.0.7-5) ...^M\n> Setting up libapr1 (1.2.12-5+lenny2) ...^M\n> Setting up apache2-utils (2.2.9-10+lenny8) ...^M\n> Setting up apache2.2-common (2.2.9-10+lenny8) ...^M\n> Setting up apache2-mpm-prefork (2.2.9-10+lenny8) ...^M\n> Starting web server: apache2.^M\n> Setting up apache2 (2.2.9-10+lenny8) ...^M\n> Setting up libgtk2.0-common (2.12.12-1~lenny2) ...^M\n> Setting up libxext6 (2:1.0.4-2) ...^M\n> Setting up libgtk2.0-0 (2.12.12-1~lenny2) ...^M\n> Setting up libgtk2.0-bin (2.12.12-1~lenny2) ...^M\n> Setting up libpoppler3 (0.8.7-3.1) ...^M\n> Setting up libpoppler-qt4-3 (0.8.7-3.1) ...^M\n> Setting up linux-headers-2.6.26-2-common (2.6.26-24) ...^M\n> Setting up linux-headers-2.6.26-2-686 (2.6.26-24) ...^M\n> Setting up linux-libc-dev (2.6.26-24) ...^M\n> Setting up openssl (0.9.8g-15+lenny7) ...^M\n> Setting up python-support (0.8.4lenny2) ...^M\n> Setting up usbutils (0.73-10lenny2) ...^M\n> \n> I have read the patch note and say that fixed something in mod_proxy.\n> Someone have the same problem with this version and Lenny ?", "id": 138641, "time": "2010-07-22T17:46:03Z", "bug_id": 29744, "creation_time": "2010-07-22T17:46:03Z", "is_private": false}, {"count": 116, "tags": [], "bug_id": 29744, "text": "(In reply to comment #115)\nIn a nutshell, in standard Apache distribution, proxy functionality (CONNECT request) does not work when connecting via HTTPS. Some people argue this is by design, because it is not in the RFC. Other people say this is useful and not prohibited by the RFC, so it should be included.\n\nCurrent status quo is that this feature is not in the Apache trunk, and if someone needs it, they have to apply a patch to their version of Apache, or port a patch from an older version.\n\nI believe that if this feature is included in the trunk, it would be THE GOOD THING. I will make the server more useful and will alleviate the need for patches, thus improving security and stability.", "id": 138661, "time": "2010-07-23T09:54:55Z", "creator": "ivan.krivyakov@sungard.com", "creation_time": "2010-07-23T09:54:55Z", "is_private": false, "attachment_id": null}, {"count": 117, "tags": [], "bug_id": 29744, "text": "(In reply to comment #116)\n> Current status quo is that this feature is not in the Apache trunk\n\nThat's not correct. It is in trunk, it is in 2.3.6-alpha and it will be in 2.4 (unless some severe issues are found).", "id": 138698, "time": "2010-07-27T16:49:35Z", "creator": "sf@sfritsch.de", "creation_time": "2010-07-27T16:49:35Z", "is_private": false, "attachment_id": null}, {"count": 118, "tags": [], "bug_id": 29744, "text": "Created attachment 26225\nPort of pach from 2.2.14 to 2.2.16/2.2.17", "id": 141150, "time": "2010-10-29T05:13:37Z", "creator": "sergey.anoufrienko@gmail.com", "creation_time": "2010-10-29T05:13:37Z", "is_private": false, "attachment_id": 26225}, {"count": 119, "tags": [], "creator": "Evgeny.Sabelskiy@gmail.com", "attachment_id": null, "text": "*** Bug 50508 has been marked as a duplicate of this bug. ***", "id": 142896, "time": "2010-12-21T18:16:18Z", "bug_id": 29744, "creation_time": "2010-12-21T18:16:18Z", "is_private": false}, {"count": 120, "tags": [], "creator": "ubik.pl@gmail.com", "attachment_id": null, "text": "(In reply to comment #118)\n> Created an attachment (id=26225) [details]\n> Port of pach from 2.2.14 to 2.2.16\n\nI tried this patch on debian squeeze(apache 2.2.16-4) and still get error:\nssh_exchange_identification: Connection closed by remote host", "id": 142952, "time": "2010-12-27T10:43:38Z", "bug_id": 29744, "creation_time": "2010-12-27T10:43:38Z", "is_private": false}, {"count": 121, "tags": [], "creator": "ubik.pl@gmail.com", "attachment_id": null, "text": "(In reply to comment #118)\n> Created an attachment (id=26225) [details]\n> Port of pach from 2.2.14 to 2.2.16\n\nI tried this patch on debian squeeze(apache 2.2.16-4) and still get error:\nssh_exchange_identification: Connection closed by remote host", "id": 142953, "time": "2010-12-27T10:45:33Z", "bug_id": 29744, "creation_time": "2010-12-27T10:45:33Z", "is_private": false}, {"count": 122, "tags": [], "creator": "patrick@tizzef.net", "attachment_id": null, "text": "Patch from Sergey Anufrienko work successfully for me with Apache 2.2.16 on ubuntu Maverik. I can now use the SSL layer.\nCheers.", "id": 143046, "time": "2011-01-04T04:08:57Z", "bug_id": 29744, "creation_time": "2011-01-04T04:08:57Z", "is_private": false}, {"count": 123, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 144439, "time": "2011-02-20T11:30:06Z", "creator": "laurent.tokyo+asf.bugzilla@gmail.com", "creation_time": "2011-02-20T11:30:06Z", "is_private": false, "text": "What would be required in order to get this patch backported to the current official stable branch (2.2)?"}, {"count": 124, "tags": [], "creator": "fatal.exception@gmail.com", "attachment_id": null, "text": "Is this patch in 2.2.16? I'm running the latest possible apache on the latest debian, and this bug still appears to be there. Its so strange that there seems to have been a fix for years and still the popular version of apache doesn't support this in its trunk. Pleeeeeeaaase Pleaaase help? What will it take to get this in 2.2 and into the latest debian? Money? My first born? Community Service? Please please please, I'm begging for this bug to be fixed after years.", "id": 146343, "time": "2011-05-16T07:48:40Z", "bug_id": 29744, "creation_time": "2011-05-16T07:48:40Z", "is_private": false}, {"count": 125, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 146344, "time": "2011-05-16T07:52:30Z", "creator": "sergey.anoufrienko@gmail.com", "creation_time": "2011-05-16T07:52:30Z", "is_private": false, "text": "See above, the patch for this bug is in 2.3.6-alpha and it will be in 2.4\n(unless some severe issues are found)."}, {"count": 126, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 146692, "time": "2011-05-28T05:14:19Z", "creator": "do_not_reply_3b4j4b@mailinator.com", "creation_time": "2011-05-28T05:14:19Z", "is_private": false, "text": "When I try to use the above 2.2.14 fix (or 2.2.8 fix) with Apache on Win32, I get a \"incoming packet garbled on decryption\" error in putty.\n\nWould it be possible to compile a win32 port of this patch for the latest version 2.2.19?\n\nCurrently I am copying mod_proxy_connect.so into the modules directory and restarting the apache service. Is this correct?\n\nThanks everyone."}, {"count": 127, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 154174, "time": "2012-02-26T16:34:03Z", "creator": "sf@sfritsch.de", "creation_time": "2012-02-26T16:34:03Z", "is_private": false, "text": "fixed in 2.4.1"}, {"count": 128, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 154706, "time": "2012-03-08T19:10:08Z", "creator": "sbasavanahally@gmail.com", "creation_time": "2012-03-08T19:10:08Z", "is_private": false, "text": "(In reply to comment #127)\n> fixed in 2.4.1\n\nI got the Win 32 version of 2.4.1 because I need this funcitonality discussed on this thread - CONNECT method over HTTPS (connecting to mod_proxy over HTTPS/SSL connection)Can someone please tell me how to configure httpd for this? I am fairly new to httpd and mod_proxy. I have this so far:\n\n<VirtualHost _default_:443>\n\nCustomLog \"C:/Sri/installs/httpd-2.4.1-win32-ssl_0.9.8t/Apache24/logs/ssl_request.log\" \\\n          \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\n\nServerName sbasavanahal-xp.rim.net\nHostnameLookups On\nProxyRequests on\nAllowCONNECT 443\nProxyVia On\n<Proxy *>\n\t\n  Order deny,allow\n  Allow from all\n  AuthType Basic\n  AuthName \"Password Required\"\n  AuthBasicAuthoritative On\n  AuthUserFile password.file\n  Require user admin\n</Proxy>\n\nSSLEngine on\nSSLCertificateFile \"C:/Sri/installs/httpd-2.4.1-win32-ssl_0.9.8t/Apache24/conf/apache.crt\"\nSSLCertificateKeyFile \"C:/Sri/installs/httpd-2.4.1-win32-ssl_0.9.8t/Apache24/conf/apache2.key\"\n</VirtualHost>\n\nWith this I get apache listening on SSL, but CONNECT does not seem to work over SSL.\n\nThanks for any help."}, {"count": 129, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 155068, "time": "2012-03-19T20:06:40Z", "creator": "sf@sfritsch.de", "creation_time": "2012-03-19T20:06:40Z", "is_private": false, "text": "(In reply to comment #128)\n> I got the Win 32 version of 2.4.1 because I need this funcitonality discussed\n> on this thread - CONNECT method over HTTPS (connecting to mod_proxy over\n> HTTPS/SSL connection)Can someone please tell me how to configure httpd for\n> this? I am fairly new to httpd and mod_proxy. I have this so far:\n\n> With this I get apache listening on SSL, but CONNECT does not seem to work over\n> SSL.\n\nThere should not be any configuration necessary besides what you have. Please consult a user mailing list to sort out the details."}, {"count": 130, "tags": [], "bug_id": 29744, "text": "Created attachment 29072\nPort of the patch to Apache 2.2.22 (Win32)\n\nI just compiled Apache with Visual Studio 2010 and applied the patch. Seems to work fine. \n\nIMPORTANT: since this is a VS2010 compilation, it depends on MSVCR100.DLL, which you may or may not have on your system. If you don't, Apache won't start claiming it cannot load the module.", "id": 160702, "time": "2012-07-18T01:35:17Z", "creator": "ivan@ikriv.com", "creation_time": "2012-07-18T01:35:17Z", "is_private": false, "attachment_id": 29072}, {"count": 131, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 163442, "time": "2012-11-14T15:45:56Z", "creator": "jeyfox@gmail.com", "creation_time": "2012-11-14T15:45:56Z", "is_private": false, "text": "(In reply to comment #130)\n> Created attachment 29072 [details]\n> Port of the patch to Apache 2.2.22 (Win32)\n> \n> I just compiled Apache with Visual Studio 2010 and applied the patch. Seems\n> to work fine. \n> \n> IMPORTANT: since this is a VS2010 compilation, it depends on MSVCR100.DLL,\n> which you may or may not have on your system. If you don't, Apache won't\n> start claiming it cannot load the module.\n\nCan you attach your patch for 2.2.22 please"}, {"count": 132, "tags": [], "creator": "chouclia@spaml.de", "attachment_id": null, "text": "(In reply to comment #95)\n> Created attachment 24615 [details]\n> Patch for version 2.2.14\n> \n> This is a patch for version 2.2.14. It is more or less mechanically derived\n> from the 2.2.11 patch. I compiled this version and it seems to work fine for\n> me.\n\nI applied this patch in debian squeeze for version 2.2.16-6+squeeze10. However I get the error\n\nBad packet length 1349676916.\nDisconnecting: Packet corrupt\n\n\nMore precisely:\n\n> ssh -vv host\nOpenSSH_5.9p1 Debian-5ubuntu1, OpenSSL 1.0.1 14 Mar 2012\ndebug2: ssh_connect: needpriv 0\ndebug1: Checking blacklist file /usr/share/ssh/blacklist.DSA-1024\ndebug1: Checking blacklist file /etc/ssh/blacklist.DSA-1024\ndebug1: permanently_drop_suid: 1000\ndebug1: ssh_exchange_identification: HTTP/1.0 200 Connection Established\n\n\ndebug1: ssh_exchange_identification: Proxy-agent: Apache/2.2.16 (Debian)\n\n\ndebug1: ssh_exchange_identification: \n\n\ndebug1: Remote protocol version 2.0, remote software version OpenSSH_5.5p1 Debian-6+squeeze2\ndebug1: match: OpenSSH_5.5p1 Debian-6+squeeze2 pat OpenSSH*\ndebug1: Enabling compatibility mode for protocol 2.0\ndebug1: Local version string SSH-2.0-OpenSSH_5.9p1 Debian-5ubuntu1\ndebug2: fd 5 setting O_NONBLOCK\ndebug2: fd 4 setting O_NONBLOCK\ndebug1: SSH2_MSG_KEXINIT sent\nBad packet length 1349676916.\nDisconnecting: Packet corrupt\n\n\nDoes anyone have an idea how to fix this?\nThank you very much.", "id": 164084, "time": "2012-12-15T15:18:52Z", "bug_id": 29744, "creation_time": "2012-12-15T15:18:52Z", "is_private": false}, {"count": 133, "tags": [], "creator": "dma_k@mail.ru", "attachment_id": null, "text": "You're trying HTTP with SSH client? Hm...\nTry this:\n$ openssl s_client -connect localhost:443\nCONNECT thathost:25\nOr this:\n$ proxytunnel -E -v -p localhost:443 -d thathost:25\n\nPatch works OK for Debian Apache 2.2.22-12.", "id": 164193, "time": "2012-12-21T00:34:59Z", "bug_id": 29744, "creation_time": "2012-12-21T00:34:59Z", "is_private": false}, {"count": 134, "tags": [], "creator": "lars@tuxplace.nl", "attachment_id": null, "text": "Does anyone have a patch for Apache 2.2.22 (Linux)?", "id": 166364, "time": "2013-04-03T19:16:03Z", "bug_id": 29744, "creation_time": "2013-04-03T19:16:03Z", "is_private": false}, {"count": 135, "tags": [], "creator": "julian@d-and-j.net", "attachment_id": 30144, "text": "Created attachment 30144\nPatch for Apache 2.2.22 (tested on Linux machine against the Debian version of apache; should work on vanilla apache too)", "id": 166365, "time": "2013-04-03T19:24:58Z", "bug_id": 29744, "creation_time": "2013-04-03T19:24:58Z", "is_private": false}, {"count": 136, "tags": [], "text": "Thanks!\n\nBut do I have to recompile Apache completely for this? Or is there any chance I can just recompile mod_proxy_connect and then replace mod_proxy_connect.so by the patched version?", "attachment_id": null, "id": 166367, "creator": "lars@tuxplace.nl", "time": "2013-04-03T20:26:56Z", "bug_id": 29744, "creation_time": "2013-04-03T20:26:56Z", "is_private": false}, {"count": 137, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 166369, "time": "2013-04-03T22:34:38Z", "creator": "julian@d-and-j.net", "creation_time": "2013-04-03T22:34:38Z", "is_private": false, "text": "(In response to comment 136.)\n\nYou could possibly just recompile that one module, but the effort required to find the correct build flags and to compile any dependencies and so on seems to be excessive.  Assuming that you're working with a standard Linux distribution (Debian or a derivative or Red Hat or a derivative or similar), you should be able to download the source package, patch the file and then rebuild it; the effort required is minimal.\n\nOn Debian, you can do something like the following, assuming that you have a line such as:\n  deb-src http://ftp.debian.org/debian/ testing main\nin your /etc/apt/sources.list; here '#' indicates commands to be run as root (if you have a more complex setup, such as with chroots, you will know what you are doing!):\n\n~ # aptitude install build-essential fakeroot quilt devscripts\n~ # aptitude build-dep apache2\n~ $ cd /tmp\n/tmp $ apt-get source apache2\n/tmp $ cd apache2-2.2.22\n/tmp/apache2-2.2.22 $ quilt new 999_mod_proxy.patch\n/tmp/apache2-2.2.22 $ quilt add modules/proxy/mod_proxy_connect.c\n/tmp/apache2-2.2.22 $ patch -p1 < /tmp/999_mod_proxy   # or whatever you've called the patch file you download from this bug report\n/tmp/apache2-2.2.22 $ quilt refresh\n/tmp/apache2-2.2.22 $ dch --nmu 'Apply mod-proxy patch'\n/tmp/apache2-2.2.22 $ debuild -us -uc\n~ # dpkg -i /tmp/apache2_2.2.22-13.1_*.deb ...    # list all of the .deb files you wish to install - this should be every apache2-derived package that you have installed, so that the versions correctly match\n\nHTH,\n\nJulian"}, {"count": 138, "tags": [], "text": "(In reply to comment #137)\n> (In response to comment 136.)\n> \n> You could possibly just recompile that one module, but the effort required\n> to find the correct build flags and to compile any dependencies and so on\n> seems to be excessive.  Assuming that you're working with a standard Linux\n> distribution (Debian or a derivative or Red Hat or a derivative or similar),\n> you should be able to download the source package, patch the file and then\n> rebuild it; the effort required is minimal.\n> \n> On Debian, you can do something like the following, assuming that you have a\n> line such as:\n>   deb-src http://ftp.debian.org/debian/ testing main\n> in your /etc/apt/sources.list; here '#' indicates commands to be run as root\n> (if you have a more complex setup, such as with chroots, you will know what\n> you are doing!):\n> \n> ~ # aptitude install build-essential fakeroot quilt devscripts\n> ~ # aptitude build-dep apache2\n> ~ $ cd /tmp\n> /tmp $ apt-get source apache2\n> /tmp $ cd apache2-2.2.22\n> /tmp/apache2-2.2.22 $ quilt new 999_mod_proxy.patch\n> /tmp/apache2-2.2.22 $ quilt add modules/proxy/mod_proxy_connect.c\n> /tmp/apache2-2.2.22 $ patch -p1 < /tmp/999_mod_proxy   # or whatever you've\n> called the patch file you download from this bug report\n> /tmp/apache2-2.2.22 $ quilt refresh\n> /tmp/apache2-2.2.22 $ dch --nmu 'Apply mod-proxy patch'\n> /tmp/apache2-2.2.22 $ debuild -us -uc\n> ~ # dpkg -i /tmp/apache2_2.2.22-13.1_*.deb ...    # list all of the .deb\n> files you wish to install - this should be every apache2-derived package\n> that you have installed, so that the versions correctly match\n> \n> HTH,\n> \n> Julian\n\nThank you for your excellent illustration! (I wasn't familiar with Debian patch/build utilities like quilt)\n\nThis solution works perfectly. I assume I have to repeat this for every new version of Apache released in Debian Wheezy until this patch is included?", "attachment_id": null, "id": 166377, "creator": "lars@tuxplace.nl", "time": "2013-04-04T16:32:08Z", "bug_id": 29744, "creation_time": "2013-04-04T16:32:08Z", "is_private": false}, {"count": 139, "tags": [], "creator": "sergey.anoufrienko@gmail.com", "attachment_id": null, "text": "This was fixed in 2.4, which is the current recommended branch.", "id": 166378, "time": "2013-04-04T16:35:31Z", "bug_id": 29744, "creation_time": "2013-04-04T16:35:31Z", "is_private": false}, {"count": 140, "tags": [], "creator": "julian@d-and-j.net", "attachment_id": null, "text": "Yes, this process needs doing for every new version of apache2 that Debian releases in the 2.2 series.  But unless there are security bugs, Debian will its next major release with 2.2.22-13 as the apache version (we are in deep freeze right now, and Debian 8.0 or whatever it is to be called will be released in the very near future).  In the meantime, apache 2.4.4 is waiting in experimental, and will probably be installed in unstable shortly thereafter, and that contains this patch as applied upstream.", "id": 166379, "time": "2013-04-04T16:47:37Z", "bug_id": 29744, "creation_time": "2013-04-04T16:47:37Z", "is_private": false}, {"count": 141, "tags": [], "bug_id": 29744, "text": "Hmm. When I test the above patch, I'm getting a different result:\n\n$ gnutls-cli www.rath.org\n[...]\n- Handshake was completed\n\n- Simple Client Mode:\n\nCONNECT www.web.de:80 HTTP/1.0\nHost: www.rath.org\n\nHTTP/1.1 400 Bad Request\nDate: Thu, 12 Sep 2013 00:52:24 GMT\nVary: Accept-Encoding\nContent-Length: 293\nConnection: close\nContent-Type: text/html; charset=iso-8859-1\n\nAnd the server log says:\n\n[Thu Sep 12 00:52:29 2013] [error] Hostname www.rath.org provided via SNI and hostname www.web.de provided via HTTP are different\n\nHas anyone else tried to use this with name based virtual TLS hosts? It looks as if Apache is trying to match the SNI with the host specified in CONNECT, rather than the one given in the host header.", "id": 170055, "time": "2013-09-12T00:55:25Z", "creator": "Nikolaus@rath.org", "creation_time": "2013-09-12T00:55:25Z", "is_private": false, "attachment_id": null}, {"count": 142, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 171755, "time": "2013-12-16T01:00:18Z", "creator": "dma_k@mail.ru", "creation_time": "2013-12-16T01:00:18Z", "is_private": false, "text": "(In reply to Stefan Fritsch from comment #127)\n> fixed in 2.4.1\n\nI am testing Apache 2.4.6-3 (Debian):\n\n$ proxytunnel.exe -v -X -p proxy:443 -d localhost:25\nSSL local to remote proxy enabled\nLocal proxy proxy resolves to 10.15.2.100\nConnected to proxy:443 (local proxy)\n\nTunneling to localhost:25 (destination)\nCommunication with local proxy:\n -> CONNECT localhost:25 HTTP/1.0\n -> Proxy-Connection: Keep-Alive\nanalyze_HTTP: readline failed: Connection closed by remote host\n\nI have the same symptoms as without this patch being present in source. Can anyone confirm that 2.4 is really working?"}, {"count": 143, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 171757, "time": "2013-12-16T03:05:32Z", "creator": "dma_k@mail.ru", "creation_time": "2013-12-16T03:05:32Z", "is_private": false, "text": "Sorry for my last comment: Apache 2.4.6 is working fine. I have forgotten to include \"-E\" switch:\n\nproxytunnel.exe -v -E -p proxy:443 -d localhost:25"}, {"count": 144, "tags": [], "text": "Thanks to Julian Gilbey for the patch.\nWorks great for httpd.2.2.22 on Ubuntu precise.", "attachment_id": null, "id": 174119, "creator": "patrick@tizzef.net", "time": "2014-03-26T20:45:17Z", "bug_id": 29744, "creation_time": "2014-03-26T20:45:17Z", "is_private": false}, {"count": 145, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "text": "So there is a set of patches that further correct the behavior of this enhancement\nhttp://home.apache.org/~ylavic/patches/httpd-2.2.x-mod_proxy_connect-transfer.patch\n\nI'd like to get this into 2.2.32 - is anyone who has deployed the patch above\nable to test this revised patch?\n\nThe delta to the current 2.2.22 patch above, with the fixes to that patch already \nin 2.4, can be found here;\nhttp://home.apache.org/~ylavic/patches/httpd-2.2.x-mod_proxy_connect-transfer.patch\n\nI intend to tag 2.2.32 tomorrow, so confirmation of the net patch would be helpful.", "id": 192032, "time": "2016-06-30T14:09:34Z", "bug_id": 29744, "creation_time": "2016-06-30T14:09:34Z", "is_private": false}, {"count": 146, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 192657, "time": "2016-07-26T16:06:09Z", "creator": "wrowe@apache.org", "creation_time": "2016-07-26T16:06:09Z", "is_private": false, "text": "One more ping, if anyone is still using httpd 2.2.31 and is interested in this\npatch finally making it into  2.2.32, please see new patch directions in \nComment #145 and report your results back here over the next week? Thanks for\nyour patience folks, glad we have this resolved on 2.4.x."}, {"count": 147, "tags": [], "bug_id": 29744, "attachment_id": null, "id": 194056, "time": "2016-09-28T15:07:27Z", "creator": "wrowe@apache.org", "creation_time": "2016-09-28T15:07:27Z", "is_private": false, "text": "Correction, the proposed delta to the current 2.2.22 patch above, with the fixes \nto that patch already in 2.4, can be found here;\n\nhttp://home.apache.org/~ylavic/patches/mod_proxy_connect-id30144_vs_r1670324.diff\n\nThe complete patch proposed for backport into 2.2.32 can be found at;\n\nhttp://home.apache.org/~ylavic/patches/httpd-2.2.x-mod_proxy_connect-transfer.patch\n\nThis is the last call for review before the issue is dismissed and excluded from\nconsideration for 2.2, we are still missing one reviewer."}]