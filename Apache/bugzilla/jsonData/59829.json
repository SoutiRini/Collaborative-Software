[{"count": 0, "tags": [], "bug_id": 59829, "attachment_id": 34024, "is_private": false, "id": 192242, "time": "2016-07-08T14:05:22Z", "creator": "coladict@gmail.com", "creation_time": "2016-07-08T14:05:22Z", "text": "Created attachment 34024\nsafe and functional implementation\n\nmod_remoteip had no setting to detect if the client is using HTTPS and set the environment variable accordingly.\nTested on our acting reverse-proxy nginx, configured with this on the http listener:\n        proxy_set_header        X-Forwarded-For $remote_addr;\n        proxy_set_header        Host $http_host;\n        proxy_set_header        X-Forwarded-Proto \"http\";\n\nAnd this on the https listener:\n        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header        Host $http_host;\n        proxy_set_header        X-Forwarded-Proto https;\n\n\nThe patch adds a new setting called SecureIndicatorHeader (maybe you can think of a better name).\n\nIt's used as follows:\n    SecureIndicatorHeader X-Forwarded-Proto https\n\nThis tells you if the header \"X-Forwarded-Proto\" is present and matches the value \"https\" AND we've passed the proxy validation, then we set the \"HTTPS\" request environment variable to \"on\".\n\n\nApache Tomcat has had something similar in it's RemoteIpValve for ages, but because of its configuration format the setting is split into protocolHeader and protocolHeaderHttpsValue."}, {"count": 1, "tags": [], "bug_id": 59829, "text": "Created attachment 34249\nSame as the other patch, but also change the SERVER_PORT environment variable", "id": 193706, "time": "2016-09-14T13:47:43Z", "creator": "coladict@gmail.com", "creation_time": "2016-09-14T13:47:43Z", "is_private": false, "attachment_id": 34249}, {"count": 2, "tags": [], "creator": "p.hochbaum@dvz-mv.de", "text": "Created attachment 34495\nlike previous patch, but also setting r->server->port for correct redirections\n\nExtended the patch proposed by coladict:\n\nThis extended version changes the scheme and the used port accordingly to protocol set in secure_header. The port to be used can be configured in remoteip.conf (\"SecureInidcatorSSLPort\", default is 443). Changing scheme and port comes into effect if the server redirects requests. If not changed accordingly, the server redirects an https-Request to an http-location.", "id": 195317, "time": "2016-12-01T13:57:32Z", "bug_id": 59829, "creation_time": "2016-12-01T13:57:32Z", "is_private": false, "attachment_id": 34495}, {"count": 3, "attachment_id": null, "bug_id": 59829, "is_private": false, "id": 195323, "time": "2016-12-01T19:51:05Z", "creator": "coladict@gmail.com", "creation_time": "2016-12-01T19:51:05Z", "tags": [], "text": "This part worries me about your proposal\n\nr->server->server_scheme = config->secure_header_value;\n\nThis is not guaranteed to always be \"http\" or \"https\". That variable is set by the user, because you can't guarantee how their existing reverse proxy server reports it. I think it should be changed just to:\n\nr->server->server_scheme = \"https\";"}, {"attachment_id": 34496, "tags": [], "creator": "p.hochbaum@dvz-mv.de", "is_private": false, "count": 4, "id": 195329, "time": "2016-12-02T05:43:01Z", "bug_id": 59829, "creation_time": "2016-12-02T05:43:01Z", "text": "Created attachment 34496\nchange scheme to \"https\" if secure header is present\n\nThank you for your feedback! I changed the line. \nNow every time a secure header is present and the secure header value matches the configured one, the scheme is being changed to \"https\"."}, {"count": 5, "tags": [], "bug_id": 59829, "is_private": false, "text": "Created attachment 34504\nreset scheme and port if next request to be processed is http; set scheme and port only from trusted proxies\n\nThe existing patches lacks resetting scheme and port if the request object is reused by apache. Additionally, scheme and port should only be modified if the request was received from a trusted proxy. Both modifications may executed independently, e.g. setting the scheme when remote ip is invalid or header is absent.", "id": 195392, "time": "2016-12-07T16:07:09Z", "creator": "martin.kofahl@gmail.com", "creation_time": "2016-12-07T16:07:09Z", "attachment_id": 34504}, {"count": 6, "text": "Created attachment 34506\nreset scheme and port if next request to be processed is http; set scheme and port only from trusted proxies\n\npatch file; see comment above", "bug_id": 59829, "attachment_id": 34506, "id": 195395, "time": "2016-12-07T19:51:14Z", "creator": "martin.kofahl@gmail.com", "creation_time": "2016-12-07T19:51:14Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "creator": "martin.kofahl@gmail.com", "text": "Created attachment 34507\nmodify IP, scheme, server_port and set https env (working with mod_rewrite now)\n\nThe enhanced patch prevents mod_remoteip from running twice (and setting unexpected values) when mod_rewrite is enabled.", "id": 195399, "attachment_id": 34507, "bug_id": 59829, "creation_time": "2016-12-08T08:41:56Z", "time": "2016-12-08T08:41:56Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 59829, "text": "Created attachment 34518\nusing apr_itoa for integer conversion, removed comment setting remoteip-proxy-ip-list\n\nChanged two things compared to previous patch:\n\nThe note \"remoteip-proxy-ip-list\" in the request-table is meant to be used by mod_log_config to log the proxy forwarding the request. I removed the comment at this line.\n\nInstead of using snprintf for converting the integer value to a character array you can use apr_itoa. Thus the definition of a buffer at the data structure for remoteip_config_t is not necessary. There is no impact on complexity for allocating and deallocating the memory on destruction of the request pool, because the memory isn't really deallocated, but added to a list of free memory managed by the apache core.\nSource: http://www.fmc-modeling.org/category/projects/apache/amp/4_6Memory_resource.html\nUnfortunately the apache documentation doesn't go that much into detail regarding memory management.", "id": 195451, "time": "2016-12-12T09:22:27Z", "creator": "p.hochbaum@dvz-mv.de", "creation_time": "2016-12-12T09:22:27Z", "is_private": false, "attachment_id": 34518}, {"count": 9, "text": "Its unfortunately still not enough for the HTTPS variable to work with mod_rewrite, such rewriterules will not work and create a redirect loop :\n    RewriteCond %{HTTPS} !=on\n    RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R,L]\n\n\nIts not working because mod_rewrite doesnt rely on the \"HTTPS\" variable but it does call the mod_ssl function \"ssl_is_https()\".\nThe code calling this function is located in \"lookup_variable()\" in mod_rewrite.c where it does :\n    int flag = rewrite_is_https && rewrite_is_https(r->connection);\n\n\n\nSo far i havent found a simple solution to this issue that wouldnt involve modifying mod_rewrite (or mod_ssl).", "bug_id": 59829, "attachment_id": null, "id": 196568, "time": "2017-01-30T18:08:45Z", "creator": "jean@phpnet.org", "creation_time": "2017-01-30T18:08:45Z", "tags": [], "is_private": false}, {"count": 10, "text": "(In reply to Jean Weisbuch from comment #9)\n> Its unfortunately still not enough for the HTTPS variable to work with\n> mod_rewrite, such rewriterules will not work and create a redirect loop :\n>     RewriteCond %{HTTPS} !=on\n>     RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R,L]\n> \n> \n> Its not working because mod_rewrite doesnt rely on the \"HTTPS\" variable but\n> it does call the mod_ssl function \"ssl_is_https()\".\n> The code calling this function is located in \"lookup_variable()\" in\n> mod_rewrite.c where it does :\n>     int flag = rewrite_is_https && rewrite_is_https(r->connection);\n> \n> \n> \n> So far i havent found a simple solution to this issue that wouldnt involve\n> modifying mod_rewrite (or mod_ssl).\n\nA way to fix it by modifying mod_rewrite (which is not a proper solution) :\n\n--- modules/mappers/mod_rewrite.c.orig\t2016-12-14 23:27:25.000000000 +0100\n+++ modules/mappers/mod_rewrite.c\t2017-01-31 11:36:46.162667272 +0100\n@@ -1923,7 +1923,8 @@\n \n         case  5:\n             if (!strcmp(var, \"HTTPS\")) {\n-                int flag = rewrite_is_https && rewrite_is_https(r->connection);\n+                int flag = (rewrite_is_https && rewrite_is_https(r->connection)) || apr_table_get(r->connection->notes, \"remoteip_env_https\");\n                 return apr_pstrdup(r->pool, flag ? \"on\" : \"off\");\n             }\n             break;", "bug_id": 59829, "attachment_id": null, "id": 196593, "time": "2017-01-31T10:42:54Z", "creator": "jean@phpnet.org", "creation_time": "2017-01-31T10:42:54Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 59829, "text": "Why not rather use %{ENV:remoteip_env_https} in the RewriteCond?", "id": 196597, "time": "2017-01-31T11:36:39Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2017-01-31T11:36:39Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "Comment on attachment 34518\nusing apr_itoa for integer conversion, removed comment setting remoteip-proxy-ip-list\n\nFrom attachment 34518 :\n\n>--- httpd-fbc5e20ead005fd3a2bec05924f9e90dfd195406/modules/metadata/mod_remoteip.c\t2016-09-13 21:59:18.000000000 +0200\n>+++ mod_remoteip.c\t2016-12-09 13:51:20.517582087 +0100\n[]\n>@@ -389,38 +458,75 @@\n[]\n>+    if (secure) {\n>+        apr_table_setn(r->subprocess_env, \"HTTPS\", \"on\");\n>+        r->server->port = config->secure_port;\n>+        r->server->server_scheme = config->secure_scheme;\n\nWe really can't do that, r->server is shared between all threads/requests (i.e. read-only in request processing).\n\n>+        r->parsed_uri.port = r->server->port;\n>+        \n>+        /* Header available, matched and processed. May be unset now.\n>+           When using mod_rewrite, the HTTPS env will be unset, so set\n>+           a flag for setting the env var again. */\n>+        apr_table_unset(r->headers_in, config->secure_header_name);\n>+        apr_table_set(r->connection->notes, \"remoteip_env_https\", \"1\");\n>+\n>+        ap_log_rerror(APLOG_MARK, APLOG_TRACE1, 0, r,\n>+                      \"Setting scheme https and server's port %d\",\n>+                      r->server->port);\n>     }\n>     else {\n>-        apr_table_unset(r->headers_in, config->header_name);\n>-    }\n>-    if (req->proxy_ips) {\n>-        apr_table_setn(r->notes, \"remoteip-proxy-ip-list\", req->proxy_ips);\n>-        if (config->proxies_header_name) {\n>-            apr_table_setn(r->headers_in, config->proxies_header_name,\n>-                           req->proxy_ips);\n>-        }\n>+        r->server->port = config->orig_port;\n>+        r->server->server_scheme = config->orig_scheme;\n\nLikewise.\n\n>     }\n>", "id": 196600, "attachment_id": 34518, "bug_id": 59829, "creation_time": "2017-01-31T11:43:18Z", "time": "2017-01-31T11:43:18Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 59829, "is_private": false, "id": 196601, "attachment_id": null, "creator": "ylavic.dev@gmail.com", "creation_time": "2017-01-31T12:08:39Z", "time": "2017-01-31T12:08:39Z", "text": "(In reply to Yann Ylavic from comment #11)\n> Why not rather use %{ENV:remoteip_env_https} in the RewriteCond?\n\nOr %{ENV:HTTPS} since the patch seems to set the \"HTTPS\" entry in the request's notes (used by mod_rewrite), while \"remoteip_env_https\" is set in the connection's  (why??) notes (not used by mod_rewrite)."}, {"attachment_id": null, "tags": [], "bug_id": 59829, "text": "(In reply to Jean Weisbuch from comment #9)\n> Its unfortunately still not enough for the HTTPS variable to work with\n> mod_rewrite, such rewriterules will not work and create a redirect loop :\n>     RewriteCond %{HTTPS} !=on\n>     RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R,L]\n> \n> \n> Its not working because mod_rewrite doesnt rely on the \"HTTPS\" variable but\n> it does call the mod_ssl function \"ssl_is_https()\".\n> The code calling this function is located in \"lookup_variable()\" in\n> mod_rewrite.c where it does :\n>     int flag = rewrite_is_https && rewrite_is_https(r->connection);\n> \n> \n> \n> So far i havent found a simple solution to this issue that wouldnt involve\n> modifying mod_rewrite (or mod_ssl).\n\nIn the scenario where you use mod_remoteip, you wouldn't have mod_ssl even loaded. Making mod_rewrite to be less dependent on mod_ssl would be the solution for that problem.\n\n(In reply to Yann Ylavic from comment #12)\n> Comment on attachment 34518 [details]\n> using apr_itoa for integer conversion, removed comment setting\n> remoteip-proxy-ip-list\n> \n> From attachment 34518 [details] :\n> \n> >--- httpd-fbc5e20ead005fd3a2bec05924f9e90dfd195406/modules/metadata/mod_remoteip.c\t2016-09-13 21:59:18.000000000 +0200\n> >+++ mod_remoteip.c\t2016-12-09 13:51:20.517582087 +0100\n> []\n> >@@ -389,38 +458,75 @@\n> []\n> >+    if (secure) {\n> >+        apr_table_setn(r->subprocess_env, \"HTTPS\", \"on\");\n> >+        r->server->port = config->secure_port;\n> >+        r->server->server_scheme = config->secure_scheme;\n> \n> We really can't do that, r->server is shared between all threads/requests\n> (i.e. read-only in request processing).\n\nI have not worked on this in a while, but instead of setting r->server->port, can't we just set the connection environment variable \"SERVER_PORT\"?", "count": 14, "id": 196602, "time": "2017-01-31T12:52:23Z", "creator": "coladict@gmail.com", "creation_time": "2017-01-31T12:52:23Z", "is_private": false}, {"count": 15, "tags": [], "text": "In my case, i would need this for a shared hosting platform, so i cant rely on the users having to modify their htaccess to use %{ENV:HTTPS} instead of %{HTTPS}, it has to be transparent for the users.\n\n\nAs for testing the subprocess_env \"HTTPS\" instead of the note in mod_rewrite, it definitely seems to be a better approach.", "is_private": false, "id": 196603, "creator": "jean@phpnet.org", "time": "2017-01-31T13:22:29Z", "bug_id": 59829, "creation_time": "2017-01-31T13:22:29Z", "attachment_id": null}, {"count": 16, "tags": [], "creator": "coladict@gmail.com", "text": "Created attachment 34709\nUpdated patch that sets SERVER_PORT and REQUEST_SCHEME\n\nSince you correctly voiced concerns about the SERVER_PORT, I took another shot at it, and discovered that setting it in the environment doesn't work. The correct way was to register call ap_hook_http_scheme and ap_hook_default_port to register overrides. Both hook functions assume are written under the assumption you're not using mod_ssl, because you're behind a proxy.\n\nPatch is tested on trunk 2.5 version from about 20 hours ago. Testing via phpinfo() gives these values when NOT using HTTPS:\nSERVER_PORT \t80 \nREQUEST_SCHEME \thttp \nWith HTTPS not being set, while calling it through a HTTPS request gives:\nHTTPS \ton \nSERVER_PORT \t443 \nREQUEST_SCHEME \thttps\n\nWhen I configured `SecureIndicatorSSLPort 5512` in httpd.conf, the `SERVER_PORT` changed accordingly.\n\nI haven't added checks for the validity of the parsed SecureIndicatorSSLPort value, but otherwise it seems complete.", "id": 196665, "time": "2017-02-02T11:24:50Z", "bug_id": 59829, "creation_time": "2017-02-02T11:24:50Z", "is_private": false, "attachment_id": 34709}, {"count": 17, "tags": [], "creator": "coladict@gmail.com", "text": "Created attachment 34711\nSame as last plus settings validation\n\nThis patch is made on the current trunk branch of the git mirror git://git.apache.org/httpd.git\n\nI find it odd that so many core Apache projects are still using SVN.", "id": 196684, "time": "2017-02-03T14:32:17Z", "bug_id": 59829, "creation_time": "2017-02-03T14:32:17Z", "is_private": false, "attachment_id": 34711}, {"attachment_id": null, "tags": [], "creator": "sander@hoentjen.eu", "text": "I have written something similar for ProxyProtocol instead of X-Forwarded-For, unfortunately I had not seen this issue here as I could have maybe used it as a base.\nMy code is at https://github.com/AntagonistHQ/httpd/tree/remote-ssl\nI will see if I can rebase it on the patches in this bugzilla.", "count": 18, "id": 196825, "time": "2017-02-07T19:05:24Z", "bug_id": 59829, "creation_time": "2017-02-07T19:05:24Z", "is_private": false}, {"attachment_id": 34741, "tags": [], "creator": "coladict@gmail.com", "text": "Created attachment 34741\nFix data loss when using mod_rewrite\n\nFixing patch fixes merge conflicts introduced in the following commit\n---\ncommit b960c87946085b8335da3e8b9b8749e3562f87cd\nAuthor: Daniel Ruggeri <druggeri@apache.org>\nDate:   Sat Feb 4 20:14:18 2017 +0000\n\n    Change tactic for PROXY processing in Optional case\n    \n    git-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@1781701 13f79535-47bb-0310-9956-ffa450edef68\n---\n\nIn addition it attempts to detect when the proxy server is reached via it's remote port (set by SecureIndicatorSSLPort or default to 443) when using ProxyProtocol.\n\nIt also addresses an issue where using mod_rewrite to internally rewrite the request. The HTTPS environment variable had been renamed from 'HTTPS' to 'REDIRECT_HTTPS' in the `internal_internal_redirect` function.\n\nPersonally I don't see why it needs to be that way, instead of just copying the table. It just forces mod_ssl (and now this mod) to use an extra hook for no good reason. The code that does it has been in there since 2000.\n\nNote: this still does not touch on mod_rewrite's problem of relying entirely on mod_ssl being loaded to check the `HTTPS` condition.", "count": 19, "id": 196875, "time": "2017-02-09T16:39:26Z", "bug_id": 59829, "creation_time": "2017-02-09T16:39:26Z", "is_private": false}, {"count": 20, "tags": [], "text": "I have no way to test the ProxyProtocol addition, but I'm pretty sure I should have converted the server port using ntohs() when the protocol is version 2. That is lines 1056 and 1073 when viewing the diff form. I'm on a Windows machine now, so I can't easily compile it. The .dsp files and their dependencies are so outdated that I have no idea how you manage to compile the official builds.", "is_private": false, "id": 196878, "creator": "coladict@gmail.com", "time": "2017-02-09T17:28:33Z", "bug_id": 59829, "creation_time": "2017-02-09T17:28:33Z", "attachment_id": null}, {"count": 21, "tags": [], "bug_id": 59829, "attachment_id": 34774, "text": "Created attachment 34774\nImplementation for 2.4 branch based on 2.4.25 tag\n\nAnyone wanting to use this feature for 2.4 can apply this one, but it requires changes to the core, so rebuilding just the module won't work.\n\nThe reason is I ran into this https://www.sslshopper.com/apache-redirect-http-to-https.html\n\nI found-out that someone using `Redirect / https://mysite.com/` in their VirtualHost will get stuck in a redirect loop, and the only solution is to add a hook called after the headers are parsed, but before VirtualHost is resolved.", "id": 197212, "time": "2017-02-22T13:17:51Z", "creator": "coladict@gmail.com", "creation_time": "2017-02-22T13:17:51Z", "is_private": false}, {"count": 22, "attachment_id": 34781, "bug_id": 59829, "text": "Created attachment 34781\nAllow multiple SSL ports\n\nIt came to mind that hosting providers often have their administration system on a different port than the main, so allowing for multiple ports to be detected as secure would give them that flexibility.\nFor example port 443 is the default, but maybe they also use 8443 (common secondary HTTPS port).\nThat also means they should probably send a the port information.\n\nTested via ProxyProtocol v2, as optional setting, both with and without ProxyProtocol.\n\nSettings names have been made more consistent to be obvious they belong to this mod.\n\nCurrent logic is this after validating proxy:\nIf RemoteIPServerPortHeader is set and given, then port information is available.\nIf using ProxyProtocol, then port information is available.\nIf not using ProxyProtocol, and RemoteIPSecureHeader is sent valid value, set secure = on.\nIf RemoteIPSSLPorts is set, and port info is available {\n    Check if port is in list. Override secure setting from RemoteIPSecureHeader.\n    Ports are given higher priority.\n}\nIf RemoteIPSSLPorts is not set and port info is available, then SSL port defaults to 443 and overrides RemoteIPSecureHeader setting.\nIf RemoteIPSSLPorts is not set and no port info is available, but RemoteIPSecureHeader has set secure, then port defaults to 443.\n\n\nI believe all that's left to do now is documentation.", "id": 197299, "time": "2017-02-27T11:43:21Z", "creator": "coladict@gmail.com", "creation_time": "2017-02-27T11:43:21Z", "tags": [], "is_private": false}]