[{"count": 0, "tags": [], "creator": "todd@genuitec.com", "attachment_id": null, "text": "According to the JSP 2.0 specification, Section 11.5 - Debugging Requirements:\n\"Full runtime support for JSR-45 (as opposed to only generating the SMAPs that \nare used at runtime) is only required when the JSP container is running in a \nJ2SE 1.4 or greater environment.\"\n\nWhile Jasper2 correctly generates SMAP's during JSP compilation, when running \nin a J2SE 1.4 environment, the SMAP is not properly stored in the resulting \nclass file as required by the JSP 2.0 & JSR-45 specifications.\n\nFollowing is a full description of the issue.  It is effectively a duplicate of \nan email I posted to the tomcat-dev mailing list, to which there was no \nresponse.\n\nWe're working to support source-level JSP debugging for Tomcat 5 using its JSR-\n045 support.  However,we've been unsuccessful at getting this to work because \nthe line to code index map that we retrieve from our SourceDebugExtension JDWP \nrequest does not agree with the  SMAP that was generated when my example JSP \nwas compiled.  The SMAP appears to be correct but for whatever reason the line\nmapping returned from the JVM has little in common with the SMAP.  \n\nWe've already gotten our debugging implementation working properly with \nWebLogic 7.0 and 8.1 so I have a high degree of confidence that once this \nmapping issue is resolved we'll also have a source-level JSP debugging\nsolution for Tomcat 5 also. \n\nHere are the details of our test environment:\nPlatform: Window 2000, latest SP\nJDK: 1.4.1_02-b06\nTomcat: Version 5.0.2 (alpha)\nTomcat 5 JSP servlet settings from web.xml:\n    <servlet>\n        <servlet-name>jsp</servlet-name>\n        <servlet-class>org.apache.jasper.servlet.JspServlet</servlet-class>\n        <init-param>\n            <param-name>logVerbosityLevel</param-name>\n            <param-value>WARNING</param-value>\n        </init-param>\n        <init-param>\n            <param-name>classdebuginfo</param-name>\n            <param-value>true</param-value>\n        </init-param>\n        <init-param>\n            <param-name>suppressSmap</param-name>\n            <param-value>false</param-value>\n        </init-param>\n        <init-param>\n            <param-name>dumpSmap</param-name>\n            <param-value>true</param-value>\n        </init-param>\n        <init-param>\n            <param-name>development</param-name>\n            <param-value>true</param-value>\n        </init-param>\n        <load-on-startup>3</load-on-startup>\n    </servlet>\n\n\n\nFor the test, we attempt to set a breakpoint on line 18, which\naccording to the SMAP corresponds to line 62 of the servlet.\nHere's the test JSP, with line numbers for convenience.\n1  <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n2  <%@ page language=\"java\" import=\"java.lang.*,java.util.*\" %>\n3  <%\n4  String path = request.getContextPath();\n5  String basePath =\n\"http://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n6  %>\n7  <HTML>\n8       <HEAD>\n9      <BASE HREF=\"<%=basePath%>\">\n10      <TITLE>My JSP 'TestJSP.jsp' starting page</TITLE>\n11     </HEAD>\n12\n13     <BODY>\n14         <%\n15            Date date = new Date();\n16            out.println(\"Current time is: \" + date);\n17              out.println(\".  \");\n18              date = new Date();\n19              out.println(\"Now the time is \" + date);\n20              out.println(\".  \");\n21          %>\n22          <BR>This is my test JSP page. <BR>\n23      </BODY>\n24  </HTML>\n\n\nHere's the SMAP generated by Tomcat:\nSMAP\nC:\\dev\\ApacheGroup\\Tomcat\n5.0.2alpha\\work\\Catalina\\localhost\\TomcatTest\\org\\apache\\jsp\\TomcatTestJSP_j\nsp.java\nJSP\n*S JSP\n*F\n+ 0 TomcatTestJSP.jsp\n/TomcatTestJSP.jsp\n*L\n1:42\n4,3:45\n7:49\n8:50\n9:51\n9:52\n9:53\n10:54\n10:55\n11:56\n13:57\n15,7:59\n22:67\n22:68\n23:69\n24:70\n*E\n\n\nHere's the generated servlet.  As you can see,\nline 62 is correct for the breakpont request from\nline 18 of the JSP file.\n1     package org.apache.jsp;\n2\n3     import javax.servlet.*;\n4     import javax.servlet.http.*;\n5     import javax.servlet.jsp.*;\n6     import java.lang.*;\n7     import java.util.*;\n8\n9     public final class TomcatTestJSP_jsp extends\norg.apache.jasper.runtime.HttpJspBase\n10        implements org.apache.jasper.runtime.JspSourceDependent {\n11\n12      private static java.util.Vector _jspx_dependants;\n13\n14      public java.util.List getDependants() {\n15        return _jspx_dependants;\n16      }\n17\n18      public void _jspService(HttpServletRequest request,\nHttpServletResponse response)\n19            throws java.io.IOException, ServletException {\n20\n21        JspFactory _jspxFactory = null;\n22        PageContext pageContext = null;\n23        HttpSession session = null;\n24        ServletContext application = null;\n25        ServletConfig config = null;\n26        JspWriter out = null;\n27        Object page = this;\n28        JspWriter _jspx_out = null;\n29\n30\n31        try {\n32          _jspxFactory = JspFactory.getDefaultFactory();\n33          response.setContentType(\"text/html;charset=ISO-8859-1\");\n34          pageContext = _jspxFactory.getPageContext(this, request,\nresponse,\n35             null, true, 8192, true);\n36          application = pageContext.getServletContext();\n37          config = pageContext.getServletConfig();\n38          session = pageContext.getSession();\n39          out = pageContext.getOut();\n40          _jspx_out = out;\n41\n42          out.write(\"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01\nTransitional//EN\\\">\\r\\n\");\n43          out.write(\"\\r\\n\");\n44\n45    String path = request.getContextPath();\n46    String basePath =\n\"http://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n47\n48          out.write(\"\\r\\n\");\n49          out.write(\"<HTML>\\r\\n\\t\");\n50          out.write(\"<HEAD>\\r\\n\\t\\t\");\n51          out.write(\"<BASE HREF=\\\"\");\n52          out.write(String.valueOf(basePath));\n53          out.write(\"\\\">\\t\\t\\r\\n\\t\\t\");\n54          out.write(\"<TITLE>My JSP 'TestJSP.jsp' starting page\");\n55          out.write(\"</TITLE>\\r\\n\\t\");\n56          out.write(\"</HEAD>\\r\\n\\r\\n\\t\");\n57          out.write(\"<BODY>\\r\\n\\t  \");\n58\n59        Date date = new Date();\n60        out.println(\"Current time is: \" + date);\n61          out.println(\".  \");\n62          date = new Date();\n63          out.println(\"Now the time is \" + date);\n64          out.println(\".  \");\n65\n66          out.write(\"\\r\\n\\t\\t\");\n67          out.write(\"<BR>This is my test JSP page. \");\n68          out.write(\"<BR>\\r\\n\\t\");\n69          out.write(\"</BODY>\\r\\n\");\n70          out.write(\"</HTML>\\r\\n\");\n71        } catch (Throwable t) {\n72          if (!(t instanceof javax.servlet.jsp.SkipPageException)){\n73            out = _jspx_out;\n74            if (out != null && out.getBufferSize() != 0)\n75              out.clearBuffer();\n76            if (pageContext != null) pageContext.handlePageException(t);\n77          }\n78        } finally {\n79          if (_jspxFactory != null)\n_jspxFactory.releasePageContext(pageContext);\n80        }\n81      }\n82    }\n\n\nEverything so far looks good, but the map of JSP line numbers\nto Java line numbers returned from the JVM looks like this:\n {62=[268], 79=[400], 43=[89],  48=[154],\n  59=[227], 32=[23],  34=[35],  73=[360],\n  70=[337], 60=[236], 61=[261], 68=[323],\n  75=[377], 63=[277], 66=[309], 81=[422],\n  27=[17],  64=[302], 28=[20],  38=[64],\n  57=[220], 37=[57],  51=[175], 23=[5],\n  40=[78],  72=[350], 49=[161], 54=[199],\n  71=[344], 22=[2],   53=[192], 21=[0],\n  33=[27],  78=[394], 52=[182], 24=[8],\n  42=[82],  36=[50],  26=[14],  55=[206],\n  50=[168], 67=[316], 39=[71],  76=[382],\n  45=[96],  74=[364], 46=[104], 25=[11],\n  56=[213], 69=[330]}\n\n\nThis mapping obviously isn't correct since neither file is over 82 lines in \nlength, line 18 has no entry at all, and it has nothing in common with the SMAP.\nAccording to the JSP 2.0 specification, full JSR-45 compliance is required when \nrunning on J2SE 1.4, and this does not appear to be the case.  Again,  all this \ncode is working flawlessly with the JSR-045 implementation in WebLogic 7 & 8.\n\nI'll be glad to provide additional details, if needed, to help address this \nissue.", "id": 38443, "time": "2003-06-05T17:58:01Z", "bug_id": 20516, "creation_time": "2003-06-05T17:58:01Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 20516, "attachment_id": null, "id": 38458, "time": "2003-06-05T20:31:19Z", "creator": "kin-man.chung@sun.com", "creation_time": "2003-06-05T20:31:19Z", "is_private": false, "text": "As far as jasper is concern, it is responsible for generating the smap in the\nSourceDebugExtension attribute of the class file.  How other tools uses this\ninformation is not its concern.\n\nI have dumped the generated class file, and as far as I can tell, the\nSourceDebugExtension attribute contains the correct information.  If you can\npoint out the problems here, I'll fix them.\n\nPerhaps if you compare the class files generated by Jasper to those generated by\nWeblogic, you'll be able to tell me what Jasper is doing wrong.\n\n"}, {"count": 2, "tags": [], "text": "Kin-Man,\n\nThank you for looking into the generation within Jasper 2.  I'll do exactly as \nyou suggested and compare the WebLogic output with Jasper 2 and post my \nfindings back here once I've completed the analysis.  It could be that Jasper 2 \nis correct and WebLogic is wrong.  \n\nTodd", "attachment_id": null, "id": 38459, "creator": "todd@genuitec.com", "time": "2003-06-05T20:55:43Z", "bug_id": 20516, "creation_time": "2003-06-05T20:55:43Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 20516, "attachment_id": null, "is_private": false, "id": 38611, "time": "2003-06-09T18:40:12Z", "creator": "todd@genuitec.com", "creation_time": "2003-06-09T18:40:12Z", "text": "I've marked this bug that I submitted as invalid because I'm retracting it \ncompletely.  For the record, Jasper2 fully supports JSR-045 on J2SE 1.4 and the \nSourceDebugExtension attribute from the class file that Jasper generates \ncontains a fully conformant SMAP.\n\nThis bug was submitted in error due to a misunderstanding between myself and my \ndevelopment team on how WebLogic JSP debugging was being supported and the \ndifferences with the Tomcat 5 implementation.  As a result of this \nmisunderstanding, I posted this bug in error.  I'm sorry for any inconveniences \nthat this may have caused to anyone.\n\nSimply FYI for the interested, the next release of MyEclipse Enterprise \nWorkbench (www.myeclipseide.com), which is scheduled for release on 6/16/2003, \nwill contain full source level JSP debugging support for Tomcat 5 using its JSR-\n045 implementation."}]