[{"count": 0, "tags": [], "bug_id": 36155, "attachment_id": null, "text": "Hi,\n\nmy config is as follows:\n\ntomcat 5.5.9 knows two hosts, let's say the host \"host1\" and the host \"host2\".\nhttp://host1/ is basically a jsp-page echoing the string host1 - http://host2/\nechos the string host2.\n\napache 2.0.54 is configured with two vhost with ServerName host1 and host2. Both\nservers have a ServerAlias too - the one has ServerAlias alias1, the other has\nServerAlias alias2\n\nmod-jk 1.2.14 only knows one worker. My worker.properties looks like this:\nworker.list=worker1\nworker.worker1.type=ajp13\nworker.worker1.host=127.0.0.1\n\nA very simple config. Both apache vhosts contain a \"JkMount *.jsp worker1\"\n\nApache's UseCanonialName is on and Tomcats AJP-connector has useIPVHosts turned\non. Therefor tomcat will chose the host by the server-name that mod_jk sends.\n\nSo calling http://alias1/ results in a page containing the string host1, and\ncalling http://alias2/ results in a page containing the string host2.\n\nThe problem:\nSometimes (not always and very selden) http://alias1 returns the string host2\nand http://alias2 returns the string host1.\n\nI'm not sure, where the problem is, but i'm almost sure it's mod_jk - although i\ndon't know, what should go wrong.\n\nI now defined a second worker with the same address and each of apache's vhosts\nuse a different worker. The error didn't come up yet.", "id": 78433, "time": "2005-08-12T05:08:52Z", "creator": "sven.koehler@gmail.com", "creation_time": "2005-08-12T05:08:52Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 36155, "attachment_id": null, "text": "Dont know whether related or not.\nMigrated some old 4.0 serlvet to 4.1 with mod_jk - 1.2.0\n\nAfter I upgraded mod_jk to 1.2.15\nmy tomcat-4.1.31 start to point to wrong host.\n(the serlvet binaries are copied from another host,\n my point is Previous version did not give me problem)\n\npatricko@staff.singnet.com.sg", "id": 83981, "time": "2005-12-25T18:23:29Z", "creator": "patricko@staff.singnet.com.sg", "creation_time": "2005-12-25T18:23:29Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 36155, "is_private": false, "text": "So the problem still exists with mod_jk 1.2.15 and Tomcat 5.5.12.\n\nIf two VirtualHosts use the same worker, Tomcat receives the wrong ServerName.\nIMHO, it has something todo with some cache or some other flaw.\n(The caches are worker-wise, aren't they?)\n\nDoes somebody care about this?\n\n@Patrick: i don't know if your problem is related. For me, the problem is\nreproducable, but it does not go wrong always:\nfirst HTTP-request works, second doesn't, third works again, some random ...", "id": 83982, "time": "2005-12-25T19:13:55Z", "creator": "sven.koehler@gmail.com", "creation_time": "2005-12-25T19:13:55Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 36155, "attachment_id": null, "id": 84450, "time": "2006-01-10T20:12:50Z", "creator": "yoavs@computer.org", "creation_time": "2006-01-10T20:12:50Z", "is_private": false, "text": "Patrick, I don't think your problem is related.  Try users@tomcat.apache.org for\nhelp.  Sven, I can't reproduce your problem.  If you're still experiencing it\nand can post the configuration files for Apache, Tomcat, mod_jk, please do."}, {"count": 4, "tags": [], "bug_id": 36155, "attachment_id": null, "text": "I'll do my best, to reproduce it with a small testcase.", "id": 84452, "time": "2006-01-10T20:29:35Z", "creator": "sven.koehler@gmail.com", "creation_time": "2006-01-10T20:29:35Z", "is_private": false}, {"count": 5, "tags": [], "creator": "sven.koehler@gmail.com", "attachment_id": 17404, "id": 84565, "time": "2006-01-12T20:58:04Z", "bug_id": 36155, "creation_time": "2006-01-12T20:58:04Z", "is_private": false, "text": "Created attachment 17404\ntestcase for the problem i described\n\nThere are two hosts in tomcat: host1 and host2\nThey point to /tmp/host1 and /tmp/host2 (which is also in the tgz)\nThere are two hosts in apache: host1/alias1 and host2/alias2\nThere are two workers defined, but only one is in use from both virtualhosts\nPut the line \"127.0.0.1 host1 host2 alias1 alias2\" in /etc/hosts\n\nIf you run \"./test.sh alias1\" and \"./test.sh alias2\" in two terminals you\nshould see only \"host1\" in one window, and \"host2\" in the other window.\n\nWhat i experience is, that \"./test.sh alias2\" output \"host1\" sometimes - or\n\"./test.sh alias1\" outputs \"host2\". When i change apache's virtualhosts to use\ntwo different workers, the problem is gone."}, {"count": 6, "tags": [], "creator": "sven.koehler@gmail.com", "attachment_id": null, "text": "you can also start \"./test.sh host1\" and \"./test.sh host2\" with the same strange\nresult: \"./test.sh host1\" sometimes outputs \"host2\", and \"./test.sh host2\"\nsometimes outputs \"host1\"", "id": 84570, "time": "2006-01-12T21:43:42Z", "bug_id": 36155, "creation_time": "2006-01-12T21:43:42Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 36155, "attachment_id": null, "id": 84725, "time": "2006-01-17T19:24:16Z", "creator": "dcarwin@covalent.net", "creation_time": "2006-01-17T19:24:16Z", "is_private": false, "text": "Sven,\n Both workers on the same port? Why not match the \"host\" name in\n workers.properties to the \"host\" container name in server.xml?  Why point\n both at 127.0.0.1?\n\n Seems the proper config is to use names for the workers' host values instead\n of the same (port and) ip addy in both cases.\n\n-Dan"}, {"count": 8, "tags": [], "creator": "sven.koehler@gmail.com", "is_private": false, "text": "@Dan: i want to use only one worker - and the config attached to this bug only\nuses one worker - though two are declared.\nUsing two workers that point to the same tomcat is a workaround for me, so that\nthe bug described here doesn't rise.\nI don't understand, what you mean with \"using names\" in the worker-file. That\ndoesn't make sense to me since the proper DNS-name would be \"localhost\" in both\ncases. The AJP-Connector only listenes on localhost. The names used in the\nworker-file are _not_ sent to Tomcat by mod_jk, AFAIK.", "id": 84728, "time": "2006-01-18T01:15:40Z", "bug_id": 36155, "creation_time": "2006-01-18T01:15:40Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 36155, "text": "The comment by Dan sounded much like \"your config cannot work at all\". So i\nthink i need to explain a little more:\n\nThe config does work, if you:\n- restart apache, then run only \"./test.sh alias1\": you will only see host1 on\nthe console\n- restart apache, then run only \"./test.sh alias2\": you will only see host2 on\nthe console\n- use worker1 for the one virtualhost, and use worker2 for the other, then run\n\"./test.sh alias1\" and \"./test.sh alias2\" in parallel: both scripts return the\nright results.\n\nI hope that you agree with me, that tomcat chooses the hosts like it should.\nNote, that the server.xml says useIPVHosts=\"true\" - so tomcat does AFAIK not\nlook at the host-header, but at some other information that mod_jk sends. Since\ni also use \"UseCanonicalName On\" for apache, mod_jk is supposed to send the\nServerName declared for the virtualhost.\n\nThe config does not work, if you use the same worker for both virtualhosts -\nwhich is \"the right thing\" IMHO since there is also only one tomcat running.\nWhat do i mean, with \"it does not work\" - well:\nStart \"./test.sh alias1\" and \"./test.sh alias2\" in parallel. If you're lucky, it\nworks for 10 requests and you see what you should: \"host1\" returned by the first\ncommand, and \"host2\" returned by the second command.\n\nThe result changes for me, and the at least one command \"goes crazy\" and returns\nsomething else: either the command only returns host1 instead of host2 (or vice\nversa of course) or sometimes i even get an alternating sequence of host1 and\nhost2 by one of the commands - or even by both.\n\nEspecially the alternating output is a case, that should not occur. The choice\nmade by tomcat is deterministic AFAIK and tomcat is only considering the data\nthat it gets by mod_jk, so how can there be an alternating sequence?\n\nMy conclusion is, that mod_jk sends the wrong servername, or perhaps sending the\nservername is optional and tomcat just \"reuses\" the information it has been\ngiven by a former AJP-request on the same connection - but i have no clue about\nthose internal things.", "id": 84748, "attachment_id": null, "creator": "sven.koehler@gmail.com", "creation_time": "2006-01-18T17:51:38Z", "time": "2006-01-18T17:51:38Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 36155, "attachment_id": null, "text": "I was not able to reproduce the problem.\nWith your test files and mod_jk from SVN it works OK.", "id": 86951, "time": "2006-03-17T09:25:47Z", "creator": "mturk@apache.org", "creation_time": "2006-03-17T09:25:47Z", "is_private": false}, {"count": 11, "tags": [], "creator": "sven.koehler@gmail.com", "attachment_id": null, "id": 99990, "time": "2007-03-02T20:13:11Z", "bug_id": 36155, "creation_time": "2007-03-02T20:13:11Z", "is_private": false, "text": "I found the bug.\nIt's still present in Tomcat 6.0.10.\nI will supply details soon, as well as a patch.\n"}, {"count": 12, "tags": [], "bug_id": 36155, "text": "So the bug is in the class org.apache.tomcat.util.buf.MessageBytes.\n\nThe method setBytes doesn't clear the char-buffer. And the method setChars\ndoesn't clear the byte-buffer.\n\nIf useIPVHosts is enabled, then the parameter \"host\" of the\norg.apache.tomcat.util.http.mapper.map()-method is a MessageBytes-Object of the\ntype T_BYTES. The method MessageBytes.toChars()-method is called. But this\nmethod exists, if the charbuffer is already filled.\n\nAnd in deed, the char-buffer is already filled. While the byte-buffer contains\nthe value \"host1\", the char-buffer may still contain the value \"host2\" because\nthe MessageBytes objects are reused. And instead of converting the\nbyte-buffer-value \"host1\" to chars, the old value \"host2\" is used. This resulted\nin the bug.\n\nSo the following patch fixes the problem.\n\n\nWith your permission, i would like to clean up the class MessageBytes.\nIt really needs it - IMHO.\n", "id": 99991, "attachment_id": null, "creator": "sven.koehler@gmail.com", "creation_time": "2007-03-02T21:59:03Z", "time": "2007-03-02T21:59:03Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 36155, "attachment_id": 19659, "text": "Created attachment 19659\npatch for this bug\n\nThe patch should apply cleanly to Tomcat 6.0.10", "id": 99992, "time": "2007-03-02T22:00:42Z", "creator": "sven.koehler@gmail.com", "creation_time": "2007-03-02T22:00:42Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 36155, "attachment_id": null, "text": "I discovered, that calling byteC.recycle() also resets the Encoding that might\nhave been set. But actually the setEncoding() method is used nowhere.\nAnd calling byteC.reset() doesn't work, because the reset()-method leaves the\nByteChunk in an illegal state:  the array-pointer is set to null, but the\ninternal \"isSet\" which controlls the result of isNull() is not reset to false.\n\nI'm quite unhappy with the class MessageBytes. For example setInt/setLong also\nforget to clear the char-buffer. toBytes() ignores the charset. In many cases i\ndiscovered strange handeling of non-ASCII characters. So i don't aim to clean it\nup. There are too many side-effects that might be hurt by any modification.", "id": 99993, "time": "2007-03-03T00:40:45Z", "creator": "sven.koehler@gmail.com", "creation_time": "2007-03-03T00:40:45Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 36155, "text": "-1 for the patch. If the problem exists (I really doubt it), a better solution\nwill have to be found.", "id": 99995, "attachment_id": null, "creator": "remm@apache.org", "creation_time": "2007-03-03T02:00:04Z", "time": "2007-03-03T02:00:04Z", "is_private": false}, {"count": 16, "tags": [], "creator": "sven.koehler@gmail.com", "is_private": false, "text": "(In reply to comment #15)\n> -1 for the patch. If the problem exists (I really doubt it), a better solution\n> will have to be found.\n\nSimply one question: Why?\nsetBytes() invalidates everything - except the value within charC is kept.\n\nAnyway: there might be one missing recycle call somewhere. I'm already looking\nfor it.", "id": 99999, "time": "2007-03-03T06:25:02Z", "bug_id": 36155, "creation_time": "2007-03-03T06:25:02Z", "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 36155, "attachment_id": null, "id": 100002, "time": "2007-03-03T06:57:31Z", "creator": "sven.koehler@gmail.com", "creation_time": "2007-03-03T06:57:31Z", "is_private": false, "text": "So in org.apache.coyote.Request.recylce(), this.localNameMB.recycle() is not\ncalled. If i add that call, the problem is gone too (my first patch has been\nreverted before testing).\n\nThe problem is: remoteAddrMB.recycle(), remoteHostMB.recycle(),\nlocalAddrMB.recycle() is also not called. And i have no clue why not or is it\nshould actually be called.\n\n\nAnyway: At least localNameMB gets reused without being recycled. So the internal\ncharC contains an old value. setBytes() doesn't clear internal the charC-cache.\ntoChars() reuses the old value. Hence the bug.\n\n\nI admit, that the semantics of the MessageBytes class are a ridle to me. I don't\nknow, why setBytes() shouldn't invalidate the charC cache (even though it\ninvalidates all other cached values).\nSomebody please explain the semantics of this class to me! And decide, whether\nsetBytes() should clear charC, or not."}, {"count": 18, "tags": [], "creator": "sven.koehler@gmail.com", "attachment_id": null, "id": 100003, "time": "2007-03-03T07:04:53Z", "bug_id": 36155, "creation_time": "2007-03-03T07:04:53Z", "is_private": false, "text": "Additional information:\n\nthe value of localNameMB is set in AjpProcessor.prepareRequest() (line 645) by\ncalling \"requestHandlerMessage.getBytes(request.localName())\". This getBytes\nmethod calls setBytes() of localNameMB.\n\nAbove that line, remoteAddrMB and remoteHostMB are also set with the same\nmethod. And they also might not have been recycled. I don't know for sure."}, {"count": 19, "tags": [], "bug_id": 36155, "attachment_id": null, "text": "(In reply to comment #17)\n> And decide, whether setBytes() should clear charC, or not.\n\nIt seems you're eager to contribute and stuff, and I think that's good, but if I\nsaid -1 to your patch, this means the answer to this question is \"no\". This will\ncause problems, and is also inefficient.\n\nI think this is a special case with AJP, where recycle should possibly be called\non the localName MessageBytes before reading the localName field (it should be\nfairly explicit that the localName/Addr are otherwise never recycled in the\nRequest object). This is indeed a special case with the IP vhost feature (which\nIMO is not a very good feature, but it's another story).", "id": 100008, "time": "2007-03-03T14:45:08Z", "creator": "remm@apache.org", "creation_time": "2007-03-03T14:45:08Z", "is_private": false}, {"count": 20, "tags": [], "bug_id": 36155, "attachment_id": null, "id": 100009, "time": "2007-03-03T15:51:41Z", "creator": "sven.koehler@gmail.com", "creation_time": "2007-03-03T15:51:41Z", "is_private": false, "text": "Do you understand, why we need to recycle the localName?\n(short reason: two ajp-requests with different localName over same AJP connection)\n\n\nSo i have the feeling, that you want this fix to be AJP specific.\nI will try to fix it in that way.\n\nI tried to fix AjpProcessor/AjpAprProcessor. But the fix only worked, when i did\nit in JkCoyoteHandler. I simply changed the code from\n  request.recycle();\nto\n  request.recycle();\n  request.localName().recycle();\n\n\nI don't feel well leaving the other 3 fields (remoteAddr, remoteHost, localAddr)\nunrecycled. Somehow i feel, like this issue also applies to the other fields.\nBut i don't have enough knowledge to be sure. So i leave this up to you.\n\n\nNow i will attach a new patch. Maybe you like it :-)"}, {"count": 21, "tags": [], "bug_id": 36155, "attachment_id": 19660, "id": 100010, "time": "2007-03-03T15:53:02Z", "creator": "sven.koehler@gmail.com", "creation_time": "2007-03-03T15:53:02Z", "is_private": false, "text": "Created attachment 19660\nnew patch"}, {"count": 22, "tags": [], "creator": "william.barker@wilshire.com", "attachment_id": null, "id": 103395, "time": "2007-05-20T15:35:47Z", "bug_id": 36155, "creation_time": "2007-05-20T15:35:47Z", "is_private": false, "text": "I've committed a more general fix for the JK Connector (i.e. \nJkCoyoteHandler).  I can port it to the APR and AJP Connectors if/when Remy \nand Mladen doen't veto it."}, {"count": 23, "tags": [], "bug_id": 36155, "is_private": false, "id": 103396, "attachment_id": null, "creator": "sven.koehler@gmail.com", "creation_time": "2007-05-20T18:30:57Z", "time": "2007-05-20T18:30:57Z", "text": "> I've committed a more general fix for the JK Connector (i.e. \n> JkCoyoteHandler).  I can port it to the APR and AJP Connectors if/when Remy \n> and Mladen doen't veto it.\n\nThanks a lot!\n\nI took a look at your commits. I think, the JK Connector is fixed now. I will\ntest it soon. (At the moment, i don't have much time)."}, {"count": 24, "tags": [], "bug_id": 36155, "text": "(In reply to comment #23)\n> I took a look at your commits. I think, the JK Connector is fixed now. I will\n> test it soon. (At the moment, i don't have much time).\n\nI ran my tests, and yes: it's fixed.\n\nSweet!", "id": 103525, "attachment_id": null, "creator": "sven.koehler@gmail.com", "creation_time": "2007-05-22T16:56:34Z", "time": "2007-05-22T16:56:34Z", "is_private": false}, {"count": 25, "tags": [], "bug_id": 36155, "attachment_id": null, "id": 106380, "time": "2007-08-06T07:17:45Z", "creator": "sven.koehler@gmail.com", "creation_time": "2007-08-06T07:17:45Z", "is_private": false, "text": "So William has made a start. His patch works, and could be ported to the other 2\nconnectors.\n\nBut i think he's waiting for some reaction by Remy and Mladen.\n(see comment #22)\n\nLet's get this done, so this can be marked fixed.\n"}, {"count": 26, "tags": [], "creator": "timw@apache.org", "attachment_id": null, "id": 145711, "time": "2011-04-11T16:23:08Z", "bug_id": 36155, "creation_time": "2011-04-11T16:23:08Z", "is_private": false, "text": "I think this is as fixed as it's ever going to get (and the connectors have moved on a lot since this was raised)."}]