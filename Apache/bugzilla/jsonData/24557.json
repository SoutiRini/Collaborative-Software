[{"count": 0, "tags": [], "text": "Servlets using method\nHttpServletRequest.setCharacterEncoding(\"iso-8859-2\");\ncan't decode Polish characters.\n\nThe same seevlets works on Tomcat 4.1.27", "is_private": false, "id": 47105, "creator": "knagrodzki@sncube.com", "time": "2003-11-10T11:00:14Z", "bug_id": 24557, "creation_time": "2003-11-10T11:00:14Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "pierre.dittgen@pass-tech.fr", "text": "I have the same problem using Cocoon on Jakarta Tomcat 4.1.29, charset in HTTP\nHeader is set to ISO-8859-1. My UTF-8 pages are seen as ISO-LATIN-1 by my\nbrowser... It worked under Jakarta Tomcat 4.1.27 ", "id": 47112, "time": "2003-11-10T14:01:23Z", "bug_id": 24557, "creation_time": "2003-11-10T14:01:23Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "remm@apache.org", "text": "There's no standard for HTTP header encoding, so any solution will not be\nportable. If you want it to be relatively reliable, you should IMO URL encode\nthem (the usual %xx scheme).\nBasically, setCharacterEncoding will only (reliably) apply to the POSTed\nparameters. Tomcat 5.0 has a connector global setting to configure URI encoding\n(after %xx decoding, which is obviously still mandatory).", "id": 47114, "time": "2003-11-10T14:14:18Z", "bug_id": 24557, "creation_time": "2003-11-10T14:14:18Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 24557, "text": "It doesn't work for forms and POST method!", "id": 47118, "time": "2003-11-10T15:43:03Z", "creator": "knagrodzki@sncube.com", "creation_time": "2003-11-10T15:43:03Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "remm@apache.org", "text": "*** Bug 24721 has been marked as a duplicate of this bug. ***", "id": 47390, "time": "2003-11-15T07:46:14Z", "bug_id": 24557, "creation_time": "2003-11-15T07:46:14Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 24557, "attachment_id": null, "text": "I have verified the proper encoding is used to decode the parameters, as long as\nthey are in the POST body.\nPlease do not reopen this report (or attach a ready to run test case\ndemonstrating the \"issue\").", "id": 47391, "time": "2003-11-15T07:48:16Z", "creator": "remm@apache.org", "creation_time": "2003-11-15T07:48:16Z", "is_private": false}, {"count": 6, "tags": [], "creator": "M.Hankus@ce3.pl", "text": "But what about GET method. It is not working even that it is recommended way\nof doing things in servlet 2.3 spec.\n\nhttp://developer.java.sun.com/developer/qow/archive/179/index.jsp\n\nHere is sample of code which worked fine in previous tomcats, but not in 4.1.29\n\n response.setContentType(\"text/html; charset=utf-8\");\n        PrintWriter out = response.getWriter();\n        request.setCharacterEncoding(\"UTF-8\");\n        String zolc=\"\u017c\u00f3\u0142\u0107\";\n        out.println(\"Input string:\"+zolc);\n        out.println(\"<br>\");\n        out.println(\"Press <a\nhref=\\\"?z=\"+URLEncoder.encode(zolc,\"UTF-8\")+\"\\\">link to see how parameter is\nencoded</a><br>\");\n        out.println(\"Parameter z value is:\");\n        out.println(request.getParameter(\"z\"));\n        out.close();\n\nPlease contact me if you need to see how it works on 4.1.27 and 4.1.29 (I have\nit installed on 2 servers).\n\n\n\n", "id": 47521, "time": "2003-11-18T09:42:24Z", "bug_id": 24557, "creation_time": "2003-11-18T09:42:24Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "minhan@bsteel.com", "text": "The org.apache.coyote.tomcat4.CoyoteRequest class missed the key codes for \nsetting encoding value before call the function \nnamed \"parameters.handleQueryParameters()\" in method \"parseRequestParameters\n()\". The method \"handleQueryParameters()\" in \norg.apache.tomcat.util.http.Parameters uses the encoding value setting by the \nfunction named \"setQueryStringEncoding(String s)\" to convert byte array of the \nrequest inputStream to normal string.\n\nThe correct codes shows as following: \n \n    protected void parseRequestParameters() {\n        requestParametersParsed = true;\n        Parameters parameters = coyoteRequest.getParameters();\n        String enc = coyoteRequest.getCharacterEncoding();\n        if (enc != null) {\n            parameters.setEncoding(enc);\n            //Here set the query string encoding\n            parameters.setQueryStringEncoding(enc);//Here set the queryParm enc\n        } else {\n            parameters.setEncoding\n                (org.apache.coyote.Constants.DEFAULT_CHARACTER_ENCODING);\n            //Here set the query string encoding\n            parameters.setQueryStringEncoding \n                (org.apache.coyote.Constants.DEFAULT_CHARACTER_ENCODING);\n        }\n\n        parameters.handleQueryParameters();\n        .........", "id": 48146, "time": "2003-11-26T11:37:48Z", "bug_id": 24557, "creation_time": "2003-11-26T11:37:48Z", "is_private": false, "attachment_id": null}]