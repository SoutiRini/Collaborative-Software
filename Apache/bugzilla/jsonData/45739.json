[{"count": 0, "attachment_id": null, "creator": "miro@space-comm.com", "text": "I try to start ant script using ant as java library from Java application. The start is realized as follow:\n    File buildXmlFile = new File(\"C:\\a\\b\\z.xml\");\n    List<String> command = new ArrayList<String>();\n    ...\n    command.add(...);\n    ...\n    command.add(\"-buildfile\");\n    command.add(buildXmlFile.getAbsolutePath());\n    Main ant = new Main();\n    ant.startAnt(command.toArray(new String[command.size()]), null, null);\n\nThe content of build xml file is:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"SSHAntScriptTest\" default=\"default\" basedir=\".\">\n    <description>Build file for SSH Ant Script tests.</description>\n    <scp file=\"test.txt\" todir=\"${username}:${password}@${host}:/home/bc\"/>\n</project>\n\nThe xml build file location is different from the execution directory.\nWhen that execution is initiated from the command prompt like that everything is OK:\nc:\\somedir>ant -buildfile c:\\anotherdir>buildfile.xml\n\nWhen I try to start the same with the same parameters as java library the text.txt file can not be founded. Ant looks for the file in execution directory \"c:\\somedir\\test.txt\" instead in buildfile directory \"c:\\anotherdir\\test.txt\".\n\nTo fix this at the moment the following changes are made:\n1. The user.dir is changed:\n   File dir = buildXmlFile.getParentFile();\n   System.getProperties().put(\"user.dir\", dir.getAbsolutePath());\n2. The method runBuild from the Main class is fixed as follow:\n   private void runBuild(ClassLoader coreLoader) throws BuildException {\n      ...\n      project.init();\n\n      // 2008-Sep-04: Bug Fix from Miro.\n      project.getBaseDir();\n\nI try to put that fix before project.init() without result.\n\nIf you need I can send you one small project as test case.\n\nThe big problem is that I do some changes in System Properties and that the application is multi-thread and multi-tasking and because System Properties are global (static) for all instances in the current JVM.", "id": 120338, "time": "2008-09-04T05:22:17Z", "bug_id": 45739, "creation_time": "2008-09-04T05:22:17Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 45739, "attachment_id": null, "text": "blocker might a bit high as a priority since it isn't really blocking any usage Ant has been designed for 8-)\n\n", "id": 120340, "time": "2008-09-04T05:48:56Z", "creator": "bodewig@apache.org", "creation_time": "2008-09-04T05:48:56Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "bodewig@apache.org", "text": "There are two different places where basedirs might get resolved.  One is in\nProject#setBaseDir which may be invoked with \".\" if Project#getBasedir is called\nbefore the Project instance knows its basename.  This would resolve relative\nto the current working directory and not the location of the build file.\n\nThe other place is ProjectHelper2#onStartElement which is invoked while the build\nfile gets parsed, this will resolve relative to the location of the build file.\n\nMy guess is that something in your code invokes project.getBasedir() before the\nproject's build file has been parsed.  The most common reason for this is a\nBuildListener invoking getBaseDir in the buildStarted event which is fired\nbefore the build file gets parsed.\n", "id": 120375, "time": "2008-09-04T23:25:03Z", "bug_id": 45739, "creation_time": "2008-09-04T23:25:03Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "miro@space-comm.com", "text": "(In reply to comment #2)\n> My guess is that something in your code invokes project.getBasedir() before the\n> project's build file has been parsed.  The most common reason for this is a\n> BuildListener invoking getBaseDir in the buildStarted event which is fired\n> before the build file gets parsed.\n> \n\nIf you see my code where I am resolving the problem you will see that I call project.getBaseDir(). In principle this is not good kind of programming but I haven't time to re-write the whole Apache ant code.\n\nUnfortunately the second problem with System Properties is still existing. This can be solved very easy with one helper class SystemUtil which to be instanced for each ant instance. All calls to/from the System Properties in the existing ant code to be replaced with that class like systemUtil.getUserDir():\n   public class SystemUtil\n   {\n      private String userDir;\n\n      public String getUserDir()\n      {\n         if(userDir == null)\n         {\n            userDir = System.getProperty(\"user.dir\");\n         }\n\n         return userDir;\n      }\n\n      public void setUserDir(String userDir)\n      {\n         this.userDir = userDir;\n      }\n   }\nWith that code the problem with multi-tasking and multi-threads will be solved.\n", "id": 120377, "time": "2008-09-04T23:39:33Z", "bug_id": 45739, "creation_time": "2008-09-04T23:39:33Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 45739, "attachment_id": null, "text": "I think you misunderstood me.  Your code, the code starting Ant, must be calling getBasedir before it is safe to do so, right now I don't see anything wrong in Ant (moving getBasedir to runBuild would break a lot of other things and simply is wrong).\n\nI don't think Ant explicity reads user.dir anyplace, it just does a \n'new File(\".\")' which is resolved relative to user.dir on some VM implementations\non some operating systems (other VMs don't consult that property but the\nOS process' knowledge about its current working directory and setting user.dir\nwon't help).", "id": 120378, "time": "2008-09-05T00:11:17Z", "creator": "bodewig@apache.org", "creation_time": "2008-09-05T00:11:17Z", "is_private": false}, {"count": 5, "attachment_id": null, "creator": "miro@space-comm.com", "text": "When I am calling project.getBaseDir() before project.init() which is located in runBuild the problem is not solved because the retrieved directory is the place from where the application is started instead to be the parent directory of the build file. I need baseDir to be parent directory of build file.\n\nAlso I am not agree that in the code System.getProperty(\"user.dir\") is not used. The actual usage is:\n   System.getProperty(\"user.dir\") - 10 times\n      1 time in org.apache.tools.ant.Main\n      1 time in org.apache.tools.ant.launch.Locator\n      1 time in org.apache.tools.ant.taskdefs.Execute\n      1 time in org.apache.tools.ant.taskdefs.optional.ejb.IPlanetEjbc\n      1 time in org.apache.tools.ant.types.Path\n      1 time in org.apache.tools.ant.util.FileUtils\n      1 time in org.apache.tools.ant.ProjectTest\n      3 times in org.apache.tools.ant.util.FileUtilsTest\n   System.getProperties().put(\"user.dir\", ...) - 2 times\n      2 times in org.apache.tools.ant.taskdefs.Execute\n\n", "id": 120379, "time": "2008-09-05T00:36:43Z", "bug_id": 45739, "creation_time": "2008-09-05T00:36:43Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 45739, "attachment_id": null, "id": 120380, "time": "2008-09-05T01:04:05Z", "creator": "bodewig@apache.org", "creation_time": "2008-09-05T01:04:05Z", "is_private": false, "text": "I'm not suggesting you should invoke project.getBasedir earlier (prior to project.init), quite the opposite.\n\nSomething is calling getBasedir on your project instance before it is safe to do so, i.e. before the XML file has been parsed which doesn't happen before ProjectHelper.configureProject in runBuild.\n\nYes, user.dir may be read in some places but neither is directly related to\nsetting the basedir.\n\nOn a related note, changing the current working directory within a Java process\nis almost impossible to do 8and impossible to do in a portable way).  If you\nchange user.dir it probably doesn't have the desired effect on tasks like\n<exec>.  Just take a look at the many silly things the Execute class does\nto be able to invoke an executable inside a different working directory than\nthe one of the current process - simple as long as you can stick with a specific\nJVM on a specific OS."}, {"count": 7, "tags": [], "bug_id": 45739, "attachment_id": null, "text": "Let's see.\n\nTest.java is\n\nimport org.apache.tools.ant.Main;\n\npublic class Test {\n    public static void main(String[] args) throws Exception {\n        System.out.println(\"user.dir is \" + System.getProperty(\"user.dir\"));\n        System.out.println(\"args[0] is \" + args[0]);\n        new Main().startAnt(new String[] {\"-f\", args[0]}, null, null);\n    }\n}\n\nx.xml is\n\n<project basedir=\".\">\n  <echo>${user.dir}</echo>\n  <echo>${basedir}</echo>\n</project>\n\nC:\\Temp>c:\\j2sdk1.4.2_18\\bin\\java.exe -classpath\n..\\OSS\\ant\\build\\lib\\ant.jar;..\n\\OSS\\ant\\build\\lib\\ant-launcher.jar;. Test x.xml\nuser.dir is C:\\Temp\nargs[0] is x.xml\nBuildfile: C:\\Temp\\x.xml\n     [echo] C:\\Temp\n     [echo] C:\\Temp\n\nBUILD SUCCESSFUL\nTotal time: 0 seconds\n\nC:\\Temp>copy x.xml ..\n        1 Datei(en) kopiert.\n\nC:\\Temp>c:\\j2sdk1.4.2_18\\bin\\java.exe -classpath\n..\\OSS\\ant\\build\\lib\\ant.jar;..\n\\OSS\\ant\\build\\lib\\ant-launcher.jar;. Test ..\\x.xml\nuser.dir is C:\\Temp\nargs[0] is ..\\x.xml\nBuildfile: C:\\x.xml\n     [echo] C:\\Temp\n     [echo] C:\\\n\nBUILD SUCCESSFUL\nTotal time: 0 seconds\n\nso basedir is the directory of the build file and not the current working\ndirectory in my case.\n", "id": 120381, "time": "2008-09-05T01:18:15Z", "creator": "bodewig@apache.org", "creation_time": "2008-09-05T01:18:15Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 45739, "text": "> Yes, user.dir may be read in some places but neither is directly related to\n> setting the basedir.\n\nI am not agree with that again. The true is that when I set this value my\nproblem is solved which means that somewhere user.dir is used for setting of\nbasedir. Look at method onStartElement of ProjectHelper2.ProjectHandler class:\nproject.setBaseDir(FILE_UTILS.resolveFile(context.getBuildFileParent(),\nbaseDir));\n\nIt is similar in ProjectHelperImpl, etc.\n\n", "id": 120382, "time": "2008-09-05T01:24:43Z", "creator": "miro@space-comm.com", "creation_time": "2008-09-05T01:24:43Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 45739, "attachment_id": null, "text": "(In reply to comment #7)\n> x.xml is\n> \n> <project basedir=\".\">\n>   <echo>${user.dir}</echo>\n>   <echo>${basedir}</echo>\n> </project>\n\nThe build xml file is not full. Place one file inside like that:\n    <scp file=\"test.txt\" todir=\"${username}:${password}@${host}:/home/bc\"/>\nWhen scp try to find the file, the file will miss because ant will try to find it in user.dir instead basedir.", "id": 120383, "time": "2008-09-05T01:44:07Z", "creator": "miro@space-comm.com", "creation_time": "2008-09-05T01:44:07Z", "is_private": false}, {"count": 10, "tags": [], "text": "(In reply to comment #8)\n> > Yes, user.dir may be read in some places but neither is directly related to\n> > setting the basedir.\n> \n> I am not agree with that again. The true is that when I set this value my\n> problem is solved which means that somewhere user.dir is used for setting of\n> basedir.\n\nThat somewhere most likely is the Java class library when it it asked to\nresolve File(\".\").\n\n(In reply to comment #9)\n\n> The build xml file is not full. Place one file inside like that:\n\nOh yes, it is.  It shows that basedir is set correctly.\n\n>     <scp file=\"test.txt\" todir=\"${username}:${password}@${host}:/home/bc\"/>\n\nIf you really need that, OK.  Same Test.java as before\n\nx.xml now is\n\n<project basedir=\".\">\n  <echo>${user.dir}</echo>\n  <echo>${basedir}</echo>\n  <scp file=\"x.xml\" todir=\"stefan:PASS@HOST:/home/stefan\"/>\n</project>\n\nC:\\Temp>dir x.xml\n Volume in Laufwerk C: hat keine Bezeichnung.\n Volumeseriennummer: 1027-F564\n\n Verzeichnis von C:\\Temp\n\nDatei nicht gefunden\n\nC:\\Temp>c:\\j2sdk1.4.2_18\\bin\\java.exe -classpath .;..\\OSS\\ant\\build\\lib\\ant.jar;\n..\\OSS\\ant\\build\\lib\\ant-launcher.jar;..\\OSS\\ant\\build\\lib\\ant-jsch.jar;..\\OSS\\a\nnt\\lib\\optional\\jsch-0.1.29.jar Test ..\\x.xml\nuser.dir is C:\\Temp\nargs[0] is ..\\x.xml\nBuildfile: C:\\x.xml\n     [echo] C:\\Temp\n     [echo] C:\\\n      [scp] Connecting to HOST:22\n      [scp] done.\n\nBUILD SUCCESSFUL\nTotal time: 2 seconds\n\nThe \"Datei nicht gefunden\" as response to \"dir\" above means \"file not found\"\n- have to live with a German OS, sorry - and shows that scp would have failed\nif the file was resolved according to user.dir.", "attachment_id": null, "id": 120384, "creator": "bodewig@apache.org", "time": "2008-09-05T02:06:20Z", "bug_id": 45739, "creation_time": "2008-09-05T02:06:20Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 45739, "attachment_id": null, "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"SSHAntScriptTest\" basedir=\".\">\n    <description>Build file for SSH Ant Script tests.</description>\n    <echo>${user.dir}</echo>\n    <echo>${basedir}</echo>\n    <scp file=\"test.txt\" todir=\"${username}:${password}@${host}:/home/bc\"/>\n</project>\n\n\nMain ant = new Main();\nant.startAnt(command.toArray(new String[command.size()]), null, null);\n\n\nINFO: Connecting to dzver4:22\nBuildfile: D:\\Works.NB\\Java\\BundleCloud\\bundlecloudpoc\\modules\\bundlecloudpoc-SSHUtil\\src\\test\\java\\com\\prosyst\\util\\ssh\\ant\\impl\\AntScript.xml\n     [echo] D:\\Works.NB\\Java\\BundleCloud\\bundlecloudpoc\\modules\\bundlecloudpoc-SSHUtil\n     [echo] D:\\Works.NB\\Java\\BundleCloud\\bundlecloudpoc\\modules\\bundlecloudpoc-SSHUtil\n      [scp] Connecting to dzver4:22\n\nBUILD FAILED\njava.io.FileNotFoundException: D:\\Works.NB\\Java\\BundleCloud\\bundlecloudpoc\\modules\\bundlecloudpoc-SSHUtil\\test.txt (The system cannot find the file specified)\n        at java.io.FileInputStream.open(Native Method)\n        at java.io.FileInputStream.<init>(FileInputStream.java:106)\n        at org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.sendFileToRemote(ScpToMessage.java:232)\n        at org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.doSingleTransfer(ScpToMessage.java:160)\n        at org.apache.tools.ant.taskdefs.optional.ssh.ScpToMessage.execute(ScpToMessage.java:144)\n        at org.apache.tools.ant.taskdefs.optional.ssh.Scp.upload(Scp.java:304)\n        at org.apache.tools.ant.taskdefs.optional.ssh.Scp.execute(Scp.java:203)\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n        at org.apache.tools.ant.Task.perform(Task.java:348)\n        at org.apache.tools.ant.Target.execute(Target.java:357)\n        at org.apache.tools.ant.helper.ProjectHelper2.parse(ProjectHelper2.java:142)\n        at org.apache.tools.ant.ProjectHelper.configureProject(ProjectHelper.java:93)\n        at org.apache.tools.ant.Main.runBuild(Main.java:743)\n        at org.apache.tools.ant.Main.startAnt(Main.java:217)\n        at com.prosyst.util.ssh.ant.impl.AntScriptImpl.build(AntScriptImpl.java:79)\n        at com.prosyst.util.ssh.ant.impl.AntScriptImplTest.testBuild(AntScriptImplTest.java:55)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)\n        at org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:98)\n        at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)\n        at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)\n        at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)\n        at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)\n        at org.junit.internal.runners.JUnit4ClassRunner.invokeTestMethod(JUnit4ClassRunner.java:88)\n        at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)\n        at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)\n        at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)\n        at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)\n        at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)\n        at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)\n        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)\n        at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)\n        at org.apache.maven.surefire.Surefire.run(Surefire.java:177)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:338)\n        at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:997)\n", "id": 120385, "time": "2008-09-05T02:09:06Z", "creator": "miro@space-comm.com", "creation_time": "2008-09-05T02:09:06Z", "is_private": false}, {"count": 12, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 120386, "time": "2008-09-05T02:18:52Z", "bug_id": 45739, "creation_time": "2008-09-05T02:18:52Z", "is_private": false, "text": "would you please try my Test.java instead of a different Java class run from a JUnit test run form Maven 8-)\n\nThe later really leaves too many unknowns around."}, {"count": 13, "tags": [], "creator": "miro@space-comm.com", "attachment_id": null, "id": 120387, "time": "2008-09-05T03:03:16Z", "bug_id": 45739, "creation_time": "2008-09-05T03:03:16Z", "is_private": false, "text": "Yes, when the test is not in maven and is not started from JUnit (4.x) the result is OK.\n"}, {"count": 14, "tags": [], "bug_id": 45739, "attachment_id": null, "text": "so you'd need to find out which part it is that causes the problem, running within your code, within JUnit or within surefire.\n\nI'd start by wrapping a JUnit test around my Test.java code and running that within Maven.", "id": 120388, "time": "2008-09-05T03:25:10Z", "creator": "bodewig@apache.org", "creation_time": "2008-09-05T03:25:10Z", "is_private": false}, {"count": 15, "attachment_id": null, "creator": "bodewig@apache.org", "text": "do you think there is anything else we can do or should I close this as WORKSFORME?\n", "id": 120441, "time": "2008-09-08T03:18:48Z", "bug_id": 45739, "creation_time": "2008-09-08T03:18:48Z", "tags": [], "is_private": false}]