[{"count": 0, "tags": [], "bug_id": 44898, "attachment_id": null, "id": 115993, "time": "2008-04-28T16:02:33Z", "creator": "trejkaz@trypticon.org", "creation_time": "2008-04-28T16:02:33Z", "is_private": false, "text": "A couple of files in our own test suite which used to parse fine under 3.0.1 now fail under 3.0.2 with the following error:\n\njava.io.IOException: Cannot remove block[ 2545 ]; out of range\n\tat org.apache.poi.poifs.storage.BlockListImpl.remove(BlockListImpl.java:104)\n\tat org.apache.poi.poifs.storage.BlockAllocationTableReader.fetchBlocks(BlockAllocationTableReader.java:190)\n\tat org.apache.poi.poifs.storage.BlockListImpl.fetchBlocks(BlockListImpl.java:129)\n\tat org.apache.poi.poifs.filesystem.POIFSFileSystem.processProperties(POIFSFileSystem.java:448)\n\tat org.apache.poi.poifs.filesystem.POIFSFileSystem.<init>(POIFSFileSystem.java:109)"}, {"count": 1, "tags": [], "bug_id": 44898, "text": "Created attachment 21876\nTest files (zipped)\n\nAttaching test files in a zip (was too big to upload raw.)", "id": 115995, "time": "2008-04-28T16:14:31Z", "creator": "trejkaz@trypticon.org", "creation_time": "2008-04-28T16:14:31Z", "is_private": false, "attachment_id": 21876}, {"count": 2, "tags": [], "bug_id": 44898, "attachment_id": null, "id": 116032, "time": "2008-04-29T11:04:14Z", "creator": "josh@apache.org", "creation_time": "2008-04-29T11:04:14Z", "is_private": false, "text": "Looks similar to bug 28239.  Is this a POIFS block size problem?"}, {"count": 3, "tags": [], "bug_id": 44898, "attachment_id": null, "text": "I saw that other bug, but I thought it might be a different issue as that bug has been around since 2004, yet this one only started in version 3.0.2.\n\nDid something about the way blocks were loaded change in 3.0.2?  I've had a bit of a look myself by diffing the poifs package between 3.0.1 and 3.0.2, and the only change I can see which might cause the issue is:\n\npublic RawDataBlock(final InputStream stream, int blockSize)\n\n+               // IOUtils.readFully will always read the\n+               //  requested number of bytes, unless it hits\n+               //  an EOF\n+            _eof = true;\n\nThis is in the code which logs a warning instead of throwing an error, if the final block isn't a multiple of 512... I do recall that being fixed in 3.0.2 but it's possible the way it was fixed causes an error in some files.\n", "id": 116036, "time": "2008-04-29T17:15:15Z", "creator": "trejkaz@trypticon.org", "creation_time": "2008-04-29T17:15:15Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 44898, "attachment_id": 21882, "id": 116038, "time": "2008-04-29T17:29:03Z", "creator": "trejkaz@trypticon.org", "creation_time": "2008-04-29T17:29:03Z", "is_private": false, "text": "Created attachment 21882\nProposed fix\n\nIt is as I thought, removing that one line makes all our files parse correctly.\n\n...I put it on 28239 too, purely by accident.  I don't know if it fixes that bug yet as I haven't tested it."}, {"count": 5, "tags": [], "creator": "trejkaz@trypticon.org", "attachment_id": null, "text": "Before and after my fix, TestRawDataBlock.testShortConstructor is failing.  It seems to be expecting an IOException, which has been removed since 3.0.2.\n\nSeems someone \"fixed\" testEmptyConstructor by removing the fail() call but not testShortConstructor.  But perhaps catching IOException in the unit test is also a bad idea?\n", "id": 116040, "time": "2008-04-29T17:41:11Z", "bug_id": 44898, "creation_time": "2008-04-29T17:41:11Z", "is_private": false}, {"count": 6, "text": "Created attachment 21883\nProposed fix v2\n\nHere's one which fixes the failures in TestRawDataBlock and TestRawDataBlockList.", "creator": "trejkaz@trypticon.org", "is_private": false, "id": 116041, "time": "2008-04-29T17:58:33Z", "bug_id": 44898, "creation_time": "2008-04-29T17:58:33Z", "tags": [], "attachment_id": 21883}, {"count": 7, "tags": [], "bug_id": 44898, "attachment_id": null, "id": 116303, "time": "2008-05-06T08:29:37Z", "creator": "apache@gagravarr.org", "creation_time": "2008-05-06T08:29:37Z", "is_private": false, "text": "I don't like the idea of just hiding the EOF\n\nMaybe the right solution is that if we have a short last block, we detect this, then pad it out to the required 512 byte multiple?"}, {"count": 8, "tags": [], "bug_id": 44898, "text": "It isn't really \"hiding\" the EOF, it's simply moving it to where the file is actually EOF.\n\nPreviously it would be:\n  * 512 byte block\n  * ...\n  * 512 byte block\n  * short block (claims to be EOF)\n\nWhatever reads it from the outside said \"oh, EOF... so discard the entire block.\"\n\nNow it's:\n  * 512 byte block\n  * ...\n  * 512 byte block\n  * short block\n  * EOF\n\nI'm not really sure what's wrong with representing it how it really is.  But if you want to pad the file, go ahead... not padding it doesn't seem to have any drawback either since if it's a short block then the document entry for it won't result in reading past the end of the data which is actually there.\n", "id": 116316, "time": "2008-05-06T16:01:24Z", "creator": "trejkaz@trypticon.org", "creation_time": "2008-05-06T16:01:24Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "text": "Fixed in SVN trunk.\n\nWe now have a difference between \"stream EoF reached\" and \"I have data\", so things work correctly now", "is_private": false, "id": 116849, "creator": "apache@gagravarr.org", "time": "2008-05-20T08:42:31Z", "bug_id": 44898, "creation_time": "2008-05-20T08:42:31Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 44898, "text": "*** Bug 28239 has been marked as a duplicate of this bug. ***", "id": 116851, "time": "2008-05-20T08:43:09Z", "creator": "apache@gagravarr.org", "creation_time": "2008-05-20T08:43:09Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 44898, "text": "(In reply to comment #9)\n> Fixed in SVN trunk.\n\n\nsvn r653945 added a unit test and improved the error message. This change made it into 3.1-beta2.\n\nsvn r658285 completed the fix for this bug and was available in 3.1-final\n", "id": 124494, "time": "2009-01-29T11:41:50Z", "creator": "josh@apache.org", "creation_time": "2009-01-29T11:41:50Z", "is_private": false, "attachment_id": null}]