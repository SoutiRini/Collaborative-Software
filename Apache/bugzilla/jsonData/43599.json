[{"count": 0, "tags": [], "creator": "horst@scheruga.net", "attachment_id": null, "id": 109241, "time": "2007-10-11T06:02:43Z", "bug_id": 43599, "creation_time": "2007-10-11T06:02:43Z", "is_private": false, "text": "If I use an AsyncAppender to log a message object that is changed after the call\nof the logging method, the logging will sometime show up the value changed\nafterwards.\n\n\nExample\n\n  StringBuffer buffer = new StringBuffer(\"Hello world\");\n\n  Logger.getLogger(\"sample\").debug(buffer);\n\n  buffer.setLength(0);\n  buffer.append(\"changed message\");\n\nIf an AsyncAppender is used for logging this,\nit may log on of the three values:\n  \"Hello world\"\n  \"\"\n  \"changed message\""}, {"count": 1, "tags": [], "creator": "carnold@apache.org", "attachment_id": null, "id": 109562, "time": "2007-10-22T14:10:32Z", "bug_id": 43599, "creation_time": "2007-10-22T14:10:32Z", "is_private": false, "text": "Committed test and fix in rev 587252.\n\nFrom reviewing the code, it appears that this bug has been in the log4j codebase for an extended time \nand was preserved (not introduced) in the AsyncAppender rewrite released in log4j 1.2.14.  Added a call to \ngetRenderedMessage() which will capture the value of the message object before placing the LoggingEvent \non the queue."}]