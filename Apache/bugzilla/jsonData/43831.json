[{"count": 0, "tags": [], "text": "Unexpected Result with mysql jdbc 5.1.5, column aliases not reported\nsee http://bugs.mysql.com/bug.php?id=21596\n\nI suggest changing getColumnName to getColumnLabel.\n\nIndex: C:/dev/jee/workspace/standard/src/javax/servlet/jsp/jstl/sql/ResultImpl.java\n===================================================================\n---\nC:/dev/jee/workspace/standard/src/javax/servlet/jsp/jstl/sql/ResultImpl.java\n(revision 593646)\n+++\nC:/dev/jee/workspace/standard/src/javax/servlet/jsp/jstl/sql/ResultImpl.java\n(working copy)\n@@ -67,7 +67,7 @@\n         // Create the column name array\n         columnNames = new String[noOfColumns];\n         for (int i = 1; i <= noOfColumns; i++) {\n-            columnNames[i-1] = rsmd.getColumnName(i);\n+            columnNames[i-1] = rsmd.getColumnLabel(i);\n         }\n \n         // Throw away all rows upto startRow", "is_private": false, "id": 110375, "creator": "eq@ti.com", "time": "2007-11-09T12:59:48Z", "bug_id": 43831, "creation_time": "2007-11-09T12:59:48Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "kschneider@gmail.com", "is_private": false, "id": 110376, "time": "2007-11-09T13:13:50Z", "bug_id": 43831, "creation_time": "2007-11-09T13:13:50Z", "tags": [], "text": "(In reply to comment #0)\n> I suggest changing getColumnName to getColumnLabel.\n\nWhat, specifically, is the issue with getColumnName? Did it return null or an\nempty string? Is this potentially a JDBC driver issue? I wouldn't support\nswapping getColumnName for getColumnLabel, but if column name is null or empty,\nperhaps column label could be used as a backup."}, {"count": 2, "tags": [], "bug_id": 43831, "attachment_id": null, "id": 110377, "time": "2007-11-09T13:21:35Z", "creator": "kschneider@gmail.com", "creation_time": "2007-11-09T13:21:35Z", "is_private": false, "text": "(In reply to comment #1)\n> Is this potentially a JDBC driver issue?\n\nhttp://bugs.mysql.com/bug.php?id=21379\n\nIt looks like there's supposed to be a \"backwards-compatible option\" for the\ndriver that should make this work. There's also a comment that \"some\nframeworks/libraries don't follow the JDBC spec in using column names and\nlabels.\" So maybe column label really should be used? If anyone can point to\nsome definitive documentation, that would help."}, {"count": 3, "tags": [], "bug_id": 43831, "attachment_id": null, "id": 110378, "time": "2007-11-09T13:35:13Z", "creator": "eq@ti.com", "creation_time": "2007-11-09T13:35:13Z", "is_private": false, "text": "(In reply to comment #2)\n> If anyone can point to some definitive documentation, that would help.\n\ncouldn't find anything in the jdbc4 jsr but found this in the java6 doc\nhttp://java.sun.com/javase/6/docs/api/java/sql/ResultSetMetaData.html#getColumnLabel(int)\n\n\n"}, {"count": 4, "tags": [], "bug_id": 43831, "attachment_id": null, "is_private": false, "id": 110499, "time": "2007-11-13T12:38:57Z", "creator": "eq@ti.com", "creation_time": "2007-11-13T12:38:57Z", "text": "found mysql bug report that the useOldAliasMetadataBehavior default changes from\ntrue to false from version 5.0 to 5.1.\nhttp://bugs.mysql.com/bug.php?id=31406\n\n---\n/dev/jee/workspace/mysql-connector-java-5.0.8/src/com/mysql/jdbc/ConnectionProperties.j\nava     2007-11-13 13:36:49.473056600 -0600\n+++\n/dev/jee/workspace/mysql-connector-java-5.1.5/src/com/mysql/jdbc/ConnectionPropertiesIm\npl.java 2007-11-13 13:41:30.707431600 -0600\n \n        private BooleanConnectionProperty useOldAliasMetadataBehavior = new\nBooleanConnectionProperty(\n-                       \"useOldAliasMetadataBehavior\",\n-                       true,\n-                       \"Should the driver use the legacy behavior for \\\"AS\\\"\nclauses on columns and tables, and only \"\n-                   + \"return aliases (if any) for\nResultSetMetaData.getColumnName() or ResultSetMetaData.getTableName()\n \"\n-                   + \"rather than the original column/table name?\",\n-                   \"5.0.4\",\n+                       \"useOldAliasMetadataBehavior\", //$NON-NLS-1$\n+                       false,\n+                      \nMessages.getString(\"ConnectionProperties.useOldAliasMetadataBehavior\"),\n//$NON-NLS-1$\n+                   \"5.0.4\", //$NON-NLS-1$\n                    MISC_CATEGORY,\n                    Integer.MIN_VALUE);\n \n\nI would still suggest changing the accessor from getColumnName to getColumnLabel\nsince this would reflect the intent of the developer.\n\n\n\n"}, {"count": 5, "tags": [], "creator": "bayard@apache.org", "is_private": false, "text": "Looking at the spec, I see two uses for the name.\n\nThe first is to do ${row.lastName} and the second is to list the column names.\n\nThe latter is very obviously going to be improved by the change below. The\nformer is going to be improved in so much as presumably there's a bug when a\nselect statement has two entries with the same column names.\n\nThe people hurt by this change are ones with code like:\n\n\"SELECT id as identifier ...\" and then using ${row.id}.\n\nWe could either:\n\na) Warn such people in the release notes.\nb) Try to implement something whereby we get label + name and support both. As\nit's not a part of the API, This would mean a custom SortedMap that allowed a\nbackup key.\n\nIf desirable, b) doesn't seem that hard to implement to support the ${row.id}\nuse case, though anyone relying on getRows() as a Map is going to see a change\nin keys unless they use the same API as row.id (presumably get(Object)).\n\nThoughts?", "id": 111531, "time": "2007-12-07T05:37:05Z", "bug_id": 43831, "creation_time": "2007-12-07T05:37:05Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 43831, "attachment_id": null, "id": 111537, "creation_time": "2007-12-07T07:36:06Z", "time": "2007-12-07T07:36:06Z", "creator": "eq@ti.com", "text": "(In reply to comment #5)\n> Thoughts?\nI see no reason to change the api. When I alias the column, I never need to\naccess the field using the real column name.", "is_private": false}, {"count": 7, "tags": [], "bug_id": 43831, "attachment_id": null, "is_private": false, "id": 112316, "time": "2007-12-30T22:09:52Z", "creator": "bayard@apache.org", "creation_time": "2007-12-30T22:09:52Z", "text": "I've submitted a unit test to show this - the only problem is that Derby does\nnot do what MySQL do, so my test which should fail for MySQL in fact passes for\nDerby. \n\nsvn ci -m \"Unit test to show this bug - if it were run against mysql. Derby does\nnot exhibit the JDBC change that MySQL has\" test\n\nAdding         test/org/apache/taglibs/standard/tag/el/sql/Test43831.java\nAdding         test/web/org/apache/taglibs/standard/tag/el/sql/Test43831.jsp\nTransmitting file data ..\nCommitted revision 607682."}, {"count": 8, "tags": [], "text": "Resolving this bug as suggested:\n\nsvn ci -m \"Switching from getColumnName to getColumnLabel as per #43831. JDBC\nspec indicates that the name should be returned rather than the label, and it\nseems far more likely that a JSTL user will want the label despite the name of\nthe variable 'columnNames'. \" src/javax \n\nSending        src/javax/servlet/jsp/jstl/sql/ResultImpl.java\nTransmitting file data .\nCommitted revision 607683.", "is_private": false, "id": 112317, "creator": "bayard@apache.org", "time": "2007-12-30T22:11:45Z", "bug_id": 43831, "creation_time": "2007-12-30T22:11:45Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 43831, "attachment_id": null, "id": 140958, "time": "2010-10-23T14:20:15Z", "creator": "jboynes@apache.org", "creation_time": "2010-10-23T14:20:15Z", "is_private": false, "text": "*** Bug 45183 has been marked as a duplicate of this bug. ***"}, {"count": 10, "tags": [], "bug_id": 43831, "attachment_id": null, "id": 196142, "time": "2017-01-18T14:26:57Z", "creator": "muffl0n@raffts.net", "creation_time": "2017-01-18T14:26:57Z", "is_private": false, "text": "Is there any information for which version this bug is fixed? I can see the change in trunk but can't find any released version containing the fix (https://svn.apache.org/viewvc?view=revision&revision=607683).\n\nThe last released version is 1.2.5 (http://svn.apache.org/viewvc/tomcat/taglibs/standard/tags/taglibs-standard-1.2.5/impl/src/main/java/org/apache/taglibs/standard/tag/common/sql/) but I can't find any hint that the fix made it in this release."}]