[{"count": 0, "tags": [], "bug_id": 37423, "text": "the method \n\n\"public NodeRevisionDescriptor retrieve(SlideToken token, \nNodeRevisionDescriptors revisionDescriptors,String branch)\"\n\ndoes not work because it is incompatible with the NodeRevisionDescriptors \ninstances returned by \"public NodeRevisionDescriptors retrieve(SlideToken token, \nString uri)\" (which is the only method to get a NodeRevisionDescriptors \ninstance)\n\nYou can get 3 type of NodeRevisionDescriptors (based on uri and originalUri).\n\nCase 1: retrive(token, \"/files/some/versioned/resource\"); // with resourceUri\n  uri = /files/some/versioned/resource (uri redirector only redirect VersionUri)\n  originalUri = /files/some/versioned/resource\n\nCase 2: retrieve(token, \"/history/1\");     // with historyUri\n  uri = /history/1\n  originalUri = /history/1\n\nCase 3: retrieve(token, \"/history/1/1.1\");   // with versionUri\n  uri = /history/1\n  originalUri = /history/1/1.0\n\nIn the case 2, method use version number \"0.0\" because originalUri is an \nhistoryUri\nIn the case 3, method use version number of the version because originalUri is a \nversionUri\nIn the case 1, method throw an exception because the \"realRevisionDescriptors\" \n(retrieved by the method at OriginalUri) is not versioned.\n\nThen, there is no way to made this method doing what it should. \n\n\nA way to fix this is to remove the following line in DeltavUriRedirector.\n\n            if( rUh.isHistoryUri() ) {\n                result = NodeRevisionNumber.HIDDEN_0_0;\n            }\nbut it can cause problem somewhere else.", "id": 82284, "time": "2005-11-09T12:55:44Z", "creator": "dho@oma.be", "creation_time": "2005-11-09T12:55:44Z", "is_private": false, "attachment_id": null}]