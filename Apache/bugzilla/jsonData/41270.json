[{"attachment_id": null, "tags": [], "creator": "dean@arctic.org", "is_private": false, "count": 0, "id": 97490, "time": "2006-12-30T18:35:24Z", "bug_id": 41270, "creation_time": "2006-12-30T18:35:24Z", "text": "the TCP_DEFER_ACCEPT code for linux sets the timeout to 1 second.  this is\ntotally broken... ideally the value should be configurable via AcceptFilter or\notherwise, but at a minimum it should be something like 30 seconds.\n\nit's only by sheer luck that the current code doesn't cause havoc -- because the\nkernel itself isn't doing the right thing with the timeout and is waiting a lot\nlonger than specified.\n\n-dean"}, {"count": 1, "tags": [], "bug_id": 41270, "text": "Created attachment 19332\nset TCP_DEFER_ACCEPT to 30 seconds", "id": 97491, "time": "2006-12-30T18:36:10Z", "creator": "dean@arctic.org", "creation_time": "2006-12-30T18:36:10Z", "is_private": false, "attachment_id": 19332}, {"count": 2, "tags": [], "bug_id": 41270, "text": "see also http://marc.theaimsgroup.com/?l=linux-netdev&m=116753348815044&w=2", "id": 97493, "attachment_id": null, "creator": "dean@arctic.org", "creation_time": "2006-12-30T18:59:16Z", "time": "2006-12-30T18:59:16Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 41270, "text": "(In reply to comment #0)\n> the TCP_DEFER_ACCEPT code for linux sets the timeout to 1 second.  this is\n> totally broken... ideally the value should be configurable via AcceptFilter or\n> otherwise, but at a minimum it should be something like 30 seconds.\n\nI agree that it makes sense to keep this value configurable. But what do you\nthink is actually \"totally broken\" with the 1 second setting (provided the\nkernel would do the right thing)? Do you think too much clients, which have\na slow / bad connection to the httpd server will not get a connection because\nit is dropped by the kernel before they can sent data?\n\nQuestion to the BSD guys: Is it possible to set a timeout for the BSD accept\nfilters accf_data and accf_http how long they should wait for a request until\nthey drop the socket?", "id": 97498, "attachment_id": null, "creator": "rpluem@apache.org", "creation_time": "2006-12-31T04:53:32Z", "time": "2006-12-31T04:53:32Z", "is_private": false}, {"count": 4, "text": "http://lkml.org/lkml/2000/10/21/80 provides also an interesting discussion on\nthe Linux kernel behaviour.", "creator": "rpluem@apache.org", "attachment_id": null, "id": 97499, "time": "2006-12-31T04:59:30Z", "bug_id": 41270, "creation_time": "2006-12-31T04:59:30Z", "tags": [], "is_private": false}, {"count": 5, "text": "if there's any amount of packet loss (or geosynchronous orbit satellites\ninvolved), the 3-way handshake will never complete if the server gives up after\n1 second... i'm sure if you dig through the RFCs you'll find standards\nrequirements backing this up.\n\n-dean", "creator": "dean@arctic.org", "attachment_id": null, "id": 97500, "time": "2006-12-31T05:12:27Z", "bug_id": 41270, "creation_time": "2006-12-31T05:12:27Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "dean@arctic.org", "attachment_id": null, "text": "sorry, but i can't stand this being left as NEEDINFO when it should be obvious\nto anyone that a one second timeout for the 3rd packet in a 3-way handshake is\ninsane.", "id": 98740, "time": "2007-01-30T01:07:23Z", "bug_id": 41270, "creation_time": "2007-01-30T01:07:23Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 41270, "text": "btw, i've been running with a 30s setting for TCP_DEFER_ACCEPT for 13 months now\non a 40+ req/s website without any problems.  i really don't see the harm in\nchanging apache to have a sane setting for this value.", "id": 98741, "time": "2007-01-30T01:34:37Z", "creator": "dean@arctic.org", "creation_time": "2007-01-30T01:34:37Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "text": "Agreed, thanks for the patch and analysis; committed as\nhttp://svn.apache.org/viewvc?view=rev&rev=501364\n\nI've prodded some kernel guys, hopefully someone can clarify the semantics of\nthe option argument and follow up your netdev post.", "is_private": false, "id": 98744, "creator": "jorton@redhat.com", "time": "2007-01-30T02:22:55Z", "bug_id": 41270, "creation_time": "2007-01-30T02:22:55Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 41270, "attachment_id": null, "id": 98998, "time": "2007-02-05T17:07:02Z", "creator": "david@weekly.org", "creation_time": "2007-02-05T17:07:02Z", "is_private": false, "text": "The Linux tcp(7) man page indicates that the parameter is NOT the number of\nseconds the kernel waits but instead is the number of attempts the TCP stack\nshould make to complete the connection. This would indicate a value like \"3\" to\nbe much more sane than \"30\", which could invite abuse.\n\nQuote below:\n\nTCP_DEFER_ACCEPT\n\"Allows a listener to be awakened only when data arrives on the socket. Takes an\ninteger value (seconds), this can bound the maximum number of attempts TCP will\nmake to complete the connection. This option should not be used in code intended\nto be portable.\""}, {"count": 10, "tags": [], "bug_id": 41270, "text": "(In reply to comment #9)\n> The Linux tcp(7) man page indicates that the parameter is NOT the number of\n> seconds... \n\num:\n\n> Quote below:\n> \n> TCP_DEFER_ACCEPT\n> \"Allows a listener to be awakened only when data arrives on the socket. Takes an\n> integer value (seconds)\n                 ^^^^^^^", "id": 99003, "time": "2007-02-05T18:01:28Z", "creator": "dean@arctic.org", "creation_time": "2007-02-05T18:01:28Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 41270, "text": "Please kill me. Sorry.\n\n(In reply to comment #10)\n> (In reply to comment #9)\n> > The Linux tcp(7) man page indicates that the parameter is NOT the number of\n> > seconds... \n> \n> um:\n> \n> > Quote below:\n> > \n> > TCP_DEFER_ACCEPT\n> > \"Allows a listener to be awakened only when data arrives on the socket. Takes an\n> > integer value (seconds)\n>                  ^^^^^^^\n\n", "id": 99007, "time": "2007-02-06T01:27:16Z", "creator": "david@weekly.org", "creation_time": "2007-02-06T01:27:16Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "text": "(In reply to comment #3)\n> Question to the BSD guys: Is it possible to set a timeout for the BSD accept\n> filters accf_data and accf_http how long they should wait for a request until\n> they drop the socket?\n\nNo, there isn't a way to set the timeout on the FreeBSD accept filters.", "is_private": false, "id": 99549, "creator": "chip@force-elite.com", "time": "2007-02-18T23:09:48Z", "bug_id": 41270, "creation_time": "2007-02-18T23:09:48Z", "attachment_id": null}, {"count": 13, "text": "CC myself on FreeBSD related bugs", "bug_id": 41270, "attachment_id": null, "id": 124166, "time": "2009-01-18T16:19:17Z", "creator": "pgollucci@apache.org", "creation_time": "2009-01-18T16:19:17Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "creator": "harm.verhagen@gmail.com", "is_private": false, "count": 14, "id": 180202, "time": "2015-01-07T10:42:53Z", "bug_id": 41270, "creation_time": "2015-01-07T10:42:53Z", "text": "This exact problem causes havoc if you have many slow clients on slow networks (gprs).\n\nWe actually had this problem in production. (many simultanious clients  > 1000, on a single server)\nWe actually had a >80% unsuccessful connection attempts. This is a really hard problem to debug.\n\nI cannot believe Apache ships with TCP_DEFER_ACCEPT on 1 sec, or even enabled at all. I don't see the possible gain to have this feature enabled.\n\nThis should be default be turned off, it has no benefits only downsides.\nAcceptFilter http none\nAcceptFilter https none\n\n\nref: varnish had it enabled for a while but they disabled it too [1]\nref: ubuntu ticket [2]\nCan ubuntu change the default config to include:\n\n\n[1] https://github.com/Movile/varnish/commit/687bacb3152ebc8b00b8dd737ef1dedb12bd4ee2\n[2] https://bugs.launchpad.net/ubuntu/+source/apache2/+bug/134274?comments=all"}, {"count": 15, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "(In reply to harm from comment #14)\n> I cannot believe Apache ships with TCP_DEFER_ACCEPT on 1 sec, or even\n> enabled at all.\n\nThis isn't the case anymore, the new value is 30s since 2.2.28 (and has always been 30s in 2.4.x), still hardcoded though.\n\nBy the way, TCP_DEFER_ACCEPT=1 is not really a second since TCP_SYNCNT (defaulting to sysctl's tcp_synack_retries when the option is not set like in httpd) is always honored (the final client's 3Way handshake ACK being continuously dropped during defer-accept, there is no real SYN/ACK to send after the one already sent for the SYN, so I mean the time that would have been needed by the server to send that many ACKs).\n\nConsequently, one can also play with net.ipv4.tcp_synack_retries (or TCP_SYNCNT) to adjust the TCP_DEFER_ACCEPT timeout as needed (above 30s).\n\n> I don't see the possible gain to have this feature enabled.\n\nWell, the listener won't accept (spend resources for) spurious connections, which stay in kernel land.", "id": 180206, "attachment_id": null, "bug_id": 41270, "creation_time": "2015-01-07T12:39:59Z", "time": "2015-01-07T12:39:59Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 41270, "text": "Fiexed in 2.2.28 (r1608298).", "id": 180207, "time": "2015-01-07T12:40:31Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-01-07T12:40:31Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 41270, "text": "(In reply to Yann Ylavic from comment #15)\n\n> This isn't the case anymore, the new value is 30s since 2.2.28 (and has\n> always been 30s in 2.4.x), still hardcoded though.\n\nconfirmed, we had these problems in 2.2.22, sorry for bringing it up again.\n\n> Well, the listener won't accept (spend resources for) spurious connections,\n> which stay in kernel land.\n\nWell... thats whats advertised..yes.  It was somehow broken though (with a value of 1). resulting in connections not passed at all from kernel land.\nSo at least in 2.2.22 I doubt you'll _ever_ really see any benefits.\n\n(we concluded this after many many hours staring at wireshark logs, with telco partner)\n\nTo mee it sounds like a fishy optimization, without (measured) benefits. maybe this made sense when linux/bsd where competing pleasing random non relevant benchmarks (a decade ago)... but I doubt this is valid nowadays.", "id": 180208, "time": "2015-01-07T12:57:06Z", "creator": "harm.verhagen@gmail.com", "creation_time": "2015-01-07T12:57:06Z", "is_private": false, "attachment_id": null}]