[{"count": 0, "tags": [], "creator": "kenny.cowgill@asserta.com", "attachment_id": null, "text": "When I run a test using Jmeter, the commit charge increases as is expected. \nHowever, once the run has completed, the memory commit charge remains at the \nsame level (this is still true if you clear all results). This means that if \nyou then do another search, the memory available is drastically reduced and so \nyou end up getting an out of memory error.\n\nCan someone please help?\n\nThanks.", "id": 40623, "time": "2003-07-14T11:56:13Z", "bug_id": 21563, "creation_time": "2003-07-14T11:56:13Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 21563, "text": "The memory resource is being cleared once you close jmeter.", "id": 40624, "time": "2003-07-14T12:03:43Z", "creator": "kenny.cowgill@asserta.com", "creation_time": "2003-07-14T12:03:43Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 21563, "text": "I ran 100 threads and even used the View Results Tree visualizer.  I ran the\nmemory up to the limit, then stopped the test.  The memory reported in Windows\ntask manager didn't change.  Then I restarted the test.  Once the limit was\nreached, memory suddenly dropped by about 160MB while the test was running.   It\njust seems the GC doesn't clear things away until the memory is needed, or\nWindows doesn't refresh very cleanly.  \n\nI ran the test over and over again, and never got an out-of-memory error.  Show\nme your out-of-memory error.  How many threads, which visualizers were you\nusing, how much memory did you give the JVM?", "id": 40736, "time": "2003-07-15T15:03:27Z", "creator": "mstover1@apache.org", "creation_time": "2003-07-15T15:03:27Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 21563, "attachment_id": null, "text": "Mike: Don't trust the process memory usage as a measure of Java memory usage --\nthe interaction between Java GC and O.S.-level memory allocation is too\ncomplicated. Rather, use the -verbose:gc flag on the JVM to get info on what the\nGC is doing. The only 'repeatable' measurement is the memory in use after GC\n(the figure after the '->').\n\nKenny: can you please clarify what you mean by \"commit charge\"? (It's new term\nto me). Also what do you mean by \"do another search\"?", "id": 40748, "time": "2003-07-15T16:29:24Z", "creator": "jsalvata@atg.com", "creation_time": "2003-07-15T16:29:24Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 21563, "attachment_id": 7490, "id": 41323, "time": "2003-07-24T15:01:42Z", "creator": "kenny.cowgill@asserta.com", "creation_time": "2003-07-24T15:01:42Z", "is_private": false, "text": "Created attachment 7490\nShows jmeter out of memory error and windows task manager"}, {"count": 5, "tags": [], "creator": "kenny.cowgill@asserta.com", "attachment_id": null, "text": "Guys, I've attached a screen shot showing the error that has occurred in this \ncase. The test plan thread group that was used consists of a number of http get \nrequests and some listeners (Assertion Results, Graph Results, View Rsults in \nTable, View Results Tree, Spline Visualizer). The thread group was expected to \nrun 20 threads for 50 loops.\nAs you can see from the Windows Task Manager the MEM Usage has levelled off \nwhen the error occurred, normally it would increase from about 120k up to about \nthe point of the Peak Commit Charge and then frop by about 1/3 before \nincreasing again.", "id": 41324, "time": "2003-07-24T15:02:40Z", "bug_id": 21563, "creation_time": "2003-07-24T15:02:40Z", "is_private": false}, {"count": 6, "tags": [], "creator": "kenny.cowgill@asserta.com", "attachment_id": null, "text": "Jordi, I hope the attachment clears up what I meant by Commit Charge. Also, I \nmeant to say 'do another run' instead of 'do another search'. Sorry for the \nconfusion.", "id": 41325, "time": "2003-07-24T15:05:51Z", "bug_id": 21563, "creation_time": "2003-07-24T15:05:51Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 21563, "attachment_id": null, "id": 42028, "time": "2003-08-03T17:38:47Z", "creator": "mstover1@apache.org", "creation_time": "2003-08-03T17:38:47Z", "is_private": false, "text": "I've really had no trouble running very large and long tests, so long as I don't\nuse visualizers that store the entire server response (ie view results tree).  I\nrun tests over and over again with no problem.  \n\nOne problem I did run into was loading large .jtl files (say, 40MB files).  The\nproblem being that the whole thing is loaded as a DOM before any processing -\nit'd be nicer to implement that as a \"load sample, process sample, throw sample\nout, repeat\" - that way, it wouldn't matter how big the file is.  But, that will\nbe an enhancement for 2.0"}]