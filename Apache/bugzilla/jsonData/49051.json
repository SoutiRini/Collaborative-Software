[{"count": 0, "tags": [], "bug_id": 49051, "attachment_id": null, "text": "[Configuration]\nCluster configuration.\nTcpFailureDetector is used. \nSynchronous replication\n\nChannelException is thrown when the destination node downs in the session replication.\nChannelException is caught by TcpFailureDetector, \nand verifies the member in TcpFailureDetector#memberDisappeared.\n\nIn TcpFailureDetector#memberAlive method, \nthe member who failed in replication is checked to see if the member really is down.\nBecause member already is gone, TcpFailureDetector#memberAlive do the timeout in 1 sec(default 1 sec).\nThen, member is removed from membership by membership#removeMember, \nand super.memberDisappeared(member) will be called. \n\nTcpFailureDetector#memberDisappeared is as follows. \n===\npublic void memberDisappeared(Member member) {\n...skip\n    synchronized (membership) {\n        //check to see if the member really is gone\n        //if the payload is not a shutdown message\n        if (shutdown || !memberAlive(member)) {\n            //not correct, we need to maintain the map\n            membership.removeMember( (MemberImpl) member);\n            removeSuspects.remove(member);\n            notify = true;\n        } else {\n            //add the member as suspect\n            removeSuspects.put(member, new Long(System.currentTimeMillis()));\n        }\n    }\n...skip\n}\n===\nAll threads to wait for the acquisition of the lock of membership call the memberAlive method every time. \nAnd, the timeout will be done every time in 1 sec. \nAs result,\nin high-concurrent, decrease in a cruel response may happen.\n\nFor instance, \nwhen 100 threads waiting for the lock of membership, \nthe thread to have acquired the lock at the end can not return the response for 100 sec. \n\nIf member has not already existed in membership, TcpFailureDetector#memberAlive method need not be called. \n\nI made a patch.\n\nBest regards.", "id": 135896, "time": "2010-04-06T09:12:14Z", "creator": "kfujino@apache.org", "creation_time": "2010-04-06T09:12:14Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 49051, "is_private": false, "text": "Created attachment 25233\nTcpFailureDetector's patch\n\nI made a patch.", "id": 135897, "time": "2010-04-06T09:13:50Z", "creator": "kfujino@apache.org", "creation_time": "2010-04-06T09:13:50Z", "attachment_id": 25233}, {"count": 2, "tags": [], "bug_id": 49051, "text": "Fixed in trunk and proposed for 6.0.x.", "id": 135898, "time": "2010-04-06T09:39:29Z", "creator": "kfujino@apache.org", "creation_time": "2010-04-06T09:39:29Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 49051, "attachment_id": null, "text": "This fix applied to 6.0, will be in 6.0.27 onwards.", "id": 135982, "time": "2010-04-09T08:47:12Z", "creator": "kfujino@apache.org", "creation_time": "2010-04-09T08:47:12Z", "is_private": false}]