[{"count": 0, "tags": [], "bug_id": 24055, "attachment_id": null, "is_private": false, "id": 46122, "time": "2003-10-23T12:51:08Z", "creator": "oleg@khimich.com", "creation_time": "2003-10-23T12:51:08Z", "text": "httpd/contrib/patches/1.3/apache_1.3.22-ReadRequestTimeout-directive.patch now \nnot applyed to current version. Here is the patch that works with most recent \nversion:\n\n\n--- src/include/httpd.h\tTue Oct  9 04:56:05 2001\n+++ src/include/httpd.h\tWed Oct 31 20:15:00 2001\n@@ -958,6 +958,7 @@\n \n     server_addr_rec *addrs;\n     int timeout;\t\t/* Timeout, in seconds, before we give up */\n+    int read_request_timeout;\t\t/* Seconds, we'll wait for an initial \nrequest */\n     int keep_alive_timeout;\t/* Seconds we'll wait for another request */\n     int keep_alive_max;\t\t/* Maximum requests per connection */\n     int keep_alive;\t\t/* Use persistent connections? */\n--- src/main/http_config.c\tFri Jun 22 13:43:54 2001\n+++ src/main/http_config.c\tWed Oct 31 20:13:03 2001\n@@ -1417,6 +1417,7 @@\n     s->srm_confname = NULL;\n     s->access_confname = NULL;\n     s->timeout = 0;\n+    s->read_request_timeout = 0;\n     s->keep_alive_timeout = 0;\n     s->keep_alive = -1;\n     s->keep_alive_max = -1;\n@@ -1469,6 +1470,9 @@\n \n \tif (virt->timeout == 0)\n \t    virt->timeout = main_server->timeout;\n+  \n+\tif (virt->read_request_timeout == 0)\n+\t    virt->read_request_timeout = main_server->read_request_timeout;\n \n \tif (virt->keep_alive_timeout == 0)\n \t    virt->keep_alive_timeout = main_server->keep_alive_timeout;\n@@ -1537,6 +1541,7 @@\n     s->limit_req_fieldsize = DEFAULT_LIMIT_REQUEST_FIELDSIZE;\n     s->limit_req_fields = DEFAULT_LIMIT_REQUEST_FIELDS;\n     s->timeout = DEFAULT_TIMEOUT;\n+    s->read_request_timeout = DEFAULT_TIMEOUT;\n     s->keep_alive_timeout = DEFAULT_KEEPALIVE_TIMEOUT;\n     s->keep_alive_max = DEFAULT_KEEPALIVE;\n     s->keep_alive = 1;\n--- src/main/http_main.c\tSat Oct  6 03:21:11 2001\n+++ src/main/http_main.c\tWed Oct 31 20:11:18 2001\n@@ -1612,7 +1612,7 @@\n     if (r->connection->keptalive)\n \tto = r->server->keep_alive_timeout;\n     else\n-\tto = r->server->timeout;\n+\tto = r->server->read_request_timeout;\n     ap_set_callback_and_alarm(timeout, to);\n }\n\n--- src/main/http_core.c\tFri Aug  1 13:32:06 2003\n+++ src/main/http_core.c\tThu Oct 23 14:49:15 2003\n@@ -2195,6 +2195,17 @@\n     return NULL;\n }\n \n+static const char *set_read_request_timeout(cmd_parms *cmd, void *dummy, char \n*arg)\n+{\n+    const char *err = ap_check_cmd_context(cmd, \nNOT_IN_DIR_LOC_FILE|NOT_IN_LIMIT);\n+    if (err != NULL) {\n+        return err;\n+    }\n+\n+    cmd->server->read_request_timeout = atoi(arg);\n+    return NULL;\n+}\n+\n static const char *set_keep_alive_timeout(cmd_parms *cmd, void *dummy,\n \t\t\t\t\t  char *arg)\n {\n@@ -3633,6 +3644,8 @@\n     \"'On': enable or default='Off': disable the EBCDIC Debugging MIME Header\" }\n,\n #endif\n #endif /* CHARSET_EBCDIC */\n+\n+{ \"ReadRequestTimeout\", set_read_request_timeout, NULL, RSRC_CONF, TAKE1, \n\"Initial request timeout duration (sec)\" },\n \n { \"FileETag\", set_etag_bits, NULL, OR_FILEINFO, RAW_ARGS,\n   \"Specify components used to construct a file's ETag\"},"}, {"count": 1, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "text": "I'm going through the bug db to make sure patches are findable.  Please see \nhttp://httpd.apache.org/dev/patches.html\n", "id": 47845, "time": "2003-11-21T18:23:40Z", "bug_id": 24055, "creation_time": "2003-11-21T18:23:40Z", "is_private": false}]