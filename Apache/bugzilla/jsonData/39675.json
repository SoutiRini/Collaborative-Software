[{"count": 0, "tags": [], "text": "The synchronizing timer create an infinite loop (or perhaps a deadlock) or\nsomething in the same kind.\n\nHere is how my sample test works (see later) : \n\n1. Send an https request (it fail with http too)\n2. Synchronize the X users\n3. if ${counter} == 1 (the first user) then\n  do something (send an https request)\n4. Synchronize the X users (aka wait the first user)\n5. Send another https request\n\nHere is the result :\n\n1\t[log=9] / -> /glow/jsp/loginAdminMenu.jsp\n2\t[log=5] / -> /glow/jsp/loginAdminMenu.jsp\n3\t[log=6] / -> /glow/jsp/loginAdminMenu.jsp\n4\t[log=3] / -> /glow/jsp/loginAdminMenu.jsp\n5\t[log=4] / -> /glow/jsp/loginAdminMenu.jsp\n6\t[log=1] / -> /glow/jsp/loginAdminMenu.jsp\n7\t[log=8] / -> /glow/jsp/loginAdminMenu.jsp\n8\t[log=10] / -> /glow/jsp/loginAdminMenu.jsp\n9\t[log=7] / -> /glow/jsp/loginAdminMenu.jsp\n10\t[log=2] / -> /glow/jsp/loginAdminMenu.jsp\n... first sync timer ...\n11\t[log=9] /glow/servlet/GlowServlet?login=A\n12\t[log=4] /glow/servlet/GlowServlet?login=B\n13\t[log=10] /glow/servlet/GlowServlet?login=C\n14\t[log=5] /glow/servlet/GlowServlet?login=D\n15\t[log=3] /glow/servlet/GlowServlet?login=E\n16\t[log=8] /glow/servlet/GlowServlet?login=F\n17\t[log=6] /glow/servlet/GlowServlet?login=G\n18\t[log=7] /glow/servlet/GlowServlet?login=H\n19\t[log=2] /glow/servlet/GlowServlet?login=I\n... <- all except user 1 passed it ...\n\nIf both step 2 & 4 are enabled, it locks and the result is above\nIf step 2 is disabled, it locks user 1 in step 4, but the result is the same\nIf step 4 is disabled, it locks user 1 in step 2, same result", "is_private": false, "bug_id": 39675, "id": 89554, "time": "2006-05-29T15:26:53Z", "creator": "glhez@glowria.fr", "creation_time": "2006-05-29T15:26:53Z", "attachment_id": null}, {"count": 1, "attachment_id": 18363, "creator": "glhez@glowria.fr", "is_private": false, "id": 89555, "time": "2006-05-29T15:27:27Z", "bug_id": 39675, "creation_time": "2006-05-29T15:27:27Z", "tags": [], "text": "Created attachment 18363\nThis show an example of the bug"}, {"count": 2, "tags": [], "bug_id": 39675, "text": "After doing some research, it looks that only the first thread run the\nsynchronizing timer. There might have some issue with the IfController since\nit's used. \n\nNote also that due to failure (error 404, 500, etc), the threads are not\nsynchronized (eg: if I move the If child in it parent container, between the two\nsynch timer, having a 404 error there will not even try to synchronize. \n\nThe last step is done before the step 3 (which was in If controller) before has\nended for each thread. Don't know if it's normal (I assume that there some locks\nbehind)\n\nif will try with the last nightly build, to see if the bug is resolved (since\nthe IfController is new...)\n\n", "id": 89561, "time": "2006-05-29T15:52:56Z", "creator": "glhez@glowria.fr", "creation_time": "2006-05-29T15:52:56Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 39675, "text": "After testing with the nightly 2006-05-26, the bug is still there. \n\nThe main problem is the If Controller.\n\n", "id": 89564, "time": "2006-05-29T16:28:54Z", "creator": "glhez@glowria.fr", "creation_time": "2006-05-29T16:28:54Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 39675, "attachment_id": null, "text": "I tried to work around this bug (since I need it) using a function that return\nTRUE one time, and false else for the first user (using ThreadLocale variable)\nand a While Controller : that's work a little better, but the first thread is\nblocked (eg: the test does not stop)\n\n1. If step 2 & 4 are both disabled, then it work (and curiously in the good\norder, but I don't \n2. if only step 2 is enabled : that blocks. (my LoopController does not do an\ninfinite loop, else I would have the inner sampler as well). At that point,\nstopping the test work (in my test)\n3. if only step 4 is enabled, test never stop, and stopping thread take a long time.\n\n\n\n", "id": 89575, "time": "2006-05-30T09:28:35Z", "creator": "glhez@glowria.fr", "creation_time": "2006-05-30T09:28:35Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 39675, "attachment_id": null, "is_private": false, "id": 89589, "time": "2006-05-30T18:00:52Z", "creator": "sebb@apache.org", "creation_time": "2006-05-30T18:00:52Z", "text": "The Synchronising Timer will apply to ALL samplers in its scope.\n\nIn the sample plan (*), the timer will apply to the sampler that is run by the \nIf Controller. As only one thread will run the sampler, I'm not surprised that \nthe test behaves oddly.\n\nI don't consider this to be a bug.\n\n(*) next time, please provide the *simplest* test plan that shows the problem."}]