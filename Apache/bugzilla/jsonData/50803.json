[{"count": 0, "tags": [], "creator": "varga.patrik@gmail.com", "attachment_id": null, "text": "The javadoc of ServletException.getRootCause() at http://download.oracle.com/javaee/6/api/javax/servlet/ServletException.html#getRootCause%28%29 states that this method should return the exception that caused this servlet exception.\n\nHowever, when using a JAAS login module, the ServletException thrown after an unsuccessful HttpServletRequest.login(String,String) call does not contain its (root) cause, and its getCause() and getRootCause() methods always return null. This makes it impossible to get a handle to the original LoginException thrown by the login module and to present the user the specific error message contained in the LoginException.", "id": 144385, "time": "2011-02-17T13:53:32Z", "bug_id": 50803, "creation_time": "2011-02-17T13:53:32Z", "is_private": false}, {"count": 1, "text": "What is stack trace of that exception? Where is it thrown from?", "bug_id": 50803, "is_private": false, "id": 144386, "time": "2011-02-17T14:55:09Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-02-17T14:55:09Z", "tags": [], "attachment_id": null}, {"count": 2, "text": "Created attachment 26676\nstack trace and output\n\nSee attached stack trace and output when called from a JSF backing bean test method pvarga.test.LoginBacking.login() which basically looks like this:\n\npublic String login() {\n\tHttpServletRequest request = (HttpServletRequest) FacesContext.getCurrentInstance().getExternalContext().getRequest();\n    try {\n    \trequest.login(this.username, this.password);\n    }\n    catch (ServletException se) {\n        System.out.println(\"getCause: \" + se.getCause());\n        System.out.println(\"getRootCause: \" + se.getRootCause());\n        System.out.println(\"getMessage: \" + se.getMessage());\n        System.out.println(\"getLocalizedMessage: \" + se.getLocalizedMessage());\n        System.out.println(\"stack trace:\");\n        se.printStackTrace();\n    }\n    return null;\n}\n\n\nAs you can see the LoginException is logged in JAASRealm.authenticate() but not propagated into the ServletException.", "bug_id": 50803, "is_private": false, "id": 144390, "time": "2011-02-17T15:39:03Z", "creator": "varga.patrik@gmail.com", "creation_time": "2011-02-17T15:39:03Z", "tags": [], "attachment_id": 26676}, {"count": 3, "tags": [], "bug_id": 50803, "text": "stack trace:\njavax.servlet.ServletException: Login failed\n\tat org.apache.catalina.authenticator.AuthenticatorBase.doLogin(AuthenticatorBase.java:796)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.login(AuthenticatorBase.java:785)\n\tat org.apache.catalina.connector.Request.login(Request.java:2508)\n\tat org.apache.catalina.connector.RequestFacade.login(RequestFacade.java:1066)\n\n\nLooking at AuthenticatorBase.java:796, the authenticator calls\ncontext.getRealm().authenticate(username, password)\nand that method reports unsuccessful authentication by returning null and not by throwing some exception.\n\nThis cannot be solved unless interface of Realm is changed, e.g. by allowing either null or an exception to be returned.", "id": 144391, "time": "2011-02-17T16:07:16Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-02-17T16:07:16Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 144392, "time": "2011-02-17T17:09:25Z", "bug_id": 50803, "creation_time": "2011-02-17T17:09:25Z", "text": "The Realm interface will not be changed for security reasons.\n\nThe reason for a login failure should not be propagated to the user. If it were, that would be a security vulnerability of a similar nature to CVE-2009-0580."}, {"count": 5, "text": "*** Bug 44598 has been marked as a duplicate of this bug. ***", "bug_id": 50803, "is_private": false, "id": 144415, "time": "2011-02-18T12:08:38Z", "creator": "markt@apache.org", "creation_time": "2011-02-18T12:08:38Z", "tags": [], "attachment_id": null}]