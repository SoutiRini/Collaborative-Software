[{"count": 0, "tags": [], "bug_id": 44393, "text": "In fo.layoutmgr.PageBreaker references are made to Constants.EN_ALL or\nConstants.EN_NONE whereas the only authorized values for break classes are\nEN_AUTO, EN_COLUMN, EN_PAGE, EN_EVEN_PAGE and EN_ODD_PAGE.\nAs a consequence the region-body_column-count_bug37468 testcase no longer passes\ndue to the latest changes in the table code.", "id": 113636, "time": "2008-02-11T10:21:54Z", "creator": "vhennebert@gmail.com", "creation_time": "2008-02-11T10:21:54Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "jeremias@apache.org", "is_private": false, "id": 113648, "creation_time": "2008-02-12T00:30:12Z", "time": "2008-02-12T00:30:12Z", "bug_id": 44393, "text": "This is not a question if these values are \"authorized\". Of course, EN_ALL and\nEN_NONE are illegal on the break-before/after properties but if we choose to use\nthem internally, it's our choice. The comments where these are used should make\nclear why they are there. Span changes are break conditions for FOP and need to\nbe handled accordingly. Your change caused something else which doesn't have\nanything to do with EN_ALL/EN_NONE. You switched from a (perhaps somewhat\nsuboptimal) -1 value to generating EN_AUTO for normal breaks in table layout\nwhich caused the PageBreaker to react wrongly. I've added the necessary check to\nhandle the new case, too.\n\nhttp://svn.apache.org/viewvc?rev=620723&view=rev", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 44393, "attachment_id": null, "text": "Still, I understand your point but there is an inconsistent use of constants\nIMO. There seems to be a confusion between the break class (auto, column,\npage...) and the next part where the content should start (any, none (??),\ncolumn, page...).\n\nThe handleBreakTrait method expects a break class for its breakVal parameter\n(according to its javadoc) and actually treats it as a \"nextSequenceStartsOn\"\nvalue. In AbstractBreaker.getNextBlockList en_auto doesn't appear in the switch\nblock for the break class, so there is likely to be a problem in certain situations.\n\nRe-opening the bug as a remainder that this area may need to be revised, and I\ndon't have time to look into it now.", "id": 113656, "time": "2008-02-12T02:22:40Z", "creator": "vhennebert@gmail.com", "creation_time": "2008-02-12T02:22:40Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 44393, "attachment_id": null, "text": "When a span change happens, the code will never run through\nAbstractBreaker.getNextBlockList()'s forced break check. The switch statement\nwill only ever get enum constants from the break properties. FlowLM handles span\nchanges much earlier.\n\nhttp://svn.apache.org/viewvc?rev=620750&view=rev\n\nI still don't see a problem.", "id": 113657, "time": "2008-02-12T02:49:51Z", "creator": "jeremias@apache.org", "creation_time": "2008-02-12T02:49:51Z", "is_private": false}, {"count": 4, "tags": [], "creator": "gadams@apache.org", "text": "due to lack of further action", "id": 157026, "time": "2012-04-01T19:27:17Z", "bug_id": 44393, "creation_time": "2012-04-01T19:27:17Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "gadams@apache.org", "text": "batch transition resolved+wontfix to closed+wontfix", "id": 158546, "time": "2012-04-30T00:14:38Z", "bug_id": 44393, "creation_time": "2012-04-30T00:14:38Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 44393, "is_private": false, "id": 158591, "time": "2012-04-30T00:17:06Z", "creator": "gadams@apache.org", "creation_time": "2012-04-30T00:17:06Z", "tags": [], "text": "batch transition resolved+wontfix to closed+wontfix; if you believe this remains a bug and can demonstrate it with appropriate input FO file and output PDF file (as applicable), then you may reopen"}]