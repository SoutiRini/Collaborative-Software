[{"count": 0, "tags": [], "text": "See ExecuteOn.runExec() when (fileNames.size() == 0 && skipEmpty) :\n\nIf you use skipempty=\"true\" with a nested <mapper>, so that <apply> uses a \nSourceFileScanner to determine included files, the INFO message is misleading.  \nIt should be simple to check getFiles()' results vs. the DirectoryScanner's \nincluded files to see if files were excluded or just didn't exist, and make the \nmessage more instructive.  Or, change the severity of the message to VERBOSE or \nDEBUG...", "attachment_id": null, "bug_id": 23734, "id": 45386, "time": "2003-10-10T17:45:04Z", "creator": "mbenson@apache.org", "creation_time": "2003-10-10T17:45:04Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 23734, "attachment_id": null, "id": 45666, "time": "2003-10-14T18:39:55Z", "creator": "mbenson@apache.org", "creation_time": "2003-10-14T18:39:55Z", "is_private": false, "text": "It occurs to me that it might also be helpful to use better identification of \nthe offending fileset in the error message.  Maybe a little private static \nmethod in ExecuteOn, or a public method in AbstractFileSet... like \ngetTerseString() that would try to identify a fileset by its refid, or failing \nthat, some representation of its basedir and patterns or selectors, without \ndisplaying every matching file... while I'm wishing for enhancements."}, {"count": 2, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "is_private": false, "id": 45848, "time": "2003-10-17T16:08:34Z", "bug_id": 23734, "creation_time": "2003-10-17T16:08:34Z", "text": "For some reason I've never noticed the taskname attribute, which has proven a \nhelpful workaround as far as providing some context for these otherwise \nmisleading error messages.  I still think these ideas, especially that in the \nprevious comment, have merit, however."}]