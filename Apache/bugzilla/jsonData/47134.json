[{"count": 0, "tags": [], "bug_id": 47134, "is_private": false, "text": "Created attachment 23569\nPatch for sending first configured client cert as last resolve\n\nCurrently the selection of the correct client certificate when using the SSLProxy functionality is fully dependent on the CA list returned by the server. When no exact match is found between client cert issuer and one of the CA's in the list from the server the connection fails.\n\nIn my environment we communicate with a probably misconfigured server that has not got the exact same issuer CA in it's list as it used in the provided client certificate. This causes the connection to fail because no correct client cert can be found. The problem is that the provider probably assumes that the complete CA chain is tested against all returned CA's from the server since the client certificate's root cert is indeed in the list, but the current code only seems to check against the issuer as found in the client cert and not the entire CA chain.\n\nTo solve the problem the attached patch was done against 2.2.11 to allow the certificate selection routine to return the first configured certificate in the list if no exact match can be found. \n\nI realise that this is probably bugfixing at the wrong end, but if so, questions must be made if the server was configured incorrectly, or if the way mod_ssl evaluates the candidate certificates is the correct way.\n\nIn both cases I see no harm in returning the first client cert in the list as a last resolve since existing functionality is not changed, but some might disagree.", "id": 126667, "time": "2009-05-01T06:46:53Z", "creator": "apache@shoenix.nl", "creation_time": "2009-05-01T06:46:53Z", "attachment_id": 23569}, {"count": 1, "tags": [], "creator": "apache@shoenix.nl", "attachment_id": 23570, "text": "Created attachment 23570\nPatch for sending first configured client cert as last resolve.\n\nUpdated the patch to conform to patch submission guidelines.", "id": 126668, "time": "2009-05-01T07:24:42Z", "bug_id": 47134, "creation_time": "2009-05-01T07:24:42Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 47134, "text": "Created attachment 26959\nModified code for Apache 2.2.17\n\nLine number of the function ssl_callback_proxy_cert() differs from Martijn Schoemakers 2.2.11 version.", "id": 146118, "time": "2011-05-04T15:18:42Z", "creator": "ondemannen@gmail.com", "creation_time": "2011-05-04T15:18:42Z", "is_private": false, "attachment_id": 26959}, {"count": 3, "tags": [], "bug_id": 47134, "attachment_id": null, "text": "This fix has been verified OK on modified Apache 2.2.17 installation.\nI've uploaded the modified ssl_engine_kernel.c code. Changes from existing version is on lines 1709-1713.\nGreat work, Martijn :)", "id": 146121, "time": "2011-05-04T15:21:59Z", "creator": "ondemannen@gmail.com", "creation_time": "2011-05-04T15:21:59Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 47134, "attachment_id": 26981, "text": "Created attachment 26981\nApache 2.2.17 w/mod_ssl patch\n\nHere's the unified diff file for patching ssl_engine_kernel.c (as posted by Martijn Schoemaker).\nThis resolved a problem related to the use of SSLProxy with a client certificate.\n\nThe configuration used mod_proxy as a reverse proxy to a HTTPS server with a certificate signed by CA.\nThe client certificate (SSLProxyMachineCertificateFile) was signed by the aforementioned CA and the config was pointing to this CA (SSLProxyCACertificateFile).\nA standard Apache 2.2.17 installation did not find the client certificate and therefore failed.\n\nHere's an excerpt from the debug log while it was failing:\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1874): OpenSSL: Loop: SSLv3 read server hello A\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1321): [client 127.0.0.10] Certificate Verification: depth: 1, subject: /C=NO/ST=Oslo/L=Oslo/O=Dream County/OU=Test/CN=Example CA/emailAddress=xx@xx.xxx, issuer: /C=NO/ST=Oslo/L=Oslo/O=Dream County/OU=Test/CN=Example CA/emailAddress=xx@xx.xxx\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1321): [client 127.0.0.10] Certificate Verification: depth: 0, subject: /C=NO/ST=Oslo/L=Oslo/O=Dream County/OU=Test/CN=client.example.com, issuer: /C=NO/ST=Oslo/L=Oslo/O=Dream County/OU=Test/CN=Example CA/emailAddress=xx@xx.xxx\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1874): OpenSSL: Loop: SSLv3 read server certificate A\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1874): OpenSSL: Loop: SSLv3 read server key exchange A\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1874): OpenSSL: Loop: SSLv3 read server certificate request A\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1874): OpenSSL: Loop: SSLv3 read server done A\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1660): Proxy client certificate callback: (www.example.com:443) entered\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1705): Proxy client certificate callback: (www.example.com:443) no client certificate found!?\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1874): OpenSSL: Loop: SSLv3 write client certificate A\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1874): OpenSSL: Loop: SSLv3 write client key exchange A\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1874): OpenSSL: Loop: SSLv3 write change cipher spec A\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1874): OpenSSL: Loop: SSLv3 write finished A\n[Wed May 04 15:21:47 2011] [debug] ssl_engine_kernel.c(1874): OpenSSL: Loop: SSLv3 flush data\n\n\nAfter patching the client certificate was sent correctly.\n\n[Wed May 04 16:49:06 2011] [debug] ssl_engine_kernel.c(1879): OpenSSL: Loop: SSLv3 read server hello A\n[Wed May 04 16:49:06 2011] [debug] ssl_engine_kernel.c(1321): [client 127.0.0.10] Certificate Verification: depth: 1, subject: /C=NO/ST=Oslo/L=Oslo/O=Dream County/OU=Test/CN=Example CA/emailAddress=xx@xx.xxx, issuer: /C=NO/ST=Oslo/L=Oslo/O=Dream County/OU=Test/CN=Example CA/emailAddress=xx@xx.xxx\n[Wed May 04 16:49:06 2011] [debug] ssl_engine_kernel.c(1321): [client 127.0.0.10] Certificate Verification: depth: 0, subject: /C=NO/ST=Oslo/L=Oslo/O=Dream County/OU=Test/CN=client.example.com, issuer: /C=NO/ST=Oslo/L=Oslo/O=Dream County/OU=Test/CN=Example CA/emailAddress=xx@xx.xxx\n[Wed May 04 16:49:06 2011] [debug] ssl_engine_kernel.c(1879): OpenSSL: Loop: SSLv3 read server certificate A\n[Wed May 04 16:49:06 2011] [debug] ssl_engine_kernel.c(1879): OpenSSL: Loop: SSLv3 read server key exchange A\n[Wed May 04 16:49:06 2011] [debug] ssl_engine_kernel.c(1879): OpenSSL: Loop: SSLv3 read server certificate request A\n[Wed May 04 16:49:06 2011] [debug] ssl_engine_kernel.c(1879): OpenSSL: Loop: SSLv3 read server done A\n[Wed May 04 16:49:06 2011] [debug] ssl_engine_kernel.c(1660): Proxy client certificate callback: (www.example.com:443) entered\n[Wed May 04 16:49:06 2011] [debug] ssl_engine_kernel.c(1705): Proxy client certificate callback: (www.example.com:443) no client certificate found!?\n[Wed May 04 16:49:06 2011] [debug] ssl_engine_kernel.c(1633): Proxy client certificate callback: (www.example.com:443) No acceptable cert found, sending first in list., sending /C=NO/ST=Oslo/L=Oslo/O=Dream County/OU=Test/CN=Example Client Cert/emailAddress=xx@xx.xxx\n[Wed May 04 16:49:06 2011] [debug] ssl_engine_kernel.c(1879): OpenSSL: Loop: SSLv3 write client certificate A\n[Wed May 04 16:49:06 2011] [debug] ssl_engine_kernel.c(1879): OpenSSL: Loop: SSLv3 write client key exchange A\n[Wed May 04 16:49:07 2011] [debug] ssl_engine_kernel.c(1879): OpenSSL: Loop: SSLv3 write certificate verify A\n[Wed May 04 16:49:07 2011] [debug] ssl_engine_kernel.c(1879): OpenSSL: Loop: SSLv3 write change cipher spec A\n[Wed May 04 16:49:07 2011] [debug] ssl_engine_kernel.c(1879): OpenSSL: Loop: SSLv3 write finished A\n[Wed May 04 16:49:07 2011] [debug] ssl_engine_kernel.c(1879): OpenSSL: Loop: SSLv3 flush data", "id": 146244, "time": "2011-05-10T10:19:29Z", "creator": "ondemannen@gmail.com", "creation_time": "2011-05-10T10:19:29Z", "is_private": false}, {"count": 5, "text": "Issue still persists in 2.2.25.  Attaching updated patch.", "bug_id": 47134, "is_private": false, "id": 170077, "time": "2013-09-12T23:40:39Z", "creator": "jbnance@tresgeek.net", "creation_time": "2013-09-12T23:40:39Z", "tags": [], "attachment_id": null}, {"count": 6, "tags": [], "creator": "jbnance@tresgeek.net", "attachment_id": 30826, "is_private": false, "id": 170078, "time": "2013-09-12T23:41:56Z", "bug_id": 47134, "creation_time": "2013-09-12T23:41:56Z", "text": "Created attachment 30826\nUpdated patch for 2.2.25"}, {"count": 7, "tags": [], "bug_id": 47134, "is_private": false, "text": "Hey there, guys.\n\nThis bug is still actual. Any update on this?\n\nServer version: Apache/2.4.10 (Debian)\nServer built:   Jan  3 2016 03:50:53\nServer's Module Magic Number: 20120211:37\nServer loaded:  APR 1.5.1, APR-UTIL 1.5.4\nCompiled using: APR 1.5.1, APR-UTIL 1.5.4\nArchitecture:   32-bit\nServer MPM:     prefork\n  threaded:     no\n    forked:     yes (variable process count)\nServer compiled with....\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=256\n -D HTTPD_ROOT=\"/etc/apache2\"\n -D SUEXEC_BIN=\"/usr/lib/apache2/suexec\"\n -D DEFAULT_PIDLOG=\"/var/run/apache2.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"mime.types\"\n -D SERVER_CONFIG_FILE=\"apache2.conf\"", "id": 190813, "time": "2016-05-10T16:37:42Z", "creator": "dcharushnikov@gmail.com", "creation_time": "2016-05-10T16:37:42Z", "attachment_id": null}]