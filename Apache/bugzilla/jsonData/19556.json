[{"attachment_id": null, "tags": [], "bug_id": 19556, "text": " ", "count": 0, "id": 36543, "time": "2003-05-02T12:07:03Z", "creator": "gregor@apache.org", "creation_time": "2003-05-02T12:07:03Z", "is_private": false}, {"count": 1, "tags": [], "creator": "gregor@apache.org", "text": "it has been decided to make log4j the default logger used in lenya, but masked\nby abstractlogenabled. this means all code instances that call log4j directly\nneed to be changed as described in http://wiki.apache.org/cocoon/JavaLogging", "id": 69856, "time": "2005-01-20T04:55:40Z", "bug_id": 19556, "creation_time": "2005-01-20T04:55:40Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 19556, "is_private": false, "count": 2, "id": 70678, "time": "2005-02-09T01:46:29Z", "creator": "gregor@apache.org", "creation_time": "2005-02-09T01:46:29Z", "text": "Some observations:\n\n\n- The most convenient way to pass the logger to an object is\n\n  ContainerUtil.enableLogging(object, logger);\n\n  This method doesn't pass the logger unless the object is\n  LogEnabled, and it throws an exception if the logger is null.\n  I added this info to the Cocoon wiki.\n\n\n- In cases where there was no logger available, I passed a\n  ConsoleLogger to the object. This results in a lot of DEBUG\n  messages to the console. If anyone finds a better solution\n  (e.g., wrap the Log4j category with an Avalon logger), please\n  send a mail to lenya-dev.\n\n\n- You really have to take care of properly initializing all loggers.\n  Otherwise, you end up with NPEs when a log message is written.\n  I managed this using Eclipse's \"find references\" function on the\n  constructor. But I think we should find a standardized way.\n  In some cases (builders and factories), I pass the logger\n  in the constructor. No idea if this is a good practise.\n\n\n- In case someone didn't yet know: Implementing an object as an\n  Avalon service makes life much easier. Just extend AbstractLogEnabled\n  and forget the rest :)\n\n\n- You can't use static methods with logging, because the logger\n  is not static anymore. This is IMO a *very good thing*, because it\n  prevents us from using the questionable static method approach :)"}, {"attachment_id": null, "tags": [], "bug_id": 19556, "is_private": false, "count": 3, "id": 102108, "time": "2007-04-23T07:39:27Z", "creator": "andreas@apache.org", "creation_time": "2007-04-23T07:39:27Z", "text": "Now we don't have any log4j references anymore besides the legacy task module. I\nconsider this fixed."}]