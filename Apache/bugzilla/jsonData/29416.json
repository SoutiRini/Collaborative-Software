[{"count": 0, "tags": [], "creator": "roth@visualclick.de", "attachment_id": null, "id": 58821, "time": "2004-06-06T19:24:21Z", "bug_id": 29416, "creation_time": "2004-06-06T19:24:21Z", "is_private": false, "text": "The following ruleset does not parse:\n\n{ page: \"\"; }\n\nThe empty, quoted string seems not to be parsed properly. It works when the string contains at \nleast one character.\n\nMy local, uninformed quick fix to the problem is to change\n\n--code--\nprotected int string2() throws IOException {\n    nextChar();\n    start = position - 1;\n--code--\n\nto\n\n--code--\n  protected int string2() throws IOException {\n    start = position;\n--code--\n\nto not read one unchecked character from the input before it is checked against specials in \norg.apache.batik.css.parser.Scanner.string2() .\n\nPlease note that I only had a look at the code for about 30 minutes (to find that place) and applied \nthat change locally as a quick fix. I have neither tested it against test suites nor any other situation \nthan my example above.\n\nThe CSS2.1 grammar seems to allow completely empty strings due to the rule\n\nstring1         \\\"([\\t !#$%&(-~]|\\\\{nl}|\\'|{nonascii}|{escape})*\\\"\n\nA similar fix should probably be applied to string1().\n\nRegards, Christian"}, {"count": 1, "tags": [], "bug_id": 29416, "attachment_id": null, "text": "This was fixed in CVS on 6/24.", "id": 61871, "time": "2004-08-12T10:01:40Z", "creator": "deweese@apache.org", "creation_time": "2004-08-12T10:01:40Z", "is_private": false}]