[{"count": 0, "tags": [], "bug_id": 22705, "attachment_id": null, "text": "Contrary to the statement on the ant welcome page, there is a dependency on \nhaving JDK 1.4 or higher. The problem appears when I use the <description> tag \nto provide a project-wide description, and I also have several targets that use \nthe description attribute. I run \"ant -projecthelp\" and get a NoSuchMethodError:\n\n% ant -f customizations-build.xml -projecthelp\nBuildfile: customizations-build.xml\njava.lang.NoSuchMethodError\n        at org.apache.tools.ant.types.Description.concatDescriptions \n(Description.java:123)\n        at org.apache.tools.ant.types.Description.getDescription\n(Description.java:104)\n        at org.apache.tools.ant.Project.getDescription(Project.java:721)\n        at org.apache.tools.ant.Main.printDescription(Main.java:823)\n        at org.apache.tools.ant.Main.runBuild(Main.java:599)\n        at org.apache.tools.ant.Main.start(Main.java:198)\n        at org.apache.tools.ant.Main.main(Main.java:245)\n\nI'm using ant 1.6alpha, but if my diagnosis of the problem is correct, this \nproblem should show up with later versions of ant 1.5.x. In revision 1.9 of \nDescription.java, the following snippet of code showed up:\n\n    private static void concatDescriptions(Project project, Target t,\n                                           StringBuffer description)\n    {\n        if( t==null ) return;\n        Vector tasks= findElementInTarget(project, t, \"description\");\n        if( tasks==null ) return;\n        for( int i=0; i<tasks.size(); i++ ) {\n            Task task=(Task)tasks.elementAt(i);\n            if( ! ( task instanceof UnknownElement)) {\n                continue;\n            }\n            UnknownElement ue=((UnknownElement)task);\n            StringBuffer descComp=ue.getWrapper().getText();\n            if( descComp != null ) {\n*******************************************************\n                description.append( descComp );\n*******************************************************\n            }\n        }\n    }\n\nThe offending line is the one surrounded by *'s. The problem is that the \nStringBuffer method \"StringBuffer append(StringBuffer)\" wasn't added until JDK \n1.4. Previously, there were many other variants of append(), but not that \nparticular one.\n\nThis problem can easily be worked around by changing the line \nto \"description.append( new String(descComp) );\"", "id": 43256, "time": "2003-08-25T17:50:36Z", "creator": "eshienbrood@gmail.com", "creation_time": "2003-08-25T17:50:36Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 22705, "text": "But the method StringBuffer#append(Object) has been around for a long while, \nand AFAIK a StringBuffer still is an Object... Plus the VM isn't complaining \nabout that method being not found.\n\nI'm not denying your problem. Just your interpretation. --DD", "id": 43258, "time": "2003-08-25T18:29:01Z", "creator": "ddevienne@lgc.com", "creation_time": "2003-08-25T18:29:01Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "gus.heck@olin.edu", "is_private": false, "text": "What is the output of ant -version? and java -version on your system?", "id": 43266, "time": "2003-08-25T19:48:41Z", "bug_id": 22705, "creation_time": "2003-08-25T19:48:41Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 22705, "attachment_id": null, "text": "% ant -version\nApache Ant version 1.6alpha compiled on April 25 2003\n%\n% java version \"1.3.1_07\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.3.1_07-b02)\nJava HotSpot(TM) Client VM (build 1.3.1_07-b02, mixed mode)\n\nIn response to Dominique's comment, yes StringBuffer#append(Object) does exist, \nbut if ant was compiled under JDK 1.4, the compiler would have resolved the \ncall on line 123 to StringBuffer#append(StringBuffer). If the result is then \nrun against JDK 1.3.x, and the latter method cannot be located, I don't believe \nthat the runtime will fall back to using the more generic method (someone with \nmore detailed Java knowledge than mine may want to correct me here). I've run a \nsimple test case that seems to confirm this.\n\nI'm not sure why the name of the missing method is not being printed.", "id": 43272, "time": "2003-08-25T20:25:59Z", "creator": "eshienbrood@gmail.com", "creation_time": "2003-08-25T20:25:59Z", "is_private": false}, {"count": 4, "tags": [], "creator": "eshienbrood@gmail.com", "attachment_id": null, "id": 43273, "time": "2003-08-25T20:36:10Z", "bug_id": 22705, "creation_time": "2003-08-25T20:36:10Z", "is_private": false, "text": "BTW, I should add that I have tried the above scenario with JDK 1.4.1 and \n1.4.2, and it works fine."}, {"count": 5, "tags": [], "creator": "stevel@apache.org", "is_private": false, "text": "I've encountered this before; it is as Eric observed in his second comment -the\nappend(StringBuffer) method is new, and if your code compiles against the 1.4\nversion, it wont run against older versions.\n\nthe other fix is to cast the buffer to Object :-\n\ndescription.append( (Object)descComp );\n\nEric, note that release builds have historically been made in a very complex\nway, which involves downlevel java versions at the right time to compile java1.1\ncode, java1.4 only to build the 1.4 specific bits. Release versions of ant would\nnot have exhibited this problem, only nightly Gump builds. And we recommend you\nbuild your own in those situations, as the nightly builds often miss out on\nuseful optional stuff. Thank you for finding the bug, however, as it is one of\nthose sublties that could have caught us out.", "id": 43280, "time": "2003-08-25T22:51:53Z", "bug_id": 22705, "creation_time": "2003-08-25T22:51:53Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "ccorsi@progress.com", "attachment_id": null, "id": 43281, "time": "2003-08-25T22:57:35Z", "bug_id": 22705, "creation_time": "2003-08-25T22:57:35Z", "is_private": false, "text": "I have seen this problem before. The StringBuffer.append(StringBuffer) method was\nadded in jdk 1.4. If someone will build a distribution that tries to append a\nStringBuffer to a StringBuffer with jdk prior to 1.4. The build will succeed and\nit will run correctly. If you build it with jdk 1.4, it will use the new\nStringBuffer.append(StringBuffer) method and not the StringBuffer.append(Object)\nmethod. \n\nThat said, you are probably using an ant 1.6-alpha version that has been built\nusing jdk 1.4. You should then build the ant 1.6-alpha distribution with jdk 1.2\nor 1.3 and this problem will go away."}, {"count": 7, "tags": [], "creator": "eshienbrood@gmail.com", "attachment_id": null, "id": 43282, "time": "2003-08-25T23:04:43Z", "bug_id": 22705, "creation_time": "2003-08-25T23:04:43Z", "is_private": false, "text": "OK, now I understand why the problem didn't appear when I tried it out on ant \n1.5.3, even though it contains the code change to Description.java. I will \nfollow your suggestion and recompile 1.6alpha under jdk 1.3.x."}, {"count": 8, "tags": [], "bug_id": 22705, "attachment_id": null, "text": "fixed with nightly build 2003-08-27 - all released versions should work as\nthey've not been compiled with JDK 1.4.", "id": 43319, "time": "2003-08-26T08:37:18Z", "creator": "bodewig@apache.org", "creation_time": "2003-08-26T08:37:18Z", "is_private": false}]