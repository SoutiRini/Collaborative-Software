[{"count": 0, "tags": [], "bug_id": 45703, "text": "When I try to request with 20 threads on the same time, I use the Synchronizing Timer and loop the request.\n--If the request is slow, finished successfully.\n--Bug if the requuest is quick, all of the requests is stoped all along, but the threads still exist.", "id": 120166, "time": "2008-08-28T03:05:42Z", "creator": "zhujf@live.jp", "creation_time": "2008-08-28T03:05:42Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "iblavins@temenos.com", "text": "(In reply to comment #0)\n> When I try to request with 20 threads on the same time, I use the Synchronizing\n> Timer and loop the request.\n> --If the request is slow, finished successfully.\n> --Bug if the requuest is quick, all of the requests is stoped all along, but\n> the threads still exist.\n\nI concur there is a problem here. \n\nWith a very simple test plan (the skeleton of a test plan in which all \nusers initialise and then synchronize before proceeding):\n\nUDV threadCount = 5, iterationCount = 12\nThreadgroup (${iterationCount}, ${threadCount)}\nSynchronize (${threadCount}}\nJava sampler to write to log\n\nthe test gives unpredictable results - in different runs I've seen the test hang without doing any executions, do 25 executions, do 35 executions etc. If I remove the synchronisation controller I reliably get 60 executions as expected.\n\n\n\n\n\n\n", "id": 120572, "time": "2008-09-13T01:49:59Z", "bug_id": 45703, "creation_time": "2008-09-13T01:49:59Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 45703, "attachment_id": null, "is_private": false, "id": 121203, "time": "2008-10-05T04:24:20Z", "creator": "sebb@apache.org", "creation_time": "2008-10-05T04:24:20Z", "text": "I don't have any problems with the Synch Timer.\n\nWhat OS and JVM are you using?\nAre you experiencing the problem in GUI, non-GUI or client-server modes?"}, {"count": 3, "text": "The synchronizing timer has the following problems:\n\n-It checks whether JMeterContextService.getNumberOfThreads number of threads are waiting. If a ramp up period was chosen, getNumberOfThreads returns a lower number than the expected number of total threads. Better would be to use getTotalThreads()\n\n-TimerCounter is never reset to 0, meaning that later test runs never sync.\n\n-If multiple thread groups are used in a test, getNumberOfThreads returns the number of threads of all Thread Groups, the synchronizing timer is however local to one thread group and therefore does not reach the number of threads.", "bug_id": 45703, "is_private": false, "id": 140848, "time": "2010-10-20T06:05:28Z", "creator": "jens_0@hotmail.com", "creation_time": "2010-10-20T06:05:28Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 45703, "text": "I agree that the counter ought to be reset. \n\nI'm not so sure that waiting for total activeThreads is the correct behaviour. \n\nIf there is a single thread-group, this would prevent the timer from being used to wait for all the threads to start. I think it would be better to use the total number of threads in the thread group.", "id": 140849, "time": "2010-10-20T06:32:57Z", "creator": "sebb@apache.org", "creation_time": "2010-10-20T06:32:57Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "URL: http://svn.apache.org/viewvc?rev=1025799&view=rev\nLog:\nBug 45703 - Synchronizing Timer\n\nModified:\n   jakarta/jmeter/trunk/src/components/org/apache/jmeter/timers/SyncTimer.java\n   jakarta/jmeter/trunk/xdocs/changes.xml\n\nWill be in nightly builds from r1025799", "attachment_id": null, "id": 140877, "creator": "sebb@apache.org", "time": "2010-10-20T20:52:41Z", "bug_id": 45703, "creation_time": "2010-10-20T20:52:41Z", "is_private": false}]