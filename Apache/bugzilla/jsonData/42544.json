[{"count": 0, "tags": [], "bug_id": 42544, "text": "In 1.6.2 it used to be possible to invoke an ant script from an external java\nprogram (or shell command) where input values were passed through command line\nredirection with each value being terminated by a new line.\n\nIn 1.7.0 it appears this functionality has been broken since the\nDefaultInputHandler has been modified to use a BufferedReader inside the\nhandleInput method. The problem with this is that in the first input task, the\nbufferedreader will read up to the buffer size (8k), however the\nDefaultInputHandler will only consume the first line of this. When the second\ninput task comes along it will not find anything (i guess maybe if you had very\nlarge input you might find something).\n\nWe have a similar problem elsewhere in our code and we handled it by creating a\nsingle static BufferedReader around System.in that was shared. This means that\nline 1 can be read by one bit of code, line by the next and so on because they\nare using a single BufferedReader.\n\nIn 1.6.2 the old code was using DataInputStream.readLine which is deprecated and\nprobably why the new code uses BufferedReader.\n\nIn order to solve my particular problem, I have written an extension of\nBufferedReader which uses a single shared BufferReader around System.in. However\nthis is not a general purpose problem to the solution i think as the\nInputHandler should handle the contract of working with the passed in stream.\n\nOne possible solution might be to implement a custom LineReader that does not\nrely in BufferedReader.", "id": 103792, "time": "2007-05-29T17:13:46Z", "creator": "davidwbt@gmail.com", "creation_time": "2007-05-29T17:13:46Z", "is_private": false, "attachment_id": null}]