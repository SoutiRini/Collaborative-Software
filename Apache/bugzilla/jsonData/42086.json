[{"count": 0, "tags": [], "text": "Hi,\n\nWe are getting occasional httpd coredumps when doing performance/stress testing\nof our module (like 1 core per few hours of stress test). We are using apache\n2.2.2 with worker mpm. Based on the cores, it always crashes in apache code. It\nis obviously some memory corruption: SIGSEGV, SIGBUS (like 50% together -\nusually on something related to apr_buckets), and more often SIGILL (like 50%)\nwith always same backtrace as bellow.\n\n(dbx) where\ncurrent thread: t@1\n  [1] 0x6a2808(0x6a07c0, 0xfeebc008, 0x2f40c0, 0xfeebc008, 0x0, 0x19ce54), at\n0x6a2808\n  [2] apr_pool_destroy(0x19cce0, 0x0, 0x0, 0x0, 0x19cce0, 0x0), at 0xff0db8c8\n  [3] child_main(0xa, 0xf0ca8, 0xf88f4, 0xebe90, 0xf0ce4, 0xf8990), at 0xb13f0\n  [4] perform_idle_server_maintenance(0x109ca8, 0x0, 0xf0cb8, 0x0, 0xebe90,\n0xf8918), at 0xb1e48\n  [5] server_main_loop(0x0, 0xffffffff, 0x3, 0xfeac0050, 0xef968, 0xebe90), at\n0xb226c\n  [6] ap_mpm_run(0x11400, 0x0, 0xf8990, 0xda7d8, 0xebe90, 0xf8924), at 0xb25ec\n  [7] main(0xee8a0, 0x0, 0xef9dc, 0xef9ec, 0x100498, 0xebe90), at 0x2c3cc\n\nActually, we though (and still think) that it is be some bug in our module code,\nbut with some additional testing (using Parasoft Insure + apache-2.2.2 build\nwith debug info) we got assert crash (SIGABRT) in httpd with this report (same\nas core backtrace) \u2013 see bellow (got 3x same core during 3-day test with server\nperma under 100% load). \n\n...\n\"unknown\", line unknown: Insure trapped signal: 6\n  Stack trace where the error occurred:\n                   __sigprocmask()\n                   sigacthandler()\n                          _sigon()\n                      _thrp_kill()\n                           raise()\n                           abort()\n                           abort()  (interface)\n                   ap_log_assert()  log.c, 778\n                   ap_queue_push() \n/tmp/apache-2.2.2.rousalm.build/httpd-2.2.2/server/mpm/worker/fdqueue.c, 294\n                 listener_thread()  worker.c, 755\n                    dummy_worker()  threadproc/unix/thread.c, 138\n\"unknown\", line unknown: Insure trapped signal: 6\n...\n\nthe problem seems to be in:\n\napr_status_t ap_queue_push(fd_queue_t *queue, apr_socket_t *sd, apr_pool_t *p)\n{\n...\nAP_DEBUG_ASSERT(!ap_queue_full(queue));\n\n    elem = &queue->data[queue->nelts];\n    elem->sd = sd;\n    elem->p = p;\n    queue->nelts++;\n...\n}\n\nfrom core I can see that both 'queue->nelts' and 'queue->bounds' are equal to 10\n(see config bellow), so the queue is full, but apache tries to add new\nconnection to it (+ there is no nondebug error check except on mutex lock/unlock\nfailure), without the assert this can for sure cause memory corruption.\n\nOur httpd.conf worker config looks like this:\n...\n<IfModule mpm_worker_module>\n    StartServers          4\n    MaxClients            150\n    MinSpareThreads       40\n    MaxSpareThreads       80\n    ThreadsPerChild       10\n    MaxRequestsPerChild   10000\n</IfModule>\n...\n\nI had no time to check all the code related to worker_queue access, so it is\nstill quite possible that this \"bug\" is caused by some previous problem caused\nby our module. As there is only assert check I expect this (queue is full)\nshould not happen under normal circumstances. \n\nRegards,\nMichal", "attachment_id": null, "id": 101573, "creator": "mrousal@centrum.cz", "time": "2007-04-11T03:43:40Z", "bug_id": 42086, "creation_time": "2007-04-11T03:43:40Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 42086, "attachment_id": null, "text": "This looks like PR#44402 - closing as duplicate.\nIf the fix to that doesn't work, you can reopen.\n\n*** This bug has been marked as a duplicate of bug 44402 ***", "id": 114081, "time": "2008-02-27T15:27:49Z", "creator": "nick@webthing.com", "creation_time": "2008-02-27T15:27:49Z", "is_private": false}]