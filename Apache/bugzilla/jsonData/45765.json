[{"count": 0, "tags": [], "creator": "barak@peer39.com", "text": "I'm running Tomcat 6.0.16 on CentoOS 5, linked with native library, with -security flag. I deployed a Servelt, which on invocation executes an RMI call to a remote RMI server. Tomcat configured with max heap size of 2G\n\nAfter short time of running under heavy load, the memory consumption reported by top is close to 2G. jmap output is: \n\nAttaching to process ID 20248, please wait...\n\nDebugger attached successfully.\n\nServer compiler detected.\n\nJVM version is 1.6.0-b105\n\nusing thread-local object allocation.\n\nParallel GC with 4 thread(s)\n\n \n\nHeap Configuration:\n\n   MinHeapFreeRatio = 40\n   MaxHeapFreeRatio = 70\n   MaxHeapSize      = 2147483648 (2048.0MB)\n   NewSize          = 1048576 (1.0MB)\n   MaxNewSize       = 4294901760 (4095.9375MB)\n   OldSize          = 4194304 (4.0MB)\n   NewRatio         = 2\n   SurvivorRatio    = 8\n   PermSize         = 16777216 (16.0MB)\n   MaxPermSize      = 268435456 (256.0MB)\n \n\nHeap Usage:\n\nPS Young Generation\n\nEden Space:\n\n   capacity = 582221824 (555.25MB)\n   used     = 0 (0.0MB)\n   free     = 582221824 (555.25MB)\n   0.0% used\n\nFrom Space:\n\n   capacity = 48103424 (45.875MB)\n   used     = 48079216 (45.85191345214844MB)\n   free     = 24208 (0.0230865478515625MB)\n   99.9496751000511% used\n\nTo Space:\n\n   capacity = 69402624 (66.1875MB)\n   used     = 0 (0.0MB)\n   free     = 69402624 (66.1875MB)\n   0.0% used\n\nPS Old Generation\n\n   capacity = 1431699456 (1365.375MB)\n   used     = 1424597528 (1358.6020736694336MB)\n   free     = 7101928 (6.772926330566406MB)\n   99.50395119798104% used\n\nPS Perm Generation\n\n   capacity = 35782656 (34.125MB)\n   used     = 28493056 (27.173095703125MB)\n   free     = 7289600 (6.951904296875MB)\n   79.62811927655677% used\n\n \n\nI've dump a file using jmap, and asked MemoryAnalyzer (www.eclipse.org/mat) to take a look. This tool reported that an instance of java.security.Policy retained 77.7% of the heap (552,569,816 bytes). Looks like a leak...\n\n\nI will try to run without SecurityManager, and see whether this is impacting the results. \n\nBarak.", "id": 120472, "time": "2008-09-08T12:48:15Z", "bug_id": 45765, "creation_time": "2008-09-08T12:48:15Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 45765, "attachment_id": null, "text": "That isn't enough information to prove a memory leak in Tomcat as nothing in this report relates to Tomcat classes.\n\nTo be a Tomcat leak there needs to be a chain of references back to a Tomcat class.", "id": 120478, "time": "2008-09-08T13:43:45Z", "creator": "markt@apache.org", "creation_time": "2008-09-08T13:43:45Z", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 45765, "text": "This kind of memory foot print does not exist in standalone java application running with security manager, and performing the same logic described in the bug.", "id": 120555, "time": "2008-09-12T01:41:15Z", "creator": "barak@peer39.com", "creation_time": "2008-09-12T01:41:15Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 45765, "attachment_id": null, "text": "This remains no information in this report that demonstrates that Tomcat is the root cause of the leak. Neither is there sufficient information for someone to try and reproduce it.", "id": 120556, "time": "2008-09-12T01:59:39Z", "creator": "markt@apache.org", "creation_time": "2008-09-12T01:59:39Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 45765, "attachment_id": null, "text": "Please advice - what kind of relevant information should I attached to the bug?", "id": 120585, "time": "2008-09-14T00:55:14Z", "creator": "barak@peer39.com", "creation_time": "2008-09-14T00:55:14Z", "is_private": false}, {"count": 5, "attachment_id": null, "bug_id": 45765, "text": "The ideal information would be the steps to reproduce this issue on a clean Tomcat installation. Failing providing the hprof output obtained from JMap (either attach it or provide it via a URL) would enable others to analyse it to ID the source of the leak.", "id": 120591, "time": "2008-09-14T07:09:07Z", "creator": "markt@apache.org", "creation_time": "2008-09-14T07:09:07Z", "tags": [], "is_private": false}]