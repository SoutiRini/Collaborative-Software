[{"count": 0, "tags": [], "creator": "KyleJHarper@gmail.com", "attachment_id": null, "id": 161002, "time": "2012-07-30T13:41:28Z", "bug_id": 53621, "creation_time": "2012-07-30T13:41:28Z", "is_private": false, "text": "Overview:\nWhen a request is made to a valid location inside of a context while the context is stopped (either crashed or manually stopped) tomcat will return HTTP status code 404.\n\nSteps to Reproduce:\nSimply create a context (e.g.: /foo) with a page in it.  View the page, stop the context (I used probe), refresh the page.  Tomcat will return the mapped 404 handler.  I have tested this on 6.0.24 as well as 7.0.26.\n\nActual vs. Expected Results:\nI expected to receive a form of \"unavailable\" error returned.\n\n\nThe context and page are not unknown to Tomcat, they are simply unavailable.  I believe the HTTP Status code 503 would be more aptly suited here.\n\nI found this behavior while attempting to enable the Apache2 mod_proxy failonstatus attribute to be set to 503, to remove BalancerMembers on a per-ProxyPass level (potentially, per context).  This would be a nice benefit to the clustering/balancing systems already in place with Tomcat and Apache HTTPD.\n\nThanks,\nKyle"}, {"count": 1, "tags": [], "text": "Reading RFC 2616 any one of several error codes may be appropriate (404, 410, 503). Tomcat has no way of knowing the circumstances and therefore no way of determining which code is most appropriate. Given this, 404 is a reasonable default.\n\nMy reading of the RFC is that the 400 series of codes is more appropriate than the 500 series in this case.\n\nIf you would like to re-open this as an enhancement request to make the returned code configurable in this case then please feel free to do so. Enhancement requests with patches are more likely to be implemented than those without.", "attachment_id": null, "bug_id": 53621, "id": 161003, "time": "2012-07-30T14:08:45Z", "creator": "markt@apache.org", "creation_time": "2012-07-30T14:08:45Z", "is_private": false}, {"text": "Note that\n1. A stopped application is effectively absent from Tomcat and its request Mapper.\n\nThe request is thus served by whatever other web application that is available for that request path, the common fallback being the ROOT web application.\n\nIf you configure a filter or servlet in the ROOT web application to serve 503 response for those requests, that will fulfill your requirement. I remember this having been discussed on the users list about a month ago.\n\n\n2. Your issue has to be distinguished from bug 53024. The latter talks about paused web applications (a state when an application is reloaded) and was a valid issue. It was fixed in 7.0.28.", "tags": [], "bug_id": 53621, "is_private": false, "count": 2, "id": 161004, "time": "2012-07-30T14:19:59Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2012-07-30T14:19:59Z", "attachment_id": null}, {"count": 3, "attachment_id": null, "creator": "KyleJHarper@gmail.com", "text": "Regarding RFC 2616 and 4xx vs. 5xx codes, I agree that 4xx is more appropriate.  I'm not sure I agree that 404 is the best option as it lacks information for the client, but given Konstantin's remark #1 \"A stopped context is absent to tomcat\", it makes sense.\n\nI did bring this to the users group via email and the solution of adding a servlet in the ROOT context to handle mappings for contexts in the stopped state was suggested.  I implemented this and it works in 7.0.26, and does not work in 6.0.35.  Here is a link to the archive for that issue:\nhttp://markmail.org/thread/wk7d5zxkp2lsflmz\n(I can open a different bug for 6.0.35 Request Mapper not falling back to /ROOT if you wish to patch 6.x.)\n\n>1. A stopped application is effectively absent from Tomcat and its request \n>Mapper.\n\nGiven this, tomcat is working as intended.  Leaving bug resolved:invalid.  If time permits I'll research a patch to enable configurable status codes in stopped states.\n\nThanks.", "id": 161007, "time": "2012-07-30T15:15:52Z", "bug_id": 53621, "creation_time": "2012-07-30T15:15:52Z", "tags": [], "is_private": false}]