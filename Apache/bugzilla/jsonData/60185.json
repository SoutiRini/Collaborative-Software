[{"count": 0, "tags": [], "bug_id": 60185, "text": "Created attachment 34309\nexample of the problem.\n\nThe record tasks writes relative to the current directory, not relative to its build.xml directory. This is an issue when invoking one build.xml file from another with the \"ant\" task.\n\nAll other tasks (mkdir, copy, javac, etc.) write relative to the build directory. The current behavior makes builds break when the initialization for \"record\" makes the directory in one place, but record tries to write in another.\n\nMinimal reproducing case attached.", "id": 194070, "time": "2016-09-28T20:31:52Z", "creator": "bz.apache.org@worldware.com", "creation_time": "2016-09-28T20:31:52Z", "is_private": false, "attachment_id": 34309}, {"count": 1, "tags": [], "bug_id": 60185, "text": "Created attachment 34310\nPatch for issue.", "id": 194071, "time": "2016-09-28T20:36:16Z", "creator": "bz.apache.org@worldware.com", "creation_time": "2016-09-28T20:36:16Z", "is_private": false, "attachment_id": 34310}, {"count": 2, "tags": [], "bug_id": 60185, "text": "Note that my patch does change behavior, in the case where one build file invokes another file,  which then ecords. \n\nIf complete backwards compatibility is desired, a new parameter which has the correct behavior could be added. (Correct in the sense that it behaves like other ant core tasks). I'd suggest \"file\".", "id": 194072, "time": "2016-09-28T20:49:56Z", "creator": "bz.apache.org@worldware.com", "creation_time": "2016-09-28T20:49:56Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "bz.apache.org@worldware.com", "is_private": false, "id": 194098, "attachment_id": null, "bug_id": 60185, "creation_time": "2016-09-29T23:39:10Z", "time": "2016-09-29T23:39:10Z", "text": "Oh, well. It looks like this is a duplicate of https://bz.apache.org/bugzilla/show_bug.cgi?id=17781"}]