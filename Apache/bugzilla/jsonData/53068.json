[{"count": 0, "tags": [], "bug_id": 53068, "is_private": false, "id": 157998, "creation_time": "2012-04-12T20:09:40Z", "time": "2012-04-12T20:09:40Z", "creator": "aj@drfloob.com", "text": "Saving the Test Plan apparently passes an HTTP Request's Raw Post Body through URLDecoder 3 times. Running the Test Plan passes it through URLDecoder once.\n\nI need to post XML content to a web service, and that content includes a \"%\" symbol. I can either escape it 4x to save and run (e.g. \"%25252525\"), or escape once and run (e.g. \"%25\"). After either case, saving or running the Test Plan mangles my Post Body, so I have to start over.\n\nTo illustrate the problem quickly, create an HTTP Request with \"%%\" alone in the post body and save. You should get \"Problem updating GUI - see log for details\". The first error in the log (among a few) is:\n\n2012/04/12 12:38:59 ERROR - jmeter.gui.GuiPackage: Problem retrieving gui java.lang.IllegalArgumentException: URLDecoder: Illegal hex characters in escape (%) pattern - For input string: \"%?\"\n\tat java.net.URLDecoder.decode(Unknown Source)\n\tat org.apache.jmeter.protocol.http.util.HTTPArgument.<init>(HTTPArgument.java:113)\n\tat org.apache.jmeter.protocol.http.util.HTTPArgument.<init>(HTTPArgument.java:95)\n\tat org.apache.jmeter.protocol.http.config.gui.UrlConfigGui.modifyTestElement(UrlConfigGui.java:202)\n\tat org.apache.jmeter.protocol.http.config.gui.MultipartUrlConfigGui.modifyTestElement(MultipartUrlConfigGui.java:60)\n\tat org.apache.jmeter.protocol.http.control.gui.HttpTestSampleGui.modifyTestElement(HttpTestSampleGui.java:115)\n\tat org.apache.jmeter.gui.GuiPackage.updateCurrentNode(GuiPackage.java:415)\n\tat org.apache.jmeter.gui.GuiPackage.updateCurrentGui(GuiPackage.java:396)\n\tat org.apache.jmeter.gui.action.ActionRouter.performAction(ActionRouter.java:72)\n\tat org.apache.jmeter.gui.action.ActionRouter.access$000(ActionRouter.java:41)\n\tat org.apache.jmeter.gui.action.ActionRouter$1.run(ActionRouter.java:62)\n\tat java.awt.event.InvocationEvent.dispatch(Unknown Source)\n\tat java.awt.EventQueue.dispatchEventImpl(Unknown Source)\n\tat java.awt.EventQueue.access$000(Unknown Source)\n\tat java.awt.EventQueue$1.run(Unknown Source)\n\tat java.awt.EventQueue$1.run(Unknown Source)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.security.AccessControlContext$1.doIntersectionPrivilege(Unknown Source)\n\tat java.awt.EventQueue.dispatchEvent(Unknown Source)\n\tat java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\n\tat java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\n\tat java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\n\tat java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n\tat java.awt.EventDispatchThread.pumpEvents(Unknown Source)\n\tat java.awt.EventDispatchThread.run(Unknown Source)", "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "p.mouawad@ubik-ingenierie.com", "text": "Hello,\n Think this issue duplicates 52613 and has been fixed in nightly build.\nCan you download it and Check if it's the case and if not reopen th\u00e9 issue?\nThanks\n\n*** This bug has been marked as a duplicate of bug 52613 ***", "id": 158008, "time": "2012-04-13T07:09:34Z", "bug_id": 53068, "creation_time": "2012-04-13T07:09:34Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 53068, "is_private": false, "text": "Running nightly-r1325640 does fix this problem for me. Thank you.", "id": 158033, "time": "2012-04-13T14:53:47Z", "creator": "aj@drfloob.com", "creation_time": "2012-04-13T14:53:47Z", "attachment_id": null}]