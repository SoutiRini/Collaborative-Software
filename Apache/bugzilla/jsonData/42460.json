[{"count": 0, "tags": [], "creator": "treeck@yahoo.com", "attachment_id": null, "text": "There appears to be a class loader problem. I use the same jaxen and dom4j \nversion 1.6.1 jar file in a standalone application and it works fine. I \nverified that the class, Branch, does exist in the jar file. However, using \nthe same jaxen and dom4j jar fiels in either WEB-INF/lib or common/lib \ngenerates the following error when loading a servlet that uses the jaxen/dom4j \nlibraries:\n\njava.lang.NoClassDefFoundError: org/dom4j/Branch at \norg.jaxen.dom4j.DocumentNavigator.getChildAxisIterator\n(DocumentNavigator.java:211) at org.jaxen.expr.iter.IterableChildAxis.iterator\n(IterableChildAxis.java:82) at org.jaxen.expr.DefaultStep.axisIterator\n(DefaultStep.java:139) at org.jaxen.expr.DefaultLocationPath.evaluate\n(DefaultLocationPath.java:188) at org.jaxen.expr.DefaultXPathExpr.asList\n(DefaultXPathExpr.java:107) at org.jaxen.BaseXPath.selectNodesForContext\n(BaseXPath.java:716) at org.jaxen.BaseXPath.selectNodes(BaseXPath.java:239) at \norg.dom4j.xpath.DefaultXPath.selectNodes(DefaultXPath.java:132) at \norg.dom4j.tree.AbstractNode.selectNodes(AbstractNode.java:166) at \njavarex.beans.servlet.BaseForm.getForm_field_properties_as_array\n(BaseForm.java:945)\n...\n\nI also verified that the problem of not being able to load the class exists \nwith earlier versions of dom4j and with earlier versions of Tomcat. Are there \nother libraries in Tomcat that have a different version of jaxen that \nconflicts with the one I supply with the servlet?\n\nThis issue has me at stand still.", "id": 103378, "time": "2007-05-19T16:47:36Z", "bug_id": 42460, "creation_time": "2007-05-19T16:47:36Z", "is_private": false}, {"count": 1, "tags": [], "creator": "treeck@yahoo.com", "is_private": false, "text": "You can close this. It's not a classloader bug. I had some JAXP classes in the \ncommons area, which it turns out ALSO require the jaxen classes. And because \nthe common class loader is different that the webapp classloader, the common \nclass loader could find the \"import\" classes. Copying all the JAXP related \nclasses to WEB-INF/lib fixed the problem.", "id": 103380, "time": "2007-05-19T22:09:13Z", "bug_id": 42460, "creation_time": "2007-05-19T22:09:13Z", "attachment_id": null}]