[{"count": 0, "tags": [], "creator": "j.kalsbach@jk-itberatung.de", "attachment_id": null, "id": 135259, "time": "2010-03-11T09:49:36Z", "bug_id": 48889, "creation_time": "2010-03-11T09:49:36Z", "is_private": false, "text": "I\u2019ve got a master-slave setup and need to do statistical sampling because otherwise the master dies on OutOfMemory. I use an Aggregate Graph/Report as recommended. The calculated values for hits/sec reported by the listeners are wrong.\n\nTo analyze the situation use I the following testplan:\n\n-\tThreadgroup with 10 threads running for 100 iterations\n-\tBeanShell Sampler sleeping for 500 millis\n-\tAggregateGraph/Report\n\n\nNow the results must be more or like:\n-\tHits/sec just below 20 (like 19.6)\n-\tAverage response time approx 500 millis\n\nLocal execution delivers this result.\n\nSet num_sample_threshold=1 and time_threshold=3600 delivers this result.\n\nSet num_sample_threshold=100 time_threshold=3600 delivers\n-\tHits/sec 19.7\n-\tAverage response time 56!\n\nThe response time varies with the sample_threshold but always is way to low.\nThe higher the sample_threshold the higher the delta between real and reported response time"}, {"count": 1, "tags": [], "creator": "j.kalsbach@jk-itberatung.de", "attachment_id": 25115, "id": 135271, "time": "2010-03-11T12:57:40Z", "bug_id": 48889, "creation_time": "2010-03-11T12:57:40Z", "is_private": false, "text": "Created attachment 25115\nproposed patch"}, {"count": 2, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "Thanks for the suggested patch, which should help.\n\nHowever, I think the threadGroup is still needed, otherwise unrelated threads in different thread groups will be aggregated, leading to the same problem.", "id": 135277, "time": "2010-03-11T14:58:30Z", "bug_id": 48889, "creation_time": "2010-03-11T14:58:30Z", "is_private": false}, {"count": 3, "tags": [], "text": "(In reply to comment #2)\n> Thanks for the suggested patch, which should help.\n> \n> However, I think the threadGroup is still needed, otherwise unrelated threads\n> in different thread groups will be aggregated, leading to the same problem.\n\nYes but at least with the current implementation the event.getResult().getThreadName() call already contains the threadGroup name. A typical key would be \"NameOfSampler-NameOfThreadGroup 1-10\". I just verified the proper working with two threadgroups. But an explicit call to getThreadGroup would make it more robust.", "attachment_id": null, "id": 135278, "creation_time": "2010-03-11T15:55:35Z", "time": "2010-03-11T15:55:35Z", "creator": "j.kalsbach@jk-itberatung.de", "bug_id": 48889, "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 48889, "is_private": false, "id": 135290, "time": "2010-03-11T23:40:11Z", "creator": "sebb@apache.org", "creation_time": "2010-03-11T23:40:11Z", "tags": [], "text": "Turns out that the problem was not really due to aggregating across thread groups.\n\nThe StatisticalSampleResult now maintains the elapsed time directly, rather than trying to fake it by setting the start and end times.\n\nSee:\n\nURL: http://svn.apache.org/viewvc?rev=922072&view=rev\nLog:\nBug 48889 - Wrong response time with mode=Statistical and num_sample_threshold > 1\nSee also SVN revisions: 922069,922067,922055,922054,922051"}]