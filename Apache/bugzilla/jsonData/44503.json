[{"count": 0, "tags": [], "text": "I have installed a standard apache 2.2.4 package on OpenBSD 4.2, and have found a major problem.\n\nI set up 4 virtual hosts on the same IP address:\n*.80 -> no ssl\nXXX.XXX.XXX.XXX:443 -> SSL enabled\nXXX.XXX.XXX.XXX:40002 -> SSL enabled\nXXX.XXX.XXX.XXX:40003 -> SSL enabled\nAll 3 have been configured correctly to use SSL, and each one uses its own dummy SSL certificate.\n\nThe server starts fine, and all 3 virtual hosts work as expected. Testing each one individually on a web browser shows that they all work fine.\nHowever, after a period of time under a moderate load the 3rd SSL site starts to have great difficulty figuring out which host it's supposed to be using, and ends up dropping out of SSL to the default virtual host on port 80. But this seems to happen AFTER the browser has already established the initial handshake with SSL.\n\nThis results in errors similar to the following in the default host's error log: \n[Tue Feb 26 16:35:00 2008] [error] [client XXX.XXX.XXX.XXX] Invalid method in request \\x16\\x03\\x01\nThe SSL virtual host shows no errors, even with the LogLevel set to debug.\nThe web browser comes up with an error message: \"Unrecognized SSL message, plaintext connection?\"\n\nIf i disable all SSL virtual hosts and enable each one individually i get no errors, even under a heavy load, so the configuration seems to be fine. There just seems to be a major problem with the mod_ssl module making it unable to handle more than one SSL host for very long.", "attachment_id": null, "id": 114087, "creator": "brendonm@bbtechltd.com", "time": "2008-02-27T18:09:44Z", "bug_id": 44503, "creation_time": "2008-02-27T18:09:44Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 44503, "attachment_id": null, "id": 114095, "time": "2008-02-28T05:29:30Z", "creator": "nick@webthing.com", "creation_time": "2008-02-28T05:29:30Z", "is_private": false, "text": "Could this be another manifestation of Bug 43218?"}, {"count": 2, "tags": [], "bug_id": 44503, "attachment_id": null, "id": 114116, "time": "2008-02-28T12:18:03Z", "creator": "brendonm@bbtechltd.com", "creation_time": "2008-02-28T12:18:03Z", "is_private": false, "text": "I have just implemented the workaround suggested in bug 43218, but the problem still persists. But from the looks of it, this could be related.\n\nIt looks like it's only happening when 2 or more requests come in at around the same time, suggesting some kind of synchronization issue between requests?\n\nI wondered if perhaps it was something to do with the SSL Session Cache:\nSSLSessionCache         shm:logs/ssl_scache(512000)\n\nOnce apache is started i can see the following in the logs:\n[Fri Feb 29 09:04:29 2008] [info] Shared memory session cache initialised\n\nHowever, it looks like the shared memory file is never created.\nThere is no file named ssl_scache in my logs directory, and there are no shared memory segments showing up either:\n\n# ipcs \nMessage Queues:\nT       ID     KEY        MODE       OWNER    GROUP\n\nShared Memory:\nT       ID     KEY        MODE       OWNER    GROUP\n\nSemaphores:\nT       ID     KEY        MODE       OWNER    GROUP\n\nWhatever value i use for SSLSessionCache appears to make no difference to the stability of the server.\n\nI get the same sort of problem with the SSLMutex directive:\nSSLMutex  file:logs/ssl_mutex\n- No file is ever created\n\nI hope all this helps."}, {"count": 3, "tags": [], "bug_id": 44503, "attachment_id": null, "id": 114142, "time": "2008-02-29T12:09:29Z", "creator": "jorton@redhat.com", "creation_time": "2008-02-29T12:09:29Z", "is_private": false, "text": "Please give a minimal configuration which reproduces this error."}, {"count": 4, "tags": [], "creator": "brendonm@bbtechltd.com", "attachment_id": null, "text": "Configs are as follows:\n\n<VirtualHost *:80>\n    DocumentRoot \"/var/apache2/htdocs\"\n    ServerName default.myhost.com\n    ServerAdmin me@something.com\n</VirtualHost>\n\n<VirtualHost 192.168.1.16:443>\nDocumentRoot /var/web/test\nServerName test.myhost.com\nServerAdmin me@something.com\nSSLEngine on\nSSLCertificateFile    /etc/apache2/server.crt\nSSLCertificateKeyFile /etc/apache2/server.key\nCustomLog logs/testsite.ssl_request_log \\\n          \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\nSetEnvIf User-Agent \".*MSIE.*\" nokeepalive \\\n          ssl-unclean-shutdown downgrade-1.0 force-response-1.0\n</VirtualHost>\n\n<VirtualHost 192.168.1.16:40002>\nDocumentRoot /var/web/test2\nServerName test2.myhost.com\nServerAdmin me@something.com\nSSLEngine on\nSSLCertificateFile    /etc/apache2/server2.crt\nSSLCertificateKeyFile /etc/apache2/server2.key\nCustomLog logs/testsite2.ssl_request_log \\\n          \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\nSetEnvIf User-Agent \".*MSIE.*\" nokeepalive \\\n          ssl-unclean-shutdown downgrade-1.0 force-response-1.0\n</VirtualHost>\n\n<VirtualHost 192.168.1.16:40003>\nDocumentRoot /var/web/test3\nServerName test3.myhost.com\nServerAdmin me@something.com\nSSLEngine on\nSSLCertificateFile    /etc/apache2/server3.crt\nSSLCertificateKeyFile /etc/apache2/server3.key\nCustomLog logs/testsite3.ssl_request_log \\\n          \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\nSetEnvIf User-Agent \".*MSIE.*\" nokeepalive \\\n          ssl-unclean-shutdown downgrade-1.0 force-response-1.0\n</VirtualHost>\n\nNOTE: I get the same results when i configure 3 different IP addresses using port 443, but this is an easier configuration to test.", "id": 114174, "time": "2008-03-02T12:00:57Z", "bug_id": 44503, "creation_time": "2008-03-02T12:00:57Z", "is_private": false}, {"count": 5, "tags": [], "text": "\n\n*** This bug has been marked as a duplicate of bug 2 ***", "attachment_id": null, "bug_id": 44503, "id": 190336, "time": "2016-04-18T11:42:55Z", "creator": "tysonrudgey@outlook.com", "creation_time": "2016-04-18T11:42:55Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 44503, "attachment_id": null, "id": 190338, "time": "2016-04-18T11:44:44Z", "creator": "covener@gmail.com", "creation_time": "2016-04-18T11:44:44Z", "is_private": false, "text": "Reopen if still an issue."}]