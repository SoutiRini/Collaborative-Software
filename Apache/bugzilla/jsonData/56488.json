[{"count": 0, "tags": [], "bug_id": 56488, "attachment_id": null, "text": "Hi\n\n\nin the commit method while adding a principal user works and in the same method add principal roles does not !!!\n\nHere the stacktrace in the browser even not logged in the tomcat one\n\njava.lang.NullPointerException\n\tjava.util.Arrays.binarySearch0(Arrays.java:1481)\n\tjava.util.Arrays.binarySearch(Arrays.java:1423)\n\torg.apache.catalina.realm.GenericPrincipal.hasRole(GenericPrincipal.java:207)\n\torg.apache.catalina.realm.RealmBase.hasRole(RealmBase.java:980)\n\torg.apache.catalina.realm.RealmBase.hasResourcePermission(RealmBase.java:900)\n\torg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:596)\n\torg.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:74)\n\torg.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:610)\n\torg.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:526)\n\torg.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1017)\n\torg.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:652)\n\torg.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(Http11AprProtocol.java:277)\n\torg.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2451)\n\torg.apache.tomcat.util.net.AprEndpoint$SocketProcessor.run(AprEndpoint.java:2440)\n\tjava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tjava.lang.Thread.run(Thread.java:745)", "id": 175023, "time": "2014-05-05T10:47:18Z", "creator": "dstojkov2002@yahoo.fr", "creation_time": "2014-05-05T10:47:18Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 56488, "attachment_id": null, "id": 175076, "time": "2014-05-07T13:34:29Z", "creator": "markt@apache.org", "creation_time": "2014-05-07T13:34:29Z", "is_private": false, "text": "There isn't enough information here for a developer to reproduce this. Please seek further assistance via the Apache Tomcat users mailing list. You will need to provide the source code for your custom login module.\n\nIf you haven't already, I highly recommend reviewing the code for the login module that ships with Apache Tomcat (http://svn.apache.org/viewvc/tomcat/trunk/java/org/apache/catalina/realm/JAASMemoryLoginModule.java?view=annotate) and use that as a basis for your own login module."}, {"count": 2, "attachment_id": null, "creator": "dstojkov2002@yahoo.fr", "is_private": false, "id": 175085, "time": "2014-05-07T18:12:16Z", "bug_id": 56488, "creation_time": "2014-05-07T18:12:16Z", "tags": [], "text": "Well i follow this tutorial\n\nhttp://www.byteslounge.com/tutorials/jaas-authentication-in-tomcat-example\n\nbut used the form based one\n\nhttp://www.byteslounge.com/tutorials/jaas-form-based-authentication-in-tomcat-example\n\n\njust copy paste it\n\n\nit seems that it has worked before though ...\n\n\nRegards"}, {"count": 3, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 175086, "time": "2014-05-07T18:42:18Z", "bug_id": 56488, "creation_time": "2014-05-07T18:42:18Z", "tags": [], "text": "Then you haven't copied and pasted correctly. That example works fine for me with the latest 8.0.x."}, {"count": 4, "attachment_id": null, "creator": "dstojkov2002@yahoo.fr", "text": "You are right\n\nI used this example and adapted it to a jsf page\nI used request.login() instead of the form that of the example\n\nhere the index.xhtml\n\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\"\n      xmlns:h=\"http://xmlns.jcp.org/jsf/html\"\n      xmlns:ui=\"http://xmlns.jcp.org/jsf/facelets\">\n    <h:head>\n        <title>login</title>\n    </h:head>\n    <h:body>\n        <ui:debug hotkey=\"Y\"/>\n        #{directoryService.init()}\n        <h:form id=\"login\">\n            <h:outputLabel for=\"usernameInput\" value=\"username : \"/>\n            <h:inputText id=\"usernameInput\" value=\"#{userFa.name}\"/>\n            <h:outputLabel for=\"passwordInput\" value=\"password : \"/>\n            <h:inputSecret id=\"passwordInput\" value=\"#{userFa.password}\"/>\n            <h:commandButton value=\"login\" action=\"#{userFa.login()}\"/>\n        </h:form>\n    </h:body>\n</html>", "id": 175089, "time": "2014-05-07T19:21:34Z", "bug_id": 56488, "creation_time": "2014-05-07T19:21:34Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "text": "my web.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app version=\"3.1\" xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\">\n    <context-param>\n        <param-name>javax.faces.PROJECT_STAGE</param-name>\n        <param-value>Development</param-value>\n    </context-param>\n    <servlet>\n        <servlet-name>Faces Servlet</servlet-name>\n        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>Faces Servlet</servlet-name>\n        <url-pattern>*.xhtml</url-pattern>\n    </servlet-mapping>\n    <session-config>\n        <session-timeout>\n            30\n        </session-timeout>\n    </session-config>\n    <welcome-file-list>\n        <welcome-file>index.xhtml</welcome-file>\n    </welcome-file-list>\n    <security-constraint>\n        <web-resource-collection>\n            <web-resource-name>users_homepage</web-resource-name>\n            <!--url-pattern>/lobby.xhtml</url-pattern>\n            <url-pattern>/clientConnection.xhtml</url-pattern-->\n            <url-pattern>/logged/*</url-pattern>\n        </web-resource-collection>\n        <auth-constraint>\n            <role-name>user</role-name>\n        </auth-constraint>\n    </security-constraint>\n    <!--security-constraint>\n        <display-name>Security Constraint</display-name>\n        <web-resource-collection>\n            <web-resource-name>Protected Area</web-resource-name>\n            <url-pattern>/faces/*</url-pattern>\n            <http-method>POST</http-method>\n            <http-method>GET</http-method>\n        </web-resource-collection>\n        <auth-constraint>\n            <role-name>role1</role-name>\n        </auth-constraint>\n    </security-constraint-->\n    <security-role>\n        <role-name>user</role-name>\n    </security-role>\n</web-app>", "is_private": false, "bug_id": 56488, "id": 175090, "time": "2014-05-07T19:23:00Z", "creator": "dstojkov2002@yahoo.fr", "creation_time": "2014-05-07T19:23:00Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 56488, "attachment_id": null, "is_private": false, "id": 175091, "time": "2014-05-07T19:24:26Z", "creator": "dstojkov2002@yahoo.fr", "creation_time": "2014-05-07T19:24:26Z", "text": "context.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context antiJARLocking=\"true\" path=\"/testjaas\">\n    <Realm className=\"org.apache.catalina.realm.JAASRealm\" \n           appName=\"SimpleJAASLogin\"\n           userClassNames=\"com.mycompany.testjaas.jaas.UserPrincipal\"\n           roleClassNames=\"com.mycompany.testjaas.jaas.RolePrincipal\">\n    </Realm>\n</Context>"}, {"count": 7, "tags": [], "bug_id": 56488, "attachment_id": null, "id": 175092, "time": "2014-05-07T19:25:00Z", "creator": "dstojkov2002@yahoo.fr", "creation_time": "2014-05-07T19:25:00Z", "is_private": false, "text": "/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\npackage com.mycompany.testjaas.jaas;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\nimport javax.security.auth.Subject;\nimport javax.security.auth.callback.Callback;\nimport javax.security.auth.callback.CallbackHandler;\nimport javax.security.auth.callback.NameCallback;\nimport javax.security.auth.callback.PasswordCallback;\nimport javax.security.auth.callback.UnsupportedCallbackException;\nimport javax.security.auth.login.LoginException;\nimport javax.security.auth.spi.LoginModule;\n\n/**\n *\n * @author dstojkov\n */\npublic class SimpleLoginModule implements LoginModule {\n\n    private CallbackHandler handler;\n    private Subject subject;\n    private UserPrincipal userPrincipal;\n    private RolePrincipal rolePrincipal;\n    private String login;\n    private List<String> userGroups;\n\n    @Override\n    public void initialize(Subject subject,\n            CallbackHandler callbackHandler,\n            Map<String, ?> sharedState,\n            Map<String, ?> options) {\n\n        handler = callbackHandler;\n        this.subject = subject;\n    }\n\n    @Override\n    public boolean login() throws LoginException {\n\n        Callback[] callbacks = new Callback[2];\n        callbacks[0] = new NameCallback(\"login\");\n        callbacks[1] = new PasswordCallback(\"password\", true);\n\n        try {\n            handler.handle(callbacks);\n            String name = ((NameCallback)callbacks[0]).getName();\n            String password = String.valueOf(((PasswordCallback)callbacks[1])\n                    .getPassword());\n\n            // Here we validate the credentials against some\n            // authentication/authorization provider.\n            // It can be a Database, an external LDAP, \n            // a Web Service, etc.\n            // For this tutorial we are just checking if \n            // user is \"user123\" and password is \"pass123\"\n            if(name != null\n                    && name.equals(\"user123\")\n                    && password != null\n                    && password.equals(\"pass123\")) {\n\n                // We store the username and roles\n                // fetched from the credentials provider\n                // to be used later in commit() method.\n                // For this tutorial we hard coded the\n                // \"admin\" role\n                login = name;\n                userGroups = new ArrayList<String>();\n                userGroups.add(\"admin\");\n                return true;\n            }\n\n            // If credentials are NOT OK we throw a LoginException\n            throw new LoginException(\"Authentication failed\");\n\n        } catch(IOException e) {\n            throw new LoginException(e.getMessage());\n        } catch(UnsupportedCallbackException e) {\n            throw new LoginException(e.getMessage());\n        }\n\n    }\n\n    @Override\n    public boolean commit() throws LoginException {\n\n        userPrincipal = new UserPrincipal(login);\n        subject.getPrincipals().add(userPrincipal);\n\n        if(userGroups != null && userGroups.size() > 0) {\n            for(String groupName : userGroups) {\n                rolePrincipal = new RolePrincipal(groupName);\n                subject.getPrincipals().add(rolePrincipal);\n            }\n        }\n        return true;\n    }\n\n    @Override\n    public boolean abort() throws LoginException {\n        return false;\n    }\n\n    @Override\n    public boolean logout() throws LoginException {\n        subject.getPrincipals().remove(userPrincipal);\n        subject.getPrincipals().remove(rolePrincipal);\n        return true;\n    }\n\n}"}, {"count": 8, "tags": [], "bug_id": 56488, "attachment_id": null, "id": 175093, "time": "2014-05-07T19:26:42Z", "creator": "dstojkov2002@yahoo.fr", "creation_time": "2014-05-07T19:26:42Z", "is_private": false, "text": "sorry it was a wrong one before\n\n/*\n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\npackage com.mycompany.lobby_alpha.helper.jaas;\n\nimport java.io.IOException;\nimport java.security.Principal;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.TreeSet;\nimport javax.security.auth.Subject;\nimport javax.security.auth.callback.Callback;\nimport javax.security.auth.callback.CallbackHandler;\nimport javax.security.auth.callback.NameCallback;\nimport javax.security.auth.callback.PasswordCallback;\nimport javax.security.auth.callback.UnsupportedCallbackException;\nimport javax.security.auth.login.FailedLoginException;\nimport javax.security.auth.login.LoginException;\nimport javax.security.auth.spi.LoginModule;\n\n/**\n *\n * @author dstojkov\n */\npublic class SimpleLoginModule implements LoginModule {\n    private Set<String> lobbyUsers;\n    private List<String> lobbyGroups;\n    private Subject subject;\n    private CallbackHandler callbackHandler;\n\n    private Principal simpleUser;\n    private boolean committed;\n\n    public SimpleLoginModule() {\n        System.out.println(\"creation SimpleLoginModule\");\n        this.lobbyUsers = new TreeSet<>();\n        this.lobbyGroups = new ArrayList<>();\n        this.simpleUser = null;\n        this.committed = false;\n        dataInit();\n    }\n\n    @Override\n    public void initialize(Subject subject, CallbackHandler callbackHandler, Map<String, ?> sharedState, Map<String, ?> options) {\n        System.out.println(\"debut initialise\");\n        this.subject = subject;\n        this.callbackHandler = callbackHandler;\n\n        System.out.println(\"debut sharedState\");\n        for(String tmp : sharedState.keySet()) {\n            System.out.println(\"key : \" + tmp + \" value : \" + sharedState.get(tmp));\n        }\n        System.out.println(\"fin sharedState\");\n        System.out.println(\"debut options\");\n        for(String tmp : options.keySet()) {\n            System.out.println(\"key : \" + tmp + \" value : \" + options.get(tmp));\n        }\n        System.out.println(\"fin options\");\n        System.out.println(\"fin initialise\");\n    }\n\n    @Override\n    public boolean login() throws LoginException {\n        System.out.println(\"debut login\");\n        //boolean ret = false;\n\n        Callback[] callbacks = {new NameCallback(\"username\"), new PasswordCallback(\"password\", true)};\n        try {\n            callbackHandler.handle(callbacks);\n        } catch(IOException | UnsupportedCallbackException ex) {\n            throw new LoginException(ex.getMessage());\n        }\n        System.out.println(\"callbacks[0] : \" + callbacks[0]);\n        System.out.println(\"callbacks[1] : \" + callbacks[1]);\n\n        String name = ((NameCallback)callbacks[0]).getName();\n        String password = String.valueOf(((PasswordCallback)callbacks[1]).getPassword());\n        System.out.println(\"debut lobbyUsers\");\n        for(String tmp : lobbyUsers) {\n            System.out.println(\"tmp : \" + tmp);\n        }\n        System.out.println(\"fin lobbyUsers\");\n        System.out.println(\"name : -\" + name + \"-\");\n        System.out.println(\"password : -\" + password + \"-\");\n        System.out.println(\"\" + !this.lobbyUsers.contains(name));\n        System.out.println(\"\" + !name.equals(password));\n        if(name.equals(\"\") || !this.lobbyUsers.contains(name) || !name.equals(password)) {\n            throw new FailedLoginException(\"bad credentials\");\n        }\n        this.simpleUser = new SimpleUser(name);\n        //this.simpleUser = new GenericPrincipal(name, password, Arrays.asList(\"user\"));\n        System.out.println(\"fin login\");\n        return true;\n    }\n\n    @Override\n    public boolean commit() throws LoginException {\n        if(this.simpleUser == null) {\n            return false;\n        }\n        System.out.println(\"debut commit\");\n        System.out.println(\"debut Principals\");\n        for(Principal tmp : subject.getPrincipals()) {\n            System.out.println(\"tmp : \" + tmp);\n        }\n        System.out.println(\"fin Principals\");\n        subject.getPrincipals().add(this.simpleUser);\n        subject.getPrincipals().add(new SimpleRole(\"user\"));\n        System.out.println(\"fin commit\");\n        this.committed = true;\n        return true;\n    }\n\n    @Override\n    public boolean abort() throws LoginException {\n        System.out.println(\"debut abort\");\n        if(this.simpleUser == null) {\n            return false;\n        }\n        if(this.committed) {\n            logout();\n        } else {\n            this.committed = false;\n            this.simpleUser = null;\n        }\n        System.out.println(\"fin abort\");\n        return true;\n    }\n\n    @Override\n    public boolean logout() throws LoginException {\n        System.out.println(\"debut logout\");\n        subject.getPrincipals().remove(this.simpleUser);\n        committed = false;\n        this.simpleUser = null;\n        System.out.println(\"fin logout\");\n        return true;\n    }\n\n    private void dataInit() {\n        lobbyUsers.add(\"user21\");\n        lobbyUsers.add(\"user22\");\n        lobbyUsers.add(\"user23\");\n        lobbyUsers.add(\"user24\");\n        lobbyUsers.add(\"user25\");\n        lobbyUsers.add(\"user26\");\n        lobbyUsers.add(\"user27\");\n        lobbyUsers.add(\"user28\");\n        lobbyUsers.add(\"user29\");\n        lobbyUsers.add(\"user30\");\n        lobbyUsers.add(\"user31\");\n        lobbyUsers.add(\"user32\");\n        this.lobbyGroups.add(\"user\");\n    }\n}"}, {"count": 9, "tags": [], "text": "the context.xml was also false\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Context antiJARLocking=\"true\" path=\"/lobby_alpha\">\n    <Realm appName=\"SimpleLogin\" className=\"org.apache.catalina.realm.JAASRealm\" \n         roleClassNames=\"com.mycompany.lobby_alpha.helper.jaas.SimpleRole\" \n         userClassNames=\"com.mycompany.lobby_alpha.helper.jaas.SimpleUser\">\n    </Realm>\n</Context>", "is_private": false, "bug_id": 56488, "id": 175094, "time": "2014-05-07T19:28:05Z", "creator": "dstojkov2002@yahoo.fr", "creation_time": "2014-05-07T19:28:05Z", "attachment_id": null}, {"count": 10, "attachment_id": null, "creator": "dstojkov2002@yahoo.fr", "is_private": false, "id": 175095, "time": "2014-05-07T19:29:07Z", "bug_id": 56488, "creation_time": "2014-05-07T19:29:07Z", "tags": [], "text": "I used jsf mojarra 2.2.6 without extra framework the like primeface"}, {"count": 11, "tags": [], "bug_id": 56488, "attachment_id": null, "id": 175098, "time": "2014-05-07T22:14:34Z", "creator": "markt@apache.org", "creation_time": "2014-05-07T22:14:34Z", "is_private": false, "text": "Having wasted time once already this evening working through an example you claimed did not work only to find that it did I have no desire to repeat that exercise.\n\nBugzilla is not a support forum. For the last time, please use the Apache Tomcat users mailing list."}, {"count": 12, "tags": [], "creator": "dstojkov2002@yahoo.fr", "text": "ok sorry mate\n\nWill then code my own realm. Which would have cost me some hours\nYou wasted a evening on it and I spend 1 week to try to figure out why role is null.\n\nI give up on JAAS since it works too much randomly to my taste. At least I gave it a try in use with jsf\n\n\nRegards", "id": 175099, "time": "2014-05-07T22:32:22Z", "bug_id": 56488, "creation_time": "2014-05-07T22:32:22Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 56488, "attachment_id": null, "id": 175100, "time": "2014-05-07T22:44:59Z", "creator": "dstojkov2002@yahoo.fr", "creation_time": "2014-05-07T22:44:59Z", "is_private": false, "text": "I also find that \n\nhttp://marc.info/?l=tomcat-user&m=135180802717290&w=4\n\n\nwhich related to my pb as well but without response"}, {"count": 14, "tags": [], "bug_id": 56488, "attachment_id": null, "text": "(In reply to dstojkov from comment #13)\n> I also find that \n> \n> http://marc.info/?l=tomcat-user&m=135180802717290&w=4\n> \n> which related to my pb as well but without response\n\nI took a look at that report. The report does correctly identify an issue that I have now fixed for 8.0.x and 7.0.x (along with an additional issue for 8.0.x). However, the only relationship to your problem appears to be that both involve an NPE. Again, the Tomcat users mailing list is where you need to go to seek help with your code.", "id": 175158, "time": "2014-05-12T12:15:28Z", "creator": "markt@apache.org", "creation_time": "2014-05-12T12:15:28Z", "is_private": false}]