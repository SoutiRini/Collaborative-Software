[{"count": 0, "tags": [], "bug_id": 54740, "attachment_id": null, "is_private": false, "id": 166084, "time": "2013-03-21T19:24:48Z", "creator": "rstoyanchev@yahoo.com", "creation_time": "2013-03-21T19:24:48Z", "text": "The SCI scan picks up a ServerEndpointConfig declaration even if is package private, a private inner class, or an anonymous class. This may not be specifically related to the websocket support but rather to the way the SCI scan works. Either way there doesn't seem to be a way to \"hide\" a class from the scan short of turning it off completely. Is it by design? I could not find any references to that level of detail in the spec. It seems rather aggressive."}, {"count": 1, "tags": [], "bug_id": 54740, "attachment_id": null, "id": 166085, "time": "2013-03-21T22:47:03Z", "creator": "markt@apache.org", "creation_time": "2013-03-21T22:47:03Z", "is_private": false, "text": "The Servlet 3.0 scanning mechanism only requires that the class may be loaded.\n\nThe WebSocket spec limits @ServerEndpoint to \"public, concrete, and have a public no-args constructor\". It seems reasonable to me to limit ServerEndpointConfig  classes with the same rules.\n\nDiscovered ServerEndpointConfig classes may be filters with a ServerApplicationConfig implementation (section 6.2 of the WebSocket spec)."}, {"count": 2, "tags": [], "bug_id": 54740, "text": "I posted questions on the EG list (http://java.net/projects/websocket-spec/lists/jsr356-experts/archive/2013-03/message/41). Hopefully this get clarified in the spec. Either way it makes sense that ServerEndpointConfig types that are not public, concrete or have no public no-arg constructor should be ignored.", "id": 166106, "time": "2013-03-22T20:31:01Z", "creator": "rstoyanchev@yahoo.com", "creation_time": "2013-03-22T20:31:01Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 54740, "text": "Actually it appears that ServerEndpointConfig types should not be scanned at all. Here is an explanation by Danny on the EG: http://java.net/projects/websocket-spec/lists/jsr356-experts/archive/2013-03/message/14. So it can be considered a bug then in WsSci, which should check for Endpoint instead of ServerEndpointConfig as it does now.", "id": 166109, "attachment_id": null, "creator": "rstoyanchev@yahoo.com", "creation_time": "2013-03-23T00:26:38Z", "time": "2013-03-23T00:26:38Z", "is_private": false}, {"count": 4, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "This has been fixed in trunk.", "id": 166137, "time": "2013-03-25T15:03:46Z", "bug_id": 54740, "creation_time": "2013-03-25T15:03:46Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "rstoyanchev@yahoo.com", "attachment_id": null, "text": "@HandlesTypes on WsSci is still scanning for ServerEndpointConfig.class but not ServerApplicationConfig.class.", "id": 166143, "time": "2013-03-25T19:04:16Z", "bug_id": 54740, "creation_time": "2013-03-25T19:04:16Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 54740, "attachment_id": null, "id": 166144, "time": "2013-03-25T19:59:11Z", "creator": "markt@apache.org", "creation_time": "2013-03-25T19:59:11Z", "is_private": false, "text": "Sorry. Fixed."}]