[{"count": 0, "tags": [], "creator": "doron@rajwan.org", "attachment_id": null, "id": 50439, "time": "2004-01-13T08:00:29Z", "bug_id": 26083, "creation_time": "2004-01-13T08:00:29Z", "is_private": false, "text": "Working with Ant 1.6.0, there are several problems with creating JAR using \nzipgroupfileset.\n\nProblem #1: filesetmanifest=\"merge\" does not work on some jars. The specific \nerror message is:\nManifest is invalid: The attribute \"Depends-On\" may not occur more than once \nin the same section\n\nProblem #2: When adding signed jars, the result is invalid. Specifically, when \nadding SUN's mail.jar or activation.jar, I get the following error message \n(when trying to use the jar):\nD:\\Development\\infrastructure\\dev\\dist>java -classpath devtools.jar;all-3rd-\nparty.jar ...\nException in thread \"main\" java.lang.SecurityException: no manifiest section \nfor signature file entry javax/activation/D\nataContentHandlerFactory.class\n        at sun.security.util.SignatureFileVerifier.verifySection\n(SignatureFileVerifier.java:260)\n        at sun.security.util.SignatureFileVerifier.process\n(SignatureFileVerifier.java:172)\n        at java.util.jar.JarVerifier.processEntry(JarVerifier.java:239)\n        at java.util.jar.JarVerifier.update(JarVerifier.java:194)\n        ...\n\nProblem #3: There is no way to skip the entire manifiest. Specifically, if I \ntake the jar, and delete all files under META-INF, it will work just fine. \nHowever, there is no way to do that. Adding \n\nProblem #4: duplicate=\"preserve\" gives warnings to screen. I cannot ask it not \nto give these warnings.\n\n\nThe XML fragment for the jar is:\n        <jar destfile=\"${infra.dist}/all-3rd-party.jar\" \n             duplicate=\"preserve\" \n             filesetmanifest=\"skip\">\n            <zipgroupfileset dir=\"${infra.libs}\">\n                <include name=\"**/*.jar\"/>\n                <exclude name=\"javamail/mail.jar\"/>\n                <exclude name=\"activation/activation.jar\"/>\n            </zipgroupfileset>\n        </jar>\n\n\nthanks,\n  Doron."}, {"count": 1, "tags": [], "creator": "bodewig@apache.org", "text": "well, problem #1 is not fixable by Ant, the manifest seems to be invalid.\n\nproblem #3 is fixed by using <zip> instead of <jar> as jars by Ant's definition\nalways have a manifest.", "id": 51464, "time": "2004-01-30T14:10:58Z", "bug_id": 26083, "creation_time": "2004-01-30T14:10:58Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 26083, "attachment_id": null, "id": 88492, "time": "2006-04-26T09:18:15Z", "creator": "wolfgang.brodowski@gebit.de", "creation_time": "2006-04-26T09:18:15Z", "is_private": false, "text": "Using ant-1.6-5 (on any platform) I stumbled over the mentioned problem #2 (from\ndescription). Is there any solution in the meantime planned?\n\nChanged\nOS to \"all\"; \nSeverity to \"major\" - because signed archives are used more and more\n\nwould set priority higher"}, {"count": 3, "tags": [], "text": "I think the underlying problem of #2 here is that Ant doesnt let you merge\nsigned JARs. Is this correct? \n\n1. what is the task declaration you are using\n2. is it that the source files (e.g. activation) are signed?\n\nIt seems that security may have to be handled specially, perhaps by\n (a) not merging security stuff; knowing about signatures and things and\nexcluding them\n (b) somehow treating security stuff specially and doing the correct merging so\nthat packages/classes that were signed in the source are still signed in the\nmerged file.\n\nthe fact that there is no good API to check if a JAR/class is signed makes\ntesting (b) that much harder.", "attachment_id": null, "bug_id": 26083, "id": 88493, "time": "2006-04-26T12:02:56Z", "creator": "stevel@apache.org", "creation_time": "2006-04-26T12:02:56Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 26083, "attachment_id": null, "text": "(In reply to comment #3)\n> I think the underlying problem of #2 here is that Ant doesnt let you merge\n> signed JARs. Is this correct? \n\nNo, ant supports merging jars into one jar by using the mentioned zipgroufileset\nindependent, if the jar is signed or not. With parameter \"duplicate\" you can\ndecide, how to handle duplicates (in any directory) and with parameter\n\"filesetmanifest\" the merging (or not) of included manifest files, which is\nsomehow buggy or incomplete, but not my problem, because the manifest is\nregenerated on signing the newly created archive.\n\n> \n> 1. what is the task declaration you are using\n<jar destfile=\"${libraryname}\" duplicate=\"preserve\">\n    <zipgroupfileset dir=\"${dist}/${lib}\" includes=\"*.jar,*.JAR,*.zip,*.ZIP\" >\n    \t<selector refid=\"extlibs.excludes\"/> <!-- exclude some libs ever -->\n    </zipgroupfileset>\n</jar>\n\n\n> 2. is it that the source files (e.g. activation) are signed?\n\nYes, some of the source jars are signed, some not. I can't check to handle them\ndifferently.\n\n> \n> It seems that security may have to be handled specially, perhaps by\n>  (a) not merging security stuff; knowing about signatures and things and\n> excluding them\n\nYes. Because ant does not support excludes inside a zipgroupfileset (as\nrequested in Bugzilla ID#34403), I created a workaround to remove the disturbing\nsecurity files by repacking the created jar excluding stuff, that I donot want:\n\n<tempfile property=\"templib\" destdir=\"@{destination}\"/>\n<move tofile=\"${templib}\" file=\"@{destination}/@{libraryname}\"/>\n<zip file=\"@{destination}/@{libraryname}\">\n\t<zipfileset src=\"${templib}\">\n\t\t<exclude name=\"META-INF/*.SF\"/>\t\t\t\n\t</zipfileset>\n</zip>\n<delete file=\"${templib}\" quiet=\"true\"/>\n\n>  (b) somehow treating security stuff specially and doing the correct merging so\n> that packages/classes that were signed in the source are still signed in the\n> merged file.\n\nSeems to be problematic, because a signed jar must be signed at the whole and\ncan not be signed partially with different signers, as I know. Correct?\n\n> \n> the fact that there is no good API to check if a JAR/class is signed makes\n> testing (b) that much harder.\n\nAgreed.", "id": 88494, "time": "2006-04-26T12:46:55Z", "creator": "wolfgang.brodowski@gebit.de", "creation_time": "2006-04-26T12:46:55Z", "is_private": false}, {"count": 5, "tags": [], "text": ">>  (b) somehow treating security stuff specially and doing the correct merging so\n>> that packages/classes that were signed in the source are still signed in the\n>> merged file.\n\n>Seems to be problematic, because a signed jar must be signed at the whole and\n>can not be signed partially with different signers, as I know. Correct?\n\nI think you are actually signing packages, not JARs. That's why there is no test\n<issigned jar=\"something\" /> that checks the signature of a \"JAR\". I'd need to\ncheck with our security person, who is away this week. ", "attachment_id": null, "bug_id": 26083, "id": 88501, "time": "2006-04-26T13:37:37Z", "creator": "stevel@apache.org", "creation_time": "2006-04-26T13:37:37Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 26083, "attachment_id": null, "text": "Nope, you always sign the full archive and the mere presence of a file with the\nextension SF in META-INF makes Java's jar loader assume the archive must be\nsigned.\n\nSee http://java.sun.com/j2se/1.4.2/docs/tooldocs/solaris/jarsigner.html, in\nparticular\nhttp://java.sun.com/j2se/1.4.2/docs/tooldocs/solaris/jarsigner.html#DefaultAlgs\n\nSo yes, the only real solution is to exclude any files ending in .SF (or .DSA)\nin META-INF and taking care of the MANIFEST.MF at the same time since the\nmanifest sections for the signatures may need to be removed as well.\n\nImplementing Bug 34403 may provide a good workaround.", "id": 88508, "time": "2006-04-26T15:37:22Z", "creator": "bodewig@apache.org", "creation_time": "2006-04-26T15:37:22Z", "is_private": false}, {"count": 7, "tags": [], "creator": "bodewig@apache.org", "text": "(In reply to comment #6)\n\n> http://java.sun.com/j2se/1.4.2/docs/tooldocs/solaris/jarsigner.html#DefaultAlgs\n\nActually the section titled \"The Signed JAR file\" following that section, but it\ndoesn't have an anchor of its own.", "id": 88509, "time": "2006-04-26T15:39:47Z", "bug_id": 26083, "creation_time": "2006-04-26T15:39:47Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "bodewig@apache.org", "text": "\n\n*** This bug has been marked as a duplicate of bug 46257 ***", "id": 122702, "time": "2008-11-21T06:14:17Z", "bug_id": 26083, "creation_time": "2008-11-21T06:14:17Z", "is_private": false, "attachment_id": null}]