[{"count": 0, "attachment_id": null, "creator": "tobia.caneschi@register.it", "is_private": false, "id": 109731, "time": "2007-10-25T06:23:03Z", "bug_id": 43698, "creation_time": "2007-10-25T06:23:03Z", "tags": [], "text": "Hello,\n\nI'm it specialist of a big italian hoster.\n\nThe problem that i solved is this:\n\nCurrently every major hoster that offers shared hosting service as the problem\nto give a chance to its customers to use rewriterule by Htaccess.\n\nAt the same time there is the problem of maintaining security and privacy (being\na shared environment). This, for us, is currently managed by cgiwrap, which puts\nbetween apache and php/perl and creates a chroot environment where the customer\ncan not exit.\n\nThe rewriterule have become necessary because most famous cms such as WordPress,\nJoomla etc. to use rewriterule for give back to browser the url without query\nstring (the famous permalink) for the search engine indexing improve scoring.\n\nThe problem is that activating the directives rewrite some other directives that\nare very dangerous for a shared hosting is activating too. For example\nAddHandler, SetHandler, ForceType.\n\nThrough these directives in Htaccess file any one of our client (or a cracker\nwith cross-site-scripting) can activate any scripting system on an extension to\nhis choice would not be intercepted by cgiwrap.\n\nAt that point the execution of this script would in a chroot environment where\nthe user can see other users' files.\n\nWith these patches I moved all directives related to activation of executions\ncgi from group FileInfo to group Options (not give to users).\n\nI created this patch for reorganizing groups in allowoverride\n\nThe directives passed by the group that FileInfo to Options is\n--------------------------------------------------------------\nCORE\nForceType, SetHandler, SetOutputFilter, SetInputFilter, AddOutputFilterByType\n\nMOD_ACTION\nAction\n\nMOD_MIME\nAddHandler, AddInputFilter, AddOutputFilter, AddType"}, {"count": 1, "attachment_id": 21041, "bug_id": 43698, "text": "Created attachment 21041\nCore patch\n\nMoved directives from FileInfo group to Options:\nForceType,SetHandler,SetOutputFilter,SetInputFilter,AddOutputFilterByType", "id": 109732, "time": "2007-10-25T06:27:10Z", "creator": "tobia.caneschi@register.it", "creation_time": "2007-10-25T06:27:10Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "text": "Created attachment 21042\nmod_mime patch\n\nMoved some directives from FileInfo to Options group\n\nMOD_MIME\nAddHandler,AddInputFilter,AddOutputFilter,AddType", "attachment_id": 21042, "bug_id": 43698, "id": 109733, "time": "2007-10-25T06:28:24Z", "creator": "tobia.caneschi@register.it", "creation_time": "2007-10-25T06:28:24Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 43698, "text": "Created attachment 21043\nmod_actions patch\n\nMoved directive \"Action\" from FileInfo to Options", "id": 109734, "time": "2007-10-25T06:29:05Z", "creator": "tobia.caneschi@register.it", "creation_time": "2007-10-25T06:29:05Z", "is_private": false, "attachment_id": 21043}, {"attachment_id": null, "tags": [], "creator": "rbowen@apache.org", "text": "The trouble is that these are *NOT* Options, and so adding them to Options makes\nno sense at all.\n\nAdding a new AllowOverride group entirely, I could understand, or, better still,\nadding the kind of handling to every AllowOverride argument that Options has\n(Options[=Option,...]) but moving stuff from one categorization to another\nbreaks existing installations and make the categories seem rather arbitrary.\n", "count": 4, "id": 109735, "time": "2007-10-25T06:35:45Z", "bug_id": 43698, "creation_time": "2007-10-25T06:35:45Z", "is_private": false}, {"count": 5, "attachment_id": null, "creator": "tobia.caneschi@register.it", "text": "it's true, you centered the problem, but in my case create a new group would\nbreaks existing installations too. And then for quickly solution i moved the\ndirective. \n\nI agree with you on the best solution. I just sent this issue to find a solution\nin future versions of apache.\n\n\n(In reply to comment #4)\n> The trouble is that these are *NOT* Options, and so adding them to Options makes\n> no sense at all.\n> \n> Adding a new AllowOverride group entirely, I could understand, or, better still,\n> adding the kind of handling to every AllowOverride argument that Options has\n> (Options[=Option,...]) but moving stuff from one categorization to another\n> breaks existing installations and make the categories seem rather arbitrary.\n> \n\n", "id": 109737, "time": "2007-10-25T06:43:27Z", "bug_id": 43698, "creation_time": "2007-10-25T06:43:27Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "siegfri3d@gmail.com", "attachment_id": null, "id": 128552, "time": "2009-07-06T06:09:57Z", "bug_id": 43698, "creation_time": "2009-07-06T06:09:57Z", "is_private": false, "text": "Any update on this?\n\nIt seems to be an important part of the Apache security, i was wondering exactly the same than this guy and it seems there is no solution.\nIt would be great if we could allow/disallow specific directives with Allowoverride, not just allow/disallow groups, just like you did with Options=directive in httpd 2.2, but for fileinfo and others as addhandler/sethandler/action are quite dangerous on web hostings and a few people care about it :(\nAlso a default setting for allowoverride to None would be great in future versions, it would make people understand why allowoverride has to be configured carefully..\nThanks a lot, i hope you will do something!"}, {"count": 7, "tags": [], "bug_id": 43698, "text": "This can be achieved in trunk since 2.3.14 with the new AllowOverrideList directive.", "id": 149295, "time": "2011-09-15T21:20:25Z", "creator": "sf@sfritsch.de", "creation_time": "2011-09-15T21:20:25Z", "is_private": false, "attachment_id": null}, {"count": 8, "text": "2.4.1 is released, closing", "bug_id": 43698, "is_private": false, "id": 154201, "time": "2012-02-26T16:47:23Z", "creator": "sf@sfritsch.de", "creation_time": "2012-02-26T16:47:23Z", "tags": [], "attachment_id": null}]