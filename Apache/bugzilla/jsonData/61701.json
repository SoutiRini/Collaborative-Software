[{"count": 0, "attachment_id": 35478, "bug_id": 61701, "text": "Created attachment 35478\nsimple-table-named-range.xlsx\n\nWhen a named range is defined as a reference to the formula 'SUM(Table1[c])', calling `name.getSheetName()` throws an IllegalArgumentException.\n\njava.lang.IllegalArgumentException: Invalid CellReference: SUM(Table1[c])\n\tat org.apache.poi.ss.util.CellReference.separateRefParts(CellReference.java:395)\n\tat org.apache.poi.ss.util.CellReference.<init>(CellReference.java:113)\n\tat org.apache.poi.ss.util.AreaReference.<init>(AreaReference.java:60)\n\tat org.apache.poi.xssf.usermodel.XSSFName.getSheetName(XSSFName.java:295)\n\nFull source code to reproduce the issue:\n\npublic class Main {\n    public static void main(String argv[]) {\n        System.out.println(\"POI 3.17\");\n        try {\n            InputStream input = Main.class.getClassLoader().getResourceAsStream(\"simple-table-named-range.xlsx\");\n            Workbook workbook = WorkbookFactory.create(input);\n            Name name = workbook.getName(\"total\");\n            System.out.println(\"workbook.getName(\\\"total\\\").getSheetName() returned: \" + name.getSheetName());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n\nThe Excel file used in this sample is attached.", "id": 201806, "time": "2017-10-31T08:34:10Z", "creator": "viktor@vaadin.com", "creation_time": "2017-10-31T08:34:10Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 61701, "is_private": false, "id": 201811, "time": "2017-10-31T09:40:46Z", "creator": "viktor@vaadin.com", "creation_time": "2017-10-31T09:40:46Z", "tags": [], "text": "UPD: The issue can be reproduced without using tables. The same exception is thrown when a `Name` refers to a simple sum formula like \"SUM($A$1:$C$1)\".\n\nThe code below shows how to reproduce the issue without an excel file:\n\ntry {\n    // Start with Creating a workbook and worksheet object\n    XSSFWorkbook workbook = new XSSFWorkbook();\n    XSSFSheet sheet = workbook.createSheet(\"Sheet1\");\n\n    // Create a row with a three number cells\n    XSSFRow row = sheet.createRow(0);\n    for (int i = 0; i < 3; i++) {\n        XSSFCell cell = row.createCell(i);\n        cell.setCellValue(i + 1);\n    }\n\n    // Create a name referring to a formula\n    Name name = workbook.createName();\n    name.setNameName(\"Total\");\n    name.setRefersToFormula(\"SUM($A$1:$C$1)\");\n\n    System.out.println(\"workbook.getName(\\\"Total\\\")\n        .getSheetName() returned: \" + name.getSheetName());\n} catch (Exception e) {\n    e.printStackTrace();\n}\n\n\nNOTE: it looks like in this case the error is in the `org.apache.poi.ss.util.AreaReference#isContiguous` method which wrongly returns true for formulas like \"SUM(Table1[c])\" and \"SUM($A$1:$C$1)\"."}, {"count": 2, "tags": [], "bug_id": 61701, "attachment_id": null, "text": "I added a disabled test case in https://svn.apache.org/viewvc/poi/trunk/src/ooxml/testcases/org/apache/poi/xssf/eventusermodel/TestXSSFReader.java?r1=1813863&r2=1813862&pathrev=1813863\nand https://svn.apache.org/viewvc?view=revision&revision=1813864\n\nThe AreaReference and CellReference constructors don't currently handle values like: SUM(Table1[c])\n\njava.lang.IllegalArgumentException: Invalid CellReference: SUM(Table1[c])", "id": 201812, "time": "2017-10-31T09:56:53Z", "creator": "fanningpj@yahoo.com", "creation_time": "2017-10-31T09:56:53Z", "is_private": false}]