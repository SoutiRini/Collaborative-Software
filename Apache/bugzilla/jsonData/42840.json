[{"count": 0, "tags": [], "bug_id": 42840, "is_private": false, "id": 105200, "creation_time": "2007-07-09T02:39:05Z", "time": "2007-07-09T02:39:05Z", "creator": "keiichi.fujino@gmail.com", "text": "I noticed the following codes. \n\norg.apache.catalina.tribes.tipis.AbstractReplicatedMap.ping(long timeout) is \nas follows.\n\n   protected void ping(long timeout) throws ChannelException {\n      \n      .... omits \n      \n       //update our map of members, expire some if we didn't receive a ping \nback\n       synchronized (mapMembers) {\n           Iterator it = mapMembers.entrySet().iterator();\n           long now = System.currentTimeMillis();\n           while ( it.hasNext() ) {\n               Map.Entry entry = (Map.Entry)it.next();\n               long access = ((Long)entry.getValue()).longValue(); \n               if ( (now - access) > timeout ) memberDisappeared((Member)\nentry.getKey());\n           }\n       }//synch\n   }\n   \n(now - access) If > timeout is ture, memberDisappeared((Member)entry.getKey()) \nis executed. \nAnd org.apache.catalina.tribes.tipis.AbstractReplicatedMap.memberDisappeared\n(Member member) is as follows.  \n\n   public void memberDisappeared(Member member) {\n       boolean removed = false;\n       synchronized (mapMembers) {\n           removed = (mapMembers.remove(member) != null );\n       }\n       \n       .... omits \n       \n    }\n   \nmember(argument) is removeed from mapMembers(instance of HashMap). \n\nAs a result, when The 258th line Map.Entry entry=(Map.Entry) it.next() is \nexecuted again, \njava.util.ConcurrentModificationException is thrown.", "attachment_id": null}, {"count": 1, "tags": [], "creator": "fhanik@apache.org", "text": "Many thanks for the detailed report, the member is now removed directly from the\niterator, should prevent the concurrent modification exception\n\nFilip", "id": 105225, "time": "2007-07-09T13:54:26Z", "bug_id": 42840, "creation_time": "2007-07-09T13:54:26Z", "is_private": false, "attachment_id": null}]