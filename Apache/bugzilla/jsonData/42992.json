[{"count": 0, "tags": [], "creator": "carenas@sajinet.com.pe", "attachment_id": null, "id": 106016, "time": "2007-07-28T21:18:47Z", "bug_id": 42992, "creation_time": "2007-07-28T21:18:47Z", "is_private": false, "text": "as shown by following output excerpt from make check :\n\ntestatomic.c: In function 'check_basic_atomics':\ntestatomic.c:84: warning: passing argument 1 of 'apr_atomic_casptr' from\nincompatible pointer type\ntestatomic.c:91: warning: passing argument 1 of 'apr_atomic_casptr' from\nincompatible pointer type\ntestatomic.c:98: warning: passing argument 1 of 'apr_atomic_casptr' from\nincompatible pointer type\n\nproblem is only present in the 0.9 branch including the current HEAD and the\nlast released version 0.9.14 and is triggered by a mismatch in the first\nparameter pointer which is defined in all architectures as \"volatile void **\"\nbut is defined in the test as a dereference to \"void *\" (netware has a different\nABI, presumably by mistake and uses void **)"}, {"count": 1, "tags": [], "bug_id": 42992, "attachment_id": null, "text": "I don't see the warning and neither the dereference to \"void *\" -- can't\ndereference void pointers..\n\nWhich compiler are you using? version?", "id": 106017, "time": "2007-07-28T22:37:39Z", "creator": "davi@apache.org", "creation_time": "2007-07-28T22:37:39Z", "is_private": false}, {"count": 2, "tags": [], "creator": "carenas@sajinet.com.pe", "attachment_id": 20560, "text": "Created attachment 20560\nuses volatile void * as the first parameter for apr_atomic_casptr for everyone but netware\n\n#ifdef required so that NETWARE can be kept using void * and respecting current\nABI (for 0.9.x branch).\n\nif ABI doesn't need to be kept stable and is better to use the same ABI that\n1.x has then ifdef could be removed and the first parameter changed in\ninclude/apr_atomic.h (can provide a patch as well, as that is what I did for my\nown tree which uses apr statically and I don't care about ABI\nincompatibilities)", "id": 106018, "time": "2007-07-28T23:42:34Z", "bug_id": 42992, "creation_time": "2007-07-28T23:42:34Z", "is_private": false}, {"id": 106019, "tags": [], "bug_id": 42992, "is_private": false, "count": 3, "text": "got warning with either gcc-4.1.2 or gcc-3.4.6 in amd64 linux as shown below :\n\n$ gcc -v\nUsing built-in specs.\nTarget: x86_64-pc-linux-gnu\nConfigured with: /var/tmp/portage/sys-devel/gcc-4.1.2/work/gcc-4.1.2/configure -\n-prefix=/usr --bindir=/usr/x86_64-pc-linux-gnu/gcc-bin/4.1.2 --includedir=/usr/l\nib/gcc/x86_64-pc-linux-gnu/4.1.2/include --datadir=/usr/share/gcc-data/x86_64-pc\n-linux-gnu/4.1.2 --mandir=/usr/share/gcc-data/x86_64-pc-linux-gnu/4.1.2/man --in\nfodir=/usr/share/gcc-data/x86_64-pc-linux-gnu/4.1.2/info --with-gxx-include-dir=\n/usr/lib/gcc/x86_64-pc-linux-gnu/4.1.2/include/g++-v4 --host=x86_64-pc-linux-gnu\n --build=x86_64-pc-linux-gnu --disable-altivec --disable-nls --with-system-zlib \n--disable-checking --disable-werror --enable-secureplt --disable-libunwind-excep\ntions --enable-multilib --disable-libmudflap --disable-libssp --enable-languages\n=c,c++,java,fortran --enable-shared --enable-threads=posix --enable-__cxa_atexit\n --enable-clocale=gnu\nThread model: posix\ngcc version 4.1.2 (Gentoo 4.1.2)\n$ make testatomic.o\ngcc -g -O2 -pthread   -DHAVE_CONFIG_H -DLINUX=2 -D_REENTRANT -D_GNU_SOURCE  \n-I../include  -c testatomic.c\ntestatomic.c: In function 'check_basic_atomics':\ntestatomic.c:84: warning: passing argument 1 of 'apr_atomic_casptr' from\nincompatible pointer type\ntestatomic.c:91: warning: passing argument 1 of 'apr_atomic_casptr' from\nincompatible pointer type\ntestatomic.c:98: warning: passing argument 1 of 'apr_atomic_casptr' from\nincompatible pointer type\n\n", "time": "2007-07-28T23:48:38Z", "creator": "carenas@sajinet.com.pe", "creation_time": "2007-07-28T23:48:38Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "carenas@sajinet.com.pe", "attachment_id": null, "id": 106020, "time": "2007-07-28T23:58:26Z", "bug_id": 42992, "creation_time": "2007-07-28T23:58:26Z", "is_private": false, "text": "my comment about a \"dereference for void *\" was obviously incorrect, what I\nmeant to refer to was the use of the \"address of\" operator for casptr as the\nfirst parameter of apr_atomic_casptr as shown by the following excerpt from\ntestatomic.c's check_basic_atomics.\n\n  void *casptr;\n  casptr = NULL;\n  oldptr = apr_atomic_casptr(&casptr, &object1, 0);\n\nthe definition (from include/apr_atomic.h) for apr_atomic_casptr says :\n\n  void *apr_atomic_casptr(volatile void **mem, void *with, const void *cmp);"}, {"count": 5, "tags": [], "text": "Patch committed to the 0.9.x branch in revision 560724:\n\nhttp://svn.apache.org/viewvc?view=rev&revision=560724\n", "attachment_id": null, "id": 106023, "creator": "davi@apache.org", "time": "2007-07-29T08:02:06Z", "bug_id": 42992, "creation_time": "2007-07-29T08:02:06Z", "is_private": false}]