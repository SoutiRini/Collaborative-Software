[{"count": 0, "attachment_id": null, "creator": "fpahl@web.de", "is_private": false, "id": 52035, "time": "2004-02-10T08:39:30Z", "bug_id": 26817, "creation_time": "2004-02-10T08:39:30Z", "tags": [], "text": "In the example below, changing color-interpolation-filters has no effect.\nThe alpha value of .5 is transformed into a blue value of .5, whose meaning\nshould depend on the value of color-interpolation-filters.\n\nAn observation that might help to locate the debug:\norg.apache.batik.ext.awt.image.renderable.AbstractColorInterpolationRable.setCol\norSpaceLinear is called with the correct value, but the associated methods \ngetColorSpaceLinear and getOperationColorSpace are never called.\n\n(Adobe SVG Viewer does give heed to color-interpolation-filters, but also\nto color-interpolation, which should be irrelevant here as far as I can see,\nso its display is not necessarily a correct reference.)\n\n<?xml version=\"1.0\" ?>\n<svg width=\"600\" height=\"600\"\nxmlns:xlink=\"http://www.w3.org/1999/xlink\"\ncolor-interpolation-filters=\"linearRGB\"\ncolor-rendering=\"optimizeQuality\">\n<defs>\n  <filter id=\"id1\" filterUnits=\"userSpaceOnUse\" x=\"200\" y=\"200\" width=\"200\" \nheight=\"200\">\n    <feFlood flood-opacity=\".5\" />\n    <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0  0 0 0 0 0  0 0 0 1 0  0 0 0 \n0 1\" />\n  </filter>\n</defs>\n<g filter=\"url(#id1)\" />\n</svg>"}, {"count": 1, "attachment_id": null, "creator": "fpahl@web.de", "is_private": false, "id": 52057, "time": "2004-02-10T15:21:09Z", "bug_id": 26817, "creation_time": "2004-02-10T15:21:09Z", "tags": [], "text": "Here's a better example file that illustrates the different color-interpolation\nbugs in Batik and the Adobe Viewer; I'm submitting the same example to Adobe.\nThe four squares should have exactly the same color. There are no processes\nthat involve the color-interpolation property, so there should be no vertical\ndifferences. The color-interpolation-filters property is set to \"sRGB\", so\nthe opacity value of .6 rotated into the blue component by the color matrix\nfilter primitive should have the same result as the 0x99 blue component of\nthe upper flood filter primitive (0x99 / 0xff = .6) -- so there should be no\nhorizontal differences. The Adobe Viewer shows a vertical difference, indicating\nthat it is using the color-interpolation property where it shouldn't, and Batik\nshows a horizontal difference, indicating that it isn't using the\ncolor-interpolation-filters property where it should. (As in the first\nexample submitted with the initial bug report, the Batik display doesn't\nchange if you change the value of the color-interpolation-filters property.)\n\n<?xml version=\"1.0\" ?>\n<svg width=\"300\" height=\"300\" color-interpolation-filters=\"sRGB\" color-\nrendering=\"optimizeQuality\">\n<defs>\n  <filter id=\"flood\" filterUnits=\"userSpaceOnUse\" x=\"50\" y=\"100\" width=\"99\" \nheight=\"99\">\n    <feFlood flood-color=\"#009\" />\n  </filter>\n  <filter id=\"matrix\" filterUnits=\"userSpaceOnUse\" x=\"150\" y=\"100\" width=\"99\" \nheight=\"99\">\n    <feFlood flood-opacity=\".6\" />\n    <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0  0 0 0 0 0  0 0 0 1 0  0 0 0 \n0 1\" />\n  </filter>\n</defs>\n<g filter=\"url(#flood)\" transform=\"translate(0,-50)\" color-\ninterpolation=\"linearRGB\" />\n<g filter=\"url(#flood)\" transform=\"translate(0,50)\" color-\ninterpolation=\"sRGB\" />\n<g filter=\"url(#matrix)\" transform=\"translate(0,-50)\" color-\ninterpolation=\"linearRGB\" />\n<g filter=\"url(#matrix)\" transform=\"translate(0,50)\" color-\ninterpolation=\"sRGB\" />\n</svg>\n"}, {"count": 2, "tags": [], "bug_id": 26817, "is_private": false, "text": "Hi Felix,\n\n   Sorry to be slow about this, but this stuff always makes my head hurt.\n\n   You are correct that there is a bug in Batik here.  feColorMatrix\nalways tags it's output as Linear sRGB.  BTW color-interpolation does\napply to the compositing of child content with it's parent.  It is\nnot clear that there should be 'visible' differences here (as it\nsimply specifies that the child should be composited in that colorspace\nnot that the child data is in that colorspace).\n\n   The fix will probably be delivered soon.", "id": 52587, "time": "2004-02-19T19:03:30Z", "creator": "deweese@apache.org", "creation_time": "2004-02-19T19:03:30Z", "attachment_id": null}]