[{"count": 0, "tags": [], "creator": "davor.cubranic@sap.com", "attachment_id": null, "id": 119142, "time": "2008-07-30T13:14:50Z", "bug_id": 45508, "creation_time": "2008-07-30T13:14:50Z", "is_private": false, "text": "Formula evaluation seems to be done eagerly, so that it tries to evaluate expressions in an IF statement that should be guarded when their inputs are incorrect. As a result, these formulas will throw a RuntimeException, for example:\njava.lang.RuntimeException: Unexpected eval type (org.apache.poi.hssf.record.formula.eval.ErrorEval)\n\tat org.apache.poi.hssf.record.formula.functions.Offset.evaluateDoubleArg(Offset.java:320)\n\tat org.apache.poi.hssf.record.formula.functions.Offset.evaluateIntArg(Offset.java:284)\n\tat org.apache.poi.hssf.record.formula.functions.Offset.evaluate(Offset.java:213)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.invokeOperation(HSSFFormulaEvaluator.java:470)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateCell(HSSFFormulaEvaluator.java:386)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.internalEvaluate(HSSFFormulaEvaluator.java:338)\n\tat org.apache.poi.hssf.usermodel.HSSFFormulaEvaluator.evaluateInCell(HSSFFormulaEvaluator.java:228)\n\tat [...]\nFor a formula \"IF (A2=\"\", \"\", OFFSET(E6:I56, A2-1, 1, 1, 1))\".\n\nI'm attaching an XLS file that can be used to reproduce this. It is interesting that a simpler IF clause (e.g., \"IF (A2=\"\", \"\", A2-1)\"), evaluates correctly."}, {"count": 1, "tags": [], "creator": "josh@apache.org", "attachment_id": null, "id": 119371, "time": "2008-08-04T11:34:28Z", "bug_id": 45508, "creation_time": "2008-08-04T11:34:28Z", "is_private": false, "text": "This was probably fixed with the patch for bug 45289 (svn r675853).\n\nYou are right about POI doing 'eager' evaluation of function arguments.  This is a systemic design flaw that causes both performance issues and some logical difficulties.  These are typically related to dynamic area references like OFFSET and INDIRECT (see documentation in the interface FreeRefFunction for more details).  In future, the POI evaluator will probably be modified to perform all argument evaluation as encountered, but that change will be big.  The current evaluation model should be able to handle (Excel standard) errors in evaluated arguments and still produce results consistent with what Excel would do.\n\nThe problem encountered here was actually at line 338 of Offset.java@629821.  Somehow the expression \"A2-1\" had evaluated to an Excel error (which is OK).  Hoever, that Excel error should never have become a RuntimeException.  It looks like this bug got fixed in r675853.  Under normal execution, Excel errors may propagate up through the evaluation stack, possibly being ignored depending on conditions higher up the execution tree.\n\nIf you still get a chance to add a spreadsheet with this problem, it would help us augment the unit tests to make sure we have this one covered."}, {"count": 2, "tags": [], "creator": "josh@apache.org", "attachment_id": null, "id": 131941, "time": "2009-11-13T13:55:35Z", "bug_id": 45508, "creation_time": "2009-11-13T13:55:35Z", "is_private": false, "text": "The suggested \"short-circuit clause evaluation in IFs\" has been implemented in bug 48195 (performance improvement)."}]