[{"count": 0, "tags": [], "text": "I have created my own antlib that contains macrodefs and scripdefs. I reference\nit using a namespace declaration. It works fine until I invoke my tasks from a\nchild script called by subant.\nInvoking a scriptdef task results in \"Script repository not found for ...\"\nthrown from ScriptDefBase.getScript.\nInvoking a macrodef has another sideeffect.\nIf I have something like:\n<macrodef name=\"mymacro>\n<attribute name=\"basedir\" default=\"${basedir}\"/>\n....\nThe default is being evaluated once for the parent script and then is passed\nalong to the child script.\n\nI went throught the code and I think the problem is that\nComponentHelper.initSubProject passes all the custom typedefs and taskdefs to\nthe child script.\nThis works well with regular taskdefs and typedefs because they are essentialy\nstatic, however scriptdefs and macrodefs are not. Well maybe only macrodefs -\nthe scriptdef issue seems to be just a bug.", "attachment_id": null, "id": 103458, "creator": "sanduatwork@hotmail.com", "time": "2007-05-21T19:19:16Z", "bug_id": 42482, "creation_time": "2007-05-21T19:19:16Z", "is_private": false}, {"text": "...I think I see what you are saying. The second time the antlib declaration is\nencountered the antlib isnt re-evaluated, so the old defaults are retained.\n\nCan you include the antlib.xml and full stack trace...this will help with\ndiagnostics. \n\nWe'll have to think about what to do here.", "tags": [], "bug_id": 42482, "attachment_id": null, "count": 1, "id": 103488, "time": "2007-05-22T02:34:06Z", "creator": "stevel@apache.org", "creation_time": "2007-05-22T02:34:06Z", "is_private": false}, {"text": "I'm wondering if this issue has surfaced for me using Ant 1.8.2.  In my case, I also have an anlib with a scriptdef and I'm getting the same exception when running the script using AntUnit.  (I'm assuming, though haven't verified, that AntUnit is doing something akin to a subant to invoke the build targets.)\n\nIs there any hope this can or will be fixed?\n\nIf needed I can try to create a (much) simplified example and attach it.", "tags": [], "bug_id": 42482, "attachment_id": null, "count": 2, "id": 143655, "time": "2011-01-26T07:05:45Z", "creator": "rich@steelezone.net", "creation_time": "2011-01-26T07:05:45Z", "is_private": false}, {"text": "a testcase would help a lot", "tags": [], "bug_id": 42482, "attachment_id": null, "count": 3, "id": 143666, "time": "2011-01-26T10:44:29Z", "creator": "bodewig@apache.org", "creation_time": "2011-01-26T10:44:29Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 42482, "text": "(In reply to comment #3)\n> a testcase would help a lot\n\nStill trying to create a simple test case without any luck.  Can you give me some ideas of what could cause ScriptDefBase.getScript() to throw the \"Script repository not found\" exception?  That might help me narrow down a simple example.", "id": 143781, "time": "2011-01-28T21:47:02Z", "creator": "rich@steelezone.net", "creation_time": "2011-01-28T21:47:02Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 42482, "attachment_id": null, "text": "(In reply to comment #4)\n> Still trying to create a simple test case without any luck.  Can you give me\n> some ideas of what could cause ScriptDefBase.getScript() to throw the \"Script\n> repository not found\" exception?  That might help me narrow down a simple\n> example.\n\nOK, narrowed it down just a bit, but not enough to attach as a simple example.  The antlib containing the macrodef and scriptdef is bundled in a jar file, from which I can specify as the classpath in the taskdef.  This works fine in a normal build, but it breaks when I run it from antunit with this stack trace:\n\nC:\\dev\\projects\\ant-shared-build\\src\\main\\resources\\com\\example\\ant\\sharedbuild\\antlib.xml:40: Script repository not found for antlib:com.example.ant.sharedbuild:import\n        at org.apache.tools.ant.taskdefs.optional.script.ScriptDefBase.getScript(ScriptDefBase.java:58)\n        at org.apache.tools.ant.taskdefs.optional.script.ScriptDefBase.setDynamicAttribute(ScriptDefBase.java:92)\n        at org.apache.tools.ant.IntrospectionHelper.setAttribute(IntrospectionHelper.java:394)\n        at org.apache.tools.ant.RuntimeConfigurable.maybeConfigure(RuntimeConfigurable.java:388)\n        at org.apache.tools.ant.RuntimeConfigurable.maybeConfigure(RuntimeConfigurable.java:344)\n        at org.apache.tools.ant.Task.maybeConfigure(Task.java:202)\n        at org.apache.tools.ant.UnknownElement.configure(UnknownElement.java:196)\n        at org.apache.tools.ant.UnknownElement.maybeConfigure(UnknownElement.java:163)\n        at org.apache.tools.ant.Task.perform(Task.java:347)\n        at org.apache.tools.ant.taskdefs.Sequential.execute(Sequential.java:68)\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n        at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n        at org.apache.tools.ant.Task.perform(Task.java:348)\n        at org.apache.tools.ant.taskdefs.MacroInstance.execute(MacroInstance.java:398)\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n        at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n        at org.apache.tools.ant.Task.perform(Task.java:348)\n        at org.apache.tools.ant.Target.execute(Target.java:390)\n        at org.apache.tools.ant.helper.ProjectHelper2.parse(ProjectHelper2.java:180)\n        at org.apache.tools.ant.ProjectHelper.configureProject(ProjectHelper.java:82)\n        at org.apache.ant.antunit.AntUnit.createProjectForFile(AntUnit.java:483)\n        at org.apache.ant.antunit.AntUnit.doFile(AntUnit.java:231)\n        at org.apache.ant.antunit.AntUnit.doResourceCollection(AntUnit.java:216)\n        at org.apache.ant.antunit.AntUnit.execute(AntUnit.java:187)\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)\n        at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:597)\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\n        at org.apache.tools.ant.Task.perform(Task.java:348)\n        at org.apache.tools.ant.Target.execute(Target.java:390)\n        at org.apache.tools.ant.Target.performTasks(Target.java:411)\n        at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1399)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1368)\n        at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1251)\n        at org.apache.tools.ant.Main.runBuild(Main.java:809)\n        at org.apache.tools.ant.Main.startAnt(Main.java:217)\n        at org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\n        at org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\n\nHowever, if instead of using the jar file as the taskdef classpath I use an exploded directory, then the tests run fine.\n\nSo, is there some interaction in classloading from a jar file and antlibs containing macrodefs and scriptdefs?", "id": 143825, "time": "2011-01-31T07:45:09Z", "creator": "rich@steelezone.net", "creation_time": "2011-01-31T07:45:09Z", "is_private": false}, {"count": 6, "tags": [], "text": "Got my answer, though it's a bit embarrassing:  The problem is I'm running my tests before creating the jar file, so of course trying to use the jar file in my classpath won't work.\n\nIn my defense I was led astray by the exception, because I didn't get the typical error about the typedef not being defined, etc.", "attachment_id": null, "id": 143899, "creator": "rich@steelezone.net", "time": "2011-02-02T08:22:53Z", "bug_id": 42482, "creation_time": "2011-02-02T08:22:53Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 42482, "attachment_id": 26596, "id": 143908, "time": "2011-02-02T09:58:07Z", "creator": "sanduatwork@hotmail.com", "creation_time": "2011-02-02T09:58:07Z", "is_private": false, "text": "Created attachment 26596\nTestcase to reproduce both bugs"}]