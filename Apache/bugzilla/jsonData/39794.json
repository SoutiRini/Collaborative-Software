[{"count": 0, "tags": [], "creator": "mjesseni@edu.uni-klu.ac.at", "text": "In my application scenario I need to be able to find all resources located \nwithin a given package. Therefore, I use the getResource method to find first \nthe package along the classpath and afterwards I list all resources located \nwithin this package. I need this functionality to find all available Hibernate \nmapping documents so that I can dynamically configure Hibernate and dont need \nto know exact names of mapping documents. However, the WebappClassLoader does \nnot return URLs for packages. For example\n\nThread.currentThread().getContextClassLoader().getResource(\"path/to/package\");\n\nreturns null. The workaround for this issue is to place a resource with a \nfixed name in this package, so that this resource can be found. From the \nreturned URL I extract the directory and than list the resources within that \ndirectory. \n\nHowever, the getResource method of the JVM classloader implementation also \nreturns URLs for packages so that this workaround is not needed I 'normal' \njava applications. I am not sure whether or not this is a bug of the webapp \nclassloader implementation.\n\nI use tomcat 5.0.30 and Java 1.5.0_07.\n\nKind regards\nMarkus jessenitschnig", "id": 90121, "time": "2006-06-13T06:38:49Z", "bug_id": 39794, "creation_time": "2006-06-13T06:38:49Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 39794, "attachment_id": null, "text": "This works as you require in the latest 5.5.x code from svn.\n\nI have had a quick look at the change log but can't see any obvious patch that\nwould have fixed this.\n\nI am going to resolve this as fixed. If you particularly want this fixed in the\n5.0.x branch feel free to re-open it but as far as I am aware there is unlikely\nto be another 5.0.x release so it will get closed again as WONTFIX.", "id": 90176, "time": "2006-06-14T01:44:36Z", "creator": "markt@apache.org", "creation_time": "2006-06-14T01:44:36Z", "is_private": false}]