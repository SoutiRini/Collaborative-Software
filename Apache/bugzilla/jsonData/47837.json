[{"count": 0, "tags": [], "bug_id": 47837, "text": "RequestDispatcher for root context has incorrect requestURI (extra \"/\" at start).  Here's a slightly ugly test case:\n\n{code}\n\t@Test\n\tpublic void testDispatcherWithNonRootContext() throws Exception {\n\t\tString value = getRequestURIFor(\"/bucket\", \"/bar\");\n\t\t// Passes\n\t\tassertEquals(\"/bucket/bar\", value);\n\t}\n\n\t@Test\n\tpublic void testDispatcherWithRootContext() throws Exception {\n\t\tString value = getRequestURIFor(\"/\", \"/bar\");\n\t\t// Fails\n\t\tassertEquals(\"/bar\", value);\n\t}\n\n\tprivate String getRequestURIFor(String root, String path) throws IllegalArgumentException, IllegalAccessException {\n\t\tTomcat tomcat = new Tomcat();\n\t\tStandardContext standardContext = tomcat.addContext(root, System.getProperty(\"java.io.tmpdir\"));\n\t\tTomcat.addServlet(standardContext, \"spam\", \"NoSuchClass\");\n\t\tstandardContext.addServletMapping(\"/\", \"spam\", false);\n\t\tstandardContext.getMapper().setContext(\"spam\", null, null);\n\t\tApplicationContext applicationContext = new ApplicationContext(\"/foo\", standardContext);\n\t\tRequestDispatcher requestDispatcher = applicationContext.getRequestDispatcher(path);\n\t\tField field = findField(requestDispatcher.getClass(), \"requestURI\");\n\t\tfield.setAccessible(true);\n\t\treturn(String) field.get(requestDispatcher);\n\t}\n\n\tprivate Field findField(Class<?> clazz, String name) {\n\t\tAssert.notNull(clazz, \"Class must not be null\");\n\t\tAssert.isTrue(name != null, \"Name of the field must be specified\");\n\t\tClass<?> searchType = clazz;\n\t\twhile (!Object.class.equals(searchType) && searchType != null) {\n\t\t\tField[] fields = searchType.getDeclaredFields();\n\t\t\tfor (Field field : fields) {\n\t\t\t\tif (name.equals(field.getName())) {\n\t\t\t\t\treturn field;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsearchType = searchType.getSuperclass();\n\t\t}\n\t\treturn null;\n\t}\n{code}\n\nSuggested fix would be to check for the length of the context path in ApplicationContext.getRequestDispatcher() around line 430:\n\n{code}\nif (context.getPath().length()>1) {\n    uriCC.append(context.getPath(), 0, context.getPath().length());\n}\n{code}\n\n(add the if statement).", "id": 130378, "time": "2009-09-14T09:11:57Z", "creator": "david_syer@hotmail.com", "creation_time": "2009-09-14T09:11:57Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "\"\" is the correct way to refer to the ROOT context, not \"/\".", "is_private": false, "id": 130380, "creator": "markt@apache.org", "time": "2009-09-14T09:29:15Z", "bug_id": 47837, "creation_time": "2009-09-14T09:29:15Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 47837, "is_private": false, "id": 130385, "time": "2009-09-14T09:59:03Z", "creator": "david_syer@hotmail.com", "creation_time": "2009-09-14T09:59:03Z", "tags": [], "text": "Fair enough.  Could Tomcat.addContext() not correct the mistake (or throw an obvious exception)?"}]