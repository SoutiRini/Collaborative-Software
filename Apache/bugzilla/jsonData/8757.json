[{"count": 0, "tags": [], "bug_id": 8757, "attachment_id": null, "is_private": false, "id": 15363, "time": "2002-05-02T23:01:14Z", "creator": "3vtt-f678@dea.spamcon.org", "creation_time": "2002-05-02T23:01:14Z", "text": "//  Create a worksheet.xls with a formula C1 == (A1+B1).\n//  Copy worksheet.xls to worksheet2.xls.\n\n//  Open worksheet2.xls in Excel.\n//  Notice, \"#VALUE!\" is in C1.\n//  Click C1.\n//  Click Formula Editor (text input next to equal sign).\n//  Click Spreadsheet.\n//  C1 changes to 5.\n//  Save.\n\n//  Open worksheet.xls in Excel.\n//  Save.\n//  (I did this because the worksheet.xls created/edited by POI\n//   is around 5k and the one created by Excel is 13k.)\n\n//  Performed diff of BiffViewer output on worksheet.xls and worksheet2.xls\n//  and only difference appears to be the value of the formula (NaN vs. 5).\n\n//  Did a pure hex compare (in emacs) against worksheet.xls and worksheet2.xls \n//  and saw other differences which are not reflected in BiffViewer output; \n//  those differences are not shown in the bfd mode in BiffViewer either.\n\nimport java.io.*;\nimport java.util.*;\nimport org.apache.poi.hssf.usermodel.*;\nimport org.apache.poi.hssf.util.*;\nimport org.apache.poi.poifs.filesystem.*;\n\n\npublic class FormulaProblem implements Serializable\n{\n    public static void\n    main(String args[])\n        throws Exception\n    {\n        if (args[0].equals(\"create\")) {\n            create();\n            return;\n        }\n        if (args[0].equals(\"edit\")) {\n            edit();\n            return;\n        }\n        System.out.println(\"pass in either 'create' or 'edit'\");\n    }\n\n\n    public static void\n    create()\n        throws Exception\n    {\n        System.out.println(\"create workbook.xls\");\n\n        HSSFWorkbook workbook = new HSSFWorkbook();\n        HSSFSheet sheet = workbook.createSheet();\n        HSSFRow row = sheet.createRow((short) 0);\n        HSSFCell cell = row.createCell((short) 0);\n        cell.setCellValue(2);\n        cell.setCellType(HSSFCell.CELL_TYPE_NUMERIC);\n\n        cell = row.createCell((short) 1);\n        cell.setCellValue(3);\n        cell.setCellType(HSSFCell.CELL_TYPE_NUMERIC);\n\n        cell = row.createCell((short) 2);\n        cell.setCellFormula(\"(A1+B1)\");\n\n        FileOutputStream out = new FileOutputStream(\"workbook.xls\");\n        workbook.write(out);\n        out.close();\n    }\n\n\n    public static void\n    edit()\n        throws Exception\n    {\n        System.out.println(\"edit workbook.xls\");\n\n        POIFSFileSystem fileSystem =\n            new POIFSFileSystem(new FileInputStream(\"workbook.xls\"));\n\n        HSSFWorkbook workbook = new HSSFWorkbook(fileSystem);\n        HSSFSheet sheet = workbook.getSheetAt(0);\n        HSSFRow row = sheet.getRow(0);\n        HSSFCell cell = row.getCell((short) 2);\n        cell.setCellFormula(\"(A1+B1)\");\n\n        FileOutputStream out = new FileOutputStream(\"workbook.xls\");\n        workbook.write(out);\n        out.close();        \n    }\n}"}, {"count": 1, "tags": [], "bug_id": 8757, "attachment_id": null, "id": 15364, "creation_time": "2002-05-02T23:04:19Z", "time": "2002-05-02T23:04:19Z", "creator": "3vtt-f678@dea.spamcon.org", "text": "this is win 2000 (5.00.2195) Service Pack 2,\n        office 2000 (Excel 9.0.2720), \n        latest POI code (05/02/2002)in jakarta-poi\\src\\java", "is_private": false}, {"count": 2, "tags": [], "creator": "avik@apache.org", "attachment_id": null, "text": "Ok, A1+B1 results in a #value, while sum(A1,B1) has the value as 0, both when \nwritten from poi. Need to see why value gets saved to NaN. ", "id": 15476, "time": "2002-05-04T15:48:31Z", "bug_id": 8757, "creation_time": "2002-05-04T15:48:31Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 8757, "attachment_id": null, "id": 15477, "time": "2002-05-04T15:50:10Z", "creator": "poi-support@buni.org", "creation_time": "2002-05-04T15:50:10Z", "is_private": false, "text": "this isn't being recursive is it?  meaning A1 referring to itself."}, {"count": 4, "tags": [], "bug_id": 8757, "text": "in org/apache/poi/hssf/record/formula/ReferencePtg.java:\nchange sid to 0x44 from 0x24\n    public final static byte sid  = 0x44;\n\nI also \"hacked\" org/apache/poi/hssf/record/formula/Ptg.java\nto compile and recognize both 0x24 and 0x64 as well (like before)\n        final int valueRef = ReferencePtg.sid - 0x20;  \n        final int arrayRef = ReferencePtg.sid + 0x20;  \n\nI think this stems from using the NUMBER field where Excel\nusually uses MULRK (at least in the handful of spreadsheets\nI've looked at with the BIFFViewer).\n\nBoth sum(a1,b1) and a1+b1 work with this.", "id": 15479, "time": "2002-05-04T18:04:19Z", "creator": "3vtt-f678@dea.spamcon.org", "creation_time": "2002-05-04T18:04:19Z", "is_private": false, "attachment_id": null}, {"count": 5, "text": "Can you send a patch?\n\nThanks,\n\n-Andy", "bug_id": 8757, "attachment_id": null, "id": 15481, "time": "2002-05-04T18:53:15Z", "creator": "poi-support@buni.org", "creation_time": "2002-05-04T18:53:15Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 8757, "attachment_id": 1787, "is_private": false, "id": 15494, "time": "2002-05-05T14:48:08Z", "creator": "3vtt-f678@dea.spamcon.org", "creation_time": "2002-05-05T14:48:08Z", "text": "Created attachment 1787\npatch file"}, {"count": 7, "tags": [], "bug_id": 8757, "text": "Thanks, I'll commit this.  But this probably means that excel does care \n(sometimes?) about the class of token. Add token expects a V class parameter, \nand we were giving it an R class param. Sum can work with anything, so is \nprobably a bad testcase. I'll test this some more. (btw, there is no \ncircularity problem here .. i was putting the above formulas in the third row :)", "id": 15543, "time": "2002-05-06T14:04:42Z", "creator": "avik@apache.org", "creation_time": "2002-05-06T14:04:42Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "poi-support@buni.org", "attachment_id": null, "text": "yes..  I think we should divide it so that we have a \n\nBasePtg\n|          |\nValue     Reference\n\nthe SIDs should be in the latter two.  But the functionality in the top class.", "id": 15544, "time": "2002-05-06T14:25:05Z", "bug_id": 8757, "creation_time": "2002-05-06T14:25:05Z", "is_private": false}, {"count": 9, "tags": [], "creator": "poi-support@buni.org", "attachment_id": null, "is_private": false, "id": 15867, "time": "2002-05-10T03:04:13Z", "bug_id": 8757, "creation_time": "2002-05-10T03:04:13Z", "text": "Avik did you apply this?"}, {"count": 10, "tags": [], "bug_id": 8757, "attachment_id": null, "is_private": false, "id": 16016, "time": "2002-05-13T16:18:37Z", "creator": "avik@apache.org", "creation_time": "2002-05-13T16:18:37Z", "text": "Patch from Mathew McClain committed, but keeping the bug open to fix #value \nerrors in ALL formulas. Unfortunately, the dev kit does not have much detail on \nPtg classes, so its back to formula viewer for me :-("}, {"count": 11, "tags": [], "bug_id": 8757, "attachment_id": null, "id": 16789, "time": "2002-05-27T21:12:13Z", "creator": "avik@apache.org", "creation_time": "2002-05-27T21:12:13Z", "is_private": false, "text": "Fixed for all known cases. "}]