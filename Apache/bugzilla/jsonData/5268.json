[{"count": 0, "tags": [], "bug_id": 5268, "attachment_id": null, "is_private": false, "id": 8573, "time": "2001-12-04T08:57:01Z", "creator": "3zh0p2v02@sneakemail.com", "creation_time": "2001-12-04T08:57:01Z", "text": "Using javac on the command line it is possible to enforce package dependencies\nby compiling the packages in each layer independantly and omiting the sourcepath\nso that javac can not resolve any unwanted class references. This is not\npossible with Ant as you are forced to include the srcdir attribute or nested\nsrc elements.\n\nFor example consider the following two classes. The architecture specifies that\nMyClass1 is in application layer 1 and should not reference any classes in layer\n2, but MyClass2 is in layer 1 and is permitted to reference layer 1. To help\nenforce this layer 1 is compiled first, followed by layer 2.\n\nMyClass1.java\n-------------\npackage my.layer1;\nimport my.layer2.MyClass2;         // Invalid dependency\npublic class MyClass1 {\n  public MyClass1() {\n    MyClass2 c = new MyClass2();\n  }\n}\n\nMyClass2.java\n-------------\npackage my.layer2;\nimport my.layer1.MyClass1;         // Valid dependency\npublic class MyClass2 {\n  public MyClass2() {\n    MyClass1 c = new MyClass1();\n  }\n}\n\nbuild.xml\n---------\n<project name=\"Test\" basedir=\".\" default=\"init\" >\n\n  <target name=\"init\">\n    <echo message=\"basedir=${basedir}\" />\n    <echo message=\"java.home=${java.home}\" />\n  </target>\n\n  <target name=\"clean\" depends=\"init\">\n    <delete dir=\"classes\" />\n  </target>\n\n  <target name=\"compile\" depends=\"clean\">\n    <mkdir dir=\"classes\" />\n    <javac srcdir=\"src\" destdir=\"classes\" includes=\"my/layer1/**\"/>\n    <javac srcdir=\"src\" destdir=\"classes\" includes=\"my/layer2/**\"/>\n  </target>\n\n  <target name=\"compile2\" depends=\"clean\">\n    <mkdir dir=\"classes\" />\n    <exec dir=\"src\" executable=\"javac\">\n      <arg line=\"-classpath classes my/layer1/MyClass1.java\"/>\n    </exec>\n    <exec dir=\"src\" executable=\"javac\">\n      <arg line=\"-classpath classes my/layer2/MyClass2.java\"/>\n    </exec>\n  </target>\n  \n</project>\n\nExecuting the compile target completes without error, and actually compiles\nclass MyClass2 as part of the first javac task. If instead you execute compile2\nthe build will fail on the first exec task when attempting to compile the import\nstatement in MyClass1."}, {"count": 1, "tags": [], "bug_id": 5268, "attachment_id": 1127, "is_private": false, "id": 10310, "time": "2002-02-04T18:08:05Z", "creator": "arosen@silverstream.com", "creation_time": "2002-02-04T18:08:05Z", "text": "Created attachment 1127\nSuggested fix, to allow -sourcepath to be set explicitly"}, {"count": 2, "tags": [], "bug_id": 5268, "is_private": false, "text": "Alex's patch has been committed for nightly build 2002-02-15.\n\nYou can now say <javac sourcepath=\"\" ....> to execute javac without the\n-sourcepath switch", "id": 10710, "time": "2002-02-14T17:37:09Z", "creator": "bodewig@apache.org", "creation_time": "2002-02-14T17:37:09Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 5268, "is_private": false, "id": 10769, "creation_time": "2002-02-15T17:36:56Z", "time": "2002-02-15T17:36:56Z", "creator": "bodewig@apache.org", "text": "*** Bug 4372 has been marked as a duplicate of this bug. ***", "attachment_id": null}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 42757, "time": "2003-08-14T16:03:14Z", "bug_id": 5268, "creation_time": "2003-08-14T16:03:14Z", "is_private": false, "text": "*** Bug 22427 has been marked as a duplicate of this bug. ***"}]