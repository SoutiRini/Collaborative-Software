[{"count": 0, "tags": [], "creator": "sebastian.tusk@gmx.net", "text": "On a new connection to a ldap server auth_ldap binds as admin with the binddn\nand bindpassword given in the apache configuration file. With this binding the\nfirst user is authenticated. The authentication process binds this user to the\nldap connection. The problem herein is that subsequent authentications are done\nwith the access rights of the user and not as admin. If the users doesn't have\nthe right to read from the ldap server, the user search done during the\nauthentication process fails and so the entire authentication.", "id": 32340, "time": "2003-03-03T15:33:23Z", "bug_id": 17599, "creation_time": "2003-03-03T15:33:23Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "sebastian.tusk@gmx.net", "attachment_id": 5123, "id": 32345, "time": "2003-03-03T15:52:13Z", "bug_id": 17599, "creation_time": "2003-03-03T15:52:13Z", "is_private": false, "text": "Created attachment 5123\nproposed patch that binds as admin before user authentication"}, {"count": 2, "tags": [], "bug_id": 17599, "attachment_id": null, "id": 32364, "time": "2003-03-03T20:04:02Z", "creator": "jessh@ptc.com", "creation_time": "2003-03-03T20:04:02Z", "is_private": false, "text": "Requiring an authenticated login to the LDAP directory is an extremely \nimportant feature to security conscious sites.  This (or an alternate fix) \nneeds to be rolled into Apache 2.0.x ASAP!!!"}, {"count": 3, "tags": [], "bug_id": 17599, "attachment_id": null, "text": "Hmmm....  mod_auth_ldap worked fine for me back at 2.0.43.\n\nIt no longer does at 2.0.45 (I skipped 2.0.44) -- see comments on bug #18756.", "id": 35058, "time": "2003-04-12T12:46:31Z", "creator": "jessh@ptc.com", "creation_time": "2003-04-12T12:46:31Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 17599, "attachment_id": null, "text": "My last comment was intended for bug #18334 -- sorry for any confusion.", "id": 35060, "time": "2003-04-12T12:57:30Z", "creator": "jessh@ptc.com", "creation_time": "2003-04-12T12:57:30Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 17599, "text": "Hmmm....\n\nI did try this with Apache 2.0.46 on Windows -- and I could not reproduce any \nissues.  Yet I've received reports that this issue is reproducible with Apache \n1.3.27 and auth_ldap 1.6.0 -- which I also could not reproduce the issue on....\n\nFrom a glance at the sources, both auth_ldap 1.6.0 and the Apache 2.0.46 \nmod_auth_ldap appear to have code intended to address this.  It appears to work \nat least *some* of the time.", "id": 38243, "time": "2003-06-03T11:12:13Z", "creator": "jessh@ptc.com", "creation_time": "2003-06-03T11:12:13Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 17599, "attachment_id": null, "text": "I have been able to reproduce this issue in 2.0.47 when attempting a \"require\ngroup\" directive. It appears the bind is done by the provided credentials. Next,\nthere is a bind with the user/password to verify they are correct. Finally, a\ncompare is done to verify group membership but it is still using the user bind\nconnection to do the compare and it fails for insufficient access. This appears\nto only be an issue (for me) when not using anonymous bind and where the user\naccount does not have authority to perform a compare. ", "id": 46025, "time": "2003-10-22T02:54:58Z", "creator": "tjeffers@iquest.net", "creation_time": "2003-10-22T02:54:58Z", "is_private": false}, {"count": 7, "attachment_id": null, "creator": "jessh@ptc.com", "text": "Is this reproducible with require-user as well?\n\nI spent some time trying to reproduce this recently and failed, though I must\nadmit my time was split between 2.0.47 and 1.3.28 (with auth_ldap 1.6.0).", "id": 46091, "time": "2003-10-22T22:17:48Z", "bug_id": 17599, "creation_time": "2003-10-22T22:17:48Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "bug_id": 17599, "text": "Here my slapd ACL configuration. Maybe it helps to reproduce the problem.\n\n# The userPassword by default can be changed\n# by the entry owning it if they are authenticated.\n# Others should not be able to see it, except the\n# admin entry below\naccess to attribute=userPassword\n        by dn=\"cn=admin,o=Silver Style Entertainment,c=de\" write\n        by anonymous auth\n        by self write\n        by * none\naccess to attribute=lmPassword\n        by dn=\"cn=admin,o=Silver Style Entertainment,c=de\" write\n        by anonymous auth\n        by self write\n        by * none\naccess to attribute=ntPassword\n        by dn=\"cn=admin,o=Silver Style Entertainment,c=de\" write\n        by anonymous auth\n        by self write\n        by * none\n\n# The admin dn has full write access\naccess to *\n        by dn=\"cn=admin,o=Silver Style Entertainment,c=de\" write\n        by * none\n\n# For Netscape Roaming support, each user gets a roaming\n# profile for which they have write access to\naccess to dn=\".*,ou=Roaming,o=morsnet\"\n        by dn=\"cn=admin,o=Silver Style Entertainment,c=de\" write\n        by dnattr=owner write\n\nrootdn \"cn=admin,o=Silver Style Entertainment,c=de\"\nrootpw {MD5}************\npassword-hash {MD5}\n\nYou will notice that a user has no access rights, except write access to the\nuser password. So a user can't search for other users. But exactly that is what\napache does if it tries to authenticate a second user.\n\nBy default slapd grants read right for all. Often there is also a rule like this.\n\naccess to *\n        by self write\n        by users read\n        by anonymous auth\n\nIn both cases apache has no problem because the search for a user works.", "id": 46109, "time": "2003-10-23T08:50:27Z", "creator": "sebastian.tusk@gmx.net", "creation_time": "2003-10-23T08:50:27Z", "is_private": false, "attachment_id": null}, {"count": 9, "attachment_id": null, "creator": "sebastian.tusk@gmx.net", "text": "For completeness here my apache config too.\n\n# authentication\n<Location />\n  AuthType Basic\n  AuthName \"Silver Style Entertainment intern\"\n  require valid-user\n\n  AuthLDAPAuthoritative on\n  AuthLDAPEnabled on\n\n  AuthLDAPURL \"ldaps://vidar/o=Silver Style Entertainment,c=de?uid?sub\"\n  AuthLDAPBindDN \"cn=admin,o=Silver Style Entertainment,c=de\"\n  AuthLDAPBindPassword ***********\n</Location>\n", "id": 46110, "time": "2003-10-23T08:55:42Z", "bug_id": 17599, "creation_time": "2003-10-23T08:55:42Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "creator": "tjeffers@iquest.net", "attachment_id": null, "id": 47373, "time": "2003-11-14T20:26:15Z", "bug_id": 17599, "creation_time": "2003-11-14T20:26:15Z", "is_private": false, "text": "I have been able to track down what is causing my \"require group\" problem \nmentioned above. I have tracked the problem to the util_ldap_cache_checkuserid \nfunction in util_ldap.c. This function does an ldap_simple_bind_s to verify the \nretrieved dn and user supplied password is correct. This bind is not made \nthrough the connection caching routines and therefore the managed (cached) \nconnections don't sync with reality. I have modified my copy of util_ldap.c and \nhave got it working but would like for someone else to test this. I am not a C \ndeveloper so feel free to improve (or correct) this code:\n\nin modules/experimental/util_ldap.c:\n\n -- comment out lines 873 through 879.\n\n -- add the following after line 881\n      ldc = util_ldap_connection_find(r, ldc->host, ldc->port, *binddn, bindpw, \nldc->deref, ldc->secure);\n\n -- change the condition on the if statment on line 882 (now 883) to\n      if (LDAP_SUCCESS != (result = util_ldap_connection_open(r, ldc))) {\n\nI am using 2.0.48 on Redhat 9 and Solaris 8\n"}, {"count": 11, "tags": [], "bug_id": 17599, "attachment_id": null, "text": "Here is the diff for the patch (after reading the contribute info, duh). I have\ndone limited testing with openldap on Redhat 9 and the Sun LDAP SDK 5.08 on\nSolaris 8.\n\n--- util_ldap.c Fri Nov 14 18:34:39 2003\n***************\n*** 870,885 ****\n       * fails, it means that the password is wrong (the dn obviously\n       * exists, since we just retrieved it)\n       */\n!     if ((result =\n!          ldap_simple_bind_s(ldc->ldap, const_cast(*binddn),\nconst_cast(bindpw))) ==\n!          LDAP_SERVER_DOWN) {\n!         ldc->reason = \"ldap_simple_bind_s() to check user credentials failed\nwith server down\";\n!         ldap_msgfree(res);\n!         goto start_over;\n!     }\n!\n!     /* failure? if so - return */\n!     if (result != LDAP_SUCCESS) {\n          ldc->reason = \"ldap_simple_bind_s() to check user credentials failed\";\n          ldap_msgfree(res);\n          return result;\n--- 870,878 ----\n       * fails, it means that the password is wrong (the dn obviously\n       * exists, since we just retrieved it)\n       */\n!     ldc = util_ldap_connection_find(r, ldc->host, ldc->port, *binddn, bindpw,\n!                                     ldc->deref, ldc->secure);\n!     if (LDAP_SUCCESS != (result = util_ldap_connection_open(r, ldc))) {\n          ldc->reason = \"ldap_simple_bind_s() to check user credentials failed\";\n          ldap_msgfree(res);\n          return result;\n", "id": 47383, "time": "2003-11-15T01:31:57Z", "creator": "tjeffers@iquest.net", "creation_time": "2003-11-15T01:31:57Z", "is_private": false}, {"count": 12, "tags": [], "creator": "tjeffers@iquest.net", "text": "Created attachment 9195\nproposed patch for util_ldap.c", "id": 47676, "time": "2003-11-20T12:44:15Z", "bug_id": 17599, "creation_time": "2003-11-20T12:44:15Z", "is_private": false, "attachment_id": 9195}, {"count": 13, "tags": [], "bug_id": 17599, "attachment_id": null, "text": "add PatchAvailable keyword to help us track available patches\n(see recent updates to http://httpd.apache.org/dev/patches.html)\n", "id": 47685, "time": "2003-11-20T13:14:52Z", "creator": "trawick@apache.org", "creation_time": "2003-11-20T13:14:52Z", "is_private": false}, {"count": 14, "tags": [], "text": "Created attachment 9601\naplliable (fixed) version diff of the 11/20/03 patch", "attachment_id": 9601, "id": 49203, "creator": "urkle@outoforder.cc", "time": "2003-12-16T19:53:47Z", "bug_id": 17599, "creation_time": "2003-12-16T19:53:47Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 17599, "text": "For version 2.x, I have added more information on this issue in bug 27134.\n(I have created a new bug since component/version are different).\nIMHO, the patch provided above by Todd seems to lock ldap connection in the\ncache by not releasing one of the two used connection\n(util_ldap_connection_close() should have been used at least once somewhere).\nHope this helps.", "id": 52732, "time": "2004-02-21T15:27:28Z", "creator": "dgl@softec.lu", "creation_time": "2004-02-21T15:27:28Z", "is_private": false, "attachment_id": null}, {"count": 16, "attachment_id": null, "creator": "minfrin@sharp.fm", "text": "\n\n*** This bug has been marked as a duplicate of 27748 ***", "id": 57799, "time": "2004-05-21T14:20:09Z", "bug_id": 17599, "creation_time": "2004-05-21T14:20:09Z", "tags": [], "is_private": false}]