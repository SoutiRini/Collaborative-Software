[{"count": 0, "tags": [], "creator": "dabuq@mailfish.de", "is_private": false, "text": "Is there any reason why HTTP_NOT_IMPLEMENTED is returned to the client rather late by default_handler() in server/core.c instead of having it handled by ap_read_request() in server/protocol.c?\n\nThe way it is now causes Apache to unnecessarily dive down into the document root, reading .htaccess files, stat()ing index documents etc. Moving it to ap_read_request() would avoid that overhead.\n\nNB, this might be related to Bug 51201.", "id": 161187, "time": "2012-08-09T15:47:54Z", "bug_id": 53686, "creation_time": "2012-08-09T15:47:54Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 53686, "attachment_id": null, "is_private": false, "id": 161188, "time": "2012-08-09T16:00:56Z", "creator": "covener@gmail.com", "creation_time": "2012-08-09T16:00:56Z", "text": "(In reply to comment #0)\n> Is there any reason why HTTP_NOT_IMPLEMENTED is returned to the client\n> rather late by default_handler() in server/core.c instead of having it\n> handled by ap_read_request() in server/protocol.c?\n> \n> The way it is now causes Apache to unnecessarily dive down into the document\n> root, reading .htaccess files, stat()ing index documents etc. Moving it to\n> ap_read_request() would avoid that overhead.\n> \n> NB, this might be related to Bug 51201.\n\nModules need some way to have a look at a request incl. method to see if they're willing to handle it, it could be done \"earlier\" in a new hook, but those modules would probably want their per-directory config completed and maybe even know what file the request mapped to before deciding."}, {"count": 2, "tags": [], "bug_id": 53686, "attachment_id": null, "id": 161191, "time": "2012-08-09T16:38:05Z", "creator": "dabuq@mailfish.de", "creation_time": "2012-08-09T16:38:05Z", "is_private": false, "text": "This bug is not about deciding whether or not a request method is valid for the requested resource. It's about deciding whether or not a request method is valid in the first place.\n\nModules register any additional methods at startup, don't they? So any method not registered at startup and therefore not known to Apache could be rejected right after reading the headers (unless there is a way to register methods at runtime)."}, {"count": 3, "tags": [], "bug_id": 53686, "attachment_id": null, "is_private": false, "id": 161197, "time": "2012-08-09T16:52:50Z", "creator": "covener@gmail.com", "creation_time": "2012-08-09T16:52:50Z", "text": "(In reply to comment #2)\n> This bug is not about deciding whether or not a request method is valid for\n> the requested resource. It's about deciding whether or not a request method\n> is valid in the first place.\n> \n> Modules register any additional methods at startup, don't they? So any\n> method not registered at startup and therefore not known to Apache could be\n> rejected right after reading the headers (unless there is a way to register\n> methods at runtime).\n\nyes -- startup only.  I think it's fair, but reclassifying as enhancement"}, {"count": 4, "tags": [], "bug_id": 53686, "attachment_id": 29210, "is_private": false, "id": 161237, "time": "2012-08-10T15:23:59Z", "creator": "dabuq@mailfish.de", "creation_time": "2012-08-10T15:23:59Z", "text": "Created attachment 29210\nReturn 501 for invalid methods as soon as the headers have been read\n\nI have created a patch that checks for invalid request methods in ap_read_request()."}, {"count": 5, "tags": [], "bug_id": 53686, "attachment_id": null, "id": 163341, "time": "2012-11-10T09:40:11Z", "creator": "dabuq@mailfish.de", "creation_time": "2012-11-10T09:40:11Z", "is_private": false, "text": "Any chance to see this in the next release?"}, {"count": 6, "tags": [], "bug_id": 53686, "attachment_id": null, "is_private": false, "id": 173888, "time": "2014-03-17T21:31:48Z", "creator": "dabuq@mailfish.de", "creation_time": "2014-03-17T21:31:48Z", "text": "Ping?"}]