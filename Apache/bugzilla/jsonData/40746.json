[{"count": 0, "tags": [], "text": "My company has an Apache proxy server which is used not as a firewall, but as a\nwhitelisted passthrough.  So we need to be able to restrict incoming requests to\njust a selected set of servers.\n\nOne of the services we will be proxying to requires the use of an HTTP CONNECT\ninstead of the usual RewriteRule we use to select most of the other services. \nBut the AllowCONNECT directive in the stock Apache distribution doesn't provide\nany way to restrict connections to certain hosts; it only restricts what ports\ncan be connected to.\n\nThe ProxyBlock directive is the closest analogue to what we need.  It blocks\ngiven hosts, but allows all others.  We need just the opposite: to allow given\nhosts, but block all others.\n\nSo I created the following patch (against 2.0.59) which basically just uses the\nsame code as ProxyBlock but reverses its meaning.\n\nIf a ProxyAllow directive exists in the configuration, then all proxy targets\nwill be blocked except for those listed.  If this directive is not present, then\nApache allows all target hosts by default.\n\nThere are of course further improvements that could be made, but which I didn't\nhave time to implement: a directive like Order that would specify whether to\nevaluate ProxyAllow before or after ProxyBlock; and a way to specify whether the\nProxyBlock and ProxyAllow directives apply to only rewrite rules, AllowCONNECT,\nor both.  (Currently these directives apply to all types of proxies.  We only\nneeded it for the AllowCONNECT directive.)", "attachment_id": null, "id": 94779, "creator": "tbeattie@boingo.com", "time": "2006-10-12T11:50:42Z", "bug_id": 40746, "creation_time": "2006-10-12T11:50:42Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 40746, "text": "Created attachment 18996\npatch to create a new ProxyAllow directive in mod_proxy", "id": 94780, "time": "2006-10-12T11:52:29Z", "creator": "tbeattie@boingo.com", "creation_time": "2006-10-12T11:52:29Z", "is_private": false, "attachment_id": 18996}]