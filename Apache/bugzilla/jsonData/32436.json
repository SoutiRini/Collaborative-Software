[{"count": 0, "attachment_id": null, "bug_id": 32436, "text": "Having an odd problem with dreamweaver on what is currently building as rc1; been having it for about \ntwo versions now.\n\nWe mount dav up as http://<server>/app/dav; dav is correctly configured for every other client that I \ncan use to lock/unlock with.\n\nFor some reason, Dreamweaver doesn't seem to recognize its own lock; on retrieval, it unlocks the file \nand grabs it, but doesn't seem to recognize the lock token, nor does it pass that lock token back on \nput.\n\nHence, I'm unable to actually modify and upload content via dreamweaver when dreamweaver is set to \nuse locking.\n\nIs Dreamweaver one of the tested apps for slide?  Do people expect that it should work, or is there a \nknown problem I haven't been able to find reference to anywhere?", "id": 67586, "time": "2004-11-29T23:14:02Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-11-29T23:14:02Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 32436, "text": "Just guessing, but if locks are involved maybe it is the same as with OS X as\ndescribed in \n\nhttp://jakarta.apache.org/slide/faq.html\n\nAs it is rather unlikely that any one of the Slide developers have access to\nDreamweaver you would have to supply a HTTP trace of what DreamWeaver sends to\nfind out what goes wrong.", "id": 67587, "time": "2004-11-29T23:21:35Z", "creator": "ozeigermann@apache.org", "creation_time": "2004-11-29T23:21:35Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "text": "Yes, I thought that too.\n\nNo, the problem doesn't seem to be that.  I went through those trace logs earlier; I didn't see anything \nwrong with the request, nor the response.  I had the *gut feeling* that the problem was the cdata in the \nlock; the other server I tested against (Apple's .mac DAV implementation) didn't use a cdata section, but \njust returned the contents, and locking/unlocking seemed to work without a hitch.\n\nSo, best guess, it's that.\n\nWhen I get into the office tomorrow, I'll generate some traces and see where it leads me.", "is_private": false, "id": 67592, "creator": "gblock@ctoforaday.com", "time": "2004-11-29T23:32:03Z", "bug_id": 32436, "creation_time": "2004-11-29T23:32:03Z", "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 32436, "text": "(clarification)\n\nUp until the put/unlock stage, everything DW did against Slide was the same as it did against .mac; but \nupon being provided the lock information, DW \"understood\" the lock.\n\nOn Slide, DW seems to not recognize the lock; in fact, when hovering over the locked file, it reports (in \na status bar) that it's checked out by \"Unknown Owner\"...  None of which makes any sense, because the \nresponses to the lock request were identical save one thing:  The username in the lock, \n\"gblock@ctoforaday.com\", was in a cdata section.", "id": 67594, "time": "2004-11-29T23:34:25Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-11-29T23:34:25Z", "tags": [], "is_private": false}, {"count": 4, "attachment_id": 13591, "bug_id": 32436, "is_private": false, "id": 67615, "time": "2004-11-30T12:21:41Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-11-30T12:21:41Z", "tags": [], "text": "Created attachment 13591\nA trace of Dreamweaver's behavior during an unlock attempt."}, {"count": 5, "attachment_id": 13592, "bug_id": 32436, "is_private": false, "id": 67616, "time": "2004-11-30T12:24:01Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-11-30T12:24:01Z", "tags": [], "text": "Created attachment 13592\nA trace of dreamweaver's behavior during locking a file.\n\nThese two files cover Dreamweaver's behavior during lock/unlock.\n\nNote that it closes the connection each time; in addition, each request is\nlisted in the files once for each time it appeared over the network; I didn't\naccidentally duplicate the same packets twice.\t:)\n\nIt's odd.  Can't put my finger on what's going wrong, but I'm going to guess\nit's the lock contents.  Also note that I've tried this with the principal URL\nstuff both on and off, and it makes no difference; whatever's going on here is\nmore unusual than that."}, {"count": 6, "tags": [], "bug_id": 32436, "attachment_id": null, "text": "Hmmm, judging from the trace principal-URL still is transmitted. Please switch\nthat off, try again and send the new trace.", "id": 67705, "time": "2004-12-01T16:55:51Z", "creator": "ozeigermann@apache.org", "creation_time": "2004-12-01T16:55:51Z", "is_private": false}, {"count": 7, "tags": [], "creator": "gblock@ctoforaday.com", "text": "Created attachment 13622\nDreamweaver lock, again, this time without PrincipalURL.", "id": 67766, "time": "2004-12-02T12:54:35Z", "bug_id": 32436, "creation_time": "2004-12-02T12:54:35Z", "is_private": false, "attachment_id": 13622}, {"count": 8, "tags": [], "creator": "gblock@ctoforaday.com", "text": "Created attachment 13623\nDreamweaver unlock, again, this time without Principal URL.\n\nThere's no actual change; as I said before, PrincipalURL seems to have no\neffect on Dreamweaver (it fails regardless).\n\nI *think* it's the cdata in the owner.\tGut feeling.", "id": 67767, "time": "2004-12-02T12:55:58Z", "bug_id": 32436, "creation_time": "2004-12-02T12:55:58Z", "is_private": false, "attachment_id": 13623}, {"count": 9, "tags": [], "bug_id": 32436, "attachment_id": null, "is_private": false, "id": 67769, "time": "2004-12-02T13:15:34Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-12-02T13:15:34Z", "text": "Gut feeling is dead right on this, I've just manually recreated this in Apple's iDisk.\n\n - Dreamweaver requires that lock/unlock operations can only be performed if the user specifies, in his \nDAV connection options, an e-mail address.\n\n - Dreamweaver sends that address during lock.\n\n - When showing the contents of the locks, Dreamweaver will show the visible contents of that lock only \nif it can be parsed; Dreamweaver is unable to see the cdata content, and is reporting an unknown lock \nowner.\n\n - If you lock something in iDisk, and then disconnect and change your e-mail address, it behaves in an \nidentical way - it thinks it isn't the lock owner, and doesn't attempt to do anything at all.\n\nI'm 99.9% convinced here that Dreamweaver is expecting the contents of the owner tag to *exactly* \nmatch the e-mail address configured in the user's connection options; when that differs in any way, \nDreamweaver refuses the unlock operation."}, {"count": 10, "tags": [], "creator": "ozeigermann@apache.org", "is_private": false, "text": "Hey, even the new patches seem to contain principal url tags. How come?", "id": 67770, "time": "2004-12-02T13:21:57Z", "bug_id": 32436, "creation_time": "2004-12-02T13:21:57Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 32436, "text": "Created attachment 13624\nWhoops.  Dreamweaver unlock.  The right file this time.  :)  No principal url.\n\nOops.  Too many files on the desktop.  :)", "id": 67771, "time": "2004-12-02T13:25:24Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-12-02T13:25:24Z", "is_private": false, "attachment_id": 13624}, {"count": 12, "tags": [], "bug_id": 32436, "attachment_id": null, "text": "Just hacked up the PropertyHelper; no change when it's not in cdata.  Could really use some advice on \nwhere the difference might be.  :)", "id": 67772, "time": "2004-12-02T13:50:20Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-12-02T13:50:20Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 32436, "attachment_id": null, "text": "There is another difference, the lock discovery contains \n\nxmlns:D=\"DAV:\"\n\nin \n\n<D:href xmlns:D=\"DAV:\">gblock@ctoforaday.com</D:href>\n\nwhich is not present in the lock request. ", "id": 67773, "time": "2004-12-02T13:55:49Z", "creator": "ozeigermann@apache.org", "creation_time": "2004-12-02T13:55:49Z", "is_private": false}, {"count": 14, "tags": [], "creator": "ozeigermann@apache.org", "text": "Which, however, is introduced while parsing the request and thus is very hard to\nremove :(\n\n(In reply to comment #13)\n> There is another difference, the lock discovery contains \n> \n> xmlns:D=\"DAV:\"\n> \n> in \n> \n> <D:href xmlns:D=\"DAV:\">gblock@ctoforaday.com</D:href>\n> \n> which is not present in the lock request. \n\n", "id": 67777, "time": "2004-12-02T14:59:13Z", "bug_id": 32436, "creation_time": "2004-12-02T14:59:13Z", "is_private": false, "attachment_id": null}, {"count": 15, "attachment_id": null, "bug_id": 32436, "text": "To see if the non-verbose reproduction really is your problem I would recommend\nto have something like\n\n                owner.addContent(\"<href>gblock@ctoforaday.com</href>\");\n//                try {\n//                    Document d =\n//                        new SAXBuilder().build( new\nStringReader(objectLockToken.getOwnerInfo()) );\n//                    owner.addContent(d.getRootElement());\n//                }\n//                catch( Throwable e ) {\n//                    owner.addContent(new CDATA(objectLockToken.getOwnerInfo()));\n//                }\n\nin PropertyHelper.\n\nIf this works, then it really is the non-verbose thing.\n\nGregory, would you please try?", "id": 67780, "time": "2004-12-02T15:05:07Z", "creator": "ozeigermann@apache.org", "creation_time": "2004-12-02T15:05:07Z", "tags": [], "is_private": false}, {"count": 16, "attachment_id": null, "bug_id": 32436, "text": "Ok, now it's changed (just saw your patch go by)...\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<D:multistatus xmlns:D=\"DAV:\">\n<D:response xmlns:D=\"DAV:\">\n    <D:href>/sisp/dav/clients/wow/services/static/dnsfaq.html</D:href>\n    <D:propstat>\n        <D:prop>\n            <D:lockdiscovery>\n                <D:activelock>\n                    <D:locktype>\n                        <D:write />\n                    </D:locktype>\n                    <D:lockscope>\n                        <D:exclusive />\n                    </D:lockscope>\n                    <D:depth>0</D:depth>\n                    <D:owner>\n                        <D:href>/sisp/davgblock%40mac.com</D:href>\n                    </D:owner>\n                    <D:timeout>Infinite</D:timeout>\n                    <D:locktoken>\n                        <D:href>opaquelocktoken:a478c68d5d8248512b0fe6d086fac924</D:href>\n                    </D:locktoken>\n                </D:activelock>\n            </D:lockdiscovery>\n        </D:prop>\n        <D:status>HTTP/1.1 200 OK</D:status>\n    </D:propstat>\n</D:response>\n</D:multistatus>\n\n\nStill no match, and that's well wrong.  :)", "id": 67787, "time": "2004-12-02T17:11:01Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-12-02T17:11:01Z", "tags": [], "is_private": false}, {"count": 17, "tags": [], "creator": "ozeigermann@apache.org", "text": "Well, I suppose the owner now literally is what you sent as owner right? But\nwait, what about the whitespaces?\n\n....\n\n(In reply to comment #16)\n> Ok, now it's changed (just saw your patch go by)...\n> \n> <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n> <D:multistatus xmlns:D=\"DAV:\">\n> <D:response xmlns:D=\"DAV:\">\n>     <D:href>/sisp/dav/clients/wow/services/static/dnsfaq.html</D:href>\n>     <D:propstat>\n>         <D:prop>\n>             <D:lockdiscovery>\n>                 <D:activelock>\n>                     <D:locktype>\n>                         <D:write />\n>                     </D:locktype>\n>                     <D:lockscope>\n>                         <D:exclusive />\n>                     </D:lockscope>\n>                     <D:depth>0</D:depth>\n>                     <D:owner>\n>                         <D:href>/sisp/davgblock%40mac.com</D:href>\n>                     </D:owner>\n>                     <D:timeout>Infinite</D:timeout>\n>                     <D:locktoken>\n>                        \n<D:href>opaquelocktoken:a478c68d5d8248512b0fe6d086fac924</D:href>\n>                     </D:locktoken>\n>                 </D:activelock>\n>             </D:lockdiscovery>\n>         </D:prop>\n>         <D:status>HTTP/1.1 200 OK</D:status>\n>     </D:propstat>\n> </D:response>\n> </D:multistatus>\n> \n> \n> Still no match, and that's well wrong.  :)\n\n", "id": 67788, "time": "2004-12-02T17:14:18Z", "bug_id": 32436, "creation_time": "2004-12-02T17:14:18Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 32436, "attachment_id": null, "is_private": false, "id": 67791, "time": "2004-12-02T17:22:56Z", "creator": "ozeigermann@apache.org", "creation_time": "2004-12-02T17:22:56Z", "text": "To check that, set the format of the XMLOutputter in the propfind method to raw.\n\nIn CVS HEAD this is in line 298\n\n        org.jdom.output.Format format = org.jdom.output.Format.getRawFormat();\n\ninstead of \n\n        org.jdom.output.Format format = org.jdom.output.Format.getPrettyFormat();\n\n(In reply to comment #17)\n> Well, I suppose the owner now literally is what you sent as owner right? But\n> wait, what about the whitespaces?\n> \n> ....\n"}, {"count": 19, "tags": [], "creator": "gblock@ctoforaday.com", "text": "No, I think now that /sisp/dav thing getting appended is buggering everything up.  I'm not quite sure \nwhere it's coming from - I think I've hacked up something in my codebase and not cleared it away.\nIt looks positive, though.", "id": 67792, "time": "2004-12-02T17:26:41Z", "bug_id": 32436, "creation_time": "2004-12-02T17:26:41Z", "is_private": false, "attachment_id": null}, {"count": 20, "attachment_id": null, "bug_id": 32436, "text": "Ok, \"/sisp/dav\" is the root context; I'm going to take a punt and guess that something is calling the bit \nthat makes URIs \"path local\" on the contents of owner, somehow - because I've just done a clean build, \nand I'm still seeing it.\n\nIt's even happening to DAV Explorer, now.", "id": 67794, "time": "2004-12-02T17:58:37Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-12-02T17:58:37Z", "tags": [], "is_private": false}, {"count": 21, "attachment_id": null, "bug_id": 32436, "is_private": false, "id": 67798, "time": "2004-12-02T18:10:35Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-12-02T18:10:35Z", "tags": [], "text": "Looks like the <href></href> content in the owner is getting auto-rewritten to append the path to it.  \nAnyone know where that's being done?  :)"}, {"count": 22, "attachment_id": null, "bug_id": 32436, "is_private": false, "id": 67806, "time": "2004-12-02T19:05:14Z", "creator": "ozeigermann@apache.org", "creation_time": "2004-12-02T19:05:14Z", "tags": [], "text": "Slide CVS head is ok. Most likely the owner has been set to /sisp/dav/... and\nthis is just being returned no matter what client you use. \n\n\n(In reply to comment #20)\n> Ok, \"/sisp/dav\" is the root context; I'm going to take a punt and guess that\nsomething is calling the bit \n> that makes URIs \"path local\" on the contents of owner, somehow - because I've\njust done a clean build, \n> and I'm still seeing it.\n> \n> It's even happening to DAV Explorer, now.\n\n"}, {"count": 23, "tags": [], "creator": "gblock@ctoforaday.com", "text": "No, I don't think so.\n\nThe problem that I'm seeing is that I can *manually* put absolutely anything into <owner/>, and it will \nbe automatically transformed by convertHrefValueToAbsoluteURL - even though, quite frankly, the \ncontents of <owner/> should be touched.\n\nThis is happening because Slide believes it's not the root servlet; however, this is the one instance in \nwhich it isn't correct to perform that translation/replacement.  But that method thinks that all content \ninside an <href/> is fair game.\n\nDefinitely broken.", "id": 67807, "time": "2004-12-02T19:30:49Z", "bug_id": 32436, "creation_time": "2004-12-02T19:30:49Z", "is_private": false, "attachment_id": null}, {"count": 24, "tags": [], "creator": "gblock@ctoforaday.com", "text": "(of course, this worked before because it was inside a cdata section, thereby protecting it from that \nmethod, which walks the dom.)", "id": 67808, "time": "2004-12-02T19:32:19Z", "bug_id": 32436, "creation_time": "2004-12-02T19:32:19Z", "is_private": false, "attachment_id": null}, {"count": 25, "tags": [], "text": "Index: PropertyRetrieverImpl.java\n===============================================================\n====\nRCS file: /home/cvspublic/jakarta-slide/src/webdav/server/org/apache/slide/webdav/util/\nPropertyRetrieverImpl.java,v\nretrieving revision 1.39\ndiff -r1.39 PropertyRetrieverImpl.java\n641c641,642\n<                 convertHrefValueToAbsoluteURL(child, servletContextPath, config);\n---\n>               if (!(element.getName().equals(\"activelock\") && child.getName().equals(\"owner\")))\n>                       convertHrefValueToAbsoluteURL(child, servletContextPath, config);\n", "is_private": false, "id": 67809, "creator": "gblock@ctoforaday.com", "time": "2004-12-02T19:39:46Z", "bug_id": 32436, "creation_time": "2004-12-02T19:39:46Z", "attachment_id": null}, {"count": 26, "attachment_id": null, "bug_id": 32436, "is_private": false, "id": 67810, "time": "2004-12-02T19:47:12Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-12-02T19:47:12Z", "tags": [], "text": "Yup.  That patch fixes it for me.  I don't know whether it's *correct* behavior - I assume that the \ncontents of the owner *should* be identical to what was provided, and therefore the patch is correct; \nbut it does belie an underlying possible problem with the assumption that all <href> need to be \ntranslated when processing...  Where else will this happen?\n\nAnyways, please review and apply patch, and then you can call yourselves Dreamweaver-happy on ship.  \n:)\n\n(And someone send a nastygram to those idiots at Macromedia while we're at it.  :)"}, {"count": 27, "tags": [], "bug_id": 32436, "attachment_id": null, "text": "(In reply to comment #26)\n> Anyways, please review and apply patch, and then you can call yourselves\nDreamweaver-happy on ship.  \n> :)\n\nApplied to both Slide CVS HEAD and release branch. So we *all* can call\nourselves Dreamweaver-happy as you obviously are part of the community as well.\n \n> (And someone send a nastygram to those idiots at Macromedia while we're at it.  :)\n\nHmmm, part of the problem was Slide. Anyway, great that you have fixed that :)", "id": 67825, "time": "2004-12-02T22:29:05Z", "creator": "ozeigermann@apache.org", "creation_time": "2004-12-02T22:29:05Z", "is_private": false}]