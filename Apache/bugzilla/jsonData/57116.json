[{"count": 0, "tags": [], "bug_id": 57116, "attachment_id": null, "is_private": false, "id": 178598, "time": "2014-10-19T14:12:59Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-10-19T14:12:59Z", "text": "I noted this issue while reviewing Mark's patch to disable SSLv3 proposed for Tomcat 6, but it is present in the code before that patch and is reproducible with 6.0.42.\n\nSteps to reproduce:\n1. Configure an HTTPS connector in Tomcat using BIO protocol\n2. Set sslEnabledProtocols property on that connector to some random value.\n\n1.+2. may be done by the following steps:\na) Create a public key pair for localhost with\n$JAVA_HOME/bin/keytool -genkey -alias tomcat -keyalg RSA\nand specify a password value of \"changeit\".\n\"Your name\" field is \"localhost\", the other fields are \"Unknown\".\nb) Paste the following into server.xml:\n    <Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11Protocol\"\n               SSLEnabled=\"true\"\n               maxThreads=\"150\" scheme=\"https\" secure=\"true\"\n               clientAuth=\"false\" sslProtocol=\"TLS\"\n               sslEnabledProtocols=\"foo\" />\n\n3. Start Tomcat\n4. Expected: Connector start failure due to broken configuration.\nActual: Tomcat starts successfully and can be accessed via https://localhost:8443/\n\nCause:\n======\nIn JSSESocketFactory.initServerSocket(ServerSocket ssocket) there is the following code:\n\n        String requestedProtocols = (String) attributes.get(\"protocols\");\n        setEnabledProtocols(socket, getEnabledProtocols(socket,\n                                                         requestedProtocols));\n\nThe \"getEnabledProtocols(..)\" method filters requested protocols vs. socket.getSupportedProtocols(). If there is no match, it returns null.\n\nThe \"setEnabledProtocols(..)\" does\n        if (protocols != null) {\n            socket.setEnabledProtocols(protocols);\n        }\n\nThus instead of failing with a message, it silently falls back to using the default list of enabled protocols on a socket.\n\nThe problem is that the default protocol list may be less secure, that server administrator has tried to configure.\n\nImprove error checking\n=========================\nI think that silent filtering of sslEnabledProtocols by socket.getSupportedProtocols() is wrong. In case of a typo, e.g. sslEnabledProtocols=\"TLSv1,foo\" the \"foo\" value shall cause a configuration error instead of being silently filtered.\n\nThe Nio connector uses different implementation, via NioEndpoint.createSSLEngine() -> engine.setEnabledProtocols(sslEnabledProtocolsarr)\nand that method is documented to throw IllegalArgumentException on unsupported protocol names. [1]\n\n[1] http://docs.oracle.com/javase/7/docs/api/javax/net/ssl/SSLEngine.html#setEnabledProtocols%28java.lang.String[]%29\n\n\nThe behaviour of Nio connector cannot be tested in 6.0.41/6.0.42, as it does not handle \"sslEnabledProtocols\" attribute due to bug 57102. Testing it with the current tc6.0.x @1632897 it starts successfully, but a web browser cannot connect to it. The following is logged for each connection attempt via HTTPS (using JDK 5u20):\n\n[[[\n19.10.2014 18:09:26 org.apache.tomcat.util.net.NioEndpoint setSocketOptions\nSEVERE: \njava.lang.IllegalArgumentException: foo\n\tat com.sun.net.ssl.internal.ssl.ProtocolVersion.valueOf(ProtocolVersion.java:120)\n\tat com.sun.net.ssl.internal.ssl.ProtocolList.<init>(ProtocolList.java:36)\n\tat com.sun.net.ssl.internal.ssl.SSLEngineImpl.setEnabledProtocols(SSLEngineImpl.java:1723)\n\tat org.apache.tomcat.util.net.NioEndpoint.createSSLEngine(NioEndpoint.java:1145)\n\tat org.apache.tomcat.util.net.NioEndpoint.setSocketOptions(NioEndpoint.java:1098)\n\tat org.apache.tomcat.util.net.NioEndpoint$Acceptor.run(NioEndpoint.java:1331)\n\tat java.lang.Thread.run(Thread.java:595)\n]]]"}, {"count": 1, "tags": [], "bug_id": 57116, "text": "> Testing it with the current tc6.0.x @1632897 ...\n\nIt actually was @1632897 + Mark's 2014-10-17-poodle-tc6-v1.patch, so the line numbers of NioEndpoint.java in the stacktrace differ by a small offset.", "id": 178599, "time": "2014-10-19T14:37:13Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-10-19T14:37:13Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 178648, "time": "2014-10-21T14:21:41Z", "bug_id": 57116, "creation_time": "2014-10-21T14:21:41Z", "is_private": false, "text": "Updated patch proposed for 6.0.x to address this."}, {"count": 3, "tags": [], "bug_id": 57116, "text": "This has been fixed in 6.0.x for 6.0.43 onwards.", "id": 178991, "time": "2014-11-06T11:39:30Z", "creator": "markt@apache.org", "creation_time": "2014-11-06T11:39:30Z", "is_private": false, "attachment_id": null}]