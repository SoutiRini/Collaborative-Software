[{"count": 0, "tags": [], "creator": "Chaosed0@gmail.com", "attachment_id": 31449, "is_private": false, "id": 174140, "time": "2014-03-27T17:22:13Z", "bug_id": 56326, "creation_time": "2014-03-27T17:22:13Z", "text": "Created attachment 31449\nAllow cache_quick_handler to serve authorized requests\n\nThe relevant standard is RFC2616, section 14.8. It specifies three situations in which responses containing the Authorization header may be cached. In cache_save_filter() these cases are handled correctly, but In cache_quick_handler(), requests with an Authorization header are simply declined near the beginning of processing:\n\n    /* find certain cache controlling headers */\n    auth = apr_table_get(r->headers_in, \"Authorization\");\n\n    /* First things first - does the request allow us to return\n     * cached information at all? If not, just decline the request.\n     */\n    if (auth) {\n        return DECLINED;\n    }\n\nNo such check is performed in plain old cache_handler(). If you specify \"CacheQuickHandler off\", responses with the header get served from the cache just fine, provided they meet the appropriate conditions in the RFC.\n\nThis behavior is implied in a couple of places within the documentation, such as in CacheQuickHandler (\"...it allows the cache to be used in cases where full processing is required, such as when content is subject to authorization\"), but I don't think it's ever explicitly stated. The caching guide even implies that these responses should be cached: \"If the response contains an \"Authorization:\" header, it must also contain an \"s-maxage\", \"must-revalidate\" or \"public\" option in the \"Cache-Control:\" header, or it won't be cached.\" Interestingly, the 2.2 version of the doc also states that \"If the request contains an \"Authorization:\" header, the response will not be cached\", but this stipulation is removed in more recent versions.\n\nThe attached patch (against trunk) keeps the current behavior as default, but includes a directive which allows serving cached authorized requests through the quick handler. It may be that there's a good reason for keeping the check in the quick handler, and that my patch is completely bogus; in that case, I still think the doc should be changed to explicitly note this behavior."}, {"count": 1, "tags": [], "creator": "Chaosed0@gmail.com", "attachment_id": 31450, "text": "Created attachment 31450\nRevise comment and change doc to clarify why quick handler ignores Authorization header\n\nJust found this in the doc, caching.html:\n\n\"This mode however also bypasses the authentication and authorization phases of server processing, so this mode should be chosen with care when this is important.\n  \n\"Requests with an \"Authorization\" header (for example, HTTP Basic Authentication) are neither cacheable nor served from the cache when mod_cache is running in this phase.\"\n\nMakes sense - the authorization can't be used by mod_cache if it's not been processed by the proper authorization stuff yet. My previous patch is not any good, so here's a patch revising the comment that originally confused me and makes the statements above a little more visible (at least the way I was looking through the docs).", "id": 174141, "time": "2014-03-27T18:21:24Z", "bug_id": 56326, "creation_time": "2014-03-27T18:21:24Z", "is_private": false}]