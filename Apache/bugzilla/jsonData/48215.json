[{"count": 0, "tags": [], "text": "Created attachment 24552\nThe error log with LogLevel debug\n\nAfter connecting to an URL without client authentication, connection to an URL\nthat requires it start a SSL renegociation several times instead of only once.\n\nThe exact number of renegociation depends on some unknown factor. \nI have a full repro procedure from scratch where it will be 2 times, but also a\nserver locally where it is 6 times.\n\nI'll attach :\n- an http.conf that repro the problem\n- the self-signed certificate and private key of the server\n- the content of error.log after an instance of this problem\n- a .cap file of the exchange between the client and the server\n- the decoding of the exchange with tshark -V  -o \"ssl.keys_list:\n172.30.24.37,443,http,apache/conf/authentication.key\"\n\nFull repro procedure based on EasyPHP 5.3.0 ( Apache/2.2.13 (Win32) -\nOpenSSL/0.9.8k ) :\n- download and install EasyPHP 5.3.0 (\n- edit it's default httpd.conf \nListen *:443\n\nLoadModule ssl_module modules/mod_ssl.so\n\nSSLSessionCache        \"shmcb:${path}/apache/logs/ssl_scache(512000)\"\nSSLSessionCacheTimeout  3000\nSSLCipherSuite AES+RSA+SHA1\n\nNameVirtualHost *:443\n<VirtualHost *:443>\n   SSLEngine On \n   SSLCertificateFile \"${path}/apache/conf/authentication.cer\"\n   SSLCertificateKeyFile \"${path}/apache/conf/authentication.key\"\n   <Location /authentication/>\n    SSLVerifyClient optional_no_ca\n       SSLVerifyDepth 0\n   </Location>\n   DocumentRoot \"${path}/www\"\n</VirtualHost>\n- create a index.html file in /www\n    <html><head><title> authentication test </title></head>\n    <body>authentication test<hr>\n    <a href=\"/authentication\" >authentication link</a>\n    </body></html>\n- create /www/authentication\n- copy index.html inside /www/authentication\n- connect firefox to /\n- follow the link on the page to /authentication\n- You'll need a client certificate (a sample p12 is included in the repro\nfiles)\n- Have the \"remember certificate\" option unchecked\n- Apache will immediately request authentication a second time", "is_private": false, "bug_id": 48215, "id": 132046, "time": "2009-11-17T10:59:35Z", "creator": "jmdesp@gmail.com", "creation_time": "2009-11-17T10:59:35Z", "attachment_id": 24552}, {"count": 1, "tags": [], "text": "Created attachment 24553\nA complete package of file, for reproduction, with a full capture of the problem", "is_private": false, "bug_id": 48215, "id": 132047, "time": "2009-11-17T11:01:43Z", "creator": "jmdesp@gmail.com", "creation_time": "2009-11-17T11:01:43Z", "attachment_id": 24553}, {"attachment_id": null, "tags": [], "creator": "jorton@redhat.com", "text": "This is a bug in the handling of \"SSLVerifyDepth 0\" in per-dir context.  mod_ssl is forcing a renegotiation each time because it doesn't cache the verify_depth as zero correctly:\n\n[Tue Nov 17 19:54:25 2009] [debug] ssl_engine_kernel.c(423): [client 172.30.25.84] Reduced client verification depth will force renegotiation, referer: https://172.30.24.37/\n\nto fix this either of:\n\na) configure client cert CA verification properly, and remove or increase the SSLVerifyDepth setting, or\n\nb) move the SSLVerifyDepth setting to vhost context, outside the <Location> block\n\nshould work.\n\n--\n\nIn ssl_hook_Access, the code uses sslconn->verify_depth as the \"current\" verify depth only if non-zero, otherwise falling back to the vhost's verify depth.", "count": 2, "id": 132086, "time": "2009-11-18T05:51:41Z", "bug_id": 48215, "creation_time": "2009-11-18T05:51:41Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 48215, "is_private": false, "text": "I confirm that using the following configuration works around the problem :\n\n<VirtualHost *:443>\n   SSLEngine On \n   SSLCertificateFile \"${path}/apache/conf/authentication.cer\"\n   SSLCertificateKeyFile \"${path}/apache/conf/authentication.key\"\n   SSLVerifyDepth 0\n   <Location /authentication/>\n    SSLVerifyClient optional_no_ca\n   </Location>\n   DocumentRoot \"${path}/www\"\n</VirtualHost>\n\nUnfortunately, the source of the problem is far from obvious, so I think the work around is not enough.", "id": 132095, "time": "2009-11-18T08:26:00Z", "creator": "jmdesp@gmail.com", "creation_time": "2009-11-18T08:26:00Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 48215, "is_private": false, "text": "This said this modification does not fix the other problem with mod_autoindex that Torsten Foertsch signaled.\nIt somehow does significantly reduces the number of renegociations, I get only 2 renegociation whilst there must have been around 10 before (with 10 files and SSLVerifyDepth 0 within the directory context).\n\nI opened bug 48228 for this issue.", "id": 132100, "time": "2009-11-18T09:33:21Z", "creator": "jmdesp@gmail.com", "creation_time": "2009-11-18T09:33:21Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "is_private": false, "id": 132132, "time": "2009-11-19T00:12:40Z", "bug_id": 48215, "creation_time": "2009-11-19T00:12:40Z", "text": "Yup, I suggest a workaround because I don't (yet) have a patch - it's clearly a bug which can and should be fixed."}, {"count": 6, "tags": [], "text": "Created attachment 24583\nProposed fix\n\n(In reply to comment #5)\n> it's clearly a bug which can and should be fixed.\n\nI guess I inadvertently introduced this bug when adding support for handling SNI configurations. The attached patch should adress this issue, I believe.\n\nBTW, note that when I was testing a similar configuration with OpenSSL 1.0.0-beta4 and a checkout of OpenSSL_0_9_8-stable, I noticed that these two OpenSSL checkins:\n\n  http://cvs.openssl.org/chngview?cn=18318\n  http://cvs.openssl.org/chngview?cn=18320\n\nactually necessitate a backport of either r787722 or r788715, otherwise the renegotiation will stall. I would recommend to include these with 2.2.15.", "attachment_id": 24583, "bug_id": 48215, "id": 132198, "time": "2009-11-22T04:56:24Z", "creator": "asfbugz@velox.ch", "creation_time": "2009-11-22T04:56:24Z", "is_private": false}, {"count": 7, "tags": [], "text": "Thanks Kaspar!\n\nSo that OpenSSL change is effectively breaking backwards compat?  What a PITA.", "is_private": false, "bug_id": 48215, "id": 132350, "time": "2009-11-26T02:53:14Z", "creator": "jorton@redhat.com", "creation_time": "2009-11-26T02:53:14Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 48215, "is_private": false, "text": "r1137394", "id": 147259, "time": "2011-06-19T18:04:20Z", "creator": "sf@sfritsch.de", "creation_time": "2011-06-19T18:04:20Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "fixed in 2.4.1", "is_private": false, "bug_id": 48215, "id": 154222, "time": "2012-02-26T17:00:29Z", "creator": "sf@sfritsch.de", "creation_time": "2012-02-26T17:00:29Z", "attachment_id": null}]