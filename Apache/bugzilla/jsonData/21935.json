[{"attachment_id": null, "tags": [], "creator": "jacques.yelloz@wanadoo.fr", "text": "When a url is modified with mod_rewrite, the field parsed_uri->query of the \nstructure request_rec isn't updated after execution of mod_rewrite. \n\nBut the field args of the structure request_rec is well updated.\n\nBest regards \nJacques", "count": 0, "id": 41664, "time": "2003-07-28T15:37:48Z", "bug_id": 21935, "creation_time": "2003-07-28T15:37:48Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 21935, "attachment_id": null, "id": 62755, "time": "2004-08-30T10:40:20Z", "creator": "chip@force-elite.com", "creation_time": "2004-08-30T10:40:20Z", "is_private": false, "text": "I don't think mod_rewrite (or anything else for that matter...) should need to\nchange the parsed_uri structure.  They can just make their changes to the rest\nof the members of the request_rec struct.\n\n"}, {"count": 2, "tags": [], "creator": "raphael.droz@gmail.com", "attachment_id": null, "text": "mod_cache is influenced by the query-string.\nThere are case where one needs to affect mod_cache caching by altering or even removing the query-string.\n\nThe most obvious example is to forcefully cache resources like /x.css?ver=2.4\nThe current state of mod_rewrite/mod_cache \"integration\" is that mod-rewrite can't strip the query-string in a effective way: mod_cache will always consider the original query-string from key'ing the resource.", "id": 191490, "time": "2016-06-09T14:08:35Z", "bug_id": 21935, "creation_time": "2016-06-09T14:08:35Z", "is_private": false}, {"count": 3, "tags": [], "text": "I don't know about OP use-case, but in mine, the issue is clearly related to mod_cache (and could even be possibly solved by solely touching mod_cache)", "attachment_id": null, "id": 191492, "creator": "raphael.droz@gmail.com", "time": "2016-06-09T14:11:01Z", "bug_id": 21935, "creation_time": "2016-06-09T14:11:01Z", "is_private": false}, {"count": 4, "tags": [], "text": "Switching to mod_cache rather than mod_rewrite since that's where most use-case would be found.\nAdding one:\nTrying to unify query-string (strip some keys/values, reorder, ...) in order to increase cache efficiency, is a no-go if mod_cache can't use the rewritten query-string.", "attachment_id": null, "id": 191715, "creator": "raphael.droz@gmail.com", "time": "2016-06-16T14:33:58Z", "bug_id": 21935, "creation_time": "2016-06-16T14:33:58Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 21935, "text": "I didn't tested to actually revert this commit \nhttps://github.com/apache/httpd/commit/66cb25a80d251c86ece768100fd975460a3cae37\nbut it seems to be the root of this issue.\n\nBack in 2006, the point was to avoid resources to be stored under a key, where they cannot be fetched again in the quick handler. For example?\n\nI don't think it's a mod_cache issue. If people mess-up with URL, rewrite-rules, ... they should know what they're after.\nImpossibility to rewrite the query-string *before* it's used as a cache-key is a much more annoying side effect.", "id": 191716, "time": "2016-06-16T16:37:12Z", "creator": "raphael.droz@gmail.com", "creation_time": "2016-06-16T16:37:12Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 21935, "text": "Created attachment 34120\nUse the current path and query-string for the entity key\n\nIn latest versions, the key for the current entity (request) is computed early in the (quick)handler, and reused later when referring to the entity so that rewrites on the path or the query-string don't break things.\n\nThe possible issue is that this key is computed based on the original query-string (the path is the one when the handler is called already).\nThis works when mod_cache is configured with \"CacheQuickHandler on\" (the default) since no rewrite should happen before any quick_handler, but not when CacheQuickHandler is off (and the admin wants its changes to be taken into account for caching).\n\nThis patch tries to use r->uri and r->args where appropriate (instead of immutable r->parsed_uri.path and r->parsed_uri.query) such that the entity key is computed accordingly.\nIt works with both trunk and 2.4.x.\n\nCould you please try it?", "id": 192984, "time": "2016-08-10T17:10:34Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2016-08-10T17:10:34Z", "is_private": false, "attachment_id": 34120}, {"count": 7, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "text": "Committed in r1756553 and proposed for backport to 2.4.x.", "id": 193142, "time": "2016-08-16T22:03:13Z", "bug_id": 21935, "creation_time": "2016-08-16T22:03:13Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 21935, "attachment_id": 34157, "id": 193146, "time": "2016-08-17T02:58:36Z", "creator": "raphael.droz@gmail.com", "creation_time": "2016-08-17T02:58:36Z", "is_private": false, "text": "Created attachment 34157\nsample test vhost\n\nJust found the time to test it with the attached configuration, but wasn't able to have the cache key takes the rewrite query string into account.\nMay I've overlooked something?\n\nSide note: the patch does not seem to affect ap_log_rerror() which still logs (\"cache: Caching url: %s\", r->unparsed_uri);"}, {"count": 9, "tags": [], "bug_id": 21935, "text": "Errata, I was not testing the patched/compiled mod_cache* module.\nPatch works! (as per htcacheclean -A).\nThank you very much Yann!\n\n(the issue about logging the wrong key still apply though)", "id": 193147, "time": "2016-08-17T03:13:52Z", "creator": "raphael.droz@gmail.com", "creation_time": "2016-08-17T03:13:52Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "text": "Actual key logging addressed in r1756631 (added to backport proposal).", "id": 193153, "time": "2016-08-17T13:27:01Z", "bug_id": 21935, "creation_time": "2016-08-17T13:27:01Z", "is_private": false}, {"count": 11, "tags": [], "text": "Fixed in 2.4.25", "attachment_id": null, "id": 195751, "creator": "covener@gmail.com", "time": "2016-12-31T00:33:58Z", "bug_id": 21935, "creation_time": "2016-12-31T00:33:58Z", "is_private": false}]