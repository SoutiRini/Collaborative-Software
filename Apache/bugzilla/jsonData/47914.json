[{"count": 0, "tags": [], "bug_id": 47914, "text": "Because the Executor uses the cmd.exe to launch the command - if an argument contains a < or a > this gets interpreted by cmd as an input/output redirection and causes the command to fail.\n\nThe fix for this should be fairly easy. An extra OR clause in the quoteArgument method of the Commandline class.\n\n       // WIN9x uses a bat file for executing commands\n                   || (IS_WIN_9X && argument.indexOf(';') != -1)\n                   || (IS_WIN_9X && (argument.indexOf('<') || argument.indexOf('>')) != -1)", "id": 130731, "time": "2009-09-28T17:41:19Z", "creator": "npellow@atlassian.com", "creation_time": "2009-09-28T17:41:19Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 47914, "attachment_id": null, "text": "The situation is a bit more complex since the same escapes would apply to anything executed via any of the launchers that use a separate interpreter (ScriptCommandLauncher, OS2CommandLauncher, WinNTCommandLauncher and potentially PerlScriptCommandLauncher - I don't know enough about Netware).\n\nSo escaping things based on the OS would be wrong, it would have to happen based on the launcher.\n\nEven Win95 should use the Java13CommandLauncher by default, doesn't it?", "id": 130744, "time": "2009-09-29T07:10:16Z", "creator": "bodewig@apache.org", "creation_time": "2009-09-29T07:10:16Z", "is_private": false}]