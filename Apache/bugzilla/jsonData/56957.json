[{"count": 0, "tags": [], "creator": "vardarmo@outlook.com", "attachment_id": 31999, "is_private": false, "id": 177728, "time": "2014-09-11T07:39:03Z", "bug_id": 56957, "creation_time": "2014-09-11T07:39:03Z", "text": "Created attachment 31999\nexcel files and java source file\n\nI am reading an Excel 2007 file(xlsx format). After the first read, when I close the Workbook object, the second time I run the Java application, I get exception in Eclipse.\n\nI am using the latest release of POI available in maven repositories, i.e. 3.11 beta2. Tested on both Windows and Linux, Java 7 and Java 8, the problem persists in all cases\n\nThis happens ONLY on Microsoft Excel 2007 XLSX files. It does not happen when using Microsoft Excel 2013 XLSX files.\n\n///////////////////////////////////////////////////////////////////\nThe error I am getting in Eclipse console is the following:\n\nException in thread \"main\" org.apache.poi.POIXMLException: java.lang.reflect.InvocationTargetException\n\tat org.apache.poi.xssf.usermodel.XSSFFactory.createDocumentPart(XSSFFactory.java:62)\n\tat org.apache.poi.POIXMLDocumentPart.read(POIXMLDocumentPart.java:427)\n\tat org.apache.poi.POIXMLDocument.load(POIXMLDocument.java:162)\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:236)\n\tat org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:109)\n\tat Main.main(Main.java:17)\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:526)\n\tat org.apache.poi.xssf.usermodel.XSSFFactory.createDocumentPart(XSSFFactory.java:60)\n\t... 5 more\nCaused by: java.io.IOException: error: Unexpected end of file after null\n\tat org.apache.poi.xssf.model.SharedStringsTable.readFrom(SharedStringsTable.java:129)\n\tat org.apache.poi.xssf.model.SharedStringsTable.<init>(SharedStringsTable.java:106)\n\t... 10 more\n//////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////\nThe error I am getting from Microsoft Excel 2007 when opening the file after this corruption, is the following:\n\"Excel found unreadable content in 'file_name.xlsx'. Do you want to recover the contents of this workbook?\"\nWhen answering yes, it says:\n\"Excel was able to open the file by repairing or removing the unreadable content. Removed Part: /xl/sharedStrings.xml part with XML error.  (Strings) A document must contain exactly one root element. Line 1, column 0.\"\n///////////////////////////////////////////////////////////////////////////\nI also attach\n1. the Java source file I used to read the file(Main.java), and \n2. the Excel 2007 XLSX file before corruption(Excel_2007_file_before.xlsx) and after corruption(Excel_2007_file_after.xlsx)\nThe files are in 'all.zip' file"}, {"count": 1, "tags": [], "bug_id": 56957, "attachment_id": null, "text": "I can reproduce the problem with your small test file\n\nNo idea why it's happening, hopefully someone else can investigate...", "id": 177730, "time": "2014-09-11T08:30:42Z", "creator": "apache@gagravarr.org", "creation_time": "2014-09-11T08:30:42Z", "is_private": false}, {"count": 2, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "text": "The problem is that the original xlsx does not contain a file for the SharedString table in the zip-file and thus an empty string table is created during loading the file initially.\n\nDuring close(), the file is written back and a 0-byte sharedStrings.xml file is created, which later fails during loading the xlsx again.\n\nI tried it with the following change, which makes this test work, however I am not sure if this is the correct way to exclude parts which do not have any size:\n\n--- a/src/ooxml/java/org/apache/poi/openxml4j/opc/internal/marshallers/ZipPartMarshaller.java\n+++ b/src/ooxml/java/org/apache/poi/openxml4j/opc/internal/marshallers/ZipPartMarshaller.java\n@@ -63,6 +63,11 @@ public final class ZipPartMarshaller implements PartMarshaller {\n                        // Normally should happen only in developement phase, so just throw\n                        // exception\n                }\n+\n+               // check if there is anything to save\n+               if(part.getSize() == 0) {\n+                   return true;\n+               }\n \n                ZipOutputStream zos = (ZipOutputStream) os;\n                ZipEntry partEntry = new ZipEntry(ZipHelper", "id": 178401, "time": "2014-10-12T19:35:18Z", "bug_id": 56957, "creation_time": "2014-10-12T19:35:18Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 56957, "text": "What xbean version you are using?", "id": 180226, "time": "2015-01-08T08:11:18Z", "creator": "pal.ratikanta@gmail.com", "creation_time": "2015-01-08T08:11:18Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 56957, "attachment_id": null, "text": "I can reproduce the problem in 3.11 version with xmlbeans 2.6.0.", "id": 180782, "time": "2015-02-05T10:52:48Z", "creator": "rober_20_02@yahoo.es", "creation_time": "2015-02-05T10:52:48Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "dominik.stadler@gmx.at", "is_private": false, "count": 5, "id": 181420, "time": "2015-03-01T20:42:19Z", "bug_id": 56957, "creation_time": "2015-03-01T20:42:19Z", "text": "BTW, a possible workaround if you are just reading from the file is to open the file in \"read-only\" mode, then the problem does not happen:\n\nWorkbook workbook = WorkbookFactory.create(OPCPackage.open(file, PackageAccess.READ));"}, {"count": 6, "tags": [], "bug_id": 56957, "attachment_id": null, "text": "(In reply to Dominik Stadler from comment #5)\n> BTW, a possible workaround if you are just reading from the file is to open\n> the file in \"read-only\" mode, then the problem does not happen:\n> \n> Workbook workbook = WorkbookFactory.create(OPCPackage.open(file,\n> PackageAccess.READ));\n\nI get below exception when I open empty file in read-noly mode:\n\norg.apache.poi.POIXMLException: org.apache.poi.openxml4j.exceptions.InvalidOperationException: Operation not allowed, document open in read only mode!\n\tat org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:394)\n\tat org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:354)\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.onDocumentRead(XSSFWorkbook.java:341)\n\tat org.apache.poi.POIXMLDocument.load(POIXMLDocument.java:166)\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:240)\n\tat com.X.Y.db.process.SourceProcessorA.process(SourceProcessorA.java:42)\n\tat com.X.Y.db.process.SourceProcessorATest.testProcessEmptySource(SourceProcessorATest.java:59)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:157)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:211)\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:67)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)\nCaused by: org.apache.poi.openxml4j.exceptions.InvalidOperationException: Operation not allowed, document open in read only mode!\n\tat org.apache.poi.openxml4j.opc.OPCPackage.throwExceptionIfReadOnly(OPCPackage.java:512)\n\tat org.apache.poi.openxml4j.opc.OPCPackage.createPart(OPCPackage.java:773)\n\tat org.apache.poi.openxml4j.opc.OPCPackage.createPart(OPCPackage.java:749)\n\tat org.apache.poi.POIXMLDocumentPart.createRelationship(POIXMLDocumentPart.java:374)", "id": 181436, "time": "2015-03-02T12:04:32Z", "creator": "rober_20_02@yahoo.es", "creation_time": "2015-03-02T12:04:32Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "count": 7, "id": 181438, "time": "2015-03-02T12:49:21Z", "bug_id": 56957, "creation_time": "2015-03-02T12:49:21Z", "text": "Can you try with POI 3.12 beta 1? There was a read-only fix in that"}, {"attachment_id": null, "tags": [], "creator": "rober_20_02@yahoo.es", "text": "(In reply to Nick Burch from comment #7)\n> Can you try with POI 3.12 beta 1? There was a read-only fix in that\n\nWorks (if you don't need write)!!\n\nUpdate to POI 3.12 beta 1 and you open files in read only mode.", "count": 8, "id": 181455, "time": "2015-03-03T09:29:32Z", "bug_id": 56957, "creation_time": "2015-03-03T09:29:32Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 56957, "text": "This is now fixed for empty shared string tables via r1710521, I put in a check to only avoid writing the XML file for SharedStringTable for now as doing it for all types of documents likely introduced trouble with existing code and broke unit tests. \n\nPlease report new bugs if there are any other XML-parts that cause trouble if written empty.", "id": 185964, "time": "2015-10-26T07:56:30Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-10-26T07:56:30Z", "is_private": false, "attachment_id": null}]