[{"count": 0, "tags": [], "bug_id": 4663, "attachment_id": null, "id": 7567, "time": "2001-11-05T16:58:38Z", "creator": "serch@acme.com", "creation_time": "2001-11-05T16:58:38Z", "is_private": false, "text": "when the load of the server rises i get errors like\n\n2001-11-05 17:56:17 StandardWrapperValve[default]: Servlet.service() for servlet \ndefault threw exception\njava.io.IOException: Broken pipe\n        at java.net.SocketOutputStream.socketWrite(Native Method)\n        at java.net.SocketOutputStream.write(SocketOutputStream.java:83)\n        at org.apache.catalina.connector.ResponseBase.flushBuffer(Unknown \nSource)\n        at org.apache.catalina.connector.HttpResponseBase.flushBuffer(Unknown \nSource)\n        at org.apache.catalina.connector.ResponseBase.write(Unknown Source)\n        at org.apache.catalina.connector.ResponseStream.write(Unknown Source)\n        at org.apache.catalina.connector.http.HttpResponseStream.write(Unknown \nSource)\n        at org.apache.catalina.servlets.DefaultServlet.copyRange(Unknown Source)\n        at org.apache.catalina.servlets.DefaultServlet.copy(Unknown Source)\n        at org.apache.catalina.servlets.DefaultServlet.serveResource(Unknown \nSource)\n        at org.apache.catalina.servlets.DefaultServlet.doGet(Unknown Source)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:740)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at \norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Unknown Source)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(Unknown \nSource)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invoke(Unknown Source)\n        at org.apache.catalina.core.ContainerBase.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardContextValve.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(Unknown Source)\n        at org.apache.catalina.valves.CertificatesValve.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invoke(Unknown Source)\n        at org.apache.catalina.core.ContainerBase.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardContext.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardHostValve.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(Unknown Source)\n        at org.apache.catalina.valves.AccessLogValve.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invoke(Unknown Source)\n        at org.apache.catalina.core.ContainerBase.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardEngineValve.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invoke(Unknown Source)\n        at org.apache.catalina.core.ContainerBase.invoke(Unknown Source)\n        at org.apache.catalina.connector.http.HttpProcessor.process(Unknown \nSource)\n        at org.apache.catalina.connector.http.HttpProcessor.run(Unknown Source)\n        at java.lang.Thread.run(Thread.java:484)\n\n\ndo you have any idea why is this happening? or how can I avoid it?"}, {"count": 1, "tags": [], "bug_id": 4663, "attachment_id": null, "id": 7568, "time": "2001-11-05T17:15:48Z", "creator": "remm@apache.org", "creation_time": "2001-11-05T17:15:48Z", "is_private": false, "text": "This error can show up in many different situations, but is usually caused when \nthe client disconnects from the server while the server was actually serving \nthe request. Unless you are sure that the client never initiated the \ndisconnection, and that there was no network transport failure, this is not a \nbug."}, {"count": 2, "tags": [], "bug_id": 4663, "attachment_id": null, "is_private": false, "id": 22718, "time": "2002-09-12T01:38:38Z", "creator": "srikarthi@yahoo.com", "creation_time": "2002-09-12T01:38:38Z", "text": "on my instance, this error occurs even when there are very few users and \nwithout much load. i am not sure if that incomplete request causes this error.\n\nbut the web server perfomed better, when a alot of System.out s were removed. \n\nnot sure why this is still occuring but the sad part is this error puts the \nwhole server down and i have to restart the tomacat which is unpleasant and i \nwould like to have a resolution soon if possible. \n\n"}, {"count": 3, "tags": [], "text": "I am using tomcat with jboss and is experiencing the same error. I see it more \noften when the load increases. Our application is running on the intranet and \nthere has not been reported any problems with the network so I don't believe \nthat is the problem. ", "attachment_id": null, "id": 26122, "creator": "kristian.berre@sas.no", "time": "2002-11-12T09:15:25Z", "bug_id": 4663, "creation_time": "2002-11-12T09:15:25Z", "is_private": false}, {"count": 4, "tags": [], "creator": "domingo@ibit.org", "attachment_id": null, "id": 33328, "time": "2003-03-18T10:12:10Z", "bug_id": 4663, "creation_time": "2003-03-18T10:12:10Z", "is_private": false, "text": "We are experiencing the same error with jboss-3.0.6_tomcat-4.1.18. \n\nCan we apply any work-\narround for this problem?\n\nWe are thinking to use apache as web server."}, {"count": 5, "tags": [], "bug_id": 4663, "attachment_id": null, "is_private": false, "id": 35219, "time": "2003-04-15T15:58:30Z", "creator": "remm@apache.org", "creation_time": "2003-04-15T15:58:30Z", "text": "4.1.24 adds special handling for this exception (triggered by client or network \nbehavior, and which should be ignored), so the full stack trace is no longer \nlogged."}, {"count": 6, "tags": [], "bug_id": 4663, "attachment_id": null, "is_private": false, "id": 50053, "time": "2004-01-05T10:34:25Z", "creator": "paltankov@globul.bg", "creation_time": "2004-01-05T10:34:25Z", "text": "Same behaviour of org.apache.jk.server.JkCoyoteHandler in TC 4.1.29 as \nreported in bug 4663 for 4.1.24. Is it planned this error to be repored under \ncertain debug level, so actually we can just turn it off? The situations is \nrather common (user presses stop button after some heavy report was selected \nand has to wait) and the stack traces are undesirable in production \nenvironment. \n\nJan 5, 2004 12:18:49 PM org.apache.jk.server.JkCoyoteHandler action\nSEVERE: Error in action code\njava.net.SocketException: Broken pipe\n        at java.net.SocketOutputStream.socketWrite0(Native Method)\n        at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)\n        at java.net.SocketOutputStream.write(SocketOutputStream.java:136)\n        at org.apache.jk.common.ChannelSocket.send(ChannelSocket.java:457)\n        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:654)\n        at org.apache.jk.server.JkCoyoteHandler.action\n(JkCoyoteHandler.java:435)\n        at org.apache.coyote.Response.action(Response.java:222)\n        at org.apache.coyote.Response.finish(Response.java:343)\n        at org.apache.jk.server.JkCoyoteHandler.invoke\n(JkCoyoteHandler.java:314)\n        at org.apache.jk.common.HandlerRequest.invoke(HandlerRequest.java:387)\n        at org.apache.jk.common.ChannelSocket.invoke(ChannelSocket.java:673)\n        at org.apache.jk.common.ChannelSocket.processConnection\n(ChannelSocket.java:615)\n        at org.apache.jk.common.SocketConnection.runIt(ChannelSocket.java:786)\n        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:666)\n        at java.lang.Thread.run(Thread.java:536)\n"}, {"count": 7, "tags": [], "creator": "l_xuebin@hotmail.com", "attachment_id": null, "id": 50220, "time": "2004-01-08T03:54:09Z", "bug_id": 4663, "creation_time": "2004-01-08T03:54:09Z", "is_private": false, "text": "We are also experiencing the same error with jboss-3.0.0_tomcat-4.0.3 and \napache 1.3.27 with jk and the jdk is j2sdk-1_4_1_01-fcs for linux-i586 rpm.\nThe exception that the jboss caught:\n2003-12-30 08:37:51,053 ERROR [org.jboss.web.localhost.Engine] Ajp13Processor\n[8009][2] process: invoke\njava.net.SocketException: Broken pipe\n\tat java.net.SocketOutputStream.socketWrite0(Native Method)\n\tat java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)\n\tat java.net.SocketOutputStream.write(SocketOutputStream.java:136)\n\tat org.apache.ajp.Ajp13.send(Ajp13.java:525)\n\tat org.apache.ajp.RequestHandler.finish(RequestHandler.java:496)\n\tat org.apache.ajp.Ajp13.finish(Ajp13.java:395)\n\tat org.apache.ajp.tomcat4.Ajp13Response.finishResponse\n(Ajp13Response.java:192)\n\tat org.apache.ajp.tomcat4.Ajp13Processor.process\n(Ajp13Processor.java:435)\n\tat org.apache.ajp.tomcat4.Ajp13Processor.run(Ajp13Processor.java:495)\n\tat java.lang.Thread.run(Thread.java:536)\n\nThis accoured more often of the low load the system and could cause to 404 \nreported by apache. "}, {"count": 8, "text": "As stated before this is not a bug.\n\nThis happens during normal operation of Tomcat when the web server side\ntears down the tomcat connector socket due to the remote client terminating\nits request prior to handling of the request by tomcat completing.\n\nHere is what happens:\n\n1.  Remote browser makes a request to web server.\n2.  Web server sends request to tomcat via the JK connector.\n3.  Tomcat starts processing request.\n4.  Tomcat's output buffer fills so it sends it back to the\n    web server via the connector socket.\n5.  web server tries to write the buffer back to the remote\n    client browser.\n6.  The web server write to the remote client browser fails\n    because the user hit STOP in their browser to abandon\n    the request.\n7.  web server process/thread detects this.  To free up resources\n    since the request was abandoned the web server process/thread\n    closes the connector socket to Tomcat.  Then it can recycle itself\n    so it is available for another http request.\n8.  On the Tomcat side it will fail when it tries to write additional\n    output to the connector socket.  This triggers the exception you see.\n9.  Now Tomcat can terminate processing the abandoned request if it\n    hadn't been completed yet.\n\nThis is all perfectly normal.\n\nPlease do not reopen this.", "creator": "glenn@apache.org", "attachment_id": null, "id": 50247, "time": "2004-01-08T13:23:40Z", "bug_id": 4663, "creation_time": "2004-01-08T13:23:40Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "creator": "paltankov@globul.bg", "attachment_id": null, "id": 50301, "time": "2004-01-09T08:20:38Z", "bug_id": 4663, "creation_time": "2004-01-09T08:20:38Z", "is_private": false, "text": "Thank you very much for the detailed explanation. Though I'm pretty sure all \nppl that post here understand the matter. The question is: can we hope this \nnormal situation to be reported in logs with stack-traces only under certain \ndebug level and be just skipped at debug level 0 of the connector?\nSorry for bothering you again."}, {"count": 10, "tags": [], "text": "The latest release of Tomcat 4 only logs a single line for this exception\nrather than the entire stack trace, here is an example.\n\n2004-01-09 07:49:12 Ajp13Processor[8009][49] process: IOException Broken pipe", "is_private": false, "bug_id": 4663, "id": 50317, "time": "2004-01-09T14:53:06Z", "creator": "glenn@apache.org", "creation_time": "2004-01-09T14:53:06Z", "attachment_id": null}, {"count": 11, "tags": [], "text": "Sorry to borthing you all, but we experienced that, after this happened,\nthe service app we deploy can nerver be accessed. But sometime it can be\nresumed.\nSo what bring this ?", "is_private": false, "bug_id": 4663, "id": 50525, "time": "2004-01-14T07:16:23Z", "creator": "l_xuebin@hotmail.com", "creation_time": "2004-01-14T07:16:23Z", "attachment_id": null}, {"count": 12, "text": "I have a servlet which takes a couple of seconds to execute.\nWhen I request this servlet thro browser, and press stop button after a moment, \nI see the exception with stack trace.\n\norg.apache.jk.server.JkCoyoteHandler action\nSEVERE: Error in action code\njava.net.SocketException: Broken pipe\n        at java.net.SocketOutputStream.socketWrite0(Native Method)\n\n\nThe problem here is not with the exception, but I clearly notice that the \nrequest comes to tomcat again and gets processed successfully, but the response \nis not given to the client (browser).\n\nWe are on Apache 2 + Tomcat 4.1.30 + Mod_jk2 on Linux (RHEL 3).\n\nI have done this testing for a week, and I am able to reproduce this bug at \nwill and also I am 100% sure about the servlet getting invoked twice.\n\nI can cleary see in apache access log that the request came from client only \nonce, but in apache error log (mod_jk log), I can see mod_jk openign connection \ntwice to tomcat. :-(\n\nCan you please suggest me a solution for this problem.\n\nThanks\nSurendra\n", "creator": "surendrag@iglobalmedia.com", "attachment_id": null, "id": 61110, "time": "2004-07-25T22:03:47Z", "bug_id": 4663, "creation_time": "2004-07-25T22:03:47Z", "tags": [], "is_private": false}, {"count": 13, "tags": [], "bug_id": 4663, "attachment_id": null, "id": 67670, "time": "2004-12-01T02:49:50Z", "creator": "funkman@joedog.org", "creation_time": "2004-12-01T02:49:50Z", "is_private": false, "text": "As of November 15, 2004, JK2 is no longer supported. All bugs related to JK2 \nwill be marked as WONTFIX. In its place, some of its features have been \nbackported to jk1. Most of those features will be seen in 1.2.7, which is \nslated for release on November 30th, 2004.\n\nAnother alternative is the ajp addition to mod_proxy which will be part of \napache 2.\n\nFor more information on the Tomat connectors docs at\nhttp://jakarta.apache.org/tomcat/connectors-doc/"}]