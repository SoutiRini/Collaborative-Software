[{"count": 0, "tags": [], "creator": "hayden.james@gmail.com", "attachment_id": null, "text": "If I create a servlet that does the following:\n\nresponse.setHeader(\"X-BUG\", \"Value\");\nresponse.sendError(HttpServletResponse.SC_BAD_REQUEST);\n\nIf I use the tomcat default error page for 400 responses, the response will\ncontain the header \"X-BUG\" with value \"Value\".\n\nHowever, if I create a custom error page, the response headers do NOT contain\nthe \"X-BUG\" header in the response. \n\nHere is my web.xml, for example:\n\n<error-page>\n    <error-code>400</error-code>\n    <location>/400.jsp</location>\n</error-page>\n\n400.jsp contains plain html:\n\n<html>\n<body>\n<h3>Custom 400 error page</h3>\n</body>\n</html>", "id": 103186, "time": "2007-05-14T09:03:17Z", "bug_id": 42409, "creation_time": "2007-05-14T09:03:17Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 42409, "text": "Not sure if it matters, but this occurred for me using the doGet() method in my\nservlet.  Also this problem appears to exist in 5.5.23, 6.0.10 and the\nunreleased 6.0.13 build.", "id": 103188, "time": "2007-05-14T09:06:24Z", "creator": "hayden.james@gmail.com", "creation_time": "2007-05-14T09:06:24Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 42409, "attachment_id": null, "id": 103301, "time": "2007-05-17T08:03:15Z", "creator": "shivahr@gmail.com", "creation_time": "2007-05-17T08:03:15Z", "is_private": false, "text": "Was wondering how I could view the HTTP Headers. Found this useful:\nhttp://www.jmarshall.com/easy/http/http_footnotes.html#manually\n\nI could reproduce the reported behavior with trunk build tc6.0.x. \n\nNow looking at Specs to see if this is really a Bug."}, {"count": 3, "tags": [], "bug_id": 42409, "text": "I tried the same situation with jetty and it appears to work properly.  It seems\nincorrect for the response to not send all the data (including headers) I\nspecify just because the error page was set.  Also, an easy way to test this\nbehavior is to use the web developer plugin if you browse with firefox. \nInformation -> View Response Headers.", "id": 103306, "time": "2007-05-17T08:51:00Z", "creator": "hayden.james@gmail.com", "creation_time": "2007-05-17T08:51:00Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 42409, "attachment_id": null, "id": 103845, "time": "2007-05-30T17:49:37Z", "creator": "hayden.james@gmail.com", "creation_time": "2007-05-30T17:49:37Z", "is_private": false, "text": "Same problem exists in 6.0.13.  How can I motivate someone to fix this bug or at\nleast point me in the right direction so I can fix it myself?"}, {"count": 5, "tags": [], "creator": "shivahr@gmail.com", "attachment_id": null, "text": "I too tested this scenario on Jetty, as well as on WebSphere Application Server\n(WAS) binaries and this problem doesn't occur with them. In both Jetty and WAS,\nI am able to see the extra response header even when using custom error page.\n\nMy search of specification for anything against it has been in vain.\n\nFollowing is the piece of code that I have looked into:\norg.apache.catalina.core.StandardHostValve\nprotected void status(Request request, Response response);\nprotected boolean custom(Request request, Response response, ErrorPage errorPage);\n\nHere are my observations:\n1) When a custom error page is used, client request is \"forwarded\" to the custom\nerror page. \n\nNow, as per Servlet 2.4 specification (page 65, SRV.8.4):\n\"The forward method of the RequestDispatcher interface may be called by the\ncalling servlet only when no output has been committed to the client. If output\ndata exists in the response buffer that has not been committed, the content must\nbe cleared before the target servlet\u2019s service method is called. If the response\nhas been committed, an IllegalStateException must be thrown.\"\n\nI see that in current Tomcat code, in \"protected boolean custom(Request request,\nResponse response,ErrorPage errorPage)\" method we are calling\n\"response.reset(statusCode, message)\" to clear the response content. This also\nclears the response headers that users might have set in their code.\n\nQuestion for Committers:\nI am seeing that the specification asks us to reset just the response buffer\n(before 'forwarding' requests) while we are resetting the entire response object\n(which also resets response headers). \n\nCan we replace the call to \"response.reset(statusCode, message)\" with a call to\n\"response.resetBuffer()\"? \n\nIf yes, some of the \"request.getAttribute(..)\" calls in \"protected boolean\ncustom(Request request, Response response, ErrorPage errorPage)\" method and\nhence some of the \"request.setAttribute(..)\" calls in \"protected void\nstatus(Request request, Response response)\" method might become redundant and\ncould be removed as well.\n\n2) When default error page is used, there is no request \"forwarding\" and hence\nno response resets (and hence the response headers that users set in their code\nare preserved). I think an error message is simply added to existing response's\nbody and response is pushed to client.\n\n- Shiva", "id": 103870, "time": "2007-05-31T05:15:16Z", "bug_id": 42409, "creation_time": "2007-05-31T05:15:16Z", "is_private": false}, {"count": 6, "tags": [], "creator": "shivahr@gmail.com", "attachment_id": 20297, "text": "Created attachment 20297\nWAR with custom error page; extra response headers not seen\n\npage to run: http://localhost:8080/Bug_42409_error/test", "id": 103871, "time": "2007-05-31T05:24:31Z", "bug_id": 42409, "creation_time": "2007-05-31T05:24:31Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 42409, "attachment_id": 20298, "id": 103872, "time": "2007-05-31T05:25:59Z", "creator": "shivahr@gmail.com", "creation_time": "2007-05-31T05:25:59Z", "is_private": false, "text": "Created attachment 20298\nWAR with default error page; extra response headers seen\n\npage to run: http://localhost:8080/Bug_42409_correct/test"}, {"count": 8, "tags": [], "text": "Created attachment 20299\ncall \"response.resetBuffer()\" instead of \"response.reset(statusCode, message)\"\n\ndoes anyone foresee any regressions out of this?", "attachment_id": 20299, "id": 103880, "creator": "shivahr@gmail.com", "time": "2007-05-31T07:53:26Z", "bug_id": 42409, "creation_time": "2007-05-31T07:53:26Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 42409, "text": "No, I don't think we're going to change this. We'll keep the current code which\nsets the status code + message, but your customization for your own is fine too.", "id": 103889, "time": "2007-05-31T09:11:11Z", "creator": "remm@apache.org", "creation_time": "2007-05-31T09:11:11Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "hayden.james@gmail.com", "attachment_id": null, "text": "If the code is kept as is, how would one use a custom error page and still be\nable to set response headers?  I'm a little confused, is it not a bug?", "id": 103891, "time": "2007-05-31T09:59:26Z", "bug_id": 42409, "creation_time": "2007-05-31T09:59:26Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 42409, "attachment_id": null, "text": "James,\nIf you have any strong use-case for your requirement, this might be reconsidered.", "id": 103937, "time": "2007-05-31T22:10:29Z", "creator": "shivahr@gmail.com", "creation_time": "2007-05-31T22:10:29Z", "is_private": false}, {"count": 12, "tags": [], "text": "Forgot to mention the answer to your question. Extra response headers set in the\nCustom error page will be preserved and passed back to the client. \n\nIs there any strong reason why you are not doing this and why you want to set\nthe extra response headers in the Servlet/JSP from where error is thrown?", "attachment_id": null, "id": 103939, "creator": "shivahr@gmail.com", "time": "2007-05-31T22:26:28Z", "bug_id": 42409, "creation_time": "2007-05-31T22:26:28Z", "is_private": false}, {"count": 13, "tags": [], "creator": "hayden.james@gmail.com", "attachment_id": null, "text": "Ok.  I will tell you what my use case is for this feature.  I'm writing a set of\nservlets that handle requests via javascript and the XMLHttpRequest js object. \nIn order to differentiate between good requests and bad requests, I either have\nthe response code set to 200 for success and 400 for failure.  I have separate\nhandlers for each status number on the javascript end.  As part of the response,\nI send data in the header via the \"X-JSON\" header with a json string as the\nvalue in the header.  The client reads the json parses the json string in both\nsuccess responses and error responses (SC_BAD_REQUEST).  The reason im using a\nspecial error page for 400 responses is that the default tomcat page is a lot\nmore verbose, I want to respond with a very small json string, not a full html page.\n\nThe prototype javascript library, (http://www.prototypejs.org) is what\nautomatically evaluates json for me via the X-JSON response header (in case that\ninformation helps).  Anyway, I think this is a pretty reasonable use case, but\nif others disagree, I would at least like to know some other avenues I can take\nto get this type of usage with tomcat.  Thanks.", "id": 104000, "time": "2007-06-02T07:58:35Z", "bug_id": 42409, "creation_time": "2007-06-02T07:58:35Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 42409, "attachment_id": null, "id": 104033, "time": "2007-06-04T07:36:11Z", "creator": "shivahr@gmail.com", "creation_time": "2007-06-04T07:36:11Z", "is_private": false, "text": "Interesting use-case. One immediate solution that is coming to mind is setting\n\"X-JSON\" header in your custom error page for 400 response. Doesn't this work\nfor you?"}, {"count": 15, "tags": [], "bug_id": 42409, "text": "How would that work?  If a javascript client makes a request to the\ncontroller/servlet, the controller decides whether the request is \"good\" or not,\nif not then the controller generates the response json and sets it in the header\nand returns a page containing that header.  It seems it would be easier to set\nthe header on the page if the header value was always the same but it isn't.", "id": 104034, "time": "2007-06-04T08:29:05Z", "creator": "hayden.james@gmail.com", "creation_time": "2007-06-04T08:29:05Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 42409, "attachment_id": null, "text": "\nWhen you need to pass information from the controller to a page, you normally use\nrequest attributes, not response attributes.\nYou can can do the same in your case.\n\nI hope that helps.\nR\n", "id": 104063, "time": "2007-06-05T02:58:46Z", "creator": "rm@moosauer.de", "creation_time": "2007-06-05T02:58:46Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 42409, "text": "As hinted in Comment #16, I tried this:\n\n1) In \"TestServlet.java\" (see\nhttp://issues.apache.org/bugzilla/attachment.cgi?id=20297) modified the doGet()\nmethod as below:\n\t\t//response.setHeader(\"X-BUG\", \"Value1\");\n\t\trequest.setAttribute(\"X-BUG\", \"Value1\");\n\t\tresponse.sendError(HttpServletResponse.SC_BAD_REQUEST);\n\n2) Updated \"400.jsp\" as below:\n<html>\n<body>\n<h3>Custom 400 error page</h3>\n<% String value = (String) request.getAttribute(\"X-BUG\");\nif(value != null && value.length() > 0) {\n\tresponse.setHeader(\"X-BUG\", value);\n} %>\n</body>\n</html>\n\nDoes this solve your problem?", "id": 104083, "time": "2007-06-05T07:20:20Z", "creator": "shivahr@gmail.com", "creation_time": "2007-06-05T07:20:20Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 42409, "text": "I guess this workaround should work, unfortunately I'll have to rip through all\nmy source to replace setHeader with setAttribute and then add a scriptlet to my\nerror jsp page.  However, I still don't understand why this won't be fixed,\nseems like a legitimate bug.  Anyhow, thanks for the help.", "id": 104172, "time": "2007-06-07T08:27:40Z", "creator": "hayden.james@gmail.com", "creation_time": "2007-06-07T08:27:40Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 42409, "attachment_id": null, "text": "One problem I find with the above code is that if I decide not to use a custom\n400 page then my extra header will not be available in the response.  Is there\nanother solution where it would work regardless of page I use (besides fixing\nthe bug I guess)?", "id": 104468, "time": "2007-06-16T19:00:42Z", "creator": "hayden.james@gmail.com", "creation_time": "2007-06-16T19:00:42Z", "is_private": false}, {"count": 20, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "Hi, I would like to add my use case on to the scales.\n\nWe are using Acegi Security Library for Spring (http://acegisecurity.org/) to\nperform authentication and authorization tasks in our web application. In\nessence, it works as a filter, declared in web.xml, and preprocesses the web\nrequest. We are using Digest authentication as per RFC 2617, but you might\nconsider using Basic authentication as well.\n\nWhen there is a need to request user credentials, the library ([1]) generates\nWWW-Authenticate header containing realm name, random nonce value, and other\ninformation, and calls\nhttpResponse.sendError(HttpServletResponse.SC_UNAUTHORIZED), and the rest of the\nresponse is generated by the tomcat error page.\n\nNow, if I configure my own dynamic or static page for error code 401, the\nauthentication stops working, because the WWW-Authenticate header is lost from\nthe response.\n\n\nVersions:\n - Tomcat: 5.5.23\n - Acegi Security System for Spring: 1.0.4\n\nThe relevant Acegi Security source code is method \"commence()\" of class\norg.acegisecurity.ui.digestauth.DigestProcessingFilterEntryPoint, lines 104-105\nand above ([1])\n\n\n [1]\nhttp://svn.sourceforge.net/viewvc/acegisecurity/tags/release_1_0_4/core/src/main/java/org/acegisecurity/ui/digestauth/DigestProcessingFilterEntryPoint.java?revision=1881&view=markup", "id": 105042, "time": "2007-07-03T15:21:56Z", "bug_id": 42409, "creation_time": "2007-07-03T15:21:56Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 42409, "attachment_id": null, "text": "I'll add that other contains (Jetty, BEA/Oracle WebLogic Server, etc) appear to be handling this case correctly.\n\nWe are having a similar issue to Comment #20 with Spring Security (new name for ACEGI).\n\nThis really needs to be fixed. The resolution suggested in Comment #5 sounds like it would fix this issue and keep Tomcat spec compliant. At this point Tomcat is doing *more* than the spec requires.", "id": 121774, "time": "2008-10-22T06:22:47Z", "creator": "brian.curnow@gfs.com", "creation_time": "2008-10-22T06:22:47Z", "is_private": false}, {"count": 22, "tags": [], "bug_id": 42409, "text": "we are investigating this further, thank you for the detailed report\n\nFilip", "id": 121802, "time": "2008-10-22T22:59:18Z", "creator": "fhanik@apache.org", "creation_time": "2008-10-22T22:59:18Z", "is_private": false, "attachment_id": null}, {"count": 23, "tags": [], "bug_id": 42409, "attachment_id": null, "id": 122137, "time": "2008-11-03T06:28:34Z", "creator": "markt@apache.org", "creation_time": "2008-11-03T06:28:34Z", "is_private": false, "text": "After some further review, this has been fixed in trunk and proposed for 6.0.x"}, {"count": 24, "tags": [], "creator": "hayden.james@gmail.com", "attachment_id": null, "text": "Great, I'm glad to see this fix, I had given up hope last year and started using jetty since that didn't have this issue.", "id": 122165, "time": "2008-11-03T18:47:27Z", "bug_id": 42409, "creation_time": "2008-11-03T18:47:27Z", "is_private": false}, {"count": 25, "tags": [], "bug_id": 42409, "text": "This has been fixed in 6.0.x and will be included in 6.0.19 onwards.", "id": 122943, "time": "2008-11-30T14:58:37Z", "creator": "markt@apache.org", "creation_time": "2008-11-30T14:58:37Z", "is_private": false, "attachment_id": null}]