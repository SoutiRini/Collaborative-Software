[{"count": 0, "tags": [], "bug_id": 47303, "attachment_id": null, "is_private": false, "id": 127573, "time": "2009-06-02T17:19:51Z", "creator": "dsuits@lombardi.com", "creation_time": "2009-06-02T17:19:51Z", "text": "org.apache.tools.ant.taskdefs.Copy.copySingleFile()\n\nIf the source file does not exist, the following log is executed:\n\n                String message = \"Warning: Could not find file \"\n                    + file.getAbsolutePath() + \" to copy.\";\n                if (!failonerror) {\n                    log(message, Project.MSG_ERR);\n                } else {\n                    throw new BuildException(message);\n                }\n\nThis is inconsistent and misleading.  If it is an error for the file to be missing, then the message is incorrect \"Warning:\" should be spelled \"Error:\".  If instead the intent of failonerror is to convert errors to warnings, then the message priority should be Project.MSG_WARN."}, {"count": 1, "tags": [], "bug_id": 47303, "attachment_id": null, "is_private": false, "id": 127597, "time": "2009-06-03T08:23:19Z", "creator": "bodewig@apache.org", "creation_time": "2009-06-03T08:23:19Z", "text": "There are other places where the code says \"Warning\" and logs it as ERR in\nCopy (lines 441, 504 and 519 in trunk).\n\nWhile I agree this looks confusing I don't really think we should change it at all.\nThe change is really more of a cosmetic one and there might be code out there\nscanning for the word \"Warning\"."}, {"count": 2, "tags": [], "creator": "dsuits@lombardi.com", "attachment_id": null, "id": 127605, "time": "2009-06-03T11:06:29Z", "bug_id": 47303, "creation_time": "2009-06-03T11:06:29Z", "is_private": false, "text": "The documentation available here:\napache-ant-1.7.1-src.zip/apache-ant-1.7.1/docs/manual/CoreTasks/copy.html\n\n\n\"If false, log a warning message, but do not stop the build, when the file to copy does not exist or one of the nested filesets points to a directory that doesn't exist or an error occurs while copying.\"\n\nSo build script developers are being told to expect a warning, but BuildEvent consumers (custom BuildListeners) are receiving an error to process."}]