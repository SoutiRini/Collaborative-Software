[{"count": 0, "tags": [], "bug_id": 61203, "text": "It currently creates an invalid XSSFClientAnchor for a CTOneCellAnchor instance, and returns null for CTAbsoluteAnchor instances.\n\nThese two should return XSSFAnchor instances that reflecs the specifics of their cases.\n\nThe current XSSFClientAnchor is for a CTTwoCellAnchor that uses \"from\" and \"to\" row/column/offset values to define the bounding rectangle.\n\nCTOneCellAnchor uses a \"from\" row/column/offset to define the top/left corner of the bounds, and a CTPositiveSize2D (xdr:ext element) to specify the shape length and width.\n\nCTAbsoluteAnchor uses a CTPoint2D to specify the absolute top/left offset, and a CTPositiveSize2D to define the shape width and height.  \n\nThis is essentially what XSSFChildAnchor does currently, but it is not actually used except by a unit test, where it looks like it is used incorrectly and the test results are never checked for accuracy.\n\nPOI needs a new sub-class of XSSFAnchor to handle CTOneCellAnchor, with appropriate constructors.  This is somewhat of a hybrid of the two existing classes.\n\nSince XSSFChildAnchor is not actually created outside unit tests, all the places POI builds an XSSFClientAnchor need to be checked to see where we need to add logic to decicde which instance needs to be created.\n\nA factory is likely the best option here, to centralize the type based logic.", "id": 199306, "time": "2017-06-21T00:22:35Z", "creator": "gwoolsey@apache.org", "creation_time": "2017-06-21T00:22:35Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 61203, "is_private": false, "text": "I think the Excel chart/shape properties map like this:\n\n- Move and size with cells == CTTwoCellAnchor\n- Move but don't size with cells == CTOneCellAnchor\n- Don't move or size with cells == CTAbsoluteAnchor", "id": 199307, "time": "2017-06-21T00:30:37Z", "creator": "gwoolsey@apache.org", "creation_time": "2017-06-21T00:30:37Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "gwoolsey@apache.org", "text": "I found that the ClientAnchor SS interface is actually the widely used variation.  It looks like members calling constructors of XSSFClientAnchor just need to be taught to properly fill it in based on the cases outlined above, and the JavaDoc needs updating to mention that row/column references < 0 mean there is no row/column anchor for that position (top-left or bottom-right) and the absolute values must be used instead.\n\nThese -1 R/C values would align with the AnchorType enum value as well, per the above mapping and updated JavaDocs.  \n\nCallers just looking for current cached position and size info can use the X/Y values stored, regardless of anchor type.  If rows/columns may have been resized and/or inserted/deleted, and an updated position is desired, callers would need to calculate that themselves based on anchor type and possible R/C stored values, if any, in combination with current sheet values for row heights and column widths.  This could be complex if there is a need to factor in offsets within the anchor cells as well, since that would require knowledge of the starting cell absolute position.", "id": 199320, "time": "2017-06-21T17:38:58Z", "bug_id": 61203, "creation_time": "2017-06-21T17:38:58Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 61203, "attachment_id": null, "id": 199325, "time": "2017-06-21T20:58:57Z", "creator": "gwoolsey@apache.org", "creation_time": "2017-06-21T20:58:57Z", "is_private": false, "text": "Not sure how possible or helpful a unified API can be.  Variations that involve row/column references use the X/Y offsets as \"distance from the corner of the cell\" while absolute references use it as \"distance from the corner of the worksheet\".\n\nThis overloading with conflicting interpretations is confusing but also the way the ECMA spec does things."}, {"count": 4, "tags": [], "bug_id": 61203, "attachment_id": null, "id": 199327, "time": "2017-06-21T23:10:51Z", "creator": "gwoolsey@apache.org", "creation_time": "2017-06-21T23:10:51Z", "is_private": false, "text": "Even more confusing.  A CTTwoCellAnchor can have an attribute \"editAs\" with values:\n\n* oneCell\n* twoCell\n* absolute\n\nwhere the default if not specified is twoCell.  This is also a way Excel saves these sometimes.\n\nGiven this, I think XSSFClientAnchor needs to be extended to know about all the different source combinations and just do the math necessary to adjust everything when a setter is called."}, {"count": 5, "text": "Added basic support in r1799643.  Resolving this for now, can be re-opened if the implementation is incomplete or buggy.  See the revision log for more details.", "bug_id": 61203, "is_private": false, "id": 199353, "time": "2017-06-23T05:18:41Z", "creator": "gwoolsey@apache.org", "creation_time": "2017-06-23T05:18:41Z", "tags": [], "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 61203, "is_private": false, "id": 199358, "attachment_id": null, "creator": "kiwiwings@apache.org", "creation_time": "2017-06-23T08:38:22Z", "time": "2017-06-23T08:38:22Z", "text": "Please merge EMUUtils into org.apache.poi.util.Units - its nicer to have it in one place"}]