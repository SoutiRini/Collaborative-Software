[{"count": 0, "tags": [], "text": "When i cross-compile Apache 2.2.19 and add in two Listen directives in the httpd.conf file like \nListen 80\nListen 8080\nand then when i start the apache server and make a request to either of the ports, the call gets hung and never returns. This works fine if i specify only one Listen directive or if i don't cross compile apache.\n\nThis is causing issues when i try to enable ssl and have both 80 and 443 enabled on the server, the calls to port 80 are getting hung.\n\nThis is the what i used to configure apache.\n\n\tCFLAGS=\"$(TARGET_CFLAGS) -DBIG_SECURITY_HOLE \" \\\n\tac_cv_file__dev_zero=yes ac_cv_func_setpgrp_void=yes apr_cv_process_shared_works=yes apr_cv_mutex_robust_shared=no apr_cv_tcp_nodelay_with_cork=yes apr_cv_mutex_recursive=yes ap_cv_void_ptr_lt_long=no ac_cv_sizeof_struct_iovec=8 ac_cv_struct_rlimit=yes \\\n\t./configure \\\n\t--with-mpm=prefork \\\n\t--with-included-apr \\\n\t--target=$(GNU_TARGET_NAME) \\\n\t--host=$(GNU_TARGET_NAME) \\\n\t--build=$(GNU_HOST_NAME) \\\n\t--prefix=/usr/local/apache2 \\\n\t);\n\n$(MAKE) $(CFLAGS) -C $(APACHE2_DIR)\n$(MAKE) DESTDIR=$(STAGING_DIR) -C $(APACHE2_DIR) install\n\nLet me know if there is a work around for this.", "attachment_id": null, "id": 148713, "creation_time": "2011-08-19T16:47:39Z", "time": "2011-08-19T16:47:39Z", "creator": "anirudh.takkallapally@gmail.com", "bug_id": 51689, "is_private": false}, {"count": 1, "tags": [], "creator": "anirudh.takkallapally@gmail.com", "attachment_id": null, "is_private": false, "id": 148786, "time": "2011-08-23T15:41:42Z", "bug_id": 51689, "creation_time": "2011-08-23T15:41:42Z", "text": "I ran gdb against the hung process and got this\n\n0xb7b69f8e in read () from /lib/libc.so.6\n(gdb) where\n#0  0xb7b69f8e in read () from /lib/libc.so.6\n#1  0xb7c4b967 in apr_socket_recv () from /usr/local/apache2/lib/libapr-1.so.0\n#2  0xb7d72403 in socket_bucket_read () from /usr/local/apache2/lib/libaprutil-1.so.0\n#3  0x0808133e in ap_core_input_filter ()\n#4  0x0808f6e0 in ap_get_brigade ()\n#5  0x080dba77 in ap_http_filter ()\n#6  0x0808f6e0 in ap_get_brigade ()\n#7  0x080daad9 in check_pipeline_flush ()\n#8  0x080dac09 in ap_process_request ()\n#9  0x080d7616 in ap_process_http_connection ()\n#10 0x0808b452 in ap_run_process_connection ()\n#11 0x0808b89b in ap_process_connection ()\n#12 0x08114a92 in child_main ()\n#13 0x08114c84 in make_child ()\n#14 0x08114ce3 in startup_children ()\n#15 0x08115173 in ap_mpm_run ()\n#16 0x0806c6ed in main ()\n\nTrying to figure out if a different code path is used when cross compiled"}, {"count": 2, "tags": [], "bug_id": 51689, "attachment_id": null, "id": 150504, "creation_time": "2011-10-12T19:14:34Z", "time": "2011-10-12T19:14:34Z", "creator": "anirudh.takkallapally@gmail.com", "text": "Started working fine when i added  ac_cv_o_nonblock_inherited=no in configure script\n\n    CFLAGS=\"$(TARGET_CFLAGS) -DBIG_SECURITY_HOLE \" \\\n    ac_cv_file__dev_zero=yes ac_cv_func_setpgrp_void=yes\napr_cv_process_shared_works=yes apr_cv_mutex_robust_shared=no\napr_cv_tcp_nodelay_with_cork=yes apr_cv_mutex_recursive=yes\nap_cv_void_ptr_lt_long=no ac_cv_sizeof_struct_iovec=8 ac_cv_struct_rlimit=yes \\\nac_cv_o_nonblock_inherited=no \\\n    ./configure \\\n    --with-mpm=prefork \\\n    --with-included-apr \\\n    --target=$(GNU_TARGET_NAME) \\\n    --host=$(GNU_TARGET_NAME) \\\n    --build=$(GNU_HOST_NAME) \\\n    --prefix=/usr/local/apache2 \\\n    );\n\nIt would be nice to have it documented or have a cleaner fix for this.", "is_private": false}, {"count": 3, "tags": [], "bug_id": 51689, "attachment_id": null, "id": 161995, "time": "2012-09-06T15:57:02Z", "creator": "dennis.r.lacroix@hp.com", "creation_time": "2012-09-06T15:57:02Z", "is_private": false, "text": "I ran into another symptom of this problem when cross-compiling 2.2.22 for Linux on PowerPC.  \n\nWhen configuring a directory to require client certificates, like this:\n\nDirectory \"/ramdisk/www/cert_area\">\n   SSLVerifyDepth 1\n   SSLVerifyClient require\n\nthe renegotiation hangs every time.  The call stack looks like this:\n\n#0  0x0fcfeae8 in __read_nocancel () from /usr/lib/libpthread.so.0\n#1  0x0fc41678 in apr_socket_recv\n#2  0x0fcbf9d0 in socket_bucket_read \n#3  0x1006792c in ap_core_input_filter\n#4  0x10072d0c in ap_get_brigade\n#6  0x0fec5a30 in BIO_read\n#7  0x0ffb6b9c in ssl3_read_n\n#8  0x0ffb7960 in ssl3_read_bytes\n#9  0x0ffb5444 in ssl3_read\n#10 0x0ffc7b64 in SSL_read\n#11 0x10099920 in ssl_io_input_read\n#12 0x1009a588 in ssl_io_filter_input\n#13 0x10072d0c in ap_get_brigade \n#14 0x1009c318 in ssl_hook_Access\n#15 0x10064e64 in ap_run_access_checker\n#16 0x100669f8 in ap_process_request_internal\n#17 0x100a9a38 in ap_process_request\n#18 0x100a6e88 in ap_process_http_connection\n#19 0x1006f70c in ap_run_process_connection\n#20 0x100c38e4 in child_main\n#21 0x100c3a90 in make_child\n#22 0x100c4354 in ap_mpm_run\n#23 0x1005693c in main\n\nI verified in apr_socket_recv/socket_bucket_read that it expects the socket read to be non-blocking, but it blocks.\n\nThis is the higher-level functionality that is trying to be accomplished:\n\n/* Perform a speculative (and non-blocking) read from the connection\n * filters for the given request, to determine whether there is any\n * pending data to read.  Return non-zero if there is, else zero. */ static int has_buffered_data(request_rec *r) {\n    apr_bucket_brigade *bb;\n    apr_off_t len;\n    apr_status_t rv;\n    int result;\n    \n    bb = apr_brigade_create(r->pool, r->connection->bucket_alloc);\n    \n    rv = ap_get_brigade(r->connection->input_filters, bb, AP_MODE_SPECULATIVE,\n                        APR_NONBLOCK_READ, 1);    <<<< HANGS HERE\n\nThis was a nasty debug.  I ended up building the same version of Apache natively for Unbuntu where I did not find the problem, and then compared the build configuration.\n\nIs there a better way to handle this compilation flag than just defaulting it to true for cross compiles?  If it isn't possible to automatically determine the proper value for cross compiles at configuration time, could it be defaulted to an invalid value that would force the user to set ac_cv_o_nonblock_inherited prior to running configure?"}, {"count": 4, "tags": [], "bug_id": 51689, "attachment_id": null, "id": 176526, "time": "2014-07-19T05:43:46Z", "creator": "ritesh.prajapati@slscorp.com", "creation_time": "2014-07-19T05:43:46Z", "is_private": false, "text": "I have cross compiled and installed Apache 2.4.4 and 2.4.9 for my cusotm Linux Board.\n\nWhenever I tried to listen on multiple listen ports like\nListen 80\nListen 8080\nat that time, HTTP request goes into hang state and can not come out for that state.\nIt works find with single Listen Directive for my linux custom board.\n\nI have also added following flags in configuration script of httpd to solve that issue but still failed to execute HTTP request.\n\nac_cv_file__dev_zero=yes ac_cv_func_setpgrp_void=yes\napr_cv_process_shared_works=yes apr_cv_mutex_robust_shared=no\napr_cv_tcp_nodelay_with_cork=yes apr_cv_mutex_recursive=yes\nap_cv_void_ptr_lt_long=no ac_cv_sizeof_struct_iovec=8 ac_cv_struct_rlimit=yes \\\nac_cv_o_nonblock_inherited=no\n\n\n\nI have also debug httpd process using starce and found that read system call goe into blocking state which never returns.\n\n$ ./strace -p 1811\nProcess 1811 attached\nrestart_syscall(<... resuming interrupted call ...>) = 0\npoll([{fd=6, events=POLLIN}, {fd=4, events=POLLIN}], 2, 10000) = 0 (Timeout)\npoll([{fd=6, events=POLLIN}, {fd=4, events=POLLIN}], 2, 10000) = 0 (Timeout)\npoll([{fd=6, events=POLLIN}, {fd=4, events=POLLIN}], 2, 10000) = 1 ([{fd=4, revents=POLLIN}])\naccept(4, {sa_family=AF_INET6, sin6_port=htons(40827), inet_pton(AF_INET6, \"::ffff:192.168.0.45\", &sin6_addr), sin6_flowinfo=0, sin6_scope_id=0}, [28]) = 11\nfcntl64(11, F_GETFD)                    = 0\nfcntl64(11, F_SETFD, FD_CLOEXEC)        = 0\nsemop(950296, {{0, 1, SEM_UNDO}}, 1)    = 0\ngettimeofday({1405747420, 372062}, NULL) = 0\ngetsockname(11, {sa_family=AF_INET6, sin6_port=htons(80), inet_pton(AF_INET6, \"::ffff:192.168.0.183\", &sin6_addr), sin6_flowinfo=0, sin6_scope_id=0}, [28]) = 0\ngettimeofday({1405747420, 374162}, NULL) = 0\ngettimeofday({1405747420, 374976}, NULL) = 0\nread(11, \"GET / HTTP/1.1\\r\\nHost: 192.168.0.\"..., 8000) = 289\ngettimeofday({1405747420, 377850}, NULL) = 0\ngettimeofday({1405747420, 380080}, NULL) = 0\ngettimeofday({1405747420, 382529}, NULL) = 0\ngettimeofday({1405747420, 384638}, NULL) = 0\ngettimeofday({1405747420, 386798}, NULL) = 0\ngettimeofday({1405747420, 388903}, NULL) = 0\ngettimeofday({1405747420, 390971}, NULL) = 0\ngettimeofday({1405747420, 393006}, NULL) = 0\ngettimeofday({1405747420, 395390}, NULL) = 0\ngettimeofday({1405747420, 397474}, NULL) = 0\nstat64(\"/usr/local/apache2/htdocs/\", {st_mode=S_IFDIR|0777, st_size=4096, ...}) = 0\nstat64(\"/usr/local/apache2/htdocs/index.html\", {st_mode=S_IFREG|0777, st_size=45, ...}) = 0\nopen(\"/usr/local/apache2/htdocs/index.html\", O_RDONLY|O_CLOEXEC) = 12\nopen(\"/etc/localtime\", O_RDONLY)        = 13\nfstat64(13, {st_mode=S_IFREG|0644, st_size=127, ...}) = 0\nfstat64(13, {st_mode=S_IFREG|0644, st_size=127, ...}) = 0\nold_mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x2a01d000\nread(13, \"TZif2\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\1\\0\\0\\0\\1\\0\\0\\0\\0\"..., 4096) = 127\n_llseek(13, -11, [116], SEEK_CUR)       = 0\nread(13, \"\\n<GMT-8>-8\\n\", 4096)         = 11\nclose(13)                               = 0\nmunmap(0x2a01d000, 4096)                = 0\ngettimeofday({1405747420, 441452}, NULL) = 0\nread(11, \n\nPlease let me know if anyone has idea about this issue or any work arounds for that."}, {"count": 5, "tags": [], "text": "This bug appears to be related to bug 56727.", "is_private": false, "id": 176540, "creator": "mike.rumph@oracle.com", "time": "2014-07-20T15:21:28Z", "bug_id": 51689, "creation_time": "2014-07-20T15:21:28Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 51689, "attachment_id": null, "id": 176551, "time": "2014-07-21T04:49:20Z", "creator": "ritesh.prajapati@slscorp.com", "creation_time": "2014-07-21T04:49:20Z", "is_private": false, "text": "I have already tried with all possible compilation flags as well as some other configuration in httpd compilation process to listen multiple ports but still failed to send HTTP request.\n\nThen I have started debugging task ftom httpd source code and found that request is stuck in check_pipeline() function of http_request.c file.\n\nThere is one function call \nap_get_brigade(c->input_filters, bb, AP_MODE_SPECULATIVE,APR_NONBLOCK_READ, 1) in check_pipeline() function which never returns after sending HTTP request with multiple Listen Directive.\n\nap_get_brigade() function defined in server/util_filter.c file\n\nAP_DECLARE(apr_status_t) ap_get_brigade(ap_filter_t *next,\n                                        apr_bucket_brigade *bb,\n                                        ap_input_mode_t mode,\n                                        apr_read_type_e block,\n                                        apr_off_t readbytes)\n{\n    if (next) {\n        return next->frec->filter_func.in_func(next, bb, mode, block,\n                                               readbytes);\n    }\n    return AP_NOBODY_READ;\n}\n\nSo, This above function call never returns and blocked forever from check_pipeline() function call after sending HTTP request on multiple port Listen.\n\nPlease let me know if any one has idea about this."}, {"count": 7, "tags": [], "text": "I have debugged ap_get_brigade() function in details from httpd source code and found that it executes ap_core_input_filter() function from core_filters.c file.\n\nThen, I have looked into ap_core_input_filter() function definition and found that HTTP request execution with multiple listen ports stuck after calling apr_input_read() function which is called from ap_core_input_filter() API.\n\nAfter that, I have looked for apr_read_bucket() function definition which is defined as read() system call in apr_buckets.h file of Apr-Util Package.\n\n#define apr_bucket_read(e,str,len,block) (e)->type->read(e, str, len, block)\n\nI have also downgraded and tested Apr and Apr-Util packages from 1.5.X to 1.4.X but still failed to execute HTTP request on multiple listen ports.\n\nPlease let me know if any one knows about this issue.", "attachment_id": null, "bug_id": 51689, "id": 176557, "time": "2014-07-21T07:25:12Z", "creator": "ritesh.prajapati@slscorp.com", "creation_time": "2014-07-21T07:25:12Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 51689, "attachment_id": null, "is_private": false, "id": 176564, "time": "2014-07-21T13:49:25Z", "creator": "ritesh.prajapati@slscorp.com", "creation_time": "2014-07-21T13:49:25Z", "text": "I have also found while debugging apr_bucket_read() function that read() system call executed from apr_socket_recv() function (network_io/unix/sendrecv.c file of Apr Package) blocks HTTP request after listening on multiple ports. \n\n\napr_status_t apr_socket_recv(apr_socket_t *sock, char *buf, apr_size_t *len)\n{\n    apr_ssize_t rv;\n    apr_status_t arv;\n\n    if (sock->options & APR_INCOMPLETE_READ) {\n        sock->options &= ~APR_INCOMPLETE_READ;\n        goto do_select;\n    }\n\n    do {\n        rv = read(sock->socketdes, buf, (*len));  ---> Never return from Here\n    } while (rv == -1 && errno == EINTR);\n\n\nThat apr_socket_recv() function is called from socket_bucket_read() function of Apr-Util source package (buckets/apr_buckets_socket.c file).\n\nAnd that socket_bucket_read() function is called from ap_get_brigade() API (util_filters.c file) of http source package to read data from bucket.\n\nSo, this issue is caused while reading data from bucket from httpd->Apr-Util->Apr when sending HTTP request on multiple Listen Ports.\n\nWe have also checked NON_Block Mode using apr_is_option_set() function and it gives that APR mode is set as NON_Block Mode but still HTTP request never returns from that read() system call of apr_socket_recv() function.\n\nPlease let me know if any one has idea about this."}, {"count": 9, "tags": [], "bug_id": 51689, "attachment_id": null, "id": 176589, "time": "2014-07-22T12:25:59Z", "creator": "ritesh.prajapati@slscorp.com", "creation_time": "2014-07-22T12:25:59Z", "is_private": false, "text": "We have debugged code of APR and found that there is one macro defined \n#define APR_O_NONBLOCK_INHERITED 1\nwhich creates problem to create inherited socket as non block from listener socket while requesting HTTP page in multiple Listen Ports.\n\nSo, We have set ac_cv_o_nonblock_inherited=no in configuration options of APR Package and tested HTTP request on multiple Listen ports as well as enabling SSL Modules which works fine without any issue."}]