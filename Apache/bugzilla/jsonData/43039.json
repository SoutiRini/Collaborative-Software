[{"count": 0, "tags": [], "creator": "ralf@stormbind.net", "attachment_id": null, "text": "using this request (perl code):\n\nprint \"GET / HTTP/1.0\\x00\\r\\n\" .\n      \"User-Agent: abc\\x00def\\r\\n\".\n      \"  0\\x00123\\r\\n\" .\n      \"Connection: k\\r\\n\".\n      \"\\r\\n\";\n\naccess log says the UA is \"abc\".", "id": 106355, "time": "2007-08-04T17:06:41Z", "bug_id": 43039, "creation_time": "2007-08-04T17:06:41Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 43039, "text": "I don't quite see your point.\n\nMy reading of RFC 2616 says, that the 0-octet is invalid in header lines. So the\nhttpd has the choice between rejecting the request and accepting it like he\nwants to - and takes the latter (being lenient...).", "id": 106356, "time": "2007-08-04T17:29:37Z", "creator": "nd@perlig.de", "creation_time": "2007-08-04T17:29:37Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 106358, "time": "2007-08-05T02:29:19Z", "bug_id": 43039, "creation_time": "2007-08-05T02:29:19Z", "is_private": false, "text": "Besides the RFC argument accepting 0 characters opens a large can of worms for\nall kind of attacks. Nearly all application firewalls disallow 0 characters for\nvery good reasons. I think requests as the one described should be answered with\na status code 400. In the light that they currently result in a status code 200\nI would see this as a valid bug."}, {"count": 3, "tags": [], "creator": "ralf@stormbind.net", "text": "(In reply to comment #1)\n> I don't quite see your point.\n> \n> My reading of RFC 2616 says, that the 0-octet is invalid in header lines.\n\nThats my point.\n\nWhy accepting invalid characters (and in this case the \"special\" NUL character)?\n\nI dont know the side effects (somewhere deep inside the httpd code),\nbut i think no (real) client is sending \\0 in a request.\n\nOn the other hand whats about:\n\nprint \"GET / HTTP/1.0\" . (\"\\x00\" x 1000) . \"\\r\\n\\r\\n\";\n\n(sends NUL 1000 times)\n\nAt the end this will result in 413/414 or something similar and the\nhttpd cant say why - it seams like a normal request.\n", "id": 106366, "time": "2007-08-05T14:26:05Z", "bug_id": 43039, "creation_time": "2007-08-05T14:26:05Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "id": 132988, "time": "2009-12-20T16:41:31Z", "bug_id": 43039, "creation_time": "2009-12-20T16:41:31Z", "is_private": false, "text": "Fixed in trunk in r892678"}, {"count": 5, "tags": [], "bug_id": 43039, "text": "fixed in 2.4.1", "id": 154196, "time": "2012-02-26T16:46:02Z", "creator": "sf@sfritsch.de", "creation_time": "2012-02-26T16:46:02Z", "is_private": false, "attachment_id": null}]