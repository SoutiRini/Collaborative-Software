[{"count": 0, "tags": [], "creator": "vhennebert@gmail.com", "attachment_id": null, "id": 162283, "time": "2012-09-19T11:22:20Z", "bug_id": 53902, "creation_time": "2012-09-19T11:22:20Z", "is_private": false, "text": "In XSL-FO, header table cells (fo:table-cell elements that descend from an fo:table-header/footer object) inherently encompass a column of the table. This is due to the way tables are broken down into fo:table-header, fo:table-body and fo:table-footer.\n\nThere is no XSL-FO construct to say that a table-cell is a header cell encompassing a /row/ of the table. It can be achieved graphically by e.g., using a bold font for the first cell of a row, but the structure won't reflect that.\n\nThis becomes a problem when creating accessible PDF documents, where it is desirable to store the scope of a header in the logical structure. PDF defines the standard Scope attribute for that (see Section 10.7.5 of the PDF 1.5 Reference).\n\nI propose to add an extension property to fo:table-cell in order to convey that information. Along with setting the 'role' property to 'TH', it would become possible to define a cell as being a header cell with a scope of Row. Something like this:\n  <fo:table-cell role=\"TH\" fox:scope=\"Row\">\n    ...\n  </fo:table-cell>\n\nThe fox:scope property would have an enumerated value of 'Column' (default), 'Row' or 'Both'."}, {"count": 1, "tags": [], "creator": "psancho.asf@gmail.com", "text": "IIUC, that feature aims to have a pseudo-table-header laterally rather than above/below.\nIf this is the case, so IMHO a such extension should apply on column (or better, on column-group).\nFor that, I can imagine 2 options:\n - add a new fox:xxx attribute to column-group, with possible values like \"header-start\" or \"footer-end\".\n - add new extensions elements like fox:column-group-header/fox:column-group-footer/fox:column-group-body", "id": 162298, "time": "2012-09-20T07:29:00Z", "bug_id": 53902, "creation_time": "2012-09-20T07:29:00Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> IIUC, that feature aims to have a pseudo-table-header laterally rather than\n> above/below.\n> If this is the case, so IMHO a such extension should apply on column (or\n> better, on column-group).\n> For that, I can imagine 2 options:\n>  - add a new fox:xxx attribute to column-group, with possible values like\n> \"header-start\" or \"footer-end\".\n>  - add new extensions elements like\n> fox:column-group-header/fox:column-group-footer/fox:column-group-body\n\nIt is true that header cells having a row scope are usually all in the same column (typically the leftmost column). Something like this:\n\n  __________________________________________________\n |              |                 |                 |\n | Table Header | Column Header 1 | Column Header 2 |\n |______________|_________________|_________________|\n |              |                 |                 |\n | Row Header 1 |      body       |      body       |\n |______________|_________________|_________________|\n |              |                 |                 |\n | Row Header 2 |      body       |      body       |\n |______________|_________________|_________________|\n |              |                 |                 |\n | Row Header 3 |      body       |      body       |\n |______________|_________________|_________________|\n\nI guess you mean that the first column should have a status of header. While this may be interesting information, what I'm trying to achieve is a bit different: just have a way to say that 'Row Header 1' should be a TH cell encompassing the row it is in. While 'Column Header 1' is a TH cell encompassing its column. There is a standard way to record that in PDF by associating a Scope structure attribute to the corresponding structure type. That information can then be transmitted in some way by a screen reader, to help the user to build a mental representation of the table. However, there is no standard way in PDF to record the fact that a column is made of header cells (while this is possible for a (group of) row(s), using the THead structure type). So it's probably not worth implementing that in FOP.\n\nDoes that make sense?\nVincent", "attachment_id": null, "bug_id": 53902, "id": 162301, "time": "2012-09-20T14:50:53Z", "creator": "vhennebert@gmail.com", "creation_time": "2012-09-20T14:50:53Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 53902, "attachment_id": null, "is_private": false, "id": 162312, "time": "2012-09-21T08:09:42Z", "creator": "psancho.asf@gmail.com", "creation_time": "2012-09-21T08:09:42Z", "text": "Hmm,\nIn PDF 1.5 spec, TH seems exist as a workaround to the limitation of the html table model, from witch the tagged PDF table-model seems to be inspired.\nAs I said, such table model describe a stacked rows structure, and there is no mechanism to describe alternative structure, where 1st column can be handled as header.\nNote that the \"TH\" scope value could be determined from the \"grandfather\" of the fo:table-cell (table-header), and/or, if implemented, the nature of the corresponding column or column group (header/footer column-group).\nIMHO, there is no need to use a table-cell role attribute for that.\nPersonally, I don't use tagged PDF, but sometimes I'm facing to the lake of \"vertical\" headers in FO table model, and I think that here, the End-user need is having such feature, rather than an html/TH-like tweak, breaking the table structure.\nAnd your schema illustrates perfectly what I say ;)\n*all* \"row headers\" are in the same column...\nAnd you have a cell header for each row, so with a cell implementation, you have to repeat the action on each row, while with a column implementation, you repeat it only once."}, {"count": 4, "tags": [], "text": "(In reply to comment #3)\n> Hmm,\n> In PDF 1.5 spec, TH seems exist as a workaround to the limitation of the\n> html table model, from witch the tagged PDF table-model seems to be inspired.\n> As I said, such table model describe a stacked rows structure, and there is\n> no mechanism to describe alternative structure, where 1st column can be\n> handled as header.\n> Note that the \"TH\" scope value could be determined from the \"grandfather\" of\n> the fo:table-cell (table-header), and/or, if implemented, the nature of the\n> corresponding column or column group (header/footer column-group).\n\nHmmm. That makes a lot of sense. Actually the structure type of cells that descend from a table-header is already automatically determined this way. We could extend that mechanism to 'header' columns. A cell that is in such a column would be given a structure type of TH with a scope or Row; A cell that is also inside an fo:table-header would be given a scope of Both. That would avoid manually setting role and fox:scope on every cell of the header column.\n\nI like this idea a lot, however the time I have allocated on this is running low. I'll see if I can modify my current implementation to do this.\n\nSo fo:table-column would take an extension property fox:header being either true or false (the default).\n\nWDYT?\n\n\n> IMHO, there is no need to use a table-cell role attribute for that.\n> Personally, I don't use tagged PDF, but sometimes I'm facing to the lake of\n> \"vertical\" headers in FO table model, and I think that here, the End-user\n> need is having such feature, rather than an html/TH-like tweak, breaking the\n> table structure.\n> And your schema illustrates perfectly what I say ;)\n> *all* \"row headers\" are in the same column...\n> And you have a cell header for each row, so with a cell implementation, you\n> have to repeat the action on each row, while with a column implementation,\n> you repeat it only once.\n\nThanks for your feedback!\nVincent", "attachment_id": null, "id": 162324, "creator": "vhennebert@gmail.com", "time": "2012-09-21T11:20:08Z", "bug_id": 53902, "creation_time": "2012-09-21T11:20:08Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 53902, "attachment_id": null, "text": "(In reply to comment #4)\n> (In reply to comment #3)\n> I like this idea a lot, however the time I have allocated on this is running\n> low. I'll see if I can modify my current implementation to do this.\n> So fo:table-column would take an extension property fox:header being either\n> true or false (the default).\n\nWell, I'm happy with this table-column extension.\nI would prefer a table-column-group, but that FO doesn't exist in current XSL-FO 1.1 REC, and it is not planned in 2.0 working draft.\n\nSo, if nobody else objects, I follow you to add table-column/@fox:header extension.", "id": 162326, "time": "2012-09-21T12:46:05Z", "creator": "psancho.asf@gmail.com", "creation_time": "2012-09-21T12:46:05Z", "is_private": false}, {"count": 6, "tags": [], "text": "I was able to implement the modified design within the allocated time frame:\nhttp://svn.apache.org/viewvc?rev=1390412&view=rev\n\nThanks for your excellent suggestion!\n\nWill close the bug once I've updated the documentation on the website.\n\nVincent", "is_private": false, "bug_id": 53902, "id": 162407, "time": "2012-09-26T11:35:28Z", "creator": "vhennebert@gmail.com", "creation_time": "2012-09-26T11:35:28Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "psancho.asf@gmail.com", "text": "(In reply to comment #6)\n> I was able to implement the modified design within the allocated time frame:\n> http://svn.apache.org/viewvc?rev=1390412&view=rev\n> \n> Thanks for your excellent suggestion!\n> \n> Will close the bug once I've updated the documentation on the website.\n> \n> Vincent\n\nGood job, Vincent.\nSuch extension could be usefull too if one would implement i-p-d splitting for tables, as repeating column header over pages would become feasible.", "id": 162410, "time": "2012-09-26T11:52:55Z", "bug_id": 53902, "creation_time": "2012-09-26T11:52:55Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 53902, "attachment_id": null, "id": 162456, "time": "2012-09-28T16:54:53Z", "creator": "vhennebert@gmail.com", "creation_time": "2012-09-28T16:54:53Z", "is_private": false, "text": "Documentation updated on the CMS website."}]