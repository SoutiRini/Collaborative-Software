[{"count": 0, "tags": [], "bug_id": 44015, "text": "First, sorry about my horrible english.\nIn util_ldap.c the max of returned entries for a search is defined as:\n\n/* Default define for ldap functions that need a SIZELIMIT but\n * do not have the define\n * XXX This should be removed once a supporting #define is \n *  released through APR-Util.\n */\n#ifndef APR_LDAP_SIZELIMIT\n#define APR_LDAP_SIZELIMIT -1\n#endif\n\nThats make is mistaken sizelimit in a search request because acording to\nhttp://www.ietf.org/rfc/rfc2251.txt size limit is defined as:\n\nsizeLimit       INTEGER (0 .. maxInt),  and with\nmaxInt INTEGER ::= 2147483647 -- (2^^31 - 1) --\n\nthis is signed integer, not unsigned as supoused on util_ldap.c\nOn page 26 rfc2251 tells that a value of sizeLimit = 0 means no client sizelimit\nrestrictions. So APR_LDAP_SIZELIMIT should be:\n\n/* Default define for ldap functions that need a SIZELIMIT but\n * do not have the define\n * XXX This should be removed once a supporting #define is \n *  released through APR-Util.\n */\n#ifndef APR_LDAP_SIZELIMIT\n#define APR_LDAP_SIZELIMIT 0\n#endif\n\nI believe this issue could solve other bugs of ldap use.", "id": 111382, "time": "2007-12-03T19:01:12Z", "creator": "agustin.herranz@alumnos.uva.es", "creation_time": "2007-12-03T19:01:12Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "This is fixed in the most recent release of apr-util (1.2.12), there was a\nlengthy discussion on the issue but several SDKS support -1 (use connection\ndefault limit) and don't always have LDAP_DEFAULT_LIMIT defined.\n\n(the other SDKS don't send the -1 over the wire)", "attachment_id": null, "id": 111412, "creator": "covener@gmail.com", "time": "2007-12-04T04:58:53Z", "bug_id": 44015, "creation_time": "2007-12-04T04:58:53Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 44015, "text": "(In reply to comment #1)\n> This is fixed in the most recent release of apr-util (1.2.12), there was a\n> lengthy discussion on the issue but several SDKS support -1 (use connection\n> default limit) and don't always have LDAP_DEFAULT_LIMIT defined.\n> \n> (the other SDKS don't send the -1 over the wire)\n\nMicrosoft LDAP SDK send -1 (0xFFFFFFFF) over the wire...\nI have build apr, apr-util, mod_ldap and mod_authnz_ldap with Visual C++ 2005\nExpress and tested with apache 2.2.6 on an W2k server with Openldap server and\nworks well.\n\nStill had to delete APR_LDAP_SIZELIMIT definition on util_ldap.c like said th\ncomment, and sync apr_ldap.hw to an apr_ldap.h.in style for:\n\n#if APR_HAS_ZOS_LDAPSDK || APR_HAS_MICROSOFT_LDAPSDK\n#define APR_LDAP_SIZELIMIT LDAP_NO_LIMIT\n#else\n#ifdef LDAP_DEFAULT_LIMIT\n#define APR_LDAP_SIZELIMIT LDAP_DEFAULT_LIMIT\n#else\n#define APR_LDAP_SIZELIMIT -1 /* equivalent to LDAP_DEFAULT_LIMIT */\n#endif\n#endif\n\nor better:\n\n\n#ifdef LDAP_DEFAULT_LIMIT\n#define APR_LDAP_SIZELIMIT LDAP_DEFAULT_LIMIT\n#else\n#if APR_HAS_XXX_LDAPSDK /* who dont have defined LDAP_DEFAULT_SIZELIMIT but\nsupport -1 */\n#define APR_LDAP_SIZELIMIT -1 /* equivalent to LDAP_DEFAULT_LIMIT */\n#else\n#define APR_LDAP_SIZELIMIT LDAP_NO_LIMIT\n#endif\n#endif\n\nI thought this version is better because LDAP_DEFAULT_SIZELIMIT = -1 is defined\nin a draft that update RFC1823 what is an informational document, as far i can\nsee, and LDAP_NO_LIMIT = 0 is defined in RFC2251 - RFC4511 LDAP v3 protocol what\nis a proposed standard.\n\n\n", "id": 111430, "time": "2007-12-04T10:49:19Z", "creator": "agustin.herranz@alumnos.uva.es", "creation_time": "2007-12-04T10:49:19Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 44015, "text": "resolved in apr 1.3, thanks for the report.", "id": 117412, "time": "2008-06-05T13:33:42Z", "creator": "wrowe@apache.org", "creation_time": "2008-06-05T13:33:42Z", "is_private": false, "attachment_id": null}]