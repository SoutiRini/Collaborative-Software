[{"count": 0, "tags": [], "bug_id": 35160, "attachment_id": null, "is_private": false, "id": 75754, "time": "2005-06-01T20:46:56Z", "creator": "asmorgrav@yahoo.no", "creation_time": "2005-06-01T20:46:56Z", "text": "A reverse proxy using mod_rewrite with rewrite maps dumps core.\n\nThe following message appears in the error log:\n\n[Wed Jun 01 13:45:23 2005] [notice] child pid 6796 exit signal Segmentation faul\nt (11), possible coredump in /centuri/axe1/apache/httpd2/apache8\n\nContents of the invocation stack:\n\n#0  0xfee33218 in strlen () from /usr/lib/libc.so.1\n#1  0x00066d5c in hook_uri2file (r=0x6301e0) at mod_rewrite.c:1204\n#2  0x000a2b18 in ap_run_translate_name (r=0x6301e0) at request.c:65\n#3  0x000a3e30 in ap_process_request_internal (r=0x6301e0) at request.c:139\n#4  0x00049dec in ap_process_request (r=0x6301e0) at http_request.c:244\n#5  0x000410e8 in ap_process_http_connection (c=0x6057c8) at http_core.c:250\n#6  0x0008d5b0 in ap_run_process_connection (c=0x6057c8) at connection.c:42\n#7  0x0008dba0 in ap_process_connection (c=0x6057c8, csd=0x6056d8)\n    at connection.c:175\n#8  0x0007245c in process_socket (p=\n\nThe rewrite log (RewriteLogLevel 3) of a sequence that causes coredump:\n\n150.175.29.7 - - [01/Jun/2005:13:45:20 +0200] [centuri/sid#2191a8]\n[rid#523870/initial] (2) init rewrite engine with requested \nuri /gamma/background_menu.gif\n150.175.29.7 - - [01/Jun/2005:13:45:20 +0200] [centuri/sid#2191a8]\n[rid#523870/initial] (3) applying pattern '.*' to \nuri '/gamma/background_menu.gif'\n150.175.29.7 - - [01/Jun/2005:13:45:20 +0200] [centuri/sid#2191a8]\n[rid#523870/initial] (3) applying pattern '^(.*)$' to \nuri '/gamma/background_menu.gif'\n150.175.29.7 - - [01/Jun/2005:13:45:20 +0200] [centuri/sid#2191a8]\n[rid#523870/initial] (3) applying pattern '^(.*)$' to \nuri '/gamma/background_menu.gif'\n150.175.29.7 - - [01/Jun/2005:13:45:20 +0200] [centuri/sid#2191a8]\n[rid#523870/initial] (2) rewrite /gamma/background_menu.gif -\n> /ADPEHCRELEASE/1/gamma/background_menu.gif\n150.175.29.7 - - [01/Jun/2005:13:45:20 +0200] [centuri/sid#2191a8]\n[rid#523870/initial] (2) forcing proxy-throughput with \nhttp://centuri:3080/ADPEHCRELEASE/1/gamma/background_menu.gif\n150.175.29.7 - - [01/Jun/2005:13:45:20 +0200] [centuri/sid#2191a8]\n[rid#523870/initial] (1) go-ahead with proxy request \nproxy:http://centuri:3080/ADPEHCRELEASE/1/gamma/background_menu.gif [OK]\n150.175.29.7 - - [01/Jun/2005:13:45:20 +0200] [centuri/sid#2191a8]\n[rid#8e8650/initial] (2) uri already rewritten. Status 1, \nUri /ADPEHCRELEASE/1/gamma/background_menu.gif, r->filename (null)\n150.175.29.7 - - [01/Jun/2005:13:45:20 +0200] [centuri/sid#2191a8]\n[rid#8e8650/initial] (2) r->filename is NULL for \nURI /ADPEHCRELEASE/1/gamma/background_menu.gif\n\nThe last log entry was added to the code by myself.\n\nNote that after the \"go-ahead with proxy request\" log entry, the hook is \ninvoked again with a NULL request filename.\n\nThe code being the direct cause of the core dump is\n        if (strlen(r->filename) > 6 &&\n            strncmp(r->filename, \"proxy:\", 6) == 0) {\n            /* it should be go on as an internal proxy request */\n\nIt actually does look like the HTTP request is served despite the segmentation \nfault.\n\nApart from the fact that mod_rewrite probably should have handled a null \nfilename, it seems like the root cause lies outside mod_rewrite.\n\nThe problem occurs in Apache 2.0.54 as well as in Apache 2.0.52 with the \nmod_rewrite from 2.0.54 as well as mod_rewrite from 2.0.52. In all cases MPM \nworker was used. The core dumps appear to occur randomly and the problem is \nhard to reproduce."}, {"count": 1, "tags": [], "bug_id": 35160, "attachment_id": null, "is_private": false, "id": 75810, "time": "2005-06-02T18:15:19Z", "creator": "asmorgrav@yahoo.no", "creation_time": "2005-06-02T18:15:19Z", "text": "I have been unsuccessful in reproducing the problem after having unloaded \nmod_mem_cache.\n\nWe had never observed this problem in 2.0.49.\n"}, {"count": 2, "tags": [], "creator": "asmorgrav@yahoo.no", "text": "Changed the component from core to mod_proxy", "id": 76210, "time": "2005-06-09T17:04:53Z", "bug_id": 35160, "creation_time": "2005-06-09T17:04:53Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 35160, "text": "For the first n requests everything seems to work just fine, but after the n:th \nrequest (for n > 100.000), the problem occurs systematically on every request \nfor an object cached in memory.\n\nThe cache configuration allows for small objects (< 10.000 bytes) to be cached \nin memory, while bigger objects are cached on disk.", "id": 76217, "attachment_id": null, "creator": "asmorgrav@yahoo.no", "creation_time": "2005-06-09T17:28:30Z", "time": "2005-06-09T17:28:30Z", "is_private": false}, {"count": 4, "tags": [], "text": "I see a very similar problem in 2.0.54 on Windows 2003 Server. I get the \nfollowing error in the rewrite log (with logging set to 2):\n\n(2) uri already rewritten. Status 1, Uri /x/y/z.jpg, r->filename (null)\n\nIn the error log I get: \n\nParent: child process exited with status 3221225477 -- Restarting.\n\nThis is indeed an access violation error number in Windows.\n\nI only have memory cache enabled, not disk cache - so it does possible this is \nactually an error in mod_mem_cache. I will also disable memory cache and \nreport back.", "attachment_id": null, "id": 76333, "creator": "ken.blackler@jrc.it", "time": "2005-06-13T10:54:20Z", "bug_id": 35160, "creation_time": "2005-06-13T10:54:20Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 35160, "is_private": false, "id": 96852, "attachment_id": null, "creator": "nick@webthing.com", "creation_time": "2006-12-12T16:33:40Z", "time": "2006-12-12T16:33:40Z", "text": "I'm confused.  The traceback and log look like mod_rewrite.  The bug is\nclassified as mod_proxy (????).  You both mention it only happening when you're\nusing mod_mem_cache.\n\nHas this report been overtaken by events?  If not, please clarify."}, {"count": 6, "tags": [], "text": "(In reply to comment #5)\n> I'm confused.  The traceback and log look like mod_rewrite.  The bug is\n> classified as mod_proxy (????).  You both mention it only happening when you're\n> using mod_mem_cache.\n> \n> Has this report been overtaken by events?  If not, please clarify.\n\nNick, you are of course totally right. I am sorry if it was misclassified; I\nmight have been a little tired after having struggled with this thing. It was\noriginally classified as core.\n\nFrom memory the uri2file hook was invoked twice: the first time with a non-null\nuri, the second time the uri was null. It might seem like the bug is in\nmod_rewrite since this is where core is dumped, but the bonus question is: why\nis the hook invoked twice, and why is the uri null the second time around?\nAdditionnally, why does this only happen when mod_mem_cache is loaded?\n", "attachment_id": null, "id": 96910, "creator": "asmorgrav@yahoo.no", "time": "2006-12-14T00:58:55Z", "bug_id": 35160, "creation_time": "2006-12-14T00:58:55Z", "is_private": false}, {"count": 7, "tags": [], "creator": "rpluem@apache.org", "is_private": false, "text": "Providing the rewrite rules that lead to this could be helpful. Furthermore it\nwould be helpful if you could provide the configuration you use for mod_mem_cache", "id": 96924, "time": "2006-12-14T12:44:45Z", "bug_id": 35160, "creation_time": "2006-12-14T12:44:45Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 35160, "is_private": false, "id": 96932, "attachment_id": null, "creator": "asmorgrav@yahoo.no", "creation_time": "2006-12-15T00:57:38Z", "time": "2006-12-15T00:57:38Z", "text": "(In reply to comment #7)\n> Providing the rewrite rules that lead to this could be helpful. Furthermore it\n> would be helpful if you could provide the configuration you use for mod_mem_cache\n\n    RewriteMap ehcrelease txt:%%SERVER_ROOT%%/conf/app/ehcrelease.map\n\n    RewriteCond %{HTTP_COOKIE} ADPEHCRELEASE=.*ADPEHCRELEASE=\n    RewriteRule .* - [F]\n\n    RewriteCond $1 ^/rpforms [OR]\n    RewriteCond $1 ^/siteminderagent\n    RewriteRule ^(.*)$  - [L]\n\n    RewriteCond $1              !^/ADPEHCRELEASE/[^\\/]+\n    RewriteCond %{HTTP_COOKIE} [;]?[\\ ]*ADPEHCRELEASE=[\\ ]*[\\d\\-a-zA-Z]5(\\d)\n    <IfModule !mod_cache.c>\n        RewriteRule ^(.*)$ /ADPEHCRELEASE/%1$1  [N]\n    </IfModule>\n    <IfModule mod_cache.c>\n        RewriteRule ^(.*)$ /ADPEHCRELEASE/%1$1  [P]\n    </IfModule>\n\n    RewriteRule ^/ADPEHCRELEASE/([^\\/]+)(.*)$ ${ehcrelease:$1}$2 [P]\n\n    <IfModule mod_cache.c>\n        CacheIgnoreCacheControl Off\n        CacheMaxExpire          864000\n\n        <IfModule mod_mem_cache.c>\n    \t    MCacheMaxObjectSize 10000\n    \t    MCacheSize          70000\n            CacheEnable         mem /ADPEHCRELEASE\n        </IfModule>\n        <IfModule mod_disk_cache.c>\n            CacheRoot           %%SERVER_ROOT%%/cache\n    \t    CacheSize           150000\n            CacheEnable         disk /ADPEHCRELEASE\n        </IfModule>\n    </IfModule>\n"}, {"count": 9, "tags": [], "bug_id": 35160, "attachment_id": null, "is_private": false, "id": 96933, "time": "2006-12-15T01:28:36Z", "creator": "asmorgrav@yahoo.no", "creation_time": "2006-12-15T01:28:36Z", "text": "(In reply to comment #8)\n\nThe line\n    RewriteCond %{HTTP_COOKIE} [;]?[\\ ]*ADPEHCRELEASE=[\\ ]*[\\d\\-a-zA-Z]5(\\d)\n\nshould of course read\n\n    RewriteCond %{HTTP_COOKIE} [;]?[\\ ]*ADPEHCRELEASE=[\\ ]*[\\d\\-a-zA-Z]{5}(\\d)"}, {"count": 10, "tags": [], "bug_id": 35160, "attachment_id": null, "text": "(In reply to comment #8)\n\nI was successful in reliably reproducing the problem using the previously posted\nconfiguration.\n\nWhat I do is applying some load on the server:\n\n /u01/opt/apache2/bin/ab -C ADPEHCRELEASE=000001 -c 10 -n 100000\nhttp://server/index.html\n\nThen I also use curl to send requests in a loop:\n$ while [ 1 ] ; do curl -H \"Pragma:\" --header \"Cookie: ADPEHCRELEASE=000001\"\n--dump-header /tmp/hdr2  http://server/index.html ; done\nHI!!\ncurl: (52) Empty reply from server\nHI!!\nHI!!\nHI!!\nHI!!\ncurl: (52) Empty reply from server\ncurl: (52) Empty reply from server\nHI!!\nHI!!\n\nEvery time I get \"Empty reply from server\", there is a coredump and Apache forks\na new process. The response from the URL requested is small enough to be\nelegible for in-memory caching.\n\nJust running ab does not seem to cause any coredumps. The problem starts to\noccur when I launch curl-loop.\n\nApache is running on a dual-processor USparc-IIIi, solaris 8.\n\nIT is using MPM worker with the following settings:\nServerLimit          6\nThreadLimit        100\nStartServers         2\nMaxClients         600\nMinSpareThreads     10\nMaxSpareThreads    200\nThreadsPerChild    100\nMaxRequestsPerChild  0\n\n", "id": 96944, "time": "2006-12-15T07:36:42Z", "creator": "asmorgrav@yahoo.no", "creation_time": "2006-12-15T07:36:42Z", "is_private": false}, {"count": 11, "tags": [], "text": "Could you please provide the full rewrite logfile for a crash?", "attachment_id": null, "id": 96965, "creator": "rpluem@apache.org", "time": "2006-12-15T16:02:08Z", "bug_id": 35160, "creation_time": "2006-12-15T16:02:08Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 35160, "is_private": false, "id": 97022, "attachment_id": 19280, "creator": "asmorgrav@yahoo.no", "creation_time": "2006-12-18T08:12:31Z", "time": "2006-12-18T08:12:31Z", "text": "Created attachment 19280\nRewrite log from a scenario that dumps core\n\nHere is the rewrite log.\n\nThe is scenario is the following:\n\nFirst I launch Apache Bench with a concurrency level of 1 from client\n10.1.66.16.\n\n/u01/opt/apache2/bin/ab -C ADPEHCRELEASE=000001 -H \"Connection: close\" -c 1 -n\n50000 http://labelle16.gsi.fr:8080/index.html\n\nSo far everything seems to go well. No cores, no messages about \"uri already\nrewritten\". Then I launch the loop containg the curl invocations from client\n10.1.32.163.\n\nwhile [ 1 ] ; do curl -H \"Pragma:\" --header \"Cookie: ADPEHCRELEASE=000001\"\n--dump-header /tmp/hdr2  http://labelle16:8080/index.html ; done\n\nThat is when the \"uri already rewritten\" start appearing and there are numerous\ncore cumps. Contrary to what I thought there are a lot more core cumps than\n\"uri already rewritten\" messages."}, {"text": "Currently I have the slight feeling that old values from previous requests\nresurrect. As I understood you, you can reproduce the error pretty well. Can you\nplease apply the following patch and let me know if the error is still \nreproducible?\n\n\n--- srclib/apr/tables/apr_tables.c.orig 2006-12-19 00:04:05.000000000 +0100\n+++ srclib/apr/tables/apr_tables.c      2006-12-19 00:04:25.000000000 +0100\n@@ -380,7 +380,7 @@\n {\n     apr_table_t *t = apr_palloc(p, sizeof(apr_table_t));\n\n-    make_array_core(&t->a, p, nelts, sizeof(apr_table_entry_t), 0);\n+    make_array_core(&t->a, p, nelts, sizeof(apr_table_entry_t), 1);\n #ifdef MAKE_TABLE_PROFILE\n     t->creator = __builtin_return_address(0);\n #endif", "tags": [], "creator": "rpluem@apache.org", "is_private": false, "count": 13, "id": 97049, "time": "2006-12-18T15:11:00Z", "bug_id": 35160, "creation_time": "2006-12-18T15:11:00Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 35160, "text": "(In reply to comment #13)\n> Currently I have the slight feeling that old values from previous requests\n> resurrect. As I understood you, you can reproduce the error pretty well. Can you\n> please apply the following patch and let me know if the error is still \n> reproducible?\n\nUnfortunately I can still reproduce it after having applied your patch.", "id": 97370, "attachment_id": null, "creator": "asmorgrav@yahoo.no", "creation_time": "2006-12-27T04:57:48Z", "time": "2006-12-27T04:57:48Z", "is_private": false}, {"count": 15, "tags": [], "creator": "asmorgrav@yahoo.no", "attachment_id": null, "id": 97371, "time": "2006-12-27T05:33:44Z", "bug_id": 35160, "creation_time": "2006-12-27T05:33:44Z", "is_private": false, "text": "(In reply to comment #14)\n> (In reply to comment #13)\n\nHere is a little more info about the crash:\n\n16167/5:                ct = Jul 12 08:08:14 MEST 2006  [ 1152684494 ]\n16167/5:            bsz=8192  blks=2     fs=ufs\n16167/5:         4.2103 lstat(\"/u01/apachetest\", 0xFDA03778)            = 0\n16167/5:            d=0x0154000E i=626151 m=0040755 l=10 u=1007  g=1     sz=512\n16167/5:                at = Dec 27 14:27:41 MET 2006  [ 1167226061 ]\n16167/5:                mt = Dec 27 14:19:51 MET 2006  [ 1167225591 ]\n16167/5:                ct = Dec 27 14:19:51 MET 2006  [ 1167225591 ]\n16167/5:            bsz=8192  blks=2     fs=ufs\n16167/5:         4.2108 lstat(\"/u01/apachetest/htdocs\", 0xFDA03778)     = 0\n16167/5:            d=0x0154000E i=1071076 m=0040755 l=5  u=1007  g=104   sz=512\n16167/5:                at = Dec 15 13:59:02 MET 2006  [ 1166187542 ]\n16167/5:                mt = Dec 15 13:58:39 MET 2006  [ 1166187519 ]\n16167/5:                ct = Dec 15 13:58:39 MET 2006  [ 1166187519 ]\n16167/5:            bsz=8192  blks=2     fs=ufs\n16167/5:         4.2114 lstat(\"/u01/apachetest/htdocs/labelle16\", 0xFDA03778) = 0\n16167/5:            d=0x0154000E i=507131 m=0040755 l=3  u=1007  g=104   sz=512\n16167/5:                at = Dec 27 14:20:47 MET 2006  [ 1167225647 ]\n16167/5:                mt = Dec 15 13:59:07 MET 2006  [ 1166187547 ]\n16167/5:                ct = Dec 15 13:59:07 MET 2006  [ 1166187547 ]\n16167/5:            bsz=8192  blks=2     fs=ufs\n16167/5:         4.2120 lstat(\"/u01/apachetest/htdocs/labelle16/index.html\",\n0xFDA03778) = 0\n16167/5:            d=0x0154000E i=951863 m=0100644 l=1  u=1007  g=104   sz=5\n16167/5:                at = Dec 27 14:19:51 MET 2006  [ 1167225591 ]\n16167/5:                mt = Aug 22 11:13:53 MEST 2005  [ 1124702033 ]\n16167/5:                ct = Dec 15 13:59:07 MET 2006  [ 1166187547 ]\n16167/5:            bsz=8192  blks=2     fs=ufs\n16167/5:         4.2126 getpid()                                        = 16167\n[16161]\n16167/5:         4.2128 open(\"/u01/apachetest/htdocs/labelle16/index.html\",\nO_RDONLY) = 25\n16167/5:         4.2171 mmap(0x00000000, 5, PROT_READ, MAP_SHARED, 25, 0) =\n0xFEB00000\n16167/5:         4.2174 read(24, 0x001EE128, 8000)                      Err#11\nEAGAIN\n16167/5:         4.2177 writev(24, 0xFDA03988, 2)                       = 233\n16167/5:                iov_base = 0x00202178  iov_len = 228\n16167/5:                iov_base = 0xFEB00000  iov_len = 5\n16167/3:         4.2188 poll(0xFD40FC08, 4, -1)                         = 1\n16167/3:                fd=7  ev=POLLIN rev=0\n16167/3:                fd=6  ev=POLLIN rev=0\n16167/3:                fd=5  ev=POLLIN rev=POLLIN\n16167/3:                fd=4  ev=POLLIN rev=0\n16167/6:         4.2188 poll(0xFDD07308, 1, 300000)                     = 1\n16167/6:                fd=28 ev=POLLIN rev=POLLIN\n16167/6:         4.2193 read(28, \" H T T P / 1 . 1   2 0 0\".., 8000)    = 233\n16167/6:         4.2201 brk(0x00235230)                                 = 0\n16167/6:         4.2203 brk(0x00237230)                                 = 0\n16167/6:         4.2205 brk(0x00237230)                                 = 0\n16167/6:         4.2207 brk(0x00239230)                                 = 0\n16167/6:         4.2209 read(26, 0x00208190, 8000)                      Err#11\nEAGAIN\n16167/4:         4.2212 poll(0xFDB03308, 1, 300000)                     = 1\n16167/4:                fd=22 ev=POLLIN rev=POLLIN\n16167/6:         4.2212 writev(26, 0xFDD09988, 2)                       = 233\n16167/6:                iov_base = 0x0020C1A0  iov_len = 228\n16167/6:                iov_base = 0x0020A27C  iov_len = 5\n16167/6:         4.2216 times(0xFEC10068)                               = 2288447556\n16167/6:                utim=419    stim=592    cutim=0      cstim=0      (HZ=100)\n16167/6:         4.2219 close(27)                                       = 0\n16167/5:         4.2223 munmap(0xFEB00000, 5)                           = 0\n16167/5:         4.2225 times(0xFEC102D8)                               = 2288447556\n16167/5:                utim=419    stim=592    cutim=0      cstim=0      (HZ=100)\n16167/5:         4.2227 close(25)                                       = 0\n16167/4:         4.2229 read(22, \" H T T P / 1 . 1   2 0 0\".., 8000)    = 233\n16167/4:         4.2233 read(23, 0x0021A1D8, 8000)                      Err#11\nEAGAIN\n16167/4:         4.2235 writev(23, 0xFDB05988, 2)                       = 233\n16167/4:                iov_base = 0x002181D0  iov_len = 228\n16167/4:                iov_base = 0x0021C2C4  iov_len = 5\n16167/4:         4.2238 times(0xFEC10208)                               = 2288447556\n16167/4:                utim=419    stim=592    cutim=0      cstim=0      (HZ=100)\n16167/3:         4.2242 accept(5, 0x001F21F4, 0x001F2214, 1)            = 25\n16167/3:                AF_INET  name = 10.1.66.16  port = 60764\n16167/3:         4.2367 lwp_mutex_unlock(0xFEC90000)                    = 0\n16167/3:                mutex type: USYNC_PROCESS|LOCK_PRIO_INHERIT|LOCK_ROBUST_NP\n16167/3:         4.2370 lwp_sema_post(0xFD901E60)                       = 0\n16167/3:                sema type: USYNC_PROCESS  count = 1\n16167/8:         4.2372 lwp_sema_wait(0xFD901E60)                       = 0\n16167/8:                sema type: USYNC_PROCESS  count = 0\n16167/3:         4.2374 lwp_mutex_wakeup(0xFEDD34F8)                    = 0\n16167/3:                mutex type: USYNC_THREAD\n16167/8:         4.2376 lwp_mutex_lock(0xFEDD34F8)                      = 0\n16167/8:                mutex type: USYNC_THREAD\n16167/3:         4.2379 lwp_sema_post(0xFD901E60)                       = 0\n16167/3:                sema type: USYNC_PROCESS  count = 1\n16167/3:         4.2383 lwp_mutex_lock(0xFEC90000)                      = 0\n16167/3:                mutex type: USYNC_PROCESS|LOCK_PRIO_INHERIT|LOCK_ROBUST_NP\n16167/8:         4.2383 lwp_sema_wait(0xFD901E60)                       = 0\n16167/8:                sema type: USYNC_PROCESS  count = 0\n16167/8:         4.2387 read(25, \" G E T   / i n d e x . h\".., 8000)    = 148\n16167/8:         4.2393 door_info(3, 0xFD8FF320)                        = 0\n16167/8:         4.2395 door_call(3, 0xFD8FF308)                        = 0\n16167/8:         4.2398 door_info(3, 0xFD8FF2A0)                        = 0\n16167/8:         4.2400 door_call(3, 0xFD8FF288)                        = 0\n16167/8:         4.2403 so_socket(2, 2, 0, \"\", 1)                       = 27\n16167/8:         4.2405 fcntl(27, F_GETFL, 0x00000000)                  = 2\n16167/8:         4.2407 fstat64(27, 0xFD901510)                         = 0\n16167/8:            d=0x04300000 i=9656  m=0140666 l=0  u=0     g=0     sz=0\n16167/8:                at = Dec 27 14:27:54 MET 2006  [ 1167226074 ]\n16167/8:                mt = Dec 27 14:27:54 MET 2006  [ 1167226074 ]\n16167/8:                ct = Dec 27 14:27:54 MET 2006  [ 1167226074 ]\n16167/8:            bsz=8192  blks=0     fs=ufs\n16167/8:         4.2411 getsockopt(27, 65535, 8192, 0xFD901610, 0xFD901608,\n6296) = 0\n16167/8:         4.2413 fstat64(27, 0xFD901510)                         = 0\n16167/8:            d=0x04300000 i=9656  m=0140666 l=0  u=0     g=0     sz=0\n16167/8:                at = Dec 27 14:27:54 MET 2006  [ 1167226074 ]\n16167/8:                mt = Dec 27 14:27:54 MET 2006  [ 1167226074 ]\n16167/8:                ct = Dec 27 14:27:54 MET 2006  [ 1167226074 ]\n16167/8:            bsz=8192  blks=0     fs=ufs\n16167/4:         4.2509 poll(0xFDB05600, 1, 15000)                      = 1\n16167/4:                fd=23 ev=POLLIN rev=POLLIN\n16167/8:         4.2512 getsockopt(27, 65535, 8192, 0xFD901610, 0xFD90160C,\n6296) = 0\n16167/8:         4.2513 setsockopt(27, 65535, 8192, 0xFD901610, 4, 6296) = 0\n16167/8:         4.2515 fcntl(27, F_SETFL, 0x00000082)                  = 0\n16167/3:         4.2519 poll(0xFD40FC08, 4, -1)                         = 1\n16167/3:                fd=7  ev=POLLIN rev=0\n16167/3:                fd=6  ev=POLLIN rev=0\n16167/3:                fd=5  ev=POLLIN rev=POLLIN\n16167/3:                fd=4  ev=POLLIN rev=0\n16167/8:         4.2519 connect(27, 0x001F272C, 16, 1)                  = 0\n16167/8:                AF_INET  name = 10.1.66.16  port = 8080\n16167/8:         4.2524 getsockname(27, 0x001F27FC, 0x001F281C, 1)      = 0\n16167/8:                AF_INET  name = 10.1.66.16  port = 60765\n16167/8:         4.2527 setsockopt(27, 6, 1, 0xFD901674, 4, 1)          = 0\n16167/8:         4.2530 writev(27, 0xFD901690, 11)                      = 293\n16167/8:                iov_base = 0x001F2C38  iov_len = 42\n16167/8:                iov_base = 0x001F2C78  iov_len = 29\n16167/8:                iov_base = 0x001F2CA8  iov_len = 36\n16167/8:                iov_base = 0x001F2CE0  iov_len = 30\n16167/8:                iov_base = 0x001F2D10  iov_len = 13\n16167/8:                iov_base = 0x001F2D30  iov_len = 18\n16167/8:                iov_base = 0x001F2D58  iov_len = 19\n16167/8:                iov_base = 0x001F2D80  iov_len = 32\n16167/8:                iov_base = 0x001F2DB8  iov_len = 34\n16167/8:                iov_base = 0x001F2DF0  iov_len = 38\n16167/8:                iov_base = 0x00079458  iov_len = 2\n16167/8:         4.2533 read(27, 0x001FA158, 8000)                      Err#11\nEAGAIN\n16167/4:         4.2536 read(23, 0x0021C1E0, 8000)                      = 0\n16167/3:         4.2713 accept(5, 0x002202AC, 0x002202CC, 1)            = 29\n16167/3:                AF_INET  name = 10.1.66.16  port = 60765\n16167/4:         4.2717 shutdown(23, 1, 1)                              = 0\n16167/4:         4.2719 poll(0xFDB05848, 1, 2000)                       = 1\n16167/4:                fd=23 ev=POLLIN rev=POLLIN\n16167/4:         4.2721 read(23, 0xFDB059C8, 512)                       = 0\n16167/4:         4.2724 close(23)                                       = 0\n16167/4:         4.2727 close(22)                                       = 0\n16167/6:         4.2729 poll(0xFDD09600, 1, 15000)                      = 1\n16167/6:                fd=26 ev=POLLIN rev=POLLIN\n16167/6:         4.2731 read(26, 0x0020E1A8, 8000)                      = 0\n16167/6:         4.2734 shutdown(26, 1, 1)                              = 0\n16167/6:         4.2736 poll(0xFDD09848, 1, 2000)                       = 1\n16167/6:                fd=26 ev=POLLIN rev=POLLIN\n16167/6:         4.2738 read(26, 0xFDD099C8, 512)                       = 0\n16167/6:         4.2740 close(26)                                       = 0\n16167/5:         4.2743 poll(0xFDA03600, 1, 15000)                      = 1\n16167/5:                fd=24 ev=POLLIN rev=POLLIN\n16167/6:         4.2743 close(28)                                       = 0\n16167/5:         4.2747 read(24, 0x00202178, 8000)                      = 0\n16167/5:         4.2749 shutdown(24, 1, 1)                              = 0\n16167/5:         4.2751 poll(0xFDA03848, 1, 2000)                       = 1\n16167/5:                fd=24 ev=POLLIN rev=POLLIN\n16167/5:         4.2753 read(24, 0xFDA039C8, 512)                       = 0\n16167/5:         4.2755 close(24)                                       = 0\n16167/3:         4.2758 lwp_mutex_unlock(0xFEC90000)                    = 0\n16167/3:                mutex type: USYNC_PROCESS|LOCK_PRIO_INHERIT|LOCK_ROBUST_NP\n16167/3:         4.2760 lwp_sema_post(0xFDC07E60)                       = 0\n16167/3:                sema type: USYNC_PROCESS  count = 1\n16167/7:         4.2762 lwp_sema_wait(0xFDC07E60)                       = 0\n16167/7:                sema type: USYNC_PROCESS  count = 0\n16167/3:         4.2764 lwp_mutex_wakeup(0xFEDD34F8)                    = 0\n16167/3:                mutex type: USYNC_THREAD\n16167/7:         4.2766 lwp_mutex_lock(0xFEDD34F8)                      = 0\n16167/7:                mutex type: USYNC_THREAD\n16167/3:         4.2768 lwp_sema_post(0xFDC07E60)                       = 0\n16167/3:                sema type: USYNC_PROCESS  count = 1\n16167/7:         4.2770 lwp_sema_wait(0xFDC07E60)                       = 0\n16167/7:                sema type: USYNC_PROCESS  count = 0\n16167/3:         4.2802 lwp_mutex_lock(0xFEC90000)                      = 0\n16167/3:                mutex type: USYNC_PROCESS|LOCK_PRIO_INHERIT|LOCK_ROBUST_NP\n16167/7:         4.2805 read(29, \" G E T   / A D P E H C R\".., 8000)    = 293\n16167/7:         4.2808     Incurred fault #6, FLTBOUNDS  %pc = 0xFEE33218\n16167/7:              siginfo: SIGSEGV SEGV_MAPERR addr=0x00000000\n16167/7:         4.2811     Received signal #11, SIGSEGV [caught]\n16167/7:              siginfo: SIGSEGV SEGV_MAPERR addr=0x00000000\n16167/7:         4.2813 sigaction(SIGSEGV, 0xFDC07018, 0x00000000)      = 0\n16167/7:            new: hand = 0x00000000 mask = 0 0 0 0 flags = 0x0000\n16167/7:         4.2815 sigprocmask(SIG_SETMASK, 0xFEDCCFB8, 0x00000000) = 0\n16167/7:                 set = 0 0 0 0\n16167/7:         4.2818 chdir(\"/u01/apachetest\")                        = 0\n16167/7:         4.2820 sigaction(SIGSEGV, 0xFDC06E98, 0xFDC06F98)      = 0\n16167/7:            new: hand = 0x00000000 mask = 0 0 0 0 flags = 0x0000\n16167/7:            old: hand = 0x00000000 mask = 0 0 0 0 flags = 0x0000\n16167/7:         4.2825 getpid()                                        = 16167\n[16161]\n16167/7:         4.2826 getpid()                                        = 16167\n[16161]\n16167/7:         4.2828 getpid()                                        = 16167\n[16161]\n16167/2:         4.2830 signotifywait()                                 = 11\n16167/7:         4.2830 kill(16167, SIGSEGV)                            = 0\n16167/7:         4.2832 sigprocmask(SIG_SETMASK, 0xFEDD8CE0, 0x00000000) = 0\n16167/7:                 set = 0xFFBFFEFF 0x00001FFF 0 0\n16167/7:         4.2834 setcontext(0xFDC06EF8)\n16167/7:         4.2836     Incurred fault #6, FLTBOUNDS  %pc = 0xFEE33218\n16167/7:              siginfo: SIGSEGV SEGV_MAPERR addr=0x00000000\n16167/7:         4.2837     Received signal #11, SIGSEGV [default]\n16167/7:              siginfo: SIGSEGV SEGV_MAPERR addr=0x00000000\n16167/7:                *** process killed ***\n\n"}, {"count": 16, "tags": [], "bug_id": 35160, "text": "Verified as fixed in 2.2.6.  Don't know when the fix happened.", "id": 109092, "attachment_id": null, "creator": "nick@webthing.com", "creation_time": "2007-10-07T17:29:36Z", "time": "2007-10-07T17:29:36Z", "is_private": false}]