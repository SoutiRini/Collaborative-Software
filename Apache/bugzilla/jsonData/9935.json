[{"count": 0, "tags": [], "bug_id": 9935, "attachment_id": null, "id": 17943, "time": "2002-06-17T22:51:52Z", "creator": "pier@betaversion.org", "creation_time": "2002-06-17T22:51:52Z", "is_private": false, "text": "Here's the output of my netstat -an... (the relevant parts)\n\n> TCP: IPv4\n>    Local Address        Remote Address    Swind Send-Q Rwind Recv-Q  State\n> -------------------- -------------------- ----- ------ ----- ------ -------\n[...]\n>       *.32769              *.*                0      0 24576      0 BOUND\n>       *.8080               *.*                0      0 24576      0 LISTEN\n> 127.0.0.1.8005             *.*                0      0 24576      0 LISTEN\n[...]\n\nNow, when I check out who's owning that 32769 socket, here I find it in\nTomcat...:\n\n> COMMAND PID   USER   FD   TYPE     DEVICE SIZE/OFF      NODE NAME\n> java    230 tomcat    5u  IPv4 0xe0f4535c      0t0       TCP *:8080 (LISTEN)\n> java    230 tomcat    6u  IPv4 0xe0f451bc      0t0       TCP localhost:32769->\nlocalhost:32768 (BOUND)\n> java    230 tomcat    8u  IPv4 0xe190aec4      0t0       TCP localhost:8005 (LISTEN)\n\nNow, this is _really_ odd... Where does that socket comes from? It seems someone creates a \nsocket, but never actually call connect() or accept()."}, {"count": 1, "tags": [], "bug_id": 9935, "attachment_id": null, "id": 17944, "time": "2002-06-17T22:52:37Z", "creator": "pier@betaversion.org", "creation_time": "2002-06-17T22:52:37Z", "is_private": false, "text": "BTW, this is my server.xml:\n\n<Server port=\"8005\" shutdown=\"SHUTDOWN\" debug=\"0\">\n\n  <GlobalNamingResources>\n    <Resource name=\"UserDatabase\" auth=\"Container\"\n              type=\"org.apache.catalina.UserDatabase\"\n       description=\"User database that can be updated and saved\">\n    </Resource>\n    <ResourceParams name=\"UserDatabase\">\n      <parameter>\n        <name>factory</name>\n        <value>org.apache.catalina.users.MemoryUserDatabaseFactory</value>\n      </parameter>\n      <parameter>\n        <name>pathname</name>\n        <value>conf/tomcat-users.xml</value>\n      </parameter>\n    </ResourceParams>\n  </GlobalNamingResources>\n\n  <Service name=\"Tomcat-Standalone\">\n\n    <Connector className=\"org.apache.coyote.tomcat4.CoyoteConnector\"\n               port=\"8080\" minProcessors=\"5\" maxProcessors=\"75\"\n               enableLookups=\"true\" redirectPort=\"8443\"\n               acceptCount=\"10\" debug=\"0\" connectionTimeout=\"20000\"\n               useURIValidationHack=\"false\" />\n\n    <Engine name=\"Standalone\" defaultHost=\"localhost\" debug=\"0\">\n\n      <Logger className=\"org.apache.catalina.logger.FileLogger\"\n              prefix=\"catalina-\" suffix=\".log\"\n              timestamp=\"true\"/>\n\n      <Realm className=\"org.apache.catalina.realm.UserDatabaseRealm\"\n                 debug=\"0\" resourceName=\"UserDatabase\"/>\n\n      <Host name=\"localhost\" debug=\"0\" appBase=\"webapps\" \n       unpackWARs=\"true\" autoDeploy=\"true\" workDir=\"/tmp/tomcat/standalone\"/>\n\n    </Engine>\n\n  </Service>\n\n</Server>\n"}, {"count": 2, "tags": [], "bug_id": 9935, "attachment_id": null, "id": 18055, "time": "2002-06-19T11:28:44Z", "creator": "remm@apache.org", "creation_time": "2002-06-19T11:28:44Z", "is_private": false, "text": "This does not happen on Windows/Cygwin."}, {"count": 3, "tags": [], "bug_id": 9935, "attachment_id": null, "text": "\nFYI, weird port connections present on both Solaris and Linux.  Looked into\nit a bit more (by adding debugging println's to java.net.Socket and\njava.net.ServerSocket) and didnt find anything in the VM that is creating\nthe sockets.  Weird.\n", "id": 19142, "time": "2002-07-08T21:51:50Z", "creator": "bob@jadn.com", "creation_time": "2002-07-08T21:51:50Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 9935, "attachment_id": null, "id": 19144, "time": "2002-07-08T23:31:56Z", "creator": "pier@betaversion.org", "creation_time": "2002-07-08T23:31:56Z", "is_private": false, "text": "Oddly enough, on Solaris I was able to reproduce the problem when a more than a socket\ngets bound... Like\n\nServerSocket s1=new ServerSocket(1233);\nServerSocket s2=new ServerSocket(1234);\n\nIt appears to be a bug in the VM, but I'm not quite confident on that... It still looks odd (it \nhappens once every N time, while with tomcat it happens ALL the times).\n\nAs I posted on Tomcat-DEV, trussing the VM, it shows that actually the sucker does create\nthe two sockets, and does make the odd connections, plus, leaves one of the sockets in\n\"bound\" state...\n\nBut ATM not much time to debug the VM..."}, {"count": 5, "tags": [], "bug_id": 9935, "text": "I can't see how this can't be a JDK issue (although it's odd that it happens all\nthe time with Tomcat), so I'm resolving this as a won't fix (and I can't find\nanything to fix anyway).", "id": 35899, "time": "2003-04-23T14:49:40Z", "creator": "remm@apache.org", "creation_time": "2003-04-23T14:49:40Z", "is_private": false, "attachment_id": null}]