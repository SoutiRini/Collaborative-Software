[{"text": "Created attachment 33359\nSample the reproduces the problem\n\nThis problem's probably most easily described with the attached sample. There's a servlet mapped to /error and a custom error page registered with /error as it's location. Another servlet is mapped to /timeout. It deliberately allows an async request to timeout and then calls response.sendError(503).\n\nMy expectation is that this will result in the request being routed to the error servlet and that, as a result, a 503 response will be returned with \"Error!\" in the body.\n\nThe actual outcome is that a 500 response is returned with \"Error!\" in the body:\n\n$ curl -i localhost:8080/timeout\nHTTP/1.1 500 Internal Server Error\nServer: Apache-Coyote/1.1\nContent-Length: 7\nDate: Thu, 17 Dec 2015 20:49:00 GMT\nConnection: close\n\nError!\n\nAnd the following severe message and exception are logged:\n\nSEVERE: Exception Processing ErrorPage[errorCode=0, location=/error]\njava.lang.IllegalStateException: Cannot forward after response has been committed\n\tat org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:327)\n\tat org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:317)\n\tat org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:445)\n\tat org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:304)\n\tat org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:399)\n\tat org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:451)\n\tat org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:293)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.asyncDispatch(AbstractHttp11Processor.java:1716)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:650)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)", "tags": [], "creator": "awilkinson@pivotal.io", "attachment_id": 33359, "count": 0, "id": 187014, "time": "2015-12-17T20:51:23Z", "bug_id": 58751, "creation_time": "2015-12-17T20:51:23Z", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 33363\nAnother variant of the testcase the resulting in a ClientAbortException\n\nI've attached another testcase that behaves slightly differently. In this test, the response is sent back to the client before the custom error page is called. When the error page is then called it flushes the response and a ClientAbortException is thrown.", "is_private": false, "id": 187034, "creator": "awilkinson@pivotal.io", "time": "2015-12-18T10:29:18Z", "bug_id": 58751, "creation_time": "2015-12-18T10:29:18Z", "attachment_id": 33363}, {"count": 2, "tags": [], "bug_id": 58751, "attachment_id": null, "id": 187304, "time": "2016-01-01T15:39:58Z", "creator": "markt@apache.org", "creation_time": "2016-01-01T15:39:58Z", "is_private": false, "text": "The test case is invalid.\n\nTomcat enforces the requirements set on page 2-18 of Servlet 3.1. To quote the relevant section:\n\n<quote>\nIn the event that an asynchronous operation times out, the container must run through the following steps:\n- Invoke the AsyncListener.onTimeout method on all the AsyncListener instances registered with the ServletRequest on which the asynchronous operation was initiated.\n- If none of the listeners called AsyncContext.complete() or any of the AsyncContext.dispatch methods, perform an error dispatch with a status code equal to HttpServletResponse.SC_INTERNAL_SERVER_ERROR.\n- If no matching error page was found, or the error page did not call AsyncContext.complete() or any of the AsyncContext.dispatch methods, the container MUST call AsyncContext.complete().\n</quote>\n\nThe provided test case does not call AsyncContext.complete() during onTimeout() so Tomcat performs the error dispatch required above.\n\nIf the expected call to AsyncContext.complete() is added to onTimeout(), the behaviour the test case expects is observed.\n\nTomcat might be able to handle this better but given the number of errors that preceed this, (async timeout, failure to call complete()) I'm not sure it is worth putting much/any effort into investigating possible improvements."}, {"count": 3, "tags": [], "text": "Mark, did you miss the second variant of the problem? It does call dispatch but still behaves strangely. Tomcat appears to try to send two responses. The second fails with a ClientAbortException.", "is_private": false, "id": 187323, "creator": "awilkinson@pivotal.io", "time": "2016-01-02T15:00:55Z", "bug_id": 58751, "creation_time": "2016-01-02T15:00:55Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "The report suggested the test cases were variations of the same issue, not different issues. Hence why the bug was closed when the first issue was found to be invalid.\n\nI've taken a closer look at the second issue and there is a problem with at least 9.0.x and probably earlier versions as well.", "is_private": false, "id": 187367, "creator": "markt@apache.org", "time": "2016-01-04T17:58:16Z", "bug_id": 58751, "creation_time": "2016-01-04T17:58:16Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Fixed in 9.0.x for 9.0.0.M2 onwards, 8.0.x for 8.0.31 onwards and 7.0.x for 7.0.68 onwards.", "attachment_id": null, "id": 187370, "creator": "markt@apache.org", "time": "2016-01-04T18:24:28Z", "bug_id": 58751, "creation_time": "2016-01-04T18:24:28Z", "is_private": false}]