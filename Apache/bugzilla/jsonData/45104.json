[{"count": 0, "tags": [], "creator": "lulich.john@aoins.com", "attachment_id": null, "id": 117187, "time": "2008-05-30T11:02:30Z", "bug_id": 45104, "creation_time": "2008-05-30T11:02:30Z", "is_private": false, "text": "Please forgive me, I'm a Java developer, not a System Administrator.  Information I'm providing regarding our systems is to the best of my current knowledge.\n\nProduction Environment:\nServer: IBM WebSphere Application Server v5.1\nPlatform: IBM S/390\nOS: z/OS\nFOP 0.93\nJava 1.4\n\nDevelopment Environment:\nComputer: Intel Core2 Duo CPU E4500@2.20GHz\n2.19GHz, 2.98 GB RAM\nOS: Windows XP Professional, 2002, SP2\nIDE: WebSphere Developer for System Z (WDz) v.7.0.1\nServer: WebSphere v5.1 Test Environment\n\nOn your site, http://xmlgraphics.apache.org/fop/0.94/embedding.html#multithreading, you write:  <If you encounter any suspicious behaviour, please notify us.>\n\nHere's my suspicious behavior:\n\nWe have been running FOP 0.93 since upgrading in March of 2007.  In late February/Early March of 2008, we began receiving a VERY low frequency of reports from users informing us that when they attempt to print PDF documents from our site, they are receiving complete documents for a different customer.  If they close the PDF and generate it again, they get the correct documents.  So far in 2008, we have 15 incidents reported out of roughly 260,000 hits to this process.\n\nWe initially assumed that we had a multi-threading problem in our Java code, but after careful review and testing, we determined that is not the case.  We have been running this same Java code with only minor base read changes for nearly three years without similar incident.  Also, our logging process has never captured an error that we could tie to this problem in any way.  Likewise, our general server logs also come up clean.\n\nWe have noticed that the majority of these problems have occurred when our mainframe CPU's are getting pushed to (or near) 100%, but some have occurred during timeframes when a spike was not detected (though our tracking tools may not have caught it, since spikes are only logged if they last for a specified amount of time).\n\nUnfortunately, we cannot duplicate this problem at will, either on our mainframe or in our development environment.  Past mainframe load tests have not shown any problems.  The few multi-thread issues we have encountered in code we have written for other projects has been easily found, and we have other programming groups using the same basic Java/JAXB process to gather data and marshall XML--the only difference being that they have switched over to using Crystal Reports to convert the XML to PDF, and this project is the last one still using FOP.  Consequently, we are the only ones running into this problem.\n\nYour statement: \"Apache FOP may currently not be completely thread safe\" raises some red flags with us.  I'm sorry I can't provide better detail at this time, but as I said, the only evidence of a problem comes in the form of a user's call to tech support, and a faxed or emailed copy of the pdf.\n\nThanks for your help,\nJohn Lulich"}, {"count": 1, "tags": [], "bug_id": 45104, "attachment_id": null, "id": 117200, "time": "2008-05-31T02:27:59Z", "creator": "jeremias@apache.org", "creation_time": "2008-05-31T02:27:59Z", "is_private": false, "text": "That statement on the website is basically a disclaimer so everyone using FOP in a multi-threaded environment performs some testing and don't just consider themselves on the safe side as this is a complex field. Finding bugs in this area is very difficult especially if you don't have dedicated hardware for continuous testing (and we don't). We are very vigilant to catch any changes that might introduce multi-threading problems. I also do regular tests in this direction. That doesn't mean there cannot be a remaining multi-threading bug somewhere in the codebase. But frankly, I have a very hard time believing that content from one document can end up in the output file of another processing run. I know the whole FOP code base very well and can almost guarantee that such a thing cannot happen as there is no shared data concerning the actual text content between individual processing runs.\n\nIf you have about 15 incidents in 260'000 hits, I think it should be possible to do some load testing on your system to provoke the failure. I think tools like JMeter (for load testing) and PDFBox (for text extraction) should help you identify such problems and circle in on the cause. Good luck!\n\nIf anyone else his additional thoughts on this, please share them. I don't know how I could do anything about this particular problem if it's a FOP problem in the first place. I know a number of users who use FOP in a heavily multi-threaded way without any problems. John, I'm afraid you probably have to help yourself in this case (meaning: reproduce the problem as the first step to identifying the cause). Good luck!"}, {"count": 2, "tags": [], "text": "I kinda of assumed that there wouldn't be much help available.  But I wanted to at least put this out there in case anybody might have seen something similar in the past, or in case someone else runs across it in the future.\n\nWe have load tested this project many times, to no avail.  Additionally, we identified a few different areas where the data mixup could potentially occur, but those were easily tested under heavy load with no negative results.  It seems like there's some missing piece to the puzzle that we haven't been able to identify yet.  The thinking here is that it might have something to do with how FOP handles things when running on WebSphere on a bogged-down mainframe.  We have occasional CPU spikes, but the majority of these came when we had a configuration mixup that caused our CPU to run at 100% at peak times for a couple weeks.  Outside of that time frame, we've only had a handful of occurrences out of around 230,000 hits.  It's just too few to really get a handle on it.  Besides, our company's direction for PDF generation has shifted away from FOP.  I'm in the process of rewriting this last project now anyway.  I was mostly posting this issue in case others had been experiencing anything similar or if there was just something glaring that you could point out to me.\n\nThanks for your time.  I truly appreciate your reply.\n\nBest regards--\nJohn Lulich", "is_private": false, "id": 117249, "creator": "lulich.john@aoins.com", "time": "2008-06-02T07:57:09Z", "bug_id": 45104, "creation_time": "2008-06-02T07:57:09Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 45104, "attachment_id": null, "id": 118810, "time": "2008-07-18T05:39:07Z", "creator": "anoop.sehdev@landg.com", "creation_time": "2008-07-18T05:39:07Z", "is_private": false, "text": "Hi,\n\nWe are using FOP 0.20.5. We have recently started noticing that sometimes PDFs we generate are having problems with font embedding.\n\nSome times the CIDSystemInfo section gets written as follows:\n\n/CIDSystemInfo << /Registry (/CIDSystemInfo << /Registry (Adobe/CIDSystemInfo << /Registry (AdobeAdobe)/Ordering (UCS)/Ordering ()/Ordering (UCSUCS)/Supplement )/Supplement )/Supplement 000 >> >> >>\n\nwhere as it should be :\n\n/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0 >>\n\nIt clearly shows that there are threading issues. I am not sure if this issue also exists in latest version of FOP.\n\nRegards\nAnoop Sehdev\n\n(In reply to comment #2)\n> I kinda of assumed that there wouldn't be much help available.  But I wanted to\n> at least put this out there in case anybody might have seen something similar\n> in the past, or in case someone else runs across it in the future.\n> We have load tested this project many times, to no avail.  Additionally, we\n> identified a few different areas where the data mixup could potentially occur,\n> but those were easily tested under heavy load with no negative results.  It\n> seems like there's some missing piece to the puzzle that we haven't been able\n> to identify yet.  The thinking here is that it might have something to do with\n> how FOP handles things when running on WebSphere on a bogged-down mainframe. \n> We have occasional CPU spikes, but the majority of these came when we had a\n> configuration mixup that caused our CPU to run at 100% at peak times for a\n> couple weeks.  Outside of that time frame, we've only had a handful of\n> occurrences out of around 230,000 hits.  It's just too few to really get a\n> handle on it.  Besides, our company's direction for PDF generation has shifted\n> away from FOP.  I'm in the process of rewriting this last project now anyway. \n> I was mostly posting this issue in case others had been experiencing anything\n> similar or if there was just something glaring that you could point out to me.\n> Thanks for your time.  I truly appreciate your reply.\n> Best regards--\n> John Lulich\n\n"}, {"count": 4, "tags": [], "bug_id": 45104, "attachment_id": null, "is_private": false, "id": 118816, "time": "2008-07-18T06:28:59Z", "creator": "jeremias@apache.org", "creation_time": "2008-07-18T06:28:59Z", "text": "Thanks for reporting that, but the problem is limited to 0.20.5. The code indeed has multi-threading issues:\nhttps://svn.apache.org/viewvc/xmlgraphics/fop/branches/fop-0_20_2-maintain/src/org/apache/fop/pdf/PDFCIDSystemInfo.java?view=markup\n\nCurrent releases don't have that problem:\nhttps://svn.apache.org/viewvc/xmlgraphics/fop/trunk/src/java/org/apache/fop/pdf/PDFCIDSystemInfo.java?view=markup\n\n(In reply to comment #3)\n> Hi,\n> \n> We are using FOP 0.20.5. We have recently started noticing that sometimes PDFs\n> we generate are having problems with font embedding.\n> \n> Some times the CIDSystemInfo section gets written as follows:\n> \n> /CIDSystemInfo << /Registry (/CIDSystemInfo << /Registry (Adobe/CIDSystemInfo\n> << /Registry (AdobeAdobe)/Ordering (UCS)/Ordering ()/Ordering\n> (UCSUCS)/Supplement )/Supplement )/Supplement 000 >> >> >>\n> \n> where as it should be :\n> \n> /CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0 >>\n> \n> It clearly shows that there are threading issues. I am not sure if this issue\n> also exists in latest version of FOP.\n> \n> Regards\n> Anoop Sehdev\n"}, {"count": 5, "tags": [], "bug_id": 45104, "attachment_id": null, "is_private": false, "id": 157378, "time": "2012-04-07T01:42:07Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:42:07Z", "text": "resetting P2 open bugs to P3 pending further review"}]