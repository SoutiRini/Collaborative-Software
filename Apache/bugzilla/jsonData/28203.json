[{"count": 0, "text": "After I execute the following code on the attached Excel file, openning the \nexcel file is impossible : Excel 97 display an error message \"unable to read \nfile\". Excel file is just a new document including a forms component such as a \ntextbox.\n\nPOIFSFileSystem fs = new POIFSFileSystem(new FileInputStream(\"workbook.xls\"));\t\n\t\t\nHSSFWorkbook wb = new HSSFWorkbook(fs, true);\n\t\t\nHSSFSheet sheet = wb.getSheetAt(0);\nHSSFRow row = sheet.getRow(1);\nif (row == null)\n\trow = sheet.createRow(1);\nHSSFCell cell = row.getCell((short)1);\nif (cell == null)\n\tcell = row.createCell((short)1);\ncell.setCellType(HSSFCell.CELL_TYPE_STRING);\ncell.setCellValue(\"a test\");\t\t\t\n\nFileOutputStream fileOut = new FileOutputStream(\"workbook.xls\");\nwb.write(fileOut);\nfileOut.close();\n\n(I'm using POI 2.5 FINAL)", "bug_id": 28203, "attachment_id": null, "id": 55294, "time": "2004-04-05T11:57:33Z", "creator": "antoine.mottier@orange.fr", "creation_time": "2004-04-05T11:57:33Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 28203, "text": "Created attachment 11133\nExcel basic file with a textbox", "id": 55296, "time": "2004-04-05T12:02:00Z", "creator": "antoine.mottier@orange.fr", "creation_time": "2004-04-05T12:02:00Z", "is_private": false, "attachment_id": 11133}, {"count": 2, "tags": [], "bug_id": 28203, "text": "Use of 2.0-final version (see bug #27497) solve the problem", "id": 55698, "time": "2004-04-13T12:12:04Z", "creator": "antoine.mottier@orange.fr", "creation_time": "2004-04-13T12:12:04Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "zalewski@optonline.net", "is_private": false, "id": 59404, "creation_time": "2004-06-17T12:49:09Z", "time": "2004-06-17T12:49:09Z", "bug_id": 28203, "text": "I got this to work by making the following corrections to \nAbstractEscherHolderRecord.java (in package org.apache.poi.hssf.records). \nReplace the serialize() and getRecordSize() methods with the code below\n\n[CODE]\npublic int serialize(int offset, byte[] data)\n{\n  LittleEndian.putShort(data, 0 + offset, getSid());\n  LittleEndian.putShort(data, 2 + offset, (short)(getRecordSize() - 4));\n  if (escherRecords.size() == 0 && rawData != null)\n  {\n    System.arraycopy( rawData, 0, data, offset + 4, rawData.length);\n  }\n  else\n  {\n    int pos = offset + 4;\n    for ( Iterator iterator = escherRecords.iterator(); iterator.hasNext(); )\n    {\n      EscherRecord r = (EscherRecord) iterator.next();\n      pos += r.serialize(pos, data, new NullEscherSerializationListener() );\n    }\n  }\n  return getRecordSize();\n}\n\n/**\n * Size of record (including 4 byte header)\n */\npublic int getRecordSize()\n{\n  if (escherRecords.size() == 0 && rawData != null)\n  {\n    return rawData.length + 4;\n  }\n  else\n  {\n    int size = 4;\n    for ( Iterator iterator = escherRecords.iterator(); iterator.hasNext(); )\n    {\n      EscherRecord r = (EscherRecord) iterator.next();\n      size += r.getRecordSize();\n    }\n    return size;\n  }\n}\n[/CODE]\n\nThe problem is in serialization of the Escher records (MSODRAWING, \nMSODRAWINGGROUP, and MSODRAWINGSELECTION). Even though your spreadsheet \ncontains no images, forms controls are positioned on the page using the Escher \nlayer, so the new Escher code is involved.\n\nThe new Escher code will not parse an the Escher records until you actually \nmake a drawing. Until you use the ddf package, it just holds the data of each \nEscher record as raw bytes. But if you attempt to write these raw bytes back, \nthere is a logic problem where the MSODRAWINGGROUP (and other) record is not \nreconstructed correctly -- namely, the required four byte BIFF record header is \nomitted.\n", "attachment_id": null}, {"count": 4, "text": "Created attachment 11955\nCVS diff -u against HEAD", "bug_id": 28203, "is_private": false, "id": 59916, "time": "2004-06-26T02:33:32Z", "creator": "zalewski@optonline.net", "creation_time": "2004-06-26T02:33:32Z", "tags": [], "attachment_id": 11955}, {"count": 5, "tags": [], "bug_id": 28203, "text": "Resolved with many thanks to Michael.  ", "id": 59935, "time": "2004-06-27T11:22:34Z", "creator": "glens@apache.org", "creation_time": "2004-06-27T11:22:34Z", "is_private": false, "attachment_id": null}]