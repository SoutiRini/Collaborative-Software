[{"count": 0, "attachment_id": null, "creator": "markus.duft@ssi-schaefer.com", "text": "According to the documentation:\n\n\"The search/bind cache is used to cache all searches that resulted in successful binds. Negative results (i.e., unsuccessful searches, or searches that did not result in a successful bind) are not cached. The rationale behind this decision is that connections with invalid credentials are only a tiny percentage of the total number of connections, so by not caching invalid credentials, the size of the cache is reduced.\"\n\nThis is extremely bad for our use case. We configure multiple providers using AuthnProviderAlias for different LDAP servers. Now assume we have providers 'a', 'b', and 'c' in order. A user which is valid for provider 'c' authenticates. For every subsequent request, servers 'a' and 'b' are queried over and over again for the same user (which does not exist), and only the cache for the URL configured in provider 'c' will hit successfully.\n\nIn our scenario this causes severe performance issues. It would be great to have an option to switch on caching for negative hits - even at the cost of being much more memory intensive.", "id": 202783, "time": "2017-12-14T12:17:32Z", "bug_id": 61904, "creation_time": "2017-12-14T12:17:32Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": 35618, "creator": "markus.duft@ssi-schaefer.com", "is_private": false, "id": 202829, "time": "2017-12-18T15:17:58Z", "bug_id": 61904, "creation_time": "2017-12-18T15:17:58Z", "tags": [], "text": "Created attachment 35618\nProposed patch\n\nI've created a small patch for myself, which might be a good starting point for others :)"}, {"count": 2, "attachment_id": 35624, "creator": "markus.duft@ssi-schaefer.com", "is_private": false, "id": 202867, "time": "2017-12-20T14:34:15Z", "bug_id": 61904, "creation_time": "2017-12-20T14:34:15Z", "tags": [], "text": "Created attachment 35624\nUpdated proposed patch\n\nUpdated the patch as it was causing segmentation faults in some scenarios..."}]