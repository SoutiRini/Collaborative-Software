[{"count": 0, "tags": [], "bug_id": 53274, "attachment_id": null, "text": "ctColor.getRgb() returns the white instead of black and the black instead of white. In getRgb() this issue is fixed.\n\nPatch:\n\npublic byte[] getRgbWithTint() {\n        byte[] rgb = getRgb();\n        double tint = ctColor.getTint();\n        if (rgb != null && tint != 0) {\n            for (int i = 0; i < rgb.length; i++){\n                rgb[i] = applyTint(rgb[i] & 0xFF, tint);\n            }\n        }\n        return rgb;\n    }", "id": 159224, "time": "2012-05-22T16:38:18Z", "creator": "andrei.astrouski@gmail.com", "creation_time": "2012-05-22T16:38:18Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 53274, "text": "I added quite a lot of colour related unit testing as part of the Conditional Formatting work. It's mostly in org.apache.poi.xssf.model.TestThemesTable. That didn't show any issues with theme or non-theme xssf colours and white/black swapping\n\nCould someone perhaps review that, along with re-trying this bug on 3.13 beta 2 / snapshot, and report what you need to do to reproduce this issue on trunk (assuming it isn't already fixed?)", "id": 184762, "time": "2015-08-26T11:40:28Z", "creator": "apache@gagravarr.org", "creation_time": "2015-08-26T11:40:28Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 53274, "attachment_id": null, "text": "This looks like it was fixed in r1126696 based on the commit message\n> make the xssf colour black/white 3 rgb fix apply for set as well as get\nand the changes\n>    public void setRgb(byte[] rgb) {\n> -    ctColor.setRgb(rgb);\n> +    // Correct it and save\n> +    ctColor.setRgb(correctRGB(rgb));\n>    }\n\n*** This bug has been marked as a duplicate of bug 51236 ***", "id": 191732, "time": "2016-06-17T08:06:20Z", "creator": "onealj@apache.org", "creation_time": "2016-06-17T08:06:20Z", "is_private": false}]