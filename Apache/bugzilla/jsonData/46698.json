[{"count": 0, "tags": [], "bug_id": 46698, "is_private": false, "id": 124784, "attachment_id": null, "creator": "matt.richard@fandm.edu", "creation_time": "2009-02-11T13:08:02Z", "time": "2009-02-11T13:08:02Z", "text": "mod_auth_ldap on OpenVMS won't authenticate users against a modern OpenLDAP installation.\n\nI am using the Apple Open Directory implementation of OpenLDAP from Mac OSX Server 10.5.6\n\nThe function for LDAP authentication is uldap_cache_getuserdn which in turn uses the function ldap_search_ext_s to do the uid search portion.\n\nIn modules/ldap/util_ldap.c, ldap_search_ext_s is called as follows: (revision 737582 from 2.3-HEAD)\n\n    result = ldap_search_ext_s(ldc->ldap, (char *)reqdn, LDAP_SCOPE_BASE,\n                               \"(objectclass=*)\", NULL, 1,\n                               NULL, NULL, NULL, APR_LDAP_SIZELIMIT, &res);\n                               \nand from the top of util_ldap.c:\n\n\t#ifndef APR_LDAP_SIZELIMIT\n\t#define APR_LDAP_SIZELIMIT -1\n\t#endif\n\nOlder revisions (httpd 2.2.5 and before) use a static -1 in place of APR_LDAP_SIZELIMIT.\n                               \nFrom ldap.h (OpenLDAP), here is the parameters for ldap_search_ext_s:\n\n    ldap_search_ext_s LDAP_P((\n            LDAP                    *ld,\n            LDAP_CONST char *base,\n            int                             scope,\n            LDAP_CONST char *filter,\n            char                    **attrs,\n            int                             attrsonly,\n            LDAPControl             **serverctrls,\n            LDAPControl             **clientctrls,\n            struct timeval  *timeout,\n            int                             sizelimit,\n            LDAPMessage             **res ));\n\n\nSo the value '-1' is passsed as the sizeLimit parameter from the client (mod_auth_ldap) to the server (OpenLDAP).\n\nThis seems to work for a lot of client / server combinations, however it is not working here.\n\nAccording to RFC 4511 (section 4.5.1 ),  sizelimit is an unsigned integer between 0 and maxInt.  A value of zero indicates no size limit.\n\nWould it make sense to change the default APR_LDAP_SIZELIMIT to 0?  I welcome any other feedback...\n\nThanks,\n\nMatt"}, {"count": 1, "tags": [], "text": "I have also tested Apache's mod_auth_ldap against slapd from openldap.org's OpenLDAP releases, including 2.1.30, 2.2.19, 2.2.30, 2.3.43, and 2.4.15, all without success.\n\n-Matt", "is_private": false, "id": 125386, "creator": "matt.richard@fandm.edu", "time": "2009-03-06T06:30:24Z", "bug_id": 46698, "creation_time": "2009-03-06T06:30:24Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "#if APR_HAS_ZOS_LDAPSDK || APR_HAS_MICROSOFT_LDAPSDK\n#define APR_LDAP_SIZELIMIT LDAP_NO_LIMIT\n#else\n#ifdef LDAP_DEFAULT_LIMIT\n#define APR_LDAP_SIZELIMIT LDAP_DEFAULT_LIMIT\n#else\n#define APR_LDAP_SIZELIMIT -1 /* equivalent to LDAP_DEFAULT_LIMIT */\n#endif\n#endif\n\n\nWhy isn't the first macro just #ifdef LDAP_NO_LIMIT?\n\nOn my recent linux system, ldap.h has LDAP_NO_LIMIT defined as 0.", "is_private": false, "id": 125387, "creator": "covener@gmail.com", "time": "2009-03-06T06:44:05Z", "bug_id": 46698, "creation_time": "2009-03-06T06:44:05Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "covener@gmail.com", "is_private": false, "text": "Created attachment 23348\nPrefer LDAP_DEFAULT_LIMIT over LDAP_NO_LIMIT when available, fallback to 0 if neither is defined.\n\nI reviewed the thread between bnicholes, Jeff, and David Jones.\n\nI think this was the intent:\n\n/*\n * For ldap function calls that input a size limit on the number of returned elements\n * Some SDKs do not have the define for LDAP_DEFAULT_LIMIT (-1) or LDAP_NO_LIMIT (0)\n * LDAP_DEFAULT_LIMIT is preferred as it allows inheritance from whatever the SDK\n * or process is configured for.\n */\n#ifdef LDAP_DEFAULT_LIMIT\n#define APR_LDAP_SIZELIMIT LDAP_DEFAULT_LIMIT\n#else\n#ifdef LDAP_NO_LIMIT\n#define APR_LDAP_SIZELIMIT LDAP_NO_LIMIT\n#endif\n\n#ifndef APR_LDAP_SIZELIMIT\n#define APR_LDAP_SIZELIMIT 0 /* equivalent to LDAP_NO_LIMIT */\n#endif", "id": 125395, "time": "2009-03-06T07:24:16Z", "bug_id": 46698, "creation_time": "2009-03-06T07:24:16Z", "attachment_id": 23348}, {"count": 4, "text": "\n> #ifdef LDAP_DEFAULT_LIMIT\n> #define APR_LDAP_SIZELIMIT LDAP_DEFAULT_LIMIT\n> #else\n> #ifdef LDAP_NO_LIMIT\n> #define APR_LDAP_SIZELIMIT LDAP_NO_LIMIT\n> #endif\n\nmissed an #endif there.", "creator": "covener@gmail.com", "attachment_id": null, "id": 125420, "time": "2009-03-08T08:42:50Z", "bug_id": 46698, "creation_time": "2009-03-08T08:42:50Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 46698, "attachment_id": 23356, "is_private": false, "id": 125421, "time": "2009-03-08T08:54:21Z", "creator": "covener@gmail.com", "creation_time": "2009-03-08T08:54:21Z", "text": "Created attachment 23356\ndefault_limit, no_limit, or 0"}, {"count": 6, "tags": [], "text": "This should be fixed in the next release of httpd (after 2.2.11) that bundles  an apr-util after 1.2.12.\n\nhttp://svn.apache.org/viewvc?rev=751456&view=rev", "is_private": false, "id": 125424, "creator": "covener@gmail.com", "time": "2009-03-08T16:46:58Z", "bug_id": 46698, "creation_time": "2009-03-08T16:46:58Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 46698, "attachment_id": null, "id": 125435, "time": "2009-03-09T07:45:51Z", "creator": "matt.richard@fandm.edu", "creation_time": "2009-03-09T07:45:51Z", "is_private": false, "text": "Eric, Thank you very much for your attention to this issue.  Once the patch hits a release I'll push the vendor to embrace it as a supported package.\n\nBest,\nMatt"}]