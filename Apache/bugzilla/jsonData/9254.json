[{"count": 0, "tags": [], "bug_id": 9254, "text": "The authenticate method in the JDBCRealm does not close the statements when it \ncloses the result sets. This cause certain drivers to misbehave and throw an \nexception making the JDBCRealm unusable. please fix in 4.0.4! \n\nIt would be proper to do the following: (look for '----->>' in two locations)\n\n    public synchronized Principal authenticate(Connection dbConnection, String \nusername, String credentials)\n        throws SQLException\n    {\n        String dbCredentials = null;\n        PreparedStatement stmt = credentials(dbConnection, username);\n        ResultSet rs;\n        \n        for(rs = stmt.executeQuery(); rs.next();)\n            dbCredentials = rs.getString(1).trim();\n\n        rs.close();\n----->> stmt.close();\n        \n        if(dbCredentials == null)\n            return null;\n        \n        boolean validated = false;\n        if(hasMessageDigest())\n            validated = digest(credentials).equalsIgnoreCase(dbCredentials);\n        else\n            validated = digest(credentials).equals(dbCredentials);\n        \n        if(validated)\n        {\n            if(super.debug >= 2)\n                log(sm.getString(\"jdbcRealm.authenticateSuccess\", username));\n        }\n        else\n        {\n            if(super.debug >= 2)\n                log(sm.getString(\"jdbcRealm.authenticateFailure\", username));\n            return null;\n        }\n\n        ArrayList list = new ArrayList();\n        stmt = roles(dbConnection, username);\n        \n        for(rs = stmt.executeQuery(); rs.next(); list.add(rs.getString(1).trim\n()));\n        \n        rs.close();\n----->> stmt.close();\n        \n        dbConnection.commit();\n        \n        return new GenericPrincipal(this, username, credentials, list);\n    }", "id": 16430, "time": "2002-05-20T18:50:29Z", "creator": "ahakmeh@hotmail.com", "creation_time": "2002-05-20T18:50:29Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "bob@jadn.com", "text": "Tomcat cache's prepared statments.  It seems like closing a cached\nPreparedStatement would be a bad idea.   What JDBC driver are you using?\n", "id": 17085, "time": "2002-06-03T16:08:40Z", "bug_id": 9254, "creation_time": "2002-06-03T16:08:40Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "creator": "ahakmeh@hotmail.com", "is_private": false, "id": 17127, "time": "2002-06-03T23:33:06Z", "bug_id": 9254, "creation_time": "2002-06-03T23:33:06Z", "tags": [], "text": "Hummm interesting, I'll take a look at how tomcat does that caching... \nmeanwhile both methods (credentials and roles) create new prepared statements \neverytime!!\n\nThe driver was the TDS driver for SQL server."}, {"count": 3, "tags": [], "bug_id": 9254, "is_private": false, "text": "It should not be creating new prepared statements everytime.\nJDBCRealm constructs two preparedStatements, and holds on to them forever.\n\npreparedCredentials for authenticating users\npreparedRoles for finding what roles a user has.\n", "id": 17213, "time": "2002-06-05T19:09:06Z", "creator": "bob@jadn.com", "creation_time": "2002-06-05T19:09:06Z", "attachment_id": null}]