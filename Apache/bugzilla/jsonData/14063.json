[{"count": 0, "tags": [], "creator": "Bill@Explosivo.com", "attachment_id": null, "id": 25341, "time": "2002-10-29T19:44:10Z", "bug_id": 14063, "creation_time": "2002-10-29T19:44:10Z", "is_private": false, "text": "I can get ANT to download a file from an FTP server.  I can get it to download a\nfile if it is a hard link to a file.  If it is a symlink it will not download\nthe file.  It does not generate an error, it simply does not see it as a file.\n\n<target name=\"explosivo-log\">\n\n  <ftp action=\"get\"\n       server=\"explosivo.com\"\n       userid=\"xxxx\"\n       password=\"xxxx\"\n       binary=\"no\"\n       verbose=\"yes\"\n       remotedir=\"/home/explosivo\">\n    <fileset dir=\"/www/logs\" followsymlinks=\"yes\" defaultexcludes=\"no\">\n      <include name=\"explosivo-access-log\"/>\n    </fileset>\n  </ftp>\n</target>\n\nI have tried many permutations of followsymlinks and it still never seems to see\nthe files I want..."}, {"count": 1, "tags": [], "bug_id": 14063, "attachment_id": null, "text": "This is because you are not looking at a unix filesystem when you use FTP task.\nEffectively you are looking at an FTP filesystem. In order to make FTP task work\nover FTP and look like it is a regular filesystem, a custom inner class called\nFTPDirectoryScanner is implemented, extending DirectoryScanner. \n\nSince the basis of symlink detection, is the result of a comparision between\ncarefully constructed File objects containing absolute paths vs. the results of \nfile.getCannonicalPath() it may not be possible to propogate this feature into\nFTP task. It might be good to add a check to throw a build exception if follow\nsymlinks gets set to true in FTP task though. (and a note about it in the docs\nof course. I think I will try to come up with a patch for that tonight.\n\n", "id": 25342, "time": "2002-10-29T20:40:57Z", "creator": "gus.heck@olin.edu", "creation_time": "2002-10-29T20:40:57Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "gus.heck@olin.edu", "text": "ok I just remembered that true is the default for followsymlinks... so nothing\nneeds to be done except perhaps mention this explicitly in the docs.\n\nMeanwhile I notice that several other classes are likely to be effected by this:\n\n[gus@draco ant]$ grep -r \"extends DirectoryScanner\" *\ntaskdefs/optional/ide/VAJWorkspaceScanner.java:class VAJWorkspaceScanner extends\nDirectoryScanner {\ntaskdefs/optional/net/FTP.java:    protected class FTPDirectoryScanner extends\nDirectoryScanner {\ntypes/optional/depend/DependScanner.java:public class DependScanner extends\nDirectoryScanner {\ntypes/ZipScanner.java:public class ZipScanner extends DirectoryScanner {\n", "count": 2, "id": 25343, "time": "2002-10-29T20:49:40Z", "bug_id": 14063, "creation_time": "2002-10-29T20:49:40Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 14063, "is_private": false, "text": "Well let me rephrase that... Nothing need to be done unless we feel it is\nimportant that we do follow symlinks on FTP... Clearly Bill wants it, but this\nmay be an issue of the default behavior of ftp vs the default behavior of the\nunix filesystem. I suppose if ftp get works on symlinks from the ftp command\nline it should work here too, but I can't remember if that works or not. ", "id": 25345, "time": "2002-10-29T21:11:57Z", "creator": "gus.heck@olin.edu", "creation_time": "2002-10-29T21:11:57Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "This does not mirror the functionality of command line FTP utilities which will \ndownload a symlink to a file.\n\nI finally had a chance to peek into the source code and found where the problem \nis...  In org.apache.tools.ant.taskdefs.optional.net.FTP.java (Thanks for the \ntip Gus)\n\nFor a symlink the FTPFile will return false for both isFile and isDirectory...  \nThese are the only flags that get checked, so anything that comes back as a \nsymlink (isSymbolicLink = true) is not counted or looked at.\n\nIts easy enough to add in the code to include the symlink\n\nJust change:\n\nif (file.isFile()) {\n     String name = vpath + file.getName();\n\nto\n\nif (file.isFile() || file.isSymbolicLink()) {\n     String name = vpath + file.getName();\n\nNow this brings out another problem...  Symlinks to a directory.  These do not \nregister as directories.  You can get the linked to name by FTPFile.getLink() \nbut this is string for the filename, not another FTPFile object.\n\nI am still working on it, and most likely will need to get a file object for \nthe target to see if its a directory... If so, it may need to be followed \ndepending on how the decend into directories is done...\n\nAny thoughts would be appreciated\n\nI would guess that pattern matching should only happen against the link name, \nnot the target...\n\n\n\n", "is_private": false, "bug_id": 14063, "id": 25975, "time": "2002-11-08T20:06:46Z", "creator": "Bill@Explosivo.com", "creation_time": "2002-11-08T20:06:46Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "antoine@apache.org", "is_private": false, "count": 5, "id": 42212, "time": "2003-08-05T21:38:26Z", "bug_id": 14063, "creation_time": "2003-08-05T21:38:26Z", "text": "I am working on the ftp task right now, and I am interested in solving this bug \ntoo if I can."}, {"count": 6, "tags": [], "bug_id": 14063, "is_private": false, "text": "This problem should be fixed in CVS now.\nIt will be in the nightly build 2003-08-06 and later.\nI need to add a testcase to check that the fix works.\n", "id": 42217, "time": "2003-08-05T22:29:58Z", "creator": "antoine@apache.org", "creation_time": "2003-08-05T22:29:58Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "I have added a testcase showing resolution of this bug, I am now closing the \nreport. Cheers.", "is_private": false, "bug_id": 14063, "id": 42218, "time": "2003-08-05T23:22:34Z", "creator": "antoine@apache.org", "creation_time": "2003-08-05T23:22:34Z", "attachment_id": null}]