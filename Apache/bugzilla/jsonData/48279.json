[{"count": 0, "attachment_id": null, "bug_id": 48279, "text": "The following code throws a \"ClassFormatException: Invalid method signature: TT;\" when executed:\n===========================================================\n\nimport org.apache.bcel.Repository;\nimport org.apache.bcel.classfile.JavaClass;\nimport org.apache.bcel.classfile.Method;\nimport org.apache.bcel.generic.ConstantPoolGen;\nimport org.apache.bcel.generic.MethodGen;\n\nclass MyClassLoader extends ClassLoader {\n\t@Override\n\tpublic Class<?> loadClass(String name) throws ClassNotFoundException {\n\t\tif (name.startsWith(\"java.lang\"))\n\t\t\treturn super.loadClass(name);\n\n\t\tJavaClass jcl;\n\t\tjcl = Repository.lookupClass(name);\n\t\tscanMethods(jcl);\n\t\tbyte[] data = jcl.getBytes();\n\t\treturn defineClass(name, data, 0, data.length);\n\t}\n\n\tprivate void scanMethods(JavaClass jcl) {\n\t\tConstantPoolGen cpg = new ConstantPoolGen(jcl.getConstantPool());\n\t\tMethod[] methods = jcl.getMethods();\n\t\tfor (int i = 0; i < methods.length; i++) {\n\t\t\tMethodGen mg = new MethodGen(methods[i], jcl.getClassName(), cpg);\n\t\t}\n\t}\n}\n\nclass Foo<T> {\n\tpublic void bar(T x) {\n\t}\n}\n\npublic class MethSignTest {\n\tpublic MethSignTest() {\n\t\tFoo<Integer> foo = new Foo<Integer>();\n\t}\n\n\t@SuppressWarnings(\"unchecked\")\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tMyClassLoader mcl = new MyClassLoader();\n\t\t\tClass<MethSignTest> c = (Class<MethSignTest>) mcl\n\t\t\t\t\t.loadClass(MethSignTest.class.getName());\n\t\t\tc.newInstance();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}\n}\n===========================================================\n\nHere's the full stack trace:\n\norg.apache.bcel.classfile.ClassFormatException: Invalid method signature: TT;\n\tat org.apache.bcel.classfile.Utility.typeOfSignature(Utility.java:986)\n\tat org.apache.bcel.generic.Type.getType(Type.java:169)\n\tat org.apache.bcel.generic.MethodGen.<init>(MethodGen.java:255)\n\tat methodsignature.MyClassLoader.scanMethods(MethSignTest.java:26)\n\tat methodsignature.MyClassLoader.loadClass(MethSignTest.java:17)\n\tat java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319)\n\tat methodsignature.MethSignTest.<init>(MethSignTest.java:38)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:501)\n\tat java.lang.Class.newInstance0(Class.java:350)\n\tat java.lang.Class.newInstance(Class.java:303)\n\tat methodsignature.MethSignTest.main(MethSignTest.java:47)\n\nThis misbehaviour occurs at least since revision 617860.", "id": 132299, "time": "2009-11-25T00:16:15Z", "creator": "enrico.gueli@polito.it", "creation_time": "2009-11-25T00:16:15Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "enrico.gueli@polito.it", "attachment_id": 24610, "text": "Created attachment 24610\na patch for this bug\n\nIt looks like this is due to an unsupported (and undocumented in the JLS) \"T\" signature character, representing a generic type. The problem disappears with the attached patch.", "id": 132306, "time": "2009-11-25T04:51:58Z", "bug_id": 48279, "creation_time": "2009-11-25T04:51:58Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 48279, "attachment_id": null, "id": 133486, "time": "2010-01-10T12:21:59Z", "creator": "tcurdt@apache.org", "creation_time": "2010-01-10T12:21:59Z", "is_private": false, "text": "Thx! Applied."}]