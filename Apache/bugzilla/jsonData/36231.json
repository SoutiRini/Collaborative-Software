[{"count": 0, "tags": [], "bug_id": 36231, "attachment_id": null, "text": "It seems that ServletException was written before getCause() was added to\nThrowable (jdk 1.4), and thus has its own getRootCause().  So generic error\nhandling is unnecessarily harder, stack traces incomplete, etc. when a\nServletException is thrown; e.g. in the ApplicationFilterChain code.\n\nI think ServletException should be changed, but the behavior could be changed\neven if thats not possible.  For example, when throwing a ServletException with\na root cause exception, also call the initCause() method.  It returns a\nreference to itself, so you could even do throw (ServletException)new\nServletException(msg, e).initCause(e); (or something similar if that doesn't\ncompile).", "id": 78594, "time": "2005-08-17T18:47:10Z", "creator": "jleech@virtela.net", "creation_time": "2005-08-17T18:47:10Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 36231, "attachment_id": null, "text": "ServletException is defined by the servlet spec and therefore cannot be changed\nby the Tomcat team.", "id": 78596, "time": "2005-08-17T19:26:42Z", "creator": "markt@apache.org", "creation_time": "2005-08-17T19:26:42Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 36231, "text": "Firstly, ServletException could be fixed without a change to its interface, and\nit would not violate the Servlet spec.  I don't know if the Tomcat team can do\nthat or not, sounds like maybe not.\nTomcat can and should be fixed independent of ServletException being fixed, and\nI stated my opinion of how in the bug description.", "id": 78597, "time": "2005-08-17T19:33:28Z", "creator": "jleech@virtela.net", "creation_time": "2005-08-17T19:33:28Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 36231, "attachment_id": null, "text": "Only the spec team can change the interface or implementation of any\njavax.servlet.* classes.", "id": 78600, "time": "2005-08-17T20:09:53Z", "creator": "markt@apache.org", "creation_time": "2005-08-17T20:09:53Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 36231, "attachment_id": null, "text": "Servlet v2.4 section SRV.1.2 ends with:\n\nJ2SE 1.3 is the minimum version of the underlying Java platform with which\nservlet containers must be built.\n\nThis minimum prevents using initCause(), which is not available in J2SE 1.3.  \nThis will be fixable in Servlet v2.5.  Since Tomcat uses the JSR sponsored \nreference implementation, which I think has to stick with the mimimum, I'm \nmarking this bug INVALID.", "id": 78601, "time": "2005-08-17T20:22:24Z", "creator": "Larry.Isaacs@sas.com", "creation_time": "2005-08-17T20:22:24Z", "is_private": false}, {"count": 5, "attachment_id": null, "creator": "jleech@virtela.net", "text": "From the 5.5.9 release notes:\nTomcat 5.5 is designed to run on J2SE 5.0 and later, and requires\nconfiguration to run on J2SE 1.4.  Make sure to read the \"RUNNING.txt\" \nfile in this directory if you are using J2SE 1.4.\n\nI take that to mean Tomcat won't run under java 1.3.  I strongly doubt it is\ncompiled with jdk1.3 either.\n\nJust to be clear, because I think the point is being missed, the fix I proposed\nis for Tomcat to invoke initCause(), until ServletException itself is fixed.  I\nwon't reopen the bug again, but in my opinion it is not invalid and should be fixed.", "id": 78603, "time": "2005-08-17T20:58:22Z", "bug_id": 36231, "creation_time": "2005-08-17T20:58:22Z", "tags": [], "is_private": false}, {"count": 6, "attachment_id": null, "creator": "Larry.Isaacs@sas.com", "text": "Tomcat 5.5.9 requires 1.4 or later, but the servlet-api.jar it uses is expected \nto be able to run with 1.3, per the spec.  Thus, isn't not feasible to fix \nservlet-api.jar itself.  Tomcat could call initCause() as you suggest, but if \nsomeone wrote a webapp that depended on getCause() not returning null, the \nwebapp would likely not be portable.  This is a case where \"unnecessarily \nharder\" is preferred to help ensure the portability of webapps.\n\nSince I would guess that you likely don't care about portability, you could \ncustomize your Tomcat to fix this.  Simpler may be just to write a utility \nclass with a static method that accepts a ServletException and returns the \ncause from getRootCause() or getCause(), which ever is not null.\n\nUpdating the component, since this is where the primary issue lies.", "id": 78605, "time": "2005-08-17T21:30:39Z", "bug_id": 36231, "creation_time": "2005-08-17T21:30:39Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "text": "*** Bug 36252 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 78646, "creator": "william.barker@wilshire.com", "time": "2005-08-18T19:12:13Z", "bug_id": 36231, "creation_time": "2005-08-18T19:12:13Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 36231, "attachment_id": null, "text": "Guys, you don't need initCause() to fix this problem, nor do you need to change\nthe interface or specification. All you need to do is implement a method\n\npublic Throwable getCause()\n{\n  return getRootCause();\n}\n\nthere you go. This code will run on J2EE 1.3 just fine and this is something\nthat the Tomcat team can do independantly of the specification. I also don't\nunderstand what \"portability\" has anything to do with this (maybe you meant\nbackwards compatibility?). The way I see it, if someone is coding a webapp on\npre-1.3, he can't possibly invoke getCause() because it does not exist. If he\ncodes his webapp post-1.3, he expects getCause()'s contract to be met and we are\nin fact trying to fix ServletException so it meets its contract. There is no\nloss of \"portability\" or backwards compatibility here. Can I reopen this issue?", "id": 78650, "time": "2005-08-18T19:29:15Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2005-08-18T19:29:15Z", "is_private": false}, {"count": 9, "attachment_id": null, "creator": "remm@apache.org", "text": "(In reply to comment #8)\n> in fact trying to fix ServletException so it meets its contract. There is no\n> loss of \"portability\" or backwards compatibility here. Can I reopen this issue?\n\nNo.\n", "id": 78652, "time": "2005-08-18T19:36:42Z", "bug_id": 36231, "creation_time": "2005-08-18T19:36:42Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "bug_id": 36231, "attachment_id": null, "id": 78653, "time": "2005-08-18T19:42:54Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2005-08-18T19:42:54Z", "is_private": false, "text": "Remy, what is your reasoning for not applying this patch?"}, {"count": 11, "tags": [], "bug_id": 36231, "attachment_id": null, "text": "I understand the portability issue to be as follows:\n- This bug is fixed in Tomcat\n- I write code that depends on the fix\n- I port my app to another servlet container where the bug is not fixed\n- My app is slightly broken\n\nYou could make this argument for any bug that exists in more than one servlet\ncontainer.\n\nMore people have encountered this bug and wasted time tracking it down than will\never have the hypothetical portability issue.", "id": 78655, "time": "2005-08-18T20:41:57Z", "creator": "jleech@virtela.net", "creation_time": "2005-08-18T20:41:57Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 36231, "attachment_id": null, "text": "Right! I totally agree. Besides which, I have already reported this issue to Sun\nso they will be fixing it (eventually). I don't see any benefit in making\neveryone wait a couple of years for this...", "id": 78656, "time": "2005-08-18T20:46:53Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2005-08-18T20:46:53Z", "is_private": false}, {"count": 13, "tags": [], "text": "This is not a bug - there is no violation of the Servlet spec here. It is an\nenhancement request.\n\nTo reiterate a point the seems to have been missed, only the servlet spec team\ncan change the interface or implementation of ServletException.\n\nWe could, as suggested, change the Tomcat code to call initCause(). There are 72\nor so calls that would need to be added. However, this would break application\nportability.\n\nThe whole point of having a specification is portability. If we break it for\nthis, why not for something else? If we do it for this, why shouldn't another\nvendor do it for something else. Such a change would be the beginning of a very\nnasty slippery slope.", "attachment_id": null, "id": 78658, "creator": "markt@apache.org", "time": "2005-08-18T21:11:41Z", "bug_id": 36231, "creation_time": "2005-08-18T21:11:41Z", "is_private": false}, {"count": 14, "attachment_id": null, "creator": "cowwoc@bbs.darktech.org", "text": "Just for the record, I *did* file an enhancement request (see #36252) and it was\nclosed as a duplicate of this issue... So I guess there is nothing for us to do\nbut sit on our hands for the next couple of years...", "id": 78659, "time": "2005-08-18T21:16:29Z", "bug_id": 36231, "creation_time": "2005-08-18T21:16:29Z", "tags": [], "is_private": false}, {"count": 15, "attachment_id": null, "creator": "jleech@virtela.net", "text": "Joshua Bloch recommended making the same change to ServletException as Gili just\ndid, back in 2000, in anticipation of j2se1.4.\nToo bad it was ignored, probably because Joshua Bloch doesn't know anything\nabout Java.\n\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4395719\n\nFixing this bug will not violate the spec.  Calling getCause() is undefined\nbehavior.  It would be more useful if it did the right thing instead of the\nwrong thing.  \n\nFurthermore, just because it doesn't violate the servlet spec doesn't mean its\nnot a bug.  That is a ridiculous position to take.  According to the java spec,\nif I am using 1.4 or later, getCause() does the following: - Returns the cause\nof this throwable or null if the cause is nonexistent or unknown. -  \nBy returning null, ServletException is implying that the cause is nonexistent or\nunknown, which is not true.  ServletException doesn't adhere to the java spec,\nand that is definitely a bug.\n\nHere is another snippet from the javadoc for Throwable.getCause():\n- While it is typically unnecessary to override this method, a subclass can\noverride it to return a cause set by some other means. This is appropriate for a\n\"legacy chained throwable\" that predates the addition of chained exceptions to\nThrowable. -\n\n\n", "id": 78662, "time": "2005-08-18T21:45:17Z", "bug_id": 36231, "creation_time": "2005-08-18T21:45:17Z", "tags": [], "is_private": false}, {"count": 16, "attachment_id": null, "creator": "jdb@getsu.com", "text": "I agree, Tomcat's ServletException has a bug on JDK 1.4 and above, and adding\ngetCause() would fix it without breaking any specification, portability, or\nbackward compatibility.\n\nThe suggested work-around to call both getRootCause() and getCause() and use\nwhichever is not null will not work for printStackTrace(), which is often used\nfor not only printing the cause chain but also for capturing it, e.g., in a\nStringPrintWriter.", "id": 85836, "time": "2006-02-16T04:12:33Z", "bug_id": 36231, "creation_time": "2006-02-16T04:12:33Z", "tags": [], "is_private": false}, {"count": 17, "tags": [], "text": "I take it back.  That fix would break backwards compatibility by causing an\ninfinite loop in anything that extends ServletException and overrides\ngetRootCause() to return getCause().\n\nIt's unfortunate that this wasn't fixed in the servlet spec for JDK 1.4, because\nnow there may be work-arounds that any fix would break.", "attachment_id": null, "bug_id": 36231, "id": 88580, "time": "2006-04-27T20:37:30Z", "creator": "jdb@getsu.com", "creation_time": "2006-04-27T20:37:30Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 36231, "attachment_id": null, "id": 88581, "time": "2006-04-27T21:03:56Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2006-04-27T21:03:56Z", "is_private": false, "text": "David,\n\nThere is a perfectly valid workaround for this problem (that is both backwards\nand forwards-compatible) at:\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4395719\n\nIf you agree with this workaround, I'd like to reopen this issue."}, {"count": 19, "tags": [], "bug_id": 36231, "text": "(In reply to comment #17)\n> I take it back.  That fix would break backwards compatibility by causing an\n> infinite loop in anything that extends ServletException and overrides\n> getRootCause() to return getCause().\n> \n\nYou mean an infinite loop like in this bug?:\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=39088\n\nTomcat seems to be full of poor exception handling code, most of it centered\naround the exception chaining issue.  If the developers would admit there are\nproblems, fix them, and move on, Tomcat's quality would benefit, the developers\nwho use it would benefit, and the world would be a better place.\n\n<rant>\nInstead we are stuck with this \n-\"Works as designed\"\n-\"That may be a problem but only affects a small number of use cases\"\n_bullshit_ mentality from the powers that be, and i have encountered it on every\nsingle bug I've submitted or encountered and commented on.  \nFurthermore I am ready and willing to submit patches, and have done so, but they\njust go to the bit bucket in the sky, with no comments, criticism.  Just\ncrickets chirping.\n@see http://issues.apache.org/bugzilla/show_bug.cgi?id=39088\n@see http://issues.apache.org/bugzilla/show_bug.cgi?id=33453\n</rant>\n", "id": 88584, "time": "2006-04-27T21:25:18Z", "creator": "jleech@virtela.net", "creation_time": "2006-04-27T21:25:18Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "text": "Gili, that looks like a better solution, but maybe it should wait for a spec\nupdate because it would break existing code that calls initCause()?  I've voted\nfor that Sun bug.  But, I'm not a Tomcat committer.\n\nJonathan, that's a good example of the repercussions of this exception chaining\ndiscrepancy.  The infinite loop I mentioned is a little different from the one\nyou posted, because it's actually recursive, so harder to detect in a workaround.", "attachment_id": null, "bug_id": 36231, "id": 88588, "time": "2006-04-27T22:09:22Z", "creator": "jdb@getsu.com", "creation_time": "2006-04-27T22:09:22Z", "is_private": false}, {"count": 21, "tags": [], "text": "David, we've been waiting for a specification update for years now. Notice the\nBugParade issue was filed in 2000 (!!). I don't understand what you meant in\nyour last post, about the latest patch breaking applications that invoke\ninitCause(). Our constructor would invoke initCause(), then user code can do\nwhat it wants with the resulting exception. If they choose to invoke initCause()\non it, it'll simply override the exception we set. I'm sorry but I don't\nunderstand what problems could occur...?\n\nAlso, I wanted to say I totally agree with Jonathan. More often than not, the\nTomcat developers I've dealt gave (totally invalid) excuses for why they cannot\nbe bothered to fix bugs. Maybe that's why Glassfish came along. Anyway, I look\nforward to some point in the future when this situation changes for the better.", "attachment_id": null, "id": 88589, "creator": "cowwoc@bbs.darktech.org", "time": "2006-04-27T22:26:37Z", "bug_id": 36231, "creation_time": "2006-04-27T22:26:37Z", "is_private": false}, {"count": 22, "attachment_id": null, "creator": "remm@apache.org", "text": "(In reply to comment #21)\n> Also, I wanted to say I totally agree with Jonathan. More often than not, the\n> Tomcat developers I've dealt gave (totally invalid) excuses for why they cannot\n> be bothered to fix bugs. Maybe that's why Glassfish came along. Anyway, I look\n> forward to some point in the future when this situation changes for the better.\n\nI would be extremely glad if you were switching to Glassfish :) When do you plan\nto do it ? Also, let us know if you convince them to fix this issue.\n", "id": 88607, "time": "2006-04-28T00:49:49Z", "bug_id": 36231, "creation_time": "2006-04-28T00:49:49Z", "tags": [], "is_private": false}, {"count": 23, "tags": [], "bug_id": 36231, "attachment_id": null, "text": "If initCause() is called more than once, it throws IllegalStateException.  So,\nanywhere already calling it on a ServletException would break.\n\nThe infinite loop risk could be avoided by not calling getRootCause():\n\npublic Throwable getCause() {\n    return rootCause;\n}\n\nFor consistency with initCause(), maybe it should only default to rootCause?  If\nnull causes are ignored, it could be done with just:\n\npublic Throwable getCause() {\n    return super.getCause() == null ? rootCause : super.getCause();\n}\n\nBut, to allow initCause(null) to have some effect, ServletException would need\nto keep its own cause and override initCause() too.  The first would be the same\nas in Throwable:\n\nprivate Throwable cause = this;\n\npublic synchronized Throwable initCause(Throwable cause) {\n    if (this.cause != this)\n        throw new IllegalStateException(\"Can't overwrite cause\");\n    if (cause == this)\n        throw new IllegalArgumentException(\"Self-causation not permitted\");\n    this.cause = cause;\n    return this;\n}\n\nThe last would default to rootCause instead of null:\n\npublic Throwable getCause() {\n    return (cause == this ? rootCause : cause);\n}\n\nThis seems pretty compatible to me, with both backwards and specs.  Can anyone\nthink of any problems?\n\nI don't see anything resolving this in the Servlet 2.5 RM 5 spec.", "id": 88608, "time": "2006-04-28T00:55:58Z", "creator": "jdb@getsu.com", "creation_time": "2006-04-28T00:55:58Z", "is_private": false}, {"count": 24, "attachment_id": null, "creator": "jdb@getsu.com", "text": "Of course, allowing initCause() an effect would depend on JDK 1.4 or newer.", "id": 88609, "time": "2006-04-28T01:03:24Z", "bug_id": 36231, "creation_time": "2006-04-28T01:03:24Z", "tags": [], "is_private": false}, {"count": 25, "attachment_id": null, "creator": "jdb@getsu.com", "text": "(In reply to comment #24)\n> Of course, allowing initCause() an effect would depend on JDK 1.4 or newer.\n\nFor calling super.getCause(), I mean.  My last suggestion is more compatible and\ndoesn't introduce any JDK 1.4 dependency.", "id": 88610, "time": "2006-04-28T02:22:34Z", "bug_id": 36231, "creation_time": "2006-04-28T02:22:34Z", "tags": [], "is_private": false}, {"count": 26, "tags": [], "bug_id": 36231, "attachment_id": null, "id": 88611, "time": "2006-04-28T02:42:11Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2006-04-28T02:42:11Z", "is_private": false, "text": "Tomcat 5.5 already depends on JDK 1.5 for the most part so this shouldn't be a\nproblem.\n\nRemy, since when do you claim ownership of the Tomcat project? Last time I\nchecked, it was open-source. Please check your ego at the door."}, {"count": 27, "tags": [], "bug_id": 36231, "attachment_id": null, "text": "(In reply to comment #20)\n> Jonathan, that's a good example of the repercussions of this exception chaining\n> discrepancy.  The infinite loop I mentioned is a little different from the one\n> you posted, because it's actually recursive, so harder to detect in a workaround.\n\nAt least with a recursive infinite loop you will eventually blow up the stack\nand break out of it...\n\n", "id": 88631, "time": "2006-04-28T15:05:10Z", "creator": "jleech@virtela.net", "creation_time": "2006-04-28T15:05:10Z", "is_private": false}, {"count": 28, "tags": [], "bug_id": 36231, "attachment_id": null, "id": 88632, "time": "2006-04-28T15:09:22Z", "creator": "jleech@virtela.net", "creation_time": "2006-04-28T15:09:22Z", "is_private": false, "text": "(In reply to comment #26)\n> Remy, since when do you claim ownership of the Tomcat project? Last time I\n> checked, it was open-source. Please check your ego at the door.\n\nThe principle of meritocracy governing Apache\n(http://www.apache.org/foundation/how-it-works.html#meritocracy) has been\nofficially replaced with the Remitocracy.  Or I should say the Rempricktatorship.\n\n"}, {"count": 29, "tags": [], "bug_id": 36231, "attachment_id": null, "id": 100235, "time": "2007-03-09T15:16:27Z", "creator": "jleech@virtela.net", "creation_time": "2007-03-09T15:16:27Z", "is_private": false, "text": "(In reply to comment #22)\n> \n> I would be extremely glad if you were switching to Glassfish :) When do you plan\n> to do it ? Also, let us know if you convince them to fix this issue.\n>\nOK. I am letting you know.  I am a little late though. The issue was fixed in\nGlassfish on August 22, 2005, more than 6 months before Remy made the above\nsnide remark. \nhttps://glassfish.dev.java.net/source/browse/glassfish/servlet-api/src/jakarta-servletapi-5/jsr154/src/share/javax/servlet/ServletException.java\n\nAnd it probably was either Gili or me that convinced them to fix it. I had\nposted a comment to the related Java bug, and 4 days later it was fixed in\nGlassfish and replied to:\nhttp://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4395719.  Gili also mentioned\nopening an issue with Sun.\n\nI also haven't seen the hypothetical portability issue materialize in the year\nand a half that Glassfish has been fixed and Tomcat hasn't.\n"}]