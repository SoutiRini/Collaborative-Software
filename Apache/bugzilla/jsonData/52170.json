[{"count": 0, "tags": [], "creator": "mraccola@yahoo.com", "text": "The Zip task provides a \"compress\" attribute which tells Ant to set the compression \"method\" to DEFLATE for the archive itself. However, the directires within the archive still use the STORE method. There should be a way to tell Ant to set the \"method\" for all directories in the Zip to DEFLATE.\n\nIn version 1.8.1 I have tracked this to line 63 in ZipCopySpecVisitor.java", "id": 151395, "time": "2011-11-11T14:14:16Z", "bug_id": 52170, "creation_time": "2011-11-11T14:14:16Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 52170, "text": "ZipCopySpecVisitor.java is not part of Ant.\n\nWhy would anybody want to create archives using DEFLATE for directories?  They don't have any content to compress and a DEFLATEd diretory entry will end up requiring more space than a STOREd one.", "id": 151399, "time": "2011-11-11T14:25:36Z", "creator": "bodewig@apache.org", "creation_time": "2011-11-11T14:25:36Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "Sorry about the bad reference. The source code reference is line 1664 of Zip.java.\n\nI'm no expert on compression methods so I don't know the value of setting the method at the directory level. The reason why I personally need it is so that I can compare a JAR file created by Ant's jar task to another JAR file produced by a different tool (in my case Gradle). This is important for me to make sure that the artifacts produced are identical.", "is_private": false, "bug_id": 52170, "id": 151404, "time": "2011-11-11T15:35:09Z", "creator": "mraccola@yahoo.com", "creation_time": "2011-11-11T15:35:09Z", "attachment_id": null}, {"count": 3, "attachment_id": null, "creator": "bodewig@apache.org", "text": "If gradle doesn't use Ant's zip package (or Apache Commons Compress) but rather java.util.zip there will be many differences (internal and external attributes, possibly UTF encoding flags, likely more).  I don't think you can achieve binary identical archives if the underlying implementations are different at all.\n\nOutside of your very specific use-case adding an attribute to the zip task to DEFLATE directory entries (along with the cost of testing, documenting and maintaining said flag) doesn't really seem to make sense.", "id": 151407, "time": "2011-11-11T16:17:33Z", "bug_id": 52170, "creation_time": "2011-11-11T16:17:33Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 52170, "is_private": false, "id": 151408, "attachment_id": null, "creator": "mraccola@yahoo.com", "creation_time": "2011-11-11T16:34:37Z", "time": "2011-11-11T16:34:37Z", "text": "I really appreciate your quick responses and understand your position. For now I am working around by changing the Ant source code and building my own custom Ant JARs. That is working well. Actually after the change I can do a complete comparison using the ZipDiff tool located here, http://zipdiff.sourceforge.net/\n\nJust as an FYI here is a link to the Gradle class that sets the DEFLATED method:\n\nhttps://github.com/gradle/gradle/blob/master/subprojects/core/src/main/groovy/org/gradle/api/internal/file/archive/ZipCopySpecVisitor.java"}]