[{"count": 0, "tags": [], "bug_id": 46033, "attachment_id": null, "text": "From the example on \"How to create tables\", when I run the example in either POI-3.2 or POI-3.5, the table ignores \"setFontSize\".\n\nThe PowerPoint generated has the table, but with a font size of 28.\n\n     //table data              \n      String[][] data = {\n          {\"INPUT FILE\", \"NUMBER OF RECORDS\"},\n          {\"Item File\", \"11,559\"},\n          {\"Vendor File\", \"300\"},\n          {\"Purchase History File\", \"10,000\"},\n          {\"Total # of requisitions\", \"10,200,038\"}\n      };\n\n      SlideShow ppt = new SlideShow();\n\n      Slide slide = ppt.createSlide();\n      //create a table of 5 rows and 2 columns\n      Table table = new Table(5, 2);\n      for (int i = 0; i < data.length; i++) {\n          for (int j = 0; j < data[i].length; j++) {\n              TableCell cell = table.getCell(i, j);\n              cell.setText(data[i][j]);\n\n              RichTextRun rt = cell.getTextRun().getRichTextRuns()[0];\n              rt.setFontName(\"Arial\");\n              rt.setFontSize(10);\n\n              cell.setVerticalAlignment(TextBox.AnchorMiddle);\n              cell.setHorizontalAlignment(TextBox.AlignCenter);\n          }\n      }\n\n      //set table borders\n      Line border = table.createBorder();\n      border.setLineColor(Color.black);\n      border.setLineWidth(1.0);\n      table.setAllBorders(border);\n\n      //set width of the 1st column\n      table.setColumnWidth(0, 300);\n      //set width of the 2nd column\n      table.setColumnWidth(1, 150);\n\n      slide.addShape(table);\n      table.moveTo(100, 100);\n\n      FileOutputStream out = new FileOutputStream(\"hslf-table.ppt\");\n      ppt.write(out);\n      out.close();", "id": 121661, "time": "2008-10-17T08:52:59Z", "creator": "fred@adapco.com", "creation_time": "2008-10-17T08:52:59Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 46033, "is_private": false, "text": "In addition to setFontSize() calls not working, calls to setFontName() and setBullet() also appear to have no effect.", "id": 121833, "time": "2008-10-23T08:59:22Z", "creator": "wholder@nglm.com", "creation_time": "2008-10-23T08:59:22Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 46033, "is_private": false, "text": "Fixed in r710134\n\nYegor", "id": 122149, "time": "2008-11-03T11:20:03Z", "creator": "yegor@dinom.ru", "creation_time": "2008-11-03T11:20:03Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 46033, "attachment_id": null, "text": "I still see this issue in the 3.6 release, which I assume should contain the r710134 patches.  Or, has this not tricked through to a released version yet?", "id": 137664, "time": "2010-06-15T14:18:27Z", "creator": "wholder@nglm.com", "creation_time": "2010-06-15T14:18:27Z", "is_private": false}, {"count": 4, "tags": [], "creator": "wholder@nglm.com", "attachment_id": null, "is_private": false, "id": 137665, "time": "2010-06-15T16:27:55Z", "bug_id": 46033, "creation_time": "2010-06-15T16:27:55Z", "text": "I finally tracked down what was going on.  My test code was making a called to RichtextRun.setBullet(false) on the text run in the table.  This seems to disable the font settings.  The offending code is shown commented out below.\n\n  TableCell cell = table.getCell(i, j);\n  cell.setText(data[i][j]);\n  RichTextRun rt = cell.getTextRun().getRichTextRuns()[0];\n  rt.setFontName(\"Tahoma\");\n  rt.setFontSize(10);\n  //rt.setBullet(false);\n  cell.setVerticalAlignment(TextBox.AnchorMiddle);\n  cell.setHorizontalAlignment(TextBox.AlignCenter);\n\nI'm not sure if this is correct behavior, or not, but I can now workaround the issue.\n\nWayne"}]