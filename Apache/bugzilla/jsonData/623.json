[{"count": 0, "tags": [], "creator": "paul.houghton@wcom.com", "attachment_id": null, "id": 714, "time": "2001-02-15T14:02:56Z", "bug_id": 623, "creation_time": "2001-02-15T14:02:56Z", "is_private": false, "text": "First, Thanks for all your work! Xerces and Xalan are Great products.\n\nIf your DOCTYPE SYSTEM id starts with './../..' URI.java goes into an infinite\nloop. I just added some breaks to it to fix it. Heres the Patch:\n--- xerces-java-1.3.0//src/org/apache/xerces/utils/URI.java     Wed Feb 14 05:21\n:03 2001\n***************\n*** 508,521 ****\n--- 508,527 ----\n        String tempString = null;\n  \n        while ((index = path.indexOf(\"/../\")) > 0) {\n          tempString = path.substring(0, path.indexOf(\"/../\"));\n          segIndex = tempString.lastIndexOf('/');\n          if (segIndex != -1) {\n            if (!tempString.substring(segIndex++).equals(\"..\")) {\n              path = path.substring(0, segIndex).concat(path.substring(index+4))\n;\n+         } else {\n+           break;\n          }\n+         } else {\n+         break;\n        }\n        }\n        \n        // 6f - remove ending \"<segment>/..\" where \"<segment>\" is a \n        // complete path segment"}, {"count": 1, "tags": [], "bug_id": 623, "attachment_id": null, "is_private": false, "id": 2926, "time": "2001-06-13T07:54:36Z", "creator": "sandygao@ca.ibm.com", "creation_time": "2001-06-13T07:54:36Z", "text": "A little variation from the patch provided by Paul."}, {"count": 2, "tags": [], "bug_id": 623, "text": "Hi, the index is juming way too far too soon. if the original path \nis \"a/b/c/d/../../../e\", it will become \"a/b/c/e\".\n\n// line 510 --------------\n      while ((index = path.indexOf(\"/../\", index)) > 0) {\n        tempString = path.substring(0, path.indexOf(\"/../\"));\n        segIndex = tempString.lastIndexOf('/');\n        if (segIndex != -1) {\n          if (!tempString.substring(segIndex).equals(\"..\")) {\n            path = path.substring(0, segIndex).concat(path.substring(index+3));\n            index = segIndex - 1; // here is a quick fix...\n          }\n          else\n            index += 4;\n        }\n        else\n          index += 4;\n      }\n// line 525 --------------\n", "id": 3690, "time": "2001-07-12T13:30:39Z", "creator": "doggie@linkpeople.com", "creation_time": "2001-07-12T13:30:39Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 623, "attachment_id": null, "is_private": false, "id": 3721, "time": "2001-07-13T10:48:47Z", "creator": "sandygao@ca.ibm.com", "creation_time": "2001-07-13T10:48:47Z", "text": "My new approach. Would it work?\n\n      index = 1;\n      int segIndex = -1;\n\n      while ((index = path.indexOf(\"/../\", index)) > 0) {\n        segIndex = path.lastIndexOf('/', index-1);\n        if (segIndex != -1 && !path.substring(segIndex+1, index).equals(\"..\")) {\n          path = path.substring(0, segIndex).concat(path.substring(index+3));\n          index = segIndex;\n        } else {\n          index += 4;\n        }\n      }\n"}]