[{"count": 0, "tags": [], "bug_id": 43824, "is_private": false, "id": 110357, "attachment_id": null, "creator": "bowditch_chris@hotmail.com", "creation_time": "2007-11-09T06:47:33Z", "time": "2007-11-09T06:47:33Z", "text": "The attached FO renders very badly in RTF because it contains a lot of \nfo:table elements that use proportional-column-width function for the column \nwidths. Changing the width to fixed widths produces a better result but the \nRTF renderer should support proportional-column-width function if possible"}, {"count": 1, "tags": [], "creator": "bowditch_chris@hotmail.com", "attachment_id": 21102, "id": 110358, "time": "2007-11-09T06:48:05Z", "bug_id": 43824, "creation_time": "2007-11-09T06:48:05Z", "is_private": false, "text": "Created attachment 21102\nTest FO to reproduce bug"}, {"count": 2, "tags": [], "bug_id": 43824, "attachment_id": null, "is_private": false, "id": 117342, "time": "2008-06-04T07:17:31Z", "creator": "maximilian.aster@boc-eu.com", "creation_time": "2008-06-04T07:17:31Z", "text": "Inside the source code (RTFHandler) is also a comment saying that its not implemented well at the moment.\nI would like to help fixing the problem.\nHints are always welcome"}, {"count": 3, "tags": [], "text": "Maximilian, this goes in the direction of supporting percentages in RTF output. This is mostly done in the layout managers for the page-oriented output formats, so that means it has to be recreated for the flow-based output formats. I assume some kind of tracking mechanism is necessary to have the base values for percentage-based calculations (and proportional-column-width() for that matter). If done properly this might even be useful for the layout managers at some point. Anyway, take a look at org.apache.fop.datatypes.PercentBaseContext. This interface is implemented by AbstractBaseLayoutManager. In the case of RTF, this should probably be a separate class (i.e. that tracking mechanism I mentioned above) so it can be reused by other/future flow-based output formats [1]. For the table columns, take a look at org.apache.fop.layoutmgr.table.TableLayoutManager which contains code for handling the proportional-column-width() approach. Something similar has to be done for the flow-based formats.\n\n[1] Incidentally, I'm going to a client today to coach them for implementing ODF output support.", "is_private": false, "bug_id": 43824, "id": 117354, "time": "2008-06-05T01:26:09Z", "creator": "jeremias@apache.org", "creation_time": "2008-06-05T01:26:09Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "Antti.Karanta@napa.fi", "attachment_id": null, "id": 117359, "time": "2008-06-05T02:21:06Z", "bug_id": 43824, "creation_time": "2008-06-05T02:21:06Z", "is_private": false, "text": "\n(In reply to comment #3)\n\n> [1] Incidentally, I'm going to a client today to coach them for implementing\n> ODF output support.\n\n  This is very interesting. Is it going to be in their use only or is it going to be published into public domain? If so, are there any time estimates when this might happen?\n\n\n\n"}, {"count": 5, "tags": [], "bug_id": 43824, "attachment_id": null, "id": 117360, "time": "2008-06-05T02:53:39Z", "creator": "jeremias@apache.org", "creation_time": "2008-06-05T02:53:39Z", "is_private": false, "text": "I can probably tell you more tomorrow. Nothing's fixed, yet. I expect them to want to contribute this back to FOP at some point and put it under the ALv2. One of the problems is the lack of an ODF library with a compatible license. All Java ODF libraries I know of are published under the LGPL which complicates things for FOP. Timeframe: rather soon (<2 months probably)."}, {"count": 6, "tags": [], "bug_id": 43824, "attachment_id": 22158, "id": 117896, "time": "2008-06-23T02:34:26Z", "creator": "maximilian.aster@boc-eu.com", "creation_time": "2008-06-23T02:34:26Z", "is_private": false, "text": "Created attachment 22158\ntable scaling patch\n\n- column-width accepts percent values (proportional-column-width and % working)\n- Table width accepts percent values (100% of the pagewidth as standard)\n- nested tables are working\n- it is also possible to make nested tables with a higher depth than 3 without causing word to crash"}, {"count": 7, "tags": [], "text": "Patch applied to 0.95 branch with modifications:\nhttp://svn.apache.org/viewvc?rev=674304&view=rev\n\nIt's not technically bugfixing only but I thought it would be great to have that in 0.95.\n\nMaximilian's ICLA is recorded. Thanks, Maximilian!", "attachment_id": null, "bug_id": 43824, "id": 118315, "time": "2008-07-06T08:18:07Z", "creator": "jeremias@apache.org", "creation_time": "2008-07-06T08:18:07Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 43824, "attachment_id": null, "id": 156188, "time": "2012-04-01T07:03:32Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T07:03:32Z", "is_private": false, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed"}]