[{"count": 0, "tags": [], "bug_id": 49116, "attachment_id": null, "id": 136121, "time": "2010-04-14T04:43:30Z", "creator": "kfujino@apache.org", "creation_time": "2010-04-14T04:43:30Z", "is_private": false, "text": "When session is stored in StandardManager#doUnload method, \nan invalid session is stored. \n\nFor instance, \nIf HttpSession#invalidate is executed while executing StandardManager#doUnload,\nsession of \"isValid=false\" is stored.\n\nThe session of isValid=false is restored in StandardManager#doLoad, \nand it registers in session map (sessions). \nHowever, no one can invalidate this session. \n\nIf isValid is false, StandardSession#invalidate() and StandardSession#isValid() can not expire session.\nThey are throws IllegalStateException or return immediately. \n\nConsequently, the session of isValid=false is never deleted from the session map(sessions). \n\nI made a patch.\nIf session is already invalid, expire session to prevent memory leak.\n\nBest Regards.\nKeiichi."}, {"count": 1, "tags": [], "bug_id": 49116, "attachment_id": 25290, "id": 136122, "time": "2010-04-14T04:45:10Z", "creator": "kfujino@apache.org", "creation_time": "2010-04-14T04:45:10Z", "is_private": false, "text": "Created attachment 25290\nIf session is already invalid, expire session to prevent memory leak."}, {"count": 2, "tags": [], "text": "Fixed in trunk and proposed for 6.0.x.", "is_private": false, "bug_id": 49116, "id": 136123, "time": "2010-04-14T04:57:53Z", "creator": "kfujino@apache.org", "creation_time": "2010-04-14T04:57:53Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 49116, "attachment_id": null, "id": 136747, "time": "2010-05-10T04:42:59Z", "creator": "kfujino@apache.org", "creation_time": "2010-05-10T04:42:59Z", "is_private": false, "text": "This fix applied to 6.0, will be in 6.0.27 onwards."}]