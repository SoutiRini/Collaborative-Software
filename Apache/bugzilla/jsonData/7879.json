[{"count": 0, "tags": [], "creator": "gxzuo@yahoo.com", "text": "Two features should make the \"style\" task complete:\n\n1. Ability to name output files.  For example, input file Abc.xml\n   generates output file AbcDao.java.  Now I have to name the input\n   file AbcDao.java which is very ugly.\n\n2. Ability to do multiple transforms on one file.\n\nThe external task \"styler\" does both, but it has more features than\nneeded.  Besides, it doesn't check for up-to-date files.", "id": 13109, "time": "2002-04-09T15:58:53Z", "bug_id": 7879, "creation_time": "2002-04-09T15:58:53Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 7879, "attachment_id": null, "text": "I don't understand your point as the following do what you want for 1) as far \nas I understand it.\n\n<style in=\"xxx.xml\" out=\"yyy.java\" style=\"zzz.xsl\"/>\n\nAbout 2) what do you want exactly ? pipelining ?\nPlease give me an example of how you would see the syntax (don't forget \nbackward compatibility)\n\nPlease next time open 2 different reports for 2 differents enhancements \notherwise this is difficult to manage.", "id": 13501, "time": "2002-04-14T17:01:43Z", "creator": "sbailliez@apache.org", "creation_time": "2002-04-14T17:01:43Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 7879, "text": "The \"in\" and \"out\" attributes are for single file only.  The \n\"extension\" attribute is actually close to what I wanted, but\nI thought it was for specifying input extension when I made\nthe first comment.\n\nMy situation is something like this: I'm using one XML file as\nspec for a domain class AND its related DAO class, e.g.\n\n   Trade.xml -> Trade.java + TradeDAO.java\n\nAnd I have lots of domain classes.  Using the external task\n\"styler\", I can say:\n\n   <styler>\n      <fileset dir=\"xml\">\n         <include name=\"*.xml\"/>\n      </fileset>\n      <transform file=\"domain.xsl\"/>\n      <output dir=\"domain\">\n         <mapper type=\"glob\" from=\"*.xml\" to=\"*.java\"/>\n      </output>\n   </styler>\n\n   <styler>\n      <fileset dir=\"xml\">\n         <include name=\"*.xml\"/>\n      </fileset>\n      <transform file=\"dao.xsl\"/>\n      <output dir=\"dao\">\n         <mapper type=\"glob\" from=\"*.xml\" to=\"*DAO.java\"/>\n      </output>\n   </styler>\n\nI got \"styler\" to work, but unfortunately it doesn't check\nfor up-to-date files which makes it useless: I don't want 100\nfiles to be generated each time I type \"build\".\n\nThe second point regarding multiple transforms could also be\nexplained by how \"styler\" does it.  In the above XML code,\nyou can have multiple \"<transform\"> nodes.  I don't need\nthis feature now.\n\nSeems to me \"styler\" does more than commonly useful and as\na result, it's more complicated than necessary. Even the syntax\nlooks too wordy.\n\nI'd rather see \"style\" enhanced especially since it's a built-in\ntask.  I believe the two features I described are natural features\nfor a \"style\" task.  You can even use the current syntax:\n\n   <style in=\"*.xml\" out=\"*.java\" style=\"domain.xsl|yyy.xsl\"/>\n   <style in=\"*.xml\" out=\"*DAO.java\" style=\"dao.xsl|xxx.xsl\"/>\n\nGary", "id": 13519, "time": "2002-04-14T20:05:11Z", "creator": "gxzuo@yahoo.com", "creation_time": "2002-04-14T20:05:11Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 7879, "attachment_id": null, "id": 13584, "time": "2002-04-15T06:45:15Z", "creator": "steve_l@iseran.com", "creation_time": "2002-04-15T06:45:15Z", "is_private": false, "text": "1. no to having more magic characters \"|\" in string literals; think about XSL \non ant build files themselves.\n\n2. what is wrong in trying to add dependency checking to styler if it does \neverything else you need?\n\n"}, {"count": 4, "tags": [], "bug_id": 7879, "attachment_id": null, "text": "Part 1 will be implemented when I get to bug 11249.\n\nI don't see us implementing multiple transforms, so I can as well close this.\nThere is no reason to duplicate styler inside Ant.\n\n*** This bug has been marked as a duplicate of 11249 ***", "id": 55390, "time": "2004-04-06T12:54:23Z", "creator": "bodewig@apache.org", "creation_time": "2004-04-06T12:54:23Z", "is_private": false}]