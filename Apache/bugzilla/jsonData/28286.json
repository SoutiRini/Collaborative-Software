[{"count": 0, "tags": [], "creator": "bstansberry@jboss.com", "attachment_id": null, "id": 55530, "time": "2004-04-08T17:36:32Z", "bug_id": 28286, "creation_time": "2004-04-08T17:36:32Z", "is_private": false, "text": "Attached is a patch that loosens the coupling between the SingleSignOn valve \nimplementation and the various Authenticator classes.  Right now, all \nauthenticators check for an instance of the SingleSignOn class in the pipeline, \nand interact directly with it.  In the patch, SingleSignOn implements interface \nSSOValve, and all external classes interact with it through the interface.  This \nwill allow application developers to deploy custom SSO implementations without \nhaving to replace the entire TC5 Authenticator infrastructure.  This follows the \npattern used by other TC components.\n\nI've been messing around with trying to use the SingleSignOn valve in a cluster \n(see enhancement request 28039) and can easily see how different implementations \nwould be appropriate for different environments.  My 28039 patch attacks the \nproblem by adding a property to SingleSignOn where deployers can specify use of \nan implementation of a new interface SSOClusterManager.  I think that's a valid \napproach, but loosening the coupling between SingleSignOn and Authenticators \nwill provide greater flexibility."}, {"count": 1, "tags": [], "bug_id": 28286, "attachment_id": 11188, "id": 55531, "time": "2004-04-08T17:37:30Z", "creator": "bstansberry@jboss.com", "creation_time": "2004-04-08T17:37:30Z", "is_private": false, "text": "Created attachment 11188\nPatch with a diff and new interface SSOValve"}, {"count": 2, "tags": [], "bug_id": 28286, "attachment_id": null, "id": 55616, "time": "2004-04-10T15:11:55Z", "creator": "remm@apache.org", "creation_time": "2004-04-10T15:11:55Z", "is_private": false, "text": "Your two related patches seem useful. I'll look at them."}, {"count": 3, "tags": [], "creator": "bstansberry@jboss.com", "attachment_id": null, "id": 55625, "time": "2004-04-10T18:06:06Z", "bug_id": 28286, "creation_time": "2004-04-10T18:06:06Z", "is_private": false, "text": "Great.  I'm sorry to say the two patches conflict (not logically, but in the \nsense that they are diffs to the same code base), but if one is committed I'll \ngladly redo the other."}, {"count": 4, "tags": [], "bug_id": 28286, "attachment_id": null, "text": "After reviewing, I am not going to apply this patch or the other. I don't see\nthe point of adding complexity and additional interfaces when SSO is used\nthrough a standard Valve (SingleSignOn), which can easily be extended to\nimplement the needed clustering support.", "id": 56363, "time": "2004-04-25T14:55:00Z", "creator": "remm@apache.org", "creation_time": "2004-04-25T14:55:00Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 28286, "attachment_id": null, "text": "I thought you might feel that way about the 28039 patch, which is one reason \nwhy I wrote the interface proposal ;-)  And, it's true an interface isn't \nabsolutely needed; subclassing would work.  The fact that SingleSignOnEntry is \nnot public (and I'm not arguing it should be) is a big stumbling block in \neasily subclassing SingleSignOn, but getting around that problem in a subclass \nis no harder than writing a whole new implementation of an interface.\n\nBut, to get subclassing to work effectively, a couple things need to be \nchanged:\n\n1) AuthenticatorBase.reauthenticateFromSSO() invokes SingleSignOn.lookup().  \nThis method returns a SingleSignOnEntry, which is a package protected class.  \nThis effectively precludes subclassing this method.  \n\n2) SingleSignOn.update() is package protected, again preventing subclassing.\n\nI'm attaching another patch that addresses these two issues by:\n\n1) Changing the way AuthenticatorBase.reauthenticateFromSSO() works so it does \nnot need to call SingleSignOn.lookup().  lookup() is now only called \ninternally in SingleSignOn, so someone who wished to write a subclass could \njust remove any calls to it, write their own lookup algorithm, and replace \nSingleSignOnEntry with their own class.\n\n2) Makes SingleSignOn.update() protected.\n\nMaybe 3rd time's the charm? ;-)", "id": 56384, "time": "2004-04-26T05:48:15Z", "creator": "bstansberry@jboss.com", "creation_time": "2004-04-26T05:48:15Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 28286, "attachment_id": 11330, "id": 56385, "time": "2004-04-26T05:49:01Z", "creator": "bstansberry@jboss.com", "creation_time": "2004-04-26T05:49:01Z", "is_private": false, "text": "Created attachment 11330\nPatch to allow subclassing"}, {"count": 7, "tags": [], "text": "I'm all for making the entry public. I think I'm going to apply your patch.", "is_private": false, "id": 56418, "creator": "remm@apache.org", "time": "2004-04-26T16:44:59Z", "bug_id": 28286, "creation_time": "2004-04-26T16:44:59Z", "attachment_id": null}, {"count": 8, "attachment_id": null, "bug_id": 28286, "is_private": false, "id": 56437, "time": "2004-04-26T21:58:01Z", "creator": "remm@apache.org", "creation_time": "2004-04-26T21:58:01Z", "tags": [], "text": "This is committed. I don't see the point of not allowing to extend the entry as\nwell, so I also patched it."}, {"count": 9, "tags": [], "bug_id": 28286, "is_private": false, "id": 57488, "attachment_id": null, "creator": "bstansberry@jboss.com", "creation_time": "2004-05-15T18:41:48Z", "time": "2004-05-15T18:41:48Z", "text": "The constructor in SingleSignOnEntry is package protected, so the class cannot \nbe extended.  The attached patch makes the c'tor protected."}, {"count": 10, "tags": [], "bug_id": 28286, "is_private": false, "text": "Created attachment 11566\nPatch to allow subclassing of SingleSignOnEntry", "id": 57489, "time": "2004-05-15T18:42:49Z", "creator": "bstansberry@jboss.com", "creation_time": "2004-05-15T18:42:49Z", "attachment_id": 11566}]