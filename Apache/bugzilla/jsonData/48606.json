[{"count": 0, "tags": [], "bug_id": 48606, "attachment_id": null, "id": 133880, "time": "2010-01-25T06:10:19Z", "creator": "asm@uezku.kemsu.ru", "creation_time": "2010-01-25T06:10:19Z", "is_private": false, "text": "In rare situations we face such core dump.\n\n[Switching to thread 11 (process 12096)]#0  0x00380410 in __kernel_vsyscall ()\n#0  0x00380410 in __kernel_vsyscall ()\n#1  0x00163226 in kill () from /lib/libc.so.6\n#2  0x005fcdee in sig_coredump (sig=11) at /usr/src/debug/httpd-2.2.9.2/phorm/server/mpm_common.c:1239\n#3  <signal handler called>\n#4  apr_allocator_free (allocator=0x0, node=0x9ae2a90) at memory/unix/apr_pools.c:345\n#5  0x007fcd83 in apr_bucket_free (mem=0x9ae2ab8) at buckets/apr_buckets_alloc.c:191\n#6  0x007fd4cf in heap_bucket_destroy (data=0x9b0b8f0) at buckets/apr_buckets_heap.c:36\n#7  0x007fe1d2 in apr_brigade_cleanup (data=0x9aed300) at buckets/apr_brigade.c:44\n#8  0x007fe92a in apr_brigade_destroy (b=0x9aed300) at buckets/apr_brigade.c:53\n#9  0x005f2405 in ap_core_output_filter (f=0x9ba22d0, b=0x9aed300) at /usr/src/debug/httpd-2.2.9.2/phorm/server/core_filters.c:882\n#10 0x005feb30 in ap_pass_brigade (next=0x9b0b820, bb=0x9ba7090) at /usr/src/debug/httpd-2.2.9.2/phorm/server/util_filter.c:526\n#11 0x00602ebb in ap_process_request (r=0x9af7308) at /usr/src/debug/httpd-2.2.9.2/phorm/modules/http/http_request.c:231\n#12 0x005ffcff in ap_process_http_connection (c=0x9ba1e98) at /usr/src/debug/httpd-2.2.9.2/phorm/modules/http/http_core.c:190\n#13 0x005fb65d in ap_run_process_connection (c=0x9ba1e98) at /usr/src/debug/httpd-2.2.9.2/phorm/server/connection.c:43\n#14 0x005fb75c in ap_process_connection (c=0x9ba1e98, csd=0x9ba1ce8) at /usr/src/debug/httpd-2.2.9.2/phorm/server/connection.c:178\n#15 0x006088cf in worker_thread (thd=0x9ac1ed0, dummy=0x9ac68f8) at /usr/src/debug/httpd-2.2.9.2/phorm/server/mpm/worker/worker.c:553\n#16 0x00130606 in dummy_worker (opaque=0x9ac1ed0) at threadproc/unix/thread.c:142\n#17 0x00ecf5ab in start_thread () from /lib/libpthread.so.0\n#18 0x0020bcfe in clone () from /lib/libc.so.6\n\nI suppose, the problem is in \"proxy_conn_scpool\" pool which gets destroyed prematurely like this:\n\n#0  ap_proxy_release_connection (proxy_function=0x253507 \"HTTP\", conn=0xa596200, s=0x9b25a18)\n    at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/proxy_util.c:1721\n#1  0x00250905 in ap_proxy_http_cleanup (scheme=0x0, r=<value optimized out>, backend=0x1)\n    at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy_http.c:1851\n#2  0x00250bc4 in proxy_http_handler (r=0x9e21e58, worker=0x9b2cb88, conf=0x9aa53a8, url=0xa2ea530 \"/\", proxyname=0x0, proxyport=0)\n    at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy_http.c:1980\n#3  0x00258be6 in proxy_http_handler_wrapper (r=0x9e21e58, worker=0x9b2cb88, proxy_conf=0x9aa53a8, url=0x9e2328e \"http://xxx.xxx.xxx.xxx:3128/\",\n    proxyname=0x0, proxyport=0) at mod_proxysense.cpp:586\n#4  0x05765880 in proxy_run_scheme_handler (r=0x9e21e58, worker=0x9b2cb88, conf=0x9aa53a8, url=0x9e2328e \"http://xxx.xxx.xxx.xxx:3128/\", proxyhost=0x0,\n    proxyport=0) at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy.c:2511\n#5  0x05769f83 in proxy_handler (r=0x9e21e58) at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy.c:1016\n\nIt is destroyed with apr_pool_clear(p) (p is \"proxy_conn_pool\"). In the meantime, the brigade was set aside (in ap_core_output_filter()) with backend response. And response body bucket is on \"proxy_conn_scpool\". When filters are flushed in check_pipeline_flush(r) we accessing freed memory from this bucket.\n\nThe bug may be also applicable to trunk version."}, {"count": 1, "tags": [], "creator": "asm@uezku.kemsu.ru", "attachment_id": null, "text": "Also, take into account, that operation\n\n            *conn = worker->cp->conn;\n            worker->cp->conn = NULL;\n\nis not atomic and not thread safe. We potentially can get same conn for two threads. This also happens in trunk version.", "id": 133881, "time": "2010-01-25T06:19:02Z", "bug_id": 48606, "creation_time": "2010-01-25T06:19:02Z", "is_private": false}, {"text": "(In reply to comment #1)\n> Also, take into account, that operation\n> \n>             *conn = worker->cp->conn;\n>             worker->cp->conn = NULL;\n> \n> is not atomic and not thread safe. We potentially can get same conn for two\n> threads. This also happens in trunk version.\n\nIt doesn't need to because this code is only executed in non threaded environments.", "tags": [], "bug_id": 48606, "attachment_id": null, "count": 2, "id": 133883, "time": "2010-01-25T07:52:47Z", "creator": "rpluem@apache.org", "creation_time": "2010-01-25T07:52:47Z", "is_private": false}, {"count": 3, "attachment_id": null, "creator": "rpluem@apache.org", "is_private": false, "id": 133884, "time": "2010-01-25T07:59:19Z", "bug_id": 48606, "creation_time": "2010-01-25T07:59:19Z", "tags": [], "text": "(In reply to comment #0)\n> In rare situations we face such core dump.\n> \n> [Switching to thread 11 (process 12096)]#0  0x00380410 in __kernel_vsyscall ()\n> #0  0x00380410 in __kernel_vsyscall ()\n> #1  0x00163226 in kill () from /lib/libc.so.6\n> #2  0x005fcdee in sig_coredump (sig=11) at\n> /usr/src/debug/httpd-2.2.9.2/phorm/server/mpm_common.c:1239\n> #3  <signal handler called>\n> #4  apr_allocator_free (allocator=0x0, node=0x9ae2a90) at\n> memory/unix/apr_pools.c:345\n> #5  0x007fcd83 in apr_bucket_free (mem=0x9ae2ab8) at\n> buckets/apr_buckets_alloc.c:191\n> #6  0x007fd4cf in heap_bucket_destroy (data=0x9b0b8f0) at\n> buckets/apr_buckets_heap.c:36\n> #7  0x007fe1d2 in apr_brigade_cleanup (data=0x9aed300) at\n> buckets/apr_brigade.c:44\n> #8  0x007fe92a in apr_brigade_destroy (b=0x9aed300) at buckets/apr_brigade.c:53\n> #9  0x005f2405 in ap_core_output_filter (f=0x9ba22d0, b=0x9aed300) at\n> /usr/src/debug/httpd-2.2.9.2/phorm/server/core_filters.c:882\n> #10 0x005feb30 in ap_pass_brigade (next=0x9b0b820, bb=0x9ba7090) at\n> /usr/src/debug/httpd-2.2.9.2/phorm/server/util_filter.c:526\n> #11 0x00602ebb in ap_process_request (r=0x9af7308) at\n> /usr/src/debug/httpd-2.2.9.2/phorm/modules/http/http_request.c:231\n> #12 0x005ffcff in ap_process_http_connection (c=0x9ba1e98) at\n> /usr/src/debug/httpd-2.2.9.2/phorm/modules/http/http_core.c:190\n> #13 0x005fb65d in ap_run_process_connection (c=0x9ba1e98) at\n> /usr/src/debug/httpd-2.2.9.2/phorm/server/connection.c:43\n> #14 0x005fb75c in ap_process_connection (c=0x9ba1e98, csd=0x9ba1ce8) at\n> /usr/src/debug/httpd-2.2.9.2/phorm/server/connection.c:178\n> #15 0x006088cf in worker_thread (thd=0x9ac1ed0, dummy=0x9ac68f8) at\n> /usr/src/debug/httpd-2.2.9.2/phorm/server/mpm/worker/worker.c:553\n> #16 0x00130606 in dummy_worker (opaque=0x9ac1ed0) at\n> threadproc/unix/thread.c:142\n> #17 0x00ecf5ab in start_thread () from /lib/libpthread.so.0\n> #18 0x0020bcfe in clone () from /lib/libc.so.6\n> \n> I suppose, the problem is in \"proxy_conn_scpool\" pool which gets destroyed\n> prematurely like this:\n> \n> #0  ap_proxy_release_connection (proxy_function=0x253507 \"HTTP\",\n> conn=0xa596200, s=0x9b25a18)\n>     at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/proxy_util.c:1721\n> #1  0x00250905 in ap_proxy_http_cleanup (scheme=0x0, r=<value optimized out>,\n> backend=0x1)\n>     at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy_http.c:1851\n> #2  0x00250bc4 in proxy_http_handler (r=0x9e21e58, worker=0x9b2cb88,\n> conf=0x9aa53a8, url=0xa2ea530 \"/\", proxyname=0x0, proxyport=0)\n>     at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy_http.c:1980\n> #3  0x00258be6 in proxy_http_handler_wrapper (r=0x9e21e58, worker=0x9b2cb88,\n> proxy_conf=0x9aa53a8, url=0x9e2328e \"http://xxx.xxx.xxx.xxx:3128/\",\n>     proxyname=0x0, proxyport=0) at mod_proxysense.cpp:586\n> #4  0x05765880 in proxy_run_scheme_handler (r=0x9e21e58, worker=0x9b2cb88,\n> conf=0x9aa53a8, url=0x9e2328e \"http://xxx.xxx.xxx.xxx:3128/\", proxyhost=0x0,\n>     proxyport=0) at\n> /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy.c:2511\n> #5  0x05769f83 in proxy_handler (r=0x9e21e58) at\n> /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy.c:1016\n> \n> It is destroyed with apr_pool_clear(p) (p is \"proxy_conn_pool\"). In the\n> meantime, the brigade was set aside (in ap_core_output_filter()) with backend\n\nThe buckets that are set aside are not part of a brigade created\nwith the proxy_conn_pool. They have been transfered previously via ap_proxy_buckets_lifetime_transform to a brigade created with the request pool.\nPool lifetime management and code in the proxy code is really tricky."}, {"count": 4, "attachment_id": null, "creator": "rpluem@apache.org", "text": "(In reply to comment #0)\n\n> #0  ap_proxy_release_connection (proxy_function=0x253507 \"HTTP\",\n> conn=0xa596200, s=0x9b25a18)\n>     at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/proxy_util.c:1721\n> #1  0x00250905 in ap_proxy_http_cleanup (scheme=0x0, r=<value optimized out>,\n> backend=0x1)\n>     at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy_http.c:1851\n> #2  0x00250bc4 in proxy_http_handler (r=0x9e21e58, worker=0x9b2cb88,\n> conf=0x9aa53a8, url=0xa2ea530 \"/\", proxyname=0x0, proxyport=0)\n>     at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy_http.c:1980\n> #3  0x00258be6 in proxy_http_handler_wrapper (r=0x9e21e58, worker=0x9b2cb88,\n> proxy_conf=0x9aa53a8, url=0x9e2328e \"http://xxx.xxx.xxx.xxx:3128/\",\n>     proxyname=0x0, proxyport=0) at mod_proxysense.cpp:586\n\nYou are running a 3rd party module. Does this crash also happen without it?", "id": 133885, "time": "2010-01-25T08:01:07Z", "bug_id": 48606, "creation_time": "2010-01-25T08:01:07Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "creator": "asm@uezku.kemsu.ru", "attachment_id": null, "text": "(In reply to comment #3)\n> (In reply to comment #0)\n> > In rare situations we face such core dump.\n> > \n> > [Switching to thread 11 (process 12096)]#0  0x00380410 in __kernel_vsyscall ()\n> > #0  0x00380410 in __kernel_vsyscall ()\n> > #1  0x00163226 in kill () from /lib/libc.so.6\n> > #2  0x005fcdee in sig_coredump (sig=11) at\n> > /usr/src/debug/httpd-2.2.9.2/phorm/server/mpm_common.c:1239\n> > #3  <signal handler called>\n> > #4  apr_allocator_free (allocator=0x0, node=0x9ae2a90) at\n> > memory/unix/apr_pools.c:345\n> > #5  0x007fcd83 in apr_bucket_free (mem=0x9ae2ab8) at\n> > buckets/apr_buckets_alloc.c:191\n> > #6  0x007fd4cf in heap_bucket_destroy (data=0x9b0b8f0) at\n> > buckets/apr_buckets_heap.c:36\n> > #7  0x007fe1d2 in apr_brigade_cleanup (data=0x9aed300) at\n> > buckets/apr_brigade.c:44\n> > #8  0x007fe92a in apr_brigade_destroy (b=0x9aed300) at buckets/apr_brigade.c:53\n> > #9  0x005f2405 in ap_core_output_filter (f=0x9ba22d0, b=0x9aed300) at\n> > /usr/src/debug/httpd-2.2.9.2/phorm/server/core_filters.c:882\n> > #10 0x005feb30 in ap_pass_brigade (next=0x9b0b820, bb=0x9ba7090) at\n> > /usr/src/debug/httpd-2.2.9.2/phorm/server/util_filter.c:526\n> > #11 0x00602ebb in ap_process_request (r=0x9af7308) at\n> > /usr/src/debug/httpd-2.2.9.2/phorm/modules/http/http_request.c:231\n> > #12 0x005ffcff in ap_process_http_connection (c=0x9ba1e98) at\n> > /usr/src/debug/httpd-2.2.9.2/phorm/modules/http/http_core.c:190\n> > #13 0x005fb65d in ap_run_process_connection (c=0x9ba1e98) at\n> > /usr/src/debug/httpd-2.2.9.2/phorm/server/connection.c:43\n> > #14 0x005fb75c in ap_process_connection (c=0x9ba1e98, csd=0x9ba1ce8) at\n> > /usr/src/debug/httpd-2.2.9.2/phorm/server/connection.c:178\n> > #15 0x006088cf in worker_thread (thd=0x9ac1ed0, dummy=0x9ac68f8) at\n> > /usr/src/debug/httpd-2.2.9.2/phorm/server/mpm/worker/worker.c:553\n> > #16 0x00130606 in dummy_worker (opaque=0x9ac1ed0) at\n> > threadproc/unix/thread.c:142\n> > #17 0x00ecf5ab in start_thread () from /lib/libpthread.so.0\n> > #18 0x0020bcfe in clone () from /lib/libc.so.6\n> > \n> > I suppose, the problem is in \"proxy_conn_scpool\" pool which gets destroyed\n> > prematurely like this:\n> > \n> > #0  ap_proxy_release_connection (proxy_function=0x253507 \"HTTP\",\n> > conn=0xa596200, s=0x9b25a18)\n> >     at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/proxy_util.c:1721\n> > #1  0x00250905 in ap_proxy_http_cleanup (scheme=0x0, r=<value optimized out>,\n> > backend=0x1)\n> >     at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy_http.c:1851\n> > #2  0x00250bc4 in proxy_http_handler (r=0x9e21e58, worker=0x9b2cb88,\n> > conf=0x9aa53a8, url=0xa2ea530 \"/\", proxyname=0x0, proxyport=0)\n> >     at /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy_http.c:1980\n> > #3  0x00258be6 in proxy_http_handler_wrapper (r=0x9e21e58, worker=0x9b2cb88,\n> > proxy_conf=0x9aa53a8, url=0x9e2328e \"http://xxx.xxx.xxx.xxx:3128/\",\n> >     proxyname=0x0, proxyport=0) at mod_proxysense.cpp:586\n> > #4  0x05765880 in proxy_run_scheme_handler (r=0x9e21e58, worker=0x9b2cb88,\n> > conf=0x9aa53a8, url=0x9e2328e \"http://xxx.xxx.xxx.xxx:3128/\", proxyhost=0x0,\n> >     proxyport=0) at\n> > /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy.c:2511\n> > #5  0x05769f83 in proxy_handler (r=0x9e21e58) at\n> > /usr/src/debug/httpd-2.2.9.2/phorm/modules/proxy/mod_proxy.c:1016\n> > \n> > It is destroyed with apr_pool_clear(p) (p is \"proxy_conn_pool\"). In the\n> > meantime, the brigade was set aside (in ap_core_output_filter()) with backend\n> \n> The buckets that are set aside are not part of a brigade created\n> with the proxy_conn_pool. They have been transfered previously via\n> ap_proxy_buckets_lifetime_transform to a brigade created with the request pool.\n> Pool lifetime management and code in the proxy code is really tricky.\n\nLife management is in trunk version but I did not found it in 2.2.9. Could that be that 2.2.9 have this bug?\n\n> You are running a 3rd party module. Does this crash also happen without it?\n\nThis is very rare crash and we not succeeded to reproduce it.", "id": 133923, "time": "2010-01-26T01:23:31Z", "bug_id": 48606, "creation_time": "2010-01-26T01:23:31Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 48606, "text": "(In reply to comment #5)\n\n> > > \n> > > It is destroyed with apr_pool_clear(p) (p is \"proxy_conn_pool\"). In the\n> > > meantime, the brigade was set aside (in ap_core_output_filter()) with backend\n> > \n> > The buckets that are set aside are not part of a brigade created\n> > with the proxy_conn_pool. They have been transfered previously via\n> > ap_proxy_buckets_lifetime_transform to a brigade created with the request pool.\n> > Pool lifetime management and code in the proxy code is really tricky.\n> \n> Life management is in trunk version but I did not found it in 2.2.9. Could that\n> be that 2.2.9 have this bug?\n\nCould be PR45792. This is fixed since 2.2.11.", "count": 6, "id": 133924, "time": "2010-01-26T01:51:42Z", "creator": "rpluem@apache.org", "creation_time": "2010-01-26T01:51:42Z", "is_private": false}, {"count": 7, "attachment_id": null, "creator": "asm@uezku.kemsu.ru", "is_private": false, "id": 134012, "time": "2010-01-29T02:00:57Z", "bug_id": 48606, "creation_time": "2010-01-29T02:00:57Z", "tags": [], "text": "Then closing\n\n*** This bug has been marked as a duplicate of bug 45792 ***"}]