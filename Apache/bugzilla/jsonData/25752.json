[{"count": 0, "tags": [], "creator": "suzuki@comnic.co.jp", "attachment_id": null, "text": "I tried recording web-access with HTTP Proxy and Recoding Controller and run it.\nBefore run it, I added HTTP Cookie Manager.\nTarget is Tomcat's Servlet Examples.\nRecorded access is:\n  1) /index.jsp\n  2) /examples/servlets/index.html\n  3) /examples/servlet/SessionExample\n  4) /examples/servlet/SessionExample with parameter\n  5) /examples/servlet/SessionExample with other parameter\nWhen run it, 3),4) and 5) must be on the same session, but result is NOT.\n\nI looked at \"View Results in Tree\" and check cookie:\n  1) receive: Set-Cookie: JSESSIONID=<<cookie1>>; path=/\n  3) send   : Cookie: JSESSIONID=<<cookie1>>\n     receive: Set-Cookie: JSESSIONID=<<cookie2>>; path=/examples\n  4) send   : Cookie: JSESSIONID=<<cookie1>>\n                      JSESSIONID=<<cookie2>>\n     receive: Set-Cookie: JSESSIONID=<<cookie3>>; path=/examples\n  5) send   : Cookie: JSESSIONID=<<cookie1>>\n                      JSESSIONID=<<cookie3>>\n     receive: Set-Cookie: JSESSIONID=<<cookie4>>; path=/examples\n\nIn RFC2965 \"HTTP State Management Mechanism\" Section 3.3.4,\n> If multiple cookies satisfy the criteria above, they are ordered in\n> the Cookie header such that those with more specific Path attributes\n> precede those with less specific.\n\nAbove 4) and 5) sending cookie isn't suitable for that, so Tomcat would confused.\n4) sending must be:\n  4) send   : Cookie: JSESSIONID=<<cookie2>>\n                      JSESSIONID=<<cookie1>>\nI think that should be fixed.\n\nRemoving 1) from TestPlan and run it,  3), 4) and 5) is on the same session,\nand 4) and 5) don't receive Set-Cookie: header, that is workaround.", "id": 49681, "time": "2003-12-25T02:33:44Z", "bug_id": 25752, "creation_time": "2003-12-25T02:33:44Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 25752, "attachment_id": null, "id": 49731, "time": "2003-12-27T10:21:14Z", "creator": "jsalvata@atg.com", "creation_time": "2003-12-27T10:21:14Z", "is_private": false, "text": "Also from RFC 2109:\n\u00ab\n   The value of the cookie-version attribute must be the value from the\n   Version attribute, if any, of the corresponding Set-Cookie response\n   header.  Otherwise the value for cookie-version is 0.  The value for\n   the path attribute must be the value from the Path attribute, if any,\n   of the corresponding Set-Cookie response header.  Otherwise the\n   attribute should be omitted from the Cookie request header.  The\n   value for the domain attribute must be the value from the Domain\n   attribute, if any, of the corresponding Set-Cookie response header.\n   Otherwise the attribute should be omitted from the Cookie request\n   header.\n\u00bb\n\nI would, however, favour migrating to Jakarta Commons HTTPClient rather than\nfixing this in our Cookie Manager."}, {"count": 2, "tags": [], "text": "I had to solve this problem urgently. I am not sure whether my solution poses \nproblems in other places (I am not sure how well it works for very similar \ncookies), but for the sake of anybody who runs into the described problem and \nneeds a quick fix, I will attach a modified Cookie Manager which orders Cookies \nin the right fashion. This is done by comparing the lengths of the paths of the \ncookies (again, I am not sure how general this solution is).\nThe changes are on top of version 1.21 of CookieManager from CVS; it should \ncompile with the sources from release 1.9.1 of jmeter.", "attachment_id": null, "id": 52100, "creator": "fischer@seitenbau.de", "time": "2004-02-11T10:50:07Z", "bug_id": 25752, "creation_time": "2004-02-11T10:50:07Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 25752, "text": "Created attachment 10310\nChanged CookieManager.java for correct Cookie ordering", "id": 52101, "time": "2004-02-11T10:52:49Z", "creator": "fischer@seitenbau.de", "creation_time": "2004-02-11T10:52:49Z", "is_private": false, "attachment_id": 10310}, {"count": 4, "tags": [], "bug_id": 25752, "text": "I've been reading the submitted code. It's a solution, but my perception is\nthat, as it is, it introduces significant overhead --both memory and CPU-wise--\non every request, even in the case where there's no ordering issues. A proper\nsolution should probably rely on pre-ordering the cookies as they are added to\nthe manager, or at least use an ordering technique with minimal overhead for the\ntrivial cases (e.g. the case with only 1 cookie to 'order').\n\nAlso note that the CookiePathComparator should cache the CookieNameComparator it\nuses, rather than creating a new one every time.", "id": 52127, "time": "2004-02-11T15:03:03Z", "creator": "jsalvata@atg.com", "creation_time": "2004-02-11T15:03:03Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "The code now uses Commons HttpClient to do the cookie management.\n\nThe changes are in SVN, and will appear in the next nightly and release 2.1.2", "id": 89723, "time": "2006-06-03T00:14:29Z", "bug_id": 25752, "creation_time": "2006-06-03T00:14:29Z", "is_private": false}]