[{"count": 0, "tags": [], "bug_id": 40897, "attachment_id": null, "is_private": false, "id": 95441, "time": "2006-11-05T07:06:11Z", "creator": "vmahajan@amberpoint.com", "creation_time": "2006-11-05T07:06:11Z", "text": "There has already been discussion on this issue on the project mailing list.\nhere's the email thread:\n\n----------------------------------------------------------------------------\nHi Sean,\n\nThe penalty hit is taken when the strings are not equal, sadly of the\nsame length.\nAnd have a lot of common begging characters. That is sadly a common\nproblem with namespaces URI, they are more or less equal in length and\nhave a lot of damn http://.../... or urn:....: whatever at the\nbegining. And that is why Xerces and other DOM implementations  intern\nnamespaces URI.\n\nI have profile and it takes a lot of time.\nMy point is that all the parsers I know do the intern (or it did when\nI do the implementation). And this is an old commit 8 months old(it is\ntrue that it is not yet on a official release), and it takes a\nmeasurable hit if not use in small messages(the kind of one that are\nin xml protocols).\n\nSo I will first check other options (change the configuration of the\noffending parser with a\nfeature[http://xerces.apache.org/xerces2-j/features.html] ).\nIf it does not work I will change from == to equals, but I will let\nthis as last resort.\n\nOn 10/5/06, Sean Mullan <Sean.Mullan@sun.com> wrote:\n> String.equals will work for both interned and non-interned Strings,\n> since it first checks if they are a reference to the same object. So\n> using String.equals seems safer and should be comparable performance I\n> would think. But maybe I'm missing something?\n>\n> --Sean\n>\n> Vishal Mahajan wrote:\n> > Do others also have views on this discussion?\n> >\n> > Thanks,\n> > Vishal\n> >\n> > Vishal Mahajan wrote:\n> >> Hi Raul,\n> >>\n> >> The parser that I am working with clearly doesn't intern element\n> >> namespace strings which is the reason I ran into this problem. And\n> >> actually I am not sure whether it's a good idea for a parser to intern\n> >> element namespace strings given that there could be huge number of\n> >> elements being parsed and there's a potential risk of running out of\n> >> memory. Also you mention that xerces might be interning namespace\n> >> stings but looking at their code I was unable to find that. Can you\n> >> point me to the relevant piece of code?\n> >>\n> >> Thanks,\n> >>\n> >> Vishal\n> >>\n> >> Raul Benito wrote:\n> >>> Vishal the problem is that this codes is called gazillion of times,\n> >>> and even it\n> >>> seems a small thing, it takes a lot of accumulated time, I even think\n> >>> in remove this checking altogether or control it by a property.\n> >>> Perhaps there is a feature set in your DOM parser that interns the\n> >>> namespaces. I have test with several DOM parsers (xerces, xmlbeans,\n> >>> jaxb) and all of them the namespaces strings are interns.\n> >>> If you are not able too toggle the behavior, We can begin to think in\n> >>> other possibilities (create code on the fly, create an interface with\n> >>> one implementation or the other a let the JVM inline it). But I think\n> >>> will be the last resort.\n> >>>\n> >>> Regards,\n> >>> Raul\n> >>>\n> >>> On 10/2/06, Vishal Mahajan <vmahajan@amberpoint.com> wrote:\n> >>>> Any signature verification was failing for me, and I have a different\n> >>>> DOM implementation in my environment, so probably you are right. It was\n> >>>> such a basic error that it had to be something like this. In any\n> >>>> case, I\n> >>>> think we should keep string comparison safe.\n> >>>>\n> >>>> Vishal\n> >>>>\n> >>>> Raul Benito wrote:\n> >>>> > Hi Vishal,\n> >>>> >\n> >>>> > The namespaces strings are intern, at least in xerces.\n> >>>> >\n> >>>> > Can you post the code that is failing?\n> >>>> >\n> >>>> > On 10/2/06, Vishal Mahajan <vmahajan@amberpoint.com> wrote:\n> >>>> >> This problem was not allowing successful creation of signature space\n> >>>> >> elements. Fix attached.\n> >>>> >>\n> >>>> >> Vishal\n----------------------------------------------------------------------------"}, {"count": 1, "tags": [], "bug_id": 40897, "is_private": false, "text": "Created attachment 21336\nFirst draft for a pluggable string checker.\n\nPlease take a look a the patch, I want feed back on the solution.Also I don't\nhave anyother DOM parser that don't intern namespaces, this should fix the\nproblem, but perhaps there are more places where this problem arise.", "id": 112369, "time": "2008-01-01T08:49:49Z", "creator": "raul-info@r-bg.com", "creation_time": "2008-01-01T08:49:49Z", "attachment_id": 21336}, {"count": 2, "tags": [], "bug_id": 40897, "attachment_id": null, "text": "I've run into this problem while running under WebLogic (the same app runs fine on Tomcat).\n\nWould it be possible to do a quick == comparison, and then only do .equals if it fails?\n\nWould interning all namespaces mean that an attacker could cause the server to run out of memory by sending requests which contain lots of random namespaces?", "id": 114474, "time": "2008-03-10T16:18:25Z", "creator": "r.egglestone@auckland.ac.nz", "creation_time": "2008-03-10T16:18:25Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 40897, "attachment_id": null, "text": "Can this be a case of \"the flawed microbenchmark\".  (google it).  .equals is slower but on the whole operation (signing, encryption, etc) the XML time is mostly spent on parsing and serialization I would guess.  And I'm skipping the cryptographic primitives...\n\nI wonder what the test case is.", "id": 114478, "time": "2008-03-10T22:22:49Z", "creator": "ashundi@tibco.com", "creation_time": "2008-03-10T22:22:49Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 40897, "attachment_id": null, "text": "(In reply to comment #3)\n> Can this be a case of \"the flawed microbenchmark\".  (google it).  .equals is\n> slower but on the whole operation (signing, encryption, etc) the XML time is\n> mostly spent on parsing and serialization I would guess.  And I'm skipping the\n> cryptographic primitives...\n> \n> I wonder what the test case is.\n> \n\nI have do a lot of benchamark and really this is a huge improve. I can tell you why but it will be a big post. And I have do my exercises, and i benchmark the whole operation. Anyway 2 releases ago it was plain impossible to use another parser than xerces (and really a concrete one), we have improve it til the way that now, only this is possible and works with different ones that intern namespaces. \n\nAnyway i think that sadly for a fully spec compliant there is no other options than a special xalan+xerces (for xpath transformations).\n\nBut I still that if a parser doesn't intern namespaces will be hit by a lot of just a difference in the end, that happens with versioning in xml. I just create the patch in order to disable the NS comparison.\n\n\n ", "id": 116423, "time": "2008-05-09T08:00:53Z", "creator": "raul-info@r-bg.com", "creation_time": "2008-05-09T08:00:53Z", "is_private": false}, {"count": 5, "tags": [], "creator": "sean.mullan@oracle.com", "attachment_id": null, "id": 119859, "time": "2008-08-15T10:19:47Z", "bug_id": 40897, "creation_time": "2008-08-15T10:19:47Z", "is_private": false, "text": "*** Bug 45573 has been marked as a duplicate of this bug. ***"}, {"count": 6, "tags": [], "bug_id": 40897, "attachment_id": null, "text": "*** Bug 46681 has been marked as a duplicate of this bug. ***", "id": 140774, "time": "2010-10-16T06:56:35Z", "creator": "lajoie@apache.org", "creation_time": "2010-10-16T06:56:35Z", "is_private": false}, {"count": 7, "tags": [], "creator": "lajoie@apache.org", "attachment_id": null, "text": "In rev 1023243 I committed an update that I believe catches all the places that\n== is used for string comparisons and replaces it with equals().  I also\ndeprecated org.apache.xml.security.utils.ElementChecker and\norg.apache.xml.security.utils.ElementCheckerImpl which were used to attempt to\nhide the difference between equals() and ==\n\nThis should resolve this issues unless I missed an occurrence.  It would be\nreally helpful if those individuals who commented on this issues who are not\nusing Xerces could run unit test\norg.apache.xml.security.test.c14n.implementations.Canonicalizer20010315ExclusiveTest\nand let us know if this issue isn't resolved.", "id": 140775, "time": "2010-10-16T07:03:50Z", "bug_id": 40897, "creation_time": "2010-10-16T07:03:50Z", "is_private": false}, {"count": 8, "tags": [], "creator": "coheigea@apache.org", "attachment_id": null, "text": "*** Bug 48681 has been marked as a duplicate of this bug. ***", "id": 140788, "time": "2010-10-17T14:54:16Z", "bug_id": 40897, "creation_time": "2010-10-17T14:54:16Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 40897, "is_private": false, "text": "*** Bug 44874 has been marked as a duplicate of this bug. ***", "id": 140790, "time": "2010-10-17T14:55:21Z", "creator": "coheigea@apache.org", "creation_time": "2010-10-17T14:55:21Z", "attachment_id": null}]