[{"count": 0, "tags": [], "bug_id": 45283, "text": "Apparently, the current approach (per the code in authenticatorConfig() method of org.apache.catalina.startup.ContextConfig class) is to restrict only one authenticator per pipeline.\n\nWhile this may seem logical, practical requirements may want to add multiple authenticators and the actual authentication may be handled by either one of them or multiple of them, depending on the requirements.\n\nFor example, if you allow a certificate authenticator (say custom) and a BASIC authenticator in the pipeline, the certificate authenticator may apply only for certain URIs, and the BASIC authenticator may apply for some other URIs.\n\nAnother example is that - in a specific installation - both of them might apply to any given request - meaning that the request has to have a good certificate as well as a good username/password.\n\nThis philosophy can be seen similar to the philosophy of having multiple valves in the pipeline.", "id": 117994, "attachment_id": null, "creator": "techrams@yahoo.com", "creation_time": "2008-06-25T16:05:40Z", "time": "2008-06-25T16:05:40Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "The enhancement as described is not possible since the servlet spec only allows a single authenticator to be configured per web-app.\n\nWhat would be possible would be a realm that uses one method by default and falls back to a second if the first fails.", "id": 118008, "time": "2008-06-26T07:57:01Z", "bug_id": 45283, "creation_time": "2008-06-26T07:57:01Z", "is_private": false}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> The enhancement as described is not possible since the servlet spec only allows\n> a single authenticator to be configured per web-app.\n> \n> What would be possible would be a realm that uses one method by default and\n> falls back to a second if the first fails.\n> \n\nI am not sure if you are referring to the login-config entries in a web-app, or to the way we add valves (which at the same time can be implemntors of Authenticator). Either way, I do not see Servlet spec having any constraint. Though the actual result is implementation specific, I noticed that the Schema itself does not prevent a web-app from having multiple login-config entries. \nPlease clarify.", "attachment_id": null, "id": 118031, "creator": "techrams@yahoo.com", "time": "2008-06-26T13:55:10Z", "bug_id": 45283, "creation_time": "2008-06-26T13:55:10Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 45283, "text": "SRV.13.2. states that more than one login-config is an error.", "id": 118033, "time": "2008-06-26T14:12:47Z", "creator": "markt@apache.org", "creation_time": "2008-06-26T14:12:47Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "albrecht@a-weinert.de", "text": "It seems that two things are discussed here in one plase:\n\n 1  multiple authenitcators  (this is no comment to hereto) \n 2  realm chaining\n\n2 is often quite necessary and not (yet?) done in Tomcat.\n\nconfigurable realm chaining would be the real answer to\n\"What would be possible would be a realm that uses one method by default and\nfalls back to a second if the first fails.\"\n\nWriting such realm is a workaround   as e.g. de.a_weinert.realm.ADweRealm\n(l)\nfalls in this category.\nIt authenticates against an Active Directory using all direct and (multilevel) indirect groups as roles. If the user is not in the AD (company member) it will\nfall back to a simple LDAP/JNDI (for e.g. guest members).\n\nOf course, en lieu of making ADweRealm falling back to a supplementary LDAP it would be much better to have it being chained (by Tomcat config) to any next realm.\n\nURLs (javadoc, source, background):\nhttp://www.a-weinert.de/java/docs/aWeinertBib/de/a_weinert/realm/ADweRealm.htm\nhttp://www.a-weinert.de/java/docs/aWeinertBib/de/a_weinert/doc-files/ADweRealm.java\nhttp://www.a-weinert.de/weinert/pub/tomcat-win-ad.pdf (German)", "id": 118052, "time": "2008-06-27T00:38:09Z", "bug_id": 45283, "creation_time": "2008-06-27T00:38:09Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 45283, "text": "(In reply to comment #3)\n> SRV.13.2. states that more than one login-config is an error.\n> \n\nWell...IMHO, we are getting hung-up on the semantics of multiple authenticators Vs multiple login-configs. I would like to think of these two as two distinct, though connected, topics.\nI can understand why multiple login-config entries should result in an error - as the login-config itself does not define how multiple entries can be chained and what  protocol they need to use when each entry in the chain is invoked. A contrast will be the JAAS model, where the contract is defined and clear.\n\nHowever, we can treat the chaining of multiple authenticators differently - as authenticators are an implementation of Tomcat, and it can define the contract and expected behavior. Also, please note that multiple authenticators are configured not because of multiple login-config entries, but because of entries in the context.xml , server.xml, or both. These are configurations are defined by Tomcat and thus it has control on what can done there.", "id": 118076, "time": "2008-06-27T13:29:57Z", "creator": "techrams@yahoo.com", "creation_time": "2008-06-27T13:29:57Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 45283, "text": "(In reply to comment #4)\nIt is possible that Realm chaining can address the requirement - however, I feel that the current authenticate methods in the Realm interface are too restrictive. They need to mirror the support we have for the invoke method in the Valve interface (that is make the request and response objects available).\n\nThe reason being that we need to be able to extend authentication beyond username/credential/certificate. Some authentication schemes may require more data than just these. Making the request object available will alleviate the problem.\n\nAlso, the response behavior after a successful/failed authentication may need to be tailored. This may require that the response object also be made available.\n\nMaking the request and response objects available to the realm authenticators will solve a large set of problems.\n\n", "id": 118077, "time": "2008-06-27T13:37:38Z", "creator": "techrams@yahoo.com", "creation_time": "2008-06-27T13:37:38Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 45283, "attachment_id": null, "id": 118197, "time": "2008-07-02T10:56:37Z", "creator": "djencks@apache.org", "creation_time": "2008-07-02T10:56:37Z", "is_private": false, "text": "Most of the concerns here would be addressed by implementing the jaspi spec which is likely to be required for java ee 6 compliance.  In particular it supports non-web-xml vendor specific configuration of authentication modules, multiple authentication modules, and supplying the request and response message objects to the authentication modules.\n\nIf no one beats me to it I'm likely to look into this later this summer."}, {"count": 8, "text": "(In reply to comment #7)\n> Most of the concerns here would be addressed by implementing the jaspi spec\n> which is likely to be required for java ee 6 compliance.  In particular it\n> supports non-web-xml vendor specific configuration of authentication modules,\n> multiple authentication modules, and supplying the request and response message\n> objects to the authentication modules.\n> \n> If no one beats me to it I'm likely to look into this later this summer.\n> \n\nYes, I agree. ", "bug_id": 45283, "attachment_id": null, "id": 118248, "time": "2008-07-03T13:01:01Z", "creator": "techrams@yahoo.com", "creation_time": "2008-07-03T13:01:01Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "This was implemented for TomEE which is available from the Apache OpenEJB project.", "id": 152825, "time": "2012-01-16T12:08:28Z", "bug_id": 45283, "creation_time": "2012-01-16T12:08:28Z", "is_private": false}]