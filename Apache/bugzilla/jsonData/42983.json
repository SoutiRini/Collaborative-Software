[{"count": 0, "tags": [], "bug_id": 42983, "attachment_id": null, "id": 105975, "time": "2007-07-26T12:29:50Z", "creator": "jorge.williams@inl.gov", "creation_time": "2007-07-26T12:29:50Z", "is_private": false, "text": "I'm developing a tag library. The tag library is written to the 1.2 spec as it\nshould work in both JSP 1.2 and JSP 2.0 platforms.  Under Tomcat 5.5.23 I get an\nexception when trying to set a string attribute named \"class\".  The exception\nsuggests that a setter method cannot be found, but I'm sure that the setter\nmethod  is available especially since when I deploy the same application under\nWebLogic 9 it works fine.  I wasn't able to find anything in the JSP 1.2 spec\nthat says that \"class\" is a reserved attribute so I'm not sure what the problem\nis.  I've noticed the same problem under several versions of Tomcat 4.\n\nEXCEPTION FOLLOWS:\n\norg.apache.jasper.JasperException: /index.jsp(27,31) Unable to find setter\nmethod for attribute: class\n\torg.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:40)\n\torg.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:407)\n\torg.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:148)\n\torg.apache.jasper.compiler.Generator$GenerateVisitor.evaluateAttribute(Generator.java:2722)\n\torg.apache.jasper.compiler.Generator$GenerateVisitor.generateSetters(Generator.java:2875)\n\torg.apache.jasper.compiler.Generator$GenerateVisitor.generateCustomStart(Generator.java:2188)\n\torg.apache.jasper.compiler.Generator$GenerateVisitor.visit(Generator.java:1686)\n\torg.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1442)\n\torg.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\torg.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2214)\n\torg.apache.jasper.compiler.Generator$GenerateVisitor.visit(Generator.java:1706)\n\torg.apache.jasper.compiler.Node$CustomTag.accept(Node.java:1442)\n\torg.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\torg.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2214)\n\torg.apache.jasper.compiler.Node$Visitor.visit(Node.java:2225)\n\torg.apache.jasper.compiler.Node$JspRoot.accept(Node.java:526)\n\torg.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\torg.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:2214)\n\torg.apache.jasper.compiler.Node$Visitor.visit(Node.java:2220)\n\torg.apache.jasper.compiler.Node$Root.accept(Node.java:457)\n\torg.apache.jasper.compiler.Node$Nodes.visit(Node.java:2164)\n\torg.apache.jasper.compiler.Generator.generate(Generator.java:3322)\n\torg.apache.jasper.compiler.Compiler.generateJava(Compiler.java:199)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:296)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:277)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:265)\n\torg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:564)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:299)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:315)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:265)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:803)"}, {"count": 1, "tags": [], "creator": "jorge.williams@inl.gov", "is_private": false, "text": "I should note that I've tried redeploying the application several times as well\nas starting and stopping the server before redeploying the problem still persists. ", "id": 105976, "time": "2007-07-26T12:32:57Z", "bug_id": 42983, "creation_time": "2007-07-26T12:32:57Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Every Java object has a getClass method, which returns a Class object that\nindicates the object's type. Your getClass and/or setClass methods are\nconflicting with the 'standard' getClass method.\n\nBasically the introspector is seeing the standard getClass first, and sees\nthere's no matching setClass that takes a Class object. It therefore treats\nclass as a read-only property, hence the \"Unable to find setter method\" error.\nYou do have a setClass method, it's just that it doesn't take a Class parameter.\n\nI imagine that on WebLogic, the introspection sees your setClass method first\nand therefore treats \"class\" as a writable property.\n\nTo avoid this kind of problem, you should change your property name to \"className\".", "attachment_id": null, "id": 106820, "creator": "asf-bugzilla@richardfearn.co.uk", "time": "2007-08-16T04:36:44Z", "bug_id": 42983, "creation_time": "2007-08-16T04:36:44Z", "is_private": false}]