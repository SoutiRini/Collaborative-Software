[{"count": 0, "tags": [], "bug_id": 47329, "text": "Created attachment 23770\nPerl utility to create Client Request file from concatenated certificates\n\nThe documentation for SSLCADNRequest* (and probably the SSL HOWTO) should indicate that TRUSTED certificates can not be used.\n\nThe documentation for SSLCACertificate* should indicate that while TRUSTED certificates can be used for verification by the server, they will not be sent to the client.\n\nIt turns out that my CA certificate is marked TRUSTED (e.g. begins with --BEGIN TRUSTED CERTIFICATE).  mod_ssl is perfectly happy to accept such certificates, but they are never sent to the client; openssl s_client will report \"No certificate names sent\".  There is no warning in any of the logfiles; the directive is silently ignored, although the files are read.\n\nThis is astoundingly confusing, since such certificates work perfectly well with SSLCACertificate* - they work as expected!\n\nI think this is a documentation defficiency, although one might argue (after a lot of debugging) that a warning is deserved.\n\nIn general, I found the documentation of the SSL*Certificate* directives very confusing because it is so terse.  It would be helpful to emphasize that:\n\nSSLCertificate* define the server's certificate & it's authentication chain\n\nSSLCACertificate* define the Client's certificate issuers that are acceptable to the server.  Intermediate CAs are not required.\n\nSSLCADNRequest* define the certificate issuers that the Client will be told to select, and should include any Intermediate CAs.\n\nI wrote a small perl script that will convert a file containing any number of certificates into a format that's acceptable to SSLCADNRequestFile (and openssl!).  It removes any trust from each certificate, and includes the subject, issuer, and fingerprint as comments.  Perhaps it will be useful to someone else - it's attached to this report.", "id": 127716, "time": "2009-06-07T07:13:51Z", "creator": "tlhackque@yahoo.com", "creation_time": "2009-06-07T07:13:51Z", "is_private": false, "attachment_id": 23770}, {"count": 1, "tags": [], "bug_id": 47329, "text": "I should have mentioned the environment:\n\nOpenSSL/0.9.8b Fedora core 6", "id": 127719, "time": "2009-06-07T07:57:51Z", "creator": "tlhackque@yahoo.com", "creation_time": "2009-06-07T07:57:51Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 47329, "text": "The more I think about this, the more convinced I become that an error message (or a fix) is required.\n\nThe user is supplying a valid certificate that httpd is not able to process.  Httpd doesn't behave as expected.  \n\nI lived without the correct information being sent to by clients' browsers for several years (yes, years) until I was finally able to get traces showing that the valid CA messages weren't being sent.  It was particularly confusing as an administrator, as when using SSLCACertificate*, the certificate was used correctly by httpd for one purpose, but not for another.  And of course, it only really impacts clients with more than one certificate to send...\n\nWhile the documentation should be improved, I don't think that's sufficient.\n\nArguably this can be pushed upstream to OpenSSL, as HTTPD seems to just pass the filename along.  Or HTTPD can validate the certificate itself.  But someone, somewhere in the chain needs to detect this error, and httpd needs to ultimately report it.  Silently ignoring a valid certificate isn't acceptable.", "id": 128230, "time": "2009-06-24T08:29:35Z", "creator": "tlhackque@yahoo.com", "creation_time": "2009-06-24T08:29:35Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 47329, "text": "Created attachment 23876\ntest patch\n\nIf you apply this patch, do you get errors logged when loading the bogus certs?", "id": 128265, "time": "2009-06-25T01:54:22Z", "creator": "jorton@redhat.com", "creation_time": "2009-06-25T01:54:22Z", "is_private": false, "attachment_id": 23876}, {"count": 4, "tags": [], "creator": "tlhackque@yahoo.com", "attachment_id": null, "id": 128271, "creation_time": "2009-06-25T05:34:03Z", "time": "2009-06-25T05:34:03Z", "bug_id": 47329, "text": "Thanks, that's progress:\n\nI commented-out SSLCADNRequestFile (leaving it to default to SSLCACertificateFile, which has the trust).\n\nNow get these errors, and httpd doesn't start:\n\n[Thu Jun 25 08:08:12 2009] [error] SSL Library Error: 151441516 error:0906D06C:PEM routines:PEM_read_bio:no start line Bad file contents or format - or even just a forgotten SSLCertificateKeyFile?\n[Thu Jun 25 08:08:12 2009] [error] SSL Library Error: 151441516 error:0906D06C:PEM routines:PEM_read_bio:no start line Bad file contents or format - or even just a forgotten SSLCertificateKeyFile?\n\nNot sure why I get two errors, but two is better than none!\n\nIf I re-enable SSLCADNRequestFile, neither error appears and httpd starts normally.\n\nWould be great if it reported the directive & filename; ideal if also the config filename/locn.\n\nI'll attach a .zip file with both certificates to facilitate testing.\n\nThanks for your help.  I'm sure this will save other people some pain & suffering!", "is_private": false}, {"count": 5, "tags": [], "creator": "tlhackque@yahoo.com", "attachment_id": 23878, "is_private": false, "id": 128272, "time": "2009-06-25T05:39:43Z", "bug_id": 47329, "creation_time": "2009-06-25T05:39:43Z", "text": "Created attachment 23878\nCertificates that exhibit this problem\n\nHere is the trusted certificate & the same certificate with trust removed (using the perl script previously attached.)  You can use these to validate your patch.\n\n\nArchive:  47329.zip\n Length   Method    Size  Ratio   Date   Time   CRC-32    Name\n--------  ------  ------- -----   ----   ----   ------    ----\n    1996  Defl:N     1019  49%  09-04-07 09:36  1551832f  etc/pki/tls/ca/litts_net_ca-cert.pem\n    2262  Defl:N     1150  49%  06-07-09 09:38  8916e5cb  etc/pki/tls/certs/litts_net_client_cas.pem\n--------          -------  ---                            -------\n    4258             2169  49%                            2 files\n\nopenssl x509 -noout -text -in /etc/pki/tls/ca/litts_net_ca-cert.pem -out t1.tmp\nopenssl x509 -noout -text -in /etc/pki/tls/certs/litts_net_client_cas.pem -out t2.tmp\ndiff t1.tmp t2.tmp\n60,63d59\n< Trusted Uses:\n<   TLS Web Client Authentication, TLS Web Server Authentication, E-mail Protection\n< No Rejected Uses.\n< Alias: litts.net Primary Certification Authority"}, {"count": 6, "tags": [], "bug_id": 47329, "attachment_id": null, "id": 128295, "time": "2009-06-25T13:59:03Z", "creator": "tlhackque@yahoo.com", "creation_time": "2009-06-25T13:59:03Z", "is_private": false, "text": "(Follow-up to comment #4)\nTwo errors >are< expected - I have two virtual hosts in the server that I tested; a common included config file supplies these directives.\n\nYou've definitely caught the error; if the output were a bit cleaner (and the doc updated), I'd be very happy with the fix.\n\nThanks again for your efforts."}, {"count": 7, "tags": [], "creator": "tlhackque@yahoo.com", "attachment_id": 23889, "text": "Created attachment 23889\nPatch with better error report\n\nThere may be a better way to code it, but here's a version of the test patch that reports the offending filename, as in:\n\n[Sat Jun 27 04:59:39 2009] [error] Failed to load client CA certificate from /etc/pki/tls/ca/litts_net_ca-cert.pem, SSL library error:\n[Sat Jun 27 04:59:39 2009] [error] SSL Library Error: 151441516 error:0906D06C:PEM routines:PEM_read_bio:no start line Bad file contents or format - or even just a forgotten SSLCertificateKeyFile?\n\nI'm not sure how to get back to the config file/directive, but at least this gives the filename and why it's being loaded...", "id": 128334, "time": "2009-06-27T02:12:26Z", "bug_id": 47329, "creation_time": "2009-06-27T02:12:26Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 47329, "text": "In reviewing my local patches and SVN trunk, I noticed that nothing has been done about this.\n\nCould someone at least check-in the last \"test\" patch?\n\nIt would be nice if the error could report the offending config file/directive, but the patch as-is (attached 2009-06-27 02:12 EDT) is a vast improvement over silent failures.\n\n--thanks.", "id": 145440, "time": "2011-03-31T16:05:41Z", "creator": "tlhackque@yahoo.com", "creation_time": "2011-03-31T16:05:41Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 47329, "text": "Hmmm, it looks as though Bug 40312 is related.  A patch was proposed and checked-in there which only addresses 1/2 the cases, although analyzing it turned up problems with the patch here.  See my comments at https://issues.apache.org/bugzilla/show_bug.cgi?id=40312.\n\nNote, however, that the documentation issue (\"TRUSTED certificates can't be used\") was not addressed there.", "id": 145446, "time": "2011-03-31T21:17:40Z", "creator": "tlhackque@yahoo.com", "creation_time": "2011-03-31T21:17:40Z", "is_private": false, "attachment_id": null}]