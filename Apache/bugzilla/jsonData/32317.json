[{"count": 0, "tags": [], "bug_id": 32317, "text": "Making mod_jk replication aware (Clustering Support)\n\nAt the moment mod_jk makes it's load-balancing decisions to workers according to\nthe following parameters:\n\n- session-stickyness (choose the \"only\" right worker)\n- locality (one worker is preferred)\n- weight-based\n\nWhat is missing, is any information about secondary cluster nodes.\n\nUse Case 1: Horizontal scalability and performance of tomcat cluster\n\nTomcat cluster does only allow session replication to all nodes in the cluster.\nOnce you work with more than 3-4 nodes there is too much overhead and risk in\nreplicating sessions to all nodes. We split all nodes into clustered groups. I\nintroduced a new worker attribute \"domain\" to let get_most_suitable_worker in\nmod_jk know, to which other nodes a session gets replicated (all workers with\nthe same value in the domain attribute). So a load balancing worker knows, on\nwhich nodes the session is alive. If a node fails or is being taken down\nadministratively, mod_jk chooses another node that has a replica of the session.\n\nUse Case 2: Prevent thread count explosion\n\nOnce mod_jk connects an apache process to a tomcat instance, the tomcat jk\nconnector will need one thread for this connection as long as the apache process\nis alive, independent from the number of requests apache actually sends to tomcat.\n\nNow assume you have multiple Apaches and Tomcats. The Tomcats are clustered and\nmod_jk uses sticky sessions. Now you are going to shut down (maintenance) one\ntomcat. All Apache will start connections to all tomcats. You end up with all\ntomcats getting connections from all apache processes, so the number of threads\nneeded inside the tomcats will explode.\n\nIf you group the tomcats to domain as in use case 1, the connections normally\nwill stay inside the domain and you will need much less threads. \n\nImplementation\n\nThe implementation uses and additional worker attribute domain, and if a\nsession has a jvmRoute, is sticky and the correct worker is in error state\nanother worker with the same domain attribute is chosen.\n\nI have an implementation based on mod_jk 1.2.6 running successfully in\nproduction, but I would have to adapt to the 1.2.7 code changes. The\nimplementation would only concern common/jk_util.c for the additional\nconfiguration worker attribute \"domain\" and common/jk_lb_worker.c for using the\nattribute \n   - with stickyness in case the primary worker is down to first seek for some\nother worker with the same domain attribute. \n   - without stickyness to decide to which workers an existing session is\nallowed to be balanced (all workers with the same domain as the worker given in\nthe session id)\n\nI could provide the code, if you are interested.\n\nHere is a more concrete example:\n\nEnterprise application with redundant internet connections A and B.\nA consists of two Apache instances A.a1 und A.a2, B of B.a1 and B.a2.\nBehind are 4 Tomcat A.t1, A.t2, B.t1, B.t2.\n\nA.t1 and A.t2 are clustered, B.t1 and B.t2 are clustered. mod_jk uses load\nbalancing with sticky sessions.\n\nAll Apaches can connect to any Tomcat, but A.t1 is local for A.a1, A.t2\nfor A.a2, B.t1 for B.a1 and B.t2 for B.a2:\n\nA.a1   A.a2   B.a1   B.a2\n ||  X  ||  X  ||  X  ||\nA.t1---A.t2   B.t1---B.t2\n\nA.t1 and A.t2 are put into the same \"domain\" \"A\" in workers.properties,\nB.t1 and B.t2 are put into the same \"domain\" \"B\" in workers.properties.\n\nNow if you shutdown e.g. tomcat B.t1 for service/update (or if it breaks)\nAll apaches will know from the domain configuration, that sticky requests\nfor B.t1 have to go to B.t2. This is important, since only on that tomcat\nthe replicated sessions from B.t1 will exist.\n\nWithout domains you have to put all the Tomcats in one cluster. But then\nall sessions are replicated to all tomcats. We have a production side\nusing 3x3=9 tomcats and a cluster with 9 nodes would mean too much\noverhead.", "id": 67212, "time": "2004-11-19T13:53:50Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2004-11-19T13:53:50Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 32317, "text": "Very fine idea, please send the patches!\n\nregards\npeter", "count": 1, "id": 67291, "time": "2004-11-21T09:53:35Z", "creator": "pr@objektpark.de", "creation_time": "2004-11-21T09:53:35Z", "is_private": false}, {"attachment_id": 13650, "tags": [], "bug_id": 32317, "text": "Created attachment 13650\nAdd hierarchical routing to load balancer\n\nThe attached patch concerns jk_lb_worker.c and jk_util.c.\nIt introduces the following features:\n\n- additional property \"domain\" for workers in workers.properties\n- Make routing decision hierarchical:\na) sticky worker if not in error\nb) else worker from same domain\nc) else local worker\nd) else local domain (worker inside domain of one of the local workers)\ne) any other worker\n\n- erroneous non-sticky workers get chosen after recovery time only if their\nlb_value is maximum. Avoids continously decrementing lb_value for erroneous\nworkers.\n\nPatch was transformed from a patch for version 1.2.6. I did not yet have the\ntime to compile and test, but I know that at least Peter waits for it, so I\nsubmit it untested.\n\nIt's predecessor for 1.2.6 has been tested and in production for several weeks\nnow.", "count": 2, "id": 67954, "time": "2004-12-05T22:27:28Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2004-12-05T22:27:28Z", "is_private": false}, {"count": 3, "tags": [], "creator": "mturk@apache.org", "is_private": false, "text": "Rainer,\n\nCould you please run unified diff ('diff -u')?\nI can not use the patch otherwise.\n\nThanks.", "id": 67972, "time": "2004-12-06T09:35:58Z", "bug_id": 32317, "creation_time": "2004-12-06T09:35:58Z", "attachment_id": null}, {"attachment_id": 13658, "tags": [], "bug_id": 32317, "text": "Created attachment 13658\nSee former patch - now produced with diff -u\n\nNow in diff -u format. Had to update Solaris diff to gnu diff.", "count": 4, "id": 67993, "time": "2004-12-06T20:41:16Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2004-12-06T20:41:16Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 32317, "text": "Commited with small cosmetic modifications.\nThanks Rainer!\n\nIt would be great if you could write some docs or\nconfiguration examples", "count": 5, "id": 68041, "time": "2004-12-07T13:26:02Z", "creator": "mturk@apache.org", "creation_time": "2004-12-07T13:26:02Z", "is_private": false}, {"count": 6, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "is_private": false, "id": 68060, "time": "2004-12-07T18:19:15Z", "bug_id": 32317, "creation_time": "2004-12-07T18:19:15Z", "text": "Thank's a lot for accepting the patch. I hope it will not make too much trouble\nand I'm sure it will be helpful for really useful bigger cluster designs.\n\nDocumentation and examples config: I will provide in the next 5 days. Code\nwithout documentation is not very useful.\n"}]