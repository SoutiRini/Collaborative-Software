[{"count": 0, "tags": [], "creator": "kevin@kevlar.net", "attachment_id": null, "id": 64208, "time": "2004-09-25T03:58:07Z", "bug_id": 31418, "creation_time": "2004-09-25T03:58:07Z", "is_private": false, "text": "Because SSLUserName is implemented by a fixup hook, and fixup hooks happen \nafter auth and access check hooks, other modules (like mod_authz_svn) cannot \nuse this variable, since it isn't set until after they are done with \nauthentication. A simple solution would be to move this block of code from the \nfixup hook to the end of the ssl_hook_Access method:\n\n /*\n     * Set r->user if requested\n     */\n    if (dc->szUserName) {\n        val = ssl_var_lookup(r->pool, r->server, r->connection,\n                             r, (char *)dc->szUserName);\n        if (val && val[0]) {\n            r->user = val;\n        }\n    }\n\nThen, the module can register the hook after mod_ssl.c and get the user \nvariable."}, {"count": 1, "tags": [], "bug_id": 31418, "attachment_id": null, "text": "I don't think anyone really wanted SSLUserName to be supposed to be a substitute\nfor really doing authentication.  If you want that, you can use FakeBasicAuth. \n SSLUserName was really just supposed to fix the logging problem.", "id": 64810, "time": "2004-10-08T07:23:05Z", "creator": "jorton@redhat.com", "creation_time": "2004-10-08T07:23:05Z", "is_private": false}, {"count": 2, "tags": [], "text": "If you use FakeBasic auth, your username is very long and ugly. Subversion's \nauthz_svn module uses the username for logging changes. It really sucks to \nhave a log file that is the entire certificate subject.\n\nThe reason I filed this is that I was trying to patch Subversion's \nauthentication module to allow the use of SSLUserName. I expected that I'd \nonly have to ensure that the module was hooked after mod_ssl, but because the \nSSLUserName is only filled in in the fixup hook, that isn't possible.\n\nI'm currently running a server with this patch on it, with the Subversion \nauthz_svn module modified to support it as well. This works very well, and is \nmuch better than FakeBasicAuth. Several people on the Subversion mailing list \nhave asked for a feature just like this.\n", "attachment_id": null, "bug_id": 31418, "id": 65159, "time": "2004-10-14T20:35:42Z", "creator": "kevin@kevlar.net", "creation_time": "2004-10-14T20:35:42Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 31418, "attachment_id": null, "text": "I totally agree with Kevin.  FakeBasicAuth might be working for cases where you\ndon't care about the username.  But having the full certificate subject as\nusername is definitely a problem with subversion.  Not only that the log file\nhas the dn everywhere, it also makes ViewCVS output bloated, and results in\nbroken commit-log mails, since the username is again used as From: header in the\nmails.\n\nusing apache+ssl+mod_dav_svn+authz+client_certificates is the only way to get a\ndecently secure subversion repository with per-file granular permissions and\nstrong crypto running...\n\nYes, this could all be fixed up within svn or any other later module, rewriting\nthe certificate subject, replacing it with the email address contained within.\n\nBut I think the source of this ugliness is FakeBasicAuth in the beginning.  It\nstarts with certificate subjects in the 'passwd' files.\n", "id": 65336, "time": "2004-10-19T22:16:24Z", "creator": "laforge@netfilter.org", "creation_time": "2004-10-19T22:16:24Z", "is_private": false}, {"count": 4, "tags": [], "creator": "jorton@redhat.com", "text": "OK sorry, I didn't understand this properly; this is done as you suggest on the\ntrunk, I'll propose for backport.\n\nhttp://svn.apache.org/viewcvs.cgi/httpd/httpd/trunk/modules/ssl/ssl_engine_kernel.c?rev=151493&r1=151408&r2=151493", "id": 70778, "time": "2005-02-10T19:32:56Z", "bug_id": 31418, "creation_time": "2005-02-10T19:32:56Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "[One of the really, really amazing things of this small world is, that\nyou always meet the same people. :-) ]\n\nTwo things: \n\n- the backport is wrong (and also the code on the trunk). The reason for this:\n  ATM, the setting of r->user only happens if nothing in the ssl_hook_access\n  returns DECLINED, FORBIDDEN or anything else before the subroutine actually\n  comes to the setting of r->user, some hundreds of lines below the start of\n  the subroutine (That is why \"one method, one exit\" is a good thing).\n\n- the only way to actually get this to work (at least what I found) in all\n  corner cases is to factor out the user name setting (which should run all\n  the times anyway, no matter what other parts of ssl_hook_access are run\n  or not run) and add it as a separate hook to the processing chain.\n\nI built a patch against 2.0.54. I run a slightly older version of this (for\nFedora Core 1 2.0.51-1.6.legacy) with Subversion 1.1.4 and client certificate\nauthentication and mod_authz_svn) and it ran fine in all three tests that I did.\n:-) \n\nSide-nit: One of the good thing of the countless code and style checkers for\nother programming languages besides C is that they keep your line-per-method\ncount down. ssl_hook_access is _screaming_ for a refactoring and a breaking down\ninto smaller parts. ", "attachment_id": null, "bug_id": 31418, "id": 74099, "time": "2005-04-26T01:23:47Z", "creator": "hps@intermeta.de", "creation_time": "2005-04-26T01:23:47Z", "is_private": false}, {"count": 6, "tags": [], "creator": "hps@intermeta.de", "attachment_id": 14836, "id": 74101, "time": "2005-04-26T01:26:45Z", "bug_id": 31418, "creation_time": "2005-04-26T01:26:45Z", "is_private": false, "text": "Created attachment 14836\nPatch against 2.0.54 to implement a working SSLUserName feature.\n\nFor unknown reasons, bugzilla decided to attach this file to another,\ncompletely innocent bug report where it should not go. Sorry about this, don't\nknow how it happened."}, {"count": 7, "tags": [], "text": "Can you please describe a precise scenario where the current code is not\nsufficient?  Most of the earlier exits from the function are for fatal errors\ne.g. SSL_get_peer_certificate(ssl) == NULL etc.", "attachment_id": null, "bug_id": 31418, "id": 74132, "time": "2005-04-26T13:30:33Z", "creator": "jorton@redhat.com", "creation_time": "2005-04-26T13:30:33Z", "is_private": false}, {"count": 8, "tags": [], "creator": "hps@intermeta.de", "text": "I admit that I've skimmed over the ssl_hook_access method (it has > 600 lines)\nand yes, most return pathes end in HTTP_FORBIDDEN (There is a DECLINED when SSL\nis off but this case is not really interesting for setting the username from a SSL \ncertificate... ;-) ) \n\nSo yes, you are correct, the current (2.0.54) version of the httpd does work in\nmy scenario (I was testing with 2.0.51 which does not have SSLUserName at all\nand 2.0.52 from Fedora Core 3, which has it but not in the ssl_hook_access but\nin ssl_hook_fixup). \n\nI still think that this method should be reworked, but this is more of a\nbikeshed painting issue. I close the bug.", "id": 74162, "time": "2005-04-27T09:59:06Z", "bug_id": 31418, "creation_time": "2005-04-27T09:59:06Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "adconrad@0c3.net", "text": "The fix for this bug appears to have somewhat broken things, as described in the\nDebian bug here: http://bugs.debian.org/310650\n\nThis bit from the commit seems suspect to me:\n\n* However, if FakeAuth is being used then this isn't the case so\n* we need to postpone setting the username until later.\n\nThen you go and test if FAKEBASICAUTH is enabled, and don't perform any magic if\nit is... But then \"later\" never comes, and the username is never set.\n", "id": 75314, "time": "2005-05-25T04:14:15Z", "bug_id": 31418, "creation_time": "2005-05-25T04:14:15Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "jorton@redhat.com", "text": "I'm not convinced by that.  If FakeBasicAuth is used then mod_ssl should let\nr->user be set up by the normal means, as it was is already.  SSLUsername is to\nbe used in the cases where you *don't* get r->user set at all, and yet\nauthentication has taken place; i.e. using client certs.  That's the problem it\nsolves.", "id": 75709, "time": "2005-06-01T11:24:54Z", "bug_id": 31418, "creation_time": "2005-06-01T11:24:54Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "adconrad@0c3.net", "attachment_id": null, "id": 75719, "time": "2005-06-01T12:24:39Z", "bug_id": 31418, "creation_time": "2005-06-01T12:24:39Z", "is_private": false, "text": "I'll admit to having not read the section of code in question terribly carefully\nto see why it's doing what it's doing, it was merely a 20-second glance through\nto see why the user's installation appears to be behaving differently.  If you\ncould look at the Debian bug referenced in my last comment and either give a\n\"oh, that new behaviour is expected and we'll update the docs\" or \"that's a bug,\noops\", that'd be great.  This isn't a feature I personally use, nor one I have\ntime to debug right now, so I was just passing the reported breakage along."}, {"count": 12, "attachment_id": null, "bug_id": 31418, "text": "Let me add my voice to this one... since I just fought with this very problem\nmyself, and came to a similar solution before being directed to this issue.\n\nThe problem is that FakeBasicAuth gives the user _no_ ability to set what\nr->user will become; it forces it to the DN from the certificate and that is it.\n\nI think it's reasonable to let SSLUserName have the desired effect even in\nFakeBasicAuth mode; I've patched my mod_ssl (from 2.0.54) to set the\nAuthorization header based on dc->szUserName instead of clientdn if SSLUserName\nwas specified. This appears to work fine, and allowed me to work with an\nunpatched mod_authz_svn (and the remote user name shows properly in access_log\nas well). This also means that the usernames are 'proper' in the htpasswd file\nand everywhere else that httpd would normally see/use them.\n\nI've attached my patch for this behavior; please let me know if there is some\nreason why mod_ssl should _not_ behave this way.", "id": 82882, "time": "2005-11-27T01:02:33Z", "creator": "kpfleming@digium.com", "creation_time": "2005-11-27T01:02:33Z", "tags": [], "is_private": false}, {"count": 13, "tags": [], "creator": "kpfleming@digium.com", "text": "Created attachment 17052\nPatch against 2.0.54 to let SSLUserName control the username for FakeBasicAuth", "id": 82883, "time": "2005-11-27T01:03:13Z", "bug_id": 31418, "creation_time": "2005-11-27T01:03:13Z", "is_private": false, "attachment_id": 17052}, {"count": 14, "tags": [], "creator": "peter.thomas@readi-systems.com", "attachment_id": null, "id": 134874, "time": "2010-02-25T01:03:10Z", "bug_id": 31418, "creation_time": "2010-02-25T01:03:10Z", "is_private": false, "text": "(In reply to comment #13)\n> Created an attachment (id=17052) [details]\n> Patch against 2.0.54 to let SSLUserName control the username for FakeBasicAuth\n\nIs this 2.0-specific?  I'm running up against the same limitation in 2.2.14.\n\n+1 to the following summary:\n  Rather than overriding SSLUserName if set, +FakeBasicAuth should use the user name from SSLUserName if it is set, defaulting to the current one-line subject representation only if SSLUserName is not set."}, {"count": 15, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "id": 147619, "time": "2011-06-29T18:38:05Z", "bug_id": 31418, "creation_time": "2011-06-29T18:38:05Z", "is_private": false, "text": "*** Bug 45325 has been marked as a duplicate of this bug. ***"}]