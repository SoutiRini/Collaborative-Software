[{"attachment_id": 28320, "tags": [], "bug_id": 52656, "is_private": false, "count": 0, "id": 153740, "time": "2012-02-13T16:25:15Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2012-02-13T16:25:15Z", "text": "Created attachment 28320\nProposed patch\n\nHi,\n\nIn many places of httpd, we are skipping white spaces with code that looks like :\n   while (*l && apr_isspace(*l)) {\n       ++l;\n   }\n\nThe first test against *l is IMO useless and could be removed in order to improve the generated code.\nI.e. :\n   while (apr_isspace(*l)) {\n       ++l;\n   }\n\napr_isspace is in fact turned to a call to isspace by the apr library and isspace(0) returns 0.\n\n\nI also made some measurement.\nThe version with the test against *l is faster ONLY when the string to scan is EMPTY. In this case it is more or less 50% faster to completely avoid the call to isspace.\nIn ALL other cases, removing the first test is about 15% faster.\n\n\nThe proposed patch removes these, IMO, useless tests.\nThe modified files are :\n\n modules/cache/cache_storage.c     |    2 +-\n modules/cache/mod_cache_disk.c    |    2 +-\n modules/cache/mod_disk_cache.c    |    2 +-\n modules/filters/mod_proxy_html.c  |    2 +-\n modules/mappers/mod_imagemap.c    |    2 +-\n modules/mappers/mod_negotiation.c |    8 ++++----\n modules/mappers/mod_rewrite.c     |    2 +-\n modules/metadata/mod_cern_meta.c  |    2 +-\n modules/metadata/mod_headers.c    |    2 +-\n modules/metadata/mod_mime_magic.c |    2 +-\n modules/proxy/mod_proxy_http.c    |    2 +-\n server/util.c                     |    8 ++++----\n server/util_script.c              |    2 +-\n support/httxt2dbm.c               |    2 +-\n 14 files changed, 20 insertions(+), 20 deletions(-)"}, {"count": 1, "tags": [], "creator": "christophe.jaillet@wanadoo.fr", "text": "Patch must be revised.", "id": 160571, "time": "2012-07-10T21:22:32Z", "bug_id": 52656, "creation_time": "2012-07-10T21:22:32Z", "is_private": false, "attachment_id": null}]