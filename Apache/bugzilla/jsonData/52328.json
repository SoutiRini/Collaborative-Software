[{"count": 0, "tags": [], "bug_id": 52328, "text": "In our application we used to use Tomcat 5, by writing our content directly to the response writer in our servlet:\n\nWriter w = response.getWriter();\nw.append(...)\n\n\nWe have regularly measured performance of our application under stress with multiple simultaneous requests per second.\n\nWe recently upgraded to Tomcat 7, and immediately observed a performance degradation of 10% on the request roundtrip on the same machine and the same tests, compared to our application deployed on Tomcat 5.\n\nProfiling with JProfiler showed that we got massive amount of transient objects {{java.nio.HeapCharBuffer}} produced - 400Mb+ within a few minutes.\n\nThe way we are writing the response is by multiple statements of {{append}} of small strings or single chars, which used to work properly. For experiment, we wrapped the response writer with a {{BufferedWriter}} with a buffer of 64k. This brought our application's performance back to normal.\n\nWe see this as either a:\n- anti-pattern usage since Tomcat 6/7, in which case please provide some documentation about that.\n- bug in the C2BConverter that is applied per every call to the CoyoteWriter write methods, which generates the garbage buffers per every call.\n\nWe know that the response stream has a 8k buffer by default. Nevertheless, this buffer comes after the encoding step and as such it is too late to help with the garbage. Perhaps Tomcat can buffer before it encodes?\n\nStill, so much transient objects for just a pattern of eligible use of the servlet API seems a bug to me.", "id": 152157, "attachment_id": null, "creator": "diakula@gmail.com", "creation_time": "2011-12-14T11:03:38Z", "time": "2011-12-14T11:03:38Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 52328, "attachment_id": null, "text": "Some more information why we did what we did to work around this, and possibly hint how this can be resolved inside Tomcat: the documentation at \nhttp://docs.oracle.com/javase/6/docs/api/java/io/OutputStreamWriter.html\nstates there to wrap in a buffered writer in order to \"to avoid frequent converter invocations\", which have a cost. In this case, the observed garbage.", "id": 152166, "time": "2011-12-14T15:24:50Z", "creator": "diakula@gmail.com", "creation_time": "2011-12-14T15:24:50Z", "is_private": false}, {"count": 2, "tags": [], "text": "r411577 looks to be the commit the triggered this issue", "is_private": false, "id": 152387, "creator": "markt@apache.org", "time": "2011-12-23T21:48:56Z", "bug_id": 52328, "creation_time": "2011-12-23T21:48:56Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "markt@apache.org", "text": "Looking at this some more, I think we'll need to be careful around recycling, resetting and flushing but the most efficient way to fix this is to remove the calls to conv.flush() after every write. The C2BConvertor already has a buffer, so lets use it.\n\nI'll start looking at a patch along these lines and doing some testing.", "id": 152652, "time": "2012-01-10T10:38:46Z", "bug_id": 52328, "creation_time": "2012-01-10T10:38:46Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "(In reply to comment #3)\n> the most efficient way to fix this is to remove the\n> calls to conv.flush() after every write. The C2BConvertor already has a buffer,\n> so lets use it.\n\nInteresting, but maybe cut 7.0.24 first? The change sounds risky so it will need some time to review.\n\nI do not see what flush() calls you are talking about. Maybe that will be more clear from the patch.", "id": 152653, "time": "2012-01-10T11:21:03Z", "bug_id": 52328, "creation_time": "2012-01-10T11:21:03Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "markt@apache.org", "text": "Created attachment 28132\nInitial ideas\n\nMy initial idea (attached) was quite simple. There isn't the buffering I thought there was in the Converter so there is scope to add some buffering and further improve performance.", "id": 152658, "time": "2012-01-10T16:16:22Z", "bug_id": 52328, "creation_time": "2012-01-10T16:16:22Z", "is_private": false, "attachment_id": 28132}, {"count": 6, "tags": [], "creator": "markt@apache.org", "text": "Forgot to add the performance numbers for adding 100,000 single characters through a Writer.\nBefore\n129ms without wrapping the Writer in a BufferedWriter\n 37ms with wrapping the Writer in a BufferedWriter\n\nAfter\n77ms without wrapping\n28ms with wrapping\n\nI'm still looking at the best place to insert a Buffer before the conversion.", "id": 152660, "time": "2012-01-10T16:19:31Z", "bug_id": 52328, "creation_time": "2012-01-10T16:19:31Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 52328, "attachment_id": null, "text": "If I insert a Buffer before the converter then the figures drop to:\n20ms without wrapping\n7ms with wrapping\n\nClearly the CoyoteWriter has some in-built overhead that adding a Buffer helps with. I don't want to provide a Buffer inside CoyoteWriter as that adds more complexity that I want to deal with right now.", "id": 152662, "time": "2012-01-10T18:00:37Z", "creator": "markt@apache.org", "creation_time": "2012-01-10T18:00:37Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 52328, "attachment_id": null, "text": "That initial patch is no good. It triggers a bunch of unit test failures. I am working on an improved patch now.", "id": 152663, "time": "2012-01-10T19:30:56Z", "creator": "markt@apache.org", "creation_time": "2012-01-10T19:30:56Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 52328, "attachment_id": null, "is_private": false, "id": 152665, "time": "2012-01-10T21:05:26Z", "creator": "markt@apache.org", "creation_time": "2012-01-10T21:05:26Z", "text": "Unit tests now work on trunk. I'm just running the TCK before I look at back-porting it."}, {"count": 10, "tags": [], "bug_id": 52328, "text": "JSP and Servlet TCK pass for trunk (apart from the Servlet signature tests that are expected to fail since some changes have already been made for Servlet 3.1).\n\nI'll look at back-porting these tomorrow.\n\nNikolay,\nWhat are the chances of you being able to test your app with these changes? I can provide a snapshot release build if necessary.", "id": 152666, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2012-01-10T22:11:09Z", "time": "2012-01-10T22:11:09Z", "is_private": false}, {"count": 11, "tags": [], "text": "Yes, Mark, we can test it pretty quick. If you would provide us with a patched distribution package, we will test:\n- Query response in our application (having removed our buffering wrapper) deployed in the patched Tomcat.\n- Memory consumption (whether we get too many transient objects of the originally observed type).\n\nCheers,\n  Nikolay", "is_private": false, "id": 152673, "creator": "nikolay.diakov@fredhopper.com", "time": "2012-01-11T09:06:26Z", "bug_id": 52328, "creation_time": "2012-01-11T09:06:26Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 52328, "attachment_id": null, "is_private": false, "id": 152683, "time": "2012-01-11T13:10:07Z", "creator": "markt@apache.org", "creation_time": "2012-01-11T13:10:07Z", "text": "Excellent. I'll put a dev build up on my people.apache.org space and provide a link when it is available.\n\nFor reference, both the flushing changes and adding an internal buffer a[ppear to help performance in all cases. Here are some figures from the latest version of the test case which I'll commit shortly:\n\nTrunk without internal buffer but with flushing patch\nWrite length:      1, Buffered: n, Time: 86143369ns\nWrite length:      1, Buffered: y, Time: 18922557ns\nWrite length:     10, Buffered: n, Time:  4281841ns\nWrite length:     10, Buffered: y, Time:  1817266ns\nWrite length:    100, Buffered: n, Time:  1687881ns\nWrite length:    100, Buffered: y, Time:  1185908ns\nWrite length:   1000, Buffered: n, Time:  1243862ns\nWrite length:   1000, Buffered: y, Time:  1160367ns\nWrite length:  10000, Buffered: n, Time:  1147934ns\nWrite length:  10000, Buffered: y, Time:  1281448ns\nWrite length: 100000, Buffered: n, Time:  1204381ns\nWrite length: 100000, Buffered: y, Time:  1218129ns\n\n\nTrunk with internal buffer and flushing patch\nWrite length:      1, Buffered: n, Time: 27663008ns\nWrite length:      1, Buffered: y, Time: 15468331ns\nWrite length:     10, Buffered: n, Time:  1718582ns\nWrite length:     10, Buffered: y, Time:  1938994ns\nWrite length:    100, Buffered: n, Time:  1110883ns\nWrite length:    100, Buffered: y, Time:  1233152ns\nWrite length:   1000, Buffered: n, Time:   933836ns\nWrite length:   1000, Buffered: y, Time:  1259017ns\nWrite length:  10000, Buffered: n, Time:  1024246ns\nWrite length:  10000, Buffered: y, Time:  1168732ns\nWrite length: 100000, Buffered: n, Time:  1015159ns\nWrite length: 100000, Buffered: y, Time:  1074527ns\n\n7.0,x with no patches\nWrite length:      1, Buffered: n, Time: 137147272ns\nWrite length:      1, Buffered: y, Time:  18676195ns\nWrite length:     10, Buffered: n, Time:  10390213ns\nWrite length:     10, Buffered: y, Time:   2038188ns\nWrite length:    100, Buffered: n, Time:   2008351ns\nWrite length:    100, Buffered: y, Time:   1200196ns\nWrite length:   1000, Buffered: n, Time:   1261317ns\nWrite length:   1000, Buffered: y, Time:   1217747ns\nWrite length:  10000, Buffered: n, Time:   1117065ns\nWrite length:  10000, Buffered: y, Time:   1081037ns\nWrite length: 100000, Buffered: n, Time:   1471004ns\nWrite length: 100000, Buffered: y, Time:   1134857ns"}, {"count": 13, "text": "Numbers look great! Can't wait to try it out. \n\nIf all well, we would appreciate information about planning/estimation when to expect a 7.0.x release with the patch inside.", "creator": "nikolay.diakov@fredhopper.com", "is_private": false, "id": 152684, "time": "2012-01-11T13:20:41Z", "bug_id": 52328, "creation_time": "2012-01-11T13:20:41Z", "tags": [], "attachment_id": null}, {"count": 14, "tags": [], "creator": "markt@apache.org", "text": "Give it 30 minutes and there should be a full Tomcat 7 distribution (src, bin, docs) uploaded to:\nhttp://people.apache.org/~markt/dev/tomcat-7/v7.0.24-r1230243/\n\nPlease note the usual caveats for builds such as this:\n- This is *NOT* an ASF release.\n- This is a development build intended solely for testing this issue\n- There has been zero testing of this build\n\nRegarding a 7.0.24 release. I intend to roll it just as soon as the open 7.0.x bugs are all resolved . How long that takes depends on how many bugs are raised, how hard they are to fix and how much life gets in the way.\n\nHint: The more help there is investigating and fixing the currently open 7.0.x bugs (excluding enhancements) the quicker there will be a 7.0.24 release.\n\nI am marking this as fixed as is usual once a patch has been applied to the release branch. If any issues are discovered, we can re-open the issue.", "id": 152703, "time": "2012-01-11T21:09:49Z", "bug_id": 52328, "creation_time": "2012-01-11T21:09:49Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 52328, "attachment_id": null, "text": "Regarding the artifact, we will test it. Do I understand correctly that this artifact contains a current 7.0.24 (candidate) + the fix?\n\nWe will test this to the best of our procedure. For a clean cut (no noise from other stuff) relative performance measurement however, ideally we would have preferred to test a stable tag (e.g., 7.0.23) + the fix. Nevertheless, the degradation before showed quite a big number, so I expect to confirm a clear improvement from this fix.\n\nThe fix is not critical for our product - we have a sufficiently good workaround, although the additional flushing fix will further improve the situation. I'll note to watch for the 7.0.24 so we update to it in a subsequent release of our product.", "id": 152709, "time": "2012-01-12T10:01:51Z", "creator": "nikolay.diakov@fredhopper.com", "creation_time": "2012-01-12T10:01:51Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 52328, "text": "(In reply to comment #15)\n> Regarding the artifact, we will test it. Do I understand correctly that this\n> artifact contains a current 7.0.24 (candidate) + the fix?\n\nCorrect.\n\n> We will test this to the best of our procedure. For a clean cut (no noise from\n> other stuff) relative performance measurement however, ideally we would have\n> preferred to test a stable tag (e.g., 7.0.23) + the fix. Nevertheless, the\n> degradation before showed quite a big number, so I expect to confirm a clear\n> improvement from this fix.\n\nFair point. Reviewing the  for 7.0.24 changelog, there are quite a few changes but none that jump out as having a performance impact so the results should be good enough. Let us know how you get on.", "id": 152710, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2012-01-12T10:09:04Z", "time": "2012-01-12T10:09:04Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 52328, "is_private": false, "id": 152752, "attachment_id": null, "creator": "nikolay.diakov@fredhopper.com", "creation_time": "2012-01-13T13:07:55Z", "time": "2012-01-13T13:07:55Z", "text": "Ok, so we confirm that our application + the patched tomcat 7 is back to the levels of performance of our application and the tomcat 5. We did not see any functional regressions either, so from our side it looks good. Our current workaround for the unpatched tomcat 7 yields the same numbers, so we are safe until a release comes out.\n\nThanks for the quick reaction!\n\nYou may want to add to the general pre-release QA procedure, some performance test similar to the unit tests you made, just to avoid bugs like this drag their dirty feet through 2 major releases :D."}]