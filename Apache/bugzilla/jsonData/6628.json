[{"count": 0, "tags": [], "bug_id": 6628, "attachment_id": null, "text": "In org.apache.catalina.loader.WebappClassloader there are a set of \ndefined \"triggers\" which prevent certain classes from being loaded:\n\nprivate static final String[] classTriggers = {\n        \"javax.net.\",                                // JSSE      added in 1.4\n        \"javax.security.cert.\",                      // JSSE      added in 1.4\n        \"javax.naming.\",                             // JNDI      added in 1.3\n        \"javax.xml.\",                                // JAXP      added in 1.4\n        \"org.xml.sax.\",\n        \"org.w3c.dom.\"\n    };\n\nYou'll notice that all of the xml parsing packages are specified in this \ntrigger list. This means that Tomcat refuses to load any XML parser which may \nhave been placed in WEB-INF/lib folders. This makes it impossible to \nspecify \"per-application\" XML parsers, unless you load the XML classes yourself.\n\nGod bless,\n-Toby", "id": 11062, "time": "2002-02-21T22:11:51Z", "creator": "toby@reyelts.com", "creation_time": "2002-02-21T22:11:51Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 6628, "attachment_id": null, "is_private": false, "id": 11067, "time": "2002-02-21T22:23:51Z", "creator": "remm@apache.org", "creation_time": "2002-02-21T22:23:51Z", "text": "If you're using JAXP, then you're correct, and it won't be fixed."}, {"count": 2, "tags": [], "creator": "toby@reyelts.com", "attachment_id": null, "text": "What if I've just got applications that depend even upon different revisions of \nthe same parser - for example Xerces?\n\nWhat's the reasoning behind this?", "id": 11073, "time": "2002-02-21T22:40:01Z", "bug_id": 6628, "creation_time": "2002-02-21T22:40:01Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 6628, "attachment_id": null, "is_private": false, "id": 11074, "time": "2002-02-21T22:59:33Z", "creator": "remm@apache.org", "creation_time": "2002-02-21T22:59:33Z", "text": "Ok. First, the trigger list as it is in 4.0.2 is causing problems (see bug\n6374). Improving it was easy, and now the list is much more selective (and the\nclassloader finally complies with what the specification says).\nAllowing the base classes in the webapp repositories will create problems (see\nbug 6248) which have no easy workaround.\n\nThe filtering will not prevent you from having a webapp written specifically\nfor, say, Xerces 1 or OpenXML from running, since all the classes, except the\ncore JAXP classes and the XML API classes (which can be common for everything)\nwill be loaded from the webapp classloader."}, {"count": 4, "tags": [], "bug_id": 6628, "attachment_id": null, "text": "So this works as long as the JAXP API doesn't evolve incompatibly? \n\nFor example, if JAXP 1.2 gets released, and a new application uses it, we have \nto replace the existing JAXP 1.1 library with the new 1.2 library - at which \npoint the old apps written to 1.1 are now running with 1.1. But this only works \nif JAXP 1.2 is totally compatible with 1.1 - both interface and implementation \nwise.\n\nGod bless,\n-Toby", "id": 11075, "time": "2002-02-21T23:13:34Z", "creator": "toby@reyelts.com", "creation_time": "2002-02-21T23:13:34Z", "is_private": false}, {"text": "1.2 will run 1.0 and 1.1 providers. If it didn't, then we're in trouble, but at\nleast there would be a lot of people in trouble. Now that JAXP 1.1 is in the\nJDK, I don't see any API breakage ocurring, at least not with the same\npackage/class names.", "tags": [], "creator": "remm@apache.org", "is_private": false, "count": 5, "id": 11076, "time": "2002-02-21T23:21:15Z", "bug_id": 6628, "creation_time": "2002-02-21T23:21:15Z", "attachment_id": null}]