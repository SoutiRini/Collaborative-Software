[{"count": 0, "tags": [], "creator": "jeff@socialchange.net.au", "text": "Hi,\n\nThe following will not work:\n\n<fileset dir=\".\">\n  <include name=\"../somefile\"/>\n</fileset>\n\nFrom a user's perspective, I can see no reason it shouldn't, hence marking it as\na bug.\n\n\n--Jeff", "id": 15113, "time": "2002-04-30T12:29:08Z", "bug_id": 8654, "creation_time": "2002-04-30T12:29:08Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "conor@apache.org", "is_private": false, "text": "I think your interpretation is incorrect. A fileset starts from a set of files\nrooted at a given directory. The include elements are effectively filters which\nselect the elements from this set to form the fileset. So, from this\nperspective, the file \"../somefile\" is not in the starting set of files for the\ndirectory \".\"\n\nThe workaround is obvious - the starting set must include the file you wish to\nselect\n\n<fileset dir=\"..\">\n  <include name=\"somefile\"/>\n</fileset>\n\n", "id": 31218, "time": "2003-02-13T11:04:00Z", "bug_id": 8654, "creation_time": "2003-02-13T11:04:00Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 8654, "text": "Yes, can't think why I marked it 'bug' rather than 'enhancement'.\n\nIIRC, the point I wanted to make was that the implementation is overly\nrestricting the semantics. Conceptually, why shouldn't <fileset dir=\"x\"> be\ngeneralized from \"a set of files below x\" to \"a set of files whose path starts\nwith x\"?  Makes perfect sense to me as a user. Imagine if bash disallowed 'ls\n../*'. \n\n*Practically*, this is all marsh gas; futzing with the API would kill\nbackwards-compat. But why let reality get in the way when filing bugreports :o)\n\n--Jeff", "count": 2, "id": 31219, "time": "2003-02-13T11:54:37Z", "creator": "jefft@apache.org", "creation_time": "2003-02-13T11:54:37Z", "is_private": false}]