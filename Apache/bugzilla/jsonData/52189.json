[{"count": 0, "tags": [], "text": "Created attachment 27940\nTest script that exhibits the performance difference between JM 2.5.1 and JM 2.4\n\nI have a test case that works under JMeter 2.4 just fine. But when I run the exact same test under JMeter 2.5.1, it is consistently slower. Specifically, the average response times increase for POST responses, and the throughput drops from ~128.1 under 2.4 to ~79.5 under 2.5.1 with everything else remaining identical (except the actual start time of the test). There is some variability in the test, but rarely more than a couple of percent - so the difference between JM2.4 and JM2.5.1 is rather disconcerting.\n\nI have attached a .zip package that contains the test script.\n\nThe script performs 2 HTTP requests:\n\n1) simple GET from our site's homepage\n2) POST to our site's \"login\" form (with 3 values: username, password, stk (a token from a COOKIE))\n\nIn the test, I normally use 'https' for the test, but the same behavior is exhibited using just HTTP.\n\nI do not download embedded resources.\n\nI use Keepalive, and follow redirects.\n\nI tried changing the HTTP Client in JM 2.5.1 to use the new HTTP4 client, but it has a cookie issue, so I couldn't complete the test correctly. (Using HTTP3.1 is where I see the performance issue.)", "attachment_id": 27940, "id": 151526, "creator": "rwilson.2@gmail.com", "time": "2011-11-15T20:39:56Z", "bug_id": 52189, "creation_time": "2011-11-15T20:39:56Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rwilson.2@gmail.com", "is_private": false, "text": "Created attachment 27941\nJMeter2.4 test run screen image\n\nAttaching an image of the Summary Report from the JM 2.4 test run on my system", "id": 151527, "time": "2011-11-15T20:42:45Z", "bug_id": 52189, "creation_time": "2011-11-15T20:42:45Z", "attachment_id": 27941}, {"count": 2, "tags": [], "creator": "rwilson.2@gmail.com", "attachment_id": 27942, "id": 151528, "creation_time": "2011-11-15T20:43:51Z", "time": "2011-11-15T20:43:51Z", "bug_id": 52189, "text": "Created attachment 27942\nJMeter2.5.1 test run screen image\n\nAttaching an image of the JM 2.5.1 summary report from a test run on my system", "is_private": false}, {"count": 3, "tags": [], "text": "Created attachment 27943\nJMeter2.5.1r1202266 test run screen image using HTTPClient4\n\nAdded image showing the use of HTTPClient4 (using the nightly build r1202266 - since it has the fix for the cookie issue with HTTP4).", "is_private": false, "id": 151531, "creator": "rwilson.2@gmail.com", "time": "2011-11-15T22:28:35Z", "bug_id": 52189, "creation_time": "2011-11-15T22:28:35Z", "attachment_id": 27943}, {"count": 4, "tags": [], "bug_id": 52189, "is_private": false, "id": 151532, "attachment_id": null, "creator": "rwilson.2@gmail.com", "creation_time": "2011-11-15T22:31:14Z", "time": "2011-11-15T22:31:14Z", "text": "Re-ran the test using JM 2.5.1 r1202266 (nightly build) - and HTTPClient4 (needed the cookie fix).\n\nWith HTTP4, it runs even slower than before.\n\nThen I tried the r1202266 build with HTTPclient3.1, and it performs nearly identically (within the margin of error) to the 2.5.1 \"release\" version.\n\nUploaded another screen snap of the summary report from the HTTP4 test run."}, {"count": 5, "tags": [], "creator": "sebb@apache.org", "is_private": false, "text": "Created attachment 27944\nSample Listener", "id": 151533, "time": "2011-11-15T23:19:23Z", "bug_id": 52189, "creation_time": "2011-11-15T23:19:23Z", "attachment_id": 27944}, {"count": 6, "tags": [], "bug_id": 52189, "attachment_id": null, "id": 151534, "time": "2011-11-15T23:20:51Z", "creator": "sebb@apache.org", "creation_time": "2011-11-15T23:20:51Z", "is_private": false, "text": "Thanks for the test case. Unfortunately we cannot use it as it requires access to a private server as far as I can tell, but it does at least show what you are running.\n\nNot sure why you use an include controller; would it be possible to eliminate that as a possibility? It's easy to do - just select the Include Controller, and right-click Merge.\n\nCan you also provide JTL files for a short run (say 50 samples)?\n\nCSV format would be best.\nSee attached Listener for a suitable config."}, {"count": 7, "tags": [], "bug_id": 52189, "attachment_id": null, "is_private": false, "id": 151551, "time": "2011-11-16T14:48:08Z", "creator": "rwilson.2@gmail.com", "creation_time": "2011-11-16T14:48:08Z", "text": "I'm using the Include controller because I use the 'login' with a bunch of different test procedures. By using the Include Controller, I can manage changes to the Login.jmx file separately, and all my test procedures that use it will inherit the changes.\n\nBut for the sake of simplicity, I've re-run the tests with the Login process merged into the main script. The results are essentially the same (JM2.4 shows throughput of 145/sec, avg resp times of 655; JM2.5.1r1202266 shows throughput of 81/sec, avg resp times of 880.\n\nI'll be including the JTL file and the updated \"LoginTest.jmx\" file as attachments. The JTL file is from the JM2.5.1 + the nightly build (from yesterday) that I setup previously. I set it to run 5 threads, with 10 loops."}, {"count": 8, "tags": [], "bug_id": 52189, "text": "Created attachment 27949\nJTL output of 5 threads * 10 iterations, no \"include\" controller used\n\nThis is the requested JTL file for a test run using JM2.5.1 r1202266 - with 5 threads, and 10 iterations. The test used HttpClient4. Also, the test script was modified to eliminate the 'Include' controller (the \"Login\" was merged with the main test script - to simplify the test).", "id": 151552, "attachment_id": 27949, "creator": "rwilson.2@gmail.com", "creation_time": "2011-11-16T14:52:03Z", "time": "2011-11-16T14:52:03Z", "is_private": false}, {"count": 9, "tags": [], "creator": "rwilson.2@gmail.com", "attachment_id": 27950, "id": 151553, "creation_time": "2011-11-16T14:53:30Z", "time": "2011-11-16T14:53:30Z", "bug_id": 52189, "text": "Created attachment 27950\nUpdated test script - without the Include controller.\n\nRemoved the \"Include\" controller by merging the necessary Login script with the main script.\n\nNOTE: this script still requires the \"T1.csv\" file - attached separately.", "is_private": false}, {"count": 10, "tags": [], "bug_id": 52189, "is_private": false, "id": 151554, "attachment_id": 27951, "creator": "rwilson.2@gmail.com", "creation_time": "2011-11-16T14:54:17Z", "time": "2011-11-16T14:54:17Z", "text": "Created attachment 27951\nConfiguration data file for LoginTest.jmx test script.\n\nConfiguration file for LoginTest.jmx test script."}, {"count": 11, "tags": [], "text": "(In reply to comment #8)\n> Created attachment 27949 [details]\n> JTL output of 5 threads * 10 iterations, no \"include\" controller used\n> \n> This is the requested JTL file for a test run using JM2.5.1 r1202266 - with 5\n> threads, and 10 iterations. The test used HttpClient4. Also, the test script\n> was modified to eliminate the 'Include' controller (the \"Login\" was merged with\n> the main test script - to simplify the test).\n\nCan you also provide the JTL for the same run with JMeter 2.4?", "is_private": false, "id": 151557, "creator": "sebb@apache.org", "time": "2011-11-16T15:20:43Z", "bug_id": 52189, "creation_time": "2011-11-16T15:20:43Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 52189, "attachment_id": 27954, "text": "Created attachment 27954\nCSV Output using Sebb's Simple Data Writer controller\n\nSorry, I missed that you needed 'csv' output... Here's the output of the JM2.5.1 r1202266 test with 5 threads * 10 iterations.", "id": 151558, "time": "2011-11-16T15:29:37Z", "creator": "rwilson.2@gmail.com", "creation_time": "2011-11-16T15:29:37Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 52189, "attachment_id": 27956, "is_private": false, "id": 151560, "time": "2011-11-16T15:33:57Z", "creator": "rwilson.2@gmail.com", "creation_time": "2011-11-16T15:33:57Z", "text": "Created attachment 27956\nCSV Output using Sebb's Simple Data Writer controller - for JM2.4\n\nRe-ran the test on JM2.4, using the simple data writer. The only difference in this test is that the \"HttpClient\" can't be set in JM2.4..."}, {"count": 14, "tags": [], "bug_id": 52189, "attachment_id": null, "id": 151562, "time": "2011-11-16T15:48:44Z", "creator": "sebb@apache.org", "creation_time": "2011-11-16T15:48:44Z", "is_private": false, "text": "Thanks.\n\nIn fact the XML output would also be useful, as there are some redirects that generate additional samples which do not show up in the CSV output (only top-level samples are recorded)."}, {"count": 15, "tags": [], "bug_id": 52189, "attachment_id": 27958, "is_private": false, "id": 151564, "time": "2011-11-16T16:31:26Z", "creator": "rwilson.2@gmail.com", "creation_time": "2011-11-16T16:31:26Z", "text": "Created attachment 27958\nJTL output of 5 threads * 10 iterations, no \"include\" controller used - for JMeter 2.4\n\nAdded JTL (XML) output for test run using JM2.4."}, {"count": 16, "tags": [], "bug_id": 52189, "text": "Thanks for all the logs etc.\n\nIt would also be helpful to have HC3 JTL data for JMeter 2.5.1.\n\nAIUI the 2.5.1 data file was created using HC4, whereas for JMeter 2.4 HC4 is not available, so I assume you used HC3?\n\nIn addition (if you have the time), HTTP Java runs for JM 2.4 and 2.5.1 would be useful.", "id": 151577, "attachment_id": null, "creator": "sebb@apache.org", "creation_time": "2011-11-17T00:35:01Z", "time": "2011-11-17T00:35:01Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 52189, "attachment_id": 27964, "is_private": false, "id": 151607, "time": "2011-11-17T18:16:35Z", "creator": "rwilson.2@gmail.com", "creation_time": "2011-11-17T18:16:35Z", "text": "Created attachment 27964\nJMeter2.5.1r1202266 test run screen image using HTTPClient3.1\n\nRan a new test with the JMeter 2.5.1 using HttpClient3.1"}, {"count": 18, "tags": [], "creator": "rwilson.2@gmail.com", "text": "I'm not sure how to switch to the HTTP Java client in JMeter 2.4... I'll run the test with the Java client for 2.5.1r1202266. But I need some directions on how to use the HTTP Request Java Client for JM2.4.", "id": 151609, "time": "2011-11-17T18:19:45Z", "bug_id": 52189, "creation_time": "2011-11-17T18:19:45Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 52189, "attachment_id": 27965, "text": "Created attachment 27965\nJMeter2.5.1r1202266 test run JTL using JavaClient\n\nRe-ran the test using JM2.5.1 r1202266 - but with the HTTP Request Java Client instead of HTTP3.1 or HTTP4.", "id": 151610, "time": "2011-11-17T18:24:34Z", "creator": "rwilson.2@gmail.com", "creation_time": "2011-11-17T18:24:34Z", "is_private": false}, {"count": 20, "tags": [], "bug_id": 52189, "text": "Created attachment 27966\nJMeter2.5.1r1202266 test run JTL using HttpClient3.1\n\nI mis-labeled the JM2.5.1 r120066 JTL file as a screen image... This is just to fix that mis-label.\n\nAttached the correct file as a JTL file for the JM2.5.1 r1202266 w/HTTPClient3.1.", "id": 151611, "attachment_id": 27966, "creator": "rwilson.2@gmail.com", "creation_time": "2011-11-17T18:26:46Z", "time": "2011-11-17T18:26:46Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 52189, "attachment_id": null, "is_private": false, "id": 151662, "time": "2011-11-20T10:11:47Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-11-20T10:11:47Z", "text": "I profiled the 2 versions and found the following elements:\n\nThere is a slight degradation in response time  between 2 versions when using Java Impl which is due to at least these 2 changes:\n- There is a configuration difference between both related to the addition of:sun.net.http.allowRestrictedHeaders=true in system.properties, this impacts response time of connection.getContentLength\n- There is also the addition of CountingInputStream which is slightly involved in the degradation\n- There are still differences , reverting gives me now 2% difference.\n\nThere is also in 2.5.2 a real difference between the 3 HTTP Sampler implementations and clearly performances tops are:\n- Java impl\n- HTTP HC 3.1 Impl\n- HTTP HC 4 Impl (less performing)\n\nI didn't have time yet to understand if it is due to JMeter usage or to HTTPClient impl."}, {"count": 22, "tags": [], "creator": "olegk@apache.org", "text": "Based on our internal micro-benchmark Apache HttpClient 4.x is comfortably faster than both the internal JRE HTTP client or Apache HttpClient 3.1\n\nhttp://wiki.apache.org/HttpComponents/HttpClient3vsHttpClient4vsHttpCore\n\nYou are very welcome to run the benchmark locally and let me know whether or not you get consistent results.\n\nOleg", "id": 151688, "time": "2011-11-21T13:02:09Z", "bug_id": 52189, "creation_time": "2011-11-21T13:02:09Z", "is_private": false, "attachment_id": null}, {"count": 23, "tags": [], "bug_id": 52189, "is_private": false, "id": 151743, "attachment_id": null, "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-11-23T21:15:40Z", "time": "2011-11-23T21:15:40Z", "text": "Thanks Oleg for your comment. \nI will try to give you some feedback as soon as possible.\n\nIf you have some time, it would be great if you could review usage of HTTPClient in JMeter and make some improvements propositions.\n\nRegards\nPhilippe"}, {"count": 24, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "id": 152120, "creation_time": "2011-12-11T15:08:19Z", "time": "2011-12-11T15:08:19Z", "bug_id": 52189, "text": "From Rainer Jung on dev list:\nI did a simple test using a very small file (2 bytes) to mostly check per request overhead. I let it run with 10 threads for a total of 200.000 samples and only took the last 20.000 samples to calculate results.\n\nConfiguration was default, JVM was 1.6.0_29, System was Solaris Sparc with 2 CPUs for JMeter and Apache on a separate one CPU system.\n\nCPU was not saturated, bandwidth neither.\n\nThose tests showed:\n\n- results for HttpClient3.1 and HttpClient4 are about the same\n- results for JMeter 2.4, 2.5.1 and 2.5.2-dev are about the same\n- response times measured with HttpClient are between 52% and 59% of the old Java Sampler\n- wallclock time needed for the 20.000 samples was only 0.3% to 2.2% bigger than the sum of the response times, so overhead is minimal\n- overhead, though minimal was about 2% for HttpClient and about 0.5 for the old Java sampler. Overall it is a big difference, but both numbers are pretty small.\n- since overhead is small, throughput in requests per second behaves roughly like average response time, namely about 740 requests per second for HttpClient and about 400-440 for the old Java sampler. So throughput is about 70% better for the newer samplers.\n- CPU was higher for HttpClient, but only about 50-60%, so relative to throughput (per request) it was a bit lower.\n\n\"about the same\" means differences were smaller than variability of test runs, always less than 10%.\n\nIt could be, that the test results will be very different, for bigger response sizes, KeepAlive turned off, real live tests with cookies etc. etc.\n\nAt least the base line looks good and I don't see a relevant difference between 2.4 and 2.5.x.\n\nRegards,\n\nRainer", "is_private": false}, {"count": 25, "tags": [], "bug_id": 52189, "attachment_id": null, "text": "I investigated this issue a little more by tuning my local Tomcat server and doing the following comparisons:\n- Java Impl in 2.4: 430,4 hits/s\n- Java Impl in Current Trunk version (> 2.5.1): 431,8 hits/s\n\n- HC3.1 Impl in 2.4: 399,3 hits/s\n- HC3.1 Impl in Current Trunk version (> 2.5.1): 397,4 hits/s\n\n\nSo no significant degradations at Sampler level.\nI close issue as investigations don't reproduce what has been reported.", "id": 152470, "time": "2011-12-29T21:47:39Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2011-12-29T21:47:39Z", "is_private": false}]