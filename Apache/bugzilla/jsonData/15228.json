[{"count": 0, "tags": [], "text": "Hi,\nWhile trying to update a column in a excel file of size 700KB, which also \ncontains macros, I am getting arrayindexoutofbounds exception.\n\n\nThe exception is,\n\njava.lang.reflect.InvocationTargetException: \njava.lang.ArrayIndexOutOfBoundsException\n\tat org.apache.poi.util.LittleEndian.getNumber(LittleEndian.java:557)\n\tat org.apache.poi.util.LittleEndian.getShort(LittleEndian.java:90)\n\tat org.apache.poi.hssf.record.formula.NamePtg.<init>(NamePtg.java:100)\n\tat org.apache.poi.hssf.record.formula.Ptg.createPtg(Ptg.java:247)\n\tat org.apache.poi.hssf.record.FormulaRecord.getParsedExpressionTokens\n(FormulaRecord.java:171)\n\tat org.apache.poi.hssf.record.FormulaRecord.fillFields\n(FormulaRecord.java:147)\n\tat org.apache.poi.hssf.record.Record.fillFields(Record.java:143)\n\tat org.apache.poi.hssf.record.Record.<init>(Record.java:105)\n\tat org.apache.poi.hssf.record.FormulaRecord.<init>\n(FormulaRecord.java:118)\n\tat java.lang.reflect.Constructor.newInstance(Native Method)\n\tat org.apache.poi.hssf.record.RecordFactory.createRecord\n(RecordFactory.java:252)\n\tat org.apache.poi.hssf.record.RecordFactory.createRecords\n(RecordFactory.java:190)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>\n(HSSFWorkbook.java:181)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>\n(HSSFWorkbook.java:153)\n\tat \ncom.selectica.foundationservices.daas.command.CxFileReaderCommand.execute\n(CxFileReaderCommand.java:83)\n\tat com.selectica.server.framework.CxCommandExecutor.process\n(CxCommandExecutor.java:338)\n\tat com.selectica.server.framework.CxCommandExecutorRunnable.run\n(CxCommandExecutorRunnable.java:282)\n\tat java.lang.Thread.run(Thread.java:484)\n\nThanks,\nDinesh", "attachment_id": null, "id": 27588, "creator": "gvdinesh@lycos.com", "time": "2002-12-10T12:15:25Z", "bug_id": 15228, "creation_time": "2002-12-10T12:15:25Z", "is_private": false}, {"count": 1, "tags": [], "creator": "poi-support@buni.org", "attachment_id": null, "id": 27616, "time": "2002-12-10T17:12:30Z", "bug_id": 15228, "creation_time": "2002-12-10T17:12:30Z", "is_private": false, "text": "do NOT reassign bugs to me."}, {"count": 2, "tags": [], "creator": "avik@apache.org", "text": "This information is NOT enough to debug and/or solve this problem. Please attach\nproblem .xls and the minumum amount of (compilable) code needed to replicate\nthis issue. We can then try and resolve this issue. \n\nAlso, to reiterate, assigning bugs to individuals in a voluteer project is\npresumptious, to say the least.  ", "id": 27703, "time": "2002-12-12T07:46:51Z", "bug_id": 15228, "creation_time": "2002-12-12T07:46:51Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 15228, "attachment_id": 4141, "id": 27738, "time": "2002-12-12T14:41:20Z", "creator": "gvdinesh@lycos.com", "creation_time": "2002-12-12T14:41:20Z", "is_private": false, "text": "Created attachment 4141\nsample excel file"}, {"count": 4, "tags": [], "creator": "gvdinesh@lycos.com", "text": "Hi,\nAdded attachment file.\n\nThis file even fails read.\n\nSorry for assigning the bug to Andy.\n\nThanks,\nDinesh", "id": 27739, "time": "2002-12-12T14:42:25Z", "bug_id": 15228, "creation_time": "2002-12-12T14:42:25Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 15228, "attachment_id": null, "text": "Hi,\nI tried to trace through the code. In littleEndian.java \n\n private static long getNumber(final byte[] data, final int offset,          \nfinal int size)\n\nthe data length is smaller than offset+size-1 and the for loop there fails. So \nit is giving a error while executing the attached file.\n\nAny insights into it.\n\nThanks,\nDinesh", "id": 27959, "time": "2002-12-17T15:51:10Z", "creator": "gvdinesh@lycos.com", "creation_time": "2002-12-17T15:51:10Z", "is_private": false}, {"count": 6, "tags": [], "creator": "pkrause@soundbite.com", "text": "Is this possibly the same as bug 13292?", "id": 27960, "time": "2002-12-17T15:55:09Z", "bug_id": 15228, "creation_time": "2002-12-17T15:55:09Z", "is_private": false, "attachment_id": null}, {"count": 7, "attachment_id": null, "creator": "poi-support@buni.org", "text": "This is fixed and awaiting commit", "id": 41307, "time": "2003-07-24T14:03:34Z", "bug_id": 15228, "creation_time": "2003-07-24T14:03:34Z", "tags": [], "is_private": false}, {"count": 8, "attachment_id": null, "bug_id": 15228, "is_private": false, "id": 41596, "time": "2003-07-27T19:26:20Z", "creator": "avik@apache.org", "creation_time": "2003-07-27T19:26:20Z", "tags": [], "text": "Fixed. comitted to both branch and head. will go into 2.0pre3 release. "}, {"count": 9, "tags": [], "creator": "clay@vt.edu", "text": "I am still having this problem with 2.0-pre3.  I have about twenty Excel files, \nall seemingly the same (structurally) and I am batch processing them with Ant, \nand running to this error on half to three quarters of them.\n\nHere is a stack trace:\n\n       [excel] java.lang.reflect.InvocationTargetException\n       [excel] \tat sun.reflect.NativeConstructorAccessorImpl.newInstance0\n(Native Method)\n       [excel] \tat sun.reflect.NativeConstructorAccessorImpl.newInstance\n(Unknown Source)\n       [excel] \tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance\n(Unknown Source)\n       [excel] \tat java.lang.reflect.Constructor.newInstance(Unknown Source)\n       [excel] \tat org.apache.poi.hssf.record.RecordFactory.createRecord\n(RecordFactory.java:257)\n       [excel] \tat org.apache.poi.hssf.record.RecordFactory.createRecords\n(RecordFactory.java:193)\n       [excel] \tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>\n(HSSFWorkbook.java:207)\n       [excel] \tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>\n(HSSFWorkbook.java:174)\n       [excel] \tat com.etg.ant.ExcelTask.execute(ExcelTask.java:90)\n       [excel] \tat com.etg.ant.ExcelTask.execute(ExcelTask.java:61)\n       [excel] \tat org.apache.tools.ant.Task.perform(Task.java:319)\n       [excel] \tat org.apache.tools.ant.Target.execute(Target.java:309)\n       [excel] \tat org.apache.tools.ant.Target.performTasks(Target.java:336)\n       [excel] \tat org.apache.tools.ant.Project.executeTarget(Project.java:1306)\n       [excel] \tat org.apache.tools.ant.Project.executeTargets\n(Project.java:1250)\n       [excel] \tat org.eclipse.ant.internal.core.ant.InternalAntRunner.run\n(InternalAntRunner.java:569)\n       [excel] \tat org.eclipse.ant.internal.core.ant.InternalAntRunner.run\n(InternalAntRunner.java:367)\n       [excel] \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n       [excel] \tat sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n       [excel] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown \nSource)\n       [excel] \tat java.lang.reflect.Method.invoke(Unknown Source)\n       [excel] \tat org.eclipse.ant.core.AntRunner.run(AntRunner.java:335)\n       [excel] \tat \norg.eclipse.ui.externaltools.internal.ant.launchConfigurations.AntLaunchDelegate\n$1.run(AntLaunchDelegate.java:172)\n       [excel] \tat java.lang.Thread.run(Unknown Source)\n       [excel] Caused by: java.lang.ArrayIndexOutOfBoundsException: 11\n       [excel] \tat org.apache.poi.util.LittleEndian.getNumber\n(LittleEndian.java:529)\n       [excel] \tat org.apache.poi.util.LittleEndian.getInt\n(LittleEndian.java:177)\n       [excel] \tat org.apache.poi.hssf.record.BOFRecord.fillFields\n(BOFRecord.java:170)\n       [excel] \tat org.apache.poi.hssf.record.Record.fillFields(Record.java:127)\n       [excel] \tat org.apache.poi.hssf.record.Record.<init>(Record.java:92)\n       [excel] \tat org.apache.poi.hssf.record.BOFRecord.<init>\n(BOFRecord.java:135)\n       [excel] \t... 24 more\n\nI am looking into whether I can permission to give you one of the files that is \nbombing out, but that may take a little longer, and may not be allowable. \n*sorry, not my call*  :(\n", "id": 42640, "time": "2003-08-12T17:56:36Z", "bug_id": 15228, "creation_time": "2003-08-12T17:56:36Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 15228, "attachment_id": null, "id": 43204, "time": "2003-08-23T20:02:59Z", "creator": "avik@apache.org", "creation_time": "2003-08-23T20:02:59Z", "is_private": false, "text": "Clay, \n\nThis particular problem IS fixed.. as proof, there is a testcase (test15228 in\nTestBugs.java), that failed prior to the fix, and works now (2.0pre3). \n\nSo your problem is different.. and we will we able to help you only if you give\na small test sheet and the minimum code to replicate this. If you have a problem\nproviding the sheet, try replicating the problem with dummy data. "}, {"count": 11, "tags": [], "creator": "avik@apache.org", "text": "As I said earlier, this particular bug IS fixed, there is a testcase to prove\nit. Clay, if you are still having a problem, please attach an exmaple sheet and\nthe minimum amount of code reqd to fix the problem. ", "id": 45135, "time": "2003-10-06T10:06:59Z", "bug_id": 15228, "creation_time": "2003-10-06T10:06:59Z", "is_private": false, "attachment_id": null}]