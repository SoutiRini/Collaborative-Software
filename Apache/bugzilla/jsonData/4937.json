[{"count": 0, "tags": [], "creator": "Mark.Rovinsky@trilogy.com", "attachment_id": null, "id": 8018, "time": "2001-11-16T15:54:13Z", "bug_id": 4937, "creation_time": "2001-11-16T15:54:13Z", "is_private": false, "text": "Is it possible to add the notion of checkpoints to Ant?\n\nFor example, suppose that you have a very large build which fails after a small \nchange. With checkpoints, you would be able to resume the build after the \nlatest 'valid' checkpoint."}, {"count": 1, "tags": [], "text": "<uptodate> task might help you to do what you want.\nI use it for example to avoid generating code blindly.\n\nAlternatively a large build file is normally splitted into several targets that \ndepends on each other, so there is normally always the possibility to perform a \nsomewhat atomatic operation, it is up to the build.xml writer to do this \ncorrectly.\nFor example, assuming I have a dist target that takes time and that it fails, \nto compile, I can simply compile or jar...\n<target name=\"prepare\"/>\n<target name=\"compile\" depends=\"prepare\"/>\n<target name=\"jar\" depends=\"compile\"/>\n<target name=\"javadoc\"/>\n<target name=\"dist\" depends=\"jar,javadoc\"/>\n\n", "is_private": false, "bug_id": 4937, "id": 8024, "time": "2001-11-17T17:43:32Z", "creator": "sbailliez@apache.org", "creation_time": "2001-11-17T17:43:32Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "robert.watkins@qsipayments.com", "text": "You can also use properties to \"route\" a build through various paths. For \nexample, with unit tests you can set a property on failure, which can be used \nto send the build down a \"test-failed\" branch.", "id": 8038, "time": "2001-11-18T16:42:25Z", "bug_id": 4937, "creation_time": "2001-11-18T16:42:25Z", "is_private": false, "attachment_id": null}, {"id": 29648, "tags": [], "bug_id": 4937, "is_private": false, "count": 3, "text": "I don't see Ant providing checkpoints. As the others have suggested, the best\nidea is to design your buildfile to only perform the necessary tasks. Most tasks\ninclude some form of dependency check so they only do the minimum amount of work\nnecessary. The <uptodate> and <dependset> tasks can be used to manage more\narbitrary dependencies across tasks.\n\nI'm going to makr as WONTFIX.", "time": "2003-01-18T14:59:40Z", "creator": "conor@apache.org", "creation_time": "2003-01-18T14:59:40Z", "attachment_id": null}]