[{"count": 0, "tags": [], "bug_id": 25257, "attachment_id": null, "text": "Proxy recording does not interpret unit code \\u3310 correctly\n\nWhen unit code 3310 was submit to server directly without using proxy, Internet \nExplorer will send %E3%8C%90, but if it run through Jmeter as the proxy server, \nit will send %E3%8C%3F to the server.\n\nTo reproduce the error just put the following very simple html file into your \npc.  Change http://myserver/snoop to somewhere the snoop serverlet is.  You can \nrun it with or without Jmeter proxy to see the error.\n\nGreatly appreciate any helps.  Suggestion on the workaround is also greatly \nappreciated.\n\nJyh-Ching\n\n<HTML>\n<HEAD>\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n</HEAD>\n<BODY>\nclick to see \\u3310\n<FORM method=\"GET\" ACTION=http://myserver/snoop charset=UTF-8>\n<SCRIPT>\ndocument.writeln(\"<INPUT type=hidden NAME=ENCODING_TEST value='\" + \"\\u3310\" \n+ \"'> \")\n</SCRIPT>\n<input type=\"submit\">\n</form>\n</BODY>\n</HTML>", "id": 48602, "time": "2003-12-06T00:16:58Z", "creator": "jyaur@excite.com", "creation_time": "2003-12-06T00:16:58Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 25257, "attachment_id": null, "text": "My browsers behave differently: they send ENCODING_TEST=%26%2313072%3B -- which\nis &#13072; -- which makes sense, since 13072 decimal equals 3310 hex.\nI've tested using Mozilla 1.5 and MSIE 6.0.\n\nThe same result holds if I add this field to the form:\n<input name=TEST2 value=\"&#13072;\">\nAlthough the test field shows char 3310 (square giga).\n\nWhich browser version are you using? What's the URL shown in the browser's\nlocation bar in one case and the other?\n\nI've also made a simpler text: I've just submitted\nhttp://myserver/snoop/?ENCODING_TEST=%E3%8C%90 to the proxy, which has behaved\ndecently -- the only problem being that the parameter value has been recorded as\nthree iso-8859-1 characters: hex E3, hex 8c and hex 90.\n\nMy guess is that this happened thanks to my locale being Latin-1-based... a\ndifferent locale could use a different decoding and do the kind of\ntransformation you point to.\n\nWe should make sure that all URL encoding and decoding is explicitly done using\nUTF-8. Or, alternatively, have the proxy record the undecoded parameters and not\nmark the \"encode\" checkbox.\n\nJyh-Ching: can you please try running JMeter under a \"C\", \"US\" or some other\niso-8859-1-based locale and see if the problem still happens? This may confirm\nmy diagnostic as well as provide a workaround.", "id": 48937, "time": "2003-12-11T22:56:23Z", "creator": "jsalvata@atg.com", "creation_time": "2003-12-11T22:56:23Z", "is_private": false}, {"count": 2, "tags": [], "text": "Downgrading severity to Normal.", "is_private": false, "id": 48938, "creator": "jsalvata@atg.com", "time": "2003-12-11T22:57:09Z", "bug_id": 25257, "creation_time": "2003-12-11T22:57:09Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Hello Jordi:\n\nSome background info:\nOS: Win 2K\nBrowser: IE 6.0 SP1\nJDK: 1.3.1_07\nLocal: US\nJmeter version: 1.9.1\n\nYour test is better.  I use http://myserver/snoop?ENCODING_TEST=%E3%8C%90 it \nshowed the proper value in the address bar (%E3%8C%90) but in my display from \nsnoop servlet, it shows the query string is %E3%8C%3F.  I also run a network \ntrace and confirm that\u2019s really what Jmeter sent to the server.\n\nIs there any workaround for this?\n\nBest regards\n\nJyh-Ching\n", "is_private": false, "bug_id": 25257, "id": 49209, "time": "2003-12-16T21:11:36Z", "creator": "jyaur@excite.com", "creation_time": "2003-12-16T21:11:36Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 25257, "attachment_id": null, "id": 49212, "time": "2003-12-16T22:37:48Z", "creator": "jsalvata@atg.com", "creation_time": "2003-12-16T22:37:48Z", "is_private": false, "text": "This is a Windows-specific issue. Marking it as such.\n\nHere's a very quick test:\n$ cat testchars.java\nimport java.net.URLEncoder;\nimport java.net.URLDecoder;\n \npublic class testchars {\n    public static void main(String[] args) {\n        System.out.println(URLEncoder.encode(URLDecoder.decode(args[0])));\n    }\n}\n$ javac testchars.java\n$ java testchars %E3%8C%90\n%E3%8C%90\n\nAnd then from Windows:\n\nE:\\tmp\\tmp> c:\\jdk1.3.1_07\\bin\\java testchars %E3%8C%90\n%E3%8C%3F\n\nJDK 1.4.1_05 produces the same results.\n\nPassing \"UTF-8\" as the encoding solved the issue in 1.4.1_05. This is mandatory\nin the 1.4 JDKs (the URL encode/decode methods without an explicit encoding are\ndeprecated) but it's not a possibility in 1.3 JDKs (the methods with explicit\nencoding did not exist).\n\nSo this bug will be fixed by adding an explicit encoding to each and every\nURLEncoder.encode and URLDecoder.decode call."}, {"count": 5, "tags": [], "bug_id": 25257, "attachment_id": null, "is_private": false, "id": 49216, "time": "2003-12-17T00:30:31Z", "creator": "jyaur@excite.com", "creation_time": "2003-12-17T00:30:31Z", "text": "Jordi:\n\nBy changing the system property file.encoding, Jmeter works properly for these \nspecial characters.  I changed the Jmeter.bat last line to \n\njava -Dfile.encoding=ISO8859_1 -Xincgc -Xmx256m -jar ApacheJMeter.jar %\nJMETER_CMD_LINE_ARGS%\n\nBy just added the file.encoding property, that make Jmeter works properly for \nthese special characters.\n\nJava Soft explained the default encoding was changed for windows in 1.2  Here \nis what it said:\n\n\nDefault Encoding Change for Western Locales on Microsoft Windows\nOn Microsoft Windows systems, the default encoding for western locales is now \nCp1252 (Microsoft Windows Latin-1) rather than ISO8859_1. On the Solaris \nOperating Environment, the default encoding for western locales remains \nISO8859_1. This change in default encoding will break some programs that depend \non features of ISO8859_1.\n\n\nRef: http://java.sun.com/products/jdk/1.2/previous-changes.html\n\nBig thanks to Jordi for researching this issue.\n\nBest regards\nJyh-Ching\n"}, {"count": 6, "tags": [], "bug_id": 25257, "attachment_id": null, "text": "I've fixed this by using UTF-8 for all URL encode/decode operations. This\nunfortunately means we can no longer control the behaviour using file.encoding,\nbut at least the encode/decode functions should now be inverse of each other in\nall platforms.", "id": 49222, "time": "2003-12-17T03:27:38Z", "creator": "jsalvata@atg.com", "creation_time": "2003-12-17T03:27:38Z", "is_private": false}]