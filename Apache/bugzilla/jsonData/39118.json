[{"count": 0, "tags": [], "creator": "phkraus@skynet.be", "attachment_id": null, "id": 87323, "time": "2006-03-27T16:53:47Z", "bug_id": 39118, "creation_time": "2006-03-27T16:53:47Z", "is_private": false, "text": "This patch add the handling of the page-number-citation-last element defined in\nthe XSL 1.1 spec"}, {"count": 1, "tags": [], "bug_id": 39118, "attachment_id": 17995, "is_private": false, "id": 87324, "time": "2006-03-27T16:54:27Z", "creator": "phkraus@skynet.be", "creation_time": "2006-03-27T16:54:27Z", "text": "Created attachment 17995\nThe patch file"}, {"count": 2, "tags": [], "bug_id": 39118, "attachment_id": 18004, "text": "Created attachment 18004\nBasic testcase to check the page-number-citation-last element\n\nOK, sorry for the delay but JUnit was acting strange :p\n2 questions:\n- This test uses the \"linefeed-treatment=preserve\" property, is it ok ?\n- Do you want more test for the element ?\n\nAnd to Jeremias, i'll try to fax the ICLA today or tommorow (asking someone as\ni don't have a fax myself), and if i can't i'll send it by mail...", "id": 87422, "time": "2006-03-30T11:39:06Z", "creator": "phkraus@skynet.be", "creation_time": "2006-03-30T11:39:06Z", "is_private": false}, {"count": 3, "tags": [], "creator": "jeremias@apache.org", "attachment_id": null, "id": 87436, "time": "2006-03-30T19:05:00Z", "bug_id": 39118, "creation_time": "2006-03-30T19:05:00Z", "is_private": false, "text": "(In reply to comment #2)\n> Created an attachment (id=18004) [edit]\n> Basic testcase to check the page-number-citation-last element\n> \n> OK, sorry for the delay but JUnit was acting strange :p\n> 2 questions:\n> - This test uses the \"linefeed-treatment=preserve\" property, is it ok ?\n\nYes, but I don't see what its function is in this particular test case.\n\n> - Do you want more test for the element ?\n\nIf you don't mind, I have an additional wish: Testing page-number-citation-last\nreferencing an id on the page-sequence because that will be the major use case\nfor it. The most interesting part is then to combine that with a\npage-position=\"last\" where the last page is a blank page (see\npage-position_last_1.xml).\n\n> And to Jeremias, i'll try to fax the ICLA today or tommorow (asking someone as\n> i don't have a fax myself), and if i can't i'll send it by mail...\n\nThank you! If possible, please try fax because we've had bad experiences with\nnormal mail."}, {"count": 4, "tags": [], "bug_id": 39118, "attachment_id": 18109, "text": "Created attachment 18109\nThis file is the *complete* patch to handle page-number-citation-last in the different FO elements requested\n\nIgnore the precedent patch, this one applies the same modifications + new ones\n\t\t\n\t\tPatch Explanation\n\t\t-----------------\n\t\t\nOK, this is a file to help you understand the changes applied\nto the source code to handle the page-number-citation-last\nelement. \n\nNew Data Structures\n-------------------\n\n2 java.util.HashSet in AreaTreeHandler.java :\n\n    private Set unresolvedLayoutManagers = new HashSet();\n    private Set alreadyResolvedIDs = new HashSet();\n\nThe role of unresolvedLayoutManagers is to keep a list of \n\"which formatting objects contributes IDs\" as you proposed it.\n\nThe role of alreadyResolvedIDs is to keep a list of IDs already\nresolved. That role might seems unnecessary, so here's a little \nexample that i came across while doing the modification :\n\n...\n  <fo:block>page: <fo:page-number/>, bof2 is on page <fo:page-number-citation\nref-id=\"bof2\"/></fo:block>\n    <fo:block linefeed-treatment=\"preserve\" id=\"bof3\">page: <fo:page-number/>\n      test\n      test\n      test\n      test\n      test\n      test\n    </fo:block>\n    <fo:block break-before=\"page\">page: <fo:page-number/></fo:block>\n    <fo:block>page: <fo:page-number/></fo:block>\n    <fo:block>page: <fo:page-number/> of <fo:page-number-citation\nref-id=\"eof1\"/></fo:block>\n    <fo:block>page(-last): <fo:page-number/> of <fo:page-number-citation-last\nref-id=\"bof3\"/></fo:block>\n...\n\nWithouth the second Set, the problem that we come across is that the\nlayout of the block with the id 'bof3' is finished before the creation\nof the page-number-citation-last layout manager. Due to the construction\nof the PNCL-LM, the first step it does is to add the UnresolvedPageNumber\nin the unresolvedLayoutManager list (there is no way to known in advance\nif the page number can be resolved or not at this point). Each layout manager\nis responsible of removing its ID from the unresolvedLayoutManager's list\nand, at the same time to call for the resolution of the IDs its possess.\nBut as the ID of the block of the block layout manager is inexisting in the\nlist as the PNCL-LM haven't addded yet, it is not resolved when \"it should\".\nThe solution that i chose is to add each ID resolved \"in advance\" in a Set,\nthat the PNCL-LM will check to see if it can skip the \"wait for resolve\"\nstep, so it can immediately be resolved. \n\nI hope that this little explanation helped you to understand the changes.\n\nWhat have been done -> handling of PageSequence ids and Block ids + Block level\n\nids (as page-number-citation)\n\nKnown limits -> no handling of IDs contained in a root, flow, and the table\nrelated ids : table-header, table-footer, table-body ...\nAnd, i don't know if it's a problem, but when the actual UnresolvedPageNumber\nobject is resolved, the font associated to it is null (this is due to the\n\"transient\" state of the object i guess...) and the IPD can't be updated (only\nthe case with PageSequences).\n\nNew Code\n--------\nAs explained above.\nThe source code changes are avail in the patch file.", "id": 88122, "time": "2006-04-15T12:30:05Z", "creator": "phkraus@skynet.be", "creation_time": "2006-04-15T12:30:05Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 39118, "attachment_id": null, "is_private": false, "id": 88398, "time": "2006-04-23T09:41:57Z", "creator": "jeremias@apache.org", "creation_time": "2006-04-23T09:41:57Z", "text": "Pierre-Henri, I've applied your patch with modifications. See:\nhttp://svn.apache.org/viewcvs?rev=396243&view=rev\n\nThanks a lot for that and sorry for the delay.\n\nI found a remaining problem with your patch. When a formatting object spans\nmultiple pages, forward references are not properly resolved. You can see that\nin the *_basic.xml test case which I've modified and disabled. It looks like you\ndidn't entirely get my hint last time. The problem is that addAreas() can be\ncalled multiple times. An example: If a block spans multiple pages, it is called\nonce for each page it generates area for. Since you notify the AreaTreeHandler\nafter each call to addAreas (and not only after the last) a forward reference\ngets the wrong page number (i.e. the one of the first area). Determining the\nlast call to addAreas for a formatting objects might be a little tricky, however.\n\nFurthermore, you've only addressed block-level formatting objects and\npage-sequence for ID processing, but some of the inline-level formatting objects\ncan similarly span multiple pages (like fo:inline for example). I don't think\nthis is critical since you might rarely refer to an inline-level ID with\npage-number-citation-last. The most important use case is certainly referring to\nan ID from page-sequence to achieve reliable \"page x of y\" without the \"empty\nblock with ID\" hack we've used until today.\n\nI'm leaving the issue open for now."}, {"text": "\nSmall update on this one:\npage-number-citation-last is currently correctly handled for fo:block, fo:inline and fo:list-block\n\nDoes not work yet for:\n-> table-elements: ids not processed for table-header, table-footer, table-body and table-row; notifyEndOfLayout() is still called multiple times for table and table-cell.\n-> block-containers: AbstractLM.isLast(Position) does not work reliably in this case, as the BlockContainerLM also wraps the auxiliary positions for its children's borders. Result is that the 'last' position in the iterator that the block-container receives during addAreas() is not one of its own. It is given a position index, though, which is greater than that of the last content element, so...\n-> page-sequence: to be investigated", "tags": [], "bug_id": 39118, "is_private": false, "count": 6, "id": 116603, "time": "2008-05-14T04:02:43Z", "creator": "adelmelle@apache.org", "creation_time": "2008-05-14T04:02:43Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 157338, "time": "2012-04-07T01:41:39Z", "bug_id": 39118, "creation_time": "2012-04-07T01:41:39Z", "is_private": false, "text": "resetting P2 open bugs to P3 pending further review"}, {"count": 8, "tags": [], "bug_id": 39118, "is_private": false, "text": "increase priority for bugs with a patch", "id": 157848, "time": "2012-04-11T03:20:44Z", "creator": "gadams@apache.org", "creation_time": "2012-04-11T03:20:44Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 39118, "attachment_id": null, "text": "change status from ASSIGNED to NEW for consistency", "id": 157911, "time": "2012-04-11T06:17:39Z", "creator": "gadams@apache.org", "creation_time": "2012-04-11T06:17:39Z", "is_private": false}]