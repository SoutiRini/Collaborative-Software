[{"count": 0, "tags": [], "bug_id": 54982, "attachment_id": 30286, "id": 167230, "time": "2013-05-16T08:23:47Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2013-05-16T08:23:47Z", "is_private": false, "text": "Created attachment 30286\nPatch to properly close the OCPPackage\n\nThis leaves files open longer than necessary and causes problems when working with temporary files on Windows as they cannot be deleted unless they are closed properly.\n\nAttached patch fixes this."}, {"count": 1, "tags": [], "bug_id": 54982, "text": "I'm not sure this'll work, as some of the extractors (eg XSSFEventBasedExcelExtractor, or fetching the properties extractor) will still need access to the OPCPackage during their processing of the file. If we close the package during the create call, these would then break when you tried to get the text / properties\n\nAlso, ExtractorFactory and the associated classes don't receive a lot of work at the moment, almost all the text extraction effort goes into Apache Tika. You might want to switch to Tika instead, that uses POI but now generally has better support + cleaner ways of dealing with temporary resoures", "id": 167243, "time": "2013-05-16T11:40:25Z", "creator": "apache@gagravarr.org", "creation_time": "2013-05-16T11:40:25Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 54982, "attachment_id": null, "id": 167418, "time": "2013-05-25T16:23:24Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2013-05-25T16:23:24Z", "is_private": false, "text": "Hmm, I did some more tests and unit tests, it seems to work as far as I see, however if you state the class is dormant, I'll stop on this Bug.\n\nThe Extractor-stuff was an easy way to read the text from an Excel file in unit tests, having to use another framework like Tika just for this would bloat the unit test framework, so I am currently using a locally fixed version of the ExtractorFactory which works fine for my purposes.\n\nBTW, I also saw something like this in the class, which makes no sense at all, using a locally created lock is not doing anything useful:\n\n\t\t// Save the content\n\t\tReentrantReadWriteLock l = new ReentrantReadWriteLock();\n\t\ttry {\n\t\t\tl.writeLock().lock();\n                        ...\n\n\nMaybe at least the description at http://poi.apache.org/text-extraction.html should state that the classes are dormant instead of sending users to a broken class that is not updated currently..."}, {"count": 3, "tags": [], "bug_id": 54982, "attachment_id": null, "id": 167423, "time": "2013-05-26T17:41:03Z", "creator": "apache@gagravarr.org", "creation_time": "2013-05-26T17:41:03Z", "is_private": false, "text": "I've tried to update the docs on the site, please could you take a look and let me know if you think that covers it?\n\nIn terms of freeing resources, maybe we'd be better to add a close method to the extractor base clases? That way, people can explicitly tidy up when they're doing if they want (or fallback to the current lazy tidy), without the issues of us trying to close resources before the user is done making calls with it. Thoughts?"}, {"count": 4, "attachment_id": 30337, "creator": "dominik.stadler@gmx.at", "text": "Created attachment 30337\nDifferent approach adding a close() to the POITextExtractor and implementing it in a few sub-classes\n\nHi, a close() sounds fine to me. I have created a patch which adds a close() interface to POITextExtractor which can be used to free resources later. I have implemented the close() in all classes that seem to make use of closeable-resources. It also adds calls to close() in tests and runs existing unit tests for XSSF-extractors also against the Extractor that is built via the Factory. Finally it also add a small test-suite to quickly execute all extractor-related tests.\n\nRegarding updated documentation, I think that is fine and should it make easier to spot the state of Extractors.", "id": 167464, "time": "2013-05-28T21:39:04Z", "bug_id": 54982, "creation_time": "2013-05-28T21:39:04Z", "tags": [], "is_private": false}, {"count": 5, "attachment_id": null, "creator": "apache@gagravarr.org", "text": "Patch looks good to me, please feel free to commit it yourself! :)", "id": 167794, "time": "2013-06-12T17:43:25Z", "bug_id": 54982, "creation_time": "2013-06-12T17:43:25Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 54982, "attachment_id": null, "id": 167866, "time": "2013-06-17T07:56:31Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2013-06-17T07:56:31Z", "is_private": false, "text": "Patch is committed on trunk now, Extractor now implements Closeable and tests are adjusted/enhanced accordingly\n\n        M       src/java/org/apache/poi/POITextExtractor.java\n        M       src/ooxml/java/org/apache/poi/POIXMLTextExtractor.java\n        M       src/ooxml/java/org/apache/poi/xssf/extractor/XSSFEventBasedExcelExtractor.java\n        M       src/ooxml/testcases/org/apache/poi/TestXMLPropertiesTextExtractor.java\n        M       src/ooxml/testcases/org/apache/poi/xslf/extractor/TestXSLFPowerPointExtractor.java\n        M       src/ooxml/testcases/org/apache/poi/xssf/extractor/TestXSSFEventBasedExcelExtractor.java\n        A       src/ooxml/testcases/org/apache/poi/xssf/extractor/TestXSSFEventBasedExcelExtractorUsingFactory.java\n        M       src/ooxml/testcases/org/apache/poi/xssf/extractor/TestXSSFExcelExtractor.java\n        A       src/ooxml/testcases/org/apache/poi/xssf/extractor/TestXSSFExcelExtractorUsingFactory.java\n        M       src/ooxml/testcases/org/apache/poi/xwpf/extractor/TestXWPFWordExtractor.java\n        M       src/testcases/org/apache/poi/hssf/extractor/TestExcelExtractor.java\nCommitted r1493669"}]