[{"count": 0, "tags": [], "creator": "emmanuel.harguindey@gmail.com", "attachment_id": null, "text": "The follwing ant code:\n<replaceregexp file=\"FILE.EXT\" match=\"hello\" replace=\"\\\" />\n\nWhen the regexp is applied against a file regardless of its name with the text matching 'hello' or whichever the string is selected as the match, this Exception will be thrown:\n\njava.lang.StringIndexOutOfBoundsException: String index out of range: 1\n\nIt must have something to do with the backlash character escaping. The problem disappears when applying a replace string escaped as follows:\n\n<replaceregexp file=\"FILE.EXT\" match=\"hello\" replace=\"\\\\\\\\\" />\n\nIn this case, the replacement is carried out successfully.\n\nThe bug won\u00b4t manifest itself when the text inside FILE.EXT does not match the regular expression in the 'match' attribute.", "id": 163690, "time": "2012-11-28T08:32:22Z", "bug_id": 54216, "creation_time": "2012-11-28T08:32:22Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 54216, "is_private": false, "text": "http://docs.oracle.com/javase/7/docs/api/java/util/regex/Matcher.html#replaceAll(java.lang.String) confirms that \\ is intended to be an escape sequence. Nonetheless Jdk14RegexpRegexp.substitute seems to be doing its own preprocessing of the replacement string, converting \\1 to $1, and I seem to recall having problems in the past using this task to work with Windows file paths. The manual does not appear to specify what the expected syntax of the replacement string is.\n\nAt any rate, the argument \u2192 subst conversion is clearly wrong, since \\ is converted to \\ which is syntactically illegal, but \\\\ is converted to \\ too! A patch (including additions to RegexpTest.java and the manual) would be great.", "id": 163746, "time": "2012-11-30T19:10:48Z", "creator": "jglick@apache.org", "creation_time": "2012-11-30T19:10:48Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "bodewig@apache.org", "is_private": false, "id": 172020, "creation_time": "2014-01-02T12:20:12Z", "time": "2014-01-02T12:20:12Z", "bug_id": 54216, "text": "One culprit here is java.util.regex.Matcher#appendReplacement which throws the exception if it encounters a replacement that ends in an unescaped backslash.\n\nI agree \\\\ should not be replaced by \\ and the patch I'll attach fixes that, but I'm afraid this is going to break existing builds that contain quadrupeled backslashes to work around this long standing \"feature\".\n\nMaybe just documenting what happens is better than fixing the bug, not sure.", "attachment_id": null}, {"attachment_id": 31167, "tags": [], "creator": "bodewig@apache.org", "text": "Created attachment 31167\nstop stripping backslash in regex substitution", "count": 3, "id": 172021, "time": "2014-01-02T12:21:41Z", "bug_id": 54216, "creation_time": "2014-01-02T12:21:41Z", "is_private": false}]