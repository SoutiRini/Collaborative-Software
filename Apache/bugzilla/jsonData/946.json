[{"count": 0, "tags": [], "creator": "arun@ipin.com", "attachment_id": null, "is_private": false, "id": 1221, "time": "2001-03-12T13:09:18Z", "bug_id": 946, "creation_time": "2001-03-12T13:09:18Z", "text": "Note: I was unable, on 12 Mar 2001, to look at the most recent nightly build to \nsee if this issue has already been dealt with.  The build does not appear to \nhave correctly completed.  I looked, therefore, at the Tomcat 3.3 milestone 1 \nbuild.  \n\nThe StopTomcat task, for some reason, does not use the InetAddress associated \nwith the Ajp12 when attempting to open a socket and close the connection.  \nInstead, the code seems to directly request and use localhost.  \n\nIn the code segment below (clipped from line 162-184 in \norg.apache.tomcat.startup.StopTomcat), note that the actual InetAddress passed \nin is ignored.  Instead, the getLocalHost static method is used to provide the \nhost to which a connection is opened.  Note that the port, on the other hand, is \ncorrectly used.  This is not, unfortunately, sufficient to shut down the server.  \n\n    /**\n     *  This particular implementation will search for an AJP12\n     * \tconnector ( that have a special stop command ).\n     */\n    public void stopTomcat(InetAddress address, int portInt, String secret )\n\tthrows IOException \n    {\n\t// use Ajp12 to stop the server...\n\ttry {\n\t    if (address == null)\n\t\taddress = InetAddress.getLocalHost();\n\t    Socket socket = new Socket(address, portInt);\n\t    OutputStream os=socket.getOutputStream();\n\t    sendAjp12Stop( os, secret );\n\t    os.flush();\n\t    os.close();\n\t    //\t    socket.close();\n\t} catch(IOException ex ) {\n\t    System.out.println(\"Error stopping Tomcat with Ajp12 on \" +\n\t\t\t\t      address + \":\" + portInt + \" \" + ex);\n\t    throw ex;\n\t}\n    }\n\nWith TomCat 3.2, a temporary workaround for those with Ajp12 listening to a host \nother than the localhost was to actually create another instance of Ajp12 which \nlistens on the localhost.  The ONLY function of this instance was to listen for \nshutdown requests.  It appears that this workaround may continue to be an option \nfor 3.3.  The shutdown code appears to search for a particular file \n(/conf/ajp12.id) which contains the Ajp12 port.  Starting two instances of \nAjp12, therefore, will probably result in the file being overwritten the by the \nlater instance.  As long as the last instance in of the Ajp12 connector started \nup is the one listening to localhost, there should not be any issues."}, {"count": 1, "tags": [], "bug_id": 946, "is_private": false, "text": "Latest build allows to pass -host parameter ( as well as port and secret ),\nthat should resolve ( or at least provide workaround ) from most problems.\n( the id file is provided for convenience, to save typing - if you remove it\nor override it or is on a different machine - you have to type the params )", "id": 1537, "time": "2001-03-21T13:30:51Z", "creator": "cmanolache@yahoo.com", "creation_time": "2001-03-21T13:30:51Z", "attachment_id": null}]