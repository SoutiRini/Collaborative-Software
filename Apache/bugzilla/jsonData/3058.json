[{"count": 0, "tags": [], "bug_id": 3058, "text": "To see error in action create use DOMConfigurator and then try to remove the \nlog4j.jar file (While program is running). On winX systems (running V JRE 1.3) \nyou get a sharing violation.\nThis seems to be more like a jdk issue then the DOMConfigurator (when you \naccess a file contained in a jar file through the URL connection java does not \nproperly release the file afterwards) \nHapply there is a work-around which could be implemented in the DOMConfigurator \nwhich would prevent this from occuring. Using the Class.getResourceAsStream you \ncould extract the log4j.dtd from the resource into a ByteArrayStream then write \nyour own EntityResolver to send back an InputSource created by the \nByteArrayStream - Since this is only startup overhead it shouldnt cost much \ntime. I have working code if you want it which Extended the DOMConfigurator and \njust overrode the one method (doConfigure) to achieve this. IMPORTANT note - \nyou need to set the inputSource.setSystemId(\"log4j.dtd\"); When using a custom \nEntityResolver or else the beast never calls your custom EntityResolver..\n\nThe reason why this was a problem for me was that I included the log4j in a WAR \npackage and in order to replace the war file I needed to remove the folder the \nwar file created, but I got this sharing violation so I was forced to shutdown \nand restart TOMCAT every time I wanted to update the WAR file (Which often \nhappens during development)....\n\nBTW - nice bug tracker", "id": 4408, "time": "2001-08-09T08:57:30Z", "creator": "notzippy@hotmail.com", "creation_time": "2001-08-09T08:57:30Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "cgu@qos.ch", "attachment_id": null, "id": 8202, "time": "2001-11-22T12:55:27Z", "bug_id": 3058, "creation_time": "2001-11-22T12:55:27Z", "is_private": false, "text": "\nCan you please supply the relevant patch? Thank you."}]