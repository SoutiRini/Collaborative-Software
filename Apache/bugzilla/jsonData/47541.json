[{"count": 0, "tags": [], "bug_id": 47541, "attachment_id": 23993, "is_private": false, "id": 128906, "time": "2009-07-16T06:07:06Z", "creator": "vhennebert@gmail.com", "creation_time": "2009-07-16T06:07:06Z", "text": "Created attachment 23993\nSample FO file showing the problem\n\nSee attached file: block b4 inherits the space-before property from the parent block and overrides the .conditionality component to \"retain\". This results into a space before the first block, at the top of the first page. Normally block 4 should start the second page with a space before it. The bug doesn't occur if all the components of the space are specified on the block instead of being inherited."}, {"count": 1, "tags": [], "text": "Created attachment 23994\nThe true sample file that shows the problem", "attachment_id": 23994, "bug_id": 47541, "id": 128907, "time": "2009-07-16T06:08:55Z", "creator": "vhennebert@gmail.com", "creation_time": "2009-07-16T06:08:55Z", "is_private": false}, {"count": 2, "tags": [], "creator": "adelmelle@apache.org", "is_private": false, "text": "\nNot a 100% sure, but I think this behavior has been discussed (way back when), and this is actually not a bug.\nBy specifying the .conditionality component, you implicitly set the other property components to their initial value. Either all the components are inherited, or none.\n\nTo achieve the desired result, it is wrong to rely on implicit inheritance. Instead, specify a value of 'inherit' for the .length component to avoid using the initial value (0pt).", "id": 128919, "time": "2009-07-16T12:36:44Z", "bug_id": 47541, "creation_time": "2009-07-16T12:36:44Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 47541, "attachment_id": null, "text": "\nJust some additional notes explaining the behavior, that even though it seems unexpected, is actually OK.\n\nFor compound properties, specifying only one of the components is equivalent to setting all the other components to their initial value. They are not initialized with the inherited value, since the components are NOT(!) separate properties. Implicit inheritance is always defined on the level of the complete property. If one of the components appears as a specified value, the entire property is no longer inherited. If we want to inherit some of the components and override others, we need to use explicit values of 'inherit'. (Seems to be precisely one of the prime use-cases for that keyword)\n\nIOW:\n<block space-before=\"2em\">\n  <block space-before.conditionality=\"retain\">\n\nis semantically equivalent to\n\n<block space-before.optimum=\"2em\"\n              space-before.conditionality=\"discard\"\n              space-before.precedence=\"0\">\n  <block space-before.optimum=\"0pt\"\n                space-before.conditionality=\"retain\"\n                space-before.precedence=\"0\">\n\nTo achieve the expected result, the correct spec would be:\n<block space-before=\"2em\">\n  <block space-before.optimum=\"inherit\" space-before.conditionality=\"retain\">\n\nTechnically, in FOP (see also the Wiki about property resolution) specified values are always processed first and added to the PropertyList. Later, when binding the PropertyList to the FObj, if there was no specified value for a given applicable property, inheritance will always be tried before reverting to the initial value.\nWhen processing the specified properties, and encountering a specified component, we first check if the compound property already exists on the PropertyList. In this context, we don't try inheritance, as we're actually looking for a base property that possibly resulted from other components that were processed before (= appeared earlier in the Attributes). \nIf it does not exist, then we generate that base property, also bypassing inheritance, since we're creating an instance for a specified value.\n\nI think this is completely in line with the Recommendation (5.1.4), which hints at the inherited value actually being a fallback for an absent specified value (not a replacement for the initial value; note the order of the resolution rules in 5.1.1).", "id": 128924, "time": "2009-07-16T14:03:20Z", "creator": "adelmelle@apache.org", "creation_time": "2009-07-16T14:03:20Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 47541, "is_private": false, "id": 128953, "creation_time": "2009-07-17T07:04:35Z", "time": "2009-07-17T07:04:35Z", "creator": "vhennebert@gmail.com", "text": "That doesn't justify the space before the first block on the first page. It clearly looks like some object is directly passed to the child FO, instead of a copy of it. Setting the conditionality to \"retain\" on block 4 seems to have set it also to the surrounding block.\n\nAlso:\n\n(In reply to comment #3)\n> Just some additional notes explaining the behavior, that even though it seems\n> unexpected, is actually OK.\n> \n> For compound properties, specifying only one of the components is equivalent to\n> setting all the other components to their initial value. They are not\n> initialized with the inherited value, since the components are NOT(!) separate\n> properties. Implicit inheritance is always defined on the level of the complete\n> property.\n\nThis is not what the following sentence from section 5.11 says: \"Compound values of properties are inherited as a unit and not as individual components. After inheritance any complete form specification for a component is used to set its value.\" So non-specified components take the inherited value.\n\nAnyway, that doesn't apply to space-before since it's not an inheritable property.\n\n\n> If one of the components appears as a specified value, the entire\n> property is no longer inherited. If we want to inherit some of the components\n> and override others, we need to use explicit values of 'inherit'. (Seems to be\n> precisely one of the prime use-cases for that keyword)\n\nWhich is what is done in the sample FO file. According to the following sentence in section 5.11: \"Short forms may be used together with complete forms; the complete forms have precedence over the expansion of a short form.\" the result for block b4 should be the following one:\n  space-before.minimum=10pt\n  space-before.optimum=12pt\n  space-before.maximum=50pt\n  space-before.precedence=0\n  space-before.conditionality=retain\n\n\n<snip/> \n> I think this is completely in line with the Recommendation (5.1.4), which hints\n> at the inherited value actually being a fallback for an absent specified value\n> (not a replacement for the initial value; note the order of the resolution\n> rules in 5.1.1).\n\nLike above, since space-before is not an inheritable property, section 5.1.4 doesn't apply here.\n\n\nVincent", "attachment_id": null}, {"count": 5, "tags": [], "creator": "adelmelle@apache.org", "is_private": false, "id": 128954, "creation_time": "2009-07-17T08:04:24Z", "time": "2009-07-17T08:04:24Z", "bug_id": 47541, "text": "(In reply to comment #4)\n\nSorry, mixing things up with the inherited indent properties. Should have looked at the sample, of course...\n\n> That doesn't justify the space before the first block on the first page. It\n> clearly looks like some object is directly passed to the child FO, instead of a\n> copy of it. Setting the conditionality to \"retain\" on block 4 seems to have set\n> it also to the surrounding block.\n\nOK, now I see it. The SpaceProperty instance is re-used/shared between the blocks, due to the value of inherit, but when the additional component is specified on the fourth block, it also sets the component for all the other blocks. Specifying a value other than inherit, or specifying it for the individual components, generates a separate instance, so there are no side-effects. SpaceProperty is one type that is not cached yet, so even identical property specs will yield separate instances (unless inheritance of the base property is used, obviously).\n\nNot sure how easy it would be to fix this behavior, yet. Could be as simple as modifying the behavior in PropertyList.findBaseProperty() to conditionally duplicate the instance...", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 47541, "is_private": false, "text": "resetting P2 open bugs to P3 pending further review", "id": 157521, "time": "2012-04-07T01:44:10Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:44:10Z", "attachment_id": null}]