[{"count": 0, "tags": [], "creator": "drax@sawebs.com", "text": "\"am_DisconnectComputer()\" uses wrong index-variable in loop\n\nchanges/fix see //!!!\n\nvoid am_DisconnectComputer(LPSTR szComputerName)\n{\n    int i = 0, j;\n    while (g_stComputers[i].szComputerName != NULL) {\n        if (strcmp(g_stComputers[i].szComputerName, szComputerName) == 0) {\n            break;\n        }\n        ++i;\n    }\n    if (g_stComputers[i].szComputerName != NULL) {\n        free(g_stComputers[i].szComputerName);\n        RegCloseKey(g_stComputers[i].hRegistry);\n        for (j = i; j < MAX_PROVIS_COMPUTERS - 1; j++) {\n//!!! was:\n//!!!    g_stComputers[i].szComputerName= g_stComputers[i+1].szComputerName;\n//!!!    g_stComputers[i].hRegistry = g_stComputers[i+1].hRegistry;\n//!!! should read:\n            g_stComputers[j].szComputerName= g_stComputers[j+1].szComputerName;\n            g_stComputers[j].hRegistry = g_stComputers[j+1].hRegistry;\n        }\n        for (i = j; i < MAX_PROVIS_COMPUTERS; i++) {\n            g_stComputers[i].szComputerName = NULL;\n            g_stComputers[i].hRegistry = NULL;\n        }\n    } \n}\n\n2nd:\nGetApacheServicesStatus()\nshouldn't it read: ?!\n\n\t}\n\t++computers;\n\tRegCloseKey(hKey); //!!! original position of \n                           //!!! RegCloseKey(hKey) causes a handle leak\n  }    \nFindRunningServices();\nreturn TRUE;", "id": 71706, "time": "2005-03-02T12:50:42Z", "bug_id": 33803, "creation_time": "2005-03-02T12:50:42Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "wrowe@apache.org", "text": "Committed and backported for the next 2.0.62 and 2.2.7 releases.\n\nThanks for the patch!", "id": 112098, "time": "2007-12-22T12:12:01Z", "bug_id": 33803, "creation_time": "2007-12-22T12:12:01Z", "is_private": false, "attachment_id": null}]