[{"count": 0, "tags": [], "bug_id": 32354, "is_private": false, "text": "If you set a large scale factor say 400% on the AWTRenderer and render the first\npage it works but when switching to the next page it fails with an OutOfMemoryError.\nThe problem is in the render(Page) method where it allocates a new BufferedImage\nand graphics. During the BufferedImage allocation the the previous pageImage and\ngraphics can not be garbage collected because they are still referenced.\nTherefor it requires enough memory for two BufferedImages.\nThis can be fixed by setting the pageImage and graphics variables to null before\nallocating a new BufferedImage.\nAlso after the page has been rendered the graphics variable is not needed and\ncan be garbage collected.\nHeres my proposed fix:\n\npublic void render(Page page) throws IOException {\n    pageImage = null;\n    // do work ...\n    graphics = null;\n}\n\nI checked the current CVS to see if this has been addressed but it now generates\nBufferedImages for each page and stores them in a bufferedImageList. This would\nsurely require a large amount of memory!\nI personally prefer the Java2DHook style thing in the\nhttp://nagoya.apache.org/wiki/apachewiki.cgi?FOPAvalonization/AltAPIProposalJM\nwhere the user can supply the Graphics2D to render to so they can manage their\nown memory.", "id": 67380, "time": "2004-11-23T10:15:36Z", "creator": "richard.zschech@cqrdata.com", "creation_time": "2004-11-23T10:15:36Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Fixed in FOP 0.94 and probably earlier versions", "attachment_id": null, "bug_id": 32354, "id": 110816, "time": "2007-11-20T01:59:09Z", "creator": "pascal.sancho@takoma.fr", "creation_time": "2007-11-20T01:59:09Z", "is_private": false}, {"count": 2, "tags": [], "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "is_private": false, "bug_id": 32354, "id": 156076, "time": "2012-04-01T06:57:08Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:57:08Z", "attachment_id": null}]