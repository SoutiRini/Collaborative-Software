[{"count": 0, "attachment_id": 23011, "bug_id": 46389, "text": "Created attachment 23011\nPatch to allow UDP broadcasts on platforms which require SO_BROADCAST to be set\n\nConsider the following (simplified) code snippet for broadcasting a message on a particular network interface:\n\n\nbool\nbroadcast_message( apr_pool_t* pool, /* memory pool to allocate stuff in */\n                   const char* data, /* message to send */\n                   apr_size_t  len ) /* length of message to send */\n{\n    apr_socket_t*   sock;\n    apr_sockaddr_t* dest;\n\n    /* Create a socket for sending UDP messages */\n    if ( APR_SUCCESS != apr_socket_create( &sock, APR_INET, SOCK_DGRAM,\n                                           APR_PROTO_UDP, pool ) )\n        return false;\n    /* Get the broadcast address for the network (suppose we're sending on an\n     * interface with address 192.168.0.1/24) */\n    if ( APR_SUCCESS != apr_sockaddr_info_get( &dest, \"192.168.0.255\",\n                                               APR_INET, 1234, 0, pool ) )\n        return false;\n    /* Send (broadcast) the message */\n    if ( APR_SUCCESS != apr_socket_sendto( sock, dest, 0, data, &len ) )\n        return false;\n    return true;\n}\n\n\nThis succeeds on Windows (only tested on XP SP2) but on Linux (only tested with 2.6.26 kernel, glibc 2.6.1) the apr_socket_sendto call fails with status code APR_EACCES. This failure occurs because the SO_BROADCAST option is not set on the socket.\n\nSince apr_socket_opt_set does not support setting the SO_BROADCAST option the only workaround is to obtain the underlying socket descriptor and call setsockopt directly, handling all portability issues oneself.\n\n\nIt seems to me that there are two possible solutions:\n\n1. Always allow broadcasts. Call setsockopt to set SO_BROADCAST on platforms supporting it when apr_socket_sendto is used on a SOCK_DGRAM socket.\n\n2. Implement support for SO_BROADCAST in apr_socket_opt_[gs]et, testing ourselves for a broadcast address in apr_socket_sendto on platforms which do not support SO_BROADCAST or ignore its setting.\n\n\nI attach a patch (against current subversion trunk) which implements option (1), since that was easiest and I'm lazy. The patch also extends testsockets.c to cover the case of UDP broadcasts.\n\nDisclaimer: The patch has only been tested on Linux.", "id": 123268, "time": "2008-12-12T16:25:38Z", "creator": "alex.apache@madalex.me.uk", "creation_time": "2008-12-12T16:25:38Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "mueller@itestra.com", "text": "Created attachment 26780\nAdd SO_BROADCAST support\n\nAlex has proposed two possible solutions and provided a patch for solution 1. Attached you find a patch for solution 2 against current HEAD revision.\n\nThe patch has been testes on Windows Vista and Ubuntu 10.10", "id": 145060, "time": "2011-03-17T09:12:15Z", "bug_id": 46389, "creation_time": "2011-03-17T09:12:15Z", "is_private": false, "attachment_id": 26780}, {"count": 2, "tags": [], "text": "Created attachment 26781\nAdd SO_BROADCAST support for Version 1.4.2\n\nAttached you find a patch for solution 2 against Version 1.4.2, if someone needs it. The patch has been tested on Windows Vista and Ubuntu 10.10", "is_private": false, "id": 145061, "creator": "mueller@itestra.com", "time": "2011-03-17T09:13:36Z", "bug_id": 46389, "creation_time": "2011-03-17T09:13:36Z", "attachment_id": 26781}, {"count": 3, "tags": [], "bug_id": 46389, "text": "r1183693, r1183717, will be in 1.5.0", "id": 150628, "time": "2011-10-15T21:29:33Z", "creator": "sf@sfritsch.de", "creation_time": "2011-10-15T21:29:33Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "in apr 1.5.0 and later", "is_private": false, "id": 172599, "creator": "trawick@apache.org", "time": "2014-01-21T13:17:40Z", "bug_id": 46389, "creation_time": "2014-01-21T13:17:40Z", "attachment_id": null}]