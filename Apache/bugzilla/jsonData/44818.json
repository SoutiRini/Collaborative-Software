[{"count": 0, "tags": [], "bug_id": 44818, "attachment_id": null, "id": 115580, "time": "2008-04-13T23:50:51Z", "creator": "etouchard@infovista.com", "creation_time": "2008-04-13T23:50:51Z", "is_private": false, "text": "When a request with GET method is done with a content-length header set to for example 10000, the thread serving the request hangs until time out.\n\nit hangs due to a call to IdentityInputFilter.end();\n\nCould it be a security problem (dos attack) ?"}, {"count": 1, "tags": [], "bug_id": 44818, "attachment_id": null, "id": 115590, "time": "2008-04-14T07:52:43Z", "creator": "remm@apache.org", "creation_time": "2008-04-14T07:52:43Z", "is_private": false, "text": "I would be ok to add an option for that. Not reading would mean no keepalive when there's leftover data."}, {"count": 2, "tags": [], "bug_id": 44818, "attachment_id": null, "id": 115593, "time": "2008-04-14T08:25:23Z", "creator": "etouchard@infovista.com", "creation_time": "2008-04-14T08:25:23Z", "is_private": false, "text": "I like your suggestion about an option. And you are right, not reading would mean no keepalive, but asking a GET with a content-length is either a programmer mistake or a malicious act. It should not appear on production server. I think that in this particular case the keepalive can be broke."}, {"count": 3, "tags": [], "bug_id": 44818, "attachment_id": null, "id": 115594, "time": "2008-04-14T09:57:12Z", "creator": "remm@apache.org", "creation_time": "2008-04-14T09:57:12Z", "is_private": false, "text": "A GET with a body is perfectly valid. An option would allow disabling data swallowing, for all methods (if data remains after the execution of the servlet, the connection would then be closed).\n\nNote: this is not a security problem (it only uses a thread, as many operations)."}, {"count": 4, "attachment_id": null, "bug_id": 44818, "is_private": false, "id": 115602, "time": "2008-04-15T00:23:55Z", "creator": "etouchard@infovista.com", "creation_time": "2008-04-15T00:23:55Z", "tags": [], "text": "I've check the rfc 2616 and i found the following\n\nThe presence of a message-body in a request is signaled by the inclusion of a Content-Length or Transfer-Encoding header field in the request's message-headers. A message-body MUST NOT be included in a request if the specification of the request method (section 5.1.1) does not allow sending an entity-body in requests. A server SHOULD read and forward a message-body on any request; if the request method does not include defined semantics for an entity-body, then the message-body SHOULD be ignored when handling the request. \n\nAnd of course there is no mention of \"GET method does not allow sending an entity-body\", so i guess it's allowed, stange but allowed. \n\nAnd it is specified that \"A server SHOULD read and forward a message-body on any request\", so you have to swallow extra information.\n\nBy telling \"it only uses a thread\", do you mean only one thread for the whole tomcat, or one thread by request ?"}, {"count": 5, "tags": [], "bug_id": 44818, "attachment_id": null, "id": 115685, "time": "2008-04-17T12:08:54Z", "creator": "markt@apache.org", "creation_time": "2008-04-17T12:08:54Z", "is_private": false, "text": "It is one thread per request and it is up to the app to read the content. As Remy said, an option could be added to do this by default."}, {"count": 6, "attachment_id": null, "bug_id": 44818, "is_private": false, "id": 170155, "time": "2013-09-18T12:56:52Z", "creator": "markt@apache.org", "creation_time": "2013-09-18T12:56:52Z", "tags": [], "text": "The only way to handle this would be to explicitly deny GET requests with a content length header and close the connection with a 400 response.\n\nIf an application wants to do this, they can do so with a Filter.\n\nThere is no greater DoS risk with this than there is with a POST request that fails to provide the complete request body."}]