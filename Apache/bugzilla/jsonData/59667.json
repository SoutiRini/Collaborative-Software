[{"count": 0, "attachment_id": null, "bug_id": 59667, "is_private": false, "id": 191428, "time": "2016-06-06T18:30:55Z", "creator": "tommarracci@aircraftspruce.com", "creation_time": "2016-06-06T18:30:55Z", "tags": [], "text": "While building 2.4.20 with openssl-1.0.1t and libraries linking statically, get the following build error:\n\n/usr/local/httpd-2.4.20/srclib/apr/libtool --silent --mode=link gcc -std=gnu99  -g -O2 -pthread   -L/usr/local/ssl/lib -lssl -lcrypto -lrt -lcrypt -lpthread -ldl  \\\n                 -o ab  ab.lo                              /usr/local/httpd-2.4.20/srclib/apr-util/libaprutil-1.la /usr/local/httpd-2.4.20/srclib/apr-util/xml/expat/libexpat.la /usr/local/httpd-2.4.20/srclib/apr/libapr-1.la -lrt -lcrypt -lpthread -ldl -lm\nab.o: In function `main':\n/usr/local/httpd-2.4.20/support/ab.c:2329: undefined reference to `TLSv1_1_client_method'\n/usr/local/httpd-2.4.20/support/ab.c:2331: undefined reference to `TLSv1_2_client_method'\ncollect2: ld returned 1 exit status\nmake[2]: *** [ab] Error 1\n\n\nHow do I proceed?"}, {"count": 1, "tags": [], "creator": "tommarracci@aircraftspruce.com", "text": "Found a suitable workaround for this. In my case, the os was installed with openssl 9.8g using apt-get but I was patching it with the latest source downloads up to 1.0.1t.  There was a library conflict that I simply could not work my around.  In the end, I put the new ssl into it's own directory, rather than use /usr/local/ssl and used that to make httpd.  All linked and works great now.", "id": 191457, "time": "2016-06-07T19:09:39Z", "bug_id": 59667, "creation_time": "2016-06-07T19:09:39Z", "is_private": false, "attachment_id": null}]