[{"count": 0, "attachment_id": null, "bug_id": 41248, "is_private": false, "id": 97390, "time": "2006-12-27T20:28:04Z", "creator": "barlock@us.ibm.com", "creation_time": "2006-12-27T20:28:04Z", "tags": [], "text": "I have the following test program that generates an XLS file with two \ncolumns.  If I try to import this XLS into Microsoft Access 2003 (File > \nGet External Data > Import) only the first column shows in the Access \ndialog listing the data to be imported.  If I change the XLS to have three \ncolumns, all three show up!  Also, if I open the generated XLS file and save \nit, it imports into Access without error.  \n\nIs this a bug in my program, or a bug in the HSSF classes? (I posted to the \nPOI users mailing list, but no response.)\n\nimport java.io.FileOutputStream;\n\nimport org.apache.poi.hssf.usermodel.HSSFCell;\nimport org.apache.poi.hssf.usermodel.HSSFRow;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\n\npublic class Test2 {\n    public static void main(String[] args) throws Exception {\n        final String[] header = { \n            \"a\",\n            \"b\",\n            //\"b\", \"c\"\n        };\n \n        HSSFWorkbook wb = new HSSFWorkbook();\n        HSSFSheet sheet = wb.createSheet(\"Sheet 1\");\n        HSSFRow row;\n        HSSFCell cell; \n        HSSFWorkbook hssfwb = new HSSFWorkbook();\n\n        // Write the header.\n        row = sheet.createRow(0);\n        for (short j = 0; j < header.length; j++) {\n            row.createCell(j).setCellValue(header[j]);\n        }\n\n        // Write a row of data.\n        short k = 0;\n        row = sheet.createRow(1);\n        cell = row.createCell(k++);\n        cell.setCellValue(\"a_value\");\n        cell = row.createCell(k++);\n        cell.setCellValue(\"b_value\");\n        //cell = row.createCell(k++);\n        //cell.setCellValue(\"c_value\");\n \n        String outputFileName = \"test.xls\";\n        FileOutputStream fos = new FileOutputStream(outputFileName);\n        wb.write(fos);\n        fos.close();\n    }\n}"}, {"count": 1, "tags": [], "bug_id": 41248, "attachment_id": null, "is_private": false, "id": 97558, "time": "2007-01-03T06:24:25Z", "creator": "avik@apache.org", "creation_time": "2007-01-03T06:24:25Z", "text": "Given that there is no spec, different implementations will have different\ninterpretations of what's required for a valid file. Our effort has been to\nensure that files created by POI get read correctly in Excel. And vice versa. I\nguess that supporting other implementations of the format will be too difficult\na task for the current dev team. If someone can however, debug this and say\nwhich records are causing the problem, it might get a fix.  \n\nSorry, just trying to be realistic. "}, {"count": 2, "tags": [], "bug_id": 41248, "attachment_id": null, "is_private": false, "id": 116463, "time": "2008-05-10T20:01:50Z", "creator": "josh@apache.org", "creation_time": "2008-05-10T20:01:50Z", "text": "Marking as \"won't fix\" because POI's primary goal is to be inter-operable with Excel.  Feel free to submit a patch which would allow Access to read the file without the intermediate re-save by Excel (as long as the first goal is preserved)"}]