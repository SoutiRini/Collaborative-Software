[{"count": 0, "attachment_id": null, "creator": "yegor@dinom.ru", "is_private": false, "id": 91730, "time": "2006-07-31T14:03:12Z", "bug_id": 40143, "creation_time": "2006-07-31T14:03:12Z", "tags": [], "text": "In some cases RichTextRun returns wrong style attributes.\nRun the following fragment against the attached file and see that the font size\nis wrong.\n RichTextRun says the size is 7 and it is wrong.\n\n\n        Slide[] slide = ppt.getSlides();\n        for (int i = 0; i < slide.length; i++) {\n            TextRun[] txrun = slide[i].getTextRuns();\n            for (int j = 0; j < txrun.length; j++) {\n                TextRun run = txrun[j];\n                RichTextRun[] rtf = run.getRichTextRuns();\n                for (int k = 0; k < rtf.length; k++) {\n                    System.out.println(rtf[k].getRawText() + \": \" +\nrtf[k].getFontSize());\n                }\n            }\n\n        }"}, {"count": 1, "tags": [], "bug_id": 40143, "attachment_id": 18664, "id": 91731, "creation_time": "2006-07-31T14:03:39Z", "time": "2006-07-31T14:03:39Z", "creator": "yegor@dinom.ru", "text": "Created attachment 18664\nfile for testing", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 40143, "text": "Fixed.\n\nThere are three bugs I had to fix:\n\n (1) Bug in StyleTextPropAtom.\nThe rule is that sum(length) for paragraph and character style runs must be\ntext.length + 1.\nIt was true only for character styles. I had to add the symmetrical code to the\nparagraph block.\nSee the change in StyleTextPropAtom.setParentTextSize\n\nI added a warning if this rule is broken and it helped me to discover two more bugs:\n\n (2) The data setup for data_a and data_c in TestStyleTextPropAtom was wrong. \n\nWhat we had for data_a:\n\n        /** From a real file: a paragraph with 4 different styles */\n  private byte[] data_a = new byte[] { \n          0, 0, 0xA1-256, 0x0F, 0x2A, 0, 0, 0,\n      0x36, 00, 00, 00, // paragraph is 54 long \n      00, 00,           // (paragraph reserved field)\n      00, 00, 00, 00,   // it doesn't have any styles\n      0x15, 00, 00, 00, // first char run is 21 long\n      00, 00, 00, 00,   // it doesn't have any styles\n      0x11, 00, 00, 00, // second char run is 17 long\n      00, 00, 0x04, 00, // font.color only\n      00, 00, 00, 0x05, // blue\n      0x10, 00, 00, 00, // third char run is 16 long\n      00, 00, 0x04, 00, // font.color only\n      0xFF-256, 0x33, 00, 0xFE-256 // red\n        };\n   private int data_a_text_len = 54;\n\n\nThe value passed to StyleTextPropAtom.setParentTextSize is the text length.\nIf we read the corresponding style record we should get text.length + 1 chars\ncovered.\nIt means that actual text length is 54-1. The same stuff is with data_c. The\ntext length is 123-1.\n\n (3) When we construct a new style record we need to pass text.length+1 to the\nconstructor.\nSee the change in TextRun.ensureStyleAtomPresent. \n\nWith these changes everything works fine.\n\nRegards,\nYegor", "id": 97879, "time": "2007-01-10T06:09:05Z", "creator": "yegor@dinom.ru", "creation_time": "2007-01-10T06:09:05Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 40143, "attachment_id": 19385, "is_private": false, "id": 97880, "time": "2007-01-10T06:10:45Z", "creator": "yegor@dinom.ru", "creation_time": "2007-01-10T06:10:45Z", "text": "Created attachment 19385\nthe patch"}, {"count": 4, "tags": [], "bug_id": 40143, "attachment_id": null, "id": 97881, "creation_time": "2007-01-10T06:14:04Z", "time": "2007-01-10T06:14:04Z", "creator": "yegor@dinom.ru", "text": "I hope we don't have any more bugs with the style record. \nI would like to refactor the code as we discussed some time ago: move \nTextPropCollection and TextProp out of StyleTextPropAtom, try to integrate it\nwith TxMasterStyleAtom, etc.\n\nYegor", "is_private": false}, {"count": 5, "tags": [], "bug_id": 40143, "attachment_id": 19393, "is_private": false, "id": 97938, "time": "2007-01-11T08:07:25Z", "creator": "tales@great.ufc.br", "creation_time": "2007-01-11T08:07:25Z", "text": "Created attachment 19393\nreturns 0 for the font.size\n\nI applied the patch with the fix of this bug, but the same problem still\nhappens. The font.size value returned is wrong (almost always, it returns 0). I\ntested the file test2 and this I'm uploading and I have more two files with the\nsame problem."}, {"count": 6, "tags": [], "bug_id": 40143, "attachment_id": null, "id": 97941, "time": "2007-01-11T08:21:23Z", "creator": "apache@gagravarr.org", "creation_time": "2007-01-11T08:21:23Z", "is_private": false, "text": "Bah, that code hurt my head enough when it was written the first time...\n\nI've committed your code (hopefully infra will do your account soon!). Glad you\nmanaged to track the bug down :)\n\nI agree we should split out the TextPropCollection and TextProp stuff, probably\ninto model. I suspect we'll want two sub classes, one for the slide style\ndefinitions, and one for the master definitions. Should be cleaner code then."}, {"count": 7, "attachment_id": null, "bug_id": 40143, "is_private": false, "id": 97942, "time": "2007-01-11T08:22:43Z", "creator": "apache@gagravarr.org", "creation_time": "2007-01-11T08:22:43Z", "tags": [], "text": "Tales - could you let us know which data you would expect from your test file,\nso we can turn it into a (failing) test to work against?"}, {"count": 8, "tags": [], "bug_id": 40143, "attachment_id": null, "id": 97946, "creation_time": "2007-01-11T08:36:21Z", "time": "2007-01-11T08:36:21Z", "creator": "tales@great.ufc.br", "text": "The file I attached (returns 0 for the font.size) has one text box with font\nsize 20. This is the value I expected, but RichTextRun.getFontSize() returns 0.\nRunning with the file previously attached, the values returned were correct.", "is_private": false}, {"count": 9, "tags": [], "bug_id": 40143, "attachment_id": 19398, "id": 97976, "creation_time": "2007-01-12T01:24:22Z", "time": "2007-01-12T01:24:22Z", "creator": "yegor@dinom.ru", "text": "Created attachment 19398\nthe patch which fixed the order of properties in StyleTextPropAtom\n\nI think it is the final touch.\n\nThe order in which properties are read in StyleTextPropAtom is NOT defined by\nthe property mask value. I had suspects it is so but coudn't confirm it. \nTales, thank you for the attached ppt. \n\nWhat I changed:\n - The order of property definitions in StyleTextPropAtom\n - added StyleTextPropAtom.toStirng() . It's handy for debugging.\n - Included the test data into TestStyleTextPropAtom.\n\nYegor", "is_private": false}, {"count": 10, "tags": [], "bug_id": 40143, "attachment_id": null, "id": 98071, "creation_time": "2007-01-15T07:24:57Z", "time": "2007-01-15T07:24:57Z", "creator": "apache@gagravarr.org", "text": "Patch applied, cheers for that Yegor\n\nDid you find some method to the madness of the ordering of the TextProps, or was\nit just trial and error?\n\nTales - Hopefully this fixes your problem, but shout if there's still more we\nneed to sort.", "is_private": false}, {"count": 11, "tags": [], "bug_id": 40143, "attachment_id": null, "id": 98124, "creation_time": "2007-01-16T05:12:16Z", "time": "2007-01-16T05:12:16Z", "creator": "yegor@dinom.ru", "text": ">>Did you find some method to the madness of the ordering of the TextProps, or was\n>>it just trial and error?\n\nNo, I gave up searching for intelligence in style records :).\n\nI found the fix mostly by trial and error - debugged and saw that the font size\nresides in a wrong property. Made more tests , swapped some props and voila!\n\nYegor", "is_private": false}]