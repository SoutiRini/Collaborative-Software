[{"text": "Here's the command I used to precompile my web application:\n  \n  java -classpath\n~/tomcat/common/lib/servlet.jar:~/tomcat/common/lib/jasper-compiler.jar:~/tomcat/common/lib/jasper-runtime.jar:~/tomcat/common/lib/ant.jar\norg.apache.jasper.JspC -v6 -l -s -d /tmp/ -uriroot $PROJECT_HOME/$CLIENT/pages\n$PROJECT_HOME/$CLIENT/pages/core/application_attributes.jsp. The file is\nactually under $PROJECT_HOME/base/core.\n\nJspc generates an empty application_attributes_jsp.java under\n/tmp/$PRJECT_HOME/$CLIENT/pages/core.\n\nIt seems Jspc is using canonical path of the jsp file and based on that, it \nchangs the outputDir. \n\nIs there a way to get around it?\n\ncw", "tags": [], "bug_id": 18477, "is_private": false, "count": 0, "id": 34080, "time": "2003-03-28T18:16:31Z", "creator": "clw226@yahoo.com", "creation_time": "2003-03-28T18:16:31Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "We have the same problem in our development environment. I wanted to precompile \nour JSPs (for performance), but our version control system creates all files in \nthe workarea as symbolic links to another area of the disk hence our JSPs \ncouldn't be compiled. (As an aside it also got thrown by the JARs in WEB-\nINF/lib being symbolic links as well).\n\nI remember there was an earlier bug (#12049) related to symbolic links and \nsecurity seemed to be the problem (which I can understand, in a real webapp you \nwouldn't want symbolic links to other parts of the disk where files could be \ntampered with), but for standalone precompilation it shouldn't be a problem.\nI would have thought that Tomcat (or whatever server you are using) should \nreally handle the issue of symbolic links being allowed or not but I'm not that \nwell up on it really.\n\nI found 3 places in JspC.java that were using getCanonicalPath() that caused me \nproblems -\ninitClassLoader() for the JARs,\nlocateUriRoot() only used if you don't specify -uriRoot,\nexecute() where the pathnames for the JSPs are converted to URIs relative to \nuriRoot.\n\nI've patched our system locally to allow us to compile these links (security \nisn't a problem since its only for precompiling in our development area), I'll \ntidy that up a bit and submit it.\n", "is_private": false, "bug_id": 18477, "id": 48575, "time": "2003-12-05T16:21:03Z", "creator": "daniel_collins@tertio.com", "creation_time": "2003-12-05T16:21:03Z", "attachment_id": null}, {"text": "Created attachment 9419\nPatch to allow not following symbolic links when reading JSPs and JARs.", "tags": [], "bug_id": 18477, "is_private": false, "count": 2, "id": 48576, "time": "2003-12-05T16:22:01Z", "creator": "daniel_collins@tertio.com", "creation_time": "2003-12-05T16:22:01Z", "attachment_id": 9419}, {"count": 3, "tags": [], "creator": "markt@apache.org", "is_private": false, "id": 73028, "attachment_id": null, "bug_id": 18477, "creation_time": "2005-03-29T23:49:09Z", "time": "2005-03-29T23:49:09Z", "text": "The fix for bug 28147 changed one of the 3 instances identified in the patch\nabove to use getAbsoluteXXX() instead of getCanonicalXXX(). I see no reason why\nthis should be OK for one instance and not the other two so I have ported the\n28147 patch from TC5 and replaced the other two instances as well."}]