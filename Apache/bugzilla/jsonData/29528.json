[{"count": 0, "attachment_id": null, "bug_id": 29528, "text": "httpd-2.0.49. i have no filters or anything like that defined, no mod_deflate, etc. \n\nI have a CGI that worked perfectly with 1.3.x that is now causing 2.0.x to run\nout of memory. The CGI generates an MP3 file (sometimes 100+MB in size) and then\nprints it to STDOUT. here is the what httpd's mem. usage looks like in top:\n\n  PID USER      PR  NI  VIRT SWAP  RES  SHR S %CPU   TIME %MEM COMMAND\n16495 apache    16   0  277m 133m 144m 133m S  0.0   0:00 14.3 httpd\n11813 apache    16   0  263m 133m 130m 133m S  0.0   0:00 13.0 httpd\n11812 apache    15   0  361m 232m 129m 133m S  0.0   0:01 12.9 httpd\n11815 apache    16   0  333m 208m 124m 133m S  0.0   0:01 12.4 httpd\n11809 apache    16   0  316m 227m  89m 133m S  0.0   0:00  8.9 httpd\n\nIf I then try to restart httpd, it seems that some child processes have become\nunkillable. If use kill -9 and restart, I try to reproduce the problem, but\ncannot with my broadband connection. I suspect it is slow clients on dialup\nmodems that is causing httpd to buffer the data???\n\nhere is the important part of what the perl CGI does:\n\nsub send_file ($) {\n  my $file = shift;\n  $|=1;\n  my $begin = 0;\n  my $range_header = \"Accept-Ranges: bytes\";\n  my $size = my $filesize = (stat($file))[7];\n  if ($ENV{'HTTP_RANGE'} =~ /^bytes=(\\d+)/) {\n    $begin = $1;\n    $size = $filesize - $begin;\n\n    my $tmp = $filesize-1;\n    $range_header .= \"\\nContent-Range: bytes $begin-$tmp/$filesize\";\n  }\n \n  print \"Content-Type: audio/mpeg\nContent-Length: $size\n$range_header\n                                                                                \n\";\n  open( MP3,\"< $file\");\n  binmode MP3;\n  seek(MP3, $begin, 0); # from the beginning\n  while (read MP3, my $buf, 32768) {\n    print STDOUT $buf;\n  }\n  close MP3;\n}", "id": 59117, "time": "2004-06-11T16:45:09Z", "creator": "mh@nadir.org", "creation_time": "2004-06-11T16:45:09Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "text": "One more thing that I forgot to mention: this is with prefork and mod_cgi, not\nmod_cgid.\n\n-m", "attachment_id": null, "bug_id": 29528, "id": 59119, "time": "2004-06-11T16:46:39Z", "creator": "mh@nadir.org", "creation_time": "2004-06-11T16:46:39Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 29528, "attachment_id": null, "text": "Another thing that I forgot, is that the CGI gets called via mod_rewrite, an\ninternal rewrite so that a browser request of something like:\n\n/128/20040610.23.00-01.15.mp3 will get mapped to\n\n/cgi-bin/archive.cgi?rate=128&range=20040610.23.00-01.15&codec=mp3\n\nHere are the rewrite rules that allows this to happen:\n\nRewriteEngine On\nRewriteRule \"^([0-9]+)/([a-z0-9]+)\\.([-0-9:\\.]+)\\.pls$\"\n/cgi-bin/pls.cgi?rate=$1&range=$3&codec=$2\n[L,E=QUERY_STRING:rate=$1&range=$3&codec=$2]\n#RewriteRule \"^([0-9]+)/([-0-9:\\.]+)\\.mp3$\" /cgi-bin/mp3.cgi?rate=$1&range=$2\n[L,E=QUERY_STRING:rate=$1&range=$2]\nRewriteRule \"^([0-9]+)/([a-z0-9]+)\\.([-0-9:\\.]+)\\.m3u$\"\n/cgi-bin/m3u.cgi?rate=$1&range=$3&codec=$2\n[L,E=QUERY_STRING:rate=$1&range=$3&codec=$2]\nRewriteRule \"^([0-9]+)/([-0-9:\\.]+)\\.test$\"\n/cgi-bin/archive2.cgi?rate=$1&range=$2&codec=mp3\n[L,E=QUERY_STRING:rate=$1&range=$2&codec=mp3]\nRewriteRule \"^([0-9]+)/([-0-9:\\.]+)\\.(...)$\"\n/cgi-bin/archive.cgi?rate=$1&range=$2&codec=$3\n[L,E=QUERY_STRING:rate=$1&range=$2&codec=$3]\n\n", "id": 59126, "time": "2004-06-11T18:09:41Z", "creator": "mh@nadir.org", "creation_time": "2004-06-11T18:09:41Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 29528, "is_private": false, "id": 59128, "attachment_id": null, "creator": "trawick@apache.org", "creation_time": "2004-06-11T18:17:10Z", "time": "2004-06-11T18:17:10Z", "text": "See also\n\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=23567\n"}, {"count": 4, "tags": [], "bug_id": 29528, "is_private": false, "id": 59131, "attachment_id": null, "creator": "mh@nadir.org", "creation_time": "2004-06-11T18:54:46Z", "time": "2004-06-11T18:54:46Z", "text": "yup, when I use the example cgi script in bug #23567, I can reproduce the\nproblem here. Most likely the same bug. This rules out mod_rewrite and slow\nclients as well. Interestingly, when it's an already bloated cgi that handles\nthe request, it doesn't start growing until the amount of data sent by the\nexample CGI exceeds the existing size of the httpd process.\n\nI've upped the severity to Major.\n\n-m\n\n"}, {"count": 5, "tags": [], "bug_id": 29528, "is_private": false, "text": "Maybe three bugs separate here:\n\n1) memory leak in brigade and cleanup handling, bug 23567\n2) ap_byterange_filter sucks the entire brigade into memory, eek\n3) for a CGI script which does its own Range handling, the byterange_filter\ndoesn't get out of the way\n\nYou could try:\n\nhttp://cvs.apache.org/~jorton/ap_cgirange.diff\n\nto solve (3)", "id": 59297, "time": "2004-06-16T14:33:17Z", "creator": "jorton@redhat.com", "creation_time": "2004-06-16T14:33:17Z", "attachment_id": null}, {"count": 6, "attachment_id": 11855, "bug_id": 29528, "text": "Created attachment 11855\nnotice if a CGI script does its own range handling", "id": 59298, "time": "2004-06-16T14:34:04Z", "creator": "jorton@redhat.com", "creation_time": "2004-06-16T14:34:04Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 29528, "is_private": false, "id": 59347, "attachment_id": null, "creator": "mh@nadir.org", "creation_time": "2004-06-16T19:00:41Z", "time": "2004-06-16T19:00:41Z", "text": "So the patch works perfectly, before the patch using Winget I get huge httpd's\nafter the patch the httpd processes do not grow in size at all! this is great, I\ncan finally use apache 2.0.x.\n\nI guess that patch can be included into 2.0.50?"}, {"count": 8, "tags": [], "bug_id": 29528, "attachment_id": null, "id": 59350, "time": "2004-06-16T19:19:50Z", "creator": "wrowe@apache.org", "creation_time": "2004-06-16T19:19:50Z", "is_private": false, "text": "\n  Well, we have a voting system, this patch makes perfect sense here.\n"}, {"count": 9, "attachment_id": null, "creator": "mh@nadir.org", "is_private": false, "id": 59748, "time": "2004-06-23T03:02:30Z", "bug_id": 29528, "creation_time": "2004-06-23T03:02:30Z", "tags": [], "text": "well. some bad news. It seems that the memory leak is still there. Not as\nfrequent or as easily reproducable, but still there. Probably bug 23567?\n\nI've starting logging the memory usage via mrtg, this machine has 1 gig of ram,\nso 60% is quite a lot. When the usage goes down to ~11%, it's cause I've\nrestarted the server. I was hoping that the logging combined with the PID would\nallow me to pin the bug to a separate user-agent, but no such luck. Maybe\nRealMedia's player (RMA), but not sure. Definitely not HTTP_RANGE requests this\ntime though.\n\nThe mrtg graphs are at: http://secure.ckut.ca/mrtg/httpd.html\n\n-m"}, {"count": 10, "tags": [], "text": "There are lots of leaks in various places which are being revelead.   Once the\nright approach to fixing these has been decided upon I'll post the set of\npatches I'm accumulating for 2.0.\n\nAre any dynamic content generators like mod_include or PHP in use on this site?\n", "attachment_id": null, "bug_id": 29528, "id": 59752, "time": "2004-06-23T08:43:02Z", "creator": "jorton@redhat.com", "creation_time": "2004-06-23T08:43:02Z", "is_private": false}, {"count": 11, "tags": [], "text": "Except for php, there are no dynamic content generators, I purposely commented\nout mod_include. mod_perl is loaded but not being used. No filters are defined\neither.\n\nI have one php script in use. It's extremely simple and could easily be replaced\nwith a CGI. I'll attach it hear.\n\nI'm looking forward to your patches.\n", "attachment_id": null, "id": 59773, "creator": "mh@nadir.org", "time": "2004-06-23T13:56:55Z", "bug_id": 29528, "creation_time": "2004-06-23T13:56:55Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 29528, "attachment_id": 11924, "id": 59774, "time": "2004-06-23T13:57:46Z", "creator": "mh@nadir.org", "creation_time": "2004-06-23T13:57:46Z", "is_private": false, "text": "Created attachment 11924\nthe one php script in use on the site."}, {"count": 13, "tags": [], "text": "OK per comment 5, of the three issues here, two are fixed and one is Difficult,\nbut that's covered by bug 23567.\n\nThe \"byterange filter eats all my memory\" issue is bug 29962.", "attachment_id": null, "bug_id": 29528, "id": 79078, "time": "2005-08-26T19:46:31Z", "creator": "jorton@redhat.com", "creation_time": "2005-08-26T19:46:31Z", "is_private": false}]