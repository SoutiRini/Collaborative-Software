[{"count": 0, "tags": [], "bug_id": 53023, "attachment_id": null, "text": "mod_rewrite additional syntax to perform other useful tests against\nTeststring variant 3 (->\"You can perform integer comparisons\") is\ncompletely broken because the parser never recognizes the options\n-eq, -ge, ... because the 2nd argument is tested to have only two\ncharacters (-f, -L, ...) so these other options are never seen by\nthe code below which checks for these options - see my comments\nin the code below.\n\nIn contrast to variant 2 (->\"You can perform lexicographical\nstring comparisons\") where the CondPattern is explicitely mentioned\nin the syntax description, the documentation of variant 3 does not\ndescribe how to apply the CondPattern.\n\nIt is unclear how the CondPattern is going into the RewriteCond command,\nthere is also nowhere an example for variant 3.\n\n    else if (*a2 && a2[1]) {\n        if (!a2[2] && *a2 == '-') { /* !!! test string to only two chars */\n            switch (a2[1]) {\n            case 'f': newcond->ptype = CONDPAT_FILE_EXISTS; break;\n            case 's': newcond->ptype = CONDPAT_FILE_SIZE;   break;\n            case 'd': newcond->ptype = CONDPAT_FILE_DIR;    break;\n            case 'x': newcond->ptype = CONDPAT_FILE_XBIT;   break;\n            case 'h': newcond->ptype = CONDPAT_FILE_LINK;   break;\n            case 'L': newcond->ptype = CONDPAT_FILE_LINK;   break;\n            case 'U': newcond->ptype = CONDPAT_LU_URL;      break;\n            case 'F': newcond->ptype = CONDPAT_LU_FILE;     break;\n            /* !!! these cases can never be reached due to the two-char test above */\n            case 'l': if (a2[2] == 't')\n                          a2 += 3, newcond->ptype = CONDPAT_INT_LT;\n                      else if (a2[2] == 'e')\n                          a2 += 3, newcond->ptype = CONDPAT_INT_LE;\n                      else /* Historical; prefer -L or -h instead */\n                          newcond->ptype = CONDPAT_FILE_LINK;\n                      break;\n            case 'g': if (a2[2] == 't')\n                          a2 += 3, newcond->ptype = CONDPAT_INT_GT;\n                      else if (a2[2] == 'e')\n                          a2 += 3, newcond->ptype = CONDPAT_INT_GE;\n                      break;\n            case 'e': if (a2[2] == 'q')\n                          a2 += 3, newcond->ptype = CONDPAT_INT_EQ;\n                      break;\n            case 'n': if (a2[2] == 'e') {\n                          /* Inversion, ensure !-ne == -eq */\n                          a2 += 3, newcond->ptype = CONDPAT_INT_EQ;\n                          newcond->flags ^= CONDFLAG_NOTMATCH;\n                      }\n                      break;\n            }\n        }\n\nfor me the following patch fixes the defect for me:\n\n--- modules/mappers/mod_rewrite.c       Thu Jan 26 20:15:41 2012\n+++ modules/mappers/mod_rewrite.c       Mon Apr  2 09:04:12 2012\n@@ -3243,7 +3243,7 @@\n         newcond->ptype = CONDPAT_AP_EXPR;\n     }\n     else if (*a2 && a2[1]) {\n-        if (!a2[2] && *a2 == '-') {\n+        if (*a2 == '-') {\n             switch (a2[1]) {\n             case 'f': newcond->ptype = CONDPAT_FILE_EXISTS; break;\n             case 's': newcond->ptype = CONDPAT_FILE_SIZE;   break;", "id": 157049, "time": "2012-04-02T08:18:00Z", "creator": "apache@freakout.de", "creation_time": "2012-04-02T08:18:00Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 53023, "text": "Hmm, the patch doesn't look right. It seems to allow things like -foo", "id": 157072, "time": "2012-04-02T18:23:17Z", "creator": "nd@perlig.de", "creation_time": "2012-04-02T18:23:17Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 53023, "attachment_id": null, "id": 157073, "creation_time": "2012-04-02T19:55:05Z", "time": "2012-04-02T19:55:05Z", "creator": "apache@freakout.de", "text": "no it does not \"allow\" '-foo' it just pass '-foo' the same way as without the patch to the rest of the routine. the patch just allows the longer options to get recognized by the parser. curious - it seems that nobody ever used the variant 3 of the other useful tests. almost unbelievable.", "is_private": false}, {"count": 3, "tags": [], "bug_id": 53023, "attachment_id": null, "id": 157079, "creation_time": "2012-04-02T20:54:22Z", "time": "2012-04-02T20:54:22Z", "creator": "nd@perlig.de", "text": "Hmm, yes, it *does* allow -foo:\n\n    RewriteEngine on\n    RewriteCond /xxx -foo\n    RewriteRule ^ - [R=503]\n\nput that into a virtualhost, touch /xxx and get a 503. Just tested (with 2.2 though)\n\nI agree, that the whole piece of code is badly tested, though (the part with -gt, which is new)", "is_private": false}, {"count": 4, "tags": [], "bug_id": 53023, "attachment_id": null, "id": 157091, "time": "2012-04-03T05:05:18Z", "creator": "apache@freakout.de", "creation_time": "2012-04-03T05:05:18Z", "is_private": false, "text": "but that would be the same without my patch - it would be \"allowed\" the same way. the -gt part could never get a single test, because the option was never parsed."}, {"count": 5, "tags": [], "bug_id": 53023, "attachment_id": null, "id": 157101, "time": "2012-04-03T07:57:16Z", "creator": "nd@perlig.de", "creation_time": "2012-04-03T07:57:16Z", "is_private": false, "text": "No, because the !a2[2] test forbids it. It checks if there's nothing (i.e. \\0) after the -f. Without the !a2[2] test, everything after \"-f\" (or another tested letter) is suddenly allowed.\nThe two-letter-checks need to go into a different if-branch. I did not check, but maybe they even were at some point and someone moved code around without testing."}, {"count": 6, "tags": [], "bug_id": 53023, "attachment_id": null, "id": 157102, "time": "2012-04-03T08:22:04Z", "creator": "apache@freakout.de", "creation_time": "2012-04-03T08:22:04Z", "is_private": false, "text": "You are right - all the -Xfoo fail when X is one of the allowed one-letter options. Next try:\n\n--- modules/mappers/mod_rewrite.c.orig        Thu Jan 26 20:15:41 2012\n+++ modules/mappers/mod_rewrite.c     Tue Apr  3 10:16:01 2012\n@@ -3253,6 +3253,10 @@\n             case 'L': newcond->ptype = CONDPAT_FILE_LINK;   break;\n             case 'U': newcond->ptype = CONDPAT_LU_URL;      break;\n             case 'F': newcond->ptype = CONDPAT_LU_FILE;     break;\n+            }\n+        }\n+        else if (*a2 == '-') {\n+            switch (a2[1]) {\n             case 'l': if (a2[2] == 't')\n                           a2 += 3, newcond->ptype = CONDPAT_INT_LT;\n                       else if (a2[2] == 'e')"}, {"count": 7, "tags": [], "bug_id": 53023, "attachment_id": null, "id": 157175, "time": "2012-04-04T21:29:14Z", "creator": "nd@perlig.de", "creation_time": "2012-04-04T21:29:14Z", "is_private": false, "text": "Submitted (modified) in trunk (<http://svn.apache.org/viewvc?view=revision&revision=1309602>) and proposed for backport into 2.4."}, {"count": 8, "tags": [], "creator": "apache@freakout.de", "attachment_id": null, "text": "the proposed patch break the historical but still documented and used -l usage. this new patch fixes the -lt and left the -l usable:\n--- modules/mappers/mod_rewrite.c       Thu Jan 26 20:15:41 2012\n+++ modules/mappers/mod_rewrite.c       Fri May  4 14:01:13 2012\n@@ -3249,16 +3249,19 @@\n             case 's': newcond->ptype = CONDPAT_FILE_SIZE;   break;\n             case 'd': newcond->ptype = CONDPAT_FILE_DIR;    break;\n             case 'x': newcond->ptype = CONDPAT_FILE_XBIT;   break;\n+            case 'l': newcond->ptype = CONDPAT_FILE_LINK;   break;\n             case 'h': newcond->ptype = CONDPAT_FILE_LINK;   break;\n             case 'L': newcond->ptype = CONDPAT_FILE_LINK;   break;\n             case 'U': newcond->ptype = CONDPAT_LU_URL;      break;\n             case 'F': newcond->ptype = CONDPAT_LU_FILE;     break;\n+            }\n+        }\n+        else if (*a2 == '-') {\n+            switch (a2[1]) {\n             case 'l': if (a2[2] == 't')\n                           a2 += 3, newcond->ptype = CONDPAT_INT_LT;\n                       else if (a2[2] == 'e')\n                           a2 += 3, newcond->ptype = CONDPAT_INT_LE;\n-                      else /* Historical; prefer -L or -h instead */\n-                          newcond->ptype = CONDPAT_FILE_LINK;\n                       break;\n             case 'g': if (a2[2] == 't')\n                           a2 += 3, newcond->ptype = CONDPAT_INT_GT;", "id": 158820, "time": "2012-05-04T12:06:07Z", "bug_id": 53023, "creation_time": "2012-05-04T12:06:07Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 53023, "is_private": false, "id": 191764, "creation_time": "2016-06-18T05:17:44Z", "time": "2016-06-18T05:17:44Z", "creator": "christophe.jaillet@wanadoo.fr", "text": "This is part of 2.4.2", "attachment_id": null}]