[{"count": 0, "tags": [], "creator": "yaniv@kundas.net", "text": "This method checks\nif (arrayRange.getNumberOfCells() > 1 &&\n( arrayRange.isInRange(region.getFirstRow(), region.getFirstColumn()) ||\n  arrayRange.isInRange(region.getFirstRow(), region.getFirstColumn()))  ){\n   ....\n}\n\nObviously, check arrayRange.isInRange(region.getFirstRow(), region.getFirstColumn() twice does not look intentional.\nThis should *probably* be:\n\nif (arrayRange.getNumberOfCells() > 1 &&\n( arrayRange.isInRange(region.getFirstRow(), region.getFirstColumn()) ||\n  arrayRange.isInRange(region.getLastRow(), region.getLastColumn()))  ){\n\nto check if the region intersects with the region.", "id": 177734, "time": "2014-09-11T10:09:44Z", "bug_id": 56958, "creation_time": "2014-09-11T10:09:44Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "yaniv@kundas.net", "attachment_id": 32001, "is_private": false, "id": 177736, "time": "2014-09-11T10:22:31Z", "bug_id": 56958, "creation_time": "2014-09-11T10:22:31Z", "text": "Created attachment 32001\nfixes incorrect intersection check"}, {"count": 2, "tags": [], "text": "Any chance of a small junit unit test which shows the problem? That'll help us verify the fix, and ensure it stays correct in the future", "attachment_id": null, "bug_id": 56958, "id": 177737, "time": "2014-09-11T10:22:54Z", "creator": "apache@gagravarr.org", "creation_time": "2014-09-11T10:22:54Z", "is_private": false}, {"count": 3, "tags": [], "creator": "yaniv@kundas.net", "attachment_id": 32003, "is_private": false, "id": 177743, "time": "2014-09-11T11:53:18Z", "bug_id": 56958, "creation_time": "2014-09-11T11:53:18Z", "text": "Created attachment 32003\nfixes incorrect and incomplete intersection check\n\nI realized the intersection check is flawed, as it only detected if one of two corners of the region are in the arrayRange, where there are many cases where two rectangles can intersect.\n\n- Modified BaseTestSheetUpdateArrayFormulas.testModifyArrayCells_mergeCells to test a few more cases (including positive testing)\n- Added CellRangeAddressBase.intersects(CellRangeAddressBase other) to correctly check intersection\n- Fixed both XSSFSheet and HSSFSheet to use the new method"}, {"count": 4, "tags": [], "text": "Quick fix in r1748829.\nI will review and commit your patch from comment 3 later.", "is_private": false, "bug_id": 56958, "id": 191741, "time": "2016-06-17T10:23:53Z", "creator": "onealj@apache.org", "creation_time": "2016-06-17T10:23:53Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 56958, "attachment_id": null, "id": 191805, "time": "2016-06-19T23:06:09Z", "creator": "onealj@apache.org", "creation_time": "2016-06-19T23:06:09Z", "is_private": false, "text": "r1748829 fixed XSSF (and SXSSF)\nr1749210 fixed HSSF\nr1749212 improve performance when checking array formulas\nr1749226 replace java.awt.Rectangle#intersects with Yaniv's native implementation\n\nThanks for the patch! Sorry it's been neglected for 21 months."}]