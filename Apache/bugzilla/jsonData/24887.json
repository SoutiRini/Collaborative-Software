[{"count": 0, "tags": [], "bug_id": 24887, "attachment_id": null, "text": "When Ant was installed on the path that contains white space, Junit forked task \nmay failto resolve Ant's lib, because Junit reolves lib path with \nClass#getResource. So the path name contains urlencoded space %20 instead \nof ' '.\n\nrunning example)\n>ant -verbose\n...\njunit:\n   [junit] Implicitly adding C:\\Program%20Files\\junit3.8.1\\junit.jar;C:\\Program%\n20Files\\Apache%20Group\\apache-ant-1.5.3-1\\lib\\ant.jar;C:\\Program%20Files\\Apache%\n20Group\\apache-ant-1.5.3-1\\lib\\optional.jar to CLASSPATH\n   [junit] Running HogeHoge\ndropping C:\\Program%20Files\\junit3.8.1\\junit.jar from path as it doesn't exist\n\nHere is the patch.\n--- JUnitTask.java.org  Fri Nov 21 19:48:18 2003\n+++ JUnitTask.java      Fri Nov 21 19:49:16 2003\n@@ -80,6 +80,7 @@\nimport java.net.URL;\n+import java.net.URLDecoder;\n\n@@ -943,7 +944,7 @@\n    protected void addClasspathEntry(String resource) {\n        URL url = getClass().getResource(resource);\n        if (url != null) {\n-            String u = url.toString();\n+            String u = URLDecoder.decode(url.toString());\n            if (u.startsWith(\"jar:file:\")) {", "id": 47757, "time": "2003-11-21T11:43:14Z", "creator": "artonx@yahoo.co.jp", "creation_time": "2003-11-21T11:43:14Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 24887, "attachment_id": null, "id": 47765, "time": "2003-11-21T12:36:28Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-11-21T12:36:28Z", "is_private": false, "text": "Can you check with ant 1.6.\n\nThe addClasspathEntry() method of JUnitTask has been\nchanged to use LoaderUtils.getResourceSource(...)\nwhich calls eventually Locator.fromURI()\n\nMaking this as FIXED in ant 1.6\n"}]