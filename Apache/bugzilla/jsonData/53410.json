[{"attachment_id": null, "tags": [], "creator": "jasonovich@mailfish.de", "is_private": false, "count": 0, "id": 159970, "time": "2012-06-13T16:19:27Z", "bug_id": 53410, "creation_time": "2012-06-13T16:19:27Z", "text": "I created two SHA-512 password hashes for the password \"foobar\" with the crypt() function under Fedora 14, one using 9999 rounds, the other using 10000 rounds:\n\ncrypt(\"foobar\", \"$6$rounds=9999$IOm.N/WPP/0qRkWo\");\ncrypt(\"foobar\", \"$6$rounds=10000$IOm.N/WPP/0qRkWo\");\n\nI added the results to a password file for basic authentication:\n\nuser1:$6$rounds=9999$IOm.N/WPP/0qRkWo$FMP6X5bcfVQX5IC6U7Kw5RIJn/s.MbMZ/LFf1Lt7fzqb.5vlofDv5e47UEWZM/fdsOd3jgJDhHdrnTOswZH4X1\nuser2:$6$rounds=10000$IOm.N/WPP/0qRkWo$jVJRXlMEcoIcoX3zyE8k/CPESF/2Tm5qLz/Z0koPDz6XklE0g8j.5S0C2YUwU1j0lBQEXH2t/5ygsGDA8yxl8/\n\nThe 10000 rounds hash is not accepted by Apache (\"Password Mismatch\" in the error.log) although apr_password_validate() from apr_md5.c uses the system's crypt()/crypt_r() functions."}, {"attachment_id": null, "tags": [], "creator": "sf@sfritsch.de", "is_private": false, "count": 1, "id": 160659, "time": "2012-07-15T21:31:46Z", "bug_id": 53410, "creation_time": "2012-07-15T21:31:46Z", "text": "This is a problem in apr-util's apr_password_validate() function"}, {"attachment_id": null, "tags": [], "creator": "sf@sfritsch.de", "is_private": false, "count": 2, "id": 160660, "time": "2012-07-15T21:52:19Z", "bug_id": 53410, "creation_time": "2012-07-15T21:52:19Z", "text": "trunk: r1361811\n1.5: r1361814\n1.4: r1361816\n\nThe fix will be in apr-util 1.4.3 or 1.5.0, whichever gets released first."}, {"attachment_id": null, "tags": [], "creator": "jasonovich@mailfish.de", "is_private": false, "count": 3, "id": 160676, "time": "2012-07-16T19:18:39Z", "bug_id": 53410, "creation_time": "2012-07-16T19:18:39Z", "text": "Hmm, I've read through the code again and the fix consists of increasing the size of the (static) buffer holding a copy of the crypted password. I don't see why this size limit is necessary at all. Why not just do a straight-forward strcmp(crypt_pw, hash) at the end?"}, {"attachment_id": null, "tags": [], "creator": "sf@sfritsch.de", "is_private": false, "count": 4, "id": 160678, "time": "2012-07-16T20:45:43Z", "bug_id": 53410, "creation_time": "2012-07-16T20:45:43Z", "text": "(In reply to comment #3)\n> Hmm, I've read through the code again and the fix consists of increasing the\n> size of the (static) buffer holding a copy of the crypted password. I don't\n> see why this size limit is necessary at all. Why not just do a\n> straight-forward strcmp(crypt_pw, hash) at the end?\n\nTrue, that's better. Fixed in\n\ntrunk: r1362241\n1.5: r1362243\n1.4: r1362244"}]