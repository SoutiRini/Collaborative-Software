[{"count": 0, "tags": [], "text": "Reported by Anders \u00c5berg on user@poi mailing list.[1]\n\n> I am trying to set RGB background colors on cells and in addition set\n> borders on regions using RegionUtil. When doing this, all the cells with\n> borders end up completely black.\n>\n> It seems that using XSSFColor on XSSFCellStyle causes problems with the way\n> CellUtil.setCellStyleProperties works. CellUtil is used by RegionUtil.\n>\n> This is a minimal test to reproduce the problem:\n>\n>    XSSFWorkbook workbook = new XSSFWorkbook();\n>    XSSFCell cell = workbook.createSheet().createRow(0).createCell(0);\n>\n>    XSSFColor red = new XSSFColor(Color.RED);\n>    XSSFCellStyle style = workbook.createCellStyle();\n>    style.setFillForegroundColor(red);\n>    style.setFillPattern(XSSFCellStyle.SOLID_FOREGROUND);\n>    cell.setCellStyle(style);\n>\n>    // Everything is fine at this point, cell is red\n>\n>    Map<String, Object> properties = new HashMap<>();\n>    properties.put(CellUtil.BORDER_BOTTOM, CellStyle.BORDER_THIN);\n>    CellUtil.setCellStyleProperties(cell, properties);\n>\n>    // Now the cell is all black\n>    XSSFColor actual = cell.getCellStyle().getFillForegroundColorColor();\n>    assertEquals(red.getARGBString(), actual.getARGBString());\n\nThe implementation of CellUtil.setCellStyleProperties uses putShort/getShort for working with fillForegroundColor and fillBackgroundColor, which means this function will only work on indexed colors. Furthermore, the unit test only covers HSSFWorkbooks.\n\n[2]\npublic static void setCellStyleProperties(Cell cell, Map<String, Object> properties) {\n    ...\n    Map<String, Object> values = getFormatProperties(originalStyle);\n    values.putAll(properties);\n    ...\n    // the desired style does not exist in the workbook. Create a new style with desired properties.\n    if (newStyle == null) {\n        newStyle = workbook.createCellStyle();\n        // overwrites non-indexed fill foreground/background colors\n        setFormatProperties(newStyle, workbook, values);\n    }\n}\n\n\n[3]\nprivate static Map<String, Object> getFormatProperties(CellStyle style) {\n    Map<String, Object> properties = new HashMap<String, Object>();\n    ...\n    putShort(properties, FILL_BACKGROUND_COLOR, style.getFillBackgroundColor());\n    putShort(properties, FILL_FOREGROUND_COLOR, style.getFillForegroundColor());\n    ...\n}\n\n[4]\nprivate static void setFormatProperties(CellStyle style, Workbook workbook, Map<String, Object> properties) {\n    style.setAlignment(getShort(properties, ALIGNMENT));\n    ...\n    style.setFillBackgroundColor(getShort(properties, FILL_BACKGROUND_COLOR));\n    style.setFillForegroundColor(getShort(properties, FILL_FOREGROUND_COLOR));\n    ...\n}\n\n\n[1] http://apache-poi.1045710.n5.nabble.com/XSSF-Problem-with-CellUtil-and-custom-RGB-background-color-td5722925.html\n[2] https://svn.apache.org/viewvc/poi/trunk/src/java/org/apache/poi/ss/util/CellUtil.java?revision=1739536&view=markup#l236\n[3] https://svn.apache.org/viewvc/poi/trunk/src/java/org/apache/poi/ss/util/CellUtil.java?revision=1739536&view=markup#l324\n[4] https://svn.apache.org/viewvc/poi/trunk/src/java/org/apache/poi/ss/util/CellUtil.java?revision=1739536&view=markup#l357", "attachment_id": null, "id": 190775, "creator": "onealj@apache.org", "time": "2016-05-08T22:35:43Z", "bug_id": 59442, "creation_time": "2016-05-08T22:35:43Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 59442, "text": "Added test case in r1742862.", "id": 190776, "time": "2016-05-09T01:27:45Z", "creator": "onealj@apache.org", "creation_time": "2016-05-09T01:27:45Z", "tags": [], "is_private": false}]