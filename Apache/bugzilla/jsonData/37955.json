[{"count": 0, "tags": [], "text": "On MacOSX 10.4, httpd 2.2.0, with either prefork MPM or worker MPM. On first\nlaunch, all seems normal. But, after a random amount of time, individual child\nservers start consuming 100% of CPU.\n\nHttpd 2.0.55 worked fine. Httpd 2.3.0-dev works fine. 2.20 is bad mojo.", "attachment_id": null, "id": 83774, "creator": "distler@golem.ph.utexas.edu", "time": "2005-12-18T18:49:53Z", "bug_id": 37955, "creation_time": "2005-12-18T18:49:53Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 37955, "is_private": false, "text": "Can you attach GDB to one of the processes that is consuming 100% CPU, and see\nwhat it is doing?\n\nWhat is your exact version of MacOSX? 10.4.3?\n\n10.4.3 did include some fixes for kqueue... I am wondering if there is still\nsomething wrong with it.", "id": 83775, "time": "2005-12-18T19:20:00Z", "creator": "chip@force-elite.com", "creation_time": "2005-12-18T19:20:00Z", "attachment_id": null}, {"count": 2, "text": "Alas, I can't, as I had to pull it off the server and replace it with 2.3.0-dev.\n\nBut this is *not* an APR issue. Both the misbehaving 2.2.0 and the well-behaved\n2.3.0-dev are using the *same* installed version of APR (1.2.2), which came with\nthe 2.2.0 distribution (and was installed as /usr/local/apr/ , as per the\ninstallation instructions).", "bug_id": 37955, "is_private": false, "id": 83777, "time": "2005-12-18T19:34:14Z", "creator": "distler@golem.ph.utexas.edu", "creation_time": "2005-12-18T19:34:14Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 37955, "attachment_id": null, "text": "It may be relevant that all the above were compiled with XCode 2.2 on MacOSX\n10.4.3. There may be some relevant differences between XCode 2.2 and earlier\nversions of the Developer Tools.\n\nSee http://golem.ph.utexas.edu/~distler/blog/archives/000698.html#c003078", "id": 83778, "time": "2005-12-18T19:57:42Z", "creator": "distler@golem.ph.utexas.edu", "creation_time": "2005-12-18T19:57:42Z", "is_private": false}, {"count": 4, "tags": [], "text": "Created attachment 17291\nSample of 2.2 using 100% CPU on Mac OS 10.4.3\n\nHere the output of the sample command. This was running on a dual G5 with Mac\nOS X 10.4.3", "attachment_id": 17291, "bug_id": 37955, "id": 84050, "time": "2005-12-29T03:32:00Z", "creator": "ladd@spiny.com", "creation_time": "2005-12-29T03:32:00Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 37955, "attachment_id": null, "id": 84051, "time": "2005-12-29T03:34:21Z", "creator": "ladd@spiny.com", "creation_time": "2005-12-29T03:34:21Z", "is_private": false, "text": "(In reply to comment #4)\n> Sample of 2.2 using 100% CPU on Mac OS 10.4.3\n\nPotentially relevant -- I have mod_proxy enabled, and use it to forward requests to Tomcat.\n"}, {"count": 6, "text": "Rather than taking a few hours, as under 2.2, 2.3-dev does eventually succumb to\nthis problem, but it may take days or weeks.\n\nHere's a backtrace of an errant child server, consuming 100% of one of the\nmachine's 2 processors (MacOSX 1.4.4, httpd 2.3-dev-20051217052534):\n\n#0  0x9001452c in write ()\n#1  0x9012ae30 in _simple_vdprintf ()\n#2  0x90126b68 in malloc_printf ()\n#3  0x90006468 in free ()\n#4  0x003c226c in apr_allocator_destroy (allocator=0x5a4140) at\nmemory/unix/apr_pools.c:111\n#5  0x00028d64 in clean_child_exit (code=0) at prefork.c:196\n#6  0x00029490 in child_main (child_num_arg=32) at prefork.c:660\n#7  0x000295e4 in make_child (s=0x28e9c, slot=1) at prefork.c:736\n#8  0x00029ef0 in ap_mpm_run (_pconf=0x1, plog=0x0, s=0x1) at prefork.c:871\n#9  0x00003e60 in main (argc=3, argv=0xbffffe30) at main.c:712", "bug_id": 37955, "attachment_id": null, "id": 84870, "time": "2006-01-23T02:18:15Z", "creator": "distler@golem.ph.utexas.edu", "creation_time": "2006-01-23T02:18:15Z", "tags": [], "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 37955, "is_private": false, "id": 84871, "time": "2006-01-23T03:47:20Z", "creator": "distler@golem.ph.utexas.edu", "creation_time": "2006-01-23T03:47:20Z", "tags": [], "text": "Hmmm. This may be an unrelated (and, so far, unreproduceable) problem. In this\ninstance, the error-log had entries of the form\n\nhttpd(9832) malloc: ***  Deallocation of a pointer not malloced: 0x193c800; This\ncould be a double free(), or free() called with the middle of an allocated\nblock; Try setting environment variable MallocHelp to see tools to help debug\n\n\nwhereas, with the superficially similar behaviour in 2.2, there were no entries\nin the error log."}, {"count": 8, "attachment_id": null, "creator": "dev-apache.org@humph.com", "is_private": false, "id": 86083, "time": "2006-02-22T15:45:16Z", "bug_id": 37955, "creation_time": "2006-02-22T15:45:16Z", "tags": [], "text": "sorry to poke in, but I have a very similar situation, only that it is on MacOSX10.3.9. It's a dual proc G5, \nrunning httpd 2.2.0. At the moment I have two processes taking nearly 100% cpu, both stuck in read() \nas fs_usage says. The traces seem different, but this might just be because I did not go further. Here is \none trace:\n\n\n#0  0x9000ed48 in read ()\n#1  0x001dc89c in apr_socket_recv ()\n#2  0x001653d8 in socket_bucket_read ()\n#3  0x00166c0c in apr_brigade_split_line ()\n#4  0x00013b08 in ap_add_common_vars ()\n#5  0x00011268 in ap_clear_pool ()\n#6  0x000117dc in ap_push_array ()\n#7  0x00011f44 in ap_table_unset ()\n#8  0x00021bcc in ap_escape_errorlog_item ()\n#9  0x0001c46c in ap_vrprintf ()\n#10 0x0002a9ec in p_simp_re ()\n#11 0x0002ab98 in p_simp_re ()\n#12 0x0002ae38 in p_bracket ()\n#13 0x0002b2f4 in p_b_term ()\n#14 0x0000328c in expand_lock_fname ()\n#15 0x00001cfc in ?? ()\n#16 0x8fe1a278 in __dyld__dyld_start ()\n\nThis server serves php pages, but the stuck process seems to have stopped on static ones, so I am not \nsure if to give the blame to libphp5.so.\n\nIf clearly unrelated to this bug, please let me know and  will create a new one."}, {"count": 9, "attachment_id": null, "bug_id": 37955, "is_private": false, "id": 89120, "time": "2006-05-15T09:15:44Z", "creator": "dev-apache.org@humph.com", "creation_time": "2006-05-15T09:15:44Z", "tags": [], "text": "I think I have found a solution at least for my problem of 100% CPU usage on dual processor machines on \nMacOSX 10.3.9 (the only dual processor I tested apache2 on, so it might apply to 10.4.x too).\nUpgrading from http-2.2.0 to http-2.2.2 did not change a thing, so I decided to rebuild apr 1.2 as \nindicated in http://www.humph.com/manual/install.html . The I proceded rebuilding apache as per \ninstruction at the same page, and the new version has now been running for 24 hours with no cpu \nhogging. I must add that the once in a while, stress testing from the localhost using \"ab\", an httpd child \nprocess crashes. I will submit a bug report on that. I hope someone will read this and see if that solves the \nproblem. I am not sure if  Jacques Distler installed only apr-httpd or also apr-util-httpd when testing for \nthis bug report. It might also be that I have to wait for longer to see the bug resurfacing."}, {"count": 10, "text": "Created attachment 18288\nsample of runaway httpd 2.2.2 child\n\n(In reply to comment #9)\n\nUnfortunately it was only a question of a couple of hours and a child started\nat 12:13 got stuck at 12:26 taking 100% cpu (half of the two processor\nmachine). The trace is very similar to the one posted by Jacques although the\nOS version is different (10.3.9 instead of 10.4.x). I am attaching the trace\n(10ms for 20s). I am under the impression that all these stuck children were\nserving some proxy server.", "bug_id": 37955, "attachment_id": 18288, "id": 89133, "time": "2006-05-15T13:43:01Z", "creator": "dev-apache.org@humph.com", "creation_time": "2006-05-15T13:43:01Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 37955, "is_private": false, "text": "Cause: Broken KQueue Support.\n\nResolution: Upgrade to at least APR 1.2.7, where we disable KQueue on ALL\nversions of OSX, since it has proven itself to be unstable. (And instead use\nSelect).  I believe Apple also already knows about the problems with KQueue.", "id": 89134, "time": "2006-05-15T14:18:07Z", "creator": "chip@force-elite.com", "creation_time": "2006-05-15T14:18:07Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 37955, "attachment_id": null, "id": 89175, "time": "2006-05-16T21:47:40Z", "creator": "dev-apache.org@humph.com", "creation_time": "2006-05-16T21:47:40Z", "is_private": false, "text": "Thanks Paul, I have upgraded the server to apr and apr-utils 1.2.7. Will let you know if the problem \nresurfaces.\nGiuliano"}, {"count": 13, "tags": [], "bug_id": 37955, "is_private": false, "text": "(In reply to comment #12)\n\nactually, as I said I had compiled httpd-2.2.2 after upgrading apr and apr-utils to the version \ndistributed with httpd itself and apache already reported the apr version as 1.2.7:\n\nsudo /usr/local/apache2/bin/httpd -V\nPassword:\nServer version: Apache/2.2.2\nServer built:   May 14 2006 11:00:58\nServer's Module Magic Number: 20051115:2\nServer loaded:  APR 1.2.7, APR-Util 1.2.7\nCompiled using: APR 1.2.7, APR-Util 1.2.7\nArchitecture:   32-bit\nServer MPM:     Prefork\n  threaded:     no\n    forked:     yes (variable process count)\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/prefork\"\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=128\n -D HTTPD_ROOT=\"/usr/local/apache2\"\n -D SUEXEC_BIN=\"/usr/local/apache2/bin/suexec\"\n -D DEFAULT_PIDLOG=\"logs/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_LOCKFILE=\"logs/accept.lock\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nAnd indeed even the version compiled with apr-1.2.7  I just installed (apr and apr-util) has now got two \nchildren taking 100% cpu. So I have reopened the bug.", "id": 89186, "time": "2006-05-17T00:47:02Z", "creator": "dev-apache.org@humph.com", "creation_time": "2006-05-17T00:47:02Z", "attachment_id": null}, {"count": 14, "tags": [], "creator": "dev-apache.org@humph.com", "attachment_id": 18335, "id": 89407, "time": "2006-05-23T19:16:36Z", "bug_id": 37955, "creation_time": "2006-05-23T19:16:36Z", "is_private": false, "text": "Created attachment 18335\ntrace for runaway httpd2.2.2 process with apr1.2.7\n\nsome more info, using apr1.2.7: most processes using nearly 100% cpu seem stuck\nin the following loop:\n\nBreakpoint 4, 0x001b9934 in apr_pollset_add ()\n(gdb) \nContinuing.\n\nBreakpoint 2, 0x9002e820 in kevent ()\n(gdb) \nContinuing.\n\nBreakpoint 2, 0x9002e820 in kevent ()\n(gdb) \nContinuing.\n\nBreakpoint 3, 0x9000ed40 in read ()\n(gdb) \nContinuing.\n\nBreakpoint 2, 0x9002e820 in kevent ()\n(gdb) \nContinuing.\n\nBreakpoint 4, 0x001b9934 in apr_pollset_add ()\n\nand so on.\nI am attaching the gdb trace for that same process."}, {"count": 15, "tags": [], "creator": "chip@force-elite.com", "attachment_id": null, "id": 89447, "time": "2006-05-24T15:40:40Z", "bug_id": 37955, "creation_time": "2006-05-24T15:40:40Z", "is_private": false, "text": "It doesn't look like your httpd is picking up an APR with KQueue/KEvent Disabled.\n\nIf they were disabled like they should be, you would only see select() calls\nunder pollset_poll()."}, {"count": 16, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "id": 96268, "time": "2006-11-28T06:16:08Z", "bug_id": 37955, "creation_time": "2006-11-28T06:16:08Z", "is_private": false, "text": "Is looks like the remaining problem here was the old version of APR being picked\nup.  This should be resolved by building 2.2.3 and passing the\n\"--with-included-apr\" flag to configure."}]