[{"count": 0, "tags": [], "bug_id": 51278, "text": "The default web.xml gets merged into the application's web.xml before processing of fragments, annotations and ServletContextInitializers. This means it can only be overridden in the application's web.xml. It should be possible to override in fragments, annotations and ServletContextInitializers.", "id": 146696, "time": "2011-05-28T07:12:37Z", "creator": "markt@apache.org", "creation_time": "2011-05-28T07:12:37Z", "is_private": false, "attachment_id": null}, {"text": "Thanks for filing this issue, Mark.  I encountered this behavior when designing a ServletContainerInitializer for the Spring Framework.  The SCI declares @HandlesTypes for a spring-specific SPI (WebApplicationInitializer).  The intent of this interface is to allow users a convenient and automatically detected way to replace web.xml with code.\n\nMany users map Spring's DispatcherServlet to '/', and this works fine when done from web.xml.  However, for the reasons you've described, a direct translation of this mapping into code does not work, because Tomcat's DefaultServlet has already been mapped.\n\nYour suggested resolution sounds like just what we need in the immediate term.  As for the future (i.e. Servlet 3.1), perhaps the EG could consider making the overriding rules a bit more flexible.  For example, FilterRegistration#addMappingForUrlPattern[1] currently accepts a boolean \"isMatchAfter\" argument that suggests this kind of flexibility.\n\nIn any case, short term or long, the question is whether mapping to '/' will be portable.  I'm about to try this same scenario against Jetty and Glassfish; it will be interesting to see if they too have ordering issues with default mappings to '/', or perhaps have already addressed this very scenario.\n\n[1] http://download.oracle.com/javaee/6/api/javax/servlet/FilterRegistration.html#addMappingForUrlPatterns(java.util.EnumSet, boolean, java.lang.String...)", "tags": [], "bug_id": 51278, "attachment_id": null, "count": 1, "id": 146698, "time": "2011-05-28T08:25:07Z", "creator": "cbeams@gmail.com", "creation_time": "2011-05-28T08:25:07Z", "is_private": false}, {"count": 2, "tags": [], "creator": "cbeams@gmail.com", "text": "update: I've just tried this same ServletContainerInitializer scenario under Glassfish 3.1 and the override works as desired.  This is especially interesting given that the catalina DefaultServlet is mapped to '/' in this environment as well.  It suggests that they have specifically addressed this issue, perhaps in a fashion similar to the one Mark describes above.", "id": 146702, "time": "2011-05-28T09:56:11Z", "bug_id": 51278, "creation_time": "2011-05-28T09:56:11Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 51278, "text": "That would seem to conflict with the exposure of servlet registration events in the 3.0 API... a registration event that occurs later isn't supposed to conflict with ones occurring earlier (for Servlets, that is... I realize we're discussing Filters, here).", "id": 146784, "time": "2011-05-31T21:07:07Z", "creator": "chris@christopherschultz.net", "creation_time": "2011-05-31T21:07:07Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "cbeams@gmail.com", "text": "(In reply to comment #3)\n> That would seem to conflict with the exposure of servlet registration events in\n> the 3.0 API... a registration event that occurs later isn't supposed to\n> conflict with ones occurring earlier (for Servlets, that is... I realize we're\n> discussing Filters, here).\n\nHi Christopher,\n\nActually, we are talking primarily about Servlets here.  I was only mentioning the FilterRegistration API momentarily above.\n\nThe critical issue is this: Tomcat users can override the DefaultServlet's mapping to '/' within web.xml, but cannot do so within a ServletContainerInitializer (or presumably any other programmatic context).  This inconsistency means that web.xml cannot be completely replaced by code in a Tomcat environment, which is what we're aiming to facilitate.\n\nI've been unable to pinpoint a passage in the spec that spells out that the status quo is the way things *should* work, but then again - and if I understand things correctly - the spec is silent on the way Tomcat registers its DefaultServlet, so we're probably already in unspecified territory, yes?\n\nEven if the spec did mandate or strongly suggest the status quo, I would go so far as to argue that the spec should be changed.  The ServletContext API now allows for full programmatic registration, let's let users take advantage of it!", "id": 146787, "time": "2011-06-01T07:10:20Z", "bug_id": 51278, "creation_time": "2011-06-01T07:10:20Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 51278, "attachment_id": null, "text": "(In reply to comment #4)\n> Actually, we are talking primarily about Servlets here.  I was only mentioning\n> the FilterRegistration API momentarily above.\n\nRight. I was just pointing-out that the rules for Servlets and Filters are apparently different.\n\n> The critical issue is this: Tomcat users can override the DefaultServlet's\n> mapping to '/' within web.xml, but cannot do so within a\n> ServletContainerInitializer (or presumably any other programmatic context). \n> This inconsistency means that web.xml cannot be completely replaced by code in\n> a Tomcat environment, which is what we're aiming to facilitate.\n\nYup, I get it, and you certainly /should/ be able to set these things from within the code. Tomcat's DefaultServlet should be a last-resort that handles requests only when no other servlet can be found.\n\n> I've been unable to pinpoint a passage in the spec that spells out that the\n> status quo is the way things *should* work, but then again - and if I\n> understand things correctly - the spec is silent on the way Tomcat registers\n> its DefaultServlet, so we're probably already in unspecified territory, yes?\n\nThe closest I could come was looking at the javadoc for the addServlet and addFilter methods in ServletContext, which have some things to say about the behavior of those methods when a URL mapping already exists.\n\nI guess the question is really whether the DefaultServlet being mapped to \"/\" really \"counts\" as a traditional mapping, or if the DefaultServlet should be considered something that just handles all otherwise-unhandled requests. If you think about it that way, then registration of a Servlet on \"/\" should be able to happen at any time during the lifecycle of the webapp (even long after the context has been started) as long as no previous registration has occurred.\n\nI guess what I'm suggesting is that we might want to register DefaultServlet in a way that is orthogonal to the registration of all other servlets so we don't have to have special-case handling for processing web.xml, then annotations, then fragments, then running all ServletContextListeners, then processing  conf/web.xml to get around this apparent oddity.", "id": 146798, "time": "2011-06-01T15:41:47Z", "creator": "chris@christopherschultz.net", "creation_time": "2011-06-01T15:41:47Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 51278, "attachment_id": null, "text": "This has now been fixed (it wasn't hard to fix as I feared) in 7.0.x and will be included in 7.0.15 onwards.", "id": 146819, "time": "2011-06-02T15:53:49Z", "creator": "markt@apache.org", "creation_time": "2011-06-02T15:53:49Z", "is_private": false}, {"count": 7, "tags": [], "creator": "cbeams@gmail.com", "attachment_id": null, "id": 146828, "time": "2011-06-03T04:20:44Z", "bug_id": 51278, "creation_time": "2011-06-03T04:20:44Z", "is_private": false, "text": "That's great news, Mark!  We'll be sure to test it out when 7.0.15 drops - and this is perfect timing for the forthcoming Spring 3.1 M2."}, {"count": 8, "tags": [], "creator": "fernando.ribeiro@upic.com.br", "attachment_id": null, "id": 162129, "time": "2012-09-13T03:48:07Z", "bug_id": 51278, "creation_time": "2012-09-13T03:48:07Z", "is_private": false, "text": "Just had the same issue in 7.0.30, as reported at https://issues.apache.org/bugzilla/show_bug.cgi?id=53863"}]