[{"count": 0, "tags": [], "creator": "daniel.hui@moh.gov.on.ca", "text": "To reproduce:\n   1. Create an xls file using POI.\n      This can be done by copying a regular xls file using a POI program\n\tE.g. Use the Copier program below to copy \n             (from infile.xls to outfile.xls)\n   2. Create a regular Excel file (e.g. linkfile.xls)\n   3. Create, inside linkfile.xls:\n\ti) a link to the infile.xls (a regular xls file)\n\tii) a link to the outfile.xls (xls file create by POI)\n   4. Close all files and reopen linkfile.xls to see if all links OK.\n\t   Note that the 2nd link will fail. (problem here)\n\n   ** The link will work again once the POI xls file is opened/saved in Excel.\n\nCopier program:\nimport org.apache.poi.poifs.filesystem.POIFSFileSystem;\nimport org.apache.poi.hssf.usermodel.*;\nimport java.io.*;\n\n// Copy from infile.xls to outfile.xls\npublic class Copier\n{\n   public static void main(String[] args)\n      throws IOException\n   {\n      if (args.length != 2) {\n         System.err.println(\"Usage: \" + Copier.class + \" infile.xls \noutfile.xls\");\n\t\t   System.exit(1);\n      }\n\n      String infile = args[0];\n      String outfile = args[1];\n\n      POIFSFileSystem pfs = new POIFSFileSystem(new FileInputStream(infile));\n      FileOutputStream fos = new FileOutputStream(outfile);\n      HSSFWorkbook wb = new HSSFWorkbook(pfs);\n      \n      // Write the output to a file\n      wb.write(fos);\n      fos.close();\n   }\n}", "id": 43729, "time": "2003-09-04T19:50:46Z", "bug_id": 22939, "creation_time": "2003-09-04T19:50:46Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "zalewski@optonline.net", "attachment_id": null, "id": 43732, "time": "2003-09-04T22:40:10Z", "bug_id": 22939, "creation_time": "2003-09-04T22:40:10Z", "is_private": false, "text": "I tried to reproduce this but was unable.\n\n1) What do you mean by create a link? Do you mean Insert | Hyperlink or Insert \n| Object | Create from File, then check 'Link to File'? I tried it both ways \nand it worked in both cases\n\n2) What version of Excel (I have Excel 2000 here)\n\n3) Did you really name the files with the '.xls' extension?\n\n\nI have however managed to create what may be the same problem with different \nsteps.\n\n1) Create a file in POI. Any file will do, but it must be created by POI (as \nopposed to copied from an existing template which was created by Excel)\n\n2) Rename the file created by POI to have either no extension, or an extension \nthat is not recognized by Excel. For example, I used .xxx\n\n3) Open a Word document and try to Insert | Object | Create From File, and \nchoose the POI generated file (that does not have a .xls extension).\n\nThe insert works, but it only gives a generic icon.\n\n4) Now open the file in Excel. Excel does not mind that it has a non-standard \nextension, and the file opens fine.\n\n5) Save the file from Excel with another non-standard extension. (I used .yyy)\n\n6) Go back into the Word document, Insert | Object | Create From File, and \nchoose the copy of the file which was saved from Excel.\n\nNow the file will open as an embedded Excel spreadsheet (even though the \nextension is non-standard)\n\n\nThe reason for this behavior is because HSSF (and in particular POIFS) does not \nput in Excel's 'Storage Class ID' when the file is  created from scratch by \nPOI. Since the file has a non-standard extension, there is no way that Word can \nrecognize the contents as an Excel object.\n\nHowever, once the file is opened and saved in Excel, even though you make no \nchanges, Excel updates the Storage Class ID. This tells CompObj that the \napplication which handles the root stream is Excel (as long as Excel is \ninstalled on the machine)."}, {"count": 2, "tags": [], "bug_id": 22939, "text": "Thanks Michael for your quick response; I was away and didn't check till now. \nI'm new to Bugzilla hope I can get back to you via \"Additional Comments\", \notherwise please let me know and I'll try again.\nTo further follow up (in response to your questions):\n1. To create a link:\n  I probably used the wrong term, I meant to reference another Excel sheet \nusing the formula syntax \"=[file.xls]Sheet1!$A$1\" (Will try to upload some \nsample files in a minute, please see Cell B1 and B2 of file linkfile.xls)\n2. I used Excel 97 (will try with Excel 2000 a bit later)\n3. the Excel files have standard extension .xls\nI didn't try the 2nd part as you said, since I think my problem will not be \nrelated to that. Anyway will try to upload my Excel file and hope that will \nclarify my question. Thanks.\n\nDaniel", "id": 43849, "time": "2003-09-08T17:30:02Z", "creator": "daniel.hui@moh.gov.on.ca", "creation_time": "2003-09-08T17:30:02Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "daniel.hui@moh.gov.on.ca", "attachment_id": 8103, "id": 43850, "time": "2003-09-08T17:36:36Z", "bug_id": 22939, "creation_time": "2003-09-08T17:36:36Z", "is_private": false, "text": "Created attachment 8103\nSample file/code to help depict the problem"}, {"count": 4, "attachment_id": null, "bug_id": 22939, "text": "I think I see the problem. Could this be because HSSF does not write out DBCELL \nrecords? However, it does write out INDEX records.\n\nBut INDEX records contain a pointer to one or more DBCELL records. The INDEX \nrecord written by HSSF does contain a DBCELL pointer. But the pointer is \ninvalid (it doesn't even point to the beginning of a record, and there are no \nDBCELL records in the output).\n\nIf this is the problem, this report may be a duplicate of \nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=9576\n", "id": 43919, "time": "2003-09-10T05:26:17Z", "creator": "zalewski@optonline.net", "creation_time": "2003-09-10T05:26:17Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "creator": "daniel.hui@moh.gov.on.ca", "text": "I looked at bug # 9576 and didn't see similarity from the problem description, \nthough may be the underlining factors are the same, but I'm not familiar with \nDBCell and Index record (may investigate a bit further later).\nAnyway, I was able to tmp work around the problem by re-openning and saving the \nExcel file using a small non-POI app (e.g. PB/OLE), and the problem goes away. \nThe open/save operation likely restored some internal Excel file structure \n(sorry, I'm novice to Excel file format and can't really comment on that)", "id": 43940, "time": "2003-09-10T13:17:10Z", "bug_id": 22939, "creation_time": "2003-09-10T13:17:10Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "chris@sixlegs.com", "text": "You might want to try changing POI to not output any INDEX record. I believe it \nis optional (though recommended).", "id": 43944, "time": "2003-09-10T15:00:59Z", "bug_id": 22939, "creation_time": "2003-09-10T15:00:59Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "daniel.hui@moh.gov.on.ca", "attachment_id": null, "text": "I checked through POI JavaDoc and didn't see how to turn off index record. From \n9576, it seems like I have to download Jason's patch. I tried, but got a diff \noutput listing instead.\nWould appreicate if someone tell me if that's the way to go, and how to get the \npatch. I would like to give it a try.", "id": 43953, "time": "2003-09-10T17:08:46Z", "bug_id": 22939, "creation_time": "2003-09-10T17:08:46Z", "is_private": false}, {"count": 8, "attachment_id": null, "bug_id": 22939, "text": "What I mean is I ran BiffViewer on the file you attached, which was generated \nby POI/HSSF. Here is the output.\n\n...\nOffset 0x992 (2450)\nrecordid = 0x20b, size =20\n[INDEX]\n    .firstrow       = 0\n    .lastrowadd1    = 1\n    .dbcell_0       = a82\n[/INDEX]\n...\nOffset 0xa78 (2680)\nrecordid = 0x203, size =14\n[NUMBER]\n    .row            = 0\n    .col            = 1\n    .xfindex        = f\n    .value          = 222.0\n[/NUMBER]\n\n============================================\nOffset 0xa8a (2698)\nrecordid = 0x203, size =14\n[NUMBER]\n    .row            = 0\n    .col            = 2\n    .xfindex        = f\n    .value          = 333.0\n[/NUMBER]\n...\n\nThe INDEX record has a DBCELL pointer to offset 0xa82. (There could be more \nthan one DBCELL pointer in each INDEX record. I don't think BiffViewer \nnecessarily shows them all).\n\nBut you can see that there is a NUMBER record beginning at 0xa78, and another \nNUMBER record beginning at 0xa8a. So the DBCELL pointer in the INDEX record is \nbad -- it doesn't even point to the beginning of any record.\n\nAfter you save the file from Excel, the INDEX records are fixed up, and the \nDBCELL records are inserted. BiffViewer will show the INDEX record pointing to \nthe beginning of the DBCELL record, as expected.\n", "id": 44013, "time": "2003-09-11T03:10:25Z", "creator": "zalewski@optonline.net", "creation_time": "2003-09-11T03:10:25Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "text": "Linking to external files works properly with the latest sources.\nTry POI-3.5-beta4 or download daily builds from http://encore.torchbox.com/poi-svn-build/\n\nYegor", "id": 123634, "time": "2008-12-30T09:41:19Z", "bug_id": 22939, "creation_time": "2008-12-30T09:41:19Z", "is_private": false}]