[{"count": 0, "tags": [], "bug_id": 60876, "attachment_id": null, "id": 197714, "time": "2017-03-16T14:28:16Z", "creator": "jim.griswold@gmail.com", "creation_time": "2017-03-16T14:28:16Z", "is_private": false, "text": "Summary:\n\nAfter a recent upgrade from Tomcat 8.0.28 to 8.5.11, I've noticed a syntax change in the Set-Cookie header generated by Tomcat on HTTP responses where a cookie is set with additional attributes such as \"Path\". From my investigation thus far, the syntax change appears to be due to implementation details of Rfc6265CookieProcessor, which was changed to be the default cookie processor in between the Tomcat versions I tested. The syntax change does not appear to be compliant with the syntax in RFC-6265, and this is change is breaking at least one fairly common HTTP client implementation (Apache CXF).\n\nExample:\n\nWhen I set a cookie named \"cookie_name\" with value \"value\" and path \"/\", the header that's generated by Tomcat 8.0.28 looks like:\n\n    Set-Cookie: cookie_name=value; Path=/\n\nWith 8.5.11, it looks like:\n\n    Set-Cookie: cookie_name=value;path=/\n\nNote the missing space after the semicolon and the change from \"Path\" to \"path\".\n\nImpact:\n\nThis small change appears to break at least the Apache CXF WebClient's implementation of parsing the Set-Cookie header, which is how I noticed the issue.\n\nIn my testing, the CXF client discards the fact that a cookie called \"cookie_name\" has been set. I tried upgrading the CXF client to see if a newer version would be more tolerant, but the issue persisted.\n\nPossible root cause / suggested solution:\n\nAfter some digging around, I saw that the new Rfc6265CookieProcessor was changed to be the default cookie processor. When I followed instructions [1] to change back to the old processor, the original behavior was restored and my tests passed again.\n\nThe RFC 6265 specifies [1] that there must be a space (\"SP\") between the semicolon and \"Path\", and that it should be \"Path\" with the first letter uppercased. Taking a look at the Rfc6265CookieProcessor source (the generateHeader method, specifically), I see the following:\n\n    153: header.append(\";path=\");\n\nThis appears to be a broader issue that impacts elements other than \"path\", e.g.\n\n    123: header.append(\";Max-Age=\");  // should be: \"; Max-Age=\"\n    131: header.append (\";Expires=\"); // should be: \"; Expires=\"\n    146: header.append(\";domain=\");   // should be: \"; Domain=\"\n    158: header.append(\";Secure\");    // should be: \"; Secure\"\n    162: header.append(\";HttpOnly\");  // should be: \"; HttpOnly\"\n\nWhile I think clients should tolerate the small change, I think it's best for the cookie processor to adhere to the RFC more strictly in this case in order to avoid unexpected issues.\n\nThank you very much for all of your great work on this project!\n\n[1] https://tools.ietf.org/html/rfc6265#section-4.1.1\n[2] http://stackoverflow.com/questions/38696081/how-to-change-cookie-processor-to-legacycookieprocessor-in-tomcat-8\n\nJava version:\n\njava version \"1.8.0_91\"\nJava(TM) SE Runtime Environment (build 1.8.0_91-b14)\nJava HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)"}, {"count": 1, "tags": [], "bug_id": 60876, "text": "Created attachment 34836\nPatch with proposed changes\n\nAdding patch.", "id": 197721, "time": "2017-03-16T17:46:05Z", "creator": "jim.griswold@gmail.com", "creation_time": "2017-03-16T17:46:05Z", "is_private": false, "attachment_id": 34836}, {"count": 2, "tags": [], "bug_id": 60876, "attachment_id": null, "text": "Thanks for the report, the analysis and the patch. I hope it is the first of many.\n\nFixed in:\n- trunk for 9.0.0.M19 onwards\n- 8.5.x for 8.5.13 onwards\n- 8.0.x for 8.0.43 onwards\n\nI also fixed the test cases that started failing once this issue was fixed.", "id": 197725, "time": "2017-03-16T21:21:57Z", "creator": "markt@apache.org", "creation_time": "2017-03-16T21:21:57Z", "is_private": false}]