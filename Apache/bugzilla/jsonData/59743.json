[{"count": 0, "tags": [], "creator": "axel@dua3.com", "attachment_id": null, "id": 191894, "time": "2016-06-22T19:22:07Z", "bug_id": 59743, "creation_time": "2016-06-22T19:22:07Z", "is_private": false, "text": "When writing large Excel files with repeating data using the SXSSF implementation, calling SXSSFWorkbook.write() results in  ZipSecureFile throwing \"zip bomb detected\" exception. This check should only be carried out when reading workbooks.\n\nThis is triggered by reading back in the temporary data that POI itself wrote to the disk when the workbook was created.\n\nTo avoid the exception being thrown, the ZipFile class should be used directly when reading the temporary file back in."}, {"count": 1, "attachment_id": 33974, "bug_id": 59743, "text": "Created attachment 33974\nDo not use ZipSecureFile in injectData()", "id": 191895, "time": "2016-06-22T19:23:51Z", "creator": "axel@dua3.com", "creation_time": "2016-06-22T19:23:51Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 59743, "attachment_id": null, "text": "See related discussion on dev mailing list: http://apache-poi.1045710.n5.nabble.com/Bug-58499-ZipSecureFile-throws-zip-bomb-detected-td5723580.html", "id": 191896, "time": "2016-06-22T19:42:12Z", "creator": "onealj@apache.org", "creation_time": "2016-06-22T19:42:12Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 59743, "text": "Thank you for your patch - applied with a test case via r1749799\n\nAs far as I can see, this only happens when shared strings are enabled,\nbecause otherwise the uncompressed or gzip-ed data of the sheetXXX.xmls is copied directly, i.e. without using the ZipSecureFile", "id": 191900, "time": "2016-06-23T00:26:17Z", "creator": "kiwiwings@apache.org", "creation_time": "2016-06-23T00:26:17Z", "tags": [], "is_private": false}]