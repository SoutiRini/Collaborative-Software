[{"count": 0, "tags": [], "bug_id": 11512, "text": "Main.class contains the following method:\n\n    /** initialise log4j **/\n    private static void initLog4J() {\n        final Properties props = new Properties();\n        props.setProperty(\"log4j.rootCategory\", \"DEBUG, A1\");\n        props.setProperty(\"log4j.appender.A1\",\n                          \"org.apache.log4j.ConsoleAppender\");\n        props.setProperty(\"log4j.appender.A1.layout\",\n                          \"org.apache.log4j.TTCCLayout\");\n        PropertyConfigurator.configure(props);\n    }\n\nThis forces all internal output to the console, disregarding any configuration \nthat may have been applied by the log4j.configuration property.  Chris Bailey \nhas posted a message on the user list trying to find a way to turn this output \noff.  With the current code, he is stuck.\n\nSuggested solution: Maybe the initLog4J() method should check for the \nlog4j.configuration property, and if it exists, do not apply any \nconfiguration.  If it does not exist, then apply the default configuration it \napplies right now.", "id": 20730, "time": "2002-08-06T23:53:55Z", "creator": "mwomack@apache.org", "creation_time": "2002-08-06T23:53:55Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "maasvdberg@gmail.com", "attachment_id": null, "is_private": false, "id": 31814, "time": "2003-02-23T15:48:56Z", "bug_id": 11512, "creation_time": "2003-02-23T15:48:56Z", "text": "For sake of consistency you could also use the logging facility offered by\norg.apache.log4j.helpers.LogLog. This way you'll only get 'logging' output\nwhen you enable the log4j.debug environment property. See attachment."}, {"count": 2, "tags": [], "bug_id": 11512, "text": "Created attachment 4983\nReplace ChainSaw 'regular' logging with log4j internal logging", "id": 31816, "time": "2003-02-23T15:55:04Z", "creator": "maasvdberg@gmail.com", "creation_time": "2003-02-23T15:55:04Z", "is_private": false, "attachment_id": 4983}, {"count": 3, "tags": [], "creator": "scott@schram.net", "attachment_id": null, "is_private": false, "id": 31818, "time": "2003-02-23T16:42:18Z", "bug_id": 11512, "creation_time": "2003-02-23T16:42:18Z", "text": "As reported in bug 17260, LogLog is going to be eliminated in log4j 1.3.\n\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=17260\n\nIn log4j v1.2.8, I can suppress the messages using a log4j.xml, and using the\nfollowing:\n\n<logger name=\"org.apache.log4j.chainsaw\">\n    <level value=\"error\"/>\n</logger>\n"}, {"count": 4, "tags": [], "text": "After thinking and looking at this some more, I think Chainsaw should create \nit's own internal LoggerRepository (separate from the default LoggerRepository \nused to report the received events) for reporting internal errors/messages.  \nAnd it would be nice if that could be configured separately from the default \nLoggerRepository as well.", "is_private": false, "id": 31821, "creation_time": "2003-02-23T17:44:43Z", "time": "2003-02-23T17:44:43Z", "creator": "mwomack@apache.org", "bug_id": 11512, "attachment_id": null}, {"count": 5, "tags": [], "creator": "ceki@apache.org", "attachment_id": null, "is_private": false, "id": 31841, "time": "2003-02-24T08:00:31Z", "bug_id": 11512, "creation_time": "2003-02-24T08:00:31Z", "text": "\nMark,\n\nAltough perfectly reasonable, I don't think separate repositories for a \ncomponent like Chansaw is the best approach. In my humble opinion, logger \nrepositories are best reserved for the separation of applications (web-apps or \nEJB apps).\n\nAnyway, I intend to add a new property called isConfigured() to \nLoggerRepository so that one can check before (re)configuring log4j."}, {"count": 6, "tags": [], "text": "\nThe new method is called LoggerRepository.isPristine().", "is_private": false, "id": 58335, "creator": "ceki@apache.org", "time": "2004-05-28T17:22:55Z", "bug_id": 11512, "creation_time": "2004-05-28T17:22:55Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 11512, "text": "I'm going to mark this one as WONTFIX, since Chainsaw v2 works with both log4j\n1.2 and 1.3 logging environments.  \n\nChainsaw v2 own internal logs are viewable inside itself... ! :)", "id": 102191, "time": "2007-04-23T22:43:35Z", "creator": "psmith@apache.org", "creation_time": "2007-04-23T22:43:35Z", "is_private": false, "attachment_id": null}]