[{"count": 0, "tags": [], "bug_id": 58432, "is_private": false, "text": "Sheet[1] and Row[2] interfaces expose an iterator interface that has a remove method. This allows sheets to be removed from the underlying data structure (TreeMap.values() -> Collection view of TreeMap's values), but doesn't do the rest of the cleanup that is done in removeRow(Row)[3] or removeCell(Cell)[4]. If I understand the behavior of a Collection *view* correctly, this would remove the row/cell from the TreeMap without cleaning up the rest of the data structures.\n\nThe rowIterator and cellIterator should explicitly disallow the remove method unless the method correctly handles the rest of the cleanup without causing a ConcurrentModificationException.\n\nPerhaps this would be a good usage for Collections.unmodifiableMap or Collections.unmodifiableList[5]. Otherwise, a custom iterator could be written like was done for XSSFWorkbook.iterator[6]\n\n[1] XSSFSheet.iterator https://svn.apache.org/viewvc/poi/trunk/src/ooxml/java/org/apache/poi/xssf/usermodel/XSSFSheet.java?revision=1702802&view=markup#l1780\n[2] XSSFRow.iterator https://svn.apache.org/viewvc/poi/trunk/src/ooxml/java/org/apache/poi/xssf/usermodel/XSSFRow.java?revision=1649107&view=markup#l95\n[3] XSSFSheet.removeRow https://svn.apache.org/viewvc/poi/trunk/src/ooxml/java/org/apache/poi/xssf/usermodel/XSSFSheet.java?revision=1702802&view=markup#l1689\n[4] XSSFRow.removeCell https://svn.apache.org/viewvc/poi/trunk/src/ooxml/java/org/apache/poi/xssf/usermodel/XSSFRow.java?revision=1649107&view=markup#l406\n[5] Collections.unmodifiableMap https://docs.oracle.com/javase/7/docs/api/java/util/Collections.html\n[6] XSSFWorkbook.SheetIterator https://svn.apache.org/viewvc/poi/trunk/src/ooxml/java/org/apache/poi/xssf/usermodel/XSSFWorkbook.java?revision=1703573&view=markup#l1058", "id": 185369, "time": "2015-09-20T21:46:08Z", "creator": "onealj@apache.org", "creation_time": "2015-09-20T21:46:08Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Created attachment 33121\nfailing unit tests\n\nI've written unit tests for Workbook, Sheet, and Row which should test the sheetIterator, rowIterator, and cellIterator, respectively for the following scenarios:\n1) iterator.remove() either is unsupported or behaves the same as the removeSheetAt, removeRow, or removeCell method\n2) if removeSheetAt, removeRow, or removeCell are called after an iterator has been created, the iterator should throw a ConcurrentModificationException the next time a method is called on it.\n\nThe Workbook sheetIterator passes, but the rowIterator and cellIterator fail for HSSF, XSSF, and SXSSF variants.\n\nSummary of test results\n                  HSSF   XSSF   SXSSF\nBaseTestWorkbook  pass   pass   pass\nBaseTestSheet     1fail  1fail  1fail\nBaseTestRow       2fails 1fail  1fail\n\nI needed to modify HSSFRow.hashCode in order to have assertNull(HSSFRow) give a more meaningful error.", "is_private": false, "id": 185373, "creator": "onealj@apache.org", "time": "2015-09-21T06:28:08Z", "bug_id": 58432, "creation_time": "2015-09-21T06:28:08Z", "attachment_id": 33121}, {"count": 2, "attachment_id": 33122, "bug_id": 58432, "text": "Created attachment 33122\nunit test results", "id": 185374, "time": "2015-09-21T06:28:43Z", "creator": "onealj@apache.org", "creation_time": "2015-09-21T06:28:43Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "onealj@apache.org", "text": "Additional unit tests are necessary to verify that the side-effects of iterator.remove are identical to removeSheetAt, removeRow, and removeCell.\n\nI propose making iterator.remove() an UnsupportedOperationException for now until someone can find a solution that doesn't duplicate code and works correctly.", "id": 185376, "time": "2015-09-21T06:32:57Z", "bug_id": 58432, "creation_time": "2015-09-21T06:32:57Z", "is_private": false, "attachment_id": null}]