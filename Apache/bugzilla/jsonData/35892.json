[{"count": 0, "tags": [], "creator": "cjs@cynic.net", "attachment_id": null, "id": 77713, "time": "2005-07-27T12:35:17Z", "bug_id": 35892, "creation_time": "2005-07-27T12:35:17Z", "is_private": false, "text": "This applies to name-based virtual servers.\n\nWhen UseCanonicalName is true, get_server_name and get_server_port (and, by\nextension, construct_url and all generated redirects) use the hostname and port\nspecified in the configuration file.\n\nHowever, when UseCanonicalName is false, these use the hostname and port\nsupplied by the user. In the case of the hostname, this is fine; the server has\nno way actually to find out what hostname the client really used; it can only\ntrust what the client passed in in the host header.  However, the port is a\ndifferent case; because the destination port number was specified in the TCP\nrequest itself, the server knows both what the client told it (in the Host\nheader) and what the client really used (from the TCP connection), assuming that\nthere are no proxies between that are rewriting the port number.\n\nNote that clients sometimes do use a port different from what they say they\nused; this is a known bug in many versions of Internet explorer. If IE is given\na redirect to the same host but a different port, when following the redirect it\nwill re-use the old Host header (with the old port number) rather than generate\na new Host head with the port number that it's actually using for the request.\n\nNow apache, when it gets a request and is looking up a name-based virtual host,\ntrusts the client for the name, but does not trust the client for the port\nnumber. So if there are two virtual hosts, foo:123 and foo:456, and it receives\na request on port 456 with a host header asking for foo:123, apache will instead\nuse virtual host foo:456 to satisfy the request. It is clamed that this is for\nsecurity reasons, though these reasons are not clear.\n\nUnfortunately, this means that when apache (or anybody else using construct_url)\ngenerates a redirect under these circumstances, it will generate a redirect not\nto the virtual host Apache used to satisfy the request, but to the host that the\nclient claimed to be looking for (which Apache did not use).\n\nIt appears that one of the reasons for this behavior is the resolution of bug\n25515: there are circumstances (where a proxy in between is changing port\nnumbers) where apache also does not know the port number the client actually\nused. E.g., the client connects to external:82, which is a NAT device that\nfowardards this to internal:80.\n\nHowever, it seems to me that this fix was not so well thought through, since\nthat brought about this bizarre situation where apache believes clients about\nthe hostname regardless, but doesn't believe them about the port when serving\nthe request, yet believes them about the port when issuing redirects. I would\nsay that, in the absence of an apache that will believe the client about the\nport as well as host, the better solution to bug 25515 is to fix the\nconfiguration of the internal apache and make it listen on port 82 (as well as\n80, if necessary), since you're otherwise effectively using the NAT device to\nlie to apache, and expecting apache to understand that this is a lie.\n\nSo what is the correct solution here? I would say the best option is, when you\naccept a request with a Host: header, search for the virtual server based on\nthat, both name and port. As far as I can see, any security considerations that\nwould apply here (e.g., that port is supposed to be blocked on the firewall)\nalso apply to the name (the host with that name is supposed to be blocked on the\nfirewall). Arbitrarially believing the name is no worse than arbitrarially\nbelieving the port; in both cases you have to realize that the data comes from\nthe client and configure apache appropriately for your security needs, rather\nthan depending on a firewall.\n\nFailing that, you could add an option to UseCanonicalName to, instead of using\nboth name and port or neither, follow apache's practice when searching for the\nvirtual host to serve a request of using the name supplied by the client but the\nport suppplied by the operating system.\n\nThe workaround, for this at the moment, is to write your own construct_url\nfunction that uses the server name from the request (get_server_name) but the\nport number from the server used to serve the request (instead of the request's\nget_server_port). However, while that works for redirects generated by code\nusing Apache, Apache itself will still issue incorrect redirects."}, {"count": 1, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 142355, "time": "2010-12-03T21:42:26Z", "bug_id": 35892, "creation_time": "2010-12-03T21:42:26Z", "is_private": false, "text": "supercdd by usecanonicalphysicalport in 2.2 and later"}]