[{"count": 0, "tags": [], "bug_id": 7237, "attachment_id": null, "text": "Hi,\nfirst thanks for this great tool we are using sucessfully for about a year on \nSolaris and W2K!\nFor the daily work we are using one build.xml per cvs-modul, all of them in the \nbasics identical (just some personal additions), the tasks:\njavac - jar - junit - junitreport (and some cleanup and javadoc and analyse).\nFor javac the failonerror is set to true and developers can react on error \nmessages.\n\nFor the non-interactive nightly build and smoke we are using one build.xml \nwhich exports the cvs-modules and uses <ant antfile=\"...\"/> to call the above \ndescribed buildfiles.\nThe failureProperty in the junit-task was a very helpfull, so we can mail in \ncase of errors/failures during the junit.\nNow I would like to have something like a failureProperty for javac, so I can \ndecide to either mail in case of errros or run the junit task.\nSetting javac failonerror to false and the javac fails, then the junit results \nare unpredictable - I'm not happy with my workarounds I tryed.\n\nThanks in advance for any workarounds!\n...or even better the above suggested property in the next release!?!\n\nCheers Jens", "id": 11990, "time": "2002-03-19T11:45:25Z", "creator": "jdawurske@ohltec.de", "creation_time": "2002-03-19T11:45:25Z", "is_private": false}, {"count": 1, "tags": [], "creator": "jakarta@ehatchersolutions.com", "text": "The best way to accomplish this is to use the MailLogger, which is part of the \nnightly builds (added after version 1.4.1 was released).  We could continue to \nadd failure properties to every task, but I think a listener/logger is a better \nsolution to sending e-mails upon failure.", "id": 11992, "time": "2002-03-19T12:41:02Z", "bug_id": 7237, "creation_time": "2002-03-19T12:41:02Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 7237, "attachment_id": null, "text": "I am going to be brutal and close this with a WONTFIX. we dont want to get \ninto having failure properties for everything, preferring a decent, cleaner \nconceptual model, like a try and catch construct. Speaking of which ant-\ncontrib on sourceforge has one of those, which you may want to play with. ", "id": 13218, "time": "2002-04-11T06:15:19Z", "creator": "steve_l@iseran.com", "creation_time": "2002-04-11T06:15:19Z", "is_private": false}]