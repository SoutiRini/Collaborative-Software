[{"count": 0, "tags": [], "bug_id": 56295, "attachment_id": null, "id": 173983, "time": "2014-03-20T19:34:05Z", "creator": "nestor.urquiza@gmail.com", "creation_time": "2014-03-20T19:34:05Z", "is_private": false, "text": "Attached you will find a zip file containing a JUnit test to replicate the issue. Basically we open a first workbook and add to it a new sheet where we clone the content from a second workbook sheet. We are expecting the style from the second to appear in the first however that does not happen as the screenshots show.\n\n1. Download poi-3.10-FINAL\n\n2. Download the junit-4.11.jar which includes hamcrest (POI lib ships the version without hamcrest)\n\n3. Download the zip file and uncompress it somewhere\n\n4. Compile and run the test as per the below (Note I downloaded everything to my ~/Downloads MAC directory):\n$ cd xlsx-xslm-style-lost-on-merge/\n$ javac -cp \".:/Users/nu/Downloads/poi-3.10-FINAL/*:/Users/nu/Downloads/poi-3.10-FINAL/lib/*\" *.java\n$ java -cp \".:/Users/nu/Downloads/poi-3.10-FINAL/*:/Users/nu/Downloads/poi-3.10-FINAL/lib/*:/Users/nu/Downloads/poi-3.10-FINAL/ooxml-lib/*:/Users/nu/Downloads/junit-4.11.jar\" org.junit.runner.JUnitCore XlsxSheetCopyUtilTest\n\n5. Look into the output.xlsm file to confirm the styles from pet.xlsx are lost when its sheet is copied to zoom200.xlsm file.\n\nBTW the attached files are coming from https://issues.apache.org/bugzilla/show_bug.cgi?id=52348 with small modifications.\n\nThanks,\n- Nestor"}, {"count": 1, "tags": [], "creator": "nestor.urquiza@gmail.com", "attachment_id": 31418, "id": 173984, "time": "2014-03-20T19:35:03Z", "bug_id": 56295, "creation_time": "2014-03-20T19:35:03Z", "is_private": false, "text": "Created attachment 31418\njava sources and resources"}, {"count": 2, "tags": [], "bug_id": 56295, "attachment_id": 31419, "id": 173985, "creation_time": "2014-03-20T19:35:26Z", "time": "2014-03-20T19:35:26Z", "creator": "nestor.urquiza@gmail.com", "text": "Created attachment 31419\nexpected result", "is_private": false}, {"count": 3, "tags": [], "creator": "nestor.urquiza@gmail.com", "text": "Created attachment 31420\nreceived result", "id": 173986, "time": "2014-03-20T19:35:55Z", "bug_id": 56295, "creation_time": "2014-03-20T19:35:55Z", "is_private": false, "attachment_id": 31420}, {"count": 4, "tags": [], "bug_id": 56295, "attachment_id": null, "text": "Looking at your program, I can't spot any logic where you clone the styles from the old workbook to the new one. If you want the styles to come across, you need to use the cloneStyleFrom method:\nhttp://poi.apache.org/apidocs/org/apache/poi/ss/usermodel/CellStyle.html#cloneStyleFrom%28org.apache.poi.ss.usermodel.CellStyle%29\n\nCan you try that and see if it resolves the problem?", "id": 174158, "time": "2014-03-28T11:27:17Z", "creator": "apache@gagravarr.org", "creation_time": "2014-03-28T11:27:17Z", "is_private": false}, {"count": 5, "tags": [], "creator": "nestor.urquiza@gmail.com", "text": "Nick thanks for the suggestion. I chenged the below in XlsxSheetCopyUtil#copyCell:\n//newCell.setCellStyle(newCellStyle);\nnewCell.getCellStyle().cloneStyleFrom(newCellStyle);\n\n\nHowever I got the failure below even though files and code are Excel 2013 compatible as far as I understand:\n\nThere was 1 failure:\n1) testMergeXlslsWithStyles(XlsxSheetCopyUtilTest)\njava.lang.IllegalArgumentException: Can only clone from one XSSFCellStyle to another, not between HSSFCellStyle and XSSFCellStyle\n\tat org.apache.poi.xssf.usermodel.XSSFCellStyle.cloneStyleFrom(XSSFCellStyle.java:186)\n\tat XlsxSheetCopyUtil.copyCell(XlsxSheetCopyUtil.java:113)\n\tat XlsxSheetCopyUtil.copyRow(XlsxSheetCopyUtil.java:80)\n\tat XlsxSheetCopyUtil.copySheets(XlsxSheetCopyUtil.java:49)\n\tat XlsxSheetCopyUtil.copySheets(XlsxSheetCopyUtil.java:34)\n\tat XlsxSheetCopyUtilTest.testMergeXlslsWithStyles(XlsxSheetCopyUtilTest.java:28)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat org.junit.runners.Suite.runChild(Suite.java:127)\n\tat org.junit.runners.Suite.runChild(Suite.java:26)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:138)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:117)\n\tat org.junit.runner.JUnitCore.runMain(JUnitCore.java:96)\n\tat org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:47)\n\tat org.junit.runner.JUnitCore.main(JUnitCore.java:40)\n\nThere is no reference to HSSF at all as you can see:\nNestors-MacBook-Pro:xlsx-xslm-style-lost-on-merge nu$ find ./ -name \"*.java\"\n.//CellRangeAddressWrapper.java\n.//XlsxSheetCopyUtil.java\n.//XlsxSheetCopyUtilTest.java\nNestors-MacBook-Pro:xlsx-xslm-style-lost-on-merge nu$ find ./ -name \"*.java\"|xargs grep HSSF\nNestors-MacBook-Pro:xlsx-xslm-style-lost-on-merge nu$ \n\nAny ideas?\n\nThanks!\n- Nestor", "id": 174209, "time": "2014-04-02T02:19:48Z", "bug_id": 56295, "creation_time": "2014-04-02T02:19:48Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 56295, "attachment_id": null, "id": 174274, "creation_time": "2014-04-04T12:53:28Z", "time": "2014-04-04T12:53:28Z", "creator": "nestor.urquiza@gmail.com", "text": "I have commented out the whole old code and leverage only to the cloneStyleFrom() as shown below. No errors but the style is still not there in the output. I will attach the whole project again with the latest changes with the hope you guys can quickly replicate and determine why the code below has no effect:\n\nnewCell.getCellStyle().cloneStyleFrom(oldCell.getCellStyle());\n\nThanks!\n- Nestor", "is_private": false}, {"count": 7, "tags": [], "creator": "nestor.urquiza@gmail.com", "attachment_id": 31475, "id": 174275, "time": "2014-04-04T12:54:57Z", "bug_id": 56295, "creation_time": "2014-04-04T12:54:57Z", "is_private": false, "text": "Created attachment 31475\nv2"}, {"count": 8, "tags": [], "creator": "nestor.urquiza@gmail.com", "attachment_id": null, "id": 174276, "time": "2014-04-04T12:55:52Z", "bug_id": 56295, "creation_time": "2014-04-04T12:55:52Z", "is_private": false, "text": "See v2 file and follow the original instructions to run the project. Let me know please if you need any more information. Thanks, - Nestor"}, {"count": 9, "attachment_id": null, "bug_id": 56295, "text": "This was caused by a combination of two bugs in POI and one in your code:\n* POI did not handle the absence of the XML attribute \"applyFill\" as default \"true\", but it seems Excel and LibreOffice do although I could not find any answer for this in the Ecma spec \n* POI: When cloning styles, the Fills were not cloned over correctly\n* Your code did not correctly create the new style, but somehow relied on a style being availabe, which did not work correctly, \n\nUpdating to a build of rr1666736 or newer and adjusting the cloning of the style in your code as follows did make the sample work for me:\n\n        //newCell.getCellStyle().cloneStyleFrom(oldCell.getCellStyle());\n        CellStyle newCellStyle = newCell.getRow().getSheet().getWorkbook().createCellStyle();\n        newCellStyle.cloneStyleFrom(oldCell.getCellStyle());\n        newCell.setCellStyle(newCellStyle);", "id": 181764, "time": "2015-03-14T19:37:08Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-03-14T19:37:08Z", "tags": [], "is_private": false}, {"count": 10, "attachment_id": null, "bug_id": 56295, "text": "*** Bug 50956 has been marked as a duplicate of this bug. ***", "id": 181889, "time": "2015-03-18T20:28:43Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-03-18T20:28:43Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "id": 182389, "time": "2015-04-15T14:07:44Z", "bug_id": 56295, "creation_time": "2015-04-15T14:07:44Z", "is_private": false, "text": "SVN link is r1666736"}, {"count": 12, "tags": [], "bug_id": 56295, "attachment_id": null, "text": "I hava met this problem recently.\nThe method \"cloneStylefrom()\" doesn't  work.\nCan you give a temp way to solve this problem?\nMuch Thanks.", "id": 182466, "time": "2015-04-18T10:42:31Z", "creator": "543002649@qq.com", "creation_time": "2015-04-18T10:42:31Z", "is_private": false}, {"count": 13, "tags": [], "creator": "gwoolsey@apache.org", "attachment_id": null, "id": 199300, "time": "2017-06-20T18:20:17Z", "bug_id": 56295, "creation_time": "2017-06-20T18:20:17Z", "is_private": false, "text": "*** Bug 53262 has been marked as a duplicate of this bug. ***"}]