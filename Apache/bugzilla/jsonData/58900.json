[{"count": 0, "tags": [], "bug_id": 58900, "text": "Created attachment 33471\nJConsole screen while observing this behavior\n\n## Reproduction steps ##\n\nTo reproduce this issue:\n\n1. Add undeployOldVersions=\"true\" to the otherwise default Host configuration in server.xml\n\n2. Do a parallel deployment of two versions of the same war by creating a symlink to the actual war file(s):\n\n$ ln -s /path/to/app.war /path/to/webapps/app#001.war\n$ ln -s /path/to/app.war /path/to/webapps/app#002.war\n\nShortly after startup, Tomcat undeploys app##001 (the \"old version\"). However, the war file is not deleted, and ends up getting redeployed. This happens over and over again, until at some point the number of loaded classes grows too big and OutOfMemoryError happens.\n\n## Root cause ##\n\nWhat's preventing the symlinked war from getting deleted is this line in org.apache.catalina.startup.HostConfig#deleteRedeployResources:\n\ncurrent = current.getCanonicalFile();\n\nThe canonical file is war file the symlink is pointing to, and the isDeletableResource method determines that it should not be deleted.\n\n## Context ##\n\nThis issue has been plaguing me on a CentOS/6 server running 7.0.55, but appears to affect 8.x and 9.x as well. I reproduced it locally on OSX. My Struts2/Spring/Hibernate application died within ~10 minutes with -Xmx256m. Screenshot from jconsole attached, undeploy/redeploy cycle can be seen clearly in the CPU usage and number of classes loaded.", "id": 187859, "attachment_id": 33471, "creator": "lauri.h.lehtinen@gmail.com", "creation_time": "2016-01-20T22:33:34Z", "time": "2016-01-20T22:33:34Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 58900, "is_private": false, "text": "Created attachment 33472\ncatalina.out with HostConfig logging set to finest", "id": 187860, "time": "2016-01-20T22:37:53Z", "creator": "lauri.h.lehtinen@gmail.com", "creation_time": "2016-01-20T22:37:53Z", "attachment_id": 33472}, {"count": 2, "tags": [], "bug_id": 58900, "is_private": false, "text": "Easy fix for this particular problem would be to remove the getCanonicalFile call in HostConfig (https://github.com/apache/tomcat/blob/trunk/java/org/apache/catalina/startup/HostConfig.java#L1416), but I'm afraid it's there for some good reason.", "id": 187861, "time": "2016-01-20T22:51:02Z", "creator": "lauri.h.lehtinen@gmail.com", "creation_time": "2016-01-20T22:51:02Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "I think the root issue is that your application leaks a ClassLoader for some reason (and you should definitely fix that), but Tomcat should also not be endlessly re-deploying itself.\n\nThere is a less pathological use-case here: downgrading an application after pushing-out a broken update. For example, version A is deployed and working well, then version B is deployed. Version B is determined to be flawed and so version A will be re-deployed as version C. Symlinks are used to link version C to version A for clarity for an admin. Assuming versions A and C are deployed simultaneously (e.g. version A was not decommissioned before version C was deployed) and you have the same situation as described in comment #0.", "is_private": false, "bug_id": 58900, "id": 187863, "time": "2016-01-21T02:03:31Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-01-21T02:03:31Z", "attachment_id": null}, {"count": 4, "attachment_id": null, "creator": "markt@apache.org", "text": "+1 to Chris's comment regarding the memory leak. 99% of those turn out to be bugs in applications or 3rd party libraries. The redeploy loop is definitely a Tomcat bug.\n\ngetCanonicalPath() is used handle docBases such as \"../../someapp.war\" which will be resolved relative to the appBase but should not be deleted because they are outside the appBase. In this case the context would probably have been configured via a someapp.xml file (which does need to be removed).\n\nThere are likely to be similar issues with any code that triggers an undeploy if the WAR, DIR or XML files are symlinked into the appBase or configBase. The fix will be to remove those symlinks. The checks are going to have to be more sophisticated than the current getCanonicalPath().\n\nI plan to look at this today.", "id": 187868, "time": "2016-01-21T10:12:14Z", "bug_id": 58900, "creation_time": "2016-01-21T10:12:14Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 58900, "text": "You're right, the memory leak was caused by separate issue. Thanks", "id": 187869, "time": "2016-01-21T10:17:33Z", "creator": "lauri.h.lehtinen@gmail.com", "creation_time": "2016-01-21T10:17:33Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 58900, "text": "Fixed for 9.0.0.M2 onwards, 8.0.31 onwards and 7.0.68 onwards.", "count": 6, "id": 188005, "time": "2016-01-28T08:45:14Z", "creator": "markt@apache.org", "creation_time": "2016-01-28T08:45:14Z", "is_private": false}]