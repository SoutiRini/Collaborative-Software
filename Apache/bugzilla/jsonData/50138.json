[{"count": 0, "tags": [], "bug_id": 50138, "text": "Symptom: all processor threads spin madly in:\n==============\n\"tomcat-processor-20\" daemon prio=10 tid=0x09210800 nid=0x51fb runnable [0x61b76000]\n   java.lang.Thread.State: RUNNABLE\n\tat java.util.HashMap.getEntry(HashMap.java:347)\n\tat java.util.HashMap.containsKey(HashMap.java:335)\n\tat org.apache.catalina.security.SecurityUtil.doAsPrivilege(SecurityUtil.java:227)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)\n\tat org.apache.catalina.core.ApplicationFilterChain.access$000(ApplicationFilterChain.java:56)\n\tat org.apache.catalina.core.ApplicationFilterChain$1.run(ApplicationFilterChain.java:189)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:185)\n...\n==============\n\nCause: org.apache.catalina.security.SecurityUtil.objectCache is a HashMap, but access to it is not synchronized. The javadoc for HashMap says:\n=============\nNote that this implementation is not synchronized. If multiple threads access a hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally.\n=============\n\nProposed solution: change objectCache to ConcurrentHashMap;", "id": 140902, "time": "2010-10-21T09:22:56Z", "creator": "mikhailov.dmitry@gmail.com", "creation_time": "2010-10-21T09:22:56Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "sebb@apache.org", "text": "That may not be the only bug. \n\nThere are two instances of the following code:\n\nif(objectCache.containsKey(targetObject)){\n            methodsCache = objectCache.get(targetObject);\n\nIf the object is removed between the two statements, then an NPE will follow.\n\nSurely the code should just check whether it got a non-null object?\n\nAlso, the private static fields should be final.", "id": 140905, "attachment_id": null, "bug_id": 50138, "creation_time": "2010-10-21T09:51:59Z", "time": "2010-10-21T09:51:59Z", "is_private": false}, {"count": 2, "text": "Thanks for the report.\n\nFixed in trunk for 7.0.5 onwards and proposed for 6.0.x", "bug_id": 50138, "attachment_id": null, "id": 140911, "time": "2010-10-21T12:02:00Z", "creator": "markt@apache.org", "creation_time": "2010-10-21T12:02:00Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Fixed in 6.0.x and will be included in 6.0.30 onwards.", "id": 141001, "time": "2010-10-25T11:46:19Z", "bug_id": 50138, "creation_time": "2010-10-25T11:46:19Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "mikhailov.dmitry@gmail.com", "text": "Thanks for prompt fix, waiting for 6.0.30.", "count": 4, "id": 141086, "time": "2010-10-27T02:44:00Z", "bug_id": 50138, "creation_time": "2010-10-27T02:44:00Z", "is_private": false}]