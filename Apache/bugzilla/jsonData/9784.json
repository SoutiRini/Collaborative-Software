[{"count": 0, "tags": [], "creator": "breese@grandcentral.com", "attachment_id": null, "id": 17608, "time": "2002-06-11T15:56:14Z", "bug_id": 9784, "creation_time": "2002-06-11T15:56:14Z", "is_private": false, "text": "BuildNumber is a great task! However, it is something I would like to extend in\norder to generate version/build numbers of my own. For example, build.number\ncontains a single int that gets incremented. I would like to be able to\nincrement a number fitting a different pattern...\n\nPerhaps the BuildNumber task could be extended to take in a pattern - the\npattern would be applied to the actual version number in order to determine how\nto increment it.\n\nFor example, my company uses the typical pattern 1.15b4 indicating version 1,\n16th release (it starts counting from 0) and the 4th build. When I generate a\nbuild I would like to increment it to 1.15b5. The build.number file could\ncontain an additional property:\n\nbuild.number=1.15b4\nbuild.number.pattern={major}.{minor}b{build}\n\nWhen the BuildNumber class parses the build.number file it returns a HashMap\nthat contains three values: major, minor and build. Then it increments the value\nof build and rebuilds the pattern.\n\nI would be happy to work on this if you want to assign the bug to me..."}, {"count": 1, "tags": [], "bug_id": 9784, "attachment_id": null, "text": "PropertyFile already allows finner control.\nThis is a good solution for handling Properties.  \n\nI use PropertyFile with a custiom task to build a  \n a static class that has what you want.\nI have an task at https://sourceforge.net/projects/chalktools/\n\nIt looks like\n\n<taskdef name=\"buildVersion\"  \nclassname=\"com.chalko.tools.ant.BuildVersionGenerator\" c/>\n        <buildVersion\n                name=\"${name}\"\n                toDir=\"${src.java.dir}\"\n                packageName=\"com.mypackage\"\n                debug=\"${build.debug}\"\n                major=\"${build.major}\"\n                minor=\"${build.major}\"\n                increment=\"${build.major}\"\n                tag=\"dev\"\n\n/>\nIt generates\nthis\n/* $Header:\nC:\\workspace\\JavaDevCert\\src\\com\\flybynight\\FlyByNightBuildVersion.java $\n */\npackage com.flybynight;\n\n/**\n * A autogenerated BuiltVersion class.\n * @author com.chalko.tools.ant.BuildVersionGenerator  Revision: 1.8  \n * @version Fri Jun 07 02:48:37 PDT 2002\n * \n */\npublic class FlyByNightBuildVersion extends com.chalko.tools.rt.BuildVersion { \n\n    public static final FlyByNightBuildVersion INSTANCE = new\nFlyByNightBuildVersion();\n    \n    private FlyByNightBuildVersion() {\n        name=\"FlyByNight\";\n        date= new java.util.Date(1023443317875l);  //Fri Jun 07 02:48:37 PDT 2002\n        tag=\"development\";\n        major=\"0\";\n        minor=\"0\";\n        increment=\"0\";\n        host=\"baby/192.168.57.77\";\n        user=\"Owner\";\n        debug=true;\n    }\n    \n    \n    public final static FlyByNightBuildVersion getInstance( ) { return INSTANCE;}\n    \n} \n    \n  </target>\n\nThe parent classes has getter for the fields and convinece methods for standard\nforms  ( major.minor.increment)  etc.\n\nIf there is interest I will relicense it, and donate it.\n\n ", "id": 17698, "time": "2002-06-12T17:36:40Z", "creator": "nick@chalko.com", "creation_time": "2002-06-12T17:36:40Z", "is_private": false}, {"count": 2, "tags": [], "creator": "jan@materne.de", "attachment_id": null, "id": 183441, "time": "2015-06-10T19:58:58Z", "bug_id": 9784, "creation_time": "2015-06-10T19:58:58Z", "is_private": false, "text": "For building multipart version numbers I recommend <propertyfile> and saving major-, minor- and patchversion as seperate properties and combine these according to your desired pattern."}]