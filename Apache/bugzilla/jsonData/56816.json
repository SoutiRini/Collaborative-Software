[{"count": 0, "text": "vars.get() returns void in a java script if the variable is not existing instead of null (as described in it's documentation http://jmeter.apache.org/api/org/apache/jmeter/threads/JMeterVariables.html#get%28java.lang.String%29 )\n\nThis will lead to confusion and bugs if the user doesn't know this.", "bug_id": 56816, "attachment_id": null, "id": 176912, "time": "2014-08-05T09:21:41Z", "creator": "hideemail1@gmail.com", "creation_time": "2014-08-05T09:21:41Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 56816, "text": "(In reply to Bernhard from comment #0)\n> vars.get() returns void in a java script if the variable is not existing\n> instead of null (as described in it's documentation\n\nAre you sure?\nI cannot find any references that says that javascript can return void.\n\n> http://jmeter.apache.org/api/org/apache/jmeter/threads/JMeterVariables.\n> html#get%28java.lang.String%29 )\n\nThat Javadoc is correct; Java returns null (and does not have a concept of void as a return type)\n\n> This will lead to confusion and bugs if the user doesn't know this.\n\nPossibly, but it's not clear that there is a problem here.\n\nPlease provide sample code that exhibits the problem.", "id": 176928, "time": "2014-08-05T15:43:24Z", "creator": "sebb@apache.org", "creation_time": "2014-08-05T15:43:24Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 56816, "attachment_id": 31880, "text": "Created attachment 31880\ntestplan with bug\n\nSorry for the confusion, I meant java, not javascript.\nI'll add a test plan to make it clear what's wrong.\n\nIn the test plan there is a JSR223 with Java which tries to get a nonexistent variable out of vars. Then there are 2 ifs which compare the nonexistent variable with null and void and log and add \"null\" or \"void\" to the ResponseMessage.", "id": 176946, "time": "2014-08-06T05:54:11Z", "creator": "hideemail1@gmail.com", "creation_time": "2014-08-06T05:54:11Z", "is_private": false}, {"count": 3, "tags": [], "creator": "sebb@apache.org", "text": "Thanks for the sample JMX.\n\nThe code is not Java either - it is BeanShell.\nJava does not support void as a value, only as a return type qualifier.\nWhereas BeanShell uses void to indicate a non-existent variable.\n\n==\n\nIt's not yet clear why assigning null to the variable o should result in it being void rather than null as expected.\n\nIt looks to be a side effect of using the JSR223 sampler rather than the BeanShell sampler, as the same code works as expected in the BeanShell sampler, and also works as expected in a Beanshell interpreter or console app.\n\nIt remains to be seen whether this is a feature or bug in the JSR223 BeanShell support in JMeter or in BeanShell.\n\nMeanwhile the workround is to use the BeanShell test elements to run BeanShell code.", "id": 176951, "time": "2014-08-06T14:33:42Z", "bug_id": 56816, "creation_time": "2014-08-06T14:33:42Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 56816, "attachment_id": null, "text": "In the latest trunk 3.2-SNAPSHOT all of the following match x == void but do NOT match x == null in the JSR223 sampler:\n\nvar x;\nvar x = null;\nObject x = null;\nString x = null;\n\nNot sure if it's a bug, but it looks like expected BeanShell behaviour looking at the BeanShell docs (http://www.beanshell.org/manual/bshmanual.html):\n\n\nunset\nvoid unset ( String name ) \n\"Undefine\" the variable specifed by 'name' (So that it tests == void).\nNote: there will be a better way to do this in the future. This is currently equivalent to doing namespace.setVariable(name, null);\n\n\nMaybe we should document this in our JSR223 sampler as this is different to the BeanShell sampler which seems to display the opposite behaviour i.e. all the above tests only match == null not == void - this looks more like a bug to me, but is perhaps less intuitive when mixed with Java code.", "id": 196481, "time": "2017-01-27T09:42:22Z", "creator": "graham@ham1.co.uk", "creation_time": "2017-01-27T09:42:22Z", "is_private": false}]