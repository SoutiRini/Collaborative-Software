[{"count": 0, "tags": [], "creator": "dopey@moonteeth.com", "attachment_id": null, "id": 91327, "time": "2006-07-14T22:55:06Z", "bug_id": 40051, "creation_time": "2006-07-14T22:55:06Z", "is_private": false, "text": "I have the following configuration in my httpd.conf file:\n<AuthnProviderAlias ldap ldap>\n  AuthLDAPURL ldap://[insert your ldap server]\n</AuthnProviderAlias>\n\n\n<AuthnProviderAlias ldap padl>\n  AuthLDAPURL ldap://[insert your ldap server]\n</AuthnProviderAlias>\n\n<Location /dir1>\n  AuthzLDAPAuthoritative off\n  AuthName \"MyRealm\"\n  AuthType Basic\n  AuthBasicProvider padl ldap\n  require valid-user\n</Location>\n\n<Location /dir2>\n  AuthzLDAPAuthoritative off\n  AuthName \"MyRealm\"\n  AuthType Basic\n  AuthBasicProvider ldap\n  require valid-user\n</Location>\n\n\nWhen I hit /dir1, my apache child process segfaults.  Based on the gdb stack\ntrace, it looks like an endless loop of some sort is entered:\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread -1223992400 (LWP 31027)]\nfind_entry (ht=0x80e8a60, key=0x8187b50, klen=-1, val=0x0) at apr_hash.c:256\n256     {\n(gdb) where\n#0  find_entry (ht=0x80e8a60, key=0x8187b50, klen=-1, val=0x0)\n    at apr_hash.c:256\n#1  0xb7c9243d in apr_hash_get (ht=0xb68b6040, key=0x80e8a60, klen=-1)\n    at apr_hash.c:330\n#2  0xb7eea9fb in authn_alias_check_password (r=0x8193e68,\n    user=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\", password=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\") at mod_authn_alias.c:59\n#3  0xb7eeaa3e in authn_alias_check_password (r=0x8193e68,\n    user=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\", password=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\") at mod_authn_alias.c:68\n#4  0xb7eeaa3e in authn_alias_check_password (r=0x8193e68,\n    user=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\", password=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\") at mod_authn_alias.c:68\n#5  0xb7eeaa3e in authn_alias_check_password (r=0x8193e68,\n    user=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\", password=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\") at mod_authn_alias.c:68\n#6  0xb7eeaa3e in authn_alias_check_password (r=0x8193e68,\n    user=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\", password=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\") at mod_authn_alias.c:68\n#7  0xb7eeaa3e in authn_alias_check_password (r=0x8193e68,\n    user=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\", password=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\") at mod_authn_alias.c:68\n#8  0xb7eeaa3e in authn_alias_check_password (r=0x8193e68,\n    user=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\", password=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\") at mod_authn_alias.c:68\n#9  0xb7eeaa3e in authn_alias_check_password (r=0x8193e68,\n    user=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\", password=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\") at mod_authn_alias.c:68\n#10 0xb7eeaa3e in authn_alias_check_password (r=0x8193e68,\n    user=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\", password=0xb68b6040 \"\u00ff\u00ff\u00ff\u00ff\") at mod_authn_alias.c:68\n\nThis goes on for tends of thousands of calls and actually eventually segfaults\ngdb if I try to get to the beginning of the stack.\n\nIf I reverse the order of the AuthnProviderAlias declarations and put padl\nbefore ldap, the problem goes away.  If I pick different aliases, I have to\nguess at the right order to do this."}, {"count": 1, "attachment_id": null, "bug_id": 40051, "is_private": false, "id": 91329, "time": "2006-07-14T23:05:45Z", "creator": "jessh@ptc.com", "creation_time": "2006-07-14T23:05:45Z", "tags": [], "text": "By the way, this bug has been reproduced on both Windows and Linux, though we\ndidn't manage to capture the stack on Windows."}, {"count": 2, "tags": [], "bug_id": 40051, "text": "Isn't the problem that you have the provider alias being aliased to itself?\n\nYou can't do that: pick another name for the first alias besides 'ldap'.  The\ncode may technically permit it, but I expect that's the root cause as they share\nthe same provider namespace and if you get into a recursive definition, funny\nthings may happen.", "id": 91424, "time": "2006-07-20T06:16:38Z", "creator": "jerenkrantz@apache.org", "creation_time": "2006-07-20T06:16:38Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "Ahh.\nI guess the documentation for mod_auth_alias wasn't very clear as to what the\nbaseProvider and aliasName were referring to.\n\nThis makes sense.  Seems rather ugly that such a misconfiguration could cause\napache to go into an endless loop.\n\nBut, at least now we know how to make this do the right thing.\nThanks.", "attachment_id": null, "id": 91447, "creator": "dopey@moonteeth.com", "time": "2006-07-20T22:18:47Z", "bug_id": 40051, "creation_time": "2006-07-20T22:18:47Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 40051, "attachment_id": 18636, "text": "Created attachment 18636\nAdd a check to make sure that the base provider and the alias names are different and also that the alias has not been registered before\n\nThis patch as been checked into trunk and proposed for backport", "id": 91560, "time": "2006-07-24T22:39:02Z", "creator": "bnicholes@apache.org", "creation_time": "2006-07-24T22:39:02Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 40051, "attachment_id": null, "id": 91614, "time": "2006-07-26T14:26:25Z", "creator": "rpluem@apache.org", "creation_time": "2006-07-26T14:26:25Z", "is_private": false, "text": "Backported to 2.2.x as r425740 (http://svn.apache.org/viewvc?rev=425740&view=rev)."}]