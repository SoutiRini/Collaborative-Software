[{"count": 0, "tags": [], "creator": "csutherl@apache.org", "attachment_id": null, "is_private": false, "id": 199584, "time": "2017-07-05T16:32:38Z", "bug_id": 61253, "creation_time": "2017-07-05T16:32:38Z", "text": "I don't see much of a problem with this for vanilla tomcat, but if you're using a PropertySource implementation with org.apache.tomcat.util.digester.PROPERTY_SOURCE and it bombs somehow, the Digester quietly eats the exception leaving the developer/user clueless.\n\nCould we log a warn message in the catch block here https://github.com/apache/tomcat85/blob/trunk/java/org/apache/tomcat/util/digester/Digester.java#L1990 saying that the replacement failed and that the property was not updated?"}, {"count": 1, "tags": [], "text": "+1000\n\nI believe that any empty catch block is a bug, unless it's one of those \"never happen\" exceptions, and even those should be logged at an ERROR/FATAL level.", "is_private": false, "id": 199586, "creator": "chris@christopherschultz.net", "time": "2017-07-05T17:17:35Z", "bug_id": 61253, "creation_time": "2017-07-05T17:17:35Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Bad idea.\n\nThe end user does not need to know that somebody tried a property substitution here. It is not an error to write literal ${foo}. The correct substitution for \"${foo}\" if foo does not exist is \"${foo}\" (no changes). There is no error here.\n\nThe TLDs files in Standard taglib (JSTL) are an example of this: they have documentation elements - examples - with a lot of ${}s in them.  The examples web application uses this library.  You will see a lot of \"failed substitution\" occurrences when running it. (I saw them when testing the patch for CVE-2016-6794)\n\n\nI do not mind if there is a debug logging for failed substitutions.\n\nI think that logging a warning is a bad idea.", "is_private": false, "id": 199590, "creator": "knst.kolinko@gmail.com", "time": "2017-07-05T18:04:21Z", "bug_id": 61253, "creation_time": "2017-07-05T18:04:21Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "is_private": false, "id": 199609, "time": "2017-07-06T13:51:31Z", "bug_id": 61253, "creation_time": "2017-07-06T13:51:31Z", "text": "As I see it, when a property doesn't exist (without errors) in the property source (SystemPropertySource), it should return null and the substitution isn't made. The source throwing an exception should mean there is an error. IMO it's time to clarify the behavior (probably only in 8.5 and 9) and warn on possible errors."}, {"count": 4, "tags": [], "creator": "csutherl@apache.org", "attachment_id": 35109, "is_private": false, "id": 199692, "time": "2017-07-10T15:56:37Z", "bug_id": 61253, "creation_time": "2017-07-10T15:56:37Z", "text": "Created attachment 35109\nPropertySourceImpl to reproduce with\n\nI didn't add a reproducer earlier, but here's one in case you guys want it...I also noted after creating this reproducer that the only thing that could cause the exception to be thrown are unchecked exceptions (in my case, an IllegalArgumentException).\n\n1) Copy the attached jar into lib\n2) Configure catalina.properties to use it\n\norg.apache.tomcat.util.digester.PROPERTY_SOURCE=org.apache.tomcat.example.digester.PropertySourceImpl\n\n3) Add the trigger substitution to the server.xml so that the exception is thrown (I couldn't just throw an exception because it made the return unreachable)\n\n$ sed -i 's@SHUTDOWN@${throwException}@' conf/server.xml\n\n4) Starting or Stopping tomcat will reproduce the issue\n\nWARNING: Attribute 1 failed to update and remains ${throwException}.\njava.lang.IllegalArgumentException: Please don't ignore me tomcat :(\n\tat org.apache.tomcat.example.digester.PropertySourceImpl.getProperty(PropertySourceImpl.java:12)\n\tat org.apache.tomcat.util.IntrospectionUtils.replaceProperties(IntrospectionUtils.java:274)\n\tat org.apache.tomcat.util.digester.Digester.updateAttributes(Digester.java:1986)\n\tat org.apache.tomcat.util.digester.Digester.startElement(Digester.java:1170)\n\nNote that in my case I added a warn to log it as I suggested earlier...otherwise it get's ignored and you have to use a debugger to see the problem :("}, {"count": 5, "tags": [], "text": "Created attachment 35123\nPatch proposal that logs the attribute name and value that failed to update", "is_private": false, "id": 199740, "creator": "csutherl@apache.org", "time": "2017-07-12T12:13:07Z", "bug_id": 61253, "creation_time": "2017-07-12T12:13:07Z", "attachment_id": 35123}, {"count": 6, "tags": [], "bug_id": 61253, "attachment_id": null, "id": 199939, "time": "2017-07-21T19:52:46Z", "creator": "csutherl@apache.org", "creation_time": "2017-07-21T19:52:46Z", "is_private": false, "text": "Fixed in:\n\n- trunk for 9.0.0.M25 onwards\n- 8.5.x for 8.5.19 onwards\n- 8.0.x for 8.0.46 onwards\n- 7.0.x for 7.0.80 onwards"}]