[{"count": 0, "tags": [], "creator": "sergg@kazbek.ispras.ru", "attachment_id": null, "text": "AntClassLoader has the problem during loading classes, that can throw an \nexception from static initializer code. E.g. we have a class that loads native \nlibrary and that library does not exist. Normally when such class is loading \nwith default ClassLoader UnsatisfiedLinkError will be thrown. But method \nAntClassLoader.initializeClass(Class theClass) catches Throwable and \nBuildException occured during executing has the cause: NullPointerException not \nUnsatisfiedLinkError.\n\nTemporary solution can be: catch only exceptions that can occure in method \nConstructor.newInstance all other exceptions should be rethrown with \nBuildException. But this is not fully correct because exceptions thrown by \nConstructor.newInstance can occure in static initializer of loaded class also.", "id": 40446, "time": "2003-07-11T11:59:28Z", "bug_id": 21498, "creation_time": "2003-07-11T11:59:28Z", "is_private": false}, {"count": 1, "tags": [], "creator": "conor@apache.org", "attachment_id": null, "text": "I have removed use of InitializeClass method since under JDK 1.2 we can use the\nClass.forName method to initialize the class. \n\nPlease try the next nightly build.", "id": 40631, "time": "2003-07-14T13:50:37Z", "bug_id": 21498, "creation_time": "2003-07-14T13:50:37Z", "is_private": false}]