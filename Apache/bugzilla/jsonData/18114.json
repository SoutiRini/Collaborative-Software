[{"count": 0, "tags": [], "text": "When reading a file with a formula that divides by zero, an excel prompt of\n\"Warning:data may be lost\" is presented to the user.", "is_private": false, "id": 33356, "creator": "dmui@apache.org", "time": "2003-03-18T17:00:00Z", "bug_id": 18114, "creation_time": "2003-03-18T17:00:00Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "dmui@apache.org", "text": "Created attachment 5411\nExcel File (Pre-poi)", "id": 33357, "time": "2003-03-18T17:00:32Z", "bug_id": 18114, "creation_time": "2003-03-18T17:00:32Z", "is_private": false, "attachment_id": 5411}, {"count": 2, "tags": [], "bug_id": 18114, "attachment_id": null, "id": 33358, "time": "2003-03-18T17:01:11Z", "creator": "dmui@apache.org", "creation_time": "2003-03-18T17:01:11Z", "is_private": false, "text": "\npublic class POITest {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tFile file = new File(\"divbug.xls\");\n\t\tInputStream input = new FileInputStream(file);\n\t\t\n\t\tHSSFWorkbook wb = new HSSFWorkbook(input);\n\t\tinput.close();\n\t\t\n\t\tFile outFile = new File(\"divbug-poi.xls\");\n\t\toutFile.createNewFile();\n\t\tOutputStream output = new FileOutputStream(outFile);\n\t\twb.write(output);\n\t\toutput.close();\n\t\t\n\t}\n}\n"}, {"count": 3, "tags": [], "text": "Interesting, to say the least. I think the issue is in an ErrorPtg that poi does\nnot yet handle. It should be simple to add these to poi, since they wouldnt\naffect the formula parser.. you just have to read them and spit them out\nwhenever necessary. The only issue is the tediousness of implementing all the\nErrorPtg classes. ", "attachment_id": null, "id": 33372, "creator": "avik@apache.org", "time": "2003-03-18T19:31:52Z", "bug_id": 18114, "creation_time": "2003-03-18T19:31:52Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "dmui@apache.org", "is_private": false, "count": 4, "id": 33458, "time": "2003-03-19T15:53:31Z", "bug_id": 18114, "creation_time": "2003-03-19T15:53:31Z", "text": "i was hoping it was simple (didnt look at it yet) but tedious ack.  you do what\nyou have to do.."}, {"count": 5, "tags": [], "bug_id": 18114, "attachment_id": null, "is_private": false, "id": 34113, "time": "2003-03-29T20:05:37Z", "creator": "dmui@apache.org", "creation_time": "2003-03-29T20:05:37Z", "text": "Apparently our LittleEndian NaN support didn't create a suitable value when\nfillingFields for a FormulaRecord with my Excel version (2000).\n\nWhen we created a workbook from scratch with a div by zero formula, the value is\n0 and not NaN.\n\nThe fix was to preserve Excel's NaN representation and serialize it out again\nwhen using fillFields.\n"}]