[{"count": 0, "tags": [], "text": "Petr Kuzel wrote:\n\n> \n> Sandeep Randhawa wrote:\n> \n\n> > You don't have to be parser dependent.\n> >\n> > Set the feature by calling\n> > XMLReader.setFeature(\"http://apache.org/xml/features/nonvalidating/load-exte\n> > rnal-dtd\", false);\n\n> \n> Other implementations may throw an Exception as they does not support the\n> feature by its name. It can be catched and hidden.\n> \n> Anyway I dislike the idea of turning off validation. Xerces should come with\n> cached grammars with near future eliminating reparsing known DTDs.\n\n\nWhat the hell you'd like to use validation for, when you're reading a\nfile\nfrom inside a distribution jar that never changes again and again?\n\nAnd even chached grammars won't help Xerces read the little documents\nfaster,\nbecause it still needs to prepare the instance of the grammar and then\ncheck\nthe elements against the grammar.\n\nTry to tell Dafe to use validation for his window management stuff,\nwhere he is using files with about two elements in them and even\nthe DOCTYPE declaration is bigger that the content.\n\nThe problem with the Xerces is that it uses a part of DOM (even in SAX\nparsing),\nwhenever in ecounters DOCTYPE declaration. I understand that it needs\nit in the case the document will have internal DTD, but how many\nof our XMLs uses this feature? I think that it could wait with creating\nthe Document till it finds '[' inside the DOCTYPE, otherwise it is\noverkill\nfor lightweight SAX parsing.\n\nI just looked what the Xerces loads when it encouters DOCTYPE,\nI'm not saying that the loads are bad (the clacces will be loaded\na bit later anyway), but it signs that there is something wrong\nwith it to me:\n[Loaded org.openide.filesystems.StreamPool]\n[Loaded org.openide.filesystems.StreamPool$NotifyInputStream]\n[Loaded org.xml.sax.InputSource]\n[Loaded org.openide.filesystems.FileURL]\n[Loaded org.openide.filesystems.FileURL$1]\n[Loaded org.netbeans.core.modules.ModuleList$1]\n[Loaded org.apache.xerces.readers.DefaultEntityHandler$ReaderState]\n[Loaded org.apache.xerces.readers.XMLEntityHandler$EntityReader]\n[Loaded org.apache.xerces.readers.DefaultEntityHandler$NullReader]\n[Loaded org.apache.xerces.utils.URI]\n[Loaded sun.io.ByteToCharUTF8 from /pn/Jdks/jdk1.3.1-fcs/jre/lib/rt.jar]\n[Loaded org.apache.xerces.readers.XMLEntityReader]\n[Loaded org.apache.xerces.readers.AbstractCharReader]\n[Loaded org.apache.xerces.readers.CharReader]\n[Loaded org.apache.xerces.utils.XMLCharacterProperties]\n[Loaded org.apache.xerces.framework.XMLDocumentScanner$PrologDispatcher]\n[Loaded org.apache.xerces.framework.XMLDTDScanner]\n[Loaded org.apache.xerces.framework.XMLContentSpec$Provider]\n[Loaded org.apache.xerces.validators.common.Grammar]\n[Loaded org.apache.xerces.framework.XMLDTDScanner$EventHandler]\n[Loaded org.apache.xerces.validators.dtd.DTDGrammar]\n[Loaded org.apache.xerces.validators.datatype.DatatypeValidator]\n[Loaded org.apache.xerces.validators.common.XMLContentModel]\n[Loaded org.apache.xerces.utils.Hash2intTable]\n[Loaded org.apache.xerces.framework.XMLContentSpec]\n[Loaded org.w3c.dom.Node]\n[Loaded org.w3c.dom.NodeList]\n[Loaded org.w3c.dom.events.EventTarget]\n[Loaded org.apache.xerces.dom.NodeImpl]\n[Loaded org.apache.xerces.dom.ChildNode]\n[Loaded org.apache.xerces.dom.ParentNode]\n[Loaded org.w3c.dom.Document]\n[Loaded org.w3c.dom.traversal.DocumentTraversal]\n[Loaded org.w3c.dom.events.DocumentEvent]\n[Loaded org.w3c.dom.ranges.DocumentRange]\n[Loaded org.apache.xerces.dom.DocumentImpl]\n[Loaded org.w3c.dom.Element]\n[Loaded org.apache.xerces.dom.ElementImpl]\n[Loaded org.w3c.dom.Attr]\n[Loaded org.apache.xerces.dom.AttrImpl]\n[Loaded org.w3c.dom.NamedNodeMap]\n[Loaded org.apache.xerces.dom.NamedNodeMapImpl]\n[Loaded org.apache.xerces.dom.AttributeMap]\n[Loaded\norg.apache.xerces.framework.XMLDocumentScanner$ContentDispatcher]\n[Loaded org.apache.xerces.utils.StringPool$CharArrayRange]\n[Loaded\norg.apache.xerces.framework.XMLDocumentScanner$TrailingMiscDispatcher]\n[Loaded\norg.apache.xerces.framework.XMLDocumentScanner$EndOfInputDispatcher]\n[Loaded org.netbeans.core.modules.ModuleHistory]\n[Loaded org.netbeans.core.modules.ModuleList$DiskStatus]\n\nand the file parsed:\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<!DOCTYPE module PUBLIC \"-//NetBeans//DTD Module Status 1.0//EN\"\n                       \n\"http://www.netbeans.org/dtds/module-status-1_0.dtd\">\n<module name=\"org.netbeans.modules.apisupport.lite\">\n<param name=\"autoload\">false</param>\n<param name=\"enabled\">true</param>\n<param name=\"jar\">apisupport-lite.jar</param>\n<param name=\"origin\">installation</param>\n<param name=\"release\">1</param>\n<param name=\"reloadable\">false</param>\n<param name=\"specversion\">0.2</param>\n</module>\n\nI was parsing using simple SAX parser (not the DOM in your sources of\nModuleList)\nwith the above feature set to false and validation also turned off.\n\nThe second thing I don't understand is why I have to switch some\nproprietary\nfeature to prevent Xercer from asking for DTD when the document itself\nspecifies\nit is standalone and I'm not validating.\nCan somebody explain me this behaviour?\n\nBy the way, changing the switch didn't make a difference in its speed,\nbecause the additional time was not spent analyzing the DTD (we've\nalready returned empty stream when not validating), but rather\ncreating the instance of the garmmar.\n\n\n\n> Then we have to setup feature by calling something similar anyway.\n> \n> Petr you can try Crimson however expect compatability problems as Xerces\n> is exposed at IDE classpath and someone may be implementation dependend.\n> It is real pain to have at IDE classpath implementations that are widely\n> visible. (We can not remove parser.jar for the same reason.)\n> Cc.\n> \n> --\n> <address>\n> <a href=\"mailto:pkuzel@sun.com\">Petr Kuzel</a>, Sun Microsystems\n> : <a href=\"http://www.sun.com/forte/ffj/ie/\">Forte Tools</a>\n> : XML and <a href=\"http://jini.netbeans.org/\">Jini</a> modules</address>\n\n\n-- Petr Nejedly NetBeans/Sun Microsystems http://www.netbeans.org", "attachment_id": null, "id": 4125, "creator": "petr.kuzel@sun.com", "time": "2001-07-30T03:06:22Z", "bug_id": 2882, "creation_time": "2001-07-30T03:06:22Z", "is_private": false}, {"count": 1, "tags": [], "creator": "gmarcy@us.ibm.com", "attachment_id": null, "id": 4138, "time": "2001-07-30T08:31:11Z", "bug_id": 2882, "creation_time": "2001-07-30T08:31:11Z", "is_private": false, "text": ">The second thing I don't understand is why I have to switch some\n>proprietary feature to prevent Xercer from asking for DTD when the\n>document itself specifies it is standalone and I'm not validating.\n>Can somebody explain me this behaviour?\n\nThere are several issues you raise.\n\nFirst, there IS a \"standard\" feature to control reading the DTD, but it is less \nspecific than the proprietary one that you mention.  The \n\"http://xml.org/sax/features/external-parameter-entities\" feature will also \ndisable reading the external DTD subset in addition to other external parameter \nentity references that may appear in the internal DTD subset.\n\nSecond, the standalone declaration is only meaningful to the parser if you are \nreporting validation errors, otherwise it is ignored since the only effect that \nit can have is to fail validity constraints.\n\nLastly, there is a misunderstanding about what the \"validation\" feature means.  \nThe Xerces parser is a validating XML processor.  A validating processor, \"at \nuser option\", reports failures of validity constraints.  The validation feature \nis that option.  It should not have any other effect on processing.\n\nAs an example, let's say that your document says that it is standalone, and \nreferences an external DTD subset, and you have turned off reporting of validity \nconstraint failures.  If the external DTD subset were to introduce a defaulted \nattribute value, that attribute would be added to the infoset of the document \nand the document would in fact be invalid since it is not in fact standalone.  \nHowever, the document may still be well-formed and since you are not reporting \nvalidity constraint failures then everything will complete successfully.\n\nSo you see, turning it around, without some indication from the application to \nthe parser that it not read the external DTD subset, the parser must read that \nparsed entity to find possible changes introduced by that entity.  Not reporting \nvalidation errors is an orthogonal issue.\n"}, {"attachment_id": null, "tags": [], "bug_id": 2882, "is_private": false, "count": 2, "id": 4140, "time": "2001-07-30T09:15:37Z", "creator": "petr.kuzel@sun.com", "creation_time": "2001-07-30T09:15:37Z", "text": "Thanks for standalone usage clarification.\nHowever the reported bug is that SAX processor loads DOM classes, that is\nsuspicuous and time consuming.\n"}, {"count": 3, "tags": [], "bug_id": 2882, "attachment_id": null, "id": 4151, "creation_time": "2001-07-30T12:24:34Z", "time": "2001-07-30T12:24:34Z", "creator": "gmarcy@us.ibm.com", "text": ">However the reported bug is that SAX processor loads DOM classes, that\n>is suspicuous and time consuming.\n\nand the main reason that I didn't invalidate the bug when I added my\ncomment !!  ;-)\n\nI haven't looked into the issue (1.3.0 is very different than current\nversions in this respect), but I suspect that it is a transitive closure\nover the implementation problem and not necessarily a design decision\nissue.  The doctype line is parsed by a class that uses classes that\nuse classes that use the DOM, and that sort of thing.  Were you able to\ndetermine that a DOM document was actually created, or just that the\nclasses were loaded?  If it is once per JVM, it could just be a layering\nissue (there are cycles all over the place within Xerces1).  Some of\nthe architectural changes in Xerces2 are meant to overcome many of these\nproblems, but I don't know of any cases of DOM-less Xerces parser packages.\nIt could be that the only way to break such dependencies is to introduce\nsome kind of Class.forName() hook to dynamically reference the DOM code.\n", "is_private": false}]