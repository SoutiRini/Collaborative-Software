[{"count": 0, "tags": [], "creator": "scott.klein@l-3com.com", "attachment_id": null, "id": 60947, "time": "2004-07-22T00:48:25Z", "bug_id": 30248, "creation_time": "2004-07-22T00:48:25Z", "is_private": false, "text": "By forcing the interface to a double, the user cannot parse extremely large or\nsmall numbers - for example \"3.11E-09\" is returned rounded to 0 as a Java double.\n\nPerhaps a way to retrieve \"number\" cells as strings (so they can be turned into\nBigDecimals, etc), or give the user more options as how the numeric data should\nbe handled."}, {"count": 1, "tags": [], "bug_id": 30248, "attachment_id": null, "id": 82218, "time": "2005-11-08T15:10:50Z", "creator": "gopal_sharma@freddiemac.com", "creation_time": "2005-11-08T15:10:50Z", "is_private": false, "text": "related bug 30565: getNumericCellValue is returning more digits from a formu... \n\nNot just from formula, but from any numeric cell, a method to get the value of \nthe cell as a text string would definitely be helpful, so that user may use the \nvalue to do whatever required. Currently if the cell has something like \n1092544061.35, the getNumericCellValue returns 1092544061.3499994 !\n"}, {"count": 2, "tags": [], "bug_id": 30248, "attachment_id": null, "text": "Yes, you cannot parse number greater than 10.000.000. \nI have a formula , something like : =10.000.000/10 and HSSFFormulaEvaluator\nevaluateCell method return 1 after the evaluation. \nSo i try to see how looks the string from that cell with HSSFCell\ngetCellFormula() method, and the result was : 1.0E7/100 .\nYou cannot do nothing! :(", "id": 85044, "time": "2006-01-26T09:48:03Z", "creator": "tudorionut13@yahoo.com", "creation_time": "2006-01-26T09:48:03Z", "is_private": false}, {"count": 3, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 118524, "time": "2008-07-10T16:07:49Z", "bug_id": 30248, "creation_time": "2008-07-10T16:07:49Z", "is_private": false, "text": "The Excel file format stores the numbers as doubles, so this behaviour is entirely as expected. We simply expose to you what's stored in the file\n\nYou'll need to do string formatting to turn the double into what you show your user, based on the formatting rule attached to the style of the cell"}]