[{"attachment_id": null, "tags": [], "creator": "eric.dalquist@doit.wisc.edu", "is_private": false, "count": 0, "id": 88636, "time": "2006-04-28T21:43:29Z", "bug_id": 39447, "creation_time": "2006-04-28T21:43:29Z", "text": "The original algorithm used by ConstantThroughputTimer does not do a good job in\nensuring requests are evenly spaced and does not ensure throughput if the thread\ngroup has a ramp up period.\n\nI've changed the algorithm to achieve constant throughput no matter how many\nthreads are actually active (if applying to all threads or the thread group).\nThe algorithm also ensures a constant distribution of samples as long as the\nsamplers are not taking too long. I'll attach the modified\nConstantThroughputTimer and a dependent class.\n\nThe algorithm should also have less overhead in the way of math and synchronization."}, {"count": 1, "tags": [], "bug_id": 39447, "text": "Created attachment 18201\nThe updated ConstantThroughputTimer code\n\nThis is the modified ConstantThroughputTimer code.", "id": 88637, "time": "2006-04-28T21:44:18Z", "creator": "eric.dalquist@doit.wisc.edu", "creation_time": "2006-04-28T21:44:18Z", "is_private": false, "attachment_id": 18201}, {"attachment_id": 18202, "tags": [], "bug_id": 39447, "text": "Created attachment 18202\nHelper class for the updated ConstantThroughputTimer code\n\nThis is a helper class used by the updated ConstantThroughputTimer code.", "count": 2, "id": 88638, "time": "2006-04-28T21:44:56Z", "creator": "eric.dalquist@doit.wisc.edu", "creation_time": "2006-04-28T21:44:56Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 39447, "attachment_id": null, "text": "(In reply to comment #2)\n> Created an attachment (id=18202) [edit]\n> Helper class for the updated ConstantThroughputTimer code\n> \n> This is a helper class used by the updated ConstantThroughputTimer code.\n\nThanks - but ... but I'm not sure we can accept this code with its current\nlicence ... can you change it for something else, e.g. ASL V2?", "id": 88639, "time": "2006-04-28T22:48:42Z", "creator": "sebb@apache.org", "creation_time": "2006-04-28T22:48:42Z", "is_private": false}, {"attachment_id": 18203, "tags": [], "bug_id": 39447, "is_private": false, "count": 4, "id": 88641, "time": "2006-04-28T23:02:04Z", "creator": "eric.dalquist@doit.wisc.edu", "creation_time": "2006-04-28T23:02:04Z", "text": "Created attachment 18203\nUpdated licence appropriately\n\nThe helper class with the Apache 2.0 license. I apologize for forgetting to put\nthis license on the code before I originally uploaded it."}, {"count": 5, "tags": [], "bug_id": 39447, "is_private": false, "text": "Thanks for the updated source.\n\nI've now had a look at the main code, and I'm finding it rather difficult to\nwork out what has been changed - for one thing, it looks as though the order of\nmethods has changed; there are changes in spacing etc.\n\nAny chance you could provide a patch against the 2.1 branch that just has your\nchanges?", "id": 88643, "time": "2006-04-29T00:31:20Z", "creator": "sebb@apache.org", "creation_time": "2006-04-29T00:31:20Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 39447, "attachment_id": 18204, "text": "Created attachment 18204\nA Patch against the trunk\n\nHere is a patch against the latest code in the trunk. I ended up just\nre-writing the class to simplify the code.", "id": 88644, "time": "2006-04-29T00:39:44Z", "creator": "eric.dalquist@doit.wisc.edu", "creation_time": "2006-04-29T00:39:44Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 39447, "is_private": false, "text": "Sorry, but I cannot use the patch against the trunk.\n\nAll changes at present are being made in the 2.1 branch; the trunk is very much\nbehind.\n\nAlso, please only provide the minimum changes. Thanks.", "id": 88645, "time": "2006-04-29T00:55:48Z", "creator": "sebb@apache.org", "creation_time": "2006-04-29T00:55:48Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 39447, "text": "Created attachment 18213\nConstantThroughputTimer patch against the 2.1 branch\n\nA patch with a minimal set of changes made against the 2.1 branch. The same\nhelper class (attachment 18203) can be used with this patch.", "id": 88700, "time": "2006-05-01T16:01:17Z", "creator": "eric.dalquist@doit.wisc.edu", "creation_time": "2006-05-01T16:01:17Z", "is_private": false, "attachment_id": 18213}, {"attachment_id": null, "tags": [], "bug_id": 39447, "is_private": false, "count": 9, "id": 88905, "time": "2006-05-08T15:03:49Z", "creator": "eric.dalquist@doit.wisc.edu", "creation_time": "2006-05-08T15:03:49Z", "text": "Is this a viable patch for the ConstantThroughputTimer or should I submit it as\na new timer component for jMeter?"}, {"count": 10, "tags": [], "bug_id": 39447, "attachment_id": null, "id": 88920, "time": "2006-05-08T16:52:58Z", "creator": "sebb@apache.org", "creation_time": "2006-05-08T16:52:58Z", "is_private": false, "text": "[BTW, the patch currently fetches the throughput only once. However the \nthoughput may vary during a run, so this needs to be done every time.]\n\nI've done some fixes to the existing code that should make it more accurate. \nThe ramp-up period is now allowed for, and the calculation has been corrected.\n\nThe original code calculates the delays indepedently for each thread, and \ntries to maintain the throughput in each thread.\n\nThe patch tries to maintain the overall thoughput, regardless of which thread \ngenerates it.\n\nSeems to me that both approaches are valid, so the best might be to add the \npatch as 2 new options (the per-thread case is now the same).\n\nWould that be OK?"}, {"count": 11, "tags": [], "bug_id": 39447, "text": "The patch should work if the delay changes during the test. The\nsetThroughput(double) method calculates the millisecondsPerRequest value which\nis used by the calculateDelay(ThrougputInfo) method every time the delay()\nmethod is called.\n\nThe patch doesn't change the behavior of the \"This Thread Only\" option and over\na long enough period of time doesn't change the number of requests per time unit\nfor   \"All Threads\" and \"All Threads in Group\". The change is instead of trying\nto calculate the delay for each thread independently when the user wants the\nthroughput to apply to a group of threads the delays are calculated for that group.\n\nOn that note if the function of the \"All Threads\" and \"All Threads in Group\"\noptions is desired then adding two new options would work too. I can re-work the\ncode and provide that patch as well if you would like.", "id": 88923, "time": "2006-05-08T17:51:18Z", "creator": "eric.dalquist@doit.wisc.edu", "creation_time": "2006-05-08T17:51:18Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 39447, "attachment_id": null, "text": "(In reply to comment #11)\n> The patch should work if the delay changes during the test. The\n> setThroughput(double) method calculates the millisecondsPerRequest value which\n> is used by the calculateDelay(ThrougputInfo) method every time the delay()\n> method is called.\n\nSorry, I got this wrong - I had assumed that setThroughput() was only called at\nthe start of a test, but it seems the TestBean variables are updated just before\ndelay is called. So moving it has no effect on the number of times it is invoked.\n\n> I can re-work the code and provide that patch as well if you would like.\n\nNo need, thanks.", "id": 88933, "time": "2006-05-08T22:03:30Z", "creator": "sebb@apache.org", "creation_time": "2006-05-08T22:03:30Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 39447, "attachment_id": null, "id": 88936, "time": "2006-05-08T23:32:21Z", "creator": "sebb@apache.org", "creation_time": "2006-05-08T23:32:21Z", "is_private": false, "text": "OK, I've added the two new options to the 2.1 code.\n\nThe change is in the nightly build 2-1.20060508.\n\nPlease check if I've added the code correctly."}]