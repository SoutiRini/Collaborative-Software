[{"count": 0, "tags": [], "bug_id": 54035, "attachment_id": null, "text": "As claimed in the FAQ, log4j is thread safe, but this method, copied from org.apache.log4j.Category is not thread safe:\n  /**\n     Starting from this category, search the category hierarchy for a\n     non-null level and return it. Otherwise, return the level of the\n     root category.\n\n     <p>The Category class is designed so that this method executes as\n     quickly as possible.\n   */\n  public\n  Level getEffectiveLevel() {\n    for(Category c = this; c != null; c=c.parent) {\n      if(c.level != null)\n\treturn c.level;\n    }\n    return null; // If reached will cause an NullPointerException.\n  }\n\n\nThis method can cause NPE.\n\nA configuration that recreates it:\ndefine in log4j.xml logger level for com.traffix:\n<logger name=\"com.traffix\">\n\t<level value=\"ALL\"/>\n</logger>\n\nand define log level for com.traffix.session: \n<logger name=\"com.traffix.session\">\n\t<level value=\"ALL\"/>\n</logger>\n\nrun code that uses com.traffix.session loggers.\nnow delete the com.traffix.session definition from the log4j.xml.\nIt is possible to encounter this scenario with 2 threads:\n\n1. user logs something using com.traffix.session logger. \n2. Thread1 evaluate the if clause: c.level indeed not null.\n3. the thread that listens to the file, thread2 changes the log level of c to null because com.traffix.session was deleted from the file by the user.\n4. thread1 continues and return c.level which is null.\n\nThen we get NPE in Priority.isGreaterOrEqual method because the given priority is null:\n\n2012-10-16 09:29:33,981 WARN java.lang.NullPointerException\n        at org.apache.log4j.Priority.isGreaterOrEqual(Priority.java:123)\n        at org.apache.log4j.Category.isEnabledFor(Category.java:751)\n        at com.traffix.openblox.core.utils.logging.LoggingUtils.isLoggable(LoggingUtils.java:169)\n        at com.traffix.openblox.core.utils.logging.LoggingUtils.doLog(LoggingUtils.java:306)\n        at com.traffix.openblox.core.utils.logging.LoggingUtils.trace(LoggingUtils.java:41)\n        at com.traffix.openblox.core.session.SessionImpl.isPersistSessionData(SessionImpl.java:805)", "id": 162862, "time": "2012-10-22T07:07:18Z", "creator": "e3133d3@yahoo.com", "creation_time": "2012-10-22T07:07:18Z", "is_private": false}]