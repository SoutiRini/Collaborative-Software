[{"attachment_id": 24131, "tags": [], "bug_id": 47684, "is_private": false, "count": 0, "id": 129642, "time": "2009-08-11T22:23:52Z", "creator": "zhouyanming@gmail.com", "creation_time": "2009-08-11T22:23:52Z", "text": "Created attachment 24131\npatch for solution1\n\nFileAppender appender = new DailyRollingFileAppender(layout,\ngetPath(),DATE_STYLE); \n\n//constructor will call FileAppender.setFile(String fileName, boolean append,\nboolean bufferedIO, int bufferSize) then call\nWriterAppender.createWriter(OutputStream os) then call\nWriterAppender.getEncoding()\n\nappender.setEncoding(ENCODING); //no use\nappender.setAppend(true);\n\nsolution 1:\nadd encoding to constructor and deprecate setEncoding() method\nattachment is a patch.\nsolution 2:\nrebuild QuietWriter when setEncoding()"}, {"count": 1, "tags": [], "bug_id": 47684, "text": "You did not include your original code that you thought was misbehaving.  I'm guessing that you programatically constructed a RollingFileAppender, then called setEncoding() but likely did not call activateOptions.   A call to activateOptions() is required after changing any property or set of properties to make it effective.  Appender constructors that take multiple arguments typically invoke activateOptions as part of the constructor.  Configurators or other code that use the default constructors will construct an appender (or layout, etc), set properties, and then call activateOptions() to complete the configuration.\n\nMarking the bug as NEEDINFO for more information.", "id": 129863, "time": "2009-08-23T19:25:35Z", "creator": "carnold@apache.org", "creation_time": "2009-08-23T19:25:35Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "zhouyanming@gmail.com", "attachment_id": null, "text": "It does works,thanks", "id": 129864, "time": "2009-08-23T19:42:53Z", "bug_id": 47684, "creation_time": "2009-08-23T19:42:53Z", "is_private": false}]