[{"count": 0, "tags": [], "creator": "Ryan.Lubke@Sun.COM", "attachment_id": null, "id": 14184, "time": "2002-04-21T17:36:36Z", "bug_id": 8346, "creation_time": "2002-04-21T17:36:36Z", "is_private": false, "text": "Issue 1:\n\nThe current logic for setting the isolation level is flawed in two ways:\n ** setIsolationLevel(String isolation) **\n a. \n      if(test1) {\n        //do\n      }\n      if (test2) {\n        //do\n      }\n      if (test3) {\n        //do\n      } else {\n        Exception\n      }\n\n    With the above logic, an exception is thrown no matter what value\n    is provided.\n\n   b.  The expected values in the current block do not match the values\n       defined in the spec, i.e.:\n\n        if (\"TRANSACTION_READ_COMMITTED\".equals(isolation) {\n        }\n\n2.  TransactionTagSupport.doStartTag()\n   \n    An int variable origIsolation is defined as an instance variable.\n    The doStartTag() declares a local variable origIsolation and sets\n    this variable with the original transaction isolation of the\n    connection.  However, this value is lost due to its scope,\n    so when doFinally() calls setTransactionIsolationLevel it does\n    so with the instance variable's value (0) and causes an exception (\n    which is swallowed). \n\n3.  TransactionTagSupport.doStartTag() and doFinally()\n\n    The spec clearly states the following on page 10-138:\n    \n    \"If the isolation attribute is specified, the current transaction\n     isolation level is saved (so it can later be restored) and set to the\n     specified level (using the Connection method setTransactionIsolation()).\"\n\n    The current class has logic that if the current transaction isolation\n    is the same as the user provided, it doesn't call setTransactionIsolation().\n    This is true for doFinally() when it attempts to revert to the original\n    transaction isolation.\n\n    Perhaps this is a spec issue, but as it stands now, the current behavior\n    is invalid.\n\n\nI will attach a patch that has a fix for these issues."}, {"count": 1, "tags": [], "creator": "Ryan.Lubke@Sun.COM", "attachment_id": 1651, "id": 14185, "time": "2002-04-21T17:38:16Z", "bug_id": 8346, "creation_time": "2002-04-21T17:38:16Z", "is_private": false, "text": "Created attachment 1651\nProposed fix for the issues described in bug."}, {"count": 2, "tags": [], "creator": "jan.luehe@sun.com", "attachment_id": null, "text": "Fixed.\n", "id": 14649, "time": "2002-04-24T17:50:42Z", "bug_id": 8346, "creation_time": "2002-04-24T17:50:42Z", "is_private": false}]