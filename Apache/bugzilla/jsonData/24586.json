[{"count": 0, "tags": [], "bug_id": 24586, "attachment_id": null, "text": "If a JSP tag attempts to expose an inner class, the following error results:\n\n====================================================================\nAn error occurred at line: 3 in the jsp file: /TestTag.jsp\n\nGenerated servlet error:\nD:\\dev\\jakarta-tomcat-4.1.27\n\\work\\Standalone\\localhost\\InnerBeanTest\\TestTag_jsp.java:63: cannot resolve \nsymbol\nsymbol  : class FooTag$InnerBean \nlocation: package test\nperchance you meant 'FooTag.InnerBean'\n      exposedBean = (test.FooTag$InnerBean) pageContext.findAttribute\n(\"exposedBean\");\n                         ^\n2 errors\n\n\n\tat org.apache.jasper.compiler.DefaultErrorHandler.javacError\n(DefaultErrorHandler.java:130)\n\tat org.apache.jasper.compiler.ErrorDispatcher.javacError\n(ErrorDispatcher.java:293)\n\tat org.apache.jasper.compiler.Compiler.generateClass(Compiler.java:353)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:370)\n\tat org.apache.jasper.JspCompilationContext.compile\n(JspCompilationContext.java:473)\n\tat org.apache.jasper.servlet.JspServletWrapper.service\n(JspServletWrapper.java:190)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile\n(JspServlet.java:295)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:241)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:247)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain\n====================================================================\nYou can use the following examples to generate the error:\n====================================================================\npackage test;\nimport javax.servlet.jsp.JspException;\nimport javax.servlet.jsp.tagext.TagSupport;\npublic class FooTag extends TagSupport\n{\n    public static class InnerBean\n    {\n        public InnerBean()\n        {\n            super();\n        }\n    }\n    public int doStartTag() throws JspException\n    {\n\tsuper.doStartTag();\n        InnerBean innerBean = new InnerBean();\n        pageContext.setAttribute(getId(), innerBean);\n\treturn SKIP_BODY;\n    }\n}\n====================================================================\npackage test;\nimport javax.servlet.jsp.tagext.TagData;\nimport javax.servlet.jsp.tagext.TagExtraInfo;\nimport javax.servlet.jsp.tagext.VariableInfo;\nimport test.FooTag;\npublic class FooTei extends TagExtraInfo\n{\n\tprivate static final Class type = FooTag.InnerBean.class;\n\tpublic VariableInfo[] getVariableInfo(TagData data)\n\t{\n\t\tVariableInfo typeInfo = new VariableInfo(data.getId\n(),type.getName(),true,VariableInfo.AT_END);\n\t\treturn new VariableInfo[] { typeInfo };\n\t}\n}\n====================================================================\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n<!DOCTYPE taglib\n    PUBLIC \"-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN\"\n    \"http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd\">\n<taglib>\n    <tlib-version>1.0</tlib-version>\n    <jsp-version>1.2</jsp-version>\n    <short-name>test</short-name>\n    <uri></uri>\n    <tag>\n        <name>fooTag</name>\n        <tag-class>test.FooTag</tag-class>\n        <tei-class>test.FooTei</tei-class>\n        <body-content>JSP</body-content>\n        <description>\n        </description>\n        <attribute>\n            <name>id</name>\n            <required>true</required>\n            <description></description>\n        </attribute>        \n      </tag>\n</taglib>\n====================================================================\n<%@page contentType=\"text/html; charset=utf-8\"%>\n<%@ taglib prefix=\"ibc\" uri=\"http://InnerBeanClass.net\" %>\n\n<ibc:fooTag id=\"exposedBean\"/>\n<%=exposedBean%>", "id": 47141, "time": "2003-11-10T22:22:43Z", "creator": "martini_t@yahoo.com", "creation_time": "2003-11-10T22:22:43Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 24586, "attachment_id": 9271, "id": 48054, "time": "2003-11-24T23:30:18Z", "creator": "steven_parkes@esseff.org", "creation_time": "2003-11-24T23:30:18Z", "is_private": false, "text": "Created attachment 9271\nchanges from tomcat 5 adapted back to tomcat 4"}, {"count": 2, "tags": [], "bug_id": 24586, "attachment_id": null, "text": "This looks very similar to http://nagoya.apache.org/bugzilla/show_bug.cgi?\nid=22867 which has been fixed in 5.  I've attached diffs which are the changes \nfrom 5 applied to 4.  I've tested the fix as far as it affects inner tag \nclasses.  It looks like it fixes beans too, but I haven't explicitly tested \nthat.", "id": 48055, "time": "2003-11-24T23:34:26Z", "creator": "steven_parkes@esseff.org", "creation_time": "2003-11-24T23:34:26Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 24586, "attachment_id": null, "text": "JDK 1.4.1 is no longer supported. This bug prevents migration to JDK 1.4.2, so\nthe fix needs to be applied and released so people suffering this problem have a\nmigration path.", "id": 56260, "time": "2004-04-22T15:29:30Z", "creator": "zodiac@holoweb.net", "creation_time": "2004-04-22T15:29:30Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 24586, "attachment_id": null, "text": "I have applied the port - thanks for the patch - but it doesn't fix the test\ncase originally described here.\n\nThe test case needs to be modified to return the canonical rather than binary\nname of the inner class. type.getName() is not sufficient. See the\ngetCanonicalName() function in the attached patch for how this might be performed.\n\nWith this modification (I just replaced type.getName() with a hard coded\n\"test.FooTag.InnerBean\") the test case works as expected.", "id": 71731, "time": "2005-03-02T22:00:43Z", "creator": "markt@apache.org", "creation_time": "2005-03-02T22:00:43Z", "is_private": false}]