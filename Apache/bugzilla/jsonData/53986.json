[{"count": 0, "tags": [], "bug_id": 53986, "attachment_id": 29466, "id": 162652, "time": "2012-10-09T18:40:08Z", "creator": "steve.ratay@yahoo.com", "creation_time": "2012-10-09T18:40:08Z", "is_private": false, "text": "Created attachment 29466\nJSP file to reproduce compilation error\n\nI have a JSP file that contained a comment line as follows:\n<%--- comment ---%>\n\nSuch a JSP compiles in Tomcat 7.0.30, but it does not compile in 7.0.32.  I\u2019ve attached a copy of a test file, which compiles in 7.0.30, but not in 7.0.32.  The only related change I see in the release notes is https://issues.apache.org/bugzilla/show_bug.cgi?id=53713.  \n\nFrom reading the JSP 2.2 spec, it appears that absent a specific comment about whitespace, the rules of XML shall apply, which effectively means whitespace is ignored.  This would seem to indicate this could be a regression introduced in 7.0.32, but since the spec is somewhat vague in the section about comments, \n\nERROR 09 Oct 2012 11:15:25,190 [http-bio-8080-exec-8] [com.liferay.portal.log.Co\nmmonsLogImpl.error(52)] org.apache.jasper.JasperException: /html/portal/layout/v\niew/portlet.jsp (line: 48, column: 6) Unterminated &lt;%-- tag\n        at org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorH\nandler.java:42)\n        at org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.j\nava:408)\n        at org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.j\nava:133)\n        at org.apache.jasper.compiler.Parser.parseComment(Parser.java:615)\n        at org.apache.jasper.compiler.Parser.parseElements(Parser.java:1425)\n        at org.apache.jasper.compiler.Parser.parse(Parser.java:138)\n        at org.apache.jasper.compiler.ParserController.doParse(ParserController.\njava:242)\n        at org.apache.jasper.compiler.ParserController.parse(ParserController.ja\nva:102)\n        at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:198)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:373)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:353)\n        at org.apache.jasper.compiler.Compiler.compile(Compiler.java:340)\n        at org.apache.jasper.JspCompilationContext.compile(JspCompilationContext\n.java:646)\n        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper\n.java:357)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:3\n90)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:334)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Appl\nicationFilterChain.java:305)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationF\nilterChain.java:210)\n        at com.liferay.filters.strip.StripFilter.doFilter(StripFilter.java:260)"}, {"count": 1, "tags": [], "text": "Confirmed broken in 7.0.32, working in 7.0.30.\n\nI played-around with it a bit and it appears that any odd number of - symbols before %> will cause the page to fail to compile (the original example has 7 - symbols before the final %> in the comment).", "attachment_id": null, "id": 162654, "creator": "chris@christopherschultz.net", "time": "2012-10-09T21:19:08Z", "bug_id": 53986, "creation_time": "2012-10-09T21:19:08Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 53986, "attachment_id": null, "is_private": false, "id": 162655, "time": "2012-10-09T21:25:57Z", "creator": "chris@christopherschultz.net", "creation_time": "2012-10-09T21:25:57Z", "text": "I thought there might be language in the spec to say that (like XML) the string \"--\" cannot appear in the comment itself but that's not the case.\n\nFrom the 2.2 spec:\n\"\nJSP.1.5.1.2 JSP Comments\n\nA JSP comment is of the form\n<%-- anything but a closing --%> ... --%>\n\nThe body of the content is ignored completely.\n\"\n\nSo this is both a regression and a spec violation."}, {"count": 3, "tags": [], "bug_id": 53986, "attachment_id": null, "id": 162656, "time": "2012-10-09T21:30:38Z", "creator": "markt@apache.org", "creation_time": "2012-10-09T21:30:38Z", "is_private": false, "text": "Possible cause: r1381417\n\nI haven't looked into this yet but that is where I'd start."}, {"count": 4, "tags": [], "bug_id": 53986, "attachment_id": null, "id": 162657, "time": "2012-10-09T22:07:13Z", "creator": "chris@christopherschultz.net", "creation_time": "2012-10-09T22:07:13Z", "is_private": false, "text": "(In reply to comment #3)\n> Possible cause: r1381417\n\nReverting that patch resolves the issue in 7.0.x/trunk, so the regression appears to be in there. I'm not sure where, though.\n\nSteve, a workaround might be replacing \"([^-])-------%>\" with \"\\1------%>\" in your JSPs (or just stick with 7.0.30 for the time being)."}, {"count": 5, "text": "(In reply to comment #4)\n\nThanks Chris.  I actually only had a single JSP with this problem, so I already fixed the JSP and am up and running on 7.0.32.  However, since it appeared to be a regression from the previous version I thought it best to report the issue.", "bug_id": 53986, "attachment_id": null, "id": 162658, "time": "2012-10-10T01:40:41Z", "creator": "steve.ratay@yahoo.com", "creation_time": "2012-10-10T01:40:41Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 53986, "attachment_id": null, "is_private": false, "id": 162664, "time": "2012-10-10T14:05:47Z", "creator": "markt@apache.org", "creation_time": "2012-10-10T14:05:47Z", "text": "Found the problem. It is line 429 of JspReader:\n\nsetCurrent(restart);\n\nThis makes the current Mark and the reset Mark the same object and they need to be kept separate. Looking at a fix now. It is possible that this issue will have have wider impacts that just comment tag parsing. We'll need to keeo an eye on it in case an early 7.0.33 is required."}, {"count": 7, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Fixed in trunk and 7.0.x and will be included in 7.0.33 onwards.", "id": 162665, "time": "2012-10-10T14:28:49Z", "bug_id": 53986, "creation_time": "2012-10-10T14:28:49Z", "is_private": false}, {"count": 8, "tags": [], "creator": "knst.kolinko@gmail.com", "is_private": false, "text": "(In reply to comment #6)\n> Found the problem. It is line 429 of JspReader:\n> \n> setCurrent(restart);\n> \n> This makes the current Mark and the reset Mark the same object and they need\n> to be kept separate. Looking at a fix now. It is possible that this issue\n> will have have wider impacts that just comment tag parsing.\n\nI agree with the fix.\n\nFor reference: r1396615 r1396617\n\nFor reference: The JspReader.skipUntil(String limit) method performs search for the first occurrence of string \"limit\" and returns its position or null if none found.\n\nAs far as I see, the only place in that method where \"current\" and \"restart\" marks being the same object matters is this line:\n  (#433 in 7.0.x, 427 in trunk)\n\n   nextChar();\n\nIt is supposed to advance \"current\", but if the objects are the same, it advances \"restart\" mark as well. Thus the next search re-try will start from a wrong place.\n\n\nTo trigger this issue the following two steps should occur:\n\n1. The first character of \"limit\" must occur somewhere in the preceding text. That is to trigger incorrect setCurrent(restart) call to start the issue.\n\n2. It should be incorrect to skip more than 1 character when re-trying the search from a new place. This is what produces the incorrect result. This can happen only if the first character of \"limit\" is repeated somewhere on non-first position in the \"limit\" string.\n\nThe JspReader.skipUntil(..) method is invoked with the following arguments:\nskipUntil(\"</\" + tag);\nskipUntil(\"--%>\");\nskipUntil(\"%>\");\nskipUntil(\"<\");\nskipUntil(\">\");\nskipUntil(\"]]>\");\nskipUntil(\":root\");\n\nAn '<' cannot occur in \"tag\". So the only places where the issue can happen are\nskipUntil(\"--%>\");\nskipUntil(\"]]>\");\n\nI looked for other calls of setCurrent(..) and do not see such problems elsewhere, so it is only limited to this skipUntil(..) method.\n\nThe \"]]>\" is used to terminate a \"<![CDATA[\". Noting that this affects JSP pages only. As far as I see, JSP documents are parsed differently.\n\n\nThe impact of this issue is that if the \"limit\" string is preceded by \"-\" or \"]\" correspondingly, it will not be recognized. If there is further occurrence of the sought string, it may skip there, without a compilation failure.\n\n\nExample 1. \"test.jsp\"\n<jsp:text><![CDATA[Hello world!] ]]]></jsp:text>\n\nExpected output: \"Hello world!] ]\"\nActual output in 7.0.32: JasperException: Unterminated CDATA tag\n\n\nExample 2.\n<%-- - ---%>Hello<%-- --%> world!\n\nNote the stray \"-\" to start the issue. It causes \"---%\" to be not recognized.\n\nExpected output: \"Hello world!\"\nActual output in 7.0.32: \" world!\"", "id": 162695, "time": "2012-10-11T13:19:31Z", "bug_id": 53986, "creation_time": "2012-10-11T13:19:31Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 53986, "attachment_id": null, "is_private": false, "id": 162697, "time": "2012-10-11T16:42:54Z", "creator": "chris@christopherschultz.net", "creation_time": "2012-10-11T16:42:54Z", "text": "(In reply to comment #8)\n> The JspReader.skipUntil(..) method is invoked with the following arguments:\n> skipUntil(\"</\" + tag);\n> skipUntil(\"--%>\");\n> skipUntil(\"%>\");\n> skipUntil(\"<\");\n> skipUntil(\">\");\n> skipUntil(\"]]>\");\n> skipUntil(\":root\");\n> \n> An '<' cannot occur in \"tag\". So the only places where the issue can happen\n> are\n> skipUntil(\"--%>\");\n> skipUntil(\"]]>\");\n\nIt may be true that a *valid* document may not include '<' within a tag but that doesn't mean that someone won't try it. As long as the resulting error message(s) make sense, I think this is an okay assumption.\n\n> The \"]]>\" is used to terminate a \"<![CDATA[\". Noting that this affects JSP\n> pages only. As far as I see, JSP documents are parsed differently.\n\nI hadn't tested CDATA initially: I did test things like <%! ... %> and <%= ... %> because of their JSP-ness. I hadn't thought of CDATA: thanks for adding this to the list of possible triggers. Perhaps you could add this to the test case Mark recently committed.\n\nI'm actually curious as to why Jasper cares about CDATA tags.. is that only in JSPX mode, or in vanilla JSP mode as well?\n\n> Example 2.\n> <%-- - ---%>Hello<%-- --%> world!\n> \n> Note the stray \"-\" to start the issue. It causes \"---%\" to be not recognized.\n\nThat's interesting, and not something I noticed in my testing. Yet another good thing to add to the test case."}, {"count": 10, "tags": [], "creator": "knst.kolinko@gmail.com", "is_private": false, "text": "(In reply to comment #9)\n> (In reply to comment #8)\n> > The JspReader.skipUntil(..) method is invoked with the following arguments:\n> > skipUntil(\"</\" + tag);\n> > skipUntil(\"--%>\");\n> > skipUntil(\"%>\");\n> > skipUntil(\"<\");\n> > skipUntil(\">\");\n> > skipUntil(\"]]>\");\n> > skipUntil(\":root\");\n> > \n> > An '<' cannot occur in \"tag\". So the only places where the issue can happen\n> > are\n> > skipUntil(\"--%>\");\n> > skipUntil(\"]]>\");\n> \n> It may be true that a *valid* document may not include '<' within a tag but\n> that doesn't mean that someone won't try it. As long as the resulting error\n> message(s) make sense, I think this is an okay assumption.\n\nThe skipUntil(\"</\" + tag) call is used to search for matching end-tag for a custom tag. The tag name there cannot contain \"<\". The tag name is parsed elsewhere and the spec has constraints on what characters are allowed there.", "id": 162707, "time": "2012-10-12T08:14:53Z", "bug_id": 53986, "creation_time": "2012-10-12T08:14:53Z", "attachment_id": null}, {"count": 11, "text": "*** Bug 54069 has been marked as a duplicate of this bug. ***", "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 163052, "time": "2012-10-30T08:05:48Z", "bug_id": 53986, "creation_time": "2012-10-30T08:05:48Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "text": "*** Bug 54184 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 163582, "creator": "markt@apache.org", "time": "2012-11-21T19:13:37Z", "bug_id": 53986, "creation_time": "2012-11-21T19:13:37Z", "attachment_id": null}]