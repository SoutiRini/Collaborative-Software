[{"count": 0, "tags": [], "bug_id": 5036, "is_private": false, "id": 8194, "creation_time": "2001-11-22T05:52:48Z", "time": "2001-11-22T05:52:48Z", "creator": "simon.spruzen@rbos.com", "text": "Can zip, gzip, jar, war et al. have a new attribute called 'duplicate' that \ndetermines what the task should to do when asked to put a duplicate file (by \nname and prefix path *within* the zip file) into the zip file:\n\nduplicate can take these values:\n\n1. \"fail\" - the task will fail when trying to add a duplicate file.\n2. \"add\" - the task will silently add duplicates, so there will be n entries \nwith the same name. This is current behaviour.\n3. \"replace\" - the task will replace the existing zip entry with the new one.\n4. \"preserve\" - the task will preserve the existing zip entry and discard the \nnew one.", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 5036, "is_private": false, "id": 11405, "time": "2002-03-03T06:45:46Z", "creator": "umagesh@apache.org", "creation_time": "2002-03-03T06:45:46Z", "tags": [], "text": "A patch that does this has been applied to CVS on 3/3/02."}, {"count": 2, "tags": [], "bug_id": 5036, "is_private": false, "id": 30217, "creation_time": "2003-01-28T23:38:07Z", "time": "2003-01-28T23:38:07Z", "creator": "apache@matt.mchenryfamily.org", "text": "I don't think this is working correctly.  With ant version 1.5, I tried running\nthe following build file:\n\n<project name=\"test\" default=\"test\" basedir=\".\">\n  <target name=\"test\">\n    <delete dir=\"test1\"/> <mkdir dir=\"test1\"/> <touch file=\"test1/foo\"/>\n    <delete dir=\"test2\"/> <mkdir dir=\"test2\"/> <touch file=\"test2/foo\"/>\n    <delete dir=\"test3\"/> <mkdir dir=\"test3\"/> <touch file=\"test3/foo\"/>\n    <delete file=\"test.zip\"/>\n\n    <!-- create the initial zip file -->\n    <zip destfile=\"test.zip\" basedir=\"test1\" update=\"true\"/>\n\n    <!-- workaround for bug 10755 -->\n    <touch file=\"test.zip\" datetime=\"01/01/1980 12:00 am\"/>\n\n    <!-- try to update it with a file whose name is identical; should\n    work because duplicate is omitted -->\n    <zip destfile=\"test.zip\" basedir=\"test2\" update=\"true\"/>\n\n    <touch file=\"test.zip\" datetime=\"01/01/1980 12:00 am\"/>\n\n    <!-- try to update it with a file whose name is identical; should\n    fail because duplicate is set to 'fail' -->\n    <zip destfile=\"test.zip\" basedir=\"test3\" update=\"true\"\n         duplicate=\"fail\"/>\n  </target>\n</project>\n\nWhen I run, I get the following:\n\n% ant\nBuildfile: build.xml\n\ntest:\n   [delete] Deleting directory /tmp/anttest/test1\n    [mkdir] Created dir: /tmp/anttest/test1\n    [touch] Creating /tmp/anttest/test1/foo\n   [delete] Deleting directory /tmp/anttest/test2\n    [mkdir] Created dir: /tmp/anttest/test2\n    [touch] Creating /tmp/anttest/test2/foo\n   [delete] Deleting directory /tmp/anttest/test3\n    [mkdir] Created dir: /tmp/anttest/test3\n    [touch] Creating /tmp/anttest/test3/foo\n   [delete] Deleting: /tmp/anttest/test.zip\n      [zip] Building zip: /tmp/anttest/test.zip\n      [zip] Updating zip: /tmp/anttest/test.zip\n      [zip] Updating zip: /tmp/anttest/test.zip\n\nBUILD SUCCESSFUL\nTotal time: 2 seconds\n\nIt should instead fail when it tries to do the second update of the .zip file.", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 5036, "attachment_id": 4607, "is_private": false, "id": 30218, "time": "2003-01-28T23:40:42Z", "creator": "apache@matt.mchenryfamily.org", "creation_time": "2003-01-28T23:40:42Z", "text": "Created attachment 4607\ndebug output from running the given build file"}, {"count": 4, "tags": [], "bug_id": 5036, "attachment_id": null, "id": 30328, "time": "2003-01-30T10:02:03Z", "creator": "bodewig@apache.org", "creation_time": "2003-01-30T10:02:03Z", "is_private": false, "text": "This may be worth looking into together with bug 10755 - that's why I assign it\nto myself.  Also making it a bug instead of an enhancement request, as you are\nreporting that it doesn't work.\n\nBut then I'm not sure what duplicate=\"fail\" together with update=\"true\" should\nmean.  \"fail\" if the operation would update existing files in the archive?"}, {"count": 5, "tags": [], "bug_id": 5036, "attachment_id": null, "is_private": false, "id": 30648, "time": "2003-02-04T14:01:20Z", "creator": "bodewig@apache.org", "creation_time": "2003-02-04T14:01:20Z", "text": "Hmm, with the (almost complete) fix for 10755 on my disk, I get\n\ntest:\n    [mkdir] Created dir: /tmp/test1\n    [touch] Creating /tmp/test1/foo\n    [mkdir] Created dir: /tmp/test2\n    [touch] Creating /tmp/test2/foo\n    [mkdir] Created dir: /tmp/test3\n    [touch] Creating /tmp/test3/foo\n      [zip] Building zip: /tmp/test.zip\n\nwhich only indicates that 10755 is fixed 8-)\n\nI'm almost inclined to close this bug again.  In your third <zip>, you ask\nthe task to update the archive (i.e. add files not already present and replace\nthose older than those in the basedir) and at the same time want it to fail\nif it wants to do more than just adding?  I feel this is stretching the\nduplicate=\"fail\" more than a bit - the resulting archive wouldn't contain\nduplicates, it would only contain the latest version of \"foo\"."}, {"text": "Hm ... okay, let me try to explain in a bit more detail what I want to have\nhappen, and why I'm using these parameters settings -- if there is some other\ncombination of settings that makes more sense, just let me know.\n\nThe build I'm trying to set up needs to create a single .zip file with a certain\ninternal directory structure.  Since the final .zip file will contain nearly\n8000 files, we've got things separated out in our CVS tree to keep the\nindividual groups of files to a manageable size.  Each group mirrors the\ndirectory structure we want in the final .zip file.  So I'm using the <foreach>\nant-contrib task to iterate over each of the groups and add its contents to the\nfinal .zip file.\n\nThe problem is that, since different developers are working separately on each\ngroup, and adding new files from time to time, the build needs to detect when\nfiles are duplicated in two different groups.\n\nSo my reasoning is this: I need 'update=\"true\"' because I don't want my existing\n.zip file to be blown away and re-created from scratch each time I try to add a\nsubgroup.  (The apache manual describes the update attribute as follows:\n\"indicates whether to update or overwrite the destination file if it already\nexists.\")\n\nI need 'duplicate=\"fail\"' so that an error is generated when the same file\nexists in two different groups, and I need then figure out which developers to\nannoy to get the name conflict resolved.\n\nBasically, I intend to add an orthogonal set of files when I update the .zip\nfile, and if the set intersects at all with whatever is already in there, I want\nant to flag that as an error.", "tags": [], "bug_id": 5036, "is_private": false, "count": 6, "id": 30663, "time": "2003-02-04T16:07:51Z", "creator": "apache@matt.mchenryfamily.org", "creation_time": "2003-02-04T16:07:51Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 5036, "attachment_id": null, "id": 30731, "time": "2003-02-05T11:53:56Z", "creator": "bodewig@apache.org", "creation_time": "2003-02-05T11:53:56Z", "is_private": false, "text": "My approach would be to neither use foreach nor update=\"true\" at all.\nInstead I'd either use <zipgroupfileset> on individual intermediate archives\nor filesets directly.\n\nYou say that you \"don't want my existing .zip file to be blown away and re-created\nfrom scratch each time I try to add a subgroup\" - well, honestly you'll do so\nwhether you say update=\"true\" or not.\n\nThe way update=\"true\" works is that it copies the existing archive, creates a new\none with the new content from your various sources and the adds the remaining stuff\nfrom the old archive (via an internal zipfileset).\n\nIf you have access to all files that are supposed to be in your archive at once -\nyou'll probably get a real performance boost by using update=\"false\" instead.\nupdate=\"true\" will probably be faster if your filesystem is real slow on\ndirectory traversal, though."}, {"count": 8, "tags": [], "bug_id": 5036, "attachment_id": null, "is_private": false, "id": 30732, "time": "2003-02-05T11:56:57Z", "creator": "bodewig@apache.org", "creation_time": "2003-02-05T11:56:57Z", "text": "Oh, if you want to keep your foreach approach, instead of\n\n<zip update=\"true\" destfile=\"foo.zip\" ...>\n  <filesets ...\n</zip>\n\nyou could use\n\n<move file=\"foo.zip\" tofile=\"bar.zip\"/>\n<zip destfile=\"foo.zip\" ...>\n  <filesets ....\n  <zipfileset src=\"bar.zip\"/>\n</zip>\n<delete file=\"bar.zip\"/>\n\nwhich would bark on duplicate files."}, {"count": 9, "tags": [], "text": "OK, not a bug then.", "attachment_id": null, "bug_id": 5036, "id": 31512, "time": "2003-02-18T14:16:52Z", "creator": "bodewig@apache.org", "creation_time": "2003-02-18T14:16:52Z", "is_private": false}]