[{"count": 0, "tags": [], "creator": "rik.arpino@rtch.net", "attachment_id": null, "id": 23224, "time": "2002-09-22T12:20:51Z", "bug_id": 12902, "creation_time": "2002-09-22T12:20:51Z", "is_private": false, "text": "Not the one described in the FAQ btw. Double checked that....!\n\nI cannot get the DocumentRoot prepended to the processed URL *UNLESS* it \nalready contains a drive letter (in the RewriteCase). The log results are as \nfollows (last few lines only):\n\nWith a drive letter:\n\n...(2) local path result: c:/sebastian.tld/www/\n...(2) prefixed with document_root to C:/Apache/sitexc:/sebastian.tld/www/\n...(1) go-ahead with C:/Apache/sitexc:/sebastian.tld/www/ [OK]\n\nWithout drive letter:\n\n...(2) local path result: /sebastian.tld/www/\n\nWithout the drive letter already there, logging never reports the 'OK'\n\nGuess this is a problem only effecting Win32 systems.....?\n\nMy conditions are in the httpd.conf and were based around the examples in the \ndocumentation for virtual hosting (this code fails on my system):\n\nRewriteEngine On\n\nRewriteMap lowercase int:tolower\n\nRewriteCond  %{REQUEST_URI}               !^/cgi-bin/\nRewriteCond  ${lowercase:%{HTTP_HOST}}\t  ^([a-z0-9\\_\\-]+)\\.(.+)$\nRewriteRule  ^/(.*)$                      /%2/%1/$1\n\nRewriteCond  %{REQUEST_URI}               ^/cgi-bin/\nRewriteCond  ${lowercase:%{HTTP_HOST}}    ^([a-z0-9\\_\\-]+)\\.(.+)$\nRewriteRule  ^/(.*)$                      /%2/$1\n\nWhen Fails HTTP Err 400 is generated....otherwise a 404 is generated.\n\nThis example worked fine with 1.3.4\n\nRik"}, {"count": 1, "tags": [], "bug_id": 12902, "is_private": false, "text": "The problem lies function hook_uri2line, beginning on line 1285:\n\n1. the module (I think) wants to make sure that the resulting filename starts\nwith a slash, but it uses the ap_os_is_path_absolute function. If the filename\ndoes indeed start with a slash this call will succeed on Unix, but it will fail\non Windows because ap_os_is_path_absolute will expect a path starting with D:/\nor //machine/share. Hence the \"400 Bad Request\" error.\n\n2. next the module check if the first part (\"the prefix\") of the path exists.\nThis is done using the prefix_stat function which works only on Unixes (it\nexpects the path to start with a slash!)\n\nI think the first part is unnecessary and that the second part should be based\non core.c (as stated in the comments).", "id": 26827, "time": "2002-11-22T20:37:54Z", "creator": "slipszi@yunord.net", "creation_time": "2002-11-22T20:37:54Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "is_private": false, "id": 26854, "time": "2002-11-23T07:23:07Z", "bug_id": 12902, "creation_time": "2002-11-23T07:23:07Z", "text": "\n  The fact is that \"/foo\" isn't an absolute path.on Windows.  In all fairness,\n  we should still try to work around this.  Note the earlier code was much\n  more evil, in that \"c:/foo\" wasn't recognized as a rooted path.\n\n  The one case I want to avoid is accepting \"c:foo\" since that path is most\n  definately not sufficiently rooted.  So that said, we should try to test\n  the APR_EINCOMPLETE result and have a static is_path_rooted function within\n  mod_rewrite to test the complete and some incomplete path results.\n\n  Don't have time to work up a patch at the moment, but thought I ought to\n  add some observations while they are fresh in my mind.\n"}, {"count": 3, "tags": [], "bug_id": 12902, "attachment_id": null, "id": 31894, "creation_time": "2003-02-25T04:02:00Z", "time": "2003-02-25T04:02:00Z", "creator": "spoon@nexdot.net", "text": "I to am having this EXACT problem. I thought maybe i just wasn't getting the \ngrasp of Mod_Rewrite, but it turns out to be a bug!  :-(\n\nAny update on this bug? Been a couple of months.", "is_private": false}, {"count": 4, "tags": [], "bug_id": 12902, "attachment_id": null, "id": 31908, "creation_time": "2003-02-25T13:03:41Z", "time": "2003-02-25T13:03:41Z", "creator": "rik.arpino@rtch.net", "text": "After a bit of playing around, I found that version 1.3.26 did NOT suffer from \nthe same problem - in fact I was hard pressed to find problems with mod_rewrite \nin the 1.3.26 packaged version on win32. Dunno if this helps anyone? Sorry for \nnot updating sooner.....spoon reminded me!!!", "is_private": false}, {"count": 5, "tags": [], "text": "Some patches were made to the main dev branch (2.1) and are proposed for backport.\nI think, they will solve your problems and hopefully they will go into next 2.0\nand 1.3 releases.\n\nThanks for your reports and thanks for using Apache!", "is_private": false, "bug_id": 12902, "id": 31909, "time": "2003-02-25T13:19:23Z", "creator": "nd@perlig.de", "creation_time": "2003-02-25T13:19:23Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "spoon@nexdot.net", "attachment_id": null, "id": 31919, "time": "2003-02-25T15:04:08Z", "bug_id": 12902, "creation_time": "2003-02-25T15:04:08Z", "is_private": false, "text": "Wonder how long till the next release :-)  Is there a workaround in 2.x that \nwas not mentioned? Possibly some way of tricking it? Or possibly access to \napache-dev?"}, {"count": 7, "tags": [], "text": "Uh, sorry overlooked your questions ...\n\nHowever, it should be fixed in 2.0.45. Please reopen this report if it's not.\n\nThanks.", "attachment_id": null, "id": 34559, "creation_time": "2003-04-04T22:54:41Z", "time": "2003-04-04T22:54:41Z", "creator": "nd@perlig.de", "bug_id": 12902, "is_private": false}]