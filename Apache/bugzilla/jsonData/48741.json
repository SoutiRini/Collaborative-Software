[{"count": 0, "tags": [], "text": "I did put xml-apis.jar (version 1.4) in my application endorsed directory, to be sure that everyone runs/builds against the right XML-apis.\n\nUnfortunately this introduces a dependency with the codehause / woodstox implementation, in my case com.ctc.wstx.stax.WstxOutputFactory ; see line 30:\n\nhttp://svn.apache.org/viewvc/xml/commons/trunk/java/external/src/javax/xml/stream/XMLOutputFactory.java?view=markup\n\nIn my project this dependency is 'undesired'. The bad thing here is that I cannot override this default implementation. Since the application runs e.g. in tomcat, setting a system property is difficult / impossible.\n\nThe second issue is that it is not possible to explicitly reference to the com.sun... implementation from my code, since one can not rely on running in the Sun JVM.\n\nSo my question:\n- why the woodstox dependency?\n- please could you remove this dependency?\n\n\nIt might be a good idea add some notes regarding this on the xml-commons web pages. \n\nShould xml-apis.jar be in the jvm/application endorsed directory?", "is_private": false, "bug_id": 48741, "id": 134490, "time": "2010-02-14T12:15:18Z", "creator": "dizzzz@exist-db.org", "creation_time": "2010-02-14T12:15:18Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "hoju@visi.com", "attachment_id": null, "is_private": false, "id": 134712, "time": "2010-02-19T23:41:43Z", "bug_id": 48741, "creation_time": "2010-02-19T23:41:43Z", "text": "There is no hard dependency on Woodstox here.  What you need to do is place a jar file containing your preferred Stax implementation in the classpath.  That jar will provide its own implementations and be registered via the service registry.  The default value in xml-apis.jar is a fallback.  No need to set a system property or anything like that.  I think the value was chosen probably because it was the first (or preferred) implementation chosen by the developer of the Stax API.  It is not relevant if you provide your own implementation which is something you really have to do anyway.\n\nI would suggest resolving this bug as there is no issue here that I can see.\n\nJake"}, {"count": 2, "tags": [], "creator": "dizzzz@exist-db.org", "attachment_id": null, "id": 134722, "time": "2010-02-20T11:06:06Z", "bug_id": 48741, "creation_time": "2010-02-20T11:06:06Z", "is_private": false, "text": "Since Java6 a default implementation is part of the JVM, e.g. check http://kickjava.com/src/javax/xml/stream/XMLOutputFactory.java.htm : for the *sun* jvm the default implementation is com.sun.xml.internal.stream.XMLOutputFactoryImpl , for other vendors (classpath?harmony?) this will be a different class.\n\nYou are right that via the 'service registry' the sun implementation should be found, but this is -onfortunately- not the case. The factoryFinder scans all jar files on the classpath, and reads for the \"META-INF/services/\"thing in there. SUn does not set this service thing for its own jar files.\n\nIMO it would be logical to choose for com.sun.xml.internal.stream.XMLOutputFactoryImpl by default. Best alternative is probably to use some reflection on the presence of some alternative implementations as well.\n\n\nNote that just by putting xml-api.jar on the classpath my application stopped working. For our project there is no need to have an other StAX implementation than a simple default one provided by the JVM.\n\nI think closing this report is not a good thing. please reconsider :-)\n\nregards\n\nDannes"}, {"count": 3, "tags": [], "creator": "dizzzz@exist-db.org", "text": "Note: issue confirmed on Sun JVM on windows (32 bits) and the derived version on MacOsX (64 bit). Both Java6u17 or u18", "id": 134723, "time": "2010-02-20T11:09:21Z", "bug_id": 48741, "creation_time": "2010-02-20T11:09:21Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "This is no different than any of the other JAXP factories, each of which nominate a default implementation when none could be found through its search mechanism. If you merely place xml-apis.jar in the endorsed directory of a Sun JDK you'll also get errors about not being able to find Xerces or Xalan.\n\nThe Apache distribution has its own set of defaults which may be different from some other platform's. They were chosen intentionally, in this case to point to the ASL licensed StAX implementation used by Apache projects which I could argue is a far more appropriate value than Sun's proprietary implementation (which only exists in their JDK).\n\nIf you put xml-apis.jar in the endorsed directory you also need a JAXP / StAX implementation on your classpath. These will be picked up through the META-INF/services files in their jars.\n\nThere is no bug here.", "attachment_id": null, "id": 135133, "creator": "mrglavas@ca.ibm.com", "time": "2010-03-07T04:44:47Z", "bug_id": 48741, "creation_time": "2010-03-07T04:44:47Z", "is_private": false}, {"count": 5, "attachment_id": null, "bug_id": 48741, "text": "Great to see 2.10 being released. super!\n\nABout this issue: why not fallback to the default sun implementation if this implementation is available? For an enduser this is IMO much more transparent.\n\nSTAX is part of the language since Java6, why not use the default implementation? All implementations are required to provide it?", "id": 137765, "time": "2010-06-19T17:58:30Z", "creator": "dizzzz@exist-db.org", "creation_time": "2010-06-19T17:58:30Z", "tags": [], "is_private": false}]