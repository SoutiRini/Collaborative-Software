[{"count": 0, "tags": [], "bug_id": 59939, "is_private": false, "text": "Our code is broken after upgrading Tomcat from 7.0.52 to 7.0.55 with exception\njavax.el.MethodNotFoundException: java.lang.NoSuchMethodException: java.util.HashMap.get(java.lang.String)\n\nThe JSP code is like this\n<a:string id=\"${textMap.get(report)}\"/>\n\n'report' is a String, and 'textMap' is a Map. When invoking textMap.get(report), ELResolver tries to find the get() method that exactly matched the argument type. The get() method takes an Object in method signature but 'report' argument is a String type. That results in the Exception. Stacktrace: \n\nCaused by: javax.el.MethodNotFoundException: java.lang.NoSuchMethodException: java.util.HashMap.get(java.lang.String)\n      at javax.el.BeanELResolver.invoke(BeanELResolver.java:422)\n      at org.apache.jasper.el.JasperELResolver.invoke(JasperELResolver.java:139)\n      at org.apache.el.parser.AstValue.getValue(AstValue.java:174)\n      at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:184)\n      at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:950)\n      at org.apache.jsp.tag.web.reportSelector_tag._jspx_meth_aui_005fdropdownOption_005f0(reportSelector_tag.java:222)\n      at org.apache.jsp.tag.web.reportSelector_tag._jspx_meth_c_005fforEach_005f0(reportSelector_tag.java:193)\n      at org.apache.jsp.tag.web.reportSelector_tag._jspx_meth_aui_005fdropdown_005f0(reportSelector_tag.java:162)\n      at org.apache.jsp.tag.web.reportSelector_tag.doTag(reportSelector_tag.java:126)\n      at org.apache.jsp.tag.web.genericReport_tag._jspx_meth_vxa_005freportSelector_005f0(genericReport_tag.java:295)\n      at org.apache.jsp.tag.web.genericReport_tag._jspx_meth_aui_005ffixedGridColumn_005f0(genericReport_tag.java:266)\n      at org.apache.jsp.tag.web.genericReport_tag._jspx_meth_aui_005ffixedGridRow_005f0(genericReport_tag.java:231)\n      at org.apache.jsp.tag.web.genericReport_tag.doTag(genericReport_tag.java:145)\n      at org.apache.jsp.layouts.AraBasicDashboardLayout1_jsp._jspx_meth_vxa_005fgenericReport_005f0(AraBasicDashboardLayout1_jsp.java:169)\n      at org.apache.jsp.layouts.AraBasicDashboardLayout1_jsp._jspService(AraBasicDashboardLayout1_jsp.java:133)\n      ... 38 more\nCaused by: java.lang.NoSuchMethodException: java.util.HashMap.get(java.lang.String)\n      at java.lang.Class.getMethod(Class.java:1786)\n      at javax.el.BeanELResolver.invoke(BeanELResolver.java:419)\n      ... 52 more }, RID=1ERZG1MHXPWD3PBNK67H\n\n\nIt was working in Tomcat 7.0.52 because 7.0.52 tries to find a random method with the same name without considering the argument type. That caused problem when there is method overload and was fixed in 7.0.53 here\nhttps://bz.apache.org/bugzilla/show_bug.cgi?id=55483\nThis fix broke our code because now ELResolver tries to find a method exactly matching the argument type.", "id": 192867, "time": "2016-08-03T17:58:20Z", "creator": "housevenn@gmail.com", "creation_time": "2016-08-03T17:58:20Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 59939, "attachment_id": null, "is_private": false, "id": 192868, "time": "2016-08-03T18:08:00Z", "creator": "housevenn@gmail.com", "creation_time": "2016-08-03T18:08:00Z", "text": "A logic should be added so that when there is no method overload, just return the only method that matches the name, so that it is compatible with the version 7.0.52. Current behavior broke our code in multiple places and makes method invocation hard to use. For example, the code below is broken because actionItems is an ArrayList, but the method writeValueAsString() takes an Object in method signature.\n<c:set target=\"${actionItemsMap}\" property=\"actionItems\" value=\"${objectMapper.writeValueAsString(actionItems)}\" />\n\njavax.el.MethodNotFoundException: java.lang.NoSuchMethodException: org.codehaus.jackson.map.ObjectMapper.writeValueAsString(java.util.ArrayList)\n\n\nMoreover, we have a method in some class defined like this \n  public List<String> getActionOptions(Map<String, String> mappings)\n\nAnd it is being invoked like this in JSP \n  <c:forEach var=\"option\" items=\"${doc.getActionOptions(endpointMappings)}\">\n\nThe new Tomcat version caused exception here too:\nCaused by: javax.el.MethodNotFoundException: java.lang.NoSuchMethodException: com.amazon.edi.ssi.lib.types.IntegrationStatus.getActionOptions(java.util.HashMap)\n\nThe exception happens because ELResolver tries to find a method that matches the runtime argument type of variable 'endpointMappings', which is a HashMap. But the method signature takes an Map interface argument so it does not match. That should be fixed."}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 2, "id": 192882, "time": "2016-08-04T16:12:07Z", "bug_id": 59939, "creation_time": "2016-08-04T16:12:07Z", "text": "A simple, self-contained JSP that demonstrates the issue would help."}, {"attachment_id": null, "tags": [], "creator": "housevenn@gmail.com", "is_private": false, "count": 3, "id": 192901, "time": "2016-08-05T04:33:46Z", "bug_id": 59939, "creation_time": "2016-08-05T04:33:46Z", "text": "(In reply to Mark Thomas from comment #2)\n> A simple, self-contained JSP that demonstrates the issue would help.\n\nI am sorry Mark. This is an issue on our side. These parameterized method calls are supported in the new version. My apologies."}]