[{"count": 0, "tags": [], "bug_id": 56739, "attachment_id": null, "text": "When using the following approach in an asynchronous servlet for reporting an error condition, an error response body is generated only occasionally:\n\n((HttpServletResponse) asyncContext.getResponse()).sendError(statusCode, message);\nasyncContext.complete()\n\nBased on a discussion on tomcat-users this should be a valid approach:\n\nhttp://mail-archives.apache.org/mod_mbox/tomcat-users/201407.mbox/%3c53BD085C.7010205@apache.org%3e\n(subject: \"Servlet 3.1 asynchronous processing API\")\n\nHere's how to reproduce the issue:\n\nmarko@ubuntu:~$ ab -v 2 -l -n 100 'http://localhost:8080/servlet3-async/error1?fail=true' |grep ^Content-Length| sort | uniq -c\n     95 Content-Length: 0\n      5 Content-Length: 1082\n\nThe code and more information about the test can be found here:\nhttps://github.com/marko-asplund/servlet3-async\n\nVerified on:\nUbuntu 14.04 / OpenJDK 1.7.0_55\nMac OS X 10.8.5 / Oracle Java 1.7.0_55\n\nThe same thing occurs with Tomcat 7.0.54.", "id": 176470, "time": "2014-07-17T21:02:14Z", "creator": "marko.asplund@gmail.com", "creation_time": "2014-07-17T21:02:14Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 56739, "attachment_id": null, "id": 176948, "time": "2014-08-06T13:25:16Z", "creator": "markt@apache.org", "creation_time": "2014-08-06T13:25:16Z", "is_private": false, "text": "The good news is that I now know what is going on here.\n\nWhen the request is received it is process on container Thread C. By the time the thread reaches the Servlet, it has passed through Tomcat's request processing pipeline including the ErrorReportValve. If the Servlet's doGet() method, an application thread A is created just before the end of doGet(). Thread C then starts to exit Tomcat's request processing pipeline.\n\nThread A calls sendError() and complete().\n\nIf thread C exits the ErrorReportValve before thread A calls sendError() then no response body will be generated.\n\nIf thread A calls sendError() before thread C exits the ErrorReportValve then a response body will be generated.\n\nIn short, this comes down to a timing issue between the container and the application thread and the way that Tomcat reports unhandled errors with the ErrorReportValve. It would also be the case the a custom error page (handled by the StandardHostValve) is unlikely to be called in this case.\n\nThe bad news is that I don't see an obvious fix. It looks like the error page handling is going to need some refactoring but doing that without breaking the existing API (particularly for the ErrorReportVlave) is going to be tricky."}, {"count": 2, "tags": [], "bug_id": 56739, "text": "Thanks for the update and investigating this issue!\n\nWhat's the Tomcat dev team's policy to fixing issues like this?\nIs it something that can be addressed in a TC 7.0 / 8.0 maintenance releases?", "id": 176963, "time": "2014-08-06T19:35:58Z", "creator": "marko.asplund@gmail.com", "creation_time": "2014-08-06T19:35:58Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 56739, "attachment_id": null, "id": 176964, "time": "2014-08-06T20:34:49Z", "creator": "markt@apache.org", "creation_time": "2014-08-06T20:34:49Z", "is_private": false, "text": "Generally we like to close every open bug (not enahncement request) for a branch (e.g. 8.0.x) before we do the next 8.0.x release.\n\nThe excpetion is API breaking changes. Tomcat doesn't have a black and white view of what is the public API and what isn't. It is very much a judgement call based on how likely we think it is that someone will have written a custom component that is using the API that needs to change. How we handle these sorts of changes depends on the severity of the bug, the scale of the API change and what those API changes are.\n\nFor this particular bug I think I can see a solution but I'm not there yet. There are API changes but they aren't in an area where I'd expect folks to be writing custom components (I don't think I'll need to change the ErrorReportValve for example) so - assuming my solution works - this should be in the next 8.0.x release. It should also make it into the next 7.0.x release."}, {"count": 4, "tags": [], "bug_id": 56739, "text": "This has been fixed in 8.0.x for 8.0.11 onwards.\n\nI'm going to leave it a little while to give folks a chance to review the changes before back-porting it to 7.0.x.", "id": 176968, "time": "2014-08-07T08:53:39Z", "creator": "markt@apache.org", "creation_time": "2014-08-07T08:53:39Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 56739, "attachment_id": null, "text": "That's great news, thanks!\n\nAlmost forgot: do you think the \"java.lang.IllegalStateException: Calling [asyncTimeout()] is not valid \u2026\" issue with TC 8 described on https://github.com/marko-asplund/servlet3-async is related to this?\nOr should I report it as a separate issue?", "id": 176981, "time": "2014-08-07T14:22:37Z", "creator": "marko.asplund@gmail.com", "creation_time": "2014-08-07T14:22:37Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 56739, "attachment_id": null, "id": 176983, "time": "2014-08-07T14:36:11Z", "creator": "markt@apache.org", "creation_time": "2014-08-07T14:36:11Z", "is_private": false, "text": "(In reply to marko asplund from comment #5)\n> That's great news, thanks!\n> \n> Almost forgot: do you think the \"java.lang.IllegalStateException: Calling\n> [asyncTimeout()] is not valid \u2026\" issue with TC 8 described on\n> https://github.com/marko-asplund/servlet3-async is related to this?\n> Or should I report it as a separate issue?\n\nDidn't you already report that as Bug 56736 ?"}, {"count": 7, "tags": [], "bug_id": 56739, "attachment_id": null, "text": "yeah, so it seems :-) sorry about the confusion.", "id": 176986, "time": "2014-08-07T15:29:27Z", "creator": "marko.asplund@gmail.com", "creation_time": "2014-08-07T15:29:27Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 56739, "text": "This has been back-ported in 7.0.x for 7.0.56 onwards.", "id": 178090, "time": "2014-09-24T19:52:10Z", "creator": "violetagg@apache.org", "creation_time": "2014-09-24T19:52:10Z", "is_private": false, "attachment_id": null}]