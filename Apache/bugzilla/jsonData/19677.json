[{"count": 0, "tags": [], "bug_id": 19677, "attachment_id": null, "id": 36714, "time": "2003-05-05T17:01:39Z", "creator": "MMADKI@Doorways.org", "creation_time": "2003-05-05T17:01:39Z", "is_private": false, "text": "I've been hacking on a loadable module in C and periodically I do something bad \nand it segfaults, taking the Apache worker process with it.  The process is \nthen restarted.  But when I kill the main process via ctrl-C (I'm running it \nfrom the command line in a DOS box during testing) the new worker process \ndoesn't stop.  I must use the task manager to find and kill the new process.  \nIt seems lost to the parent.\n\nEasily recreatable by referencing a bad or null pointer in a C module.\n\nA minor annoyance to me and shouldn't ever happen in a production environment.  \nStill, somewhat disconcerting the first time it happened, fixing it would \nprobably help other module programmers who work on windows and occasionally \nmake mistakes."}, {"count": 1, "attachment_id": null, "creator": "MMADKI@Doorways.org", "text": "I also noticed at time this was happening that Windows was throwing an error \ndialog whenever one of the worker processes failed.  Later I found SetErrorMode\n() in use in the DSO loading code, but used in a limited context.  I wonder, in \npassing, if it isn't more correct to use it throughout.  Otherwise a stand-\nalone Apache server running on Windows may throw dialogs that no one will ever \nsee.  A text search of the code shows no other use of SetErrorMode().  Perhaps \nits use on a global scale such as I describe should be configurable?\n", "id": 36764, "time": "2003-05-06T16:45:10Z", "bug_id": 19677, "creation_time": "2003-05-06T16:45:10Z", "tags": [], "is_private": false}, {"count": 2, "text": "\n  Marc, good points on SEM.  Obviously they are of no use when running 'as\n  a service'.  And there may be other places where win32 throws up a dialog\n  that we don't want one, even when the user/developer in a console mode\n  would prefer one.  Extra eyeballs would help here.\n\n  However, the parent (killed with ctrl+c) should know its 'child' and clobber\n  it on the way out.  Definately worth research.  Thanks for the report.", "creator": "wrowe@apache.org", "attachment_id": null, "id": 37933, "time": "2003-05-28T18:41:24Z", "bug_id": 19677, "creation_time": "2003-05-28T18:41:24Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 19677, "is_private": false, "count": 3, "id": 37953, "time": "2003-05-28T21:39:00Z", "creator": "MMADKI@Doorways.org", "creation_time": "2003-05-28T21:39:00Z", "text": "Cool.  Must apologize for not running Apache in debug mode and giving you \ndetailed dumps.  Building open source code on Windows tends to give me hives so \nI just download the binary.  Which leaves me with few options in this regard.\n\nSince I wrote this up I've fooled some with running Apache using the -k \narguments to start/stop it in background.  I have been unable to create the \nproblem in this manner (though it continues to happen via ctrl-C).  This could \nbe an issue related to the notoriously strange signal-handling behavior of \nWindows, and the 'right' answer to this problem may be to \"use the -k \narguments.\"  I continue to run the server in the foreground and use crtl-C to \nstop it because it seems more natural to me to do it that way.\n"}]