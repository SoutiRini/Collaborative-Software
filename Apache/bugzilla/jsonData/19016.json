[{"count": 0, "tags": [], "creator": "ozhan@mds.rmit.edu.au", "attachment_id": null, "id": 35153, "time": "2003-04-15T01:23:15Z", "bug_id": 19016, "creation_time": "2003-04-15T01:23:15Z", "is_private": false, "text": "Hi,\n\nI have written a simple script to read in an xml file from the command line and \nconvert it to pdf. I have put the script in the FOP/source/fop-0.20.4/src \ndirectory. When I run the build script, it compiles okay. However, when I try \nand run the compiled code it gives me the following error:\n\ntest:ozhan 510% java RenderingEngine input.xml output.pdf\nException in thread \"main\" java.lang.NoClassDefFoundError: \norg/xml/sax/SAXException\n        at RenderingEngine.main(Unknown Source)\n\nIt appears that the sax library isn't present in my source tree. The code is \nshown below:\n------\n\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\n\n// FOP libraries\nimport org.apache.fop.apps.Driver;\nimport org.apache.fop.apps.Version;\nimport org.apache.fop.messaging.MessageHandler;\n\nimport org.xml.sax.InputSource;\nimport org.apache.fop.apps.FOPException;\n\nimport org.apache.avalon.framework.logger.ConsoleLogger;  \nimport org.apache.avalon.framework.logger.Logger; \n\n\nclass RenderingEngine\n{\n    public static void main(String args[])\n    {\n        if (args.length != 2)\n        {\n            System.err.println(\"Usage: % java RenderingEngine \" + \n                \"<inputFileName.xml> <outputFileName.pdf>\");\n            System.exit(1);\n        }\n\n        try\n        {\n            String inFileName = args[0];\n            String outFileName = args[1];\n            \n            try\n            {\n                Driver driver = new Driver(new InputSource (inFileName),\n                    new FileOutputStream(outFileName));\n                driver.setRenderer(Driver.RENDER_PDF);\n                driver.run();\n\n                Logger logger = new ConsoleLogger(ConsoleLogger.LEVEL_INFO);\n                MessageHandler.setScreenLogger(logger);\n                driver.setLogger(logger);\n            }\n            catch (FOPException ex)\n            {\n                //throw new FOPException(ex);\n                System.err.println(\"ERROR: \" + ex);\n            }\n\n        }\n        catch (IOException exception)\n        {\n            System.err.println(exception);\n            System.exit(1);\n        }\n    }\n}"}, {"count": 1, "tags": [], "bug_id": 19016, "attachment_id": null, "text": "I should also point out, the reason for this program is purely to test that I \ncan call FOP libraries from a stand alone application. Once I have this working \nI can progress onto more advanced tasts I have planned out.", "id": 35156, "time": "2003-04-15T03:49:18Z", "creator": "ozhan@mds.rmit.edu.au", "creation_time": "2003-04-15T03:49:18Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 19016, "text": "Please don't use Bugzilla for this kind of thing. The fop-user mailing list is \nbetter suited for getting help.\n\nYou're missing the JAXP API in your classpath (xml-apis.jar for example). Have \na look at the fop.sh script in the root directory of the FOP distribution for \ncomparison. The command-line option you need to look for is -cp or -classpath.\n\nAnd by the way, you should set up the logger before calling run(). After run() \nthe show is already over. :-)\n\nI'm closing this entry. Please follow up on the fop-user mailing list.", "id": 35167, "attachment_id": null, "creator": "jeremias@apache.org", "creation_time": "2003-04-15T06:17:37Z", "time": "2003-04-15T06:17:37Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 19016, "attachment_id": null, "text": "batch transition to closed remaining pre-FOP1.0 resolved bugs", "id": 156960, "time": "2012-04-01T13:55:30Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T13:55:30Z", "is_private": false}]