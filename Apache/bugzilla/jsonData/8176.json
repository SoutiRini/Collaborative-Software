[{"count": 0, "tags": [], "bug_id": 8176, "attachment_id": null, "is_private": false, "id": 13794, "time": "2002-04-16T21:54:43Z", "creator": "davew@financenter.com", "creation_time": "2002-04-16T21:54:43Z", "text": "This function is called at shutdown to kill off all of the children processes \nthat were spawned during startup and runtime. The bug is around line 2742 where \nap_select is called. It seems that the intention was to use the select command \nas a precision sleep mechanism. As the comment indicates, some time needs to be \nallowed for children processes to do their termination stuff. The problem was \nthat ap_select was returning prematurely as a result of a signal interupt \n(errno = EINTR), and therefore was never really sleeping for the expected \namount of time. This didn't allow enough time for my children process to clean \nthemselves up and resulted in various resource leaks. I changed the line from:\n \nap_select(0, NULL, NULL, NULL, &tv);\n \nto:\n \nwhile(ap_select(0, NULL, NULL, NULL, &tv) == -1) {}\n \nAnd while I am not saying that this code is the best way to do this, it did \nwork, allowing my children to die a natural death."}]