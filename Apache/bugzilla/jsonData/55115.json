[{"count": 0, "tags": [], "bug_id": 55115, "text": "Created attachment 30459\nRewords the comments for bucket insert macros.\n\nIn the apr_buckets.h header the following macros have a mismatch between the comments and the implementation:\nAPR_BRIGADE_INSERT_HEAD, APR_BRIGADE_INSERT_TAIL, APR_BUCKET_INSERT_BEFORE and APR_BUCKET_INSERT_AFTER\n\nThe comments for each of these macros mention inserting a list of buckets into a brigade.  But the implementation in each case invokes an APR_RING_INSERT_* macro which inserts a single element (not a list of elements). If it were truly the intent to insert a list of buckets, some form of APR_RING_SPLICE_* macros would be used.\n\nI have attached a patch for rewording the comments from inserting a list to inserting a single bucket.\n\nIf the comments were taken at face value and a list insert was attempted, the specified bucket would be correctly added to the brigade, but the remaining list would be mangled.", "id": 167899, "time": "2013-06-18T18:45:22Z", "creator": "mike.rumph@oracle.com", "creation_time": "2013-06-18T18:45:22Z", "is_private": false, "attachment_id": 30459}, {"count": 1, "tags": [], "bug_id": 55115, "text": "apr_bucket itself can be a list.  (See the first field of the structure.)\n\nMaybe there are some valid improvements in the patch.  If you think so, please reopen the bug with a new patch.", "id": 168034, "time": "2013-06-25T14:25:48Z", "creator": "trawick@apache.org", "creation_time": "2013-06-25T14:25:48Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 55115, "is_private": false, "id": 168047, "time": "2013-06-25T16:03:56Z", "creator": "mike.rumph@oracle.com", "creation_time": "2013-06-25T16:03:56Z", "tags": [], "text": "Hello Jeff,\n\nYes, I am aware that apr_bucket can be a list.\nBut it is my understanding of the code that trying to insert a bucket list of more than one bucket into a brigade will not work correctly with the listed macros.\nI could be wrong or just did not explain my point very well.\n\nLet's use APR_BUCKET_INSERT_BEFORE as an example:\n\nstruct apr_bucket {\n    /** Links to the rest of the brigade */\n    APR_RING_ENTRY(apr_bucket) link;\n    *  *  *  *\n};\n\n#define APR_RING_ENTRY(elem)\t\t\t\t\t\t\\\n    struct {\t\t\t\t\t\t\t\t\\\n\tstruct elem * volatile next;\t\t\t\t\t\\\n\tstruct elem * volatile prev;\t\t\t\t\t\\\n    }\n\n/**\n * Insert a list of buckets before a specified bucket\n * @param a The bucket to insert before\n * @param b The buckets to insert\n */\n#define APR_BUCKET_INSERT_BEFORE(a, b) do {\t\t\t\t\\\n\tapr_bucket *ap__a = (a), *ap__b = (b);\t\t\t\t\\\n\tAPR_RING_INSERT_BEFORE(ap__a, ap__b, link);\t\t\t\\\n        APR_BUCKET_CHECK_CONSISTENCY(ap__a);\t\t\t\t\\\n    } while (0)\n\n/**\n * Insert the element nep into the ring before element lep\n *   (..lep.. becomes ..nep..lep..)\n * @warning This doesn't work for inserting before the first element or on\n *   empty rings... see APR_RING_INSERT_HEAD for one that does\n * @param lep  Element in the ring to insert before\n * @param nep  Element to insert\n * @param link The name of the APR_RING_ENTRY in the element struct\n */\n#define APR_RING_INSERT_BEFORE(lep, nep, link)\t\t\t\t\\\n\tAPR_RING_SPLICE_BEFORE((lep), (nep), (nep), link)\n\n/**\n * Splice the sequence ep1..epN into the ring before element lep\n *   (..lep.. becomes ..ep1..epN..lep..)\n * @warning This doesn't work for splicing before the first element or on\n *   empty rings... see APR_RING_SPLICE_HEAD for one that does\n * @param lep  Element in the ring to splice before\n * @param ep1  First element in the sequence to splice in\n * @param epN  Last element in the sequence to splice in\n * @param link The name of the APR_RING_ENTRY in the element struct\n */\n#define APR_RING_SPLICE_BEFORE(lep, ep1, epN, link) do {\t\t\\\n\tAPR_RING_NEXT((epN), link) = (lep);\t\t\t\t\\\n\tAPR_RING_PREV((ep1), link) = APR_RING_PREV((lep), link);\t\\\n\tAPR_RING_NEXT(APR_RING_PREV((lep), link), link) = (ep1);\t\\\n\tAPR_RING_PREV((lep), link) = (epN);\t\t\t\t\\\n    } while (0)\n\n\nLet's say we have a brigade that we want to insert into which contains buckets a1, a2, a3, etc.\nAnd we have a bucket b1 that points to b2, b3, ..., bn.\nbn points back to b1.\n\nNow let's try to insert the bucket list starting with b1 into brigade 'a' before bucket a2.\n\nAPR_BUCKET_INSERT_BEFORE(a2, b1)\n\nThis becomes APR_RING_SPLICE_BEFORE(a2, b1, b1, link).\n\nBefore this macro is executed, (b1)->link.next points to b2, and (b1)->link.prev points to bn.\n\nAfter the macro is executed (b1)->link.next will point to a2, and (b1)->link.prev will point to a1.\nSo only b1 is added to the brigade 'a' not the entire 'b' list.\n\nb1 is no longer connected to b2, b3, ..., bn.\nbut (b2)->link.prev and (bn)->link.next still point to b1.\nFrom b1's prespective b2, b3, ..., bn no longer exist.\nYet b2, b3, ..., bn still think that they belong to b1.\nRing 'b' has been mangled into a weird sort of figure eight.\n\nThis is why I think the comments are wrong to mention inserting a list of buckets.\nIf we truly want to insert the list beginning with b1 before a2,\nwe would need to do APR_RING_SPLICE_BEFORE(a2, b1, bn, link).\n\nIf this reasoning makes sense, please, consider reopening this bug.\n\nThanks,\n\nMike"}, {"count": 3, "tags": [], "creator": "trawick@apache.org", "text": "you're right/sorry!  (I'm not touching this anymore ;) )\n\nMaybe the comment should say \"Insert a single bucket\" to be even more clear for dummies like me.  Someone else should chime in.", "id": 168050, "time": "2013-06-25T16:55:03Z", "bug_id": 55115, "creation_time": "2013-06-25T16:55:03Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 55115, "is_private": false, "text": "Created attachment 30485\nChanges the wording to a single bucket.\n\nAdopting Jeff's suggestion to change the wording to a single bucket.\n\nPerhaps no one has attempted to use these macros for inserting more than a single bucket before.\nOr else this mismatch would have been caught before now.\n\nThanks for reconsidering this bug.", "id": 168051, "time": "2013-06-25T18:16:45Z", "creator": "mike.rumph@oracle.com", "creation_time": "2013-06-25T18:16:45Z", "attachment_id": 30485}, {"count": 5, "tags": [], "creator": "trawick@apache.org", "text": "Fixed in trunk in r1531009...  Fixed in APR-Util 1.5.x branch in r1531010...\n\nThanks!", "id": 170543, "time": "2013-10-10T14:59:39Z", "bug_id": 55115, "creation_time": "2013-10-10T14:59:39Z", "is_private": false, "attachment_id": null}]