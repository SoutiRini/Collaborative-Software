[{"count": 0, "tags": [], "bug_id": 41933, "attachment_id": null, "text": "A constructed document containing four embedded images returns only two when\ncalling PicturesTable#getAllPictures().\n\nOn debugging, it turns out that the pos offset becomes incorrect at the third\nimage -- the block type at that position is not recognised as an image type, and\nthe skipOn value is too big to be realistic.", "id": 100810, "time": "2007-03-22T17:31:02Z", "creator": "trejkaz@trypticon.org", "creation_time": "2007-03-22T17:31:02Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 41933, "text": "Tried to attach the sample document but the bug tracker won't let me because\nit's too big.\n\nHere's a link:\nhttp://trypticon.org/files/four-images.doc\n", "id": 100811, "time": "2007-03-22T17:35:23Z", "creator": "trejkaz@trypticon.org", "creation_time": "2007-03-22T17:35:23Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 41933, "text": "Here's a bit of analysis of the data stream:\n\nStart of first block (an image):\n\n00000000 E6 0D 07 00 44 00 64 00 00 00 00 00 00 00 08 00 ....D.d.........\n\nStart of second block (an image):\n\n0 + 70DE6 = 70DE6\n                 `----------.\n                            V\n00070DE0 4E 44 AE 42 60 82 CB F3 07 00 44 00 64 00 00 00 ND.B`.....D.d...\n\nStart of third block, which seems to be wrong:\n\n70DE6 + 7F3CB = F01B1\n             ,----'\n            v\n000F01B0 82 9A 00 16 24 01 17 24 01 49 66 01 00 00 00 01 ....$..$.If.....\n000F01C0 96 6C 00 21 76 00 02 68 01 35 D6 05 00 01 03 A1 .l.!v..h.5......\n000F01D0 11 35 D6 05 01 02 03 0D 12 23 76 00 01 A1 11 23 .5.......#v....#\n000F01E0 76 01 02 0D 12 3A 56 0B 00 02 96 6C 00 07 94 CE v....:V....l....\n000F01F0 0D 0A 74 00 00 A0 04 13 D6 30 00 00 00 00 04 01 ..t......0......\n000F0200 00 00 00 00 00 00 04 01 00 00 00 00 00 00 04 01 ................\n000F0210 00 00 00 00 00 00 04 01 00 00 00 00 00 00 04 01 ................\n000F0220 00 00 00 00 00 00 04 01 00 00 14 F6 01 00 00 15 ................\n000F0230 36 01 35 D6 05 00 01 03 A1 11 35 D6 05 01 02 03 6.5.......5.....\n\n           ACTUAL IMAGE BLOCK HEADER IS HERE----.\n                                                v\n000F0240 0D 12 61 F6 03 6C 00 79 74 40 0F 7D 00 D1 E0 01 ..a..l.yt@.}....\n000F0250 00 44 00 64 00 00 00 00 00 00 00 08 00 00 00 00 .D.d............\n", "id": 100812, "time": "2007-03-22T17:55:17Z", "creator": "trejkaz@trypticon.org", "creation_time": "2007-03-22T17:55:17Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 41933, "attachment_id": null, "id": 101907, "time": "2007-04-18T18:43:20Z", "creator": "trejkaz@trypticon.org", "creation_time": "2007-04-18T18:43:20Z", "is_private": false, "text": "Okay, the short answer is that the pictures table alone isn't enough.  The code\nwill need to read every CharacterRun, pull out the picture offsets, and then\nremove duplicates (and probably sort the list too, to keep it in the same order\nso that nothing which was already calling getAllPictures() breaks.)"}, {"count": 4, "tags": [], "bug_id": 41933, "attachment_id": null, "id": 101912, "time": "2007-04-18T19:44:57Z", "creator": "trejkaz@trypticon.org", "creation_time": "2007-04-18T19:44:57Z", "is_private": false, "text": "Here's a workaround for anyone else who needs to get all pictures out.  I'm not\nsure if this is actually the best way to implement getAllPictures() because it\nrequires access to the whole document.\n\n  HWPFDocument document = ...\n\n  SortedMap<Integer, CharacterRun> runs = new TreeMap<Integer, CharacterRun>();\n\n  PicturesTable picturesTable = document.getPicturesTable();\n  Range wholeDocument = document.getRange();\n  int runCount = wholeDocument.numCharacterRuns();\n  for (int i = 0; i < runCount; i++) {\n    CharacterRun run = wholeDocument.getCharacterRun(i);\n    if (picturesTable.hasPicture(run)) {\n      int picOffset = run.getPicOffset();\n      if (runs.containsKey(picOffset)) {\n        continue;\n      }\n\n      runs.put(picOffset, run);\n    }\n  }\n\n  allPictures = new ArrayList<Picture>();\n  for (CharacterRun run : runs.values()) {\n    allPictures.add(picturesTable.extractPicture(run, false));\n  }\n"}, {"count": 5, "tags": [], "bug_id": 41933, "text": "In the absence of any other fixes, shall we go ahead and commit this?", "id": 111407, "time": "2007-12-04T04:23:38Z", "creator": "apache@gagravarr.org", "creation_time": "2007-12-04T04:23:38Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 41933, "text": "After a lot of digging into why some of my word documents are getting all their pictures, I've determined that the above changes are necessary (but still, for some reason, don't get all pictures...still investigating why). The data stream that the PictureTable gets the picture data from also can contain other object data, which is often placed at the beginning of the datastream. The only way to tell where picture data begins is to iterate through the CharacterRuns of the document. Otherwise, the current code takes one look at some arbitrary object data and skips everything.\n\nUnfortunately, there's still a problem in some of the documents I've been looking at. For instance, I have a document with several dozen pictures...yet only 1 CharacterRun with a picoffset is in the document. I've been trying to determine what additional way these pictures are accessed, but haven't been able to find it out yet. Still, the above fix really needs to be put into the code.", "id": 115306, "time": "2008-04-03T14:35:03Z", "creator": "squeeself@gmail.com", "creation_time": "2008-04-03T14:35:03Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 41933, "attachment_id": null, "text": "There is no fix above, only a workaround which might be useful from the outside.\n\nIncidentally I have just run across a document which has one picture in the PicturesTable but which is seemingly not referenced from any CharacterRun -- despite being visible when opening the document in Word.  This may be another way to hide a pic in a character run so I'm still trying to figure it out, but it does indicate that the workaround I posted won't necessarily catch all images.  Maybe the trick is to use getAllPictures() plus my workaround, and somehow remove duplicates between the two.", "id": 125503, "time": "2009-03-11T22:08:55Z", "creator": "trejkaz@trypticon.org", "creation_time": "2009-03-11T22:08:55Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 41933, "text": "Looking at the current trunk version (and the slightly older version we're running) it seems that half of my workaround (rewritten) ended up becoming the current version of getAllPictures().\n\nThe only inconsistency is that the rewrite in the POI version results in it returning the same image multiple times (as it's no longer building the map to keep track of this.)\n\nI'm not sure whether I should (a) modify POI so that it removes the duplicates and submit that up, or (b) add some method to Picture so that I can de-duplicate myself from the outside, and then submit that smaller modification up.\n\nObviously I'm leaning toward (a) but since it seems like the duplicate removal was intentionally removed from the code, perhaps (b) is the better option?", "id": 125504, "time": "2009-03-11T22:20:00Z", "creator": "trejkaz@trypticon.org", "creation_time": "2009-03-11T22:20:00Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 41933, "attachment_id": null, "text": "Setting to NEW in case the NEEDINFO state was responsible for the lack of responses.\n\n\n\n\nBTW, I have noticed something minor, which is that \"sometimes\" it will return images of length 4, which can be safely ignored.  This appears to occur when you insert a HR or some other picture which ends up being stored as Escher, although I haven't yet managed to prove this.\n\nThis might account for what some people have seen (including one who mailed me directly) where a document with only one pic in it returns more than one from this method.", "id": 125689, "time": "2009-03-22T15:57:24Z", "creator": "trejkaz@trypticon.org", "creation_time": "2009-03-22T15:57:24Z", "is_private": false}, {"count": 10, "tags": [], "creator": "trejkaz@trypticon.org", "attachment_id": 23456, "text": "Created attachment 23456\nhwpf-embedded-image-in-header.doc\n\nHere's a file where HWPF still appears to not find the embedded image.  I culled all the text from it and re-saved it using Word 2003, and it still causes the same problem.", "id": 126064, "time": "2009-04-07T18:56:55Z", "bug_id": 41933, "creation_time": "2009-04-07T18:56:55Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 41933, "text": "Test case:\n\n    @Test\n    public void testLostEmbeddedImage() throws Exception\n    {\n        File file = new File(\"hwpf-embedded-image-in-header.doc\");\n        HWPFDocument doc = new HWPFDocument(new POIFSFileSystem(new FileInputStream(file)));\n\n        List<?> pics = doc.getPicturesTable().getAllPictures();\n        assertEquals(\"Should be 1 picture\", 1, pics.size());\n\n        // In case POI happens to have a utility like this:\n        //Picture pic = (Picture) pics.get(0);\n        //assertDigestEquals(\"Wrong content\", \"0f36cd9f60222d978b205d891008f4a8\", pic.getContent());\n    }", "id": 126065, "time": "2009-04-07T18:58:03Z", "creator": "trejkaz@trypticon.org", "creation_time": "2009-04-07T18:58:03Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "slawekmycka@gmail.com", "text": "I've added new bug in getPictureTable() maybe somebody could look at it by the way:\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=46981", "id": 126153, "time": "2009-04-09T06:44:48Z", "bug_id": 41933, "creation_time": "2009-04-09T06:44:48Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 41933, "attachment_id": null, "id": 130893, "time": "2009-10-05T18:08:19Z", "creator": "trejkaz@trypticon.org", "creation_time": "2009-10-05T18:08:19Z", "is_private": false, "text": "These now work correctly as of POI 3.5 FINAL:\n  hwpf-embedded-image-in-header\n  four-images.doc\n\nI will mark the bug RESOLVED FIXED for this reason.  I have a new file which fails in a similar way but I suspect it's actually an unrelated issue so I will raise a new bug for it."}]