[{"count": 0, "tags": [], "text": "There seems to be a problem concerning forward declarations in compound elements.\n\nI'm attaching (pasting) 3 files that demonstrate the problem: test.xml, badSchema.xsd, goodSchema.xsd.\n\nThe only difference between badSchema.xsd and goodSchema.xsd is that in 'bad' the base tag is defined \nfirst, and in 'good' the base tag is defined last.\nWhen test.xml specifies 'bad' as its schema I get the following error:  \nElement type \"comment\" must be declared. \nWhen 'good' is the schema everything is ok. Both schemas are valid.\n\nHere are the files:\n\ntest.xml:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<base xmlns:xsi=\"http://www.w3.org/2000/10/XMLSchema-instance\" \nxsi:noNamespaceSchemaLocation=\"badSchema.xsd\" >\n\t<tag1>\n\t\t<inner1>\n\t\t\t<comment> this is a comment </comment> \n\t\t</inner1>\n\t</tag1>\n\t<tag2>\n\t\t<inner1>\n\t\t\t<comment> this is a comment </comment> \n\t\t</inner1> \n\t</tag2> \n</base>\n\n------------------------------------------------------------\nbadSchema.xsd:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsd:schema xmlns:xsd=\"http://www.w3.org/2000/10/XMLSchema\" elementFormDefault=\"qualified\">\n\n\t<xsd:element name=\"base\">\n\t\t<xsd:complexType>\n\t\t\t<xsd:all>\n\t\t\t\t<xsd:element name=\"tag1\" type=\"tag1\" minOccurs=\"0\"/>\n\t\t\t\t<xsd:element name=\"tag2\" type=\"tag2\" minOccurs=\"0\"/> \n\t\t\t</xsd:all>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\n\t<xsd:group name=\"extraData\">\n\t\t<xsd:choice>\n\t\t\t<xsd:element name=\"comment\" type=\"xsd:string\"/>\n\t\t\t<xsd:element name=\"description\" type=\"xsd:string\"/>\n\t\t</xsd:choice>\n\t</xsd:group>\n\n\n\t<xsd:complexType name=\"tag1\">\n\t\t<xsd:sequence>\n\t\t\t<xsd:element name=\"inner1\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n\t\t\t\t<xsd:complexType>\n\t\t\t\t\t<xsd:sequence>\n\t\t\t\t\t\t<xsd:group ref=\"extraData\" minOccurs=\"0\" \nmaxOccurs=\"unbounded\"/>\n\t\t\t\t\t</xsd:sequence>\n\t\t\t\t</xsd:complexType>\n\t\t\t</xsd:element>\n\t\t</xsd:sequence>\n\t</xsd:complexType>\n\n\t<xsd:complexType name=\"tag2\">\n\t\t<xsd:sequence>\n\t\t\t<xsd:element name=\"inner1\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n\t\t\t\t<xsd:complexType>\n\t\t\t\t\t<xsd:sequence>\n\t\t\t\t\t\t<xsd:group ref=\"extraData\" minOccurs=\"0\" \nmaxOccurs=\"unbounded\"/>\n\t\t\t\t\t</xsd:sequence>\n\t\t\t\t</xsd:complexType>\n\t\t\t</xsd:element>\n\t\t</xsd:sequence>\n\t</xsd:complexType>\n\n\n</xsd:schema>\n\n------------------------------------------------------------------\ngoodSchema.xsd:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsd:schema xmlns:xsd=\"http://www.w3.org/2000/10/XMLSchema\" elementFormDefault=\"qualified\">\n\n\t<xsd:annotation>\n\t\t<xsd:documentation>\n\t\tOntology description schema\n\t\tCopyright 2001 Unicorn Solutions Inc. All rights reserved\n\t\t</xsd:documentation>\n\t</xsd:annotation>\n\n\n\t<xsd:group name=\"extraData\">\n\t\t<xsd:choice>\n\t\t\t<xsd:element name=\"comment\" type=\"xsd:string\"/>\n\t\t\t<xsd:element name=\"description\" type=\"xsd:string\"/>\n\t\t</xsd:choice>\n\t</xsd:group>\n\n\n\t<xsd:complexType name=\"tag1\">\n\t\t<xsd:sequence>\n\t\t\t<xsd:element name=\"inner1\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n\t\t\t\t<xsd:complexType>\n\t\t\t\t\t<xsd:sequence>\n\t\t\t\t\t\t<xsd:group ref=\"extraData\" minOccurs=\"0\" \nmaxOccurs=\"unbounded\"/>\n\t\t\t\t\t</xsd:sequence>\n\t\t\t\t</xsd:complexType>\n\t\t\t</xsd:element>\n\t\t</xsd:sequence>\n\t</xsd:complexType>\n\n\t<xsd:complexType name=\"tag2\">\n\t\t<xsd:sequence>\n\t\t\t<xsd:element name=\"inner1\" minOccurs=\"0\" maxOccurs=\"unbounded\">\n\t\t\t\t<xsd:complexType>\n\t\t\t\t\t<xsd:sequence>\n\t\t\t\t\t\t<xsd:group ref=\"extraData\" minOccurs=\"0\" \nmaxOccurs=\"unbounded\"/>\n\t\t\t\t\t</xsd:sequence>\n\t\t\t\t</xsd:complexType>\n\t\t\t</xsd:element>\n\t\t</xsd:sequence>\n\t</xsd:complexType>\n\n\n\t<xsd:element name=\"base\">\n\t\t<xsd:complexType>\n\t\t\t<xsd:all>\n\t\t\t\t<xsd:element name=\"tag1\" type=\"tag1\" minOccurs=\"0\"/>\n\t\t\t\t<xsd:element name=\"tag2\" type=\"tag2\" minOccurs=\"0\"/> \n\t\t\t</xsd:all>\n\t\t</xsd:complexType>\n\t</xsd:element>\n\n</xsd:schema>\n\n-------------------------------------------------------------\nThanks,\n\nGuy Yitzhaki\nguy@unicorn.com", "attachment_id": null, "id": 2220, "creator": "guy@unicorn.com", "time": "2001-05-03T02:40:32Z", "bug_id": 1609, "creation_time": "2001-05-03T02:40:32Z", "is_private": false}, {"count": 1, "tags": [], "creator": "lmartin@ca.ibm.com", "attachment_id": null, "text": "Fix made to TraverseSchema.java on 05/29.   Check out current source to verify \nbug fix. ", "id": 2686, "time": "2001-05-29T11:31:00Z", "bug_id": 1609, "creation_time": "2001-05-29T11:31:00Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 1609, "attachment_id": null, "is_private": false, "id": 2736, "time": "2001-06-04T12:50:39Z", "creator": "mhuffman@ca.ibm.com", "creation_time": "2001-06-04T12:50:39Z", "text": "Re-test successful (M. Huffman - 2001/06/04)."}]