[{"count": 0, "tags": [], "bug_id": 38729, "attachment_id": null, "text": "Scenario:\n\n- create document with doctype A\n- delete document\n- create document with same document ID and doctype B\n- Lenya still resolves the doctype A\n\nWhen a document is deleted, its doctype reference has to be removed from the cache.", "id": 85996, "time": "2006-02-21T10:00:58Z", "creator": "andreas@apache.org", "creation_time": "2006-02-21T10:00:58Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "opensourcedev@gmail.com", "text": "\nThis issue is really anoying, is there any way we could fix this in 1.2.4 (apart\nfrom restarting the server) ? \nWhere is the doctype cache stored ?\n\nthx,\n\nDominique De Munck", "count": 1, "id": 87589, "time": "2006-04-05T09:03:20Z", "bug_id": 38729, "creation_time": "2006-04-05T09:03:20Z", "is_private": false}, {"count": 2, "tags": [], "text": "With the 1.2 architecture, it will be quite hard to fix this. There is no\ncentral place where document handling happens, so we can't apply the observer\npattern to trigger a doctype cache refresh.\n\nA workaround would be to clear the cache when a sitetree node is deleted or moved.", "is_private": false, "bug_id": 38729, "id": 87590, "time": "2006-04-05T09:14:59Z", "creator": "andreas@apache.org", "creation_time": "2006-04-05T09:14:59Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 38729, "attachment_id": null, "text": "BTW, the caching happens in URIParameterizerImpl.", "id": 87591, "time": "2006-04-05T09:18:44Z", "creator": "andreas@apache.org", "creation_time": "2006-04-05T09:18:44Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "opensourcedev@gmail.com", "is_private": false, "count": 4, "id": 87592, "time": "2006-04-05T09:51:19Z", "bug_id": 38729, "creation_time": "2006-04-05T09:51:19Z", "text": "(In reply to comment #3)\n> BTW, the caching happens in URIParameterizerImpl.\n\nhow do I clear this cache from within for example\nDefaultSitetree.save() ? I do see a URIParameterizerImpl\ncache object, but this one is private.\nI could just cut the caching out of URIParameterizerImpl altogether ?\n\nthx,\n\nDominique"}, {"count": 5, "attachment_id": null, "creator": "andreas@apache.org", "text": "(In reply to comment #4)\n> (In reply to comment #3)\n> > BTW, the caching happens in URIParameterizerImpl.\n> \n> how do I clear this cache from within for example\n> DefaultSitetree.save() ?\n\nThis won't be easy because the Sitetree isn't an Avalon component yet and\ntherefore has no access to the URIParameterizer.\n\n> I do see a URIParameterizerImpl\n> cache object, but this one is private.\n\nThe ability to clear the cache would have to be added to the URIParameterizer\ninterface.\n\n> I could just cut the caching out of URIParameterizerImpl altogether ?\n\nThe easiest way would be to make URIParameterizerImpl configurable and allow to\nset the CACHE_CAPACITY in cocoon.xconf.\n\n", "id": 87593, "time": "2006-04-05T09:57:31Z", "bug_id": 38729, "creation_time": "2006-04-05T09:57:31Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "text": "\n> > I could just cut the caching out of URIParameterizerImpl altogether ?\n> \n> The easiest way would be to make URIParameterizerImpl configurable and allow to\n> set the CACHE_CAPACITY in cocoon.xconf.\n\nBTW, there could be a quite serious performance penalty. I would recommend to do\nload tests before and after the change.\n\n", "is_private": false, "bug_id": 38729, "id": 87594, "time": "2006-04-05T09:58:27Z", "creator": "andreas@apache.org", "creation_time": "2006-04-05T09:58:27Z", "attachment_id": null}]