[{"count": 0, "tags": [], "creator": "michael.eriksson@bauer-partner.de", "attachment_id": null, "is_private": false, "id": 36092, "time": "2003-04-25T12:45:02Z", "bug_id": 19319, "creation_time": "2003-04-25T12:45:02Z", "text": "Note: Depending on point of view this might alternatively be filed as\nbug instead of enhancement. I choose enhancement since the bug is provoked by\nvery special circumstances.\n\nThe attached patch extends o.a.c.loader.WebappLoader to always copy jar\nfiles when a corresponding configuration attribute is set.\n(Currently the jars are copied when WEB-INF/lib is in a War-file, not when it\nis an actual filesystem directory.)\nThis allows for a DirContext that reads Jar-files from several locations.\n\nBackground:\nTo faciliate the development process I had the requirement that tomcat must be\nable to read files (e.g JSPs) from several differen parallel directory\nstructures. This was easiest to solve by extending FileDirContext in a\nproprietory maner. Tests showed errors from WebappLoader during repository\nsetup. (Other parts of tomcat seem to be working fine with the extension.)\n\nE.g. \njava.util.zip.ZipException: The system cannot find the file specified\n        at java.util.zip.ZipFile.open(Native Method)\n        at java.util.zip.ZipFile.<init>(ZipFile.java:112)\n        at java.util.jar.JarFile.<init>(JarFile.java:117)\n        at java.util.jar.JarFile.<init>(JarFile.java:82)\n        at org.apache.catalina.loader.WebappLoader.setRepositories\n(WebappLoader.java:1095)\n        at org.apache.catalina.loader.WebappLoader.start(WebappLoader.java:688)\n        at org.apache.catalina.core.StandardContext.start\n(StandardContext.java:3530)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1188)\n        at org.apache.catalina.core.StandardHost.start(StandardHost.java:738)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1188)\n        at org.apache.catalina.core.StandardEngine.start\n(StandardEngine.java:347)\n        at org.apache.catalina.core.StandardService.start\n(StandardService.java:497)\n        at org.apache.catalina.core.StandardServer.start\n(StandardServer.java:2190)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:512)\n        at org.apache.catalina.startup.Catalina.execute(Catalina.java:400)\n        at org.apache.catalina.startup.Catalina.process(Catalina.java:180)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:324)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:203)\n\nThis occurs when one of the extra WEB-INF/libs contains a Jar-file not present\nin the \"real\" one, because WebappLoader gets the names of the Jar-files from\nthe current DirContext, but the actual JarFile-instances through a hardcoded\ncall.  By activating the copy-mechanism, which copies _all_ Jar-Files to one\nlocation in DirContext based maner, this problem is eliminated.\n\nAs an alternative one could possibly change the code to get the\nJarFile-instances in a more flexible way."}, {"count": 1, "tags": [], "bug_id": 19319, "is_private": false, "id": 36094, "attachment_id": 6010, "creator": "michael.eriksson@bauer-partner.de", "creation_time": "2003-04-25T12:45:46Z", "time": "2003-04-25T12:45:46Z", "text": "Created attachment 6010\nPatch for WebappLoader."}, {"count": 2, "tags": [], "text": "Looks like a one-off requirement for a specific use case. Best dealt with via a local modification. There may also be other ways of working around this via the anti-jar locking which copies JARs to the work dir and runs the web app from there.", "attachment_id": null, "bug_id": 19319, "id": 143207, "time": "2011-01-08T17:45:58Z", "creator": "markt@apache.org", "creation_time": "2011-01-08T17:45:58Z", "is_private": false}]