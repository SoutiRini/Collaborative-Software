[{"count": 0, "tags": [], "bug_id": 1085, "text": "I have a task description like this:\n    <java classname=\"RootSuite\" fork=\"true\" failonerror=\"true\">\n      <classpath>\n        <pathelement location=\"${WEBLOGIC_HOME}/lib/weblogic.jar\" />\n        <pathelement location=\"${JUNIT_JAR}\" />\n        <pathelement location=\"${SRC_CLASSES}\" />\n        <pathelement location=\"${TEST_CLASSES}\" />\n      </classpath>\n      <sysproperty key=\"EJB_LIVE_TEST\" value=\"true\" />\n      <sysproperty key=\"java.naming.factory.initial\" \nvalue=\"weblogic.jndi.WLInitialContextFactory\" />\n      <sysproperty key=\"java.naming.provider.url\" value=\"${WEBLOGIC_URL}\" />\n      <sysproperty key=\"java.naming.security.principal\" \nvalue=\"${WEBLOGIC_USER}\" />\n      <sysproperty key=\"java.naming.security.credentials\" \nvalue=\"${WEBLOGIC_PASSWORD}\" />\n    </java>\n\nThe java class is a unit test. One of the tests tries to establish a \njavax.naming.InitialContext for WebLogic. When I run the java task forked, it \nworks. When I run it not forked, I get the following exception:\n\njavax.naming.NoInitialContextException: Cannot instantiate class: weblogic.jndi.\nWLInitialContextFactory.  Root exception is java.lang.ClassNotFoundException: we\nblogic.jndi.WLInitialContextFactory\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:200)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:297)\n        at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:286)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:253)\n        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:313)\n        at java.lang.Class.forName0(Native Method)\n        at java.lang.Class.forName(Class.java:195)\n        at com.sun.naming.internal.VersionHelper12.loadClass(VersionHelper12.jav\na:45)\n        at javax.naming.spi.NamingManager.getInitialContext(NamingManager.java:6\n55)\n        at javax.naming.InitialContext.getDefaultInitCtx(InitialContext.java:246\n)\n        at javax.naming.InitialContext.init(InitialContext.java:222)\n        at javax.naming.InitialContext.<init>(InitialContext.java:178)\n        [My Classes]\n        at java.lang.reflect.Method.invoke(Native Method)\n        at org.apache.tools.ant.taskdefs.ExecuteJava.execute(ExecuteJava.java:12\n7)\n        at org.apache.tools.ant.taskdefs.Java.run(Java.java:260)\n        at org.apache.tools.ant.taskdefs.Java.executeJava(Java.java:123)\n        at org.apache.tools.ant.taskdefs.Java.execute(Java.java:87)\n        at org.apache.tools.ant.Target.execute(Target.java:153)\n        at org.apache.tools.ant.Project.runTarget(Project.java:898)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:536)\n        at org.apache.tools.ant.Project.executeTargets(Project.java:510)\n        at org.apache.tools.ant.Main.runBuild(Main.java:421)\n        at org.apache.tools.ant.Main.main(Main.java:149)\n\nAny ideas? It's not a huge priority (I get around the problem by forking), but \nit's a nuisance.", "id": 1560, "time": "2001-03-22T22:08:13Z", "creator": "robert.watkins@qsipayments.com", "creation_time": "2001-03-22T22:08:13Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 1085, "is_private": false, "id": 2386, "creation_time": "2001-05-10T08:08:32Z", "time": "2001-05-10T08:08:32Z", "creator": "conor@apache.org", "text": "The naming classes included in JDK 1.3 request the classloader from the current \nthread (getContextClassLoader), regardless of the classloader being used. Since \nthis is a JDK 1.2 feature, it is not currently set by Ant, so the naming lookup \nuses the system classloader to find the initial context factory. You will \neither need to fork, as you have been, or have the context factory et al in the \nclasspath.\n\nI'm changing this to an enhancement which will require the thread classloader \nto be set via reflection and then reset. ", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 1085, "text": "I have added code to set the thread's context classloader when a java task is \nexecuted.", "count": 2, "id": 3770, "time": "2001-07-17T07:21:54Z", "creator": "conor@apache.org", "creation_time": "2001-07-17T07:21:54Z", "is_private": false}]