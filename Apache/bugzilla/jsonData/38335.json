[{"count": 0, "tags": [], "creator": "chris.abajian@theplatform.com", "is_private": false, "text": "Tomcat fails to shut down in response to shutdown.sh script.  Hangs,\neventually throws exception with dreaded \"Protocol handler pause failed\"\nmessage.  I have tried both values for LD_ASSUME_KERNEL as per release\nnotes.  It changes the behavior slightly, but the problem remains (more\nbelow).\n\nEnvironment:\n\n- A freshly built & updated fedora RC4 install: 2.6.14-1.1656_FC4\n\n- A completely unmodified Tomcat Version 5.5.12 - I untarred it and ran it.\n\n- Sun's jdk1.5.0_06\n\nRepro:\n\n1) run startup.sh\n2) hit localhost:8080 in browser, works\n3) run shutdown.sh\n4) log shows:\n\nJan 19, 2006 11:08:27 PM org.apache.coyote.http11.Http11BaseProtocol pause\nINFO: Pausing Coyote HTTP/1.1 on http-8080\n\nIt hangs for a minute or so, then throws:\n\nJan 19, 2006 11:03:48 PM org.apache.catalina.connector.Connector pause\nSEVERE: Protocol handler pause failed\njava.net.ConnectException: Connection timed out\n        at java.net.PlainSocketImpl.socketConnect(Native Method)\n        at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:333)\n        at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:195)\n        at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:182)\n        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)\n        at java.net.Socket.connect(Socket.java:507)\n        at java.net.Socket.connect(Socket.java:457)\n        at java.net.Socket.<init>(Socket.java:365)\n        at java.net.Socket.<init>(Socket.java:207)\n        at org.apache.jk.common.ChannelSocket.unLockSocket(ChannelSocket.java:463)\n        at org.apache.jk.common.ChannelSocket.pause(ChannelSocket.java:270)\n        at org.apache.jk.server.JkMain.pause(JkMain.java:679)\n        at org.apache.jk.server.JkCoyoteHandler.pause(JkCoyoteHandler.java:162)\n        at org.apache.catalina.connector.Connector.pause(Connector.java:1031)\n        at org.apache.catalina.core.StandardService.stop(StandardService.java:491)\n        at org.apache.catalina.core.StandardServer.stop(StandardServer.java:714)\n       at org.apache.catalina.startup.Catalina.stop(Catalina.java:586)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:561)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:275)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:413)\n\nInterestingly enough, lsof shows different behaviors depending on the\nvalue of the LD_ASSSUME_KERNEL variable.  With no variable set, \n\n# lsof -P | grep java | grep 8080\njava      6555   chris   10u     IPv6     329120                  TCP *:8080\n(LISTEN)\n\nsetting LD_ASSUME_KERNEL=2.2.5 results in about 40 threads listening on\nthe port (in the hung state):\n\n# lsof -P | grep java | grep 8080\njava      6652   chris   12u     IPv6     331547                  TCP *:8080\n(LISTEN)\njava      6653   chris   12u     IPv6     331547                  TCP *:8080\n(LISTEN)\n...etc\n\nsetting it to 2.4.1 yields the more entertaining:\n\n# lsof -P | grep java | grep 8080\njava      6779   chris  mem       REG      253,0   1465636    4980808\n/lib/obsolete/linuxthreads/i686/libc-2.3.5.so\njava      6779   chris   12u     IPv6     334251                  TCP *:8080\n(LISTEN)\njava      6780   chris  mem       REG      253,0   1465636    4980808\n/lib/obsolete/linuxthreads/i686/libc-2.3.5.so\njava      6780   chris   12u     IPv6     334251                  TCP *:8080\n(LISTEN)\n...\n\nbut the behavior is the same.  Surely tomcat on Fedora can't be this broken out\nof the box, can it?", "id": 84829, "time": "2006-01-20T20:04:36Z", "bug_id": 38335, "creation_time": "2006-01-20T20:04:36Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "chris.abajian@theplatform.com", "is_private": false, "text": "NOT reproducible using same JDK and tomcat versions on Fedora 3 install.\n\nsame java:\njava version \"1.5.0_06\"\nJava(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_06-b05)\n\nsame tomcat: Apache Tomcat/5.5.12\n\ndifferent kernel:\nLinux 2.6.12-1.1381_FC3\n\ndifferent glibc.  this box works:\n\n$ rpm -qa | grep -i libc\nlibcap-1.10-20\nglibc-2.3.5-0.fc3.1\nglibc-devel-2.3.5-0.fc3.1\nlibcap-devel-1.10-20\nglibc-kernheaders-2.4-9.1.87\nglibc-common-2.3.5-0.fc3.1\nglibc-headers-2.3.5-0.fc3.1\n\nthis box doesn't work:\n\n$ rpm -qa | grep -i libc\nglibc-common-2.3.5-10.3\nlibcroco-0.6.0-5\nlibcap-devel-1.10-22\nlibcroco-devel-0.6.0-5\nglibc-2.3.5-10.3\nglibc-devel-2.3.5-10.3\nglibc-kernheaders-2.4-9.1.94\nglibc-2.3.5-10\nlibcap-1.10-22\nglibc-headers-2.3.5-10.3\n", "id": 84834, "time": "2006-01-20T21:52:49Z", "bug_id": 38335, "creation_time": "2006-01-20T21:52:49Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "yoavs@computer.org", "attachment_id": null, "is_private": false, "id": 88127, "time": "2006-04-15T16:11:30Z", "bug_id": 38335, "creation_time": "2006-04-15T16:11:30Z", "text": "Also not reproducible on a fresh FC5 install, so closing this item.  If you have\na specific patch or doc update (such as a note for FC3 users) you'd like us to\nadd, please reopen this issue and submit your patch.  We'll gladly review and\ncommit it as relevant..."}]