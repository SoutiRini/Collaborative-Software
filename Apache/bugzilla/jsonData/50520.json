[{"count": 0, "tags": [], "bug_id": 50520, "text": "As mentioned in header:\n\nglibc 2.12.2\nOpenSSL: 1.0.0c\ngcc 4.5.2\nHTTPD: 2.2.17\nAPR: 1.4.2\nAPR-Util: 1.3.10\n\nTrivially reproducable.\n\nPlease let me know if anything else is needed.\n \nStack trace:\n\n(gdb) bt full\n#0  0x00000058 in ?? ()\nNo symbol table info available.\n#1  0x080c6a94 in brigade_consume (bio=0x853f938, in=0x85515ae \"\", inlen=79) at ssl_engine_io.c:419\n        b = 0x854910c\n        str = 0x806be8b \"memmove\"\n        str_len = 3087003636\n        consume = <value optimized out>\n        actual = 0\n        status = 0\n#2  bio_filter_in_read (bio=0x853f938, in=0x85515ae \"\", inlen=79) at ssl_engine_io.c:534\n        inl = 79\n        inctx = 0x8547048\n        block = APR_BLOCK_READ\n#3  0x081122e4 in BIO_read ()\nNo symbol table info available.\n#4  0x080f9a27 in ssl3_read_n ()\nNo symbol table info available.\n#5  0x080fa72a in ssl3_read_bytes ()\nNo symbol table info available.\n#6  0x080fbea4 in ssl3_get_message ()\nNo symbol table info available.\n#7  0x080ec8c9 in ssl3_get_client_hello ()\nNo symbol table info available.\n#8  0x080f0c39 in ssl3_accept ()\nNo symbol table info available.\n#9  0x080e2acb in SSL_accept ()\nNo symbol table info available.\n#10 0x080da461 in ssl23_get_client_hello ()\nNo symbol table info available.\n#11 0x080da5ec in ssl23_accept ()\nNo symbol table info available.\n#12 0x080e2acb in SSL_accept ()\nNo symbol table info available.\n#13 0x080c5e8a in ssl_io_filter_connect (filter_ctx=0x853dea8) at ssl_engine_io.c:1111\n        c = 0x853d990\n        sslconn = 0x853de50\n        sc = <value optimized out>\n        cert = <value optimized out>\n        n = <value optimized out>\n        ssl_err = <value optimized out>\n        verify_result = <value optimized out>\n        server = 0x831fd38\n#14 0x080c649f in ssl_io_filter_input (f=0x8549078, bb=0x854b010, mode=AP_MODE_GETLINE, block=APR_BLOCK_READ, readbytes=0)\n    at ssl_engine_io.c:1357\n        status = <value optimized out>\n        inctx = 0x8547048\n        len = 8192\n        is_init = 0\n#15 0x080959fb in ap_rgetline_core (s=0x854a0a8, n=8192, read=0xbffff3ac, r=0x854a090, fold=0, bb=0x854b010)\n    at protocol.c:231\n        rv = <value optimized out>\n        e = <value optimized out>\n        bytes_handled = 0\n        current_alloc = 0\n        pos = <value optimized out>\n        last_char = 0x0\n        do_alloc = 1\n        saw_eos = 0\n#16 0x080977d6 in read_request_line (conn=0x853d990) at protocol.c:596\n        rv = <value optimized out>\n        ll = <value optimized out>\n        pro = <value optimized out>\n        major = 1\n        minor = 0\n        http = \"\\350\\363\\377\\277\"\n        len = 139712912\n        num_blank_lines = 0\n        max_blank_lines = 100\n        uri = <value optimized out>\n#17 ap_read_request (conn=0x853d990) at protocol.c:891\n        r = 0x854a090\n        p = 0x854a050\n        expect = <value optimized out>\n        access_status = <value optimized out>\n        tmp_bb = 0x854b010\n        csd = <value optimized out>\n        cur_timeout = <value optimized out>\n#18 0x081b7e35 in ap_process_http_connection (c=0x853d990) at http_core.c:183\n        r = <value optimized out>\n        csd = 0x0\n#19 0x080aa876 in ap_run_process_connection (c=0x853d990) at connection.c:43\n        pHook = <value optimized out>\n        n = <value optimized out>\n        rv = <value optimized out>\n#20 0x081ed792 in child_main (child_num_arg=<value optimized out>) at prefork.c:662\n        current_conn = <value optimized out>\n        csd = 0x853d7f8\n        ptrans = 0x853d7b8\n        allocator = 0x853b728\n        status = <value optimized out>\n        i = <value optimized out>\n        lr = <value optimized out>\n        pollset = 0x853b858\n        sbh = 0x853b850\n        bucket_alloc = 0x8541aa0\n        last_poll_idx = 1\n#21 0x081eda9f in make_child (s=0x82758b0, slot=0) at prefork.c:707\n        pid = <value optimized out>\n#22 0x081ee2fc in ap_mpm_run (_pconf=0x82710a8, plog=0x82b71c0, s=0x82758b0) at prefork.c:983\n        index = <value optimized out>\n        remaining_children_to_start = <value optimized out>\n        rv = <value optimized out>\n#23 0x0808fb55 in main (argc=2, argv=0xbffff7d4) at main.c:739\n        c = 88 'X'\n        configtestonly = 0\n        confname = 0x81f8267 \"conf/httpd.conf\"\n        def_server_root = 0x81f8254 \"/usr/local/apache2\"\n        temp_error_log = 0x0\n        error = <value optimized out>\n        process = 0x826f130\n        server_conf = 0x82758b0\n        pglobal = 0x826f0a0\n        pconf = 0x82710a8\n        plog = 0x82b71c0\n        ptemp = 0x82790c8\n        pcommands = 0x82730b0\n        opt = 0x8273150\n        rv = 0\n        mod = <value optimized out>\n        optarg = 0x0\n        signal_server = <value optimized out>", "id": 142942, "time": "2010-12-24T14:53:12Z", "creator": "j-comm@westvi.com", "creation_time": "2010-12-24T14:53:12Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 50520, "attachment_id": null, "text": "Marked P1 because this just stops everything - no SSL capability on site at all.", "id": 142943, "time": "2010-12-24T14:55:58Z", "creator": "j-comm@westvi.com", "creation_time": "2010-12-24T14:55:58Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 50520, "text": "Here is extra info. Note that \"bb->list.next->type\" is really bogus. It has a garbage name, garbage name_func, is_metadata is a mess, and the 'read' function is the value '0x58'. It looks like the data stored here makes no sense at all, and whatever caused that is the core problem.\n\nThis is in brigade_consume\n\n\n(gdb) print *b\n$4 = {link = {next = 0x8541bf8, prev = 0x85490c4}, type = 0x8541ad0, length = 139759840, start = -5190357751035555528,\n  data = 0x808ca4c, free = 0x853d7e8, list = 0x854915c}\n(gdb) print *(b->type)\n$5 = {name = 0x853b7e0 \"\\250\\020'\\310\\372S\\370\\361\\063\\254\\020'\\b\\271S\\b\", num_func = 139704152, is_metadata = 139729632,\n  destroy = 0x8541ab8, read = 0x58, setaside = 0x8541ad0, split = 0x8541ab8, copy = 0}\n(gdb) print bb\n$6 = (apr_bucket_brigade *) 0x85490c0\n(gdb) print *bb\n$7 = {p = 0x853d7e8, list = {next = 0x854913c, prev = 0x8541af0}, bucket_alloc = 0x8541ad0}\n(gdb) print *(bb->list.next)\n$8 = {link = {next = 0x8541bf8, prev = 0x85490c4}, type = 0x8541ad0, length = 139759840, start = -5190357751035555528,\n  data = 0x808ca4c, free = 0x853d7e8, list = 0x854915c}\n(gdb) print *(bb->list.next->type)\n$9 = {name = 0x853b7e0 \"\\250\\020'\\310\\372S\\370\\361\\063\\254\\020'\\b\\271S\\b\", num_func = 139704152, is_metadata = 139729632,\n  destroy = 0x8541ab8, read = 0x58, setaside = 0x8541ad0, split = 0x8541ab8, copy = 0}\n(gdb) print *(bb->list.prev->type)\n$10 = {name = 0xb7f94f40 \"HEAP\", num_func = 5, is_metadata = APR_BUCKET_DATA, destroy = 0xb7f817a0 <heap_bucket_destroy>,\n  read = 0xb7f81780 <heap_bucket_read>, setaside = 0x808c96c <apr_bucket_setaside_noop@plt>,\n  split = 0x808ca8c <apr_bucket_shared_split@plt>, copy = 0x808ce7c <apr_bucket_shared_copy@plt>}\n(gdb) up\n#2  bio_filter_in_read (bio=0x853f968, in=0x85515de \"\", inlen=79) at ssl_engine_io.c:534\n534         inctx->rc = brigade_consume(inctx->bb, block, in, &inl);\n(gdb)", "id": 142944, "time": "2010-12-24T15:30:08Z", "creator": "j-comm@westvi.com", "creation_time": "2010-12-24T15:30:08Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "j-comm@westvi.com", "attachment_id": null, "id": 142945, "time": "2010-12-24T20:03:36Z", "bug_id": 50520, "creation_time": "2010-12-24T20:03:36Z", "is_private": false, "text": "I was able to work around this by:\n\n1) Reverting to GCC 4.5.1\n2) Rebuilding the entire 'webserver' toolchain (PHP, OpenSSL, HTTPD, APR, APR-util, etc.) compiling with \"-O0\".\n\nYes, I did an experiment by changing two things, but I needed to get the server up and running.\n\nIn a few days, I will try to build with optimizations back on and GCC 4.5.1, meaning the only difference will be the compiler variant.\n\nMy guess is that this has uncovered an optimization bug in GCC 4.5.2.\n\nI have no idea exactly WHERE the failure is in the compiler, so I have NO IDEA how to report this problem. Nor do I know if the compiler is ok, and its discovering a sloppy piece of code in the 'webserver toolchain' that was wrong, but wasn't creating an 'evident' problem before.\n\nI just know that as more people move to GCC 4.5.2, they will hit this.\n\nHow to best report this to the GCC folks? Help on how to proceed, please! :D"}, {"count": 4, "tags": [], "creator": "j-comm@westvi.com", "attachment_id": null, "text": "I've verified this as definitely a problem going from 4.5.1 to 4.5.2, as I returned all the optimization levels back to their defaults, and the bug happens with 4.5.2 compilation, not 4.5.1.\n\nNot sure if this is in OpenSSL or in HTTPD, but either way it's not Apache's fault (or the OpenSSL project). I am working to narrow this down to submit to the GCC team.", "id": 142949, "time": "2010-12-25T09:49:31Z", "bug_id": 50520, "creation_time": "2010-12-25T09:49:31Z", "is_private": false}, {"count": 5, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "text": "(In reply to comment #4)\n> I've verified this as definitely a problem going from 4.5.1 to 4.5.2, as I\n> returned all the optimization levels back to their defaults, and the bug\n> happens with 4.5.2 compilation, not 4.5.1.\n\nCan you please try if adding -fno-strict-aliasing to the CFLAGS fixes the problem even with 4.5.2 and optimization? If yes, this may be the same as bug 50190", "id": 142960, "time": "2010-12-27T17:09:04Z", "bug_id": 50520, "creation_time": "2010-12-27T17:09:04Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 50520, "text": "This problem is indeed solved by adding -fno-strict-aliasing to CFLAGS.\n\n(In reply to comment #5)\n> (In reply to comment #4)\n> > I've verified this as definitely a problem going from 4.5.1 to 4.5.2, as I\n> > returned all the optimization levels back to their defaults, and the bug\n> > happens with 4.5.2 compilation, not 4.5.1.\n> \n> Can you please try if adding -fno-strict-aliasing to the CFLAGS fixes the\n> problem even with 4.5.2 and optimization? If yes, this may be the same as bug\n> 50190", "id": 143001, "time": "2010-12-30T10:47:19Z", "creator": "j-comm@westvi.com", "creation_time": "2010-12-30T10:47:19Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 50520, "text": "I tried this, and some web pages now worked, but later, I discovered others did not. \n\n(In reply to comment #5)\n> (In reply to comment #4)\n> > I've verified this as definitely a problem going from 4.5.1 to 4.5.2, as I\n> > returned all the optimization levels back to their defaults, and the bug\n> > happens with 4.5.2 compilation, not 4.5.1.\n> \n> Can you please try if adding -fno-strict-aliasing to the CFLAGS fixes the\n> problem even with 4.5.2 and optimization? If yes, this may be the same as bug\n> 50190", "id": 143002, "time": "2010-12-30T11:11:00Z", "creator": "j-comm@westvi.com", "creation_time": "2010-12-30T11:11:00Z", "is_private": false, "attachment_id": null}, {"count": 8, "attachment_id": null, "bug_id": 50520, "text": "*** Bug 50564 has been marked as a duplicate of this bug. ***", "id": 143256, "time": "2011-01-10T18:49:37Z", "creator": "covener@gmail.com", "creation_time": "2011-01-10T18:49:37Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "creator": "silversens@gmail.com", "attachment_id": null, "id": 143261, "time": "2011-01-11T02:52:41Z", "bug_id": 50520, "creation_time": "2011-01-11T02:52:41Z", "is_private": false, "text": "(In reply to comment #8)\n> *** Bug 50564 has been marked as a duplicate of this bug. ***\n\nDowngrading to 4.5.1 fixed the problem for me too."}, {"count": 10, "tags": [], "bug_id": 50520, "text": "\n\n*** This bug has been marked as a duplicate of bug 50190 ***", "id": 143403, "time": "2011-01-17T05:31:30Z", "creator": "jorton@redhat.com", "creation_time": "2011-01-17T05:31:30Z", "is_private": false, "attachment_id": null}]