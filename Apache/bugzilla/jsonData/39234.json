[{"count": 0, "tags": [], "bug_id": 39234, "attachment_id": null, "id": 87658, "time": "2006-04-07T10:36:31Z", "creator": "bill.seddon@lyquidity.com", "creation_time": "2006-04-07T10:36:31Z", "is_private": false, "text": "There have been several reports of this problem and although several indicate \nthat the issue is resolved, it is not completely resolved.  These comments \nrefer to 2.5.1.  However since the same code appears in 3.0 (devel) the same \nissue applies.  Earlier reports include: 36515, 17935, 15232.\n\nThe steps to reproduce the problem are simple:\n\n1)\tCreate a new workbook\n2)\tOpen the VBA editor and add a module called \u201cmodABC\u201d \n        (note the case) and you don\u2019t have to enter anything into the module\n3)\tSave the workbook and close Excel\n4)\tRead it in using POIFS and write it out again\n5)\tOpen the new/updated workbook\n\nWhen you open the workbook, the chances are that you will be greeted by a \nmessage saying \u201cFile not found\u201d.  If this doesn\u2019t occur on opening the \nworkbook try editing the new module \u2013 or saving the workbook - then you will \nsee the message.\n\nThe problem is that this module is 6 characters long and starts with a \nlowercase letter.  The error will also occur for modules with a wide range of \nnames and arises because there is an error in the way POIFS saves the property \ntable.\n\nThe rules for saving the table are documented on the POI web site and appear \nto be correct but there is an additional wrinkle and the implementation is not \nquite right.  The error is caused by the sorting of the property names in the \ncomparator implementation in DirectoryProperty.java.\n\nWhen a VBA macro is added to a document, Excel adds a new module with a \ndefault name starting with \u201cModule1\u201d.  Excel adds a new storage to the .xls \ndocument with a defined structure:\n\n_VBA_PROJECT_CUR\n----PROJECT\n----PROJECTwm\n----VBA\n--------dir\n--------Module1\n--------Sheet1\n--------ThisWorkbook\n--------_VBA_PROJECT\n\nThe rules are that entries with shorter names should appear in a directory \nbefore entries with longer name and that entries with names that are the same \nlength should be sorted alphabetically.  The implementation in \nDirectoryProperty.java get this right.  Unfortunately, the unstated rule is \nthat Excel expects that the names will be sorted without case sensitivity.  As \nthe comparator implementation in DirectoryProperty.java uses String.compareTo\n() this only works providing the module, form and class names start with an \nupper case character.  Applying the example used in the steps to reproduce the \nerror, the current implementation generated the following name order that \nExcel regards as invalid:\n\n_VBA_PROJECT_CUR\n----PROJECT\n----PROJECTwm\n----VBA\n--------dir\n--------Sheet1\n--------ThisWorkbook\n--------modABC\n--------_VBA_PROJECT\n\nPart of the fix is to change the comparator implementation to use \nString.compareToIgnoreCase().  This ensures that the names are in the right \norder.  However, it makes the _VBA_PROJECT entry appear first in the list and \nit MUST appear last.\n\nThe code below is the change I have made and that seems to work for me.  Maybe \nthere is a more generic implementation of this fix that meets a wider set of \nrules.  If so, please let me know. \n\nBill Seddon\n\n        public int compare(Object o1, Object o2)\n        {\n\t    String VBA_PROJECT = \"_VBA_PROJECT\";\n            String name1  = (( Property ) o1).getName();\n            String name2  = (( Property ) o2).getName();\n            int    result = name1.length() - name2.length();\n\n            if (result == 0)\n            {\n\t\tif (name1.compareTo(VBA_PROJECT) == 0)\n\t\t\tresult = 1; \n\t\telse if (name2.compareTo(VBA_PROJECT) == 0)\n\t\t\tresult = -1;\n\t\telse\n\t\t\t// result = name1.compareTo(name2);\n\t\t\tresult = name1.compareToIgnoreCase(name2);\n            }\n            return result;\n        }"}, {"count": 1, "tags": [], "bug_id": 39234, "text": "As a follow up, I discovered that the list of VBA streams generated by Excel \ncan include ones with names like __SRP_0 or __SRP_2.  Like the _VBA_PROJECT \nstream, these cannot be sorted alphabetically.  Instead the \"underscore\" \nstreams seem to have to be sorted separately and made to appear *after* all \nother streams giving this kind of structure:\n\n_VBA_PROJECT_CUR\n----PROJECT\n----PROJECTwm\n----VBA\n--------dir\n--------Module1\n--------Sheet1\n--------ThisWorkbook\n--------__SRP_0\n--------__SRP_1\n--------_VBA_PROJECT\n\nWhat would happen to a file with three leading underscores, I don't know.\n\nAnyway, here is my updated code for the comparator method:\n\npublic int compare(Object o1, Object o2)\n{\n  String VBA_PROJECT = \"_VBA_PROJECT\";\n  String name1  = (( Property ) o1).getName();\n  String name2  = (( Property ) o2).getName();\n  int  result = name1.length() - name2.length();\n\n  if (result == 0)\n  {\n    // _VBA_PROJECT, it seems, will always come last\n    if (name1.compareTo(VBA_PROJECT) == 0)\n      result = 1; \n    else if (name2.compareTo(VBA_PROJECT) == 0)\n      result = -1;\n    else\n    {\n      if (name1.startsWith(\"__\") && name2.startsWith(\"__\"))\n      {\n        // Betweeen __SRP_0 and __SRP_1 just sort as normal\n        result = name1.compareToIgnoreCase(name2);\n      }\n      else if (name1.startsWith(\"__\"))\n      {\n        // If only name1 is __XXX then this will be placed after name2\n        result = 1; \n      }\n      else if (name2.startsWith(\"__\"))\n      {\n        // If only name2 is __XXX then this will be placed after name1\n        result = -1;\n      }\n      else\n        // result = name1.compareTo(name2);\n        // The default case is to sort names ignoring case\n        result = name1.compareToIgnoreCase(name2);\n    }\n  }\n  return result;\n}\n\n\n  ", "id": 87820, "time": "2006-04-12T08:39:55Z", "creator": "bill.seddon@lyquidity.com", "creation_time": "2006-04-12T08:39:55Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "\nDo we have any progress with this issue? \n\nRecently I confirmed that the problem exists. \nWe are going to use POI in production to modify xls files full of VBA but it\nturns out that \nPOIFS changes the order of entries in ROOT._VBA_PROJECT_CUR.VBA node.\nAs the result the document gets corrupted.\n\nThe problem disappeared after I applied the suggested patch. I did some more\ntests and\nit worked fine in all cases. Let's commit it.\n\nThe patch includes a test xls file, unit tests and the source code.\n\nP.S. Bill, thank you for the excellent explanation of the problem. It helped a lot.\n\nRegards, Yegor Kozlov\n", "attachment_id": null, "id": 96793, "creator": "yegor@dinom.ru", "time": "2006-12-12T04:40:54Z", "bug_id": 39234, "creation_time": "2006-12-12T04:40:54Z", "is_private": false}, {"count": 3, "tags": [], "creator": "yegor@dinom.ru", "is_private": false, "id": 96794, "creation_time": "2006-12-12T04:46:13Z", "time": "2006-12-12T04:46:13Z", "bug_id": 39234, "text": "Created attachment 19244\nthe patch", "attachment_id": 19244}, {"count": 4, "tags": [], "text": "Created attachment 19245\nzip archive with the modified and added files", "attachment_id": 19245, "id": 96795, "creator": "yegor@dinom.ru", "time": "2006-12-12T04:46:45Z", "bug_id": 39234, "creation_time": "2006-12-12T04:46:45Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 39234, "attachment_id": null, "id": 96824, "time": "2006-12-12T10:22:58Z", "creator": "apache@gagravarr.org", "creation_time": "2006-12-12T10:22:58Z", "is_private": false, "text": "Thanks for figuring this one out, and working out a fix and test.\n\nI've applied the fix."}, {"count": 6, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "text": "*** Bug 18155 has been marked as a duplicate of this bug. ***", "id": 97986, "time": "2007-01-12T03:30:48Z", "bug_id": 39234, "creation_time": "2007-01-12T03:30:48Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 39234, "attachment_id": null, "text": "*** Bug 19427 has been marked as a duplicate of this bug. ***", "id": 122977, "time": "2008-12-01T22:59:05Z", "creator": "josh@apache.org", "creation_time": "2008-12-01T22:59:05Z", "is_private": false}]