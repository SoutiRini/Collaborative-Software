[{"count": 0, "attachment_id": null, "creator": "apache@eeaston.com", "is_private": false, "id": 52672, "time": "2004-02-20T16:18:28Z", "bug_id": 27116, "creation_time": "2004-02-20T16:18:28Z", "tags": [], "text": "The Import task docs indicate \"It makes it easy to keep the same target name, \nthat has the same dependencies (so it is still called by the other targets), \nbut use a different implementation.\"  However, the task doesn't actually \npreserve the same dependencies.\n\nGiven the following two files:\n------ build.xml -----------------------------\n<project name=\"build\" default=\"all\">\n   <import file=\"sharedtargets.xml\"/>\n   <target name=\"all\" depends=\"b,d\"/>\n   <target name=\"foo\">\n      <echo message=\"Target foo\"/>\n   </target>\n   <target name=\"b\">\n      <echo message=\"Overridden target b\"/>\n   </target>\n\n   <target name=\"c\" depends=\"foo\">\n      <echo message=\"Overridden target c\"/>\n   </target>\n   <target name=\"d\" depends=\"sharedtargets.d\">\n      <echo message=\"Overridden target d\"/>\n   </target>\n</project>\n------ sharedtargets.xml ---------------------\n<project name=\"sharedtargets\">\n   <target name=\"a\">\n      <echo message=\"Target sharedtargets.a\"/>\n   </target>\n   <target name=\"b\" depends=\"a\">\n      <echo message=\"Target sharedtargets.b\"/>\n   </target>\n   <target name=\"c\">\n      <echo message=\"Target sharedtargets.c\"/>\n   </target>\n   <target name=\"d\" depends=\"c\">\n      <echo message=\"Target sharedtargets.d\"/>\n   </target>\n</project>\n----------------------------------------------\n\nI see the following output with 1.6.0 and 1.6.1:\n\n---- actual output ---------------------------\nBuildfile: build.xml\nb:\n     [echo] Overridden target b\nfoo:\n     [echo] Target foo\nc:\n     [echo] Overridden target c\nsharedtargets.d:\n     [echo] Target sharedtargets.d\nd:\n     [echo] Overridden target d\nall:\nBUILD SUCCESSFUL\n----------------------------------------------\n\nBut I'd expect to see the following:\n\n------ desired/expected output ---------------\nBuildfile: build.xml\na:\n     [echo] Target sharedtargets.a\nb:\n     [echo] Overridden target b\nfoo:\n     [echo] Target foo\nc:\n     [echo] Overridden target c\nsharedtargets.d:\n     [echo] Target sharedtargets.d\nd:\n     [echo] Overridden target d\nall:\nBUILD SUCCESSFUL\nTotal time: 1 second\n----------------------------------------------\n\nIn otherwords, I'd expect the dependencies of the overridden target to be \npreserved, even when the overriding target declares its own depends (although \nthis last bit should probably be optional).\n\ni.e. \n- The overriden 'b' target should require that sharedtarget's 'a' is run \n- The overridden 'd' shouldn't have to depend on the sharedtarget's 'd' to \nget 'c' to run"}, {"count": 1, "attachment_id": null, "creator": "apache@eeaston.com", "is_private": false, "id": 54117, "time": "2004-03-16T23:21:56Z", "bug_id": 27116, "creation_time": "2004-03-16T23:21:56Z", "tags": [], "text": "Any ant developers care to comment?"}, {"count": 2, "attachment_id": null, "creator": "mbenson@apache.org", "is_private": false, "id": 54120, "time": "2004-03-16T23:57:19Z", "bug_id": 27116, "creation_time": "2004-03-16T23:57:19Z", "tags": [], "text": "I was originally bothered by this myself to some degree but a little thought \nputs it in perspective.  Think of it in terms of Java methods.  Overridden \nmethods don't just behave as the overridden methods on the parent class; if you \nwant to either mimic or inherit behavior you have to either\n\na) do what the overridden method does, or\nb) call super.methodname()\n\nIn Ant you should be able to accomplish (a) by duplicating the depends \nattribute.  You should be able to accomplish (b) in this manner:\n\nassuming your <import>ed  file contains <project name=\"parent\">...</project>,\n\n<target name=\"overridden\" depends=\"parent.overridden\">...</target>\n\n\nThat's a guess, but it should work.\n\n-Matt"}, {"count": 3, "tags": [], "text": "IMO this amounts to a wording problem on the manpage.  Any other opinions on \nwhat would happen if overridden targets were to inherit their depends attribute?", "attachment_id": null, "id": 54121, "creator": "mbenson@apache.org", "time": "2004-03-17T00:01:14Z", "bug_id": 27116, "creation_time": "2004-03-17T00:01:14Z", "is_private": false}, {"count": 4, "tags": [], "text": "I'm not convinced the OO analogy is properly drawn.  In the context of a \nframework, a polymorphic call to a method will be dispatched to the most \nderived implementation.  That implementation has the option of calling super, \nbut in general if it doesn't it *should* still fulfill the \"contract\" of the \nsuper class even though this isn't always enforceable.\n\nNo if you view depends as shorthand for doing a sort of checked <antcall> at \nthe start of the method, then I'd agree that the depends declarations are part \nof the super's implementation and shouldn't be honored unless the overriding \ntarget calls to overridden target.\n\nHowever, since depends is handled magically inside of the project for ordering \nof tasks it doesn't behave as simply as a checked <antcall>; it can't be \nsimulated using ant task, thus you can argue that it's not part of the \noverridable task's behavior but rather part of the ant \"language\" and should be \nhonored regardless of what the overriding target implementation does.\n\nOf course, this begs the question that Matt raises, \"what does it mean when you \nspecify dependencies on the overriding target?\"  Since dependencies are used \nfor ordering and not exclusion, you should be able to union the two tasks \ndependencies.  If there's no intersection in these lists and the dependency \ngraph doesn't clearly drive a particular ordering of dependencies, then the \nresult could be either (a) indeterminate/random/undefined or (b) overridden \ntarget's dependencies run first, then the overriding targets run next.\n\nI haven't dug into the mail archives, but it seems that the intent of <import> \nis to get the behavior I describe.", "attachment_id": null, "id": 54126, "creator": "apache@eeaston.com", "time": "2004-03-17T01:01:24Z", "bug_id": 27116, "creation_time": "2004-03-17T01:01:24Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 27116, "attachment_id": null, "is_private": false, "id": 55927, "time": "2004-04-16T22:53:09Z", "creator": "mbenson@apache.org", "creation_time": "2004-04-16T22:53:09Z", "text": "This has been open for quite some time and has failed to generate interest with \nany Ant committer other than myself.  I am treating this as a documentation \nissue; I have updated the manual page in the CVS HEAD and the 1.6 branch, \nhopefully better wording the actual behavior of the <import> task as it relates \nto this report.  I am resolving this WORKSFORME, using either of the methods \ndetailed above.\n\n-Matt"}]