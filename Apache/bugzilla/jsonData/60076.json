[{"count": 0, "tags": [], "bug_id": 60076, "attachment_id": 34189, "is_private": false, "id": 193445, "time": "2016-09-01T08:58:13Z", "creator": "olivier.jaquemet@jalios.com", "creation_time": "2016-09-01T08:58:13Z", "text": "Created attachment 34189\nTest webapp compile with JDK 1.6 for Tomcat 6\n\nThe following exception occurs when users try to  access AVI video playback on IE11.\nMy analysis is that it's a bad behavior of Tomcat when using  HttpServletResponseWrapper.\n\nClientAbortException:  java.io.IOException\n        at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:370)\n        at org.apache.tomcat.util.buf.ByteChunk.append(ByteChunk.java:368)\n        at org.apache.catalina.connector.OutputBuffer.writeBytes(OutputBuffer.java:393)\n        at org.apache.catalina.connector.OutputBuffer.write(OutputBuffer.java:382)\n        at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:89)\n        at org.apache.catalina.servlets.DefaultServlet.copy(DefaultServlet.java:1994)\n        at org.apache.catalina.servlets.DefaultServlet.serveResource(DefaultServlet.java:954)\n        at org.apache.catalina.servlets.DefaultServlet.doGet(DefaultServlet.java:420)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:617)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:723)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at com.example.BasicFilter.doFilter(BasicFilter.java:35)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\n        at org.apache.coyote.http11.Http11AprProcessor.process(Http11AprProcessor.java:879)\n        at org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler.process(Http11AprProtocol.java:610)\n        at org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1777)\n        at java.lang.Thread.run(Thread.java:662)\nCaused by: java.io.IOException\n        at org.apache.coyote.http11.InternalAprOutputBuffer.flushBuffer(InternalAprOutputBuffer.java:717)\n        at org.apache.coyote.http11.InternalAprOutputBuffer$SocketOutputBuffer.doWrite(InternalAprOutputBuffer.java:747)\n        at org.apache.coyote.http11.filters.IdentityOutputFilter.doWrite(IdentityOutputFilter.java:118)\n        at org.apache.coyote.http11.InternalAprOutputBuffer.doWrite(InternalAprOutputBuffer.java:557)\n        at org.apache.coyote.Response.doWrite(Response.java:533)\n        at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:365)\n        ... 24 more\n\nI have setup a very simple reproduction webapp (2 nearly empty class, one html, one video) attach to this issue.\n(test-t6.war for Tomcat 6, test.war for Tomcat 7+)\n\nThis webapp is configured with a simple servlet filter, doing nothing  special but wrapping the response using a simple HttpServletResponseWrapper (not doing anything at all) and logging request information on exception.\nTo help demonstrate the cause of the problem, the filter expose an init parameter \"wrap-response\" in web.xml which quickly allows the webapp to be tested with 2 behavior : response wrapped (to exhibit the bug) or not (to behave properly).\nThe home page contains a video player with a very small AVI file.\n\nThe reproduction steps :\n  * Start Tomcat (any version) with the webapp above\n  * Access the index page using IE 11 on Windows 7 (very important : clear browser cache between each test)\n  --> The exception above occurs.\n  * Edit web.xml, set \"wrap-response\" init parameter to false\n  * Repeat the test with IE (don't forget to clear cache!)\n  --> No exception.\n\nThe problem may be workaround by modifying Tomcat's web.xml by disabling Accept-Ranges support.\n\n    <init-param>\n        <param-name>useAcceptRanges</param-name>\n        <param-value>false</param-value>\n    </init-param>\n\nBecause the ClientAbortException/IOException does not occurs if the response is not wrapped, and does not occurs either if acceptRange is disabled, it really make me think that is a bug in Tomcat (and not a behavior of the client contrary to what ClientAbortException implies).\n\nBug verified to exist in all following version of tomcat (with a default install) \n(using JDK 1.6.0_45-b06 on Win7 SP1):\n  Apache Tomcat/7.0.45\n(using JDK 1.8.0_102-b14 on Win7 SP1):\n  Apache Tomcat/7.0.70\n  Apache Tomcat/8.0.36\n  Apache Tomcat/8.5.4\n  Apache Tomcat/9.0.0.M9\n\n\nBug initially discussed on tomcat users ML\nhttp://mail-archives.apache.org/mod_mbox/tomcat-users/201608.mbox/%3C6be06ed8-64da-4f3d-4204-0e89b40617de%40jalios.com%3E"}, {"count": 1, "tags": [], "creator": "olivier.jaquemet@jalios.com", "attachment_id": 34190, "id": 193446, "time": "2016-09-01T09:00:31Z", "bug_id": 60076, "creation_time": "2016-09-01T09:00:31Z", "is_private": false, "text": "Created attachment 34190\nTest webapp compilee with JDK 1.8 for Tomcat 7+"}, {"count": 2, "tags": [], "bug_id": 60076, "attachment_id": null, "id": 193453, "time": "2016-09-01T21:04:22Z", "creator": "markt@apache.org", "creation_time": "2016-09-01T21:04:22Z", "is_private": false, "text": "I've looked at a WireShark trace with and without the wrapper. There is no Tomcat bug here. The client drops the connection for no obvious reason on multiple occasions without and without the wrapper. It just so happens that with the wrapper the timing is such that the Exception gets caught by the Filter.\n\nI'll add that the client makes multiple requests for the same parts of the avi file. Ignoring the requests it makes and then aborts, it still ends up downloading over 500K of data."}, {"count": 3, "tags": [], "bug_id": 60076, "attachment_id": null, "id": 193460, "time": "2016-09-02T07:03:16Z", "creator": "olivier.jaquemet@jalios.com", "creation_time": "2016-09-02T07:03:16Z", "is_private": false, "text": "Thank you Mark for this analysis.\n\nI am completely ok to accept that IE behaves like sh%t, this would not be the first time.\n\nHowever, how do you explain the fact that without using the HttpServletResponseWrapper the exception does not occur ? \nIt really seems to me that there is a change in Tomcat behavior somewhere, otherwise exception would occur everytime, don't you think ?"}, {"count": 4, "tags": [], "creator": "markt@apache.org", "text": "(In reply to Olivier Jaquemet from comment #3)\n> It really seems to me that there is a change in Tomcat behavior somewhere,\n> otherwise exception would occur everytime, don't you think ?\n\nThere is a change. I dug into it a little more. With the wrapper, the Default Servlet writes the content and you see the exception when the client aborts the connection. Without the wrapper, Tomcat uses sendFile so the write is handled by a separate thread so the app never sees the exception.\n\nThis is all entirely as expected.", "id": 193465, "time": "2016-09-02T16:57:57Z", "bug_id": 60076, "creation_time": "2016-09-02T16:57:57Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 60076, "attachment_id": null, "id": 193571, "time": "2016-09-09T12:30:15Z", "creator": "olivier.jaquemet@jalios.com", "creation_time": "2016-09-09T12:30:15Z", "is_private": false, "text": "OKay, everything is now much clearer to me.\n\nThank you Mark for the taking the time to analyze this issue."}]