[{"count": 0, "tags": [], "bug_id": 10547, "attachment_id": null, "is_private": false, "id": 19106, "time": "2002-07-08T09:04:48Z", "creator": "grstarrett@cox.net", "creation_time": "2002-07-08T09:04:48Z", "text": "I have build 1.3.26 on a XP Pro, I don't get a default document in the root \nonly when I #1 set the service to log in as a regular user and #2 do NOT \nassign permissions to the apache_user account BELOW the new docroot.  Here are \nsteps to reproduce:\n\n--Assume contents of docroot has index.htm and a directory subdir\\index.htm.\n\n--Create Apache_User user account on the local machine as a restricted (on \nother words, regular not power) user.\n\n--Set the DocumentRoot (and <Directory ...>) to something like \"C:/Documents \nand Settings/gstarrett/My Documents/My Website/Apache8080\"\n\n--Set permissions on \"C:/Documents and Settings/gstarrett/My Documents/My \nWebsite/Apache8080\" so that Apache_User has full permissions on the Apache8080 \ndirectory.\n\n-->Try to access http://MyServer:8080/ and get \"Not found.  The requested \nURL / was not found on this server.\"  However, if you check for \nhttp://MyServer:8080/index.htm or http://MyServer:8080/blah/ then it shows \nboth those perfectly.\n\nNote that this doesn't show up if you either set Apache back to system account \nOR assign at least read-only permissions to the directory above the docroot.  \nI chose the latter.\n\nAs a general note, isn't it generally a bad idea to have the service log in as \nsystem account?  If someone got control of the service, then they would have \nsystem acct privledges.  I'm fairly new to Apache still so forgive me I missed \nsomething basic about functioning."}, {"count": 1, "tags": [], "creator": "grstarrett@cox.net", "attachment_id": null, "text": "Clarification:  The directory that needs permission in the example listed that \nI wouldn't have normally given it to is \"C:/Documents \nand Settings/gstarrett/My Documents/My Website\", not just \"C:/Documents \nand Settings/gstarrett/My Documents/My Website/Apache8080\" and below as I \nwould have expected.", "id": 19107, "time": "2002-07-08T09:08:35Z", "bug_id": 10547, "creation_time": "2002-07-08T09:08:35Z", "is_private": false}, {"count": 2, "tags": [], "text": "Note that in my previous comments the Apache_User has FULL permission on the \nApache Group directory and down.  Therefore when the docroot was in the \ndefault location, it was already configured with the permissions 1 level down \nthat are necessary for proper root index behavior.  Otherwise, I don't *think* \nchancing the docroot had anything to do with the problem itself.  Hope this \nhelps.", "attachment_id": null, "id": 19118, "creator": "grstarrett@cox.net", "time": "2002-07-08T15:19:49Z", "bug_id": 10547, "creation_time": "2002-07-08T15:19:49Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 10547, "attachment_id": null, "id": 19127, "time": "2002-07-08T18:24:23Z", "creator": "wrowe@apache.org", "creation_time": "2002-07-08T18:24:23Z", "is_private": false, "text": "\n  Answers, in any order;\n\n  Yes, the default installs a service as LocalSystem (no network access.)\n  Most users should change this, but it's not made sufficently clear.\n\n  Yes, Apache needs rx (list) access to each directory, to the root.  This\n  is required to distinguish the paths /pathto~1 from /path_to_apache, or\n  even /path_to_ if one were using a non-WinNT network 8.3 filesystem.  We\n  cannot permit the user to walk around a fully decorated path's security\n  by using an alias, and we need read access [so far] to assure us of the\n  resource's full name [using FindFirstFile() against the potential alias.]\n\n  Other API [even NT kernal API] suggestions for working out the fully\n  decorated name [without the shell32.dll which isn't a secure solution for\n  full path resolution] would be welcome.\n"}, {"count": 4, "tags": [], "bug_id": 10547, "text": "Solution is noted and verified that it works.  Recommend you add information to \nthe documentation indicating this requirement since it is not the default way \nof assigning permissions in the WinNT/2K/XP/... world (as opposed to the *nix \nworld).", "id": 31770, "time": "2003-02-21T17:43:51Z", "creator": "grstarrett@cox.net", "creation_time": "2003-02-21T17:43:51Z", "is_private": false, "attachment_id": null}]