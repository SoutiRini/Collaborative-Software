[{"count": 0, "tags": [], "bug_id": 47500, "attachment_id": 23947, "id": 128658, "time": "2009-07-09T02:07:28Z", "creator": "lxw7777@gmail.com", "creation_time": "2009-07-09T02:07:28Z", "is_private": false, "text": "Created attachment 23947\nIt include jsp and servlet file\n\nHello, \n  I wrote an example to practice Comet service in Tomcat 6, I found if I put HttpServletRequest.getParameter during BEGIN event, then I never receive READ event. If I remove it, then it can work. If I use getSession(), it can get READ event also\n\n\n\nMy web.xml configuration\n\n    <description>\n      ww web chat.\n    </description>\n    <display-name>WW web chat</display-name>\n\n<!-- Thomas Luo added -->\n    <servlet>\n        <servlet-name>wweb_chat</servlet-name>\n        <servlet-class>wwebchat.wweb_chat</servlet-class>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>wweb_chat</servlet-name>\n        <url-pattern>/wwebchat/wweb_chat</url-pattern>\n    </servlet-mapping>\n    <servlet-mapping>\n        <servlet-name>wweb_chat</servlet-name>\n        <url-pattern>/a</url-pattern>\n    </servlet-mapping>"}, {"count": 1, "tags": [], "bug_id": 47500, "text": "We have the same problem on Tomcat 6.0.18 and 6.0.20 (running on FreeBSD v7.2 amd64). Also, tried building from HEAD on 07/10/2009 with the same result.\nWe are trying to implement a servlet based on CometProcessor. Here is a snippet of our server code:\n\n   public void event( CometEvent _event ) throws IOException, ServletException {\n      CometEvent.EventType type = _event.getEventType();\n        switch ( type ) {\n          case BEGIN:\n            // needed for APR connector\n            if ( _event.getHttpServletRequest().getAttribute(\"org.apache.tomcat.comet.timeout.support\") == Boolean.TRUE ) {\n              _event.setTimeout( getTimeout() );\n            }\n            break;\n          case READ:\n            processRead( _event );\n            _event.getHttpServletResponse().flushBuffer();\n            break;\n          case END:\n          case ERROR:\n            _event.close();\n            break;\n        }\n  }\n\n\nIn the next method the call to getParameter(\"message\") prevents response from getting to the client. After some time some responses make it to the client, but these responses contain only headers (for example, \"Connection\" header set to \"keep-alive\" in the servlet by the call _event.getHttpServletResponse().addHeader(\"Connection\", \"keep-alive\")) - no data is received.  We tracked this in Firebug under Firefox 3.5 . \n\nIf we invoke event.close() after processing of handshake(the same way it is done in BayeuxServlet.handleEvent(xxx) in the HEAD) then the client gets the response and servlet will get another \"connect\" request. However, there is nowhere to write the next response to because output stream is already closed.\n\nWhen we remove the call to _event.getHttpServletRequest().getParameter(\"message\") everything works fine. \n\nprivate int processRead( CometEvent _event ) throws IOException, ServletException {\n    String msg = _event.getHttpServletRequest().getParameter(\"message\"); // ---------<<<<<<<< THE PROBLEM CALL\n    try {\n      JSONArray jobj = new JSONArray( msg );\n      for (int i = 0; i < jobj.length(); i++) {\n        JSONObject jMsg = jobj.getJSONObject(i);\n          PrintWriter out = _event.getHttpServletResponse().getWriter();\n          if ( \"/meta/handshake\".equals( jMsg.optString(\"channel\") ) ) {\n            out.print( \"[\" + handshake( jMsg) + \"]\" );\n            out.flush();\n          } else if ( \"/meta/connect\".equals( jMsg.optString(\"channel\") ) ) {\n            out.print( \"[ { json response } ]\" );\n            out.flush();\n          }\n      }\n    } catch ( Exception ex ) {\n      throw new ServletException( ex );\n    }\n    return 0;\n  }\n\nprivate JSONObject handshake( JSONObject _msg ) throws JSONException {\n    JSONObject response = new JSONObject();\n    response.put( \"channel\", \"/meta/handshake\");\n    response.put( \"version\", \"1.0\");\n    response.put( \"minimumVersion\", \"0.9\");\n    response.put( \"clientId\", bayeux.newClient().getId() );\n    response.put( \"successful\", true);\n    response.put( \"supportedConnectionTypes\", new String[] { \"long-polling\", \"callback-polling\" } );\n    response.put( \"id\", _msg.optInt(\"id\") );\n    return response;\n}\n\nHere is our test client page:\n\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n  <script type=\"text/javascript\" src=\"http://localhost:8180/dojo/1.3.1/dojo/dojo.js\" djConfig=\"parseOnLoad: true, isDebug: true\">\n  <script type=\"text/javascript\">\n    dojo.require(\"dojox.cometd\");\n    dojo.addOnLoad( function() { dojox.cometd.init(\"/functionaltest/cometd\"); });\n  </script>\n</head>", "id": 128742, "time": "2009-07-10T14:52:59Z", "creator": "paul@coehl.com", "creation_time": "2009-07-10T14:52:59Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "markt@apache.org", "text": "That is as expected.\n\nHttpServletRequest.getParameter() will drain the input stream reading the data from the form so there is nothing left to generate a read() event.", "id": 132564, "time": "2009-12-01T16:18:07Z", "bug_id": 47500, "creation_time": "2009-12-01T16:18:07Z", "is_private": false, "attachment_id": null}]