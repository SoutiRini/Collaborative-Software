[{"count": 0, "tags": [], "bug_id": 56451, "text": "1. Using JNDI lookup to access resources\n\nGiven a resource accessible as\n\nrequest.getServletContext().getResourceAsStream(\"/some/path/myResource\");\n\nit can also be accessed via JNDI (return type is different but equally useful)\n\nic.lookup(\"java:comp/Resources/some/path/myResource\")\n\n\n2. JNDI lookups ignores aliased resources\n\nGiven a <Context aliases=\"/someAlias=/any/path\" .../>, its resources are accessible\n\nrequest.getServletContext().getResourceAsStream(\"/someAlias/myOtherResource\");\n\nBUT, the lookup \n\nic.lookup(\"java:comp/Resources/someAlias/myOtherResource\")\n \nfails throwing org.apache.naming.resources.ImmutableNameNotFoundException.\n\nListing the java:comp/Resources context shows someAlias is NOT bound.\n\n3. Expected behavior\n\nTomcat exposes resources under the java:comp/Resources JNDI context. Aliases should also apply to this alternate access interface.", "id": 174824, "time": "2014-04-24T00:53:12Z", "creator": "daniel.mojoli@idea.com.py", "creation_time": "2014-04-24T00:53:12Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 56451, "attachment_id": null, "id": 174883, "time": "2014-04-25T17:15:33Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-04-25T17:15:33Z", "is_private": false, "text": "1. Note that this API is not available in Tomcat 8,\nbut you can call\n\n> ic.lookup(\"java:comp/Resources\")\n\nwhich will return StandardRoot.\n\n2. Debugging Tomcat 7, the cause for this issue is different from what I expected.\n\n> ic.lookup(\"java:comp/Resources\")\n\nIn Tomcat 7 is an instance of ProxyDirContext.\n\nIf use the OP way,\n- The string name is parsed into CompositeName.\n- There is a series of lookups, each obtaining a org.apache.naming.NamingContext and looking up the name with first component removed.  See NamingContext.lookup(Name, boolean resolveLinks:= true)\n{ ... return ((Context) entry.value).lookup(name.getSuffix(1)) }\n- It goes into ProxyDirContext.lookup(Name)\n- It does cacheLookup(name.toString())\n- The cacheLookup method creates CacheEntry and calls cacheLoad() to fill it.\n- The cacheLoad method calls dirContext.getAttributes(entry.name).\n\nThe problem is that\n1) name.toString() looks like \"some/path/myResource\"\n2) when you call resource lookup the name will be \"/some/path/myResource\" with leading \"/\".\n\nThis results in\n- Aliases in BaseDirContext/FileDirContext do not work, as all aliases start with leading \"/\".\n- Inconsistency in cache keys in ProxyDirContext.\n\nI wonder whether this is better be fixed by consistently adding '/' to the start of the string, or by consistently removing starting '/'\nfrom names and aliases.\n\nThe latter will be more effective (substring is cheaper that string concatenation), and more correct from JNDI API point of view,\nbut it may be easy to miss some use case.\n\n\nIt is also possible to say that this is unsupported API and close as wontfix.\n\nNote that the following works correctly:\n((Context) ic.lookup(\"java:comp/Resources\").lookup(\"/someAlias/myOtherResource\")\n\nNote leading \"/\" in \"/someAlias\"."}, {"count": 2, "tags": [], "bug_id": 56451, "attachment_id": null, "id": 175000, "creation_time": "2014-05-02T21:55:24Z", "time": "2014-05-02T21:55:24Z", "creator": "markt@apache.org", "text": "This has been fixed in trunk for 7.0.54 onwards.\n\nNote: A JNDI name with a leading '/' should be interpreted as having any empty first name part which never makes sense in this case. Therefore, I opted to remove / from the alias path before adding to the aliases map.", "is_private": false}, {"count": 3, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "Re r1592052\n\nI am sure that that is not enough.\n\nThere are calls to ProxyDirContext.lookupCache(str) in DefaultServlet, WebdavSevlet.\n\nThere are calls to contextVersion.resources.lookup(str) in Mapper.\n\nAll they are using Servlet resource path (starting with '/') instead of JNDI name, and I think they are now broken.", "id": 175003, "time": "2014-05-02T22:15:01Z", "bug_id": 56451, "creation_time": "2014-05-02T22:15:01Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 175053, "time": "2014-05-06T12:16:42Z", "bug_id": 56451, "creation_time": "2014-05-06T12:16:42Z", "is_private": false, "text": "I'm looking at this now. It appears that directory listings aren't handled correctly for aliases either (and don't appear to have been correct before r1592052 either."}, {"attachment_id": null, "tags": [], "bug_id": 56451, "text": "Alternative fix applied for 7.0.54.", "count": 5, "id": 175074, "time": "2014-05-07T13:17:40Z", "creator": "markt@apache.org", "creation_time": "2014-05-07T13:17:40Z", "is_private": false}]