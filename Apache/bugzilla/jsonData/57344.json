[{"count": 0, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "I prepared a patch that adds *.sha1 files to Tomcat release besides the *.md5 ones.\n\nAre there any objections?\n\nMinor issue fixed by the way:\ndue to missing <exclude name=\"*.asc\"> the apache-tomcat-8.0.15-embed.tar.gz archive contains apache-tomcat-8.0.15-embed.zip.asc file that does not belong there.\n\n\nIs it worth to add sha2 (sha-512)? I have some questions:\n\nMy issues with sha-512:\n=========================\n1) Is it worth adding sha-512?\nGenerally users shall use PGP signatures for verification, not the checksums.\n\n2) Not many ASF projects are providing sha2 checksums.\nOne that I know is Apache Ant,\n\nhttp://ant.apache.org/bindownload.cgi\n\nLooking at Apache Ant, I have several notes:\n\na) *.sha512 files are not copied to mirrors, so ASF mirror system knows how to skip these files. (Good)\n\nb) when I click on the link to a file, browser (Firefox 34) does not display the file, but prompts to download it. (Unexpected)\n\nLooking at response headers in Firefox, the server sends Content-Type: application/zip for *.zip.sha512, application/x-gzip for *.tar.gz.sha512, application/x-bzip2 for *.tar.bz2.\n\nSo the server is not configured for these files. It sends text/plain for *.sha1 files.\n\n\n3) I do not have a command-line tool to automatically verify sha-512.\n\nThere exist sha512sum from GNU,\nhttp://www.gnu.org/software/coreutils/manual/coreutils.html#sha2-utilities\n\nbut GnuWin32 CoreUtils do not have this tool.\n\n\n4) What file format shall we use?\n\nApache Ant downloads are using  hashsum + LF.\n\nWe are using  hashsum + \" *\" + filename, which is the format supported by md5sum and sha1sum GNU utilities.\n\n`openssl dgst -sha512 filename` generates \"SHA512(\" + filename + \")= \" +hashsum +LF, but I think that openssl does not read this format.\n\nI think it would better to print just the hashsum value, but I wonder if that is supported by sha512sum tool.", "id": 179726, "time": "2014-12-12T00:38:18Z", "bug_id": 57344, "creation_time": "2014-12-12T00:38:18Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 57344, "attachment_id": 32286, "is_private": false, "id": 179727, "time": "2014-12-12T00:40:10Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-12-12T00:40:10Z", "text": "Created attachment 32286\n2014-12-12_tc9_57344_sha1.patch"}, {"count": 2, "tags": [], "bug_id": 57344, "attachment_id": null, "is_private": false, "id": 179730, "time": "2014-12-12T04:03:12Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-12-12T04:03:12Z", "text": "(In reply to Konstantin Kolinko from comment #0)\n> 3) I do not have a command-line tool to automatically verify sha-512.\n> \n> There exist sha512sum from GNU,\n> http://www.gnu.org/software/coreutils/manual/coreutils.html#sha2-utilities\n> \n> but GnuWin32 CoreUtils do not have this tool.\n\nThe 'sha512sum' command exists on both Debian and Amazon Linux (CentOS/RHEL compatible), and so I would imagine it's available on most Linux distributions. Mac OS X has 'shasum -a 512' which \"mimics the behavior of GNU shaXsum\" (according to the man page).\n\nAs we use Apache Ant for building, why not just use <checksum>?\nhttps://ant.apache.org/manual/Tasks/checksum.html\n\nIt can be configured to use any of the proposed formats...\n\n> 4) What file format shall we use?\n> \n> Apache Ant downloads are using  hashsum + LF.\n> \n> We are using  hashsum + \" *\" + filename, which is the format supported by\n> md5sum and sha1sum GNU utilities.\n> \n> `openssl dgst -sha512 filename` generates \"SHA512(\" + filename + \")= \"\n> +hashsum +LF, but I think that openssl does not read this format.\n> \n> I think it would better to print just the hashsum value, but I wonder if\n> that is supported by sha512sum tool.\n\nI don't believe shaXsum can do that. I can't get the Mac version to do it, either. If sed/awk/etc can be relied upon, we can always cobble-together whatever combination of strings we need to make the tools happy.\n\nIn what environments do we think that checksums will be verified?\n\nAnt's <checksum> can verify a signature as well as generate one. Is Ant/JVM any more/less trustworthy than shaXsum/openssl?"}, {"count": 3, "tags": [], "creator": "markt@apache.org", "text": "+0 to the patch. No objections but what is the benefit?\n\nRe sha2:\n1. As above. What is the benefit.\n\n2. I'm less concerned about what other ASF projects are doing and more concerned about what the benefit of is doing it is.\n2b) I'll see if I can get that fixed.\n\n3. I use cyohash. It doesn't support the exact formats but it is good enough for validating.\n\n4. The same format as we do for sha1 unless there is a good reason not to.", "id": 179731, "time": "2014-12-12T09:58:36Z", "bug_id": 57344, "creation_time": "2014-12-12T09:58:36Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "id": 179750, "time": "2014-12-13T21:23:48Z", "bug_id": 57344, "creation_time": "2014-12-13T21:23:48Z", "is_private": false, "text": "> No objections but what is the benefit?\n\nMy concern is that there have been actual malware that exploited weakness in MD5 (Flame, as mentioned in Wikipedia article on MD5). As such I think that md5 is not enough to verify a file integrity.\n\nhttps://en.wikipedia.org/wiki/MD5\n\n> Re sha2:\n> 1. As above. What is the benefit.\n\nI am neutral on sha2.\nI just think that it is easier to add it now while this task is in our scope.\n\n\n> 4. The same format as we do for sha1 unless there is a good reason not to.\n\nAck.\nI am opting for \"{hash} *{filename}\" format then.\n\nApache Ant can be used to validate it, among other options.\n\n\nThank you for your review."}, {"count": 5, "tags": [], "bug_id": 57344, "attachment_id": null, "is_private": false, "id": 179751, "time": "2014-12-13T21:58:08Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-12-13T21:58:08Z", "text": "Fixed in Tomcat trunk, 8, 7 (r1645357, r1645360, r1645361) to be in 8.0.16, 7.0.58."}, {"count": 6, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "id": 179752, "time": "2014-12-14T00:09:40Z", "bug_id": 57344, "creation_time": "2014-12-14T00:09:40Z", "is_private": false, "text": "A note on backporting to Tomcat 6:\n\n1) GPG support (<target name=\"sign\") does not exist in Tomcat 6. I think it makes sense to backport that as well.\n\nRevisions for this feature are r1231923, r1231947 and r1232368 (January 2012).\n\n2) md5sum is calculated both in extras.xml and dist.xml"}, {"count": 7, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": 32287, "id": 179757, "time": "2014-12-14T16:13:18Z", "bug_id": 57344, "creation_time": "2014-12-14T16:13:18Z", "is_private": false, "text": "Created attachment 32287\n2014-12-14_tc6_57344_sha1.patch\n\nPatch for Tomcat 6.\nAdd sha1 checksums. I am not backporting GPG signing.\n\n(In reply to Konstantin Kolinko from comment #6)\n> A note on backporting to Tomcat 6:\n\nTo avoid special-casing the extras, it is possible to implement signing differently from Tomcat 7: sign all files in one step. In Ant there exists <apply/> task, that runs an external executable over a set of files."}, {"count": 8, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "id": 181159, "time": "2015-02-18T22:05:49Z", "bug_id": 57344, "creation_time": "2015-02-18T22:05:49Z", "is_private": false, "text": "The patch applied to 6.0 in r1660738, will be in 6.0.44 onwards."}]