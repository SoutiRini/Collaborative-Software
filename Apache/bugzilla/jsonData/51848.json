[{"count": 0, "tags": [], "creator": "phil.bryant1@us.army.mil", "attachment_id": null, "text": "The following code snippet:\n\n      String[] concurrenceConstraintValues = new String[]{ \"Concur\", \"Non-Concur\", \"N/A\" };\n      XSSFDataValidationConstraint concurrenceConstraint = new XSSFDataValidationConstraint( concurrenceConstraintValues );\n      CellRangeAddressList concurrenceRangeAddressList = new CellRangeAddressList( 1,                                 // Ignore the header row\n                                                                                   MAX_ROWS_IN_SHEET - 1,             // All rows in sheet\n                                                                                   G8_CONCURRENCE_COLUMN_INDEX - 1,   // Begin on concurrence column (add one because Excel does not use zero indexing)\n                                                                                   G8_CONCURRENCE_COLUMN_INDEX - 1 ); // End on same column (add one because Excel does not use zero indexing)\n\n      // Setup a validation constraints for limiting the text length in g8CommentsColumn\n      XSSFDataValidationConstraint commentsConstraint = new XSSFDataValidationConstraint( DVConstraint.ValidationType.TEXT_LENGTH,\n                                                                                          DVConstraint.OperatorType.BETWEEN,\n                                                                                          Integer.toString( 0 ),\n                                                                                          Integer.toString( RelConstants.MAX_CONCURRENCE_COMMENT_LENGTH ) );\n\n      CellRangeAddressList commentsRangeAddressList = new CellRangeAddressList( 1,                              // Ignore the header row\n                                                                                MAX_ROWS_IN_SHEET - 1,          // All rows in sheet\n                                                                                G8_COMMENTS_COLUMN_INDEX - 1,   // Begin on comments column (add one because Excel does not use zero indexing)\n                                                                                G8_COMMENTS_COLUMN_INDEX - 1 ); // End on same column (add one because Excel does not use zero indexing)\n\n      // Apply the validation constraints to all sheets\n      String[] sheetNames = new String[]{ getAriTable().getReportName(),\n                                          getImiTable().getReportName(),\n                                          getMedicalTable().getReportName() };\n      XSSFSheet sheet;\n      XSSFDataValidationHelper dataValidationHelper;\n      DataValidation dataValidation;\n\n      for( String sheetName : sheetNames )\n      {\n         sheet = workbook.getSheet( sheetName );\n\n         if( sheet != null )\n         {\n            dataValidationHelper = new XSSFDataValidationHelper( sheet );\n\n            // Create and add a DataValidation for g8Concurrence\n            dataValidation = dataValidationHelper.createValidation( concurrenceConstraint, concurrenceRangeAddressList );\n            dataValidation.setSuppressDropDownArrow( false );\n            dataValidation.setEmptyCellAllowed( true );\n            dataValidation.setErrorStyle( DataValidation.ErrorStyle.STOP );\n            dataValidation.createErrorBox( getAriTable().getG8ConcurrenceColumn().getHeader(),\n                                           \"Valid values include: \" + Arrays.deepToString( concurrenceConstraintValues ) );\n            sheet.addValidationData( dataValidation );\n\n            // Create and add a DataValidation for g8Comments\n            dataValidation = dataValidationHelper.createValidation( commentsConstraint, commentsRangeAddressList );\n            dataValidation.setSuppressDropDownArrow( true );\n            dataValidation.setEmptyCellAllowed( true );\n            dataValidation.setErrorStyle( DataValidation.ErrorStyle.STOP );\n            dataValidation.createErrorBox( getAriTable().getG8CommentsColumn().getHeader(),\n                                           \"Text length cannot exceed \" + Integer.toString( RelConstants.MAX_CONCURRENCE_COMMENT_LENGTH ) + \" characters.\" );\n            sheet.addValidationData( dataValidation );\n         }\n      }\n\nproduces the XML snippet:\n\n<dataValidations count=\"2\">\n   <dataValidation type=\"list\" \n                   sqref=\"O2:O1048576\" \n                   errorStyle=\"stop\" \n                   allowBlank=\"true\" \n                   showDropDown=\"true\" \n                   errorTitle=\"G8 Concurrence\" \n                   error=\"Valid values include: [Concur, Non-Concur, N/A]\">\n      <formula1>\"Concur,Non-Concur,N/A\"</formula1>\n   </dataValidation>\n   <dataValidation type=\"textLength\" \n                   operator=\"between\" \n                   sqref=\"P2:P1048576\" \n                   errorStyle=\"stop\" \n                   allowBlank=\"true\" \n                   errorTitle=\"G8 Comments\" \n                   error=\"Text length cannot exceed 500 characters.\">\n      <formula1>0</formula1>\n      <formula2>500</formula2>\n   </dataValidation>\n</dataValidations>\n\nData Validations are created but not enabled in Excel.  Manually enabling them in Excel produces the following XML snippet:\n\n<dataValidations count=\"2\">\n   <dataValidation type=\"list\" \n                   allowBlank=\"1\" \n                   showErrorMessage=\"1\" \n                   errorTitle=\"G8 Concurrence\" \n                   error=\"Valid values include: [Concur, Non-Concur, N/A]\" \n                   sqref=\"O2:O1048576\">\n      <formula1>\"Concur,Non-Concur,N/A\"</formula1>\n   </dataValidation>\n   <dataValidation type=\"textLength\" \n                   allowBlank=\"1\" \n                   showErrorMessage=\"1\" \n                   errorTitle=\"G8 Comments\" \n                   error=\"Text length cannot exceed 500 characters.\" \n                   sqref=\"P2:P1048576\">\n      <formula1>0</formula1>\n      <formula2>500</formula2>\n   </dataValidation>\n</dataValidations>", "id": 149508, "time": "2011-09-19T22:31:01Z", "bug_id": 51848, "creation_time": "2011-09-19T22:31:01Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 51848, "is_private": false, "text": "Unfortunately the code-snippet contains lots of references to other code which is not included, so it is hard to actually reproduce this. \n\nProgress on this can be sped up a lot if you can provide a self-contained snippet of code together with any sample-file that is used.", "id": 193120, "time": "2016-08-15T13:44:13Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-08-15T13:44:13Z", "attachment_id": null}]