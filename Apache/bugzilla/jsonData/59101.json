[{"count": 0, "tags": [], "bug_id": 59101, "attachment_id": null, "text": "On Oracle JDK 1.8.0_72 64-bit, Kubuntu 15.10, JMeter 2.11-3 package from standard ubuntu repository.\n\nSetup: 5 HTTP Request samplers which are configured identically other than the path (i.e. 5 different resources from the same server). \"Use KeepAlive\" is unchecked on all of them. For this test, the thread group is configured to use 1 thread and 1 loop (i.e. a single execution).\n\nExpected behavior:\nRFC 7230 section 6.6 states that\n\"A client that sends a \"close\" connection option MUST NOT send further\nrequests on that connection (after the one containing \"close\") and\nMUST close the connection after reading the final response message\ncorresponding to this request.\"\n\n\nSo the expected behavior is that after each request the connection should be closed, and a new one created for the next request.\n\nImportant note: the server in this case is not sending a \"Connection: close\" header in the response - the RFC recommends it do so, but it is not required. I'm guessing this may affect the client behavior.\n\nActual Behavior:\nAll implementations correctly send the \"Connection: close\" header to the server, however what follows depends on the implementation:\n\n- HttpClient 3 implementation works correctly.\n\n- Java implementation sends a request with the close header, reads the response and immediately sends the next request on the same connection. The server ignores the second request and closes the connection (as it must according to the RFC). The client then opens a new connection and retries the second (failed) request from the previous connection, which now succeeds, reads the response and once again sends the request for the next (3rd) resource on the same connection, and so on until the end. So effectively, each connection contains the proper request + response plus an extra failed request which will be retried on a subsequent connection. This certainly affects performance during a load test, and is incorrect and unnecessary.\n\n- HttpClient 4 implementation sends a request with the close header, reads the response and immediately sends the next request on the same connection, just like the Java implementation. The server ignores the second request and closes the connection (as it must according to the RFC). The client marks the second request as a failure, and opens a new connection in which it requests the next (3rd) request, etc. So effectively, every odd-numbered request succeeds, and every even-numbered request fails. This is a catastrophic failure of the client, which fails 50% of all requests.\n\nIn summary, 2 out of the 3 implementations don't handle connections properly when \"Use KeepAlive\" is unchecked, and the 3rd (HttpClient 3) functions correctly, but to my understanding it is deprecated and scheduled to be removed.", "id": 189028, "time": "2016-03-02T19:55:19Z", "creator": "amichai2@amichais.net", "creation_time": "2016-03-02T19:55:19Z", "is_private": false}, {"count": 1, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "is_private": false, "id": 189029, "creation_time": "2016-03-02T20:31:18Z", "time": "2016-03-02T20:31:18Z", "bug_id": 59101, "text": "Hi,\nFirst 2.11 is an old version now.\n\nNow for your report:\nFor 3) see Bug 58583, it is fixed in nightly build. Feedback welcome:\nhttps://builds.apache.org/job/JMeter-trunk/lastSuccessfulBuild/artifact/trunk/dist/\n\nFor 2), could you try setting http.java.sampler.retries=1 using nightly build\n\nCould you set on your JVM option:\n-Djavax.net.debug=all\n\nRun your test with Java Impl and attach the logs ?\n\nThanks for report and feedback.\nRegards", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 59101, "text": "Thanks for the quick response :-)\n\nI can confirm that the issue exists only when the server does not reply with a 'Connection: close' header.\n\nThe discussion in Bug #58583 appears correct (other than the subject - I'm not sure a server is misbehaving if it doesn't do something that the RFC does not require it to do).\n\nUsing the nightly build you linked to, the issue is indeed solved for HttpClient 4 implementation. Great!\n\nAs for the Java implementation, the issue is still there. Running jmeter.sh with JVM_ARGS=\"-Djavax.net.debug=all\" doesn't seem to add anything to jmeter.log. Is there anything else that needs to be configured? Am I looking in the right log file? Anything in particular to look for? (sorry, I'm new to JMeter)", "id": 189125, "time": "2016-03-04T23:27:56Z", "creator": "amichai2@amichais.net", "creation_time": "2016-03-04T23:27:56Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 59101, "is_private": false, "id": 189126, "time": "2016-03-04T23:32:53Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2016-03-04T23:32:53Z", "tags": [], "text": "(In reply to Amichai from comment #2)\n> Thanks for the quick response :-)\n> \n> I can confirm that the issue exists only when the server does not reply with\n> a 'Connection: close' header.\n> \n> The discussion in Bug #58583 appears correct (other than the subject - I'm\n> not sure a server is misbehaving if it doesn't do something that the RFC\n> does not require it to do).\n> \n> Using the nightly build you linked to, the issue is indeed solved for\n> HttpClient 4 implementation. Great!\n> \nThanks for confirmation\n\n> As for the Java implementation, the issue is still there. Running jmeter.sh\n> with JVM_ARGS=\"-Djavax.net.debug=all\" doesn't seem to add anything to\n> jmeter.log. Is there anything else that needs to be configured? Am I looking\n> in the right log file? Anything in particular to look for? (sorry, I'm new\n> to JMeter)\n\nHi, could you use wireshark and attach the capture ?\nThanks"}, {"count": 4, "tags": [], "creator": "amichai2@amichais.net", "text": "Created attachment 33633\nwireshark capture\n\nSure, here it is.", "id": 189169, "time": "2016-03-06T09:54:13Z", "bug_id": 59101, "creation_time": "2016-03-06T09:54:13Z", "is_private": false, "attachment_id": 33633}, {"count": 5, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "Doesn't it look as a Java Bug as per:\n- http://docs.oracle.com/javase/6/docs/technotes/guides/net/http-keepalive.html\n\n@Team, thoughts on this ?\n\n@Amichai, did you try with last Java 9 ?\n\nThanks", "id": 191569, "time": "2016-06-11T08:52:27Z", "bug_id": 59101, "creation_time": "2016-06-11T08:52:27Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 59101, "attachment_id": null, "is_private": false, "id": 196525, "time": "2017-01-28T13:26:11Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-01-28T13:26:11Z", "text": "Hello,\nShould we open a Java Bug if we do we need to build a simple Test case or just close it as WONTFIX ?\nhttps://docs.oracle.com/javase/8/docs/technotes/guides/net/http-keepalive.html\n\nRegards\nPhilippe"}]