[{"count": 0, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": 30817, "id": 170040, "time": "2013-09-11T17:18:25Z", "bug_id": 55547, "creation_time": "2013-09-11T17:18:25Z", "is_private": false, "text": "Created attachment 30817\nDon't strip the non-cacheable headers from a validated 304 response\n\nWhen mod_cache asks for a revalidation of a stale entry and the origin responds with a 304 (not that stale), the module strips the non-cacheable headers from the origin response and merges the stale headers to update the cache (before store_headers).\n\nThe problem is that mod_cache won't forward the non-cacheable headers to the client, for example if the 304 response contains both Set-Cookie and 'Cache-Control: no-cache=\"Set-Cookie\"' headers.\n\nThe issue was already stated in bug 54706, comment 3, although not related to the changes made there (before the Cache-Control no-cache=/no-store= handling, the bug could arise using the CacheIgnoreHeaders directive, and still can), hence the comment was not taken into account.\n\nI also proposed to compute the cacheable headers once in bug 54706, comment 9, and fix this issue together by maintaining the cacheable/response headers separatly, but this is surely an overkill patch (reintroducing the request_config in mod_cache to preserve the API) for the only purpose of this issue.\n\nFinally a simple patch can do the job, and is attached here."}, {"count": 1, "tags": [], "text": "Created attachment 30823\nFix headers forwarded from/as an origin 304 response\n\nIn the same case, when the conditional request meets the conditions of the stale then revalidated entry, the forwarded 304 response includes the entity headers merged from the cached headers before updating the entry.\n\nThis new patch does the same as the previous one but also stips the spurious entity headers on forwarded 304 responses.\n\nNote that since the entity headers are stripped elsewhere (line 1167, about 304 response as well and sections 10.3.3/10.3.5 of the RFC2616), the code has been moved to a function; and the missing headers \"Expires\" and \"Content-Location\" added to the list (the same list in server/protocol.c line 1225 includes them, should it not be an ap_ function to do that?).", "attachment_id": 30823, "bug_id": 55547, "id": 170059, "time": "2013-09-12T09:39:58Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2013-09-12T09:39:58Z", "is_private": false}, {"count": 2, "tags": [], "text": "Any news here ?\n\nCurrently the Set-Cookie of a 304 response from the origin server is stripped.\n\nRegards.", "is_private": false, "bug_id": 55547, "id": 170160, "time": "2013-09-18T21:01:53Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2013-09-18T21:01:53Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "id": 170161, "time": "2013-09-18T21:05:44Z", "bug_id": 55547, "creation_time": "2013-09-18T21:05:44Z", "is_private": false, "text": "> Currently the Set-Cookie of a 304 response from the origin server is stripped.\nOnly with Cache-Control: no-cache=\"Set-Cookie\" or alike, of course."}, {"attachment_id": null, "tags": [], "creator": "christophe.jaillet@wanadoo.fr", "is_private": false, "count": 4, "id": 177222, "time": "2014-08-18T07:39:46Z", "bug_id": 55547, "creation_time": "2014-08-18T07:39:46Z", "text": "Fixed and released in 2.4.10"}]