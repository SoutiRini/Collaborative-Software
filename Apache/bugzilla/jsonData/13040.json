[{"count": 0, "tags": [], "bug_id": 13040, "attachment_id": null, "text": "org.apache.catalina.core.ApplicationContext.getContext(String uri) method was \nwritten to return the current context whenever the uri passed into it was \na \"sub-dir\" of the current context's uri.\n\nfor example, calling getContext(\"/store/common\") from within a context that \nhad as it's uri: \"/store\", would always return the context of \"/store\", even \nif \"/store/common\" was a valid context", "id": 23463, "time": "2002-09-26T17:54:07Z", "creator": "rsmith@soe.sony.com", "creation_time": "2002-09-26T17:54:07Z", "is_private": false}, {"count": 1, "attachment_id": null, "creator": "rsmith@soe.sony.com", "is_private": false, "id": 23465, "time": "2002-09-26T18:21:04Z", "bug_id": 13040, "creation_time": "2002-09-26T18:21:04Z", "tags": [], "text": "*** Bug 11865 has been marked as a duplicate of this bug. ***"}, {"count": 2, "tags": [], "bug_id": 13040, "text": "*** Bug 11652 has been marked as a duplicate of this bug. ***", "id": 23467, "time": "2002-09-26T18:21:51Z", "creator": "rsmith@soe.sony.com", "creation_time": "2002-09-26T18:21:51Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": 3247, "creator": "rsmith@soe.sony.com", "is_private": false, "id": 23469, "time": "2002-09-26T18:24:50Z", "bug_id": 13040, "creation_time": "2002-09-26T18:24:50Z", "tags": [], "text": "Created attachment 3247\nproposed fix (diff)"}, {"count": 4, "tags": [], "bug_id": 13040, "is_private": false, "text": "The problem is much more trivial. We will always have a contextPath with a\nlength > 0 since we always append \"/\" if there isn't one already.\n\n$ diff -u ApplicationContext.java-2002-10-21 ApplicationContext.java\n--- ApplicationContext.java-2002-10-21\tMon Sep 23 11:23:16 2002\n+++ ApplicationContext.java\tTue Oct 22 17:55:08 2002\n@@ -442,7 +442,7 @@\n         String contextPath = context.getPath();\n         if (!contextPath.endsWith(\"/\"))\n             contextPath = contextPath + \"/\";\n-        if ((contextPath.length() > 0) && (uri.startsWith(contextPath))) {\n+        if ((contextPath.length() > 1) && (uri.startsWith(contextPath))) {\n             return (this);\n         }\n \nMartin Algesten", "id": 24999, "time": "2002-10-22T16:57:58Z", "creator": "puckman@taglab.com", "creation_time": "2002-10-22T16:57:58Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "In the general case, \"/store/common\" is supposed to return context \"/store\" if\nit exists.\nThe current algorithm has a big problem with the root context, as pointed out by\nMartin. However, it actually has the same problem for all contexts, so I think\nthere's a spec problem here.", "is_private": false, "bug_id": 13040, "id": 25024, "time": "2002-10-23T06:53:04Z", "creator": "remm@apache.org", "creation_time": "2002-10-23T06:53:04Z", "attachment_id": null}, {"count": 6, "attachment_id": null, "creator": "puckman@taglab.com", "is_private": false, "id": 25033, "time": "2002-10-23T10:08:45Z", "bug_id": 13040, "creation_time": "2002-10-23T10:08:45Z", "tags": [], "text": "The bit of code we're talking about is there in order to always allow for \ngetting the current context, even if crossContext=\"false\" (god knows why \nanyone would like to get the current context like that, but allowing it surely \ndoesn't hurt).\n\nI don't understand why we are adding on a trailing \"/\" in case the contextPath \ndoesn't have one. That seems wrong to me since it would require the caller to \nsay \"/store/\" in order to trigger the optimisation. The incoming uri we need \nto handle could be on the forms (have I missed anyone?):\n\"/\"\n\"/store\"\n\"/store/\"\n\"/store/common\"\n\"/store/common/even/more\"\n\nThe context paths can be on the forms (again, correct me if I'm wrong):\n\"\"\n\"/store\"\n\nIt seems we would need to treat the ROOT context differently to the rest of \nthem. A propose for the fix would then be:\n\n----------------------------------------------------------------------\n--- ApplicationContext.java-2002-10-21  Mon Sep 23 11:23:16 2002\n+++ ApplicationContext.java     Wed Oct 23 10:54:51 2002\n@@ -439,13 +439,16 @@\n             return (null);\n\n         // Return the current context if requested\n-        String contextPath = context.getPath();\n-        if (!contextPath.endsWith(\"/\"))\n-            contextPath = contextPath + \"/\";\n-        if ((contextPath.length() > 0) && (uri.startsWith(contextPath))) {\n-            return (this);\n-        }\n-\n+       if ( context.getPath().equals( \"\" ) ) {\n+         if ( uri.equals( \"/\" ) ) {\n+           return (this);\n+         }\n+       } else {\n+         if ( uri.startsWith( context.getPath() ) ) {\n+           return (this);\n+         }\n+       }\n+\n         // Return other contexts only if allowed\n         if (!context.getCrossContext())\n             return (null);\n----------------------------------------------------------------------\n\n\nI've tested this with the following JSP code:\n<%\n  ServletContext ctx = getServletContext();\n  System.out.println( \"/: \"+ctx.getContext( \"/\" ) );\n  System.out.println( \"/publisher: \"+ctx.getContext( \"/publisher\" ) );\n  System.out.println( \"/publisher/: \"+ctx.getContext( \"/publisher/\" ) );\n  System.out.println( \"/publisher/protected: \"+ctx.getContext\n( \"/publisher/protected\" ) );\n  System.out.println( \"/publisher/protected/: \"+ctx.getContext\n( \"/publisher/protected/\" ) );\n%>\n\nWith crossContext=\"false\".\n\nRunning the JSP in the ROOT context gives me:\n/: org.apache.catalina.core.ApplicationContextFacade@a45a24\n/publisher: null\n/publisher/: null\n/publisher/protected: null\n/publisher/protected/: null\n\nRunning the JSP in the /publisher context gives me:\n/: null\n/publisher: org.apache.catalina.core.ApplicationContextFacade@15c6c8d\n/publisher/: org.apache.catalina.core.ApplicationContextFacade@15c6c8d\n/publisher/protected: org.apache.catalina.core.ApplicationContextFacade@15c6c8d\n/publisher/protected/: \norg.apache.catalina.core.ApplicationContextFacade@15c6c8d\n\nMartin Algesten"}, {"count": 7, "tags": [], "bug_id": 13040, "text": "The \"/\" is added to avoid matching stuff like:\nContext name: \"/foo\"\nUri: \"/foobar\"\n\nI still think the spec is bad, and should modify to specify that the desired\ncontext path should be matched exactly.\nBTW, there's a Watchdog test about this (unfortunately). I wonder why, since the\nAPI Javadocs are quite unclear.", "id": 25038, "time": "2002-10-23T12:41:34Z", "creator": "remm@apache.org", "creation_time": "2002-10-23T12:41:34Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "text": "Agreed, we need to add \"/\" to the end, but that goes for the incoming URI as \nwell. We also need to treat the ROOT context differently. I agree the specs \nare bad, but we need to solve this with what we got, since the getContext() \nmethod as it currently stands isn't useful.\n\n-----------------------------------------------------------\n--- ApplicationContext.java-2002-10-21  Mon Sep 23 11:23:16 2002\n+++ ApplicationContext.java     Wed Oct 23 14:08:41 2002\n@@ -439,12 +439,25 @@\n             return (null);\n\n         // Return the current context if requested\n-        String contextPath = context.getPath();\n-        if (!contextPath.endsWith(\"/\"))\n-            contextPath = contextPath + \"/\";\n-        if ((contextPath.length() > 0) && (uri.startsWith(contextPath))) {\n-            return (this);\n-        }\n+       String contextPath = context.getPath();\n+       if ( contextPath.equals( \"\" ) ) {\n+         if ( uri.equals( \"/\" ) ) {\n+           return (this);\n+         }\n+       } else {\n+         String compareUri = uri;\n+         if ( !uri.endsWith( \"/\" ) ) {\n+           compareUri = compareUri+\"/\";\n+         }\n+         if ( !contextPath.endsWith( \"/\" ) ) {\n+           contextPath = contextPath+\"/\";\n+         }\n+         if ( compareUri.startsWith( contextPath ) ) {\n+           return (this);\n+         }\n+       }\n+\n+       System.out.println( context.getCrossContext() );\n\n         // Return other contexts only if allowed\n         if (!context.getCrossContext())\n-----------------------------------------------------------\n\nMartin Algesten\n", "is_private": false, "bug_id": 13040, "id": 25043, "time": "2002-10-23T13:18:08Z", "creator": "puckman@taglab.com", "creation_time": "2002-10-23T13:18:08Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "ok, from the servlet 2.3 spec:\n\n-----------------------------------------\ngetContext(String)\n  public ServletContext getContext(java.lang.String uripath) \n\n    Returns a ServletContext object that corresponds to a specified URL on the\n    server.\n    This method allows servlets to gain access to the context for various \nparts of\n    the server, and as needed obtain RequestDispatcher objects from the \ncontext.\n    The given path must be begin with \u201c/\u201d, is interpreted relative to the\n    server\u2019s document root and is matched against the context roots of other \nweb\n    applications hosted on this container.\n    In a security conscious environment, the servlet container may return null\n    for a given URL.\n\n    Parameters:\n    uripath - a String specifying the context path of another web application \nin\n    the container.\n\n    Returns: the ServletContext object that corresponds to the named URL, or\n    null if either none exists or the container wishes to restrict this access.\n-----------------------------------------\n\n\nThere doesn't appear to be anything in here at all suggesting that when you \ncall getContext(String) with a parameter specifying a uri which is a sub-dir \nof the current context's uri, it should ignore your request and simply return \nthe current context.\n\nI also beleive that the following assumption is incorrect: \"In the general \ncase, '/store/common' is supposed to return context '/store' if\nit exists.\".\n \n  The spec states that the given path is \"matched\" against the context roots \nof other web apps.  That implies to me that it must match exactly.\n\nThe solutions provided here do not address this bug: \"can't retrieve external \ncontext who's uri is a sub-dir of current context\".  Each of them actually \nstill has the same problem (except for the initial postings attachment).\n\n\nHere's a solution, with minimal changes, that fixes this bug:\n\n\n-----------------------------------------\n445c445\n<         if ((contextPath.length() > 0) && (uri.startsWith(contextPath))) {\n---\n>         if ((contextPath.length() > 1) && (uri.equals(contextPath))) {\n-----------------------------------------\n\n\nRyan Smith", "is_private": false, "bug_id": 13040, "id": 25072, "time": "2002-10-23T21:07:55Z", "creator": "rsmith@soe.sony.com", "creation_time": "2002-10-23T21:07:55Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 13040, "is_private": false, "text": "That doesn't fix it properly. To trigger the optimisation you would need to send\nin the uri \"/store/\" to get a match. Agreed that if we can ditch handling the\n\"/store/common\" uri, we could make this work much easier.\n\n--- ApplicationContext.java-2002-10-21\tMon Sep 23 11:23:16 2002\n+++ ApplicationContext.java\tThu Oct 24 10:30:56 2002\n@@ -439,12 +439,13 @@\n             return (null);\n \n         // Return the current context if requested\n-        String contextPath = context.getPath();\n-        if (!contextPath.endsWith(\"/\"))\n-            contextPath = contextPath + \"/\";\n-        if ((contextPath.length() > 0) && (uri.startsWith(contextPath))) {\n-            return (this);\n-        }\n+\tString contextPath = context.getPath();\n+\tif ( contextPath.equals( \"\" ) && uri.equals( \"/\" ) ||\n+\t     !contextPath.equals( \"\" ) && uri.equals( contextPath ) ) {\n+\t  return (this);\n+\t}\n+\n+\tSystem.out.println( context.getCrossContext() );\n \n         // Return other contexts only if allowed\n         if (!context.getCrossContext())\n\nMartin Algesten\n", "id": 25104, "time": "2002-10-24T09:33:43Z", "creator": "puckman@taglab.com", "creation_time": "2002-10-24T09:33:43Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 13040, "is_private": false, "id": 25378, "attachment_id": null, "creator": "puckman@taglab.com", "creation_time": "2002-10-30T16:41:53Z", "time": "2002-10-30T16:41:53Z", "text": "That System.out should of course not be there.\n\n--- ApplicationContext.java-2002-10-21  Mon Sep 23 11:23:16 2002\n+++ ApplicationContext.java     Wed Oct 30 16:40:08 2002\n@@ -439,12 +439,11 @@\n             return (null);\n\n         // Return the current context if requested\n-        String contextPath = context.getPath();\n-        if (!contextPath.endsWith(\"/\"))\n-            contextPath = contextPath + \"/\";\n-        if ((contextPath.length() > 0) && (uri.startsWith(contextPath))) {\n-            return (this);\n-        }\n+       String contextPath = context.getPath();\n+       if ( contextPath.equals( \"\" ) && uri.equals( \"/\" ) ||\n+            !contextPath.equals( \"\" ) && uri.equals( contextPath ) ) {\n+         return (this);\n+       }\n\n         // Return other contexts only if allowed\n         if (!context.getCrossContext())\n"}, {"count": 12, "tags": [], "bug_id": 13040, "text": "*** Bug 14114 has been marked as a duplicate of this bug. ***", "id": 25415, "time": "2002-10-31T05:44:11Z", "creator": "remm@apache.org", "creation_time": "2002-10-31T05:44:11Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 13040, "text": "This is a serious bug that needs to be fixed.\nI agree that the last patch submited by Martin Algesten lookes nice.\n\nPlease add it yo the CVS tree.\nThanks!\n\nChrister Grims\u00e6th", "id": 27402, "time": "2002-12-04T12:29:41Z", "creator": "chrigri@msn.com", "creation_time": "2002-12-04T12:29:41Z", "is_private": false, "attachment_id": null}, {"count": 14, "attachment_id": null, "creator": "puckman@taglab.com", "text": "*** Bug 10544 has been marked as a duplicate of this bug. ***", "id": 29535, "time": "2003-01-16T13:57:56Z", "bug_id": 13040, "creation_time": "2003-01-16T13:57:56Z", "tags": [], "is_private": false}, {"count": 15, "tags": [], "text": "*** Bug 16258 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 13040, "id": 29713, "time": "2003-01-20T15:05:02Z", "creator": "remm@apache.org", "creation_time": "2003-01-20T15:05:02Z", "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 13040, "text": "Is there a chance that this bug gets fixed within 2003? For us it's really a \nshow stopper. \nThanks a lot,\nChristian", "id": 34698, "time": "2003-04-08T08:32:07Z", "creator": "christian.wicke@rwg.de", "creation_time": "2003-04-08T08:32:07Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 13040, "text": " Is this bug solved?", "id": 57956, "time": "2004-05-24T12:26:15Z", "creator": "maranda@dbs.es", "creation_time": "2004-05-24T12:26:15Z", "is_private": false, "attachment_id": null}, {"count": 18, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 57977, "time": "2004-05-24T18:18:18Z", "bug_id": 13040, "creation_time": "2004-05-24T18:18:18Z", "tags": [], "text": "Not completely no. The most recent debate on this is here:\nhttp://marc.theaimsgroup.com/?l=tomcat-dev&m=108109687130165&w=2"}, {"count": 19, "tags": [], "bug_id": 13040, "text": "Can you give us a short status about this bug ? the last entry is April '04 ?", "id": 70494, "time": "2005-02-04T09:39:53Z", "creator": "Martin.Gritsch@fiducia.de", "creation_time": "2005-02-04T09:39:53Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "bug_id": 13040, "attachment_id": null, "text": "No change.\n\nWhat is needed to move this forward is input from the servlet spec team on the\nproposal in http://marc.theaimsgroup.com/?l=tomcat-dev&m=108109687130165&w=2\n\nThis is still on my todo list - just not going anywhere at the moment. If you\nwant to try and get some spec team input that would be great.", "id": 70515, "time": "2005-02-04T21:30:10Z", "creator": "markt@apache.org", "creation_time": "2005-02-04T21:30:10Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 13040, "is_private": false, "text": "After some discussion on what the spec actually means on the dev list, we have\nagreed a way forward for this bug and I have just commited a change that fixes\nthis issue for TC4. A similar change will be ported to TC5.\n\nThe dev discussion can be found on this thread\nhttp://marc.theaimsgroup.com/?l=tomcat-dev&m=113286089307014&w=2", "id": 83210, "time": "2005-12-04T19:36:59Z", "creator": "markt@apache.org", "creation_time": "2005-12-04T19:36:59Z", "attachment_id": null}]