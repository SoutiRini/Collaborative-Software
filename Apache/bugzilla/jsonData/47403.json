[{"count": 0, "tags": [], "bug_id": 47403, "attachment_id": 23848, "is_private": false, "id": 128158, "time": "2009-06-22T14:28:18Z", "creator": "joeslice@gmail.com", "creation_time": "2009-06-22T14:28:18Z", "text": "Created attachment 23848\nCells is now backed by a linked list.\n\nCurrently HSSFRow uses an array that occasionally needs to be resized, and inserting a column in the middle is not as efficient as it could be.\n\nPlease see the attached patch.\n\nI've also added a method insertCell to make it more convenient to insert into the middle of a row."}, {"count": 1, "tags": [], "text": "Thanks for the patch.  Adding the method insertCell() to HSSFRow is a good idea.\n\nI'm not sure however that the proposed optimisation is appropriate, given that it seems to be motivated by a method that isn't present yet.  I did a quick performance test, running the existing 997 junits six times, with and without the change.  My results show a degradation of about 5% (times in seconds):\n\npoi trunk   (8.781, 9.375, 8.453, 8.453, 8.484, 8.453)\nwith change (9.078, 9.156, 9.125, 9.203, 9.047, 9.094)\n\nHopefully the POI unit tests are a fair representation of general POI usage (they *should* be, because many were based on example code posted to bugzilla).  I guess HSSFRow was written assuming that client code would generally use random access to read the cells.\n\n\nIf you could re-do the patch just for HSSFRow.insertCell(), that is likely to get applied.  However the optimisation needs more justification/tweaking.", "is_private": false, "id": 128160, "creator": "josh@apache.org", "time": "2009-06-22T17:09:37Z", "bug_id": 47403, "creation_time": "2009-06-22T17:09:37Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 47403, "text": "This fix became no longer necessary after 46266 was patched.  Thanks for the consideration, I'm marking this as resolved, as it's not really an issue anymore.", "id": 128214, "time": "2009-06-23T13:50:01Z", "creator": "joeslice@gmail.com", "creation_time": "2009-06-23T13:50:01Z", "tags": [], "is_private": false}]