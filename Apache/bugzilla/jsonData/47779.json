[{"count": 0, "tags": [], "bug_id": 47779, "attachment_id": null, "text": "XMLUtils.createElementInSignatureSpace is not threadsafe.\n\nThere is a chance of getting a ConcurrentModificationException if two threads try to access this method at the same time because of an unsynchronized access to the Hashtable named 'namePrefixes'.", "id": 130126, "time": "2009-09-03T06:00:21Z", "creator": "mirko@zeiban.de", "creation_time": "2009-09-03T06:00:21Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 47779, "attachment_id": 24204, "id": 130130, "time": "2009-09-03T06:44:25Z", "creator": "mirko@zeiban.de", "creation_time": "2009-09-03T06:44:25Z", "is_private": false, "text": "Created attachment 24204\npatch"}, {"count": 2, "tags": [], "bug_id": 47779, "text": "Created attachment 24205\n2nd patch\n\nfixes the same problem in another method", "id": 130132, "time": "2009-09-03T06:51:14Z", "creator": "mirko@zeiban.de", "creation_time": "2009-09-03T06:51:14Z", "is_private": false, "attachment_id": 24205}, {"count": 3, "tags": [], "bug_id": 47779, "attachment_id": null, "text": "\nGood catch! Would it not be better to just declare namePrefixes as:\n\nCollections.synchronizedMap(new HashMap());\n\nThat would remove the call to Collections.unmodifiableMap each time the method is invoked, as well as the synchronized block.\n\nColm.", "id": 130148, "time": "2009-09-04T08:43:32Z", "creator": "coheigea@apache.org", "creation_time": "2009-09-04T08:43:32Z", "is_private": false}, {"text": "\nFix applied.\n\nColm.", "tags": [], "bug_id": 47779, "attachment_id": null, "count": 4, "id": 130973, "time": "2009-10-08T04:31:22Z", "creator": "coheigea@apache.org", "creation_time": "2009-10-08T04:31:22Z", "is_private": false}, {"text": "\nFix applied.\n\nColm.", "tags": [], "creator": "coheigea@apache.org", "attachment_id": null, "count": 5, "id": 130974, "time": "2009-10-08T04:31:22Z", "bug_id": 47779, "creation_time": "2009-10-08T04:31:22Z", "is_private": false}]