[{"count": 0, "tags": [], "bug_id": 56296, "attachment_id": null, "is_private": false, "id": 173990, "time": "2014-03-21T09:57:15Z", "creator": "hugo.lumsdon@blackrock.com", "creation_time": "2014-03-21T09:57:15Z", "text": "We are seeing the following sporadic exceptions in catalina.out:\n\nMar 21, 2014 2:42:13 AM org.apache.coyote.ajp.AjpNioProcessor process\nSEVERE: Error processing request\njava.nio.BufferOverflowException\n        at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:183)\n        at org.apache.coyote.ajp.AjpNioProcessor.output(AjpNioProcessor.java:296)\n        at org.apache.coyote.ajp.AbstractAjpProcessor$SocketOutputBuffer.doWrite(AbstractAjpProcessor.java:1195)\n        at org.apache.coyote.Response.doWrite(Response.java:520)\n        at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:408)\n        at org.apache.tomcat.util.buf.ByteChunk.flushBuffer(ByteChunk.java:480)\n        at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:359)\n        at org.apache.catalina.connector.OutputBuffer.close(OutputBuffer.java:309)\n        at org.apache.catalina.connector.Response.finishResponse(Response.java:510)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:435)\n        at org.apache.coyote.ajp.AjpNioProcessor.process(AjpNioProcessor.java:177)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:607)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1721)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1679)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n        at java.lang.Thread.run(Thread.java:744\n\n\nWe have correlated these with the following error in our application log:\n\n2014-03-21 02:42:13,753 (tomcat-exec-13) ERROR [xxxxx.StreamingManagerImpl] Error streaming document [/xxxxxxx/responsible-investment-report-2011.pdf]\nClientAbortException:  java.io.IOException: Broken pipe\n        at org.apache.catalina.connector.OutputBuffer.realWriteBytes(OutputBuffer.java:413)\n        at org.apache.tomcat.util.buf.ByteChunk.flushBuffer(ByteChunk.java:480)\n        at org.apache.tomcat.util.buf.ByteChunk.append(ByteChunk.java:366)\n        at org.apache.catalina.connector.OutputBuffer.writeBytes(OutputBuffer.java:438)\n        at org.apache.catalina.connector.OutputBuffer.write(OutputBuffer.java:426)\n        at org.apache.catalina.connector.CoyoteOutputStream.write(CoyoteOutputStream.java:91)\n        at org.apache.catalina.servlets.DefaultServlet.copyRange(DefaultServlet.java:2032)\n        at org.apache.catalina.servlets.DefaultServlet.copy(DefaultServlet.java:1871)\n        at org.apache.catalina.servlets.DefaultServlet.serveResource(DefaultServlet.java:959)\n        at org.apache.catalina.servlets.DefaultServlet.doGet(DefaultServlet.java:409)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:620)\n\n\n\nWe want to understand whether the error is benign and simply caused by a client dropping connection mid-download.  Or if it's the other way round - for example a slow network download speed to the client causes the buffer overflow and the connection drop."}, {"count": 1, "tags": [], "bug_id": 56296, "text": "The trigger for this series of stack traces is the java.io.IOException: Broken pipe which normally indicates that the client has dropped the connection or a network issue that looks like the client has dropped the connection.\n\nThe initial error causes a write to fail and as a result the buffer is not cleared (it should be). The next attempt to write therefore fails because the buffer has not been cleared.\n\nI'll see what I can do to fix this.", "id": 174040, "time": "2014-03-23T22:08:25Z", "creator": "markt@apache.org", "creation_time": "2014-03-23T22:08:25Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "I've back-ported the AJP NIO fix to 7.0.x and it will be included in 7.0.53 onwards.\n\n*** This bug has been marked as a duplicate of bug 53119 ***", "attachment_id": null, "bug_id": 56296, "id": 174041, "time": "2014-03-23T22:58:55Z", "creator": "markt@apache.org", "creation_time": "2014-03-23T22:58:55Z", "is_private": false}]