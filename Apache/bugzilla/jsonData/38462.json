[{"count": 0, "attachment_id": null, "creator": "serkom@t-online.de", "text": "This nearly addresses the same issue as report #31869.\nWe 'd like to have the possibility to upload files and directly send them with \nmailer2, without including scriptlets.\nWe build a solution and ask if it would be a benefit to others.\nWhat we've done is:\nExpose the content of a multipart upload to the jsp via a tag 'upload' using \nthe commons-fileupload library, wrapping the 'FileItem' to a DataSource.\nAdding a new attribute 'upload' to the append-tag, which accepts a DataSource.\nSo sending a mail with an uploaded file is done by the lines:\n\n<mt:upload var=\"upl\"/>\n<c:if test=\"${upl.file1Ok}\"> \n  <mt:attach upload=\"${upl.file1Data}\" />\n</c:if>\t\n\nWe've tested the build with the sandbox mailer2 build and it works.\n\nI add the new classes, changes, example-jsp and requirements here:\n1. Two new classes\n------------------\nUploadTag.java\n------------------\npackage org.apache.taglibs.mailer2;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.logging.Logger;\n\nimport javax.activation.DataSource;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.jsp.JspException;\nimport javax.servlet.jsp.PageContext;\nimport javax.servlet.jsp.tagext.BodyTagSupport;\n\nimport org.apache.commons.fileupload.FileItem;\nimport org.apache.commons.fileupload.FileItemFactory;\nimport org.apache.commons.fileupload.FileUpload;\nimport org.apache.commons.fileupload.disk.DiskFileItem;\nimport org.apache.commons.fileupload.disk.DiskFileItemFactory;\nimport org.apache.commons.fileupload.servlet.ServletFileUpload;\nimport org.apache.commons.fileupload.servlet.ServletRequestContext;\n\n/**\n * JSP tag <b>mt:upload</b> is used to construct the list of the FileItems from\n * the multipart response to be used for preparing the mail.\n * \n * @author Karl-Heinz Sergel\n * @version 2.0\n * \n * @jsp.tag name=\"upload\" body-content=\"JSP\" display-name=\"mt:upload\"\n *          description=\"JSP tag <mt:pload> is used to extract uploaded file\n *          information to be included in an e-mail message. It is a standalone\n *          element.\n */\n\npublic class UploadTag extends BodyTagSupport {\n  private static final String UPLOAD = \"upload\";\n  private Logger  log       = Logger.getLogger(this.getClass().getName());\n  \n  /**\n   * Default attributename for exposing upload multipart-values to the jsp.\n   */\n  private String  var       = UPLOAD;\n\n\n  /**\n   * indicates kind of upload\n   */\n  private boolean multipart = false;\n\n  public UploadTag() {\n    super();\n    init();\n  }\n\n  public void init() {\n    super.release();\n    var = UPLOAD;\n    multipart = false;\n  }\n\n  public int doEndTag() throws JspException {\n    HashMap map = new HashMap();\n    try {\n      ServletRequestContext psrc = new ServletRequestContext(\n          (HttpServletRequest) pageContext.getRequest());\n      boolean isMultipart = FileUpload.isMultipartContent(psrc);\n      if (isMultipart) {\n        setMultipart(true);\n        FileItemFactory factory = new DiskFileItemFactory();\n        ServletFileUpload upload = new ServletFileUpload(factory);\n        List items = upload.parseRequest(psrc);\n        for (Iterator it = items.iterator(); it.hasNext();) {\n          FileItem item = (FileItem) it.next();\n          if (item.isFormField()) {\n            map.put(item.getFieldName(), item.getString());\n          } else {\n            String baseName = item.getFieldName();\n            map.put(baseName, item.getName());\n            if (item.getSize() > 0) {\n              DataSource wds = new WrappedFileItem(item);\n              map.put(baseName + \"Data\", wds);\n              map.put(baseName + \"Ok\", new Boolean(true));\n              map.put(baseName + \"Size\", new Long(item.getSize()));\n            } else {\n              map.put(baseName + \"Ok\", new Boolean(false));\n            }\n          }\n        }\n      }\n      if (var == null)\n        var = UPLOAD;\n      map.put(\"isMultipart\", new Boolean(isMultipart));\n      pageContext.setAttribute(var, map, PageContext.PAGE_SCOPE);\n    } catch (Exception ex) {\n      throw new JspException(\"ml:upload: error processing upload: \", ex);\n    }\n    return EVAL_PAGE;\n  }\n\n  public boolean isMultipart() {\n    return multipart;\n  }\n\n  public void setMultipart(boolean multipart) {\n    this.multipart = multipart;\n  }\n\n  public String getVar() {\n    return var;\n  }\n\n  public void setVar(String var) {\n    this.var = var;\n  }\n}\n\n------------------\nWrappedFileItem.java\n------------------\npackage org.apache.taglibs.mailer2;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\n\nimport javax.activation.DataSource;\n\nimport org.apache.commons.fileupload.FileItem;\n\npublic class WrappedFileItem implements DataSource {\n \n    private FileItem fileItem;\n\n    public WrappedFileItem(FileItem fileItem) {\n      this.fileItem = fileItem;\n    }\n    \n    public String getContentType() {\n      return fileItem.getContentType();\n    }\n\n    public InputStream getInputStream() throws IOException {\n      return fileItem.getInputStream();\n    }\n\n    /**\n     * this is nessessary because of the different behavier of the brousers. IE\n     * returns the full pathname as filename, whereas firefox returns the\n     * filename only, as needed.\n     * \n     * \n     */\n    public String getName() {\n      File file = new File(fileItem.getName());\n      return file.getName();\n    }\n\n    public OutputStream getOutputStream() throws IOException {\n      return fileItem.getOutputStream();\n    }\n}\n\n----------------------\n2. Changes to AttachTag\n----------------------\nadd Attribute\n-------------\n    private DataSource upload     = null;\n\n-----------------\nadd Getter/Setter\n-----------------\n   public DataSource getUpload() {\n        return upload;\n    }\n    \n    /**\n     * Set the DataSource for this  attachment.\n     * @param DataSource of uploaded file to attach\n     */\n    public void setUpload(DataSource upload) {\n        this.upload = upload;\n    }\n\n-------------------------\ninsert into doEndTag.java\n-------------------------\n...\n        try {\n          // This is to support the uploaded files khs 2006/01/31\n          if (upload != null) {\n            mbp.setDataHandler(new DataHandler(upload));\n            localName = upload.getName();\n            mbp.setHeader(\"Content-Type\", upload.getContentType());\n          }\n          else if (filename != null) {\n...\n\n-----------------------------------\ninsert new tag into xml/mailer2.xml\n-----------------------------------\n            <tag>\n                <description><![CDATA[JSP tag <mt:upload> is used to expose the \nuploaded content of the mulripart message to the jsp-page. <mt:upload> does not \nhave any child tags.]]></description>\n                <display-name>mt:upload</display-name>\n                <name>upload</name>\n                <tag-class>org.apache.taglibs.mailer2.UploadTag</tag-class>\n                <body-content>empty</body-content>\n                <availability>1.1</availability>\n                <restrictions>None</restrictions>\n                <attribute>\n                    <description>The prefix of the exposed content. Defaults \nto 'upload'</description>\n                    <name>var</name>\n                    <required>no</required>\n                    <rtexprvalue>yes</rtexprvalue>\n                    <availability>1.1</availability>\n                </attribute>\n\t\t\t\t\t\t\t\t<variables>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</variables>\n                <example>\n                    <usage>\n                        <comment>Example usage of the &lt;mt:upload&gt; \ntag.</comment>\n                        <code><![CDATA[\nThe multipart content is exposed in two differnt forms.\n${upl.upl.isMultipart} return true, if multipart content is exposed.\nFf false is returned, the fields are to be accessed via param.<filedname>\n\nThe content of normal form-fields can be accessed with\n(given <mt:upload var=\"upl\"/>)\n${upl.<name of the field>}\nThe content of a file-filed be accessed with\n${upl.<name of the field>} = browser retured name of the uploaded file,\n${upl.<name of the field>Ok} = the DataSource is ready,\n${upl.<name of the field>Size} = size in byte of the uploaded file,\n${upl.<name of the field>Data} = a DataSource representation of the uploaded \nfile,\n${upl.<name of the field>Data.name} = the filename of the uploaded file,\n${upl.<name of the field>Data.contentType} = the contentType of the uploaded \nfile.\n\n<mt:upload var=\"upl\"/>\n<c:if test=\"${upl.isMultipart == true}\">\n\t<mt:attach upload=\"${upl.file1Data}\"/>\n</c:if>\n\n]]></code>\n                    </usage>\n                </example>\n            </tag>\n\n-----------------------------------------------------\nadd new attribute for tag append into xml/mailer2.xml\n-----------------------------------------------------\n                <attribute>\n                    <description>A upload file exposed with a previous \n&lt;mt:upload var=\"...\"&gt;</description>\n                    <name>upload</name>\n                    <required>no</required>\n                    <rtexprvalue>yes</rtexprvalue>\n                    <type>javax.activation.DataSource</type>\n                    <availability>1.1</availability>\n                </attribute>\n\n-----------------------------------\nadd sendUpload.jsp to examples\n-----------------------------------\n<!doctype html PUBLIC \"-//W3C//DTD XHTML 1.0 \nStrict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n<%@ taglib prefix=\"mt\" uri=\"http://jakarta.apache.org/taglibs/mailer2\" %>\n<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n\n<!-- ## expose the multipart content -->\n<mt:upload var=\"upl\"/>\n\n<html>\n<head>\n<title>simple mail with upload file example using mt:send and mt:upload</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"mailer2.css\"/>\n<link rel=\"home\" href=\"index.jsp\"/>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n</head>\n\n\n<body>\n<h1>simple mail with Upload example using mt:send and mt:upload</h1>\nsending to \"${email}\" via \"${server}\".<br>\n\n\n<!-- ## if we have an multipart upload, all must be set from var defined in the \nupload-tag -->\n<c:choose>\n\t<c:when test=\"${upl.isMultipart == true}\">\n\t\t<c:set var=\"feld1\"  value=\"${upl.feld1}\" scope=\"session\"/>\n\t\t<c:set var=\"feld2\"  value=\"${upl.feld2}\" scope=\"session\"/>\n\t\t<c:set var=\"email\"  value=\"${upl.email}\" scope=\"session\"/>\t\n\t\t<c:set var=\"server\" value=\"${upl.server}\" scope=\"session\"/>\n\t\t<c:if test=\"${upl.file1Ok == true}\" >\n\t\t\t<c:set var=\"file1\" value=\"${upl.file1}\" scope=\"page\"/>\n\t\t</c:if>\n\t</c:when>\n\t<c:otherwise>\n\t\t<c:set var=\"feld1\"  value=\"${param.feld1}\" scope=\"session\"/>\n\t\t<c:set var=\"feld2\"  value=\"${param.feld2}\" scope=\"session\"/>\n\t\t<c:set var=\"email\"  value=\"${param.email}\" scope=\"session\"/>\t\n\t\t<c:set var=\"server\" value=\"${param.server}\" scope=\"session\"/>\n\t</c:otherwise>\n</c:choose>\n\n<!-- ## for test purpose only -->\nfeld1 = ${feld1} <br>\nfeld2 = ${feld2} <br>\nfile1 = ${upl.file1} <br>\ncontent = ${upl.file1Data} <br>\nsize = ${upl.file1Size} Byte <br>\n\n<!-- ## test whatever seems nessessary -->\n<c:if test=\"${not empty feld1}\">\n    <mt:mail \t\n\tvar=\"message\" from=\"${email}\" \n\tsubject=\"upload File example using mt:send and mt:upload\" \n\tserver=\"${server}\" \n\tbackground=\"false\">\n        <mt:addrecipient type=\"to\" name=\"The User\">${email}</mt:addrecipient>\n        Hello World,\n\t<daten>\n\t\t<feld1>${feld1}</feld1>\n\t\t<feld2>${feld2}</feld2>\n\t</daten>\n\t<c:if test=\"${not empty file1}\"> \n\t\t<!-- access the name of the DataSource direct -->\n\t\tDer Inhalt des Uploads \"${upl.file1Data.name}\" als attachement \n(via DataSource)!<br>\n        \t<mt:attach upload=\"${upl.file1Data}\" />\n\t</c:if>\t\n\n    </mt:mail>\n    <mt:send message=\"${message}\"/>\n\n    <p>Mail sent to ${email}\n\t<c:if test=\"${not empty file1}\">\n\t\t, attaching ${upl.file1}\n\t</c:if>\n\n\t</p>\n</c:if>\n\n\n\n\n<form method=\"post\" action=\"#\" enctype=\"multipart/form-data\">\n\t<p>\n\tto be send:</br>\t\n    Email to:<input type=\"text\" name=\"email\" value=\"${sessionScope.email}\" \nsize=\"30\"/><br>\n    local Server: <input type=\"text\" name=\"server\" \nvalue=\"${sessionScope.server}\" size=\"30\"/><br>\n    Feld1:: <input type=\"text\" name=\"feld1\" value=\"${feld1}\" size=\"30\"/></br>\n    Feld2:: <input type=\"text\" name=\"feld2\" value=\"${feld2}\" size=\"30\"/></br>\n    File1:: <input type=\"file\" name=\"file1\" value=\"\"/></br>\n    <p>\n    <input class=\"button\" type=\"submit\" value=\"Send\"/>\n    </p>\n</form>\n\n<p>\n<a href=\"index.jsp\">Back</a>\n</p>\n\n</body>\n</html>\n\n-----------------------------------------\ndon't forget, we need new libs.\nso add to build.properties at sandbox level\n-----------------------------------------\n# commons-upload required by mailer2\nfileupload.jar=${basedir}/commons-fileupload-1.1.jar\n# commons-io required by mailer2\ncommonsio.jar=${basedir}/commons-io-1.1.jar\n\n-----------------------------------------\nand check that at mailer2-level\nadd in build.xml at mailer2-level\nfirst the classpath\n-----------------------------------------\n  <property name=\"classpath\" \n\tvalue=\"${servlet.jar}:${mail.jar}:${activation.jar}:${bcmail.jar}:${bcpr\nov.jar}:${fileupload.jar}\"/>\n\n-----------------------------------------\nthen at target 'examples.pre'\n-----------------------------------------\n    <copy todir=\"${build.examples}/WEB-INF/lib\" file=\"${fileupload.jar}\"/>\n    <copy todir=\"${build.examples}/WEB-INF/lib\" file=\"${commonsio.jar}\"/>\n\n-----------------------------------------\nthen at target 'checkRequirements.pre' add\n-----------------------------------------\n\n    <antcall target=\"checkRequiredFile\">\n       <param name=\"file\" value=\"${fileupload.jar}\"/>\n       <param name=\"fail.message\" value=\"Property fileupload.jar is not set in \nbuild.properties. This library is required to send upload file via mail \nattachments. get fileupload.jar from \nhttp://jakarta.apache.org/commons/fileupload/\"/>\n    </antcall>\n    <antcall target=\"checkRequiredFile\">\n       <param name=\"file\" value=\"${commonsio.jar}\"/>\n       <param name=\"fail.message\" value=\"Property commonsio.jar is not set in \nbuild.properties. This library is required to send upload file via mail \nattachments. get commonsio.jar from http://jakarta.apache.org/commons/io/\"/>\n    </antcall>", "id": 85258, "time": "2006-01-31T15:30:04Z", "bug_id": 38462, "creation_time": "2006-01-31T15:30:04Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 38462, "is_private": false, "text": "This taglib has been deprecated, so I don't expect to see this worked on.", "id": 128706, "time": "2009-07-10T00:41:12Z", "creator": "bayard@apache.org", "creation_time": "2009-07-10T00:41:12Z", "attachment_id": null}]