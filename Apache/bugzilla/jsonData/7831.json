[{"count": 0, "tags": [], "bug_id": 7831, "text": "Similar to bug 4352, which details the same problem for JDBCRealm.\n\nWhen authenticating the user with certificates, authenticate(X509Certificate\ncerts[])  in org.apache.catalina.realm.RealmBase calls getPrincipal().  This\nmethod is supposed to find the user and their roles from the realm. \nUnfortunately, getPrincipal() in org.apache.catalina.realm.JNDIRealm always\nreturns null and so authentication always fails.", "id": 13008, "attachment_id": null, "creator": "r.priestley@cs.ucl.ac.uk", "creation_time": "2002-04-08T12:09:33Z", "time": "2002-04-08T12:09:33Z", "is_private": false}, {"count": 1, "tags": [], "creator": "r.priestley@cs.ucl.ac.uk", "attachment_id": 1499, "id": 13009, "time": "2002-04-08T12:10:52Z", "bug_id": 7831, "creation_time": "2002-04-08T12:10:52Z", "is_private": false, "text": "Created attachment 1499\nJNDIRealm patch"}, {"count": 2, "tags": [], "bug_id": 7831, "attachment_id": null, "text": "I think/hope the only contentious issue in the patch is:\n\n  return (new GenericPrincipal(this, username, ****null**** , roles))\n\nJavadoc for GenericPrincipal describes the password string as 'Credentials used\nto authenticate this user'.  I set it to null rather than trying finding to it\nfrom the realm because this is not necessarily what the user may have provided\nfor authentication, e.g the user didn't provide a password in the CLIENT-CERT\ncase.  This probably doesn't make much difference from trying to get it from the\nrealm but I think it preserves the semantics better.  Have I misunderstood?\n", "id": 13011, "time": "2002-04-08T12:15:46Z", "creator": "r.priestley@cs.ucl.ac.uk", "creation_time": "2002-04-08T12:15:46Z", "is_private": false}, {"count": 3, "tags": [], "text": "*** Bug 12335 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 22368, "creator": "usyyid@storetrax.com", "time": "2002-09-06T15:27:12Z", "bug_id": 7831, "creation_time": "2002-09-06T15:27:12Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 7831, "text": "CLIENT-CERT authentication is done via SSLAuthenticator class which\nexecutes RealmBase.authenticate(X509Certifcate[] certs) method.\nThis method uses getPrincipal(String username) method to return principal for \ngiven username. If this returs null SSLAutheticator denies to authenticate user.\nFor SSLAuthenticator it is only important to check if user exists in realm and\nfind roles becues AUTHENTICATION is done SSLAuthenticator (checking validity\nod certificate)\nThis is my implementation for JDBCRealm.getPrincipal which works :\n(If you want to consult this patch please mail me)\n\n    /**\n     * Return the Principal associated with the given user name.\n     * This method is used in RealmBase.authenticate(X509Certificate[] creds)\n     * which is then used in SSLAuthenticator to authenticate\n     * with client with CLIENT-CERT method\n     * Absence of this method (returning null) makes CLEINT-CERT authorization \n     * impossible. \n     *\n     * @author Marek Mosiewicz <marek.mosiewicz@jotel.com.pl>\n     */\n    protected Principal getPrincipal(String username) {\n        Connection dbConnection = null;\n\n        try {\n            // Ensure that we have an open database connection\n            dbConnection = open();\n\t      \n\t\tString dbCredentials = null;\t      \n\t\tPreparedStatement stmt = credentials(dbConnection, username);\n\t\tResultSet rs = stmt.executeQuery();\n\t      while (rs.next()) {\n            \tdbCredentials = rs.getString(1).trim();\n\t      }\n\t      rs.close();\n\t      if (dbCredentials == null) {\n            \treturn (null);\n        \t}\n\t      // Accumulate the user's roles\n      \tArrayList list = new ArrayList();\n\t      stmt = roles(dbConnection, username);\n\t      rs = stmt.executeQuery();\n\t      while (rs.next()) {\n      \t    list.add(rs.getString(1).trim());\n\t      }\n\t      rs.close();\n      \tdbConnection.commit();\n\n            // Release the database connection we just used\n            release(dbConnection);\n\n        \t// Create and return a suitable Principal for this user\n        \treturn (new GenericPrincipal(this, username, null, list));\n        } catch (SQLException e) {\n            // Log the problem for posterity\n            log(sm.getString(\"jdbcRealm.exception\"), e);\n\n            // Close the connection so that it gets reopened next time\n            if (dbConnection != null)\n                close(dbConnection);\n\n            // Return \"null\" principal\n            return (null);\n        }\n    }", "id": 38420, "attachment_id": null, "creator": "marek.mosiewicz@jotel.com.pl", "creation_time": "2003-06-05T12:37:24Z", "time": "2003-06-05T12:37:24Z", "is_private": false}, {"count": 5, "tags": [], "creator": "mario@ops.co.at", "attachment_id": null, "id": 38424, "time": "2003-06-05T12:57:33Z", "bug_id": 7831, "creation_time": "2003-06-05T12:57:33Z", "is_private": false, "text": "@marek:\nI am not happy with this. I think a correct implementation should not use the \nCert-Subject for the username.\n\nI have implemented my own JNDIRealm which tries to lookup a user with the \ncertificate and uses the name found for the principal-object.\n\nSo it makes no difference which certificate the user uses, or if you use BASIC \nAuthentication with my JNDIRealm, for the application it is almost always the \nsame user.\n\nThe dark side of this solution is, that it depends on how the LDAP-Server saves \ncertificates. My solution currently works with Windows Active Directory, \nhowever, it should be easy to adopt it.\n\nI have tried to discuss this on tomcat-dev (search \"CLIENT-CERT and JNDI\"), but \nno one has answered yet.\n\nI am looking forward to share my thoughts."}, {"count": 6, "tags": [], "bug_id": 7831, "attachment_id": 6666, "id": 38484, "time": "2003-06-06T07:07:56Z", "creator": "mario@ops.co.at", "creation_time": "2003-06-06T07:07:56Z", "is_private": false, "text": "Created attachment 6666\nDiscussion base for a common solution on how to authenticate clients certificates"}, {"count": 7, "tags": [], "bug_id": 7831, "text": "Realm Configuration for Attachment#2\n\n\t\t\t<Realm \nclassName=\"com.ops.webcontrol.tomcat.JNDIRealmCertAD\" \n\t\t\t\tdebug=\"99\"\n\t\t\t\tconnectionURL=\"ldap://server:389\"\n\t\t\t\tuserBase=\"CN=Users,dc=company,dc=hq\"\n\t\t\t\tcertSearch=\"(altSecurityIdentities={0})\"\n\t\t\t\tcertUserName=\"sAMAccountName\"\n\t\t\t\tuserSearch=\"(sAMAccountName={0})\"\n\t\t\t\tuserRoleName=\"member\"\n\t\t\t\troleBase=\"CN=Users,dc=company,dc=hq\"\n\t\t\t\troleName=\"cn\"\n\t\t\t\troleSearch=\"(member={0})\"\n\t\t\tconnectionName=\"CN=tomcat,CN=Users,DC=company,DC=hq\"\n\t\t\t\tconnectionPassword=\"*******\"\n\t\t\t\troleSubtree=\"true\"\n\t\t\t\tuserSubtree=\"true\" />\n", "id": 38485, "time": "2003-06-06T07:09:27Z", "creator": "mario@ops.co.at", "creation_time": "2003-06-06T07:09:27Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 7831, "attachment_id": null, "id": 38488, "time": "2003-06-06T10:14:59Z", "creator": "marek.mosiewicz@jotel.com.pl", "creation_time": "2003-06-06T10:14:59Z", "is_private": false, "text": "For me it seems that this moule has no maitainer right now, so it is leaved \"as \nis\" and no is interested in this. Does aonybody knows who should we contact to \nput his changes to CVS.\nAcctually in \"contribution\" part of Jakarta it is said that you can make patch \nbut no way who should I contact - leave this patch on bugzilla maybe someone \nwill pick it up."}, {"count": 9, "attachment_id": null, "bug_id": 7831, "text": "to @Mario Ivankovits:\nI think tha JDBCRealm should store DN on database (it can map DN via view if\nsomeone needs this). Looking into LDAP is good for JNDI realm.\n\nMarek Mosiewicz\nhttp://www.jotel.com.pl/", "id": 38588, "time": "2003-06-09T09:14:45Z", "creator": "marek.mosiewicz@jotel.com.pl", "creation_time": "2003-06-09T09:14:45Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "bug_id": 7831, "attachment_id": null, "id": 38596, "time": "2003-06-09T16:56:41Z", "creator": "mario@ops.co.at", "creation_time": "2003-06-09T16:56:41Z", "is_private": false, "text": "I have overseen, that you talk about JDBCRealm, this bug depends on JNDIRealm.\nFor sure, you have to store the DN in the database, but the resulting principal \nshould contain the username as username and not the DN.\n\nA user might have multiple certificates, but it is always the same user.\nOr a user revoke his certificate an creates a new one, mabe this result in a \nnew DN (other provider, new e-mail address, ...)\n\nIf we do not solve this problem in the realm's we move such logik to the \napplication. The results is a tomcate-user to application-user mapping, which \n(i think) should not be needet."}, {"count": 11, "attachment_id": 6735, "creator": "mario@ops.co.at", "text": "Created attachment 6735\n2 JNDIRealms: one for LDAP userCertificate Attribute and another for Windows ActiveDirectory", "id": 38657, "time": "2003-06-10T10:15:39Z", "bug_id": 7831, "creation_time": "2003-06-10T10:15:39Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "bug_id": 7831, "text": "Configuration Example f\u00fcr Attachment#3: LDAP userCertificate\n\n<Realm className=\"com.ops.webcontrol.tomcat.JNDIRealmCertOpenExchange\" \n\t\t\t\tdebug=\"99\"\n\t\t\t\tconnectionURL=\"ldap://smtp:389\"\n\t\t\t\tuserBase=\"dc=company,dc=co,dc=at\"\n\t\t\t\tcertSearch=\"(userCertificate={0})\"\n\t\t\t\tcertUserName=\"uid\"\n\t\t\t\tuserSearch=\"(uid={0})\"\n\t\t\t\troleBase=\"dc=company,dc=co,dc=at\"\n\t\t\t\troleName=\"cn\"\n\t\t\t\troleSearch=\"(memberUid={1})\"\n\t\t\t\tconnectionName=\"uid=cyrus,dc=ops,dc=co,dc=at\"\n\t\t\t\tconnectionPassword=\"******\"\n\t\t\t\troleSubtree=\"true\"\n\t\t\t\tuserSubtree=\"true\" />\n\n\nI think this Realms should now find there way into the tomcat distribution.", "id": 38658, "time": "2003-06-10T10:17:39Z", "creator": "mario@ops.co.at", "creation_time": "2003-06-10T10:17:39Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 7831, "text": "Note for LDAP userCertificate:\n\nmaybe you have to edit your slapd.conf to add\n<code>index userCertificate eq</code>\nand modify the <code>core.schema</code> to allow userCertificate equality match\nby adding <code>EQUALITY octetStringMatch</code> to the attributetypedefinition.\n", "id": 38659, "attachment_id": null, "creator": "mario@ops.co.at", "creation_time": "2003-06-10T10:18:58Z", "time": "2003-06-10T10:18:58Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 7831, "text": "You are right about multiple certificates (I use only one so it does not \nmatter) I can change this code, but no one seems to pick up this code :-)", "id": 38662, "attachment_id": null, "creator": "marek.mosiewicz@jotel.com.pl", "creation_time": "2003-06-10T10:57:56Z", "time": "2003-06-10T10:57:56Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 7831, "text": "*** Bug 21115 has been marked as a duplicate of this bug. ***", "id": 39517, "time": "2003-06-26T19:12:42Z", "creator": "william.barker@wilshire.com", "creation_time": "2003-06-26T19:12:42Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 7831, "text": "Created attachment 14901\nUpdated version for the two Realms\n\nUpdated just to put my latest version here", "id": 74308, "time": "2005-05-02T11:40:01Z", "creator": "mario@ops.co.at", "creation_time": "2005-05-02T11:40:01Z", "is_private": false, "attachment_id": 14901}, {"count": 17, "tags": [], "bug_id": 7831, "text": "I do want to add support for certificate authentication to the JNDIRealm and\nyour patch has given me food for thought. I am minded, however, to use your\npatch as a basis for an implementation of getPrincipal() rather than over-riding\nauthenticate(X509Certificate).\n\nIn terms of suporting muliple LDAP servers my intention is to provide something\nthat works for OpenLDAP and can be over-ridden as required for other directories.\n\nI have started to look at your patch and have the following comments. Where I\nhave questions, any further information you can provide will help me understand\nthe rationale for the approach you took.\n\n1. I moved the classes into the o.a.c.Realm package.\n2. Please keep to the coding standards of the original when copying source. It\nmakes it much easier to find where you have made any subtle changes.\n3. CertUser looks to be unnecessary - why not use User from JNDIRealm?\n4. Your changes to authenticate(String, String) appear to be unrelated to adding\nsupport for certificates. Please keep patches for different issues separate so\nthey can be considered separately. Feel free to file a new bug for this one.\n5. You appear to have reverted the patches for bugs 23190, 16541 and 26487. What\nis the reason for this?\n6. The patch for bug 22236 has also been reverted. Is this intentional?\n7. If there a reason that getCertUserByPattern() isn't supported?\n8. A change commiited at the same time as bug 22236 to\naddAttributeValues(String, Attributes, ArrayList) that modified the return value\nfrom null to values in a couple of places has also been reverted. Why?", "id": 84790, "time": "2006-01-19T23:54:19Z", "creator": "markt@apache.org", "creation_time": "2006-01-19T23:54:19Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 7831, "text": "> I am minded, however, to use your\n> patch as a basis for an implementation of getPrincipal() rather than over-riding\n> authenticate(X509Certificate).\nSorry, I dont know what you mean.\nI use \"authenticate(X509Certificate)\", whats bad with it? Thats the place where\nauthentication should occur, no?\nBut I dont know the latest codebase, so it will be that some stuff has been changed.\n\n\n> In terms of suporting muliple LDAP servers my intention is to provide something\n> that works for OpenLDAP and can be over-ridden as required for other directories.\nSomething which my patch tries to address to.\nThere are implementations for ActiveDirectory and OpenExchange (I guess this is\nOpenLDAP)\n\n> 1. I moved the classes into the o.a.c.Realm package.\n> 2. Please keep to the coding standards of the original when copying source. It\n> makes it much easier to find where you have made any subtle changes.\nYes. Sorry for this.\n\n> 3. CertUser looks to be unnecessary - why not use User from JNDIRealm?\nI need CertUser to be able to hold both, the username and the dn of the ldap entry.\nInternally it works with the \"dn\" but as username it will use what ever the user\nconfigured to use.\nI dont wanted to pass the rather large dn (and meaningless from the point of the\napplication) back to the application.\n\n> 4. Your changes to authenticate(String, String) appear to be unrelated to adding\n> support for certificates. Please keep patches for different issues separate so\n> they can be considered separately. Feel free to file a new bug for this one.\nAs you might have seen I started coding mid 2003, so I cant remember what I\nchanged here, though, the best would be to make it possible to extend JNDIRealm\nand change only what needed to handle the certificate stuff.\nFor some reason I cant rembemer this was not possible.\n\n> 5. You appear to have reverted the patches for bugs 23190, 16541 and 26487. What\n> is the reason for this?\n> 6. The patch for bug 22236 has also been reverted. Is this intentional?\nAs I said, I started mid 2003, the last addition in 2005 is based on this rather\nold version - none of those bugs were there when I started.\n\n> 7. If there a reason that getCertUserByPattern() isn't supported?\nI cant remember.\n\n> 8. A change commiited at the same time as bug 22236 to\n> addAttributeValues(String, Attributes, ArrayList) that modified the return value\n> from null to values in a couple of places has also been reverted. Why?\nSee 5 & 6.\n\n\nAll in all I waited all the time to find a tomcat committer which will start\nlooking at it and point me to the right direction.\nMy \"patch\" was meant to be a discussion base and hopefully not that bad so we\ncan have a cleaned wersion sometimes in the codebase.\n\nNow, it looks like there is one :-)\n\nI can update the patch to the tomcat 5.5.x codebase if wanted.\nE.g. starting to refactor JNDIRealm so that in JNDIRealmCertBase only the\ncertificate relevant stuff is included.\nThat way I wont mask the other patches.\nIt just I am so out of time, so I'll do this only when I know that you pick it up.\n\nCiao,\nMario", "id": 84805, "time": "2006-01-20T07:36:40Z", "creator": "mario@ops.co.at", "creation_time": "2006-01-20T07:36:40Z", "is_private": false, "attachment_id": null}, {"count": 19, "attachment_id": null, "bug_id": 7831, "text": "I'm happy to look at adding CLIENT-CERT support to the JNDI realm based on your\nproposal. If I put together a patch are you willing to test it? If yes, I can\nuse 5.5.x or 4.1.x. Which would you prefer?", "id": 84832, "time": "2006-01-20T21:37:50Z", "creator": "markt@apache.org", "creation_time": "2006-01-20T21:37:50Z", "tags": [], "is_private": false}, {"count": 20, "attachment_id": null, "bug_id": 7831, "text": "Cool, Thanks!\n\nFor sure I will test it.\n\nI prefer 5.5.x", "id": 84843, "time": "2006-01-21T07:50:35Z", "creator": "mario@ops.co.at", "creation_time": "2006-01-21T07:50:35Z", "tags": [], "is_private": false}, {"count": 21, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 85142, "time": "2006-01-28T00:40:53Z", "bug_id": 7831, "creation_time": "2006-01-28T00:40:53Z", "is_private": false, "text": "I have committed a couple of changes that should make this a lot easier.\n\nGiven the wide variety of options for mapping from certificates to users in the\ndirectory, I have left the default as certificate DN == user DN.\n\nTo change this you will need to extend JNDIRealm and override\ngetPrincipal(X509Certificate). In my testing I used the following:\n\nprotected Principal getPrincipal(X509Certificate usercert) {\n    StringTokenizer dnTokens =\n            new StringTokenizer(usercert.getSubjectDN().getName(),\",\");\n        \n    while (dnTokens.hasMoreTokens()) {\n        String token = dnTokens.nextToken(); \n        if (token.substring(0, 3).equalsIgnoreCase(\"cn=\")) {\n            return getPrincipal(token.substring(3));\n        }\n    }\n        \n    return null;\n}\n\nSince the user certificate is public, it isn't much use (on its own) as a\ncredential for authentication. It is the combination of the user's possession of\nthe private key associated with the certifcate, the subject of the certificate\nand the chain of certificates back to a CA you trust that matters. Therefore, I\nhave not incorporated a direct comparission of the certificate presented by the\nuser with what may be held in the directory.\n\nLet me know how you get on. Barring any major problems in your testing, I'll\nport the changes back to 4.1.x and close this bug."}, {"count": 22, "tags": [], "bug_id": 7831, "attachment_id": null, "text": "I have ported the changes to TC4. This puts everything in place to enable users\nto get CLIENT-CERT working. Basic testing confirms it works as expected.\n\nIf you find anything wrong in your testing, please re-open.\nIf have have ideas for further enhancements, pleaes open a new bugzilla item.", "id": 85324, "time": "2006-02-01T23:52:30Z", "creator": "markt@apache.org", "creation_time": "2006-02-01T23:52:30Z", "is_private": false}]