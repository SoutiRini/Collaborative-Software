[{"count": 0, "tags": [], "creator": "daniel@cheeseplant.org", "text": "Reading an excel produced spreadsheet crashes with a NegativeArraySizeException\nto be thrown in processString.\n\nI've done some extensive delving to try and find the cause of this problem and\nhopefully fix it, what it boils down to is that there's a few incorrect\nassumptions made in bits of SSTRecord (specifically within  manufactureStrings\nand processContinueRecord) which fail if one has a string with  extended\ninformation that doesn't fit completely in the middle of a record (i.e. one\nwhich requires continue records).\n\nI have a nasty suspicion that this is a design issue which would require\nre-working the parser so that instead of trying to build an incomplete string\nup, it'll have to assemble an 'accumulated record' before string parsing, until\nthe whole string and its other data can be fished out (or appropriately ignored).\n\nI can if necessary provide a spreadsheet which exhibits this problem, though\nit's pretty large.  It may well be that a simple example is enough, though:\n\nPart way through a record there's a string which has a char_count of 44.\nThis is a wide string, so its initial byte count is 91, and it also has the\nextended flag set, so that the total size expands up to 26719 bytes [Which is\nobviously too big to fit in a single buffer].\n\nWhen manufactureStrings gets to this, it realizes it's going to cross records,\nbut the subsequent 'partial string' logic completely fails to take into account\nboth the additional length field BEFORE the string, and that some of the final\nsize might not actually be part of the character data, so it ends up vastly\noverestimating how many characters the string would be.\n\nI can't see any way of fixing this without re-writing the continuation handling\nas described above (and that's a little too major of a change for me to attack\nat this moment, especially since I only downloaded HSSF yesterday! 8-))", "id": 16786, "time": "2002-05-27T19:44:17Z", "bug_id": 9448, "creation_time": "2002-05-27T19:44:17Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 9448, "attachment_id": null, "text": "great detective work.  Yes this is a known problem.  It means that SSTRecord is\ngoing to become even MORE complicated and painful than it already is.  Glen is\nworking on refactoring this I believe and Marc mentioned an interest in\ncorrecting the problem.\n\n*** This bug has been marked as a duplicate of 7655 ***", "id": 16787, "time": "2002-05-27T20:46:29Z", "creator": "poi-support@buni.org", "creation_time": "2002-05-27T20:46:29Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 9448, "attachment_id": null, "text": "Oooh, yes nice job.  As Andy suggested I'm looking at this area right now \n(although for another reason), I'll take this one.  SST is a meaty little \nbastard.\n\nDo you have a testcase or spreadsheet that's causing this problem?  That would \nbe a big help.", "id": 16793, "time": "2002-05-28T00:16:56Z", "creator": "glens@apache.org", "creation_time": "2002-05-28T00:16:56Z", "is_private": false}]