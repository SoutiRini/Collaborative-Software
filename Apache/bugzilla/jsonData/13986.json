[{"count": 0, "tags": [], "creator": "fantasai@escape.com", "attachment_id": null, "id": 25222, "time": "2002-10-26T05:53:09Z", "bug_id": 13986, "creation_time": "2002-10-26T05:53:09Z", "is_private": false, "text": "Because of the text/plain default, Mozilla's been having a lot of problems\ndealing with content from Apache servers in a standards-compliant way. It seems\nthat a large number of server admins are not setting the proper extension ->\nMIME-type mappings, and all sorts of content gets sent as text/plain.* By the\nHTTP spec, Mozilla is forbidden any guessing if a content-type header is sent,\nand so it *must* treat these files as plaintext, which is inappropriate.\n\nBasically, if the content-type is really unknown, it should not be set so that\nthe recipient may perform detection.\n\n\nhttp://ftp.ics.uci.edu/pub/ietf/http/rfc1945.html#BodyType\nhttp://www.servlets.com/rfcs/rfc2616-sec7.html#sec7.2.1\n\n* This is probably because other browsers, including MSIE, do not adhere to this\nrequirement, so server admins don't (and in some cases refuse to) set the\nappropriate mappings to override text/plain."}, {"count": 1, "tags": [], "bug_id": 13986, "is_private": false, "text": "To clarify, the fix we would like to see would be that by default, if Apache\ndoesn't know (e.g. from extension mapping) what a file's MIME type is, it not\ninclude a Content-Type header at all in the response header.", "id": 25223, "time": "2002-10-26T06:20:44Z", "creator": "ian@hixie.ch", "creation_time": "2002-10-26T06:20:44Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 13986, "attachment_id": null, "id": 25229, "creation_time": "2002-10-26T17:48:12Z", "time": "2002-10-26T17:48:12Z", "creator": "slive@apache.org", "text": "I suppose it might be reasonable for Apache to not send a content-type header\nif DefaultType is not sent.  But I doubt such a change will make it into\n1.3.  You may have better luck targetting 2.0.  And supplying a patch\nwould also increase your chances.\n\nWho you should really be lobying is Microsoft.  Apache is being perfectly\nstandards compliant here.  It is Microsoft's violation of the standard that\nis causing problems.", "is_private": false}, {"count": 3, "tags": [], "text": "I am lobbying Microsoft already, although as they consider their content\nsniffing to be a \"feature\" it is hard tc convince them to change.\n\nMoving bug report to the Apache httpd-2.0 product.\n\nI don't think Apache sending binary content back as text/plain is correct\nbehaviour, though. The default, for cases when authors have not set up their\nserver, should in my opinion be \"we don't know\", not \"this is a text file\".", "attachment_id": null, "id": 25230, "creation_time": "2002-10-26T20:58:51Z", "time": "2002-10-26T20:58:51Z", "creator": "ian@hixie.ch", "bug_id": 13986, "is_private": false}, {"count": 4, "tags": [], "creator": "bzbarsky@mit.edu", "attachment_id": null, "is_private": false, "id": 25231, "time": "2002-10-26T21:16:32Z", "bug_id": 13986, "creation_time": "2002-10-26T21:16:32Z", "text": "So there are actually two issues here:\n\n1)  If DefaultType is not set, it would be nice to not send a Content-Type header\n    or to send one that allows the user to select what to do with the content as\n    opposed to one that forces any compliant UA to render the content inline\n2)  DefaultType should not be set in the default (example?) config file."}, {"count": 5, "tags": [], "text": "Created attachment 3616\nA suggestion", "attachment_id": 3616, "id": 25232, "creation_time": "2002-10-26T23:06:54Z", "time": "2002-10-26T23:06:54Z", "creator": "bzbarsky@mit.edu", "bug_id": 13986, "is_private": false}, {"count": 6, "tags": [], "text": "This is based on a few hours of looking at the code and zero prior knowledge of\nit.  So I strongly suspect that the details are not quite up to snuff.  But the\ngeneral idea is pretty simple...  Note that the changes only kick in if there is\nno DefaultType directive.  If people are OK with these changes, changing the\ndefault httpd.conf would be pretty simple...\n\nThere are two spots (marked with XXX comments in the patch) where I was _really_\nnot sure what the right thing to do was.  Also, I changed the multipart code to\nnot send a content-type for a subpart if one is not set, but it may be a better\nidea to default that to application/octet-stream instead.  I'm not sure which\nRFC is most relevant there and what sorts of problems that change could cause.\n\nOn another note, how is UA support for HTTP X where X > 0.9 responses with no\ncontent-type set?  Is this a feasible approach in general?", "is_private": false, "bug_id": 13986, "id": 25233, "time": "2002-10-26T23:13:11Z", "creator": "bzbarsky@mit.edu", "creation_time": "2002-10-26T23:13:11Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "bzbarsky@mit.edu", "attachment_id": 3617, "id": 25234, "time": "2002-10-26T23:28:35Z", "bug_id": 13986, "creation_time": "2002-10-26T23:28:35Z", "is_private": false, "text": "Created attachment 3617\nI should build before posting and remember C better.."}, {"count": 8, "tags": [], "creator": "bbaetz@student.usyd.edu.au", "attachment_id": null, "id": 25247, "time": "2002-10-27T12:53:58Z", "bug_id": 13986, "creation_time": "2002-10-27T12:53:58Z", "is_private": false, "text": "You should also comment out the DefaultType thing in\ndocs/conf/httpd-std.conf.in, so that this actually does happen by default, no?"}, {"count": 9, "tags": [], "creator": "bzbarsky@mit.edu", "attachment_id": null, "is_private": false, "id": 25251, "time": "2002-10-27T17:06:42Z", "bug_id": 13986, "creation_time": "2002-10-27T17:06:42Z", "text": "Yes, of course."}, {"count": 10, "tags": [], "creator": "sbwoodside@yahoo.com", "attachment_id": null, "id": 25399, "time": "2002-10-30T21:41:10Z", "bug_id": 13986, "creation_time": "2002-10-30T21:41:10Z", "is_private": false, "text": "See also Bug 14095, a workaround until this bug is fixed."}, {"count": 11, "tags": [], "text": "So.. I just saw this blurb about Apache 2.0.44 on http://httpd.apache.org/ :\n\n  \"This release begins a new effort to retain configuration and module-interface\n   stability in the Apache 2.0 series.  No changes in configuration or third-party\n   modules are necessary to upgrade from 2.0.42 or later, and we will make every\n   effort to maintain this easy upgrade path in future 2.0 releases.\"\n\nHow does that affect this enhancement request (if at all)?", "attachment_id": null, "id": 30523, "creation_time": "2003-02-02T22:57:09Z", "time": "2003-02-02T22:57:09Z", "creator": "bzbarsky@mit.edu", "bug_id": 13986, "is_private": false}, {"count": 12, "tags": [], "bug_id": 13986, "is_private": false, "text": "hmmm. sorry for jumping so late in, but:\n\n- an explicitly called \"DefaultType None\" would be probably better than a\n(none-)value triggered by the absence of the directive (I've just hurried over\nthe patch, so forgive me, if I didn't see the obvious ... ;-)\n\n- IMHO there's already a content-type for arbitrary data:\napplication/octet-stream (see, for example, RFC 2046). Or do I misunderstand\nsomething?\n\nHowever, thanks for bringing up the issue: yes, 2.0 probably won't include such\na feature. 2.1/2.2 will be the next possible stage. Sorry.", "id": 30531, "time": "2003-02-03T00:16:44Z", "creator": "nd@perlig.de", "creation_time": "2003-02-03T00:16:44Z", "attachment_id": null}, {"count": 13, "tags": [], "creator": "sbwoodside@yahoo.com", "attachment_id": null, "is_private": false, "id": 30532, "time": "2003-02-03T00:23:19Z", "bug_id": 13986, "creation_time": "2003-02-03T00:23:19Z", "text": "Oh yes, there's been plenty of discussion of your second point. See\nhttp://bugzilla.mozilla.org/show_bug.cgi?id=175848 ... At a minimum.\napplication/octet-stream is probably not appropriate for files that are really\ntext/plain. Since it's not exactly arbitrary (binary) data, but unknown data."}, {"count": 14, "tags": [], "creator": "ian@hixie.ch", "attachment_id": null, "id": 30534, "time": "2003-02-03T02:13:50Z", "bug_id": 13986, "creation_time": "2003-02-03T02:13:50Z", "is_private": false, "text": "Specifically, the point is that if a Web browser is handed a stream with an\nexplicit MIME type, it must not sniff the content to determine the actual MIME\ntype, whereas if there is no explicit Content-Type, then it can.\n\nIf Apache doesn't know, then it should let the Web browser sniff, and the only\nway to do this is to not sent a Content-Type header at all."}, {"count": 15, "tags": [], "creator": "bzbarsky@mit.edu", "attachment_id": null, "id": 30537, "time": "2003-02-03T03:58:07Z", "bug_id": 13986, "creation_time": "2003-02-03T03:58:07Z", "is_private": false, "text": "Andr\u00e9, You're right. \"DefaultType None\" would indeed make sense (and could then\nbe the default value in the absense of that directive).\n\nThe patch could be easily modified to do this, I think -- just ignore the\nDefaultType directive if the type it sets is \"None\"....\n\nThat said, I'm not sure I made it clear that the patch is completely untested\nand that I'm not likely to be able to test it rigorously (unless there's a\npublicly available regression suite for httpd?).  I just read through the patch\nagain and looked at http://httpd.apache.org/dev/patches.html, and I think I may\nhave a few tabs in there and one place where a boolean operation is at end of\nline instead of start of line; I can certainly fix those.\n\nAny advice as to how the process goes from here?  Should I send mail to\ndev@httpd.apache.org ?  Or is this bug report sufficient?  Should I just be\npatient and wait?\n\nI guess what I'm really saying is, I'm willing to spend more time polishing the\nproof-of-concept here if the basic idea (and basic approach of having a NULL\nchar* for the header value?) is deemed sound and if the core group wants to take\nthe patch.  If not, I'd naturally rather not waste time on it.  ;)\n\nPlease let me know."}, {"count": 16, "tags": [], "text": "Well, I've read now through the bugzilla thread at mozilla org.\nPrincipially I disagree, that Apache is to blame about the wrong content-type.\nIf the webmaster is not able to configure the server well (at least by request),\nhe should take his hat and do another job elsewhere - far far away (sounds hard?\nmaybe.)\n\nHowever, a \"DefaultType None\" feature would be rather simple to build in,\nalthough I wouldn't make it default. RFC 2616 is quite clear about it.\n\"Content-type SHOULD be set, blah\", which basically means \"set it always, unless\nthere are _real_ good reason to omit it\".\n\nIf I understand the nature of the (mozilla) bugreport, this probably wouldn't\nhelp you, because it relies on dumb admins, that leave all default stuff in.\n\nThe next, more practical point is - it would break some modules (just grep the\nsource tree for ap_default_type), since these rely on a real non-NULL\ncontent-type. Because of this, I'm very sure, it will never apply to the 2.0\nbranch. (API compat)\n\nok, and now?\nLet's have a short look back to mozilla. The people decided to accept CSS files\nonly with the approriate MIME type (text/css), which is of course absolutely\ncorrect. What did really happen? Some people complained in newsgroups,\nmailingslists etc (\"scream, why do my CSS not work?\") and were teached to\nconfigure their servers properly or alternatively harrass their ISPs to do it\nfor them.\nMy conclusion: if it's neccessary, the people _do_ configure their servers.\n\nI'd suggest: if you still want to patch it in Apache, ask the people on the\ndevlist about their opinion (please ask more times, if nobody responds ;-)\n\n(Just an idea: maybe, a simple patch of the default config would also be\nsufficient (AddType directives) for your problem?)\n\nBut said all that, the main problem you're trying to solve is neither in Apache\nnor in Mozilla (or whatever browser). It's in the world out there ... YMMV.\n\nHTH.", "is_private": false, "bug_id": 13986, "id": 30600, "time": "2003-02-03T22:02:58Z", "creator": "nd@perlig.de", "creation_time": "2003-02-03T22:02:58Z", "attachment_id": null}, {"count": 17, "tags": [], "creator": "bzbarsky@mit.edu", "attachment_id": null, "id": 30602, "time": "2003-02-03T22:18:25Z", "bug_id": 13986, "creation_time": "2003-02-03T22:18:25Z", "is_private": false, "text": "Andr\u00e9, the basic problem I am trying to solve is that with a properly configured\nweb server a user adding a file of a type the server does not know will\nautomatically get the file sent as text/plain.\n\nThe SHOULD is not a MUST, imo, because the server shouldn't send the type if the\ntype is unknown... \n\nPoint taken about modules; I was somewhat afraid of that.  Note that my patch\nfixes everything that just such a grep found in the default source tarball, but\nI'm sure many other modules exist that depend on it.  :(\n\nI think we all agree that most web server admins out there should be flogged. \nThe question is how to make life as good as possible for the users without\nviolating standards while we flog them one at a time (and the Mozilla project\n_does_ spend a lot of time evangelizing developers on MIME type issues)...\n\nI'll ask on the dev list as you suggest.  Thank you."}, {"count": 18, "tags": [], "creator": "dan@tobias.name", "attachment_id": null, "is_private": false, "id": 30608, "time": "2003-02-04T00:28:02Z", "bug_id": 13986, "creation_time": "2003-02-04T00:28:02Z", "text": "As an example of the kind of pressure Mozilla developers get put under, see this\nthread:\n\nhttp://www.mozillazine.org/forums/viewtopic.php?t=5367\n\nHere, a writer says the Mozilla team is \"on crack\" because they won't cave in\nand make their browser second-guess MIME types in blatant violation of the\nstandards.\n\nThe world seems to be full of people who think that, misfeature for misfeature,\nwhatever MSIE does defines the \"standard\".  :("}, {"count": 19, "tags": [], "bug_id": 13986, "is_private": false, "text": "the relevant part of RFC 2616 is 7.2.1 which says...\n   Any HTTP/1.1 message containing an entity-body SHOULD include a\n   Content-Type header field defining the media type of that body. If\n   and only if the media type is not given by a Content-Type field, the\n   recipient MAY attempt to guess the media type via inspection of its\n   content and/or the name extension(s) of the URI used to identify the\n   resource. If the media type remains unknown, the recipient SHOULD\n   treat it as type \"application/octet-stream\".\n\nYou have to balance out the SHOULDs imposed on the server with the with the MAYs\nimposed on the UA. Yes, the server admin should have as complete a list of\nmime-types as possible. It is still possible at that point, to have a file on\nthe server of which the media type is legitimately unknown even with a clueful\nsysadmin. Perhaps because it is so new that it's not on the list, or some user\njust invented it and didn't notify the admin yet. In that case, what should the\nserver do? It doesn't know the right type ... so it should do whatever is the\nnicest thing for the UA. That is, provide no mime-type, the /only/ condition\nunder which the UA is allowed to guess.\n\nImplementation issues notwithstanding...", "id": 30609, "time": "2003-02-04T01:03:56Z", "creator": "sbwoodside@yahoo.com", "creation_time": "2003-02-04T01:03:56Z", "attachment_id": null}, {"count": 20, "tags": [], "text": "I think, I understand your problem. And I further agree that we should give the\nuser/admin the possibility to explicitely send no content-type header.\n\nBut it should not be default,\n\n(a) because of the SHOULD rule (set DefaultType application/octet-stream and,\nthough it's not the right type, you're safe anyway!)\n(b) backward compat.\n\nOver the night I've thought about the implementation issues again. Perhaps we\ncan also use a kind of internal magic content type (this has a long tradition in\napache code ;-). This is, however, deprecated, but IMHO arguable against NULL\npointers there. And I think, it has to be decided on the dev list.\n\ne.g.:\nDefaultType None\nwould set the default type to httpd/x-no-content-type or somewhat. And perhaps a\nprotocol filter (or something near transcode stage, I'm not sure where it should\napply best, at the moment) removes that type then from the network output.\n\nA further problem are subrequests (whatever implementation is used). Sometimes\n(mostly?) they rely on getting a reliable content type.\n\nRemember also, it's only an idea, so it may or may not implementable that way ...", "attachment_id": null, "id": 30638, "creation_time": "2003-02-04T12:47:14Z", "time": "2003-02-04T12:47:14Z", "creator": "nd@perlig.de", "bug_id": 13986, "is_private": false}, {"count": 21, "tags": [], "creator": "info@orangexl.com", "attachment_id": null, "is_private": false, "id": 30660, "time": "2003-02-04T15:49:07Z", "bug_id": 13986, "creation_time": "2003-02-04T15:49:07Z", "text": "If I understand the HTTP/1.1-RFC correctly, Apache MUST NOT send an Content-\nType header if it does not know what it is sending. If they would have wanted \nthat, they would have used the word MUST. They used the word should to make \nclear that the webserver should make every effort to send an correct and \nappropriate Content-Type header.\nSending a header of text/plain in cases that the content-type is unknown goes \nagainst what the HTTP-specs say. If the server doesn't know, perhaps the client \nwill (should sniff the content an/or extensions). And if it doesn't, then it \nshould tread it as application/octet-stream. This decision lies with the \nclient, not the server."}, {"count": 22, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "id": 30722, "time": "2003-02-05T10:52:08Z", "bug_id": 13986, "creation_time": "2003-02-05T10:52:08Z", "is_private": false, "text": "Yes, right from that standpoint. But Apache _does_ know what he sends, because\nhe was configured so. DefaultType is not a hidden feature, it's well documented.\nThe DefaultType _can_ be changed. If someone wants Apache to send another\nContent-type for a certain resource, he has to configure the server properly.\nThere are a lot of possibilities (mime.types, ForceType, AddType, (DefaultType),\nmagic, filters, mod_rewrite ...). It's at least possible to set DefaultType\napplication/octet-stream, which is never wrong if he doesn't it better.\n\n(But again, I agree, DefaultType None, may be useful sometimes)."}, {"count": 23, "tags": [], "creator": "info@orangexl.com", "attachment_id": null, "is_private": false, "id": 30726, "time": "2003-02-05T11:25:21Z", "bug_id": 13986, "creation_time": "2003-02-05T11:25:21Z", "text": "   But Apache _does_ know what he sends, because\n   he was configured so.\n\nI have to disagree here. Apache doesn't know what it is sending, it just \nsending what someone told it. That's is not the same! I'm sure they didn't \nthought of it like that when writing the HTTP-specs.\n\nSetting the DefaultType to octet-stream by default goes against the RFC-specs, \nthis is a decision for the client, not the server. The reason for it is \nproblably when the client knows some unofficial/propriety MIME-types, unknown \nto Apache. Apache would send for instance a Mimi-Type of text/plain (current) \nor octet-stream. The client is not allowed to verify this (see HTTP-specs) and \nthus have to display the content as text or saving it as a file as bytes. But \nthis may not be what the author intended.\n\nMy suggestion would be that either the defaultype is removed or set to None (by \ndefault). But, why does the DefaultType exists anyway? It is not correct by RFC \n(in most cases), it just a practicallity."}, {"count": 24, "tags": [], "bug_id": 13986, "is_private": false, "text": "> Apache doesn't know what it is sending, it just \n> sending what someone told it. That's is not the same!\n\nMaybe. But that's the only way every software works. So that difference is not\nvery interesting for now.\n\n> Setting the DefaultType to octet-stream by default goes against the RFC-specs,\n\n??\n \n> this is a decision for the client, not the server. The reason for it is \n> problably when the client knows some unofficial/propriety MIME-types, unknown \n> to Apache. \n\nAgain: you can teach apache these types. That shall be wrong? Can't believe that.\n\n> [...] The client is not allowed to verify this (see HTTP-specs) and \n> thus have to display the content as text or saving it as a file as bytes. But \n> this may not be what the author intended.\n\nIf the author intends a content type, he can advise the httpd in various ways to\nsend it. All of these ways are quite simple.\n\n*sigh* we spin round again and again.\n\nNeither the server nor the client knows what is sent. They both have to be\nconfigured to recognize something. Let the people configure their software\nproperly and everything is fine. Don't blame apache for dumb admins. Blame the ISPs!\n\n> But, why does the DefaultType exists anyway? It is not correct by RFC \n> (in most cases)\n\nI don't believe that. But however, this is not a problem. I'm also concerned\nabout compat. The Apache doesn't exist only for Mozilla. What about the\nthousands of browsers out there? How do they work without getting a content type?\nI don't know, are there any infos available?", "id": 30733, "time": "2003-02-05T12:00:40Z", "creator": "nd@perlig.de", "creation_time": "2003-02-05T12:00:40Z", "attachment_id": null}, {"count": 25, "tags": [], "bug_id": 13986, "is_private": false, "text": "   Maybe. But that's the only way every software works. So that difference is\n   not very interesting for now.\n\nIt is, because in this case the HTTP-RFC states the client should decde what is \nthe appropriate MIMI-type\n\n\n   ??\n\nSorry, I meant to that sending the Content-Type octet-stream (as suggested \nearlierer) in cases Apache doesn't know the MIME-type goes against the HTTP-RFC \n(which states the client should make this decision)\n\n \n   Again: you can teach apache these types. That shall be wrong? Can't \n   believe that.\n\nYes you can, but if that is what you want, Apache should include these MIME-\ntypes by default.\n\n\n   If the author intends a content type, he can advise the httpd in various\n   ways to send it. All of these ways are quite simple.\n\nBut the DefaultType has nothing to do with intending a content-type. Or, I \ndon't think many webmasters use it this way...\n\n\n  *sigh* we spin round again and again.\n\nPerhaps this is a discussion for the Apache developers maillinglist.\n\n\n  Neither the server nor the client knows what is sent. They both have to be\n  configured to recognize something. Let the people configure their software\n  properly and everything is fine. Don't blame apache for dumb admins. Blame\n  the ISPs!\n\nIndeed, people's software should be properly configured. But if this is the \ncase, Apache should not send a Content-Type header for unknown content! \nOtherwise, people's software cannot recognize what Apache is sending! \n(remember, if Apache sends a content-type, the client MUST not question it, \naccording to the HTTP-RFC)\n\n\n  I don't believe that. But however, this is not a problem. I'm also concerned\n  about compat. The Apache doesn't exist only for Mozilla. What about the\n  thousands of browsers out there? How do they work without getting a content   \n  type?\n\nThat is a concern, but is it Apache's problem? Browsers should work according \nto the HTTP-RFC (that's why they are for). If they don't, should Apache also \ndisregard the HTTP-RFC?\n\n\n  I don't know, are there any infos available?\n\nTo my knowledge, IE should work fine. Many other browsers look at file's \nextesions to guess the MIME-type.", "id": 30736, "time": "2003-02-05T12:44:58Z", "creator": "info@orangexl.com", "creation_time": "2003-02-05T12:44:58Z", "attachment_id": null}, {"count": 26, "tags": [], "creator": "bbaetz@student.usyd.edu.au", "attachment_id": null, "id": 30738, "time": "2003-02-05T13:04:55Z", "bug_id": 13986, "creation_time": "2003-02-05T13:04:55Z", "is_private": false, "text": "I think we're talking past each other.\n\nIn an ideal world, Apache would 'know' the correct mime type for any file anyone\never wants to hand it. This would be 100% correct, and would be sent to the\nbrowser, and everyone would be happy.\n\n_However_, the fact is that that isn't  the case, which is why there is any sort\nof default setting at all. The current Apache behaviour is to claim that\n'unknown' types are application/octet-stream. This means that if I have a .svg\nfile, which is then sent as application/octet-stream, the browser MUST (by\nRFC2616 and friends) treat it as application/octet-stream, and offer to save it\nto disk rather than viewing it. The converse of this is when the default mime\ntype is set as text/plain. If I then download an rpm file (assuming no entry in\na mimetype file), the browser MUST show it to the user, without prompting to\nsave, assuming that the browser handles text/plain files. No setting for\nDefaultType can win all the time.\n\nIf Apache didn't send a mime type for those cases, then the browser could sniff\nthe contents (similar to mod_mime_magic), or do extention matching, or ask\n/dev/random, or whatever else it feels like doing. With a mime type, mozilla\nMUST NOT try to guess.\n\nIE always does sniffing, which is broken - try to feed it an SVG file as\ntext/plain for debugging, and watch it complain that I can't use an XML file\nwith a <?stylesheet directive, rather than show me plain text. This is also\nagainst the HTTP RFC. Hixie has a set of tests to test that sort of stuff somewhere.\n\nFWIW, None should be the default, since I imagine that thats not part of a\nconfig file most admins are likly to change."}, {"count": 27, "tags": [], "bug_id": 13986, "is_private": false, "text": "I fully agree.", "id": 30744, "time": "2003-02-05T13:35:24Z", "creator": "info@orangexl.com", "creation_time": "2003-02-05T13:35:24Z", "attachment_id": null}, {"count": 28, "tags": [], "creator": "kaldari@monsterlabs.com", "attachment_id": null, "is_private": false, "id": 30756, "time": "2003-02-05T15:57:00Z", "bug_id": 13986, "creation_time": "2003-02-05T15:57:00Z", "text": "> The Apache doesn't exist only for Mozilla. What about the thousands of> browsers out there? How do they work without getting a content type?Most other browsers (like IE) work by violating RFC 2616. This is also why sysadmins can generally get away with being lazy about setting their MIME types. Most users will never know the difference. The problem here is Mozilla is bending over backwards to try NOT to violate RFC 2616. But unless we can get some cooperation from Apache, Mozilla too will have to violate the spec. Chimera, Mozilla's Mac OS Browser, already does. They tried the evangelism route and it was like trying to bail a sinking ship with a teaspoon. The practical reality is that unless Apache removes the default MIME type or implements some kind or null default (as I believe the RFC intended) Mozilla will have to do MIME sniffing in some situations (or forget about trying to be a usable browser)."}, {"count": 29, "tags": [], "creator": "kaldari@monsterlabs.com", "attachment_id": null, "id": 30758, "time": "2003-02-05T16:04:25Z", "bug_id": 13986, "creation_time": "2003-02-05T16:04:25Z", "is_private": false, "text": "Let's try that again (somehow my linebreaks got stripped)...\n\n> The Apache doesn't exist only for Mozilla. What about the thousands of\n> browsers out there? How do they work without getting a content type?\n\nMost other browsers (like IE) work by violating RFC 2616. This is also why\nsysadmins can generally get away with being lazy about setting their MIME types.\nMost users will never know the difference. The problem here is Mozilla is\nbending over backwards to try NOT to violate RFC 2616. But unless we can get\nsome cooperation from Apache, Mozilla too will have to violate the spec.\nChimera, Mozilla's Mac OS Browser, already does. They tried the evangelism route\nand it was like trying to bail a sinking ship with a teaspoon. The practical\nreality is that unless Apache removes the default MIME type or implements some\nkind or null default (as I believe the RFC intended) Mozilla will have to do\nMIME sniffing in some situations (or forget about trying to be a usable browser)."}, {"count": 30, "tags": [], "creator": "bzbarsky@mit.edu", "attachment_id": null, "id": 30763, "time": "2003-02-05T17:06:36Z", "bug_id": 13986, "creation_time": "2003-02-05T17:06:36Z", "is_private": false, "text": "> What about the thousands of browsers out there? How do they work without getting\n> a content type? I don't know, are there any infos available?\n\nWell...\n\n1)  _With_ a content type all versions of Netscape, opera up through 6 (have not\n    tested 7), Konqueror of all versions I have tried, Mozilla, lynx, links, w3m\n    will unconditionally honor the header.  The only browser I have found that\n    does not is IE.  I have been unable to test mac-only browsers such as\n    omniweb or icab.\n2)  Ebay does not send a content type.  I consider this a bug in ebay, but this\n    means that every browser has _some_ type detection already -- not rendering\n    ebay is not an option for a browser that actually wants to be used.\n3)  What's the worst thing a browser could do without a content type?  Assume a\n    default type of some sort?\n\nIn any case, there is a discussion I'm trying to start on the mailing list on\nthe topic, and indeed a lot of this would belong better there."}, {"count": 31, "tags": [], "bug_id": 13986, "is_private": false, "text": "There's a situation where the sysadmin is /not/ in error and this is still\nrequired. If a user is researching a new media type, has an experimental plugin\nto read that type, a new extension for the type and adds that file to a random\nserver on the net, it is ideal in that situation to send no content-type header\nand let the 2616-compliant UA sort it out. Rare? Perhaps... but valid.", "id": 30770, "time": "2003-02-05T18:39:00Z", "creator": "sbwoodside@yahoo.com", "creation_time": "2003-02-05T18:39:00Z", "attachment_id": null}, {"count": 32, "tags": [], "bug_id": 13986, "attachment_id": null, "id": 30885, "creation_time": "2003-02-07T12:23:02Z", "time": "2003-02-07T12:23:02Z", "creator": "info@orangexl.com", "text": "  In any case, there is a discussion I'm trying to start on the mailing list on\n  the topic, and indeed a lot of this would belong better there.\n\nWhat maillinglist would that be?", "is_private": false}, {"count": 33, "tags": [], "creator": "erik@codefaktor.de", "attachment_id": null, "id": 30886, "time": "2003-02-07T12:31:20Z", "bug_id": 13986, "creation_time": "2003-02-07T12:31:20Z", "is_private": false, "text": "It's dev@httpd.apache.org; to subscribe send an empty email to dev-\nsubscribe@httpd.apache.org (only subscribers are allowed to post).\n\nSee http://httpd.apache.org/lists.html#http-dev for further info."}, {"count": 34, "tags": [], "creator": "info@orangexl.com", "attachment_id": null, "id": 30887, "time": "2003-02-07T12:34:34Z", "bug_id": 13986, "creation_time": "2003-02-07T12:34:34Z", "is_private": false, "text": "I'm already a subscriber, but I only see a discussion on PHP4 and Apache2. I \nalso tried posting my own message to start a discussion, but to no avail..."}, {"count": 35, "tags": [], "bug_id": 13986, "is_private": false, "text": "In my humble opinion the solution which would make most sense (disregarding the currently valid \nRFCs) would be that a user agent is allowed to sniff anyway. Because the user agent knows best what \nthe user wants - and the user is the one who has to view the rpm as plaintext. Therefor an attitude like \n\"Apache suggests a MIME type, use it if you want, if not try to do it better yourself\" would be the \nbest.\nTherefor I guess the easiest solution would be to write a new RFC which supersedes the old \none to satisfy the mozilla guys.", "id": 30896, "time": "2003-02-07T14:38:55Z", "creator": "psychosos@gmx.at", "creation_time": "2003-02-07T14:38:55Z", "attachment_id": null}, {"count": 36, "tags": [], "bug_id": 13986, "attachment_id": null, "id": 30897, "creation_time": "2003-02-07T14:43:58Z", "time": "2003-02-07T14:43:58Z", "creator": "bzbarsky@mit.edu", "text": "dev@httpd.apache.org is the mailing list.  I am going on vacation, though, so I\nhave had to unsubscribe.\n\nPsychopath -- you are wrong on all counts.  There are many cases when a\nwell-configured server has a _much_ better idea of the content type than we do\n(think something as easy as sending an HTML file as text/plain on purpose to\nallow people to view the source easily without relying on the browser UI).\n\nWhat you're suggesting is that every browser just act like IE, which would be a\nsad thing indeed for content authors and users both.", "is_private": false}, {"count": 37, "tags": [], "creator": "info@orangexl.com", "attachment_id": null, "id": 30898, "time": "2003-02-07T14:58:16Z", "bug_id": 13986, "creation_time": "2003-02-07T14:58:16Z", "is_private": false, "text": "He does have a point. The current RFC is somewhat outdated, since it oversees \nthe fact that there are hostile servers which sends wrong MIME-type's on \npurpose.\n\nI heard several years ago that HTTP/1.2 was in the works. But along the way, it \nseem to have died (somehwere in 1996). This is part of the issue. Should Apache \nfollow an (perhaps) outdated RFC which is unlikely to be updated? \n"}, {"count": 38, "tags": [], "bug_id": 13986, "is_private": false, "text": "\"hostile\"?  Eh?\n\nYes, Apache should absolutely follow the RFC, as should browsers.  That's the\nonly way to get predictable behavior that will benefit both users and authors.\n\nNote that if IE were following the RFC none of this would be a problem, since\nauthors would quickly notice their servers were sending a type they did not want\nand _fix_ it.\n\nWe can't do anything about IE, but randomly violating network protocols just\nbecause we find them inconvenient is a BAD idea if you expect any sort of\ninteroperability.", "id": 30899, "time": "2003-02-07T15:06:19Z", "creator": "bzbarsky@mit.edu", "creation_time": "2003-02-07T15:06:19Z", "attachment_id": null}, {"count": 39, "tags": [], "creator": "info@orangexl.com", "attachment_id": null, "id": 30900, "time": "2003-02-07T15:18:51Z", "bug_id": 13986, "creation_time": "2003-02-07T15:18:51Z", "is_private": false, "text": "IE will never support the RFC this way, since you could take over anyone's \ncomputer if it did (to my knowledge, this is the reason why IE snifs content).\n\nThat's also what I mean with hostile. Not everyone who owns a server and runs \nApache is a \"Good Person\". The RFC oversees this. You cannot trust any source \non the internet. This is however what the RFC asks. A client MUST use the \nserver-supplied MIME-type.\n\nAs I said before, Apache must comply with the RFC. I just would like to point \nout that the RFC however may not be good practice anymore..."}, {"count": 40, "tags": [], "creator": "ian@hixie.ch", "attachment_id": null, "id": 30903, "time": "2003-02-07T15:26:30Z", "bug_id": 13986, "creation_time": "2003-02-07T15:26:30Z", "is_private": false, "text": "There is no way to abuse Content-Type per the RFC in such a way as to take\ncontrol of a client. Indeed, content sniffing has historically proven to be much\nmore susceptible to attack than honoring the HTTP specs."}, {"count": 41, "tags": [], "creator": "bzbarsky@mit.edu", "attachment_id": null, "id": 30905, "time": "2003-02-07T15:32:26Z", "bug_id": 13986, "creation_time": "2003-02-07T15:32:26Z", "is_private": false, "text": "What Ian said.  Mozilla does comply with the RFC and we have made sure that we\ncover over the execution vulnerabilities in Windows in other ways than content\nsniffing.\n\nImo the RFC in question is very much good practice."}, {"count": 42, "tags": [], "creator": "slive@apache.org", "attachment_id": null, "is_private": false, "id": 30907, "time": "2003-02-07T16:19:24Z", "bug_id": 13986, "creation_time": "2003-02-07T16:19:24Z", "text": "Folks, this is not a discussion group.  It is a bug database.  You are actually\nhurting your chances of getting anything done on this bug by making it a chore\nto actually read through it.\n\nProper places for discussion (as already mentioned): dev@httpd.apache.org or\nusers@httpd.apache.org.\n\nIn general, it is absolutely the responsbility of the server to send a proper\ncontent type, and the client should not be ignoring it.  The very specific\npoint of this bug report is to deal with a special case where the server\nadministrator has neglected to properly configure the mime type.  This is a\nconfiguration problem, not a server bug.  But it may be appropriate for apache\nto deal with this by ommitting the content-type header and thereby\npass the decision off to the client."}, {"count": 43, "tags": [], "creator": "sbwoodside@yahoo.com", "attachment_id": null, "is_private": false, "id": 30908, "time": "2003-02-07T17:12:00Z", "bug_id": 13986, "creation_time": "2003-02-07T17:12:00Z", "text": "> The very specific point of this bug report is to deal with a special\n> case where the server administrator has neglected to properly \n> configure the mime type.\n\nAs I said in my comment of 2003-02-05 18:39, it's easy to come up with a\nsituation where the server administrator is fully up-to-date on their duties,\nbut apache still does the wrong thing. The users may be experimenting with new\nmime-types and UAs or plug-ins, and not alert the sysadmin. In that case, a null\ncontent-type is the only RFC-compliant choice to allow the custom UA to sniff\nand do the right thing."}, {"count": 44, "tags": [], "bug_id": 13986, "is_private": false, "text": "Isn't that what .htaccess files are for?  (Setting up new MIME types the sever\nadministrator hasn't configured, I mean.)", "id": 30927, "time": "2003-02-08T02:05:51Z", "creator": "dan@tobias.name", "creation_time": "2003-02-08T02:05:51Z", "attachment_id": null}, {"count": 45, "tags": [], "bug_id": 13986, "is_private": false, "text": "No.\n\nNote that this problem affects windows users as well with the WMV and ASF\nextensions that it seems are often not configured correctly either.", "id": 46032, "time": "2003-10-22T07:29:31Z", "creator": "sbwoodside@yahoo.com", "creation_time": "2003-10-22T07:29:31Z", "attachment_id": null}, {"count": 46, "tags": [], "bug_id": 13986, "attachment_id": null, "id": 46033, "creation_time": "2003-10-22T07:40:15Z", "time": "2003-10-22T07:40:15Z", "creator": "nd@perlig.de", "text": "Darn it, sure. .htaccess files are exactly for such purposes. Please don't\ndistribute misleading information.\n\nThanks.", "is_private": false}, {"count": 47, "tags": [], "text": "This bug is specifically about cases where the user _isn't_ setting the file\ntypes, and thus Apache relies on the default. In those cases, it would be better\nfor Apache not to send back a default type.\n\nI'm sure we all agree that ideally users would set the type on all files.\n\nNote that Opera Software would also really like to see this fixed. Mozilla are\nnot the only browser maker in favour of this fix. :-)", "is_private": false, "bug_id": 13986, "id": 46036, "time": "2003-10-22T09:19:35Z", "creator": "ian@hixie.ch", "creation_time": "2003-10-22T09:19:35Z", "attachment_id": null}, {"count": 48, "tags": [], "text": "\"Darn it, sure. .htaccess files are exactly for such purposes.\"\n\nNo. Read the summary. You are arguing the opposite direction. It doesn't matter\nhow hard you push for people to fix their mime-types and .htaccess,\nstatistically it is impossible for everyone to keep up to date. It is also\nprovably true that some people can add a file to a server but cannot edit .htaccess.", "attachment_id": null, "id": 46077, "creation_time": "2003-10-22T18:30:43Z", "time": "2003-10-22T18:30:43Z", "creator": "sbwoodside@yahoo.com", "bug_id": 13986, "is_private": false}, {"count": 49, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "id": 46078, "time": "2003-10-22T18:51:54Z", "bug_id": 13986, "creation_time": "2003-10-22T18:51:54Z", "is_private": false, "text": "Your answer to:\n\n| Isn't that what .htaccess files are for?  (Setting up new MIME types the sever\n| administrator hasn't configured, I mean.)\n\nwas:\n\n| No.\n\nThat is wrong. period. I don't argue against anything. I'm just rejecting\nmisleading information.\n\nAnd hey, if the administrator decides to configure a default mime type without\ngranting you .htaccess rights, you're at the same point as before. But I bet,\nnevertheless, once someone finds some time, he will code it into the httpd.\nThere's no need to restart the discussion again. *sigh*"}, {"count": 50, "tags": [], "creator": "erik@codefaktor.de", "attachment_id": null, "id": 50110, "time": "2004-01-05T21:57:25Z", "bug_id": 13986, "creation_time": "2004-01-05T21:57:25Z", "is_private": false, "text": "*** Bug 14095 has been marked as a duplicate of this bug. ***"}, {"count": 51, "tags": [], "creator": "bzbarsky@mit.edu", "attachment_id": null, "is_private": false, "id": 52271, "time": "2004-02-14T00:35:47Z", "bug_id": 13986, "creation_time": "2004-02-14T00:35:47Z", "text": "Dirk-Willem van Gulik made the suggestion that perhaps it would make more sense\nto serve up and error page if the content type of the data cannot be determined\n(and improve the existing content type determination methods to detect a wider\nrange of data).  That would make sure that server maintainers would not just\nsort of assume things will work out..."}, {"count": 52, "tags": [], "text": "Closing due to inactivity, length of time and absence of agreement. If more information\nappears later, please re-open the bug.", "is_private": false, "bug_id": 13986, "id": 104222, "time": "2007-06-08T11:45:40Z", "creator": "davi@apache.org", "creation_time": "2007-06-08T11:45:40Z", "attachment_id": null}, {"count": 53, "tags": [], "creator": "bzbarsky@mit.edu", "attachment_id": null, "is_private": false, "id": 104226, "time": "2007-06-08T12:08:50Z", "bug_id": 13986, "creation_time": "2007-06-08T12:08:50Z", "text": "For what it's worth, browser makers have effectively given up on getting\nreliable MIME types from servers due to this bug and fallen back on\ntype-sniffing on the client in various cases..."}, {"count": 54, "tags": [], "creator": "slive@apache.org", "attachment_id": null, "id": 104301, "time": "2007-06-11T11:10:26Z", "bug_id": 13986, "creation_time": "2007-06-11T11:10:26Z", "is_private": false, "text": "I'm not sure why we would mark this as invalid. It is something that many people\nwould find useful, and I don't actually see any argument against implementing\nit. (Although there are plenty of arguments about who is to blame for the whole\ntype-sniffing fiasco.) The only thing that is lacking is a developer with the\nskills and time who thinks it is important enough to get it into the tree.\n\nAt worst, if you want to get rid of bugs like this, you should mark them \"Later\"."}, {"count": 55, "tags": [], "creator": "fielding@apache.org", "attachment_id": null, "id": 107256, "time": "2007-08-25T12:03:56Z", "bug_id": 13986, "creation_time": "2007-08-25T12:03:56Z", "is_private": false, "text": "WTF? How did this get buried in the enhancement pile?\n\nI answered this question about three years ago when the TAG was\ndrafting\n\n   http://www.w3.org/2001/tag/doc/mime-respect\n\nand the answer is that the server default must be removed.\nThere is no other way to make sense of the HTTP requirements\non both servers and UAs.\n\nThat means:\n  a) remove DefaultType from the standard httpd.conf.in file\n  b) add \"DefaultType none\" option for resetting config\n  c) remove (or set to none) DEFAULT_CONTENT_TYPE\n  d) make sure that the server correctly handles empty content-type\n\n....Roy\n"}, {"count": 56, "tags": [], "text": "*** Bug 14095 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 13986, "id": 107296, "time": "2007-08-27T10:31:10Z", "creator": "fielding@apache.org", "creation_time": "2007-08-27T10:31:10Z", "attachment_id": null}, {"count": 57, "tags": [], "text": "*** Bug 22920 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 108225, "creation_time": "2007-09-15T07:03:26Z", "time": "2007-09-15T07:03:26Z", "creator": "nick@webthing.com", "bug_id": 13986, "is_private": false}, {"count": 58, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "is_private": false, "id": 108711, "time": "2007-09-27T05:44:26Z", "bug_id": 13986, "creation_time": "2007-09-27T05:44:26Z", "text": "*** Bug 16139 has been marked as a duplicate of this bug. ***"}, {"count": 59, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "is_private": false, "id": 108712, "time": "2007-09-27T05:47:16Z", "bug_id": 13986, "creation_time": "2007-09-27T05:47:16Z", "text": "Fixed in trunk, but need to document \"DefaultType none\" option before backporting.\n\nmod_cache may need a separate fix for this (to be investigated)."}, {"count": 60, "tags": [], "text": "Fixed in r589616", "attachment_id": null, "id": 109867, "creation_time": "2007-10-29T06:23:57Z", "time": "2007-10-29T06:23:57Z", "creator": "nick@webthing.com", "bug_id": 13986, "is_private": false}, {"count": 61, "tags": [], "creator": "takashi.asfbugzilla@tks.st", "attachment_id": null, "id": 113008, "time": "2008-01-19T09:10:09Z", "bug_id": 13986, "creation_time": "2008-01-19T09:10:09Z", "is_private": false, "text": "I didnt't mean to close, but I've pushed \"Mark bug as CLOSED\" carelessly.\nIf bad, please reopen."}, {"count": 62, "tags": [], "bug_id": 13986, "attachment_id": null, "id": 113018, "creation_time": "2008-01-19T14:10:33Z", "time": "2008-01-19T14:10:33Z", "creator": "julian@mehnle.net", "text": "Since this bug wasn't intended to be closed, I am reopening it.", "is_private": false}, {"count": 63, "tags": [], "creator": "julian@mehnle.net", "attachment_id": null, "id": 113019, "time": "2008-01-19T14:12:11Z", "bug_id": 13986, "creation_time": "2008-01-19T14:12:11Z", "is_private": false, "text": "Restoring RESOLVED/FixedInTrunk status."}, {"count": 64, "tags": [], "creator": "philringnalda@gmail.com", "attachment_id": null, "id": 118225, "time": "2008-07-03T00:07:23Z", "bug_id": 13986, "creation_time": "2008-07-03T00:07:23Z", "is_private": false, "text": "While I don't have any real expectation of action coming from a comment on a resolved bug, I still want to mention that the fix for this bug did not fix this bug: it made it _possible_ to \"remove default MIME-type\" while ignoring the part of comment 55 about \"a) remove DefaultType from the standard httpd.conf.in file,\" which still combines a text/plain default with simply awful advice about using text/plain \"If your server contains mostly ... HTML documents.\""}, {"count": 65, "tags": [], "creator": "julian.reschke@gmx.de", "attachment_id": null, "id": 118227, "time": "2008-07-03T00:44:13Z", "bug_id": 13986, "creation_time": "2008-07-03T00:44:13Z", "is_private": false, "text": "Agreed.\n\nIt appears that this should be reopened until the default httpd.conf is fixed.\n"}, {"count": 66, "tags": [], "text": "Reopening based on comments.", "is_private": false, "bug_id": 13986, "id": 123344, "time": "2008-12-16T07:29:18Z", "creator": "steve.chapel@a2pg.com", "creation_time": "2008-12-16T07:29:18Z", "attachment_id": null}, {"count": 67, "tags": [], "bug_id": 13986, "attachment_id": null, "id": 123360, "creation_time": "2008-12-16T15:28:15Z", "time": "2008-12-16T15:28:15Z", "creator": "nick@webthing.com", "text": "There's no way we can change a default like this in a stable release: it would break far too many existing installs.\n\nRevised defaults are an option for 2.4, but should be discussed on the dev list, not here.", "is_private": false}, {"count": 68, "tags": [], "text": "Why did you close this bug, when you said \"Revised defaults are an option for 2.4\". It makes more sense to change the version on the bug and keep it open. Also, I don't get why this can't be discussed here, it's a perfect place to discuss the bug and the solutions, and means that I don't have to subscribe to a presumably high-volume mailing list for a single issue.\n\nHaving a \"none\" type is a step in the right direction, but the whole solution requires that \"none\" be the default, for the reasons established in previous comments. Should we open a new bug??", "attachment_id": null, "id": 123387, "creation_time": "2008-12-17T18:19:40Z", "time": "2008-12-17T18:19:40Z", "creator": "sbwoodside@yahoo.com", "bug_id": 13986, "is_private": false}, {"count": 69, "tags": [], "creator": "steve.chapel@a2pg.com", "attachment_id": null, "is_private": false, "id": 123537, "time": "2008-12-26T12:12:53Z", "bug_id": 13986, "creation_time": "2008-12-26T12:12:53Z", "text": "(In reply to comment #68)\n\n> It makes more sense to change the version on the bug and keep it open.\n\nThis suggestion makes sense to me. I see no objections here and no discussion on the developer mailing list about the issue, so I'll reopen as a bug in the latest development version."}, {"count": 70, "tags": [], "creator": "fielding@apache.org", "attachment_id": null, "is_private": false, "id": 124538, "time": "2009-01-30T11:26:55Z", "bug_id": 13986, "creation_time": "2009-01-30T11:26:55Z", "text": "Fixed in trunk with rev 739382.\n\nDisabled DefaultType directive and removed ap_default_type()\nfrom core.  We now exclude Content-Type from responses for which\na media type has not been configured via mime.types, AddType,\nForceType, or some other mechanism."}]