[{"count": 0, "tags": [], "creator": "simpson.cl@gmail.com", "attachment_id": null, "is_private": false, "id": 100969, "time": "2007-03-26T11:56:54Z", "bug_id": 41948, "creation_time": "2007-03-26T11:56:54Z", "text": "The following build.xml fails at line 6 when it attempts to move\nMysolutionParamlet.java to MySolutionParamlet.java.\n\n   <?xml version=\"1.0\"?>\n   <project name=\"debugit\" default=\"move\" basedir=\"\">\n      <property name=\"solutionU\" value=\"MySolution\"/>\n      <property name=\"codeDir\" value=\"C:\\Test\"/>\n      <target name=\"move\">\n         <move file=\"${codeDir}\\MysolutionParamlet.java\"\n               tofile=\"${codeDir}\\${solutionU}Paramlet.java\" verbose=\"true\"/>\n         <move file=\"${codeDir}\\MysolutionParamletFactory.java\" \n               tofile=\"${codeDir}\\${solutionU}ParamletFactory.java\"\n               verbose=\"true\"/>\n      </target>\n   </project>\n\nThe console output is:\n\n   C:\\Test>\\apache-ant-1.7.0\\bin\\ant.bat\n   Buildfile: build.xml\n\n   move:\n     [move] Moving 1 files to C:\\Test\n     [move] Attempting to rename: C:\\Test\\MysolutionParamlet.java to\nC:\\Test\\MySolutionParamlet.java\n     [move] Copying C:\\Test\\MysolutionParamlet.java to\nC:\\Test\\MySolutionParamlet.java\n\n   BUILD FAILED\n   C:\\Test\\build.xml:7: Failed to copy C:\\Test\\MysolutionParamlet.java to\nC:\\Test\\MySolutionParamlet.java due to C:\\Test\\MysolutionParamlet.java (The\nsystem cannot find the file specified)\n\n   Total time: 0 seconds\n\nSometime during the move operation the file MysolutionParamlet.java was also\nremoved. This fails consistently on Windows XP with both Ant-1.6.2 and Ant-1.7.0.\n\nThe only workaround I have found is to move the file to a differently named\n(something besides My[sS]olutionXXX.java) intermediate file and then move it to\nthe target name. This is probably due to Windows case insensitivity but it\nshould not delete the file."}, {"count": 1, "attachment_id": null, "creator": "stevel@apache.org", "is_private": false, "id": 101018, "time": "2007-03-27T02:27:28Z", "bug_id": 41948, "creation_time": "2007-03-27T02:27:28Z", "tags": [], "text": "yes, this looks like a WinXP bug. The way windows works is that whenever open a\nfile for writing in a directory, if there is a file with the same name but\ndifferent case, winXP opens that instead. \n\nHere ant tries to open the file for both writing and reading, and must end up\ntruncating the file. \n\nThere's no solution for this, but what could be possible would be for Move to\ncheck for this situation and fail the build. "}, {"count": 2, "tags": [], "bug_id": 41948, "text": "I think the principle of least surprise should apply here and that Ant should\ndetect the situation and fail the build before truncating and losing the file.", "id": 101032, "time": "2007-03-27T06:25:14Z", "creator": "simpson.cl@gmail.com", "creation_time": "2007-03-27T06:25:14Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "creator": "mbenson@apache.org", "text": "If nobody can come up with a good reason not to implement as follows, I will do so:\n\nIf the source and destination File objects are equal, but their names are not,\nrename to a temp file, then to the desired destination file.\n\n-Matt", "id": 101050, "time": "2007-03-27T09:34:57Z", "bug_id": 41948, "creation_time": "2007-03-27T09:34:57Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 41948, "text": "There is a cleaner way to update a file's name when all that has changed is\ncase.  For example, if you have a file on disk here:\n\nC:\\test\\MyFile.txt\n\nthen you could do this to change the case to all lower:\n\nFile file = new File(\"C:\\\\test\\myfile.txt\");\nfile.renameTo(file);\n\nThis of course is basically has no effect on machines with a case sensitive file\nsystem.", "id": 101052, "time": "2007-03-27T10:28:27Z", "creator": "BBurgess@tiaa-cref.org", "creation_time": "2007-03-27T10:28:27Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "(In reply to comment #4)\n> There is a cleaner way to update a file's name when all that has changed is\n> case.  For example, if you have a file on disk here:\n> \n> C:\\test\\MyFile.txt\n> \n> then you could do this to change the case to all lower:\n> \n> File file = new File(\"C:\\\\test\\myfile.txt\");\n> file.renameTo(file);\n> \nI'm pretty sure this doesn't work on e.g. Windows.\n\n> This of course is basically has no effect on machines with a case sensitive file\n> system.\n\nYou mean \"case-INsensitive filesystem,\" don't you?\n\n", "is_private": false, "bug_id": 41948, "id": 101054, "time": "2007-03-27T10:44:16Z", "creator": "mbenson@apache.org", "creation_time": "2007-03-27T10:44:16Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "(In reply to comment #5)\n> (In reply to comment #4)\n> > There is a cleaner way to update a file's name when all that has changed is\n> > case.  For example, if you have a file on disk here:\n> > \n> > C:\\test\\MyFile.txt\n> > \n> > then you could do this to change the case to all lower:\n> > \n> > File file = new File(\"C:\\\\test\\myfile.txt\");\n> > file.renameTo(file);\n> > \n> I'm pretty sure this doesn't work on e.g. Windows.\n\nHmm... just tested, and it does seem to work.  However, <move> tries to rename\nfirst, so if it has moved on to copy + delete, the rename must have failed for\nsome reason.  I'll investigate some more if I have time but by all means others\ncan feel free as my time is limited and I tend to lose track of things.\n\n> \n> > This of course is basically has no effect on machines with a case sensitive file\n> > system.\n> \n> You mean \"case-INsensitive filesystem,\" don't you?\n> \n> \n\n", "is_private": false, "bug_id": 41948, "id": 101055, "time": "2007-03-27T10:47:49Z", "creator": "mbenson@apache.org", "creation_time": "2007-03-27T10:47:49Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "Bug is in line 377  of Move.java. Basically, a destination file which is\nreported to exist by Java gets deleted.\n\nFileUtils.rename has the same bug.\n", "is_private": false, "bug_id": 41948, "id": 101150, "time": "2007-03-29T05:13:23Z", "creator": "antoine@apache.org", "creation_time": "2007-03-29T05:13:23Z", "attachment_id": null}, {"count": 8, "attachment_id": null, "creator": "antoine@apache.org", "is_private": false, "id": 101190, "time": "2007-03-29T15:50:07Z", "bug_id": 41948, "creation_time": "2007-03-29T15:50:07Z", "tags": [], "text": "actually, I am not sure whether the issue is that File.exists(\"aBc\") would\nreturn true when a file is called \"abc\" on Windows.\n\nI wonder whether I did not read somewhere that virus scanners cause this type of\nproblems.\n\nI will add an antunit test."}, {"count": 9, "tags": [], "bug_id": 41948, "text": "Can you tell which JDK you are using ?\nDo you have a virus scanner running on your PC ?\n\nYou can run the new antunit test created here\nhttp://svn.apache.org/repos/asf/ant/core/trunk/src/tests/antunit/taskdefs/move-test.xml\nto say whether it is successful or fails.", "id": 101191, "time": "2007-03-29T15:59:50Z", "creator": "antoine@apache.org", "creation_time": "2007-03-29T15:59:50Z", "is_private": false, "attachment_id": null}, {"count": 10, "attachment_id": null, "creator": "anthony.goubard@wanadoo.nl", "is_private": false, "id": 101268, "time": "2007-03-31T08:08:11Z", "bug_id": 41948, "creation_time": "2007-03-31T08:08:11Z", "tags": [], "text": "This bug looks a lot like the one (# 37701)I commited more than one year ago.\nThe patch has been applied before 1.7.0."}, {"count": 11, "attachment_id": null, "creator": "jkf@apache.org", "text": "I have tried to reproduce the error on windows XP using the antunit testcase\nantoine provided, and using the original example.\nI have McAfee running as antivirus.\njdk  local filesystem   smb filesystem\n1.6   pass               pass\n1.5   pass               pass\n1.4   pass               pass\n\n\nI managed to get to the copy stage by intentionally locking the file, but then\nthe copy fails as well because of the locking.\n\n", "id": 101338, "time": "2007-04-02T12:43:10Z", "bug_id": 41948, "creation_time": "2007-04-02T12:43:10Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "bug_id": 41948, "is_private": false, "text": "fixed in svn trunk.  Thanks!", "id": 104610, "time": "2007-06-21T20:12:42Z", "creator": "mbenson@apache.org", "creation_time": "2007-06-21T20:12:42Z", "attachment_id": null}, {"count": 13, "tags": [], "text": "this was fixed for XP with Ant 1.7.1 but the problem seems to re-appear with Windows 7 (don't know about Vista or Server2008 so I'm not changing the OS right now).\n\nOn my Win7 x64 machine the AntUnit test fails.\n\nnew File(\"abc\").getCanonicalFile().equals(new File(\"aBc\"))\n\nreturns true and so renameFile in Move simply skips the operation and says the file has already been renamed.\n\nI don't fully understand why we compare the canonical version of the source to the name of the target at all so I don't dare to remove the check or modify it to just comparing the absolute path names.  Is it there to avoid renaming a symbolic link to its target?", "is_private": false, "bug_id": 41948, "id": 136311, "time": "2010-04-22T06:27:33Z", "creator": "bodewig@apache.org", "creation_time": "2010-04-22T06:27:33Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 41948, "text": "Created attachment 25354\nPatch against svn rev 937187\n\nThe attached patch fixes the testcase on Windows7 but I can't currently tests whether it has any ill effects on XP (I don't think it has).\n\nIf applied, a similar change has to be made in FileUtils#rename.", "id": 136415, "time": "2010-04-26T09:09:20Z", "creator": "bodewig@apache.org", "creation_time": "2010-04-26T09:09:20Z", "is_private": false, "attachment_id": 25354}, {"count": 15, "attachment_id": null, "creator": "bodewig@apache.org", "text": "patch applied in svn revision 954785", "id": 137651, "time": "2010-06-15T06:09:32Z", "bug_id": 41948, "creation_time": "2010-06-15T06:09:32Z", "tags": [], "is_private": false}]