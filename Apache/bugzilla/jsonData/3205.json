[{"count": 0, "tags": [], "bug_id": 3205, "attachment_id": null, "id": 4689, "time": "2001-08-21T09:07:18Z", "creator": "apache.org@schildbach.de", "creation_time": "2001-08-21T09:07:18Z", "is_private": false, "text": "I tried to add a new task named \"Get\" via the file (property-style) mechanism. \nThe Taskdef task did not tell me about the name clash with the existing built-\nin task \"Get\". Instead, I learned at the invokation of the Task: \"Class \norg.apache.tools.ant.taskdefs.Get doesn't support the \"ref\" attribute.\" (ref is \na special attribute of my custom Get task)\n\nI would suggest that Ant should warn about name clashes."}, {"count": 1, "tags": [], "creator": "conor@apache.org", "attachment_id": null, "id": 4948, "time": "2001-08-28T03:22:45Z", "bug_id": 3205, "creation_time": "2001-08-28T03:22:45Z", "is_private": false, "text": "Can you send me a build file that gives this error. I think I know what is \nhappening but I'd like to make sure."}, {"count": 2, "tags": [], "bug_id": 3205, "attachment_id": 466, "id": 4953, "time": "2001-08-28T06:02:13Z", "creator": "apache.org@schildbach.de", "creation_time": "2001-08-28T06:02:13Z", "is_private": false, "text": "Created attachment 466\nhere is a small demonstation project"}, {"count": 3, "tags": [], "bug_id": 3205, "attachment_id": 596, "text": "Created attachment 596\nPatch to Project.java for bug# 3205", "id": 5945, "time": "2001-09-23T23:05:21Z", "creator": "phanna@ipass.net", "creation_time": "2001-09-23T23:05:21Z", "is_private": false}, {"count": 4, "tags": [], "creator": "phanna@ipass.net", "attachment_id": null, "text": "Attachment 596 contains patch for this.  In the addTaskDefintion() method of \nProject.java, I check first for the existence of a task by that name in the \ntaskClassDefinitions hashtable.  If it exists, I throw a BuildException.\n\nThe question remains, however, whether this is the desired behavior.  It makes \nit impossible to override tasks with others of the same name.  This could be \nmade conditional on an \"override\" attribute on the <taskdef> element.", "id": 5946, "time": "2001-09-23T23:08:18Z", "bug_id": 3205, "creation_time": "2001-09-23T23:08:18Z", "is_private": false}, {"count": 5, "tags": [], "text": "No this is not the desired behaviour. You should be able to override inbuilt \ntasks. A better fix may be to just always defer task creation by commenting out \nthis line in ProjectHelper\n\n                // task = project.createTask(tag);\n\nThat works OK but I haven't worked through any consequences yet.", "attachment_id": null, "bug_id": 3205, "id": 5947, "time": "2001-09-23T23:41:43Z", "creator": "conor@apache.org", "creation_time": "2001-09-23T23:41:43Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 3205, "attachment_id": null, "id": 6872, "time": "2001-10-19T00:29:05Z", "creator": "bodewig@apache.org", "creation_time": "2001-10-19T00:29:05Z", "is_private": false, "text": "Nightly build 2001-10-20 will now at least print a warning, but it won't fix\nAndreas original problem (the instance corresponding to <get> will be created\nbefore the taskdef has been evaluated, so the old definition wins).\n\nWorkaround is to move the <taskdef> outside of a <target>.\n\nConor, your proposed patch would break the reference mechanism where\nscripts or other tasks want to access task instances that have not been executed\nyet."}]