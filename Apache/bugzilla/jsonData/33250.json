[{"count": 0, "tags": [], "creator": "sumit_machwe@external.mckinsey.com", "attachment_id": null, "text": "Hi,\nMy application uses POI to generate MS Excel Workbooks. Average Size of a \nWorkbook is 30 Col X 1000 Rows X 25 Worksheets (file size is approx 5-6 MB). \n \nWhile doing a stress testing with 30 Concurrent user load, application started \nthrowing java.lang.OutfMemoryError\nWe noticed that there was a Heap Dump and the available memory did not return \nback to normal. It has been noticed that  \norg.apache.poi.hssf.usermodel.HSSFSheet objects are taking almost 100 MB space.\n\nDetails of development environment are:\n#JVM IBM (Wepsphere application Server 5.1)\n#2 GB available memory (Dedicated)before starting the stress test.\n#Initial heap size, as set by -Xms paramters is set to 256M.\n\nStress testing process is pretty decent and it closes all 30 sessions after \nthe excel file is generated in each one of them.. so I don't suspect \napplication holding any large objects for a long duration. \n\nPlease adivce if this is a known issue with HSSF.", "id": 70113, "time": "2005-01-26T18:02:49Z", "bug_id": 33250, "creation_time": "2005-01-26T18:02:49Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 33250, "text": "What was max heap size? 2GB?\n\nIn any case, a POI HSSF workbook takes a substantial amount of memory. Reading\nand writing take additional memory since it has to be done in-memory. Therefore,\nOut of Memory in concurrent access cannot be considered a bug. If, however, you\nfind memory LEAKS (ie, all memory should be reclaimed by the GC AFTER you loose\na reference to a workbook) then that is certainly a bug. \n\nThere is, of course, a long running feature request to reduce memory usage, but\nthat's waiting for contributions!", "id": 70151, "time": "2005-01-27T06:52:02Z", "creator": "avik@apache.org", "creation_time": "2005-01-27T06:52:02Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 33250, "attachment_id": null, "is_private": false, "id": 70152, "time": "2005-01-27T06:52:38Z", "creator": "avik@apache.org", "creation_time": "2005-01-27T06:52:38Z", "text": "What was max heap size? 2GB?\n\nIn any case, a POI HSSF workbook takes a substantial amount of memory. Reading\nand writing take additional memory since it has to be done in-memory. Therefore,\nOut of Memory in concurrent access cannot be considered a bug. If, however, you\nfind memory LEAKS (ie, all memory should be reclaimed by the GC AFTER you loose\na reference to a workbook) then that is certainly a bug. \n\nThere is, of course, a long running feature request to reduce memory usage, but\nthat's waiting for contributions!"}]