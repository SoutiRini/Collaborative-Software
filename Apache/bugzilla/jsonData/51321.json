[{"count": 0, "tags": [], "bug_id": 51321, "is_private": false, "text": "Created attachment 27106\njava code to reproduce the setCellValue bug in XSSFCell.java\n\nI am creating a xlsx file with only two cells. One cell is created with value \"ABC \" and the other cell is created with value \"ABC      \". Please note that the second cell differs from the first cell only with more ending spaces. However, in the generated xlsx file, both cells are populated with value \"ABC \". \n\nI believe the setCellValue method in XSSFCell.java has a bug. Perhaps it was using a pre-evaluated result string incorrectly in this case.\n\nPlease see the attached code to reproduce this problem.\n\npackage org.apache.poi.ss.examples;\n\nimport org.apache.poi.ss.usermodel.*;\nimport org.apache.poi.xssf.usermodel.*;\n\nimport java.io.FileOutputStream;\n\npublic class XSSFSetValueBug {\n\n\tpublic static void main(String[] args) throws Exception {\n        Workbook wb = new XSSFWorkbook();  //or new HSSFWorkbook();\n        Sheet sheet = wb.createSheet(\"sheet1\");\n\n        CreationHelper createHelper = wb.getCreationHelper();\n        Cell cell0 = sheet.createRow(0).createCell(0);\n        cell0.setCellValue(createHelper.createRichTextString(\"ABC \"));\n\n        Cell cell1 = sheet.createRow(1).createCell(0);\n        cell1.setCellValue(createHelper.createRichTextString(\"ABC      \"));\n\n        // Write the output to a file\n        FileOutputStream fileOut = new FileOutputStream(\"C:\\\\workspace\\\\TestXSSFSetValueBug.xlsx\");\n        wb.write(fileOut);\n        fileOut.close();\n    }\n}", "id": 146845, "time": "2011-06-03T19:49:04Z", "creator": "jxz164@hotmail.com", "creation_time": "2011-06-03T19:49:04Z", "attachment_id": 27106}, {"count": 1, "tags": [], "bug_id": 51321, "attachment_id": null, "id": 146846, "time": "2011-06-03T19:50:57Z", "creator": "jxz164@hotmail.com", "creation_time": "2011-06-03T19:50:57Z", "is_private": false, "text": "Both cells are populated with \"ABC \" to be more clear."}, {"count": 2, "tags": [], "bug_id": 51321, "attachment_id": null, "id": 146847, "time": "2011-06-03T19:54:02Z", "creator": "apache@gagravarr.org", "creation_time": "2011-06-03T19:54:02Z", "is_private": false, "text": "There's code in XSSFRichTextString (which XSSFCell uses) to handle leading and trailing spaces, which ought to be kicking in to solve this issue\n\nCan you try with a recent nightly build / svn checkout and see if you still have the problem?"}, {"count": 3, "tags": [], "creator": "jxz164@hotmail.com", "attachment_id": null, "is_private": false, "id": 146931, "time": "2011-06-07T14:29:41Z", "bug_id": 51321, "creation_time": "2011-06-07T14:29:41Z", "text": "OK. I have confirmed that this is fixed in the newly released poi-3.8-beta3.\n\nThanks!"}]