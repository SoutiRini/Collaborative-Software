[{"count": 0, "tags": [], "text": "Created attachment 31334\nJMeter workbench\n\nIf I set up jmeter to use an HTTP Test Script Recorder and then use JMeter as a proxy for a PUT request which does not use the Expect: 100-continue mechanism then the data of the image is corrupted. I sent an email to the users list which is in the archive but doesn't appear to have been sent to the list (neither I (who had subscribed prior to sending) nor my colleague, who has been subscribed for a long time, got the email), the content of which was as follows:\n\n\"Hi,\n\nWe're playing around with JMeter at the moment and wanted to sit JMeter\nbetween our test code and our backend HTTP service. We wanted to use\nJMeter to record all the tests that were performed but when we enable\nJMeter as an HTTP Proxy for our tests when a PUT request is made to\nupload an image the binary image data going into JMeter (which has an\nHTTP header Content-Type: image/jpeg) is considerably changed inside\nJMeter.\n\nI stuck a Charles proxy between the tests and JMeter and then between\nJMeter and the backend so I could see exactly what went in and what came\nout. I get the following results:\n\nThe Request headers (I'll not include the binary, but a hexdump of the\nbinary shows it to be malformed on exit) from our tests going into\nJMeter:\n\nPUT http://127.0.0.1:58082/image/abc HTTP/1.1\nHost: 127.0.0.1:58082\nContent-Length: 6504\nContent-Type: image/jpeg\nAccept-Encoding: gzip, deflate, compress\nAccept: */*\nUser-Agent: python-requests/2.2.1 CPython/2.7.6 Linux/3.12-1-amd64\n\nThe request headers which JMeter sends:\n\nPUT /image/abc HTTP/1.1\nConnection: keep-alive\nContent-Type: image/jpeg\nAccept: */*\nUser-Agent: python-requests/2.2.1 CPython/2.7.6 Linux/3.12-1-amd64\nAccept-Encoding: gzip, deflate, compress\nContent-Length: 11261\nHost: 127.0.0.1:58082\n\nYou can see the Content-Length is totally different and so our tests\nbreak when a following GET request doesn't get back the same data.\n\nI'm using JMeter 2.11 (downloaded from the JMeter website) on Debian\nJessie.\n\nIn JMeter we've done the following:\n\n1) Added an HTTP(S) Test Script Recorder to a blank WorkBench\n2) Changed the Port number to 58081\n3) Clicked start\n\nThen we run our tests and get the results above.\n\nBased on a bunch of searches we tried the following things which didn't\nhelp:\n\n1) Set the HTTP Sampler Settings->Type to Java\n2) Added a BSF Post Processing element to the Recorder with the\nfollowing script: 'prev.setDataEncoding(\"UTF-8\")'\n\nI'm now totally stumped, any suggestions as to a fix would be greatly\nappreciated, heck even just knowing what I'm doing is stupid would be\nawesome so I can go down a different route!\n\nIf it looks like a bug I could boil down exactly what's happening to a\ntiny script and submit it as a bug report.\n\nThanks,\n\nJonathan\"\n\nSince then I have further narrowed down that using the 100-continue mechanism means data will be correctly passed through the recorder.\n\nI used the following curl command to test this:\n\nhttp_proxy=127.0.0.1:8888 curl -v -H \"Expect: \" -H \"Content-Type: image/jpeg\" -T cat.jpeg 127.0.0.1:8082/image/abc\n\nIf I don't overwrite the expect header then the request works exactly as expected and the data is not corrupted (as was shown in the email referenced above).\n\nAttached is the jmx file for the extremely simple Workbench I've got set up.\n\nThanks,\n\nJonathan", "is_private": false, "bug_id": 56161, "id": 173367, "time": "2014-02-19T16:04:18Z", "creator": "jharden@moonfruit.com", "creation_time": "2014-02-19T16:04:18Z", "attachment_id": 31334}]