[{"count": 0, "tags": [], "bug_id": 48730, "attachment_id": null, "id": 134439, "time": "2010-02-11T19:56:36Z", "creator": "valdemar.pavesi@nsn.com", "creation_time": "2010-02-11T19:56:36Z", "is_private": false, "text": "During  https request/response I see the ERROR 11 EAGAIN\n\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n11 EAGAIN\nResource is temporarily unavailable. For example, the fork routine failed because\nthe system's process table is full or the user is not allowed to create any more processes.\nOr a system call failed because of insufficient memory or swap space.\n\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\na)  Resource temporarily unavailable\n\n\n\n# ps -ef  | grep http\n    root  5822     1   0 07:26:24 ?           0:03 /usr/apache2/bin/httpd -k start\n  wwwrun 15140  5822   0 11:08:19 ?          13:41 /usr/apache2/bin/httpd -k start\n    root 18729 18719   0 11:28:01 pts/4       0:00 grep http\n# ./errinfo -p 15140\n            EXEC          SYSCALL  ERR  DESC\n           httpd             read   11  Resource temporarily unavailable\n           httpd             read   11  Resource temporarily unavailable\n           httpd             read   11  Resource temporarily unavailable\n           httpd             read   11  Resource temporarily unavailable\n           httpd             read   11  Resource temporarily unavailable\n           httpd             read   11  Resource temporarily unavailable\n\n\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nb) ./dtruss -p 15140 -a -l -s\n\n\n15140/191:   2111013       5      2 read(0x152, \"81\\322\\v\\030\\001\\r\\0\", 0x1F40)                 = -1 Err#11\n\n              libc.so.1`_read+0x7\n              libapr-0.so.0.9.17`apr_socket_recv+0x3e\n              libaprutil-0.so.0.9.17`socket_bucket_read+0x59\n              httpd`core_input_filter+0x44c\n              httpd`ap_get_brigade+0x2b\n              mod_ssl.so`bio_filter_in_read+0xb5\n              libcrypto.so.0.9.7`BIO_read+0x63\n\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nc)  Here we can see when we call the function BIO_read.  ( -> enter , <- exit )\n\n\n./dapptrace -u libcrypto.so.0.9.7 -a -l -p 15140\n\n\n\n\n\n\n15140/126:    853949       .      .   -> libcrypto.so.0.9.7:BIO_read(0xA24FBD8, 0xD185008, 0x5)\n15140/126:    853951       .      .     -> mod_ssl.so:bio_filter_in_read(0xA24FBD8, 0xD185008, 0x5)\n15140/126:    853953       .      .       -> libssl_extra.so.0.9.7:SSL_version(0x8F020C8, 0x0, 0xA24FBD8)\n15140/126:    853954      14      1       <- libssl_extra.so.0.9.7:SSL_version = 11\n15140/126:    853955       .      .       -> httpd:ap_get_brigade(0xA76A0A8, 0xA76A068, 0x0)\n15140/126:    853957       .      .         -> httpd:core_input_filter(0xA76A0A8, 0xA76A068, 0x0)\n15140/126:    853958       .      .           -> libaprutil-0.so.0.9.17:socket_bucket_read(0x9CF20F0, 0xF66C99C4, 0xF66C99C0)\n15140/126:    853959       .      .             -> libaprutil-0.so.0.9.17:apr_bucket_alloc(0x1F40, 0x9CF2020, 0xD185008)\n15140/126:    853960       .      .               -> libapr-0.so.0.9.17:apr_allocator_alloc(0x9748388, 0x1F50, 0x989C058)\n15140/126:    853962       .      .                 -> libapr-0.so.0.9.17:allocator_alloc(0x9748388, 0x1F50, 0x1000000)\n15140/126:    853964      13      1                 <- libapr-0.so.0.9.17:allocator_alloc = 518\n15140/126:    853964      40      3               <- libapr-0.so.0.9.17:apr_allocator_alloc = 21\n15140/126:    853965      66      5             <- libaprutil-0.so.0.9.17:apr_bucket_alloc = 156\n15140/126:    853966       .      .             -> libapr-0.so.0.9.17:apr_socket_recv(0x989C058, 0xA3C2030, 0xF66C99C0)\n15140/126:    853967       .      .               -> libapr-0.so.0.9.17:apr_wait_for_io_or_timeout(0x0, 0x989C058, 0x1)\n15140/126:    853969       .      .                 -> libapr-0.so.0.9.17:apr_poll(0xF66C98EC, 0x1, 0xF66C990C)\n15140/126:    853970       .      .                   -> libapr-0.so.0.9.17:get_event(0x1, 0x129, 0xFEF06A45)\n15140/126:    853971      14      1                   <- libapr-0.so.0.9.17:get_event = 101\n15140/126:    853973       .      .                   -> libc.so.1:__div64(0x11E1A300, 0x0, 0x3E8)\n15140/126:    853974       .      .                     -> libc.so.1:divmod64(0xF66C9904, 0xFEE994B9, 0x11E1A300)\n15140/126:    853975      13      0                     <- libc.so.1:divmod64 = 48\n15140/126:    853976      37      3                   <- libc.so.1:__div64 = 47\n15140/126:    853977       .      .                   -> libc.so.1:poll(0xF66C9870, 0x1, 0x493E0)\n15140/126:    853979       .      .                     -> libc.so.1:_pollsys(0xF66C9870, 0x1, 0xF66C9850)\n15140/126:    853980       .      .                       -> libc.so.1:_save_nv_regs(0xF81BE414, 0xF66C9850, 0x493E0)\n15140/126:    853980      11      0                       <- libc.so.1:_save_nv_regs = 31\n15140/126:    853982       .      .                       -> libc.so.1:__pollsys(0xF66C9870, 0x1, 0xF66C9850)\n15140/198:    889354       .      .                         -> libaprutil-0.so.0.9.17:apr_brigade_destroy(0x9587038, 0xF1F104A8, 0xF1F104A4)\n15140/198:    889354       .      .                           -> libapr-0.so.0.9.17:apr_pool_cleanup_kill(0x93DA020, 0x9587038, 0xFEF05A60)\n15140/198:    889356      13      1                           <- libapr-0.so.0.9.17:apr_pool_cleanup_kill = 72\n15140/198:    889356       .      .                           -> libaprutil-0.so.0.9.17:apr_brigade_cleanup(0x9587038, 0x9585020, 0xFEA43A98)\n15140/198:    889357       .      .                             -> libaprutil-0.so.0.9.17:apr_bucket_destroy_noop(0x9585030, 0x9587038, 0xFEF20878)\n15140/198:    889357      13      0                             <- libaprutil-0.so.0.9.17:apr_bucket_destroy_noop = 7\n15140/198:    889358       .      .                             -> libaprutil-0.so.0.9.17:apr_bucket_free(0x9439148, 0x9587038, 0xFEF20878)\n15140/198:    889358      12      0                             <- libaprutil-0.so.0.9.17:apr_bucket_free = 63\n15140/198:    889359       .      .                             -> libaprutil-0.so.0.9.17:apr_bucket_destroy_noop(0xCB20008, 0x9587038, 0xFEF20878)\n15140/198:    889359      13      0                             <- libaprutil-0.so.0.9.17:apr_bucket_destroy_noop = 7\n15140/198:    889360       .      .                             -> libaprutil-0.so.0.9.17:apr_bucket_free(0x9439040, 0x9587038, 0xFEF20878)\n15140/198:    889360      12      0                             <- libaprutil-0.so.0.9.17:apr_bucket_free = 63\n15140/198:    889361       .      .                             -> libaprutil-0.so.0.9.17:apr_bucket_destroy_noop(0x0, 0x9587038, 0xFEF20878)\n15140/198:    889361      13      0                             <- libaprutil-0.so.0.9.17:apr_bucket_destroy_noop = 7\n15140/198:    889362       .      .                             -> libaprutil-0.so.0.9.17:apr_bucket_free(0x9439510, 0x9587038, 0xFEF20878)\n15140/198:    889362      12      0                             <- libaprutil-0.so.0.9.17:apr_bucket_free = 63\n15140/198:    889362     165      6                           <- libaprutil-0.so.0.9.17:apr_brigade_cleanup = 115\n15140/198:    889363     217      9                         <- libaprutil-0.so.0.9.17:apr_brigade_destroy = 53\n15140/198:    889372       .      .                         -> libaprutil-0.so.0.9.17:heap_bucket_destroy(0x94391A0, 0x993C4A8, 0x993CFC8)\n15140/198:    889373       .      .                           -> libaprutil-0.so.0.9.17:apr_bucket_shared_destroy(0x94391A0, 0x0, 0xFEA43A98)\n15140/198:    889374      16      1                           <- libaprutil-0.so.0.9.17:apr_bucket_shared_destroy = 26\n15140/198:    889374       .      .                           -> libaprutil-0.so.0.9.17:apr_bucket_free(0x958F030, 0x0, 0xFEA43A98)\n15140/198:    889376       .      .                             -> libapr-0.so.0.9.17:apr_allocator_free(0x928F008, 0x958F008, 0x94391A0)\n15140/198:    889377       .      .                               -> libapr-0.so.0.9.17:allocator_free(0x928F008, 0x958F008, 0x958F030)\n15140/198:    889378      14      1                               <- libapr-0.so.0.9.17:allocator_free = 317\n15140/198:    889379      42      3                             <- libapr-0.so.0.9.17:apr_allocator_free = 21\n15140/198:    889380      67      5                           <- libaprutil-0.so.0.9.17:apr_bucket_free = 63\n15140/198:    889380       .      .                           -> libaprutil-0.so.0.9.17:apr_bucket_free(0x94391A0, 0x0, 0xFEA43A98)\n15140/198:    889380      12      0                           <- libaprutil-0.so.0.9.17:apr_bucket_free = 63\n15140/198:    889381     150      9                         <- libaprutil-0.so.0.9.17:heap_bucket_destroy = 58\n15140/198:    889382       .      .                         -> libaprutil-0.so.0.9.17:apr_bucket_free(0x94390F0, 0x993C4A8, 0x993CFC8)\n15140/198:    889382      11      0                         <- libaprutil-0.so.0.9.17:apr_bucket_free = 63\n15140/198:    889383       .      .                         -> libaprutil-0.so.0.9.17:heap_bucket_read(0x9439250, 0xF1F107EC, 0xF1F107F0)\n15140/198:    889384      14      0                         <- libaprutil-0.so.0.9.17:heap_bucket_read = 34\n15140/198:    889386       .      .                         -> libssl_extra.so.0.9.7:SSL_write(0xB730988, 0x95A7030, 0x1FA0)\n15140/198:    889387       .      .                           -> libssl.so.0.9.7:ssl3_write(0xB730988, 0x95A7030, 0x1FA0)\n15140/198:    889388       .      .                             -> libc.so.1:___errno(0x93DA500, 0x1FA0, 0xFE999000)\n15140/198:    889388      11      0                             <- libc.so.1:___errno = 32\n15140/198:    889390       .      .                             -> libssl.so.0.9.7:ssl3_write_bytes(0xB730988, 0x17, 0x95A7030)\n15140/198:    889390       .      .                               -> libssl_extra.so.0.9.7:SSL_state(0xB730988, 0x0, 0xB730988)\n15140/198:    889391      11      0                               <- libssl_extra.so.0.9.7:SSL_state = 12\n15140/198:    889393       .      .                               -> libssl.so.0.9.7:do_ssl3_write(0xB730988, 0x17, 0x95A7030)\n15140/198:    889394       .      .                                 -> libc.so.1:memcpy(0xCB2000D, 0x95A7030, 0x1FA0)\n15140/198:    889401      18      7                                 <- libc.so.1:memcpy = 58\n15140/198:    889402       .      .                                 -> libssl.so.0.9.7:ssl3_mac(0xB730988, 0xCB21FAD, 0x1)\n15140/198:    889403       .      .                                   -> libcrypto.so.0.9.7:EVP_MD_CTX_init(0xF1F10680, 0xACA3A08, 0xB730988)\n15140/198:    889404       .      .                                     -> libc.so.1:memset(0xF1F10680, 0x0, 0x10)\n15140/198:    889405      10      0                                     <- libc.so.1:memset = 282\n15140/198:    889406      34      2                                   <- libcrypto.so.0.9.7:EVP_MD_CTX_init = 34\n15140/198:    889406       .      .                                   -> libcrypto.so.0.9.7:EVP_DigestInit_ex(0xF1F10680, 0xFE7CB198, 0x0)\n15140/198:    889407       .      .                                     -> libcrypto.so.0.9.7:ENGINE_get_digest_engine(0x4, 0xFE73195E, 0xFE7319D2)\n15140/198:    889409       .      .                                       -> libcrypto.so.0.9.7:engine_table_select(0xFE7BFF2C, 0x4, 0xFE73963D)\n15140/198:    889410      13      1                                       <- libcrypto.so.0.9.7:engine_table_select = 348\n15140/198:    889410      40      2                                     <- libcrypto.so.0.9.7:ENGINE_get_digest_engine = 39\n15140/198:    889411       .      .                                     -> libcrypto.so.0.9.7:CRYPTO_malloc(0x60, 0xFE78E97C, 0xCA)\n15140/198:    889412       .      .                                       -> libcrypto.so.0.9.7:default_malloc_ex(0x60, 0xFE78E97C, 0xCA)\n15140/198:    889413       .      .                                         -> libumem.so.1:malloc(0x60, 0x8080C46, 0xFE6F37ED)\n15140/198:    889414       .      .                                           -> libumem.so.1:umem_alloc(0x68, 0x0, 0xF1F10680)\n15140/198:    889415       .      .                                             -> libumem.so.1:umem_cache_alloc(0x80D7A10, 0x0, 0x60)\n15140/198:    889416       .      .                                               -> libc.so.1:pthread_self(0x60, 0x80D7A10, 0xFEF75000)\n15140/198:    889416      11      0                                               <- libc.so.1:pthread_self = 29\n15140/198:    889417       .      .                                               -> libc.so.1:mutex_lock(0x80D7C00, 0x60, 0x80D7A10)\n15140/198:    889417       .      .                                                 -> libc.so.1:mutex_lock_impl(0x80D7C00, 0x0, 0xFEF75000)\n15140/198:    889418      12      0                                                 <- libc.so.1:mutex_lock_impl = 297\n15140/198:    889419      34      1                                               <- libc.so.1:mutex_lock = 33\n15140/198:    889419       .      .                                               -> libc.so.1:mutex_unlock(0x80D7C00, 0x60, 0x80D7A10)\n15140/198:    889420       .      .                                                 -> libc.so.1:mutex_unlock_queue(0x80D7C00, 0x0, 0x80D7C00)\n15140/198:    889421       .      .                                                   -> libc.so.1:clear_lockbyte(0x80D7C0C, 0x0, 0x80D7C00)\n15140/198:    889421      12      0                                                   <- libc.so.1:clear_lockbyte = 61\n15140/198:    889422      35      1                                                 <- libc.so.1:mutex_unlock_queue = 151\n15140/198:    889422      58      2                                               <- libc.so.1:mutex_unlock = 318\n15140/198:    889423       .      .                                               -> libumem.so.1:umem_cache_alloc_debug(0x80D7A10, 0x9748B80, 0x0)\n15140/198:    889424       .      .                                                 -> libumem.so.1:verify_and_copy_pattern(0xDEADBEEF, 0xDEADBEEF, 0xBADDCAFE)\n15140/198:    889424      14      0                                                 <- libumem.so.1:verify_and_copy_pattern = 109\n15140/198:    889425       .      .                                                 -> libc.so.1:gethrtime(0x0, 0x9748B80, 0xFEF75000)\n15140/198:    889427      11      1                                                 <- libc.so.1:gethrtime = 7\n15140/198:    889427       .      .                                                 -> libc.so.1:pthread_self(0x0, 0x9748B80, 0xFEF75000)\n15140/198:    889428      11      0                                                 <- libc.so.1:pthread_self = 29\n15140/198:    889428       .      .                                                 -> libumem.so.1:getpcstack(0x9EF5488, 0xF, 0x0)\n15140/198:    889429       .      .                                                   -> libc.so.1:stack_getbounds(0xF1F10534, 0xFEF77784, 0x9EF5460)\n15140/198:    889429      12      0                                                   <- libc.so.1:stack_getbounds = 50\n15140/198:    889430       .      .                                                   -> libumem.so.1:getfp(0xFEF77784, 0x9EF5460, 0xFEF75000)\n15140/198:    889431      10      0                                                   <- libumem.so.1:getfp = 2\n15140/198:    889432      57      3                                                 <- libumem.so.1:getpcstack = 384\n15140/198:    889432       .      .                                                 -> libc.so.1:pthread_self(0xFEF77784, 0x9EF5460, 0xFEF75000)\n15140/198:    889433      11      0                                                 <- libc.so.1:pthread_self = 29\n15140/198:    889433       .      .                                                 -> libc.so.1:mutex_lock(0x80BE0BC, 0xFEF77784, 0x9EF5460)\n15140/198:    889434       .      .                                                   -> libc.so.1:mutex_lock_impl(0x80BE0BC, 0x0, 0xFEF75000)\n15140/198:    889434      12      0                                                   <- libc.so.1:mutex_lock_impl = 297\n15140/198:    889435      33      1                                                 <- libc.so.1:mutex_lock = 33\n15140/198:    889435       .      .                                                 -> libc.so.1:bcopy(0x9EF5460, 0x80C61F4, 0x64)\n15140/198:    889436       .      .                                                   -> libc.so.1:memmove(0x80C61F4, 0x9EF5460, 0x64)\n15140/198:    889437      11      1                                                   <- libc.so.1:memmove = 106\n15140/198:    889438      33      2                                                 <- libc.so.1:bcopy = 37\n15140/198:    889438       .      .                                                 -> libc.so.1:mutex_unlock(0x80BE0BC, 0xFEF77784, 0x9EF5460)\n15140/198:    889439       .      .                                                   -> libc.so.1:mutex_unlock_queue(0x80BE0BC, 0x0, 0x80BE0BC)\n15140/198:    889439       .      .                                                     -> libc.so.1:clear_lockbyte(0x80BE0C8, 0x0, 0x80BE0BC)\n15140/198:    889440      11      0                                                     <- libc.so.1:clear_lockbyte = 61\n15140/198:    889440      34      1                                                   <- libc.so.1:mutex_unlock_queue = 151\n15140/198:    889441      57      2                                                 <- libc.so.1:mutex_unlock = 318\n15140/198:    889441     330     18                                               <- libumem.so.1:umem_cache_alloc_debug = 408\n15140/198:    889442     491     27                                             <- libumem.so.1:umem_cache_alloc = 517\n15140/198:    889443     514     28                                           <- libumem.so.1:umem_alloc = 240\n15140/198:    889443     534     29                                         <- libumem.so.1:malloc = 62\n15140/198:    889444     557     31                                       <- libcrypto.so.0.9.7:default_malloc_ex = 35\n15140/198:    889445     582     33                                     <- libcrypto.so.0.9.7:CRYPTO_malloc = 163\n15140/198:    889446       .      .                                     -> libcrypto.so.0.9.7:MD5_Init(0x9748B88, 0x4, 0xFE735755)\n15140/198:    889447      12      0                                     <- libcrypto.so.0.9.7:MD5_Init = 47\n15140/198:    889447     685     41                                   <- libcrypto.so.0.9.7:EVP_DigestInit_ex = 275\n15140/198:    889448       .      .                                   -> libcrypto.so.0.9.7:EVP_DigestUpdate(0xF1F10680, 0xACA3A44, 0x10)\n15140/198:    889449       .      .                                     -> libcrypto.so.0.9.7:MD5_Update(0x9748B88, 0xACA3A44, 0x10)\n15140/198:    889450      11      1                                     <- libcrypto.so.0.9.7:MD5_Update = 747\n15140/198:    889451      35      2                                   <- libcrypto.so.0.9.7:EVP_DigestUpdate = 24\n15140/198:    889451       .      .                                   -> libcrypto.so.0.9.7:EVP_DigestUpdate(0xF1F10680, 0xFEA0291C, 0x30)\n15140/198:    889452       .      .                                     -> libcrypto.so.0.9.7:MD5_Update(0x9748B88, 0xFEA0291C, 0x30)\n15140/198:    889453       .      .                                       -> libcrypto.so.0.9.7:md5_block_host_order(0x9748B88, 0x9748BA0, 0x1)\n15140/198:    889454      13      1                                       <- libcrypto.so.0.9.7:md5_block_host_order = 1738\n15140/198:    889455      38      2                                     <- libcrypto.so.0.9.7:MD5_Update = 747\n15140/198:    889455      61      4                                   <- libcrypto.so.0.9.7:EVP_DigestUpdate = 24\n15140/198:    889456       .      .                                   -> libcrypto.so.0.9.7:EVP_DigestUpdate(0xF1F10680, 0xACA3A3C, 0x8)\n15140/198:    889467       .      .                                     -> libcrypto.so.0.9.7:MD5_Update(0x9748B88, 0xACA3A3C, 0x8)\n15140/198:    889468      11      0                                     <- libcrypto.so.0.9.7:MD5_Update = 747\n15140/198:    889469     839     13                                   <- libcrypto.so.0.9.7:EVP_DigestUpdate = 24\n15140/198:    889469       .      .                                   -> libcrypto.so.0.9.7:EVP_DigestUpdate(0xF1F10680, 0xF1F106B0, 0x1)\n15140/198:    889470       .      .                                     -> libcrypto.so.0.9.7:MD5_Update(0x9748B88, 0xF1F106B0, 0x1)\n15140/198:    889471      11      1                                     <- libcrypto.so.0.9.7:MD5_Update = 412\n15140/198:    889472      34      2                                   <- libcrypto.so.0.9.7:EVP_DigestUpdate = 24\n15140/198:    889472       .      .                                   -> libcrypto.so.0.9.7:EVP_DigestUpdate(0xF1F10680, 0xCB21FAD, 0x2)\n15140/198:    889473       .      .                                     -> libcrypto.so.0.9.7:MD5_Update(0x9748B88, 0xCB21FAD, 0x2)\n15140/198:    889474      11      0                                     <- libcrypto.so.0.9.7:MD5_Update = 412\n15140/198:    889474      34      1                                   <- libcrypto.so.0.9.7:EVP_DigestUpdate = 24\n15140/198:    889474       .      .                                   -> libcrypto.so.0.9.7:EVP_DigestUpdate(0xF1F10680, 0xCB2000D, 0x1FA0)\n15140/198:    889475       .      .                                     -> libcrypto.so.0.9.7:MD5_Update(0x9748B88, 0xCB2000D, 0x1FA0)\n15140/198:    889476       .      .                                       -> libcrypto.so.0.9.7:md5_block_host_order(0x9748B88, 0x9748BA0, 0x1)\n15140/198:    889477      13      0                                       <- libcrypto.so.0.9.7:md5_block_host_order = 1738\n15140/198:    889478       .      .                                       -> libcrypto.so.0.9.7:md5_block_host_order(0x9748B88, 0xCB20042, 0x7D)\n15140/198:    889502      37     24                                       <- libcrypto.so.0.9.7:md5_block_host_order = 1738\n15140/198:    889503      87     27                                     <- libcrypto.so.0.9.7:MD5_Update = 747\n15140/198:    889503     110     28                                   <- libcrypto.so.0.9.7:EVP_DigestUpdate = 24\n15140/198:    889504       .      .                                   -> libcrypto.so.0.9.7:EVP_DigestFinal_ex(0xF1F10680, 0xCB21FAD, 0x0)\n15140/198:    889505       .      .                                     -> libcrypto.so.0.9.7:MD5_Final(0xCB21FAD, 0x9748B88, 0xFE7357A2)\n15140/198:    889506       .      .                                       -> libcrypto.so.0.9.7:md5_block_host_order(0x9748B88, 0x9748BA0, 0x1)\n15140/198:    889507      13      1                                       <- libcrypto.so.0.9.7:md5_block_host_order = 1738\n15140/198:    889507      38      2                                     <- libcrypto.so.0.9.7:MD5_Final = 315\n15140/198:    889508       .      .                                     -> libc.so.1:memset(0x9748B88, 0x0, 0x60)\n15140/198:    889509      10      0                                     <- libc.so.1:memset = 282\n15140/198:    889510      84      5                                   <- libcrypto.so.0.9.7:EVP_DigestFinal_ex = 138\n15140/198:    889510       .      .                                   -> libcrypto.so.0.9.7:EVP_DigestInit_ex(0xF1F10680, 0xFE7CB198, 0x0)\n15140/198:    889511       .      .                                     -> libcrypto.so.0.9.7:ENGINE_get_digest_engine(0x4, 0x0, 0xFE7319D2)\n15140/198:    889512       .      .                                       -> libcrypto.so.0.9.7:engine_table_select(0xFE7BFF2C, 0x4, 0xFE73963D)\n15140/198:    889513      13      0                                       <- libcrypto.so.0.9.7:engine_table_select = 348\n15140/198:    889513      39      2                                     <- libcrypto.so.0.9.7:ENGINE_get_digest_engine = 39\n15140/198:    889514       .      .                                     -> libcrypto.so.0.9.7:MD5_Init(0x9748B88, 0x4, 0xFE735755)\n15140/198:    889515      11      0                                     <- libcrypto.so.0.9.7:MD5_Init = 47\n15140/198:    889515      88      5                                   <- libcrypto.so.0.9.7:EVP_DigestInit_ex = 275\n15140/198:    889516       .      .                                   -> libcrypto.so.0.9.7:EVP_DigestUpdate(0xF1F10680, 0xACA3A44, 0x10)\n15140/198:    889516       .      .                                     -> libcrypto.so.0.9.7:MD5_Update(0x9748B88, 0xACA3A44, 0x10)\n15140/198:    889517      11      0                                     <- libcrypto.so.0.9.7:MD5_Update = 747\n15140/198:    889518      35      2                                   <- libcrypto.so.0.9.7:EVP_DigestUpdate = 24\n15140/126:    853998    2830     16                                 <- libc.so.1:__pollsys = 13\n15140/126:    853999    2876     19                               <- libc.so.1:_pollsys = 318\n15140/126:    854000    2900     22                             <- libc.so.1:poll = 91\n15140/126:    854001       .      .                             -> libapr-0.so.0.9.17:get_revent(0x1, 0x129, 0x10001)\n15140/126:    854002      14      0                             <- libapr-0.so.0.9.17:get_revent = 101\n15140/126:    854003    3025     33                           <- libapr-0.so.0.9.17:apr_poll = 353\n15140/126:    854004    3052     36                         <- libapr-0.so.0.9.17:apr_wait_for_io_or_timeout = 168\n15140/126:    854005       .      .                         -> libc.so.1:read(0x129, 0xA3C2030, 0x1F40)\n15140/126:    854006       .      .                           -> libc.so.1:_save_nv_regs(0xF81BE414, 0x989C058, 0xFEEAA558)\n15140/126:    854007      11      0                           <- libc.so.1:_save_nv_regs = 31\n15140/126:    854008       .      .                           -> libc.so.1:_read(0x129, 0xA3C2030, 0x1F40)\n15140/126:    854017      21      9                           <- libc.so.1:_read = 19\n15140/126:    854019      67     13                         <- libc.so.1:read = 144\n15140/126:    854019    3160     53                       <- libapr-0.so.0.9.17:apr_socket_recv = 287\n15140/126:    854021       .      .                       -> libaprutil-0.so.0.9.17:apr_bucket_heap_make(0x9CF20F0, 0xA3C2030, 0x43)\n15140/126:    854021       .      .                         -> libaprutil-0.so.0.9.17:apr_bucket_alloc(0x10, 0x9CF2020, 0x989C058)\n15140/126:    854022      12      0                         <- libaprutil-0.so.0.9.17:apr_bucket_alloc = 156\n15140/126:    854023       .      .                         -> libaprutil-0.so.0.9.17:apr_bucket_shared_make(0x9CF20F0, 0x9CF2098, 0x0)\n15140/126:    854024      14      0                         <- libaprutil-0.so.0.9.17:apr_bucket_shared_make = 54\n15140/126:    854025      67      4                       <- libaprutil-0.so.0.9.17:apr_bucket_heap_make = 166\n15140/126:    854026       .      .                       -> libaprutil-0.so.0.9.17:apr_bucket_socket_create(0x989C058, 0x9CF2020, 0xD185008)\n15140/126:    854027       .      .                         -> libaprutil-0.so.0.9.17:apr_bucket_alloc(0x24, 0x9CF2020, 0x9CF20F0)\n15140/126:    854042      27     15                         <- libaprutil-0.so.0.9.17:apr_bucket_alloc = 156\n15140/126:    854043       .      .                         -> libaprutil-0.so.0.9.17:apr_bucket_socket_make(0x9CF2148, 0x989C058, 0x9CF20F0)\n15140/126:    854044      13      0                         <- libaprutil-0.so.0.9.17:apr_bucket_socket_make = 53\n15140/126:    854045      82     18                       <- libaprutil-0.so.0.9.17:apr_bucket_socket_create = 66\n15140/126:    854046    3445     87                     <- libaprutil-0.so.0.9.17:socket_bucket_read = 347\n15140/126:    854047       .      .                     -> libaprutil-0.so.0.9.17:apr_brigade_partition(0xA76A0E0, 0x5, 0x0)\n15140/126:    854049       .      .                       -> libaprutil-0.so.0.9.17:apr_bucket_shared_split(0x9CF20F0, 0x5, 0xD185008)\n15140/126:    854050       .      .                         -> libaprutil-0.so.0.9.17:apr_bucket_simple_split(0x9CF20F0, 0x5, 0xA76A0E4)\n15140/126:    854051       .      .                           -> libaprutil-0.so.0.9.17:apr_bucket_simple_copy(0x9CF20F0, 0xF66C9944, 0x5)\n15140/126:    854052       .      .                             -> libaprutil-0.so.0.9.17:apr_bucket_alloc(0x24, 0x9CF2020, 0x5)\n15140/126:    854052       9      0                             <- libaprutil-0.so.0.9.17:apr_bucket_alloc = 156\n15140/126:    854053      34      1                           <- libaprutil-0.so.0.9.17:apr_bucket_simple_copy = 98\n15140/126:    854054      60      3                         <- libaprutil-0.so.0.9.17:apr_bucket_simple_split = 105\n15140/126:    854054      86      5                       <- libaprutil-0.so.0.9.17:apr_bucket_shared_split = 49\n15140/126:    854055     113      8                     <- libaprutil-0.so.0.9.17:apr_brigade_partition = 421\n15140/126:    854056       .      .                     -> httpd:brigade_move(0xA76A0E0, 0xA76A100, 0x9CF2040)\n15140/126:    854057      11      0                     <- httpd:brigade_move = 107\n15140/126:    854058    3623    101                   <- httpd:core_input_filter = 1929\n15140/126:    854059    3651    104                 <- httpd:ap_get_brigade = 62\n15140/126:    854061       .      .                 -> mod_ssl.so:brigade_consume(0xA76A068, 0x0, 0xD185008)\n15140/126:    854062       .      .                   -> libaprutil-0.so.0.9.17:heap_bucket_read(0x9CF20F0, 0xF66C9A10, 0xF66C9A14)\n15140/126:    854063      10      0                   <- libaprutil-0.so.0.9.17:heap_bucket_read = 34\n15140/126:    854064       .      .                   -> libc.so.1:memcpy(0xD185008, 0xA3C2030, 0x5)\n15140/126:    854065       9      1                   <- libc.so.1:memcpy = 58\n15140/126:    854066       .      .                   -> libaprutil-0.so.0.9.17:heap_bucket_destroy(0x9CF2098, 0xD185008, 0xA768020)\n15140/126:    854066       .      .                     -> libaprutil-0.so.0.9.17:apr_bucket_shared_destroy(0x9CF2098, 0x5, 0xFEA43A98)\n15140/126:    854067      11      0                     <- libaprutil-0.so.0.9.17:apr_bucket_shared_destroy = 26\n15140/126:    854067      35      1                   <- libaprutil-0.so.0.9.17:heap_bucket_destroy = 58\n15140/126:    854068       .      .                   -> libaprutil-0.so.0.9.17:apr_bucket_free(0x9CF20F0, 0xD185008, 0xA768020)\n15140/126:    854068      10      0                   <- libaprutil-0.so.0.9.17:apr_bucket_free = 63\n15140/126:    854069     120      7                 <- mod_ssl.so:brigade_consume = 519\n15140/126:    854070    3838    118               <- mod_ssl.so:bio_filter_in_read = 385\n15140/126:    854071    3866    122             <- libcrypto.so.0.9.7:BIO_read = 136\n\n\n\n\n\n\n\n++++++++++++++++++++++++++++++++++++++++++++++\nd) logs\n\n\n# ./apachectl -S\nVirtualHost configuration:\n10.115.11.227:80       bcm1000-a (/etc/apache2/listen.conf:36)\n10.115.11.227:443      bcm1000-a (/etc/apache2/ssl-global.conf:31)\n10.115.11.227:7443     bcm1000-a (/etc/apache2/ssl-global.conf:102)\n10.115.11.227:9443     bcm1000-a (/etc/apache2/ssl-global.conf:175)\n10.115.11.131:80       bcm1000-a (/etc/apache2/listen.conf:36)\n10.115.11.131:443      bcm1000-a (/etc/apache2/ssl-global.conf:31)\n10.115.11.131:7443     bcm1000-a (/etc/apache2/ssl-global.conf:102)\n10.115.11.131:9443     bcm1000-a (/etc/apache2/ssl-global.conf:175)\n10.115.11.131:6443     bcm1000-a (/etc/apache2/ssl-global.conf:229)\n10.115.11.132:80       bcm1000-a (/etc/apache2/listen.conf:36)\n10.115.11.132:443      bcm1000-a (/etc/apache2/ssl-global.conf:31)\n10.115.11.132:7443     bcm1000-a (/etc/apache2/ssl-global.conf:102)\n10.115.11.132:9443     bcm1000-a (/etc/apache2/ssl-global.conf:175)\n10.115.11.132:6443     bcm1000-a (/etc/apache2/ssl-global.conf:229)\nSyntax OK\n#\n\n\n# ./apachectl -v\nServer version: Apache/2.0.63\nServer built:   Apr 16 2008 16:57:57\n#  ./apachectl -V\nServer version: Apache/2.0.63\nServer built:   Apr 16 2008 16:57:57\nServer's Module Magic Number: 20020903:13\nServer loaded:  APR 0.9.17, APR-UTIL 0.9.15\nCompiled using: APR 0.9.17, APR-UTIL 0.9.15\nArchitecture:   32-bit\nServer compiled with....\n -D APACHE_MPM_DIR=\"server/mpm/worker\"\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_FCNTL_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D HTTPD_ROOT=\"/usr/apache2\"\n -D SUEXEC_BIN=\"/usr/apache2/bin/suexec\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"/etc/apache2/mime.types\"\n -D SERVER_CONFIG_FILE=\"/etc/apache2/httpd.conf\""}, {"text": "Created attachment 24973\ndtrace\n\ndtrace", "tags": [], "creator": "valdemar.pavesi@nsn.com", "attachment_id": 24973, "count": 1, "id": 134440, "time": "2010-02-11T20:02:31Z", "bug_id": 48730, "creation_time": "2010-02-11T20:02:31Z", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 48730, "text": "EAGAIN is not an error for these socket I/O calls.\n\nDo you have a problem symptom other than seeing EAGAIN in traces?", "id": 134441, "time": "2010-02-11T20:07:22Z", "creator": "trawick@apache.org", "creation_time": "2010-02-11T20:07:22Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "Jeff,\n\nI see a error during new session \"the system is in overload ,try later\".\n\n\nis it a configuration issue ?\n\n\n\n\n   PID USERNAME USR SYS TRP TFL DFL LCK SLP LAT VCX ICX SCL SIG PROCESS/LWPID\n 23017 wwwrun   0.4 1.2 0.0 0.0 0.0 0.1  57  41  1K 218 11K   0 httpd/204\n 23017 wwwrun   0.2 0.3 0.0 0.0 0.0  81  15 3.7  50  11 348   0 httpd/31\n 23017 wwwrun   0.3 0.0 0.0 0.0 0.0  81  15 3.9  59   9 403   0 httpd/167\n 23017 wwwrun   0.3 0.0 0.0 0.0 0.0  76  20 3.7  47  12 351   0 httpd/65\n 23017 wwwrun   0.3 0.0 0.0 0.0 0.0  77  19 3.6  53   7 386   0 httpd/64\n 23017 wwwrun   0.3 0.0 0.0 0.0 0.0  81  16 3.4  50  11 364   0 httpd/194\n 23017 wwwrun   0.3 0.0 0.0 0.0 0.0  77  19 3.7  53   7 382   0 httpd/34\n 23017 wwwrun   0.3 0.0 0.0 0.0 0.0  83  12 4.1  52  10 364   0 httpd/139\n 23017 wwwrun   0.3 0.0 0.0 0.0 0.0  81  16 3.5  48   7 358   0 httpd/201\n 23017 wwwrun   0.3 0.0 0.0 0.0 0.0  80  17 3.5  52  12 366   0 httpd/9\n 23017 wwwrun   0.3 0.0 0.0 0.0 0.0  82  14 3.2  53   9 365   0 httpd/162\n 23017 wwwrun   0.3 0.0 0.0 0.0 0.0  80  16 3.5  50  12 349   0 httpd/159\n 23017 wwwrun   0.3 0.0 0.0 0.0 0.0  80  16 3.6  52   7 357   0 httpd/185\n 23017 wwwrun   0.2 0.0 0.0 0.0 0.0  83  13 3.3  51   8 351   0 httpd/91\n 23017 wwwrun   0.2 0.0 0.0 0.0 0.0  79  17 3.7  51   9 356   0 httpd/77\n 23017 wwwrun   0.2 0.0 0.0 0.0 0.0  79  18 3.0  48  10 352   0 httpd/67\n 23017 wwwrun   0.2 0.0 0.0 0.0 0.0  84  13 3.1  50   8 346   0 httpd/46\n 23017 wwwrun   0.2 0.0 0.0 0.0 0.0  80  16 3.4  47   7 349   0 httpd/192\n 23017 wwwrun   0.2 0.0 0.0 0.0 0.0  80  16 3.3  48   8 351   0 httpd/129\n 23017 wwwrun   0.2 0.0 0.0 0.0 0.0  80  15 4.0  52   9 360   0 httpd/96\nTotal: 1 processes, 204 lwps, load averages: 30.05, 28.70, 28.39\n\n\nThanks!\nValdemar", "attachment_id": null, "id": 134442, "creator": "valdemar.pavesi@nsn.com", "time": "2010-02-11T20:20:34Z", "bug_id": 48730, "creation_time": "2010-02-11T20:20:34Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "trawick@apache.org", "text": "Move this to the user support mailing list for now.  The bug can be reopened if discussion there leads to the suspicion that the symptom is due to a bug.\n\nhttp://httpd.apache.org/lists.html#http-users\n\n>I see a error during new session \"the system is in overload ,try later\".\n\nIn your post, describe where this message appears.", "count": 4, "id": 134444, "time": "2010-02-11T20:33:29Z", "bug_id": 48730, "creation_time": "2010-02-11T20:33:29Z", "is_private": false}]