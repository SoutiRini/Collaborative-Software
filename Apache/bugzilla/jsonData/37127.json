[{"text": "We have been using the alpha Apt task quite successfully in our build scripts. \nThanks for including it in this release!\n\nOne thing that we have ran into is that it is not possible to define the \noptions externally and then reference them in the apt task (something akin to \npath refs). We are basically trying to create a fully parameterizable build \nscript that includes an Apt task.", "tags": [], "bug_id": 37127, "is_private": false, "count": 0, "id": 81271, "time": "2005-10-17T20:45:59Z", "creator": "kosta@bea.com", "creation_time": "2005-10-17T20:45:59Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "stevel@apache.org", "attachment_id": null, "text": "Does <presetdef> or <macro> let you wrap up a new declaration with your\npreferred options?", "id": 81273, "time": "2005-10-17T20:56:02Z", "bug_id": 37127, "creation_time": "2005-10-17T20:56:02Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 37127, "attachment_id": null, "is_private": false, "id": 81274, "time": "2005-10-17T20:57:43Z", "creator": "mbenson@apache.org", "creation_time": "2005-10-17T20:57:43Z", "text": "I concur; you should have success referencing an externally defined \n<presetdef> via either <import> or an antlib."}, {"count": 3, "tags": [], "bug_id": 37127, "text": "I don't believe using macro or presetdef facility fits the bill for what I am \ntrying to do. The usecase is almost identical to the path ref usecase. In \nparticular, we want create a common build script that would get called from \ndifferent places with different annotation processors. Depending on which \nannotation processors are in the processor path, the set of options needs to \nvary. So I want to allow the caller to define a named processor path (possible \nright now) and a named option set (not possible right now) and then refer to \nboth when calling the Apt task.", "id": 81277, "time": "2005-10-17T21:11:44Z", "creator": "kosta@bea.com", "creation_time": "2005-10-17T21:11:44Z", "is_private": false, "attachment_id": null}]