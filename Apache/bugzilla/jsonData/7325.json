[{"count": 0, "tags": [], "creator": "craiglaurent@yahoo.com", "attachment_id": null, "id": 12130, "time": "2002-03-21T13:58:49Z", "bug_id": 7325, "creation_time": "2002-03-21T13:58:49Z", "is_private": false, "text": "I would like to notify you of a bug in the Uptodate task (and Condition/uptodate).\n\nThe target merge map file was consistently rooted at the directory for the\nsrcfiles, rather than the ant buildfile root.  This was very confusing, and\nrequired me to duplicate property information.\n\nThis is vaguely similiar to bug 5454 in that the maps seem to be messing up.\n\nHere is an example of what I would like to be able to do:\n  <property name=\"build.dir\" value=\"./build\" />\n  <property name=\"classes.dir\" value=\"${build.dir}/classes\" />\n  <property name=\"config.dir\" value=\"./config\" />\n<uptodate property=\"jar.required\"  >\n  <srcfiles dir= \"${classes.dir}\" includes=\"**/*.java\"/>\n  <srcfiles dir= \"${config.dir}\" includes=\"Manifest.txt\"/>  <!-- not used, see\nbug 7324 -->\n  <mapper type=\"merge\" to=\"${build.dir}/application.jar\"/>\n</uptodate>\nBut then it looks for the jar file in xxxx/build/classes/./build/application.jar\n\nThis could be worked around as follows:\n<uptodate property=\"jar.required\"  >\n  <srcfiles dir= \"${classes.dir}\" includes=\"**/*.java\"/>\n  <srcfiles dir= \"${config.dir}\" includes=\"Manifest.txt\"/>  <!-- not used, see\nbug 7324 -->\n  <mapper type=\"merge\" to=\"../application.jar\"/>\n</uptodate>\nBut then I have problems if directory structure changes in the wrong ways (and\nthis would be very hard to catch!)."}, {"count": 1, "tags": [], "creator": "jakarta@ehatchersolutions.com", "attachment_id": null, "id": 12155, "time": "2002-03-21T20:24:16Z", "bug_id": 7325, "creation_time": "2002-03-21T20:24:16Z", "is_private": false, "text": "Use\n\n<property name=\"build.dir\" location=\"./build\" />\n\ninstead.  I believe that will be an even better work around!  :)\n\nI personally don't consider the root directory issue a bug for <uptodate>."}, {"count": 2, "tags": [], "text": "I tried what you suggested.  It didn't work; uptodate then thinks that the jar\nis in the folling path:\nD:\\project\\build\\classes\\D:\\project\\build\\application.jar\nnote how it appended the full build.dir after the classes.dir, and then gets\nconfused by that.", "attachment_id": null, "bug_id": 7325, "id": 12190, "time": "2002-03-22T19:07:14Z", "creator": "craiglaurent@yahoo.com", "creation_time": "2002-03-22T19:07:14Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 7325, "text": "Just to clarify: It failed when your mapper was this?\n\n  <mapper type=\"merge\" to=\"${build.dir}/application.jar\"/>\n\nOr the other variation you showed?  If the 'to' attribute is an absolute path \n(which setting build.dir via location does) then it should work.  ", "count": 3, "id": 12192, "time": "2002-03-22T19:23:09Z", "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-03-22T19:23:09Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 7325, "attachment_id": null, "id": 12193, "time": "2002-03-22T19:31:31Z", "creator": "craiglaurent@yahoo.com", "creation_time": "2002-03-22T19:31:31Z", "is_private": false, "text": "yes, it failed with the code you recommended, here is an updated build section:\n<property name=\"build.dir\"   location=\"./build\" />\n<property name=\"classes.dir\" location=\"${build.dir}/classes\" />\n<property name=\"config.dir\"  location=\"./config\" />\n<uptodate property=\"jar.notRequired\"  >\n  <srcfiles dir=\"${classes.dir}\" includes=\"**/*.java\"/>\n  <mapper type=\"merge\" to=\"${build.dir}/application.jar\"/>\n</uptodate>\n\nWhile it sure seems that it should be putting an absolute path\n(D:\\project\\build\\application.jar) into the mapper, what seems to be happening\nis that the mapper is appending its \"to\" to the srcfiles's \"dir\" \n(D:\\project\\build\\classes\\D:\\project\\build\\application.jar).\nI don't know why this would happen, but it is what is shown when I run the\ntarget with \"-verbose\"."}, {"count": 5, "tags": [], "bug_id": 7325, "attachment_id": null, "text": "When {build,classes}.dir are set using 'location', I can't get this to \nreproduce. Running it -verbose, I see the directory for the target file being \ncorrect, and the property gets set correctly, according to whether the jar file \nis newer or not. Can you post the verbose output that shows the doubled-up \nfilename? (Note: I can get it to reproduce when the dir props are set \nusing 'value', but not when using 'location'.)", "id": 12227, "time": "2002-03-24T01:42:06Z", "creator": "holtdl@yahoo.com", "creation_time": "2002-03-24T01:42:06Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 7325, "attachment_id": null, "id": 12498, "time": "2002-03-29T19:42:35Z", "creator": "craiglaurent@yahoo.com", "creation_time": "2002-03-29T19:42:35Z", "is_private": false, "text": "using \"location\", Here is the funky line I get:\n [uptodate] test\\util\\List.class added as\nD:\\projects\\AntBug\\build\\classes\\D:\\projects\\AntBug\\build\\application.jar\ndoesn't exist.\nnote how it appends a full path after the other full path.  \"D:\\....D:\\...\"\n\nI have created a test project to mimic this, and have it down to a bare bones.\nI can get it to reproduce...but I don't really understand why it happens.\n\nHere is the basic core of it (make a classes.dir, and put some *.class files in it)\n  <!-- build locations -->\n  <property name=\"build.dir\"            location=\"./build\" />\n  <property name=\"classes.dir\"          location=\"${build.dir}/classes\" />\n\n\n  <!-- =================================================================== -->\n  <!-- check if the jar file needs re-making                               -->\n  <!-- =================================================================== -->\n  <target name=\"need-rejar\">\n\n     <uptodate property=\"jar.notRequired\">\n       <srcfiles dir=\"${classes.dir}\" includes=\"**/*.class\" />\n       <mapper type=\"merge\" to=\"${build.dir}/application.jar\" />\n     </uptodate>\n\n  </target>\n  \n\n  <!-- =================================================================== -->\n  <!-- jar up classes to be used by client application                     -->\n  <!-- =================================================================== -->\n  <target name=\"jar\" depends=\"need-rejar\" unless=\"jar.notRequired\">\n    <jar jarfile=\"${build.dir}/application.jar\" basedir=\"${classes.dir}\" />\n  </target>\n\n\nif you run \"ant jar\", it works just fine, as you mention.\nwhen I run \"ant need-jar\", I get the problem.  (or if I remove the \"jar\" line\nfrom inside the jar target).\n"}, {"count": 7, "tags": [], "creator": "holtdl@yahoo.com", "attachment_id": null, "text": "Ack! -- sorry, could've saved us both some time if I'd look at your report a \nbit more closely and seen you'd filed this against 1.4 :(\n\nThis bug was fixed for 1.4.1 -- from the WHATSNEW file, Fixed Bugs section:\n* <mapper>s will now work as expected if the to pattern expands to an\n  absolute pathname.\n\nRecommendation: Upgrade to 1.4.1", "id": 12506, "time": "2002-03-29T21:37:35Z", "bug_id": 7325, "creation_time": "2002-03-29T21:37:35Z", "is_private": false}]