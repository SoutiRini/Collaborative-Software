[{"count": 0, "tags": [], "bug_id": 21042, "attachment_id": null, "id": 39334, "time": "2003-06-24T12:28:19Z", "creator": "stas@custis.ru", "creation_time": "2003-06-24T12:28:19Z", "is_private": false, "text": "We need to know the input filename of XML file inside XSLT stylesheet.\n(When <style> task works).\n\nAnt provide this possibility by <param> tag.\nBut impossible to specify \"input filename\", when we use directory\nbased form of <style> (<style basedir=\"${src}\" destdir=\"${target}\" ...>).\n\nIt will be VERY useful, if some parameter (something like \"ant_filename\") will \nbe set automaticaly, when <style> task runs.\n\n               Sincerely, Stas Fomin"}, {"count": 1, "attachment_id": null, "bug_id": 21042, "is_private": false, "id": 61120, "time": "2004-07-26T11:35:38Z", "creator": "manarth@zioncore.com", "creation_time": "2004-07-26T11:35:38Z", "tags": [], "text": "This goes beyond the XSLT / STYLE task:\n\nhttp://ant.apache.org/manual/CoreTasks/style.html\n\"This task forms an implicit FileSet and supports all attributes of <fileset>\"\n\n*Any* event which uses FileSet has the potential to require / desire knowledge\nof the filename.\n\nIt would be useful if the filename being parsed were available as an ant property."}, {"count": 2, "tags": [], "creator": "j_a_fernandez@yahoo.com", "attachment_id": null, "is_private": false, "id": 61121, "time": "2004-07-26T11:48:43Z", "bug_id": 21042, "creation_time": "2004-07-26T11:48:43Z", "text": "Well, ant properties are inmutable, and shared resources, so what do you do on \na parallel execution?\n\nThe fileset is given and processed by each particular task, it is upto that \ntask to pass the information it requires to its own code. That is what most \ntasks do.\n\nAs per <xslt/> it may make sense to define an specific parameter name that is \nmade available to the XSLT with the name of the input file being processed.\nThat could not be too dificult to do, but we need some good name that will \ndeminish BC issues."}, {"count": 3, "tags": [], "creator": "apache-bugzilla@vitoni.de", "attachment_id": null, "is_private": false, "id": 74933, "time": "2005-05-16T17:25:50Z", "bug_id": 21042, "creation_time": "2005-05-16T17:25:50Z", "text": "What about a property which does not contain the actual filename but the name of\nthe xsl parameter which will contain the filename.\nThis property would be immutable once set and would deliver the functionality\nneeded."}, {"count": 4, "tags": [], "text": "I have a working version for this issue.\nMy changes touch the files:\norg.apache.tools.ant.taskdefs.XSLTProcess\norg.apache.tools.ant.taskdefs.optional.TraXLiaison\n\nHow should I submit these changes?\n\nAbout the approach used: the (new) attribute \"filenameparameter\" must be set for\nthis functionality, its value will be used as name for the XSL parameter.\n\nI am planning to extend the changes to support paths relative to a certain\ndirectory to make the solution more portable/useful.", "is_private": false, "bug_id": 21042, "id": 89108, "time": "2006-05-14T19:58:47Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-05-14T19:58:47Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "jan@materne.de", "attachment_id": null, "is_private": false, "id": 91113, "time": "2006-07-11T10:59:46Z", "bug_id": 21042, "creation_time": "2006-07-11T10:59:46Z", "text": "Chances would increase if you apply the patch (including testcases)."}, {"count": 6, "text": "Created attachment 18586\nDiff for org.apache.tools.ant.taskdefs.XSLTProcess\n\nThe usage of the Vector as parameter container was not useful because one could\nnot overwrite ke/value pairs easily.\nThe diff replaces the Vector with a Hashtable.", "creator": "apache-bugzilla@vitoni.de", "attachment_id": 18586, "id": 91150, "time": "2006-07-11T17:29:02Z", "bug_id": 21042, "creation_time": "2006-07-11T17:29:02Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 21042, "is_private": false, "count": 7, "id": 91152, "time": "2006-07-11T17:38:13Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-07-11T17:38:13Z", "text": "(In reply to comment #6)\n> Created an attachment (id=18586) [edit]\n> Diff for org.apache.tools.ant.taskdefs.XSLTProcess\n> \n\nThis should have been the comment for\norg.apache.tools.ant.taskdefs.optional.TraXLiaison:\n> The usage of the Vector as parameter container was not useful because one could\n> not overwrite key/value pairs easily.\n> The diff replaces the Vector with a Hashtable.\n\n"}, {"count": 8, "tags": [], "bug_id": 21042, "attachment_id": 18587, "id": 91153, "time": "2006-07-11T17:43:12Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-07-11T17:43:12Z", "is_private": false, "text": "Created attachment 18587\nDiff for org.apache.tools.ant.taskdefs.optional.TraXLiaison\n\nThe usage of the Vector as parameter container was not useful because one could\nnot overwrite key/value pairs easily.\nThe diff replaces the Vector with a Hashtable."}, {"count": 9, "tags": [], "bug_id": 21042, "attachment_id": 18586, "id": 91154, "time": "2006-07-11T17:47:13Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-07-11T17:47:13Z", "is_private": false, "text": "Comment on attachment 18586\nDiff for org.apache.tools.ant.taskdefs.XSLTProcess\n\nThis diff introduces a new attribute 'filenameparameter' for the XSLT task. If\nthis attribute is set a paramter with the attributes value as name will be\nprovided to the XSLT processor. This parameter will contain the name of the\nfile being processed."}, {"count": 10, "text": "I understand your need but I wonder why would you want just the name of the file\nand not its full path ? or the root directory of the fileset and the relative\npath of the file.\n\nMaybe you are working with filesets which do not contain several directories ?\n\nRegards,\n\nAntoine", "creator": "antoine@apache.org", "is_private": false, "id": 91155, "time": "2006-07-11T18:03:27Z", "bug_id": 21042, "creation_time": "2006-07-11T18:03:27Z", "tags": [], "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 21042, "is_private": false, "count": 11, "id": 91167, "time": "2006-07-11T21:25:22Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-07-11T21:25:22Z", "text": "You are absolutely right. I had written this code some months ago to see if it's\npossible at all.\nWhat I found at that time were the changes submitted.\nCurrently I am working on an additional function to determine the relative path\nbetween the currently processed file and baseDir.\nThis should make XSLT task based project portable and OS independent (than using\ngetPath() or alikes)."}, {"count": 12, "tags": [], "bug_id": 21042, "attachment_id": 18590, "id": 91174, "time": "2006-07-11T23:31:32Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-07-11T23:31:32Z", "is_private": false, "text": "Created attachment 18590\nDiff for org.apache.tools.ant.taskdefs.XSLTProcess\n\nUpdated XSLTProcess to use the path of the processed file relative to the\nbaseDir."}, {"count": 13, "tags": [], "bug_id": 21042, "attachment_id": 18591, "id": 91175, "time": "2006-07-11T23:32:44Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-07-11T23:32:44Z", "is_private": false, "text": "Created attachment 18591\nDiff for org.apache.tools.ant.taskdefs.optional.TraXLiaison\n\nChanged to use whitespaces."}, {"count": 14, "tags": [], "creator": "apache-bugzilla@vitoni.de", "attachment_id": 18592, "is_private": false, "id": 91176, "time": "2006-07-11T23:43:28Z", "bug_id": 21042, "creation_time": "2006-07-11T23:43:28Z", "text": "Created attachment 18592\nDiff for org.apache.tools.ant.util.FileUtils.diff\n\nAdded functions to get relative path between two files.\nThe default representation of the path will use '/' as a separator because\nWindows understands the slash, too.\nThe user could choose another separator if needed."}, {"count": 15, "tags": [], "text": "(In reply to comment #10)\n> I understand your need but I wonder why would you want just the name of the file\n> and not its full path ? or the root directory of the fileset and the relative\n> path of the file.\n> \n> Maybe you are working with filesets which do not contain several directories ?\n> \n\nRelative path names are implemented now. Would you give it a try?", "is_private": false, "id": 91243, "creator": "apache-bugzilla@vitoni.de", "time": "2006-07-13T00:30:44Z", "bug_id": 21042, "creation_time": "2006-07-13T00:30:44Z", "attachment_id": null}, {"count": 16, "tags": [], "creator": "jan@materne.de", "attachment_id": null, "is_private": false, "id": 91255, "time": "2006-07-13T09:53:32Z", "bug_id": 21042, "creation_time": "2006-07-13T09:53:32Z", "text": "I tried - but couldnt apply the patches. Could you use the standard diff tool\n(svn diff)? \n\nI prepared a testcase for checking the filenames. Unsure how the behaviour\nshould be with directories ...\n  dir/four.xml  -->  four.xml   dir/four.xml ? (windows/unix?)   \"dir\" + \"four.xml\"?\n"}, {"count": 17, "tags": [], "text": "Created attachment 18596\nTestCase\n\nPatch created with \"TourtoiseSVN | Create Patch\".\n(Because TSVN has overseen the build.xml I created a patch file for that\ndirectly and merged it into the global file manually).", "attachment_id": 18596, "id": 91256, "creator": "jan@materne.de", "time": "2006-07-13T09:55:37Z", "bug_id": 21042, "creation_time": "2006-07-13T09:55:37Z", "is_private": false}, {"count": 18, "text": "The the relative path will contain only '/' since Windows accepts it, too.\nAdditionally it is makes the XSL portable because the values returned will be\nthe same regardless of the OS.\n\nSome example values:\n\nbaseDir=C:\\a\\b\\\n\nC:\\a\\b\\x.xml => x.xml\nC:\\a\\x.xml   => ../x.xml\nZ:\\x.xml     => Z:\\x.xml\n\n------------------------------\n\nbaseDir=/a/b\n\n/a/b/x.xml => x.xml\n/a/x.xml   => ../x.xml\n\n------------------------------\n\nI'll try to create patches with Tortoise.\n\n", "creator": "apache-bugzilla@vitoni.de", "is_private": false, "id": 91260, "time": "2006-07-13T10:12:18Z", "bug_id": 21042, "creation_time": "2006-07-13T10:12:18Z", "tags": [], "attachment_id": null}, {"attachment_id": 18598, "tags": [], "bug_id": 21042, "is_private": false, "count": 19, "id": 91269, "time": "2006-07-13T12:29:30Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-07-13T12:29:30Z", "text": "Created attachment 18598\nCombined diff made with Tortoise\n\nUsed trunk as base for changes."}, {"count": 20, "tags": [], "creator": "apache-bugzilla@vitoni.de", "is_private": false, "text": "Created attachment 18599\nCombined diff made with Tortoise\n\nCorrected a little bug where the processed file would have been null.", "id": 91271, "time": "2006-07-13T12:35:12Z", "bug_id": 21042, "creation_time": "2006-07-13T12:35:12Z", "attachment_id": 18599}, {"count": 21, "tags": [], "creator": "jan@materne.de", "attachment_id": null, "id": 91349, "time": "2006-07-17T09:52:31Z", "bug_id": 21042, "creation_time": "2006-07-17T09:52:31Z", "is_private": false, "text": "I checked the patch and tuned a little bit\n* testcases (of course)\n* <xslt> doesnt only pass the filename as before, it passes \n  a) 'filenameproperty' - the filename (without any path)\n  b) 'filedirproperty\"  - the file directory (the path ;-)\n\nI tried dividing the full path filename into path+name in XSL .... so I decided\nit would be easier to divide in Java and concat in XSL.\n\nHave to do a little manual yet, retests are running, so I think I could commit\nin a few minutes (or on hour)."}, {"count": 22, "tags": [], "bug_id": 21042, "attachment_id": null, "id": 91353, "time": "2006-07-17T12:01:57Z", "creator": "jan@materne.de", "creation_time": "2006-07-17T12:01:57Z", "is_private": false, "text": "Changes committed to revision 422692."}, {"count": 23, "tags": [], "text": "Created attachment 18611\nPatch for XSLTProcess\n\nResolves 2 bugs:\n\nNumber one was introduced by:\nFile file = new File(fileName);\n\nfileName uses '/' as the path separator. file.getParent() will use the OS\nspecific separator.\nThis behaviour would result in XSL files being OS dependent.\n\nNumber two was introduced by:\nliaison.addParam(fileDirParameter, (file.getParent()!=null) ? file.getParent()\n: \"\" );\n\nUsually one would concat the path with the file name in a manner such as:\ndir + '/' + fileName \nIf getParent() is null this would result into an absolute file name.\nExtra checks are avoided on XSL side by returning \".\" instead of \"\".", "is_private": false, "bug_id": 21042, "id": 91359, "time": "2006-07-17T15:09:29Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-07-17T15:09:29Z", "attachment_id": 18611}, {"count": 24, "tags": [], "text": "Please consider the latest patch.", "attachment_id": null, "id": 91373, "creator": "apache-bugzilla@vitoni.de", "time": "2006-07-17T22:00:39Z", "bug_id": 21042, "creation_time": "2006-07-17T22:00:39Z", "is_private": false}, {"count": 25, "tags": [], "bug_id": 21042, "attachment_id": null, "id": 91375, "time": "2006-07-18T08:26:53Z", "creator": "jan@materne.de", "creation_time": "2006-07-18T08:26:53Z", "is_private": false, "text": "I dont think we should introduce too many attributes - filePathParameter is\nredundant.\n\nI thought about \".\" instead of \"\" for \"no-dir\" by myself and wasnt sure. I'll\nchange that.\n\nI changed the algorithm for the parent directory from File to String computing,\nso that should be fine now.\n\n\nrevision 423009"}, {"count": 26, "tags": [], "creator": "apache-bugzilla@vitoni.de", "attachment_id": null, "is_private": false, "id": 91377, "time": "2006-07-18T10:51:00Z", "bug_id": 21042, "creation_time": "2006-07-18T10:51:00Z", "text": "(In reply to comment #25)\n> I dont think we should introduce too many attributes - filePathParameter is\n> redundant.\n> \nActually I think that most people would like to have the path and not directory\nor name (which I would consider redundant).\n\n> I thought about \".\" instead of \"\" for \"no-dir\" by myself and wasnt sure. I'll\n> change that.\n> \nThanks.\n\n> I changed the algorithm for the parent directory from File to String computing,\n> so that should be fine now.\n> \n\nThe file can still be used but should only for the name. For the directory one\nshould use the calculated path.\n\n\nIs there any reason why the relative file name is calculated for every file even\nif this functionality was not enabled?\nIf one really wants only the file name calculating the relative path is\nunnecessary (because one can use inFile.gtName()).\n\nI'll attach a patch you could look over."}, {"count": 27, "tags": [], "text": "Created attachment 18616\nPatch for XSLTProcess\n\nCalculates the relative path on demand (this information is only needed for the\ndirectory of the file being processed).\nThe file name is retrieved from the File object.", "is_private": false, "bug_id": 21042, "id": 91378, "time": "2006-07-18T10:53:03Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-07-18T10:53:03Z", "attachment_id": 18616}, {"count": 28, "tags": [], "creator": "apache-bugzilla@vitoni.de", "attachment_id": null, "is_private": false, "id": 91421, "time": "2006-07-19T23:55:55Z", "bug_id": 21042, "creation_time": "2006-07-19T23:55:55Z", "text": "Jan, could you please review the patch?"}, {"count": 29, "tags": [], "bug_id": 21042, "attachment_id": null, "id": 91578, "time": "2006-07-25T16:30:38Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-07-25T16:30:38Z", "is_private": false, "text": "The current implementation calculates the file name and directory on every file\neven if the parameters for this functionality are not set.\nThis isn't necessary please review attachment 18616. \n\nJoin the \"Save the CPU cycles\" club ;-)"}, {"count": 30, "tags": [], "text": "back to File-based computation, but with an additional replacement\n  liaison.addParam(\n    fileDirParameter, \n    (file.getParent()!=null) ? file.getParent().replace('\\\\','/') \n                             : \".\" );\n\n\nstatements only in if-clauses.", "attachment_id": null, "id": 91693, "creator": "jan@materne.de", "time": "2006-07-28T13:12:59Z", "bug_id": 21042, "creation_time": "2006-07-28T13:12:59Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 21042, "is_private": false, "count": 31, "id": 91701, "time": "2006-07-28T19:29:43Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-07-28T19:29:43Z", "text": "Jan, have you looked at my patch?\n\nThe following:\n--------------------------------------------------------------------------------\n        if (fileDirParameter != null) {\n            String fileName = FileUtils.getRelativePath(baseDir, inFile);\n\n            int lastDirSep = fileName.lastIndexOf(\"/\");\n\n            // so a dir+\"/\"+name would not result in an absolute path\n            String dir  = (-1 == lastDirSep ) ? \".\" : fileName.substring(0,\nlastDirSep);\n\n            liaison.addParam(fileDirParameter, dir);\n        }\n--------------------------------------------------------------------------------\nseems cheaper CPU-cycle wise than involving filesystem actions as in:\n--------------------------------------------------------------------------------\n        if (fileDirParameter != null) {\n            String fileName = FileUtils.getRelativePath(baseDir, inFile);\n            File file = new File(fileName);\n            // Give always a slash as file separator, so the stylesheet could be\nsure about that\n            // Use '.' so a dir+\"/\"+name would not result in an absolute path\n            liaison.addParam(fileDirParameter, (file.getParent()!=null) ?\nfile.getParent().replace('\\\\','/') : \".\" );\n        }\n--------------------------------------------------------------------------------\n"}, {"attachment_id": null, "tags": [], "bug_id": 21042, "is_private": false, "count": 32, "id": 91771, "time": "2006-08-01T16:39:31Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-08-01T16:39:31Z", "text": "*** Bug 26618 has been marked as a duplicate of this bug. ***"}, {"count": 33, "tags": [], "text": "(In reply to comment #31)\n> Jan, have you looked at my patch?\n> \n> The following:\n> --------------------------------------------------------------------------------\n>         if (fileDirParameter != null) {\n>             String fileName = FileUtils.getRelativePath(baseDir, inFile);\n> \n>             int lastDirSep = fileName.lastIndexOf(\"/\");\n> \n>             // so a dir+\"/\"+name would not result in an absolute path\n>             String dir  = (-1 == lastDirSep ) ? \".\" : fileName.substring(0,\n> lastDirSep);\n> \n>             liaison.addParam(fileDirParameter, dir);\n>         }\n> --------------------------------------------------------------------------------\n> seems cheaper CPU-cycle wise than involving filesystem actions as in:\n> --------------------------------------------------------------------------------\n>         if (fileDirParameter != null) {\n>             String fileName = FileUtils.getRelativePath(baseDir, inFile);\n>             File file = new File(fileName);\n>             // Give always a slash as file separator, so the stylesheet could be\n> sure about that\n>             // Use '.' so a dir+\"/\"+name would not result in an absolute path\n>             liaison.addParam(fileDirParameter, (file.getParent()!=null) ?\n> file.getParent().replace('\\\\','/') : \".\" );\n>         }\n> --------------------------------------------------------------------------------\n> \n\nJan, could you please comment why you used the file approach instead of the\nString operation? Thanks.", "is_private": false, "bug_id": 21042, "id": 92151, "time": "2006-08-11T19:32:34Z", "creator": "apache-bugzilla@vitoni.de", "creation_time": "2006-08-11T19:32:34Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 21042, "is_private": false, "count": 34, "id": 92219, "time": "2006-08-15T07:13:09Z", "creator": "jan@materne.de", "creation_time": "2006-08-15T07:13:09Z", "text": "Easier to read and more agreement on the dev-list."}]