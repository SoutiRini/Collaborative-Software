[{"count": 0, "attachment_id": null, "creator": "colin_simmonds@Mac.lover.org", "text": "Building apr 1.2.7 on Linux, the tests failed with \n\ntestuser            :  Line 87: apr_gid_name_get failed (34): Numerical result\nout of range\n\n/tmp/rpm-tmp.34736: line 28: 17392 Segmentation fault      (core dumped)\n./testall -v -q\n\nThe problem appears to be that my primary Unix group is too large for the 512\nbyte buffer passed into getgrgid_r(), since the group has over 100 user IDs in\nit. getgrgid_r() is returning ERANGE, which according to its manpage means that\nthe passed in buffer was too small for the group's data. When I changed groups\nusing newgrp, this test then passed.\n\nI think that if getgrgid_r() returns ERANGE, APR should either fallback to using\nplain getgrgid() or else retry getgrgid_r() with a larger buffer.", "id": 96526, "time": "2006-12-04T13:54:49Z", "bug_id": 41105, "creation_time": "2006-12-04T13:54:49Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 19400\nuse sysconf to determine buffer size\n\nCan you try the attached patch?", "attachment_id": 19400, "bug_id": 41105, "id": 97995, "time": "2007-01-12T05:32:29Z", "creator": "jorton@redhat.com", "creation_time": "2007-01-12T05:32:29Z", "is_private": false}, {"count": 2, "tags": [], "creator": "colin_simmonds@Mac.lover.org", "attachment_id": null, "id": 98083, "creation_time": "2007-01-15T10:28:11Z", "time": "2007-01-15T10:28:11Z", "bug_id": 41105, "text": "I tried the attached patch, and it still fails for me. With a little\nexperimentation, I've determined that my primary group requires a buffer of at\nleast 1400 bytes to succeed, but the suggested buffer size returned by sysconf()\nis only 1024.", "is_private": false}, {"count": 3, "tags": [], "text": "Comment on attachment 19400\nuse sysconf to determine buffer size\n\nApparently patch doesn't address the issue.", "attachment_id": 19400, "bug_id": 41105, "id": 101831, "time": "2007-04-17T17:45:47Z", "creator": "wrowe@apache.org", "creation_time": "2007-04-17T17:45:47Z", "is_private": false}, {"count": 4, "tags": [], "creator": "jorton@redhat.com", "text": "Thanks for trying out the patch, anyway.   Buffer size bumped to 8K on the trunk.\n\nhttp://svn.apache.org/viewvc?view=rev&rev=532789", "id": 102505, "time": "2007-04-26T09:17:40Z", "bug_id": 41105, "creation_time": "2007-04-26T09:17:40Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 41105, "is_private": false, "count": 5, "id": 103971, "time": "2007-06-01T10:30:29Z", "creator": "wrowe@apache.org", "creation_time": "2007-06-01T10:30:29Z", "text": "It seems like the long term solution (since this is a bit crufty, still( is to\nstart the buffer on the pool as the earlier patch noted, and realloc *4 until\nit fits (or hits some arbitrarily large upper bound).\n\nBut the optimal manner would be to do a true realloc rather than multiple\nallocs, so I'll mark this a P5 enhancement to deploy when apr_pool_realloc()\nis created rather than reimplement all the fudging in apr_vformatter\n\n"}, {"count": 6, "tags": [], "bug_id": 41105, "text": "A solution to what problem?  \n\nThere must be some maximum buffer size applied in any case.  Until there is\nempirical evidence that 8K is not sufficient as such a limit, there is nothing\nmore that can be done here.", "id": 103974, "time": "2007-06-01T11:58:23Z", "creator": "jorton@redhat.com", "creation_time": "2007-06-01T11:58:23Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "text": "My point was stack size conservation - we don't need to gobble 8k on the stack\nif we can allocate in pool (a conservative size) and then grow the pool allocation\nif and only if needed.  Nothing to do with this at the moment, but if we have an\napr_pool_realloc() to take advantage of, this solution could be improved.", "attachment_id": null, "id": 103975, "creator": "wrowe@apache.org", "time": "2007-06-01T12:07:23Z", "bug_id": 41105, "creation_time": "2007-06-01T12:07:23Z", "is_private": false}, {"count": 8, "tags": [], "text": "\"the function could be implemented differently if a hypothetical pool_realloc\ninterface existed\" is not really related to the issue reported here, nor worth\nholding a bug PR open for in general.", "attachment_id": null, "bug_id": 41105, "id": 105060, "time": "2007-07-04T03:05:57Z", "creator": "jorton@redhat.com", "creation_time": "2007-07-04T03:05:57Z", "is_private": false}, {"count": 9, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "is_private": false, "id": 163135, "time": "2012-11-01T19:12:34Z", "bug_id": 41105, "creation_time": "2012-11-01T19:12:34Z", "text": "I worked with someone who had a failure on RHEL6.3 at 8KB. I created a diagnostic:\n\n\n$ ./getgrgid_r\nsysconf(_SC_GETGR_R_SIZE_MAX) = 1024\n...\ngetgrgid_r with bufsize of 8192 returned 34 (Numerical result out of range)\ngetgrgid_r with bufsize of 16384 succeeded, group NNN name is XXX\n\nWas good to know at least that sysconf() return was not useful for buffer size."}]