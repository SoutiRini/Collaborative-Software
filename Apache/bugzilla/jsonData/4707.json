[{"count": 0, "tags": [], "creator": "Stephen.Ince@qwest.com", "attachment_id": null, "text": "The javax.servlet.http.HttpServletRequest.getPathInfo() method is stripping \naway consecutive \"/\" chars. For example if the url of my servlet \nis \"http://localhost/my_servlet/http://www.yahoo.com/\" where \"my_servlet\" is \nthe name of my servlet. In the service() method I invoke \nHttpServletRequest.getPathInfo() it should return '/http://www.yahoo.com/' but \nit returns '/http:/www.yahoo.com/' instead.", "id": 7654, "time": "2001-11-07T11:28:22Z", "bug_id": 4707, "creation_time": "2001-11-07T11:28:22Z", "is_private": false}, {"count": 1, "tags": [], "creator": "remm@apache.org", "is_private": false, "text": "Many paths are normilized in one way or another in an attempt to prevent \nattacks using malformed URLs. The goal eventually is to avoid causing the kind \nof problem you describe. However, since it can possibly cause a lot of problems \nsecurity-wise, it is unlikely that this problem will be fixed anytime soon.", "id": 7655, "time": "2001-11-07T11:51:01Z", "bug_id": 4707, "creation_time": "2001-11-07T11:51:01Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 4707, "text": "I've been developing under TDK and its version of getPathInfo() does NOT eat\nslashes, so it really surprised me that my webapp broke when we deployed on\nTomcat (without TDK).  It's not just PathInfo, but also getRequestURL() and\ngetRequestURI().\n\nThe request:\n\nhttp://localhost:58080/sna/servlet/gov.nasa.hq.sna.intranetbroker.SlashTest/oj///simpson\n\nresults in the following from my dorky test servlet:\n\nRequestURL:  \nhttp://localhost:58080/sna/servlet/gov.nasa.hq.sna.intranetbroker.SlashTest/oj/simpson\nRequestURI:   /sna/servlet/gov.nasa.hq.sna.intranetbroker.SlashTest/oj/simpson\nPathInfo:     /oj/simpson", "id": 11510, "time": "2002-03-06T16:20:35Z", "creator": "chris@shenton.org", "creation_time": "2002-03-06T16:20:35Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "remm@apache.org", "text": "Reopen.", "id": 11851, "time": "2002-03-15T20:26:53Z", "bug_id": 4707, "creation_time": "2002-03-15T20:26:53Z", "is_private": false, "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 4707, "is_private": false, "id": 11852, "time": "2002-03-15T20:29:16Z", "creator": "remm@apache.org", "creation_time": "2002-03-15T20:29:16Z", "tags": [], "text": "Unfortunately, it is extremely hard to allow \"//\" in a URI without making the\nmapper and the security constraint mapper a lot more complex. The new HTTP\nconnector is more tolerant, and does less API normalization than the old one (at\nleast when running with HEAD; 4.0.x needs the aggressive normalization), but\nthere is no way I can think of to allow this without compromising security.\n\nIf you have ideas, feel free to submit them."}]