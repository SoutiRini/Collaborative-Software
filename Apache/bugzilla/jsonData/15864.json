[{"count": 0, "tags": [], "text": "Looks like a possible RFC 2616 MUST violation. \nApache ingores(?) quotes in Connection header tokens.\n\nSee attached trace for details and ways to reproduce.\n\nTest case IDs in the trace link to human-oriented test case\ndescription and RFC quotes, if available.", "is_private": false, "id": 28973, "creator": "coad@measurement-factory.com", "time": "2003-01-07T21:36:29Z", "bug_id": 15864, "creation_time": "2003-01-07T21:36:29Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "coad@measurement-factory.com", "text": "Created attachment 4360\ntest case trace", "id": 28974, "time": "2003-01-07T21:37:03Z", "bug_id": 15864, "creation_time": "2003-01-07T21:37:03Z", "is_private": false, "attachment_id": 4360}, {"count": 2, "attachment_id": null, "bug_id": 15864, "text": "It's not obvious to me that 2616 specifies that the Connection header contains\npossibly quoted strings - can you clarify this? 14.10 says:\n\n       Connection = \"Connection\" \":\" 1#(connection-token)\n       connection-token  = token\n\n#token is equivalent to\n\n         ( *LWS token *( *token \",\" *LWS token ))\n\nI'd reckon a Connection header which *does* contain <\"> is illegal, since\nneither token nor LWS can expand to <\">?\n\n(In which case the Apache behaviour is compliant and not unreasonable)\n", "id": 29126, "time": "2003-01-10T13:59:24Z", "creator": "jorton@redhat.com", "creation_time": "2003-01-10T13:59:24Z", "tags": [], "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 15864, "is_private": false, "id": 29134, "time": "2003-01-10T15:55:47Z", "creator": "coad@measurement-factory.com", "creation_time": "2003-01-10T15:55:47Z", "tags": [], "text": "Section 2.2 \"Basic Rules\" of RFC 2616 says \"A string of text is parsed as a\nsingle word if it is quoted using double-quote marks\". Apache does not\nobey that rule. You are right that a quoted field is invalid\nin the Connection header because Connection BNF does not allow for quoted\nstrings. It would be OK for Apache to ignore quoted fields. However,\nApache does not ignore them, it [incorrectly] parses and acts on them\n(removing end-to-end headers that should not be removed).\n\nAlso, this is not just about RFC 2616 compliance. Some real-world HTTP agents are known to quote their Connection tokens. Thus, it would be\ndesirable for Apache to parse them correctly, regardless of how this test\ncase is interpreted compliance-wise.\n\nOverall, I think this is a [minor] bug, and I am pretty sure it will\npopup in other contexts, where quoted strings are allowed. Connection\nheader just makes it easy to test using black-box approach. You probably\nwant the same \"core\" parsing code to be used for all headers, and that\ncode should handle quoted strings correctly.\n\nDo you agree?\n"}, {"count": 4, "attachment_id": null, "bug_id": 15864, "is_private": false, "id": 29209, "time": "2003-01-12T17:04:40Z", "creator": "joe@manyfish.co.uk", "creation_time": "2003-01-12T17:04:40Z", "tags": [], "text": "The \"string of text\" sentence you quote is not a general statement but a\ndescription of the \"quoted-string\" construct below it, though. I don't agree\nthat this is an RFC compliance bug, I think Apache is acting in strict\naccordance with the RFC by removing the fields.\n\nIt's useful to know that real agents do send quoted tokens, though - in that\ncase it might be useful to handle it."}, {"count": 5, "tags": [], "bug_id": 15864, "is_private": false, "id": 29223, "attachment_id": null, "creator": "coad@measurement-factory.com", "creation_time": "2003-01-13T04:45:32Z", "time": "2003-01-13T04:45:32Z", "text": "I won't argue about compliance in this case. RFC 2616\nis too messy when it comes to distinguishing\nnormative/universal statements from informal/limited\ncomments. Should every quoted string be parsed as such?\nHard to say. Should an invalid Connection header be\nhandled in some particular way? Unknown.\n\nI think we agree that the current resolution of this\nbug report is that it would be benefitial for Apache\nparser to parse quoted strings in headers as single\nwords. Not [just] for compliance reasons, but for\ncompatibility with [possibly broken] agents.\n\nIf we come across an HTTP header where quoted strings are\nlegal AND where mis-parsing them can be detected, we\nwill submit another bug report.\n\nThank you for looking into this.\n"}, {"attachment_id": null, "tags": [], "bug_id": 15864, "is_private": false, "count": 6, "id": 76083, "time": "2005-06-06T19:12:23Z", "creator": "coad@measurement-factory.com", "creation_time": "2005-06-06T19:12:23Z", "text": "Please see bug 35217 for at least one much more\nclear case where not parsing quoted strings \ncorrectly results in RFC 2616 violations. That\nbug deals with Cache-Control directives where\nRFC 2616 is more specific about extension directives\nand does explicitly allow quoted directive values:\n\n  cache-extension = token [ \"=\" ( token | quoted-string ) ]\n\n(N.B. One of the test cases in bug 35217 uses quoted\ndirective name. You can ignore that case based on the\nearlier discussion above.)\n"}]