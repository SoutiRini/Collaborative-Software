[{"count": 0, "tags": [], "creator": "andrew.clute@osn.state.oh.us", "is_private": false, "text": "The logic to see if a cookie should be put on the header (getCookieHeaderForURL\n()) checks to see if the expiration is greater than currentTimeMillis()/1000. \nThat is fine for cookies that are set by the browser, because they know what \nthe current time is. But for StoredCookies that want to be memory resident, \nthey should be able to set the expiration time to '0' and have it work. \nOtherwise the expiration would need to be set to some large number to be \ngreater than currentTimeMillis()/1000 \n\nSo, the quick fix for this is to change line 292 in CookieManager.java from:\n\n && (System.currentTimeMillis() / 1000) <= cookie.getExpires())\n\nto:\n && ((cookie.getExpires()==0)||(System.currentTimeMillis() / 1000) <= \ncookie.getExpires()))\n\nThis will allow StoredCookies to be memory resident cookies, and not have to \nworry about expirations, but still allow browser set cookies to expire.", "id": 54083, "time": "2004-03-16T16:15:01Z", "bug_id": 27713, "creation_time": "2004-03-16T16:15:01Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 27713, "text": "OK, I've made the change.\nLeaving the call open, in case of problems (and the component documentation \nneeds to be updated)", "count": 1, "id": 54102, "time": "2004-03-16T19:50:51Z", "creator": "sebb@apache.org", "creation_time": "2004-03-16T19:50:51Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 27713, "text": "Updated component ref", "id": 55197, "time": "2004-04-02T21:27:17Z", "creator": "sebb@apache.org", "creation_time": "2004-04-02T21:27:17Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 27713, "attachment_id": null, "text": "*** Bug 26144 has been marked as a duplicate of this bug. ***", "id": 64894, "time": "2004-10-10T23:08:32Z", "creator": "sebb@apache.org", "creation_time": "2004-10-10T23:08:32Z", "is_private": false}]