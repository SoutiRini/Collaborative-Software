[{"count": 0, "tags": [], "creator": "michael@fsphost.com", "attachment_id": 30587, "is_private": false, "id": 168543, "time": "2013-07-12T07:41:54Z", "bug_id": 55253, "creation_time": "2013-07-12T07:41:54Z", "text": "Created attachment 30587\nPatch\n\nFor monitoring reasons I always have to patch the catalina.sh to show up CATALINA_BASE as first argument. \nRunning Tomcat under SunOS, the process information with 'ps -ef' only shows the first 79 characters of the process command. Per default, the java.util.logging.config.file argument is shown first, but it gives no clue about which instance of Tomcat the process is.\nFrom the path specified with CATALINA_BASE the process can be directly identified for each instance. \nExample:\n\nunpatched catalina.sh shows the following commandlines:\n/softwarenet/tools/java7_17/bin/java -Djava.util.logging.config.file=/software/\n/softwarenet/tools/java7_17/bin/java -Djava.util.logging.config.file=/software/\n/softwarenet/tools/java7_17/bin/java -Djava.util.logging.config.file=/software/\n\nMoving the CATALINA_BASE as first argument will show the path of the instance:\n/softwarenet/tools/java7_17/bin/java -Dcatalina.base=/software/korweb/E0/ -Djav\n/softwarenet/tools/java7_17/bin/java -Dcatalina.base=/software/korweb/E1/ -Djav\n/softwarenet/tools/java7_17/bin/java -Dcatalina.base=/software/korweb/E2/ -Djav\n\nI'm fully aware of that I could grab the PID of Tomcat to monitor it, but unfortunately this is no option in my case. \nI'm pretty sure other users will also benefit from this change, not every OS does show the full command line of each process."}, {"count": 1, "tags": [], "bug_id": 55253, "attachment_id": null, "text": "While I have some sympathy with this problem, I am concerned that different users are going to want different information in those 79 characters and that will lead to conflicting requirements.\n\nI don't recall that there is a good reason for LOGGING_CONFIG to be first. I'll note that it does contain $CATALINA_BASE even though it is not fully visible due to the length of the path to the java executable.\n\nI think your best option is a workaround. Create a file called setenv.sh (or edit the one you already have if you have one) and add the following:\n\nLOGGING_CONFIG=\"-Dfoo.your.marker.here $LOGGING_CONFIG\"\n\nThat will allow you to insert any text you like into the command line as early as possible (i.e. just after the path to the java executable).", "id": 168551, "time": "2013-07-12T09:58:29Z", "creator": "markt@apache.org", "creation_time": "2013-07-12T09:58:29Z", "is_private": false}]