[{"count": 0, "attachment_id": 22604, "creator": "tommay@google.com", "is_private": false, "id": 120757, "time": "2008-09-18T11:09:06Z", "bug_id": 45836, "creation_time": "2008-09-18T11:09:06Z", "tags": [], "text": "Created attachment 22604\nPatch to fix empty CBzip2OutputStream\n\nIn 1.7.1, creating and then closing a CBzip2OutputStream without writing any dya to it would incorrectly result in an ArithmeticException being thrown (bug 32200).  The code in svn has been modified so this no longer happens.  However, the resulting compressed output is no longer valid and won't decompress with bunzip2 after prepending \"BZ\" to the stream.\n\nHere's a patch against the code in svn that fixes the problem correctly as far as I can tell.\n\nHere's a test program:\n\n$ cat X.java\nimport org.apache.tools.bzip2.CBZip2OutputStream;\n\nclass X {\n    public static void main(String[] args) throws Exception {\n        new CBZip2OutputStream(System.out).close();\n    }\n}\n\nExample incorrect 1.7.1 behavior:\n\n$ java X\nException in thread \"main\" java.lang.ArithmeticException: / by zero\n        at org.apache.tools.bzip2.CBZip2OutputStream.mainSort(CBZip2OutputStream.java:1135)\n        at org.apache.tools.bzip2.CBZip2OutputStream.doReversibleTransformation(CBZip2OutputStream.java:1347)\n        at org.apache.tools.bzip2.CBZip2OutputStream.endBlock(CBZip2OutputStream.java:438)\n        at org.apache.tools.bzip2.CBZip2OutputStream.close(CBZip2OutputStream.java:389)\n        at X.main(X.java:5)\n\nExample incorrect behavior of current code:\n\n$ (echo -n \"BZ\"; java X) | bunzip2\n\nbunzip2: Data integrity error when decompressing.\n        Input file = (stdin), output file = (stdout)\n\nIt is possible that the compressed file(s) have become corrupted.\nYou can use the -tvv option to test integrity of such files.\n\nYou can use the `bzip2recover' program to attempt to recover\ndata from undamaged sections of corrupted files.\n\nBehavior with this patch applied, bunzip2 creates zero-length output as expected:\n\n$ (echo -n \"BZ\"; java -cp .:/tmp/ant-svn/src/main X) | bunzip2 | wc -c\n0\n\nNote that last is set to -1 only in initBlock() which is called only from the constructor and from writeRun().  However, after initBlock() is called from writeRun(), writeRun() calls itself again and last is guaranteed not to be -1 afterwards.  Therefore my last == -1 check is true only if the stream is empty, and in all other cases the behavior is not changed."}, {"count": 1, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "patch committed as svn revision 697122, thanks!", "id": 120798, "time": "2008-09-19T08:05:11Z", "bug_id": 45836, "creation_time": "2008-09-19T08:05:11Z", "is_private": false}]