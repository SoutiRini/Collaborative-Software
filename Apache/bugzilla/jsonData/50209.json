[{"count": 0, "tags": [], "text": "Created attachment 26253\nsample spreadsheet\n\nSample spreadsheet:\n    A1: 1\n    A2: =SUBTOTAL(9,A1)\n    A3: =SUBTOTAL(9,A1:A2)\n\nSample code;\n    Workbook wb = WorkbookFactory.create(new FileInputStream(\"subtotal.xlsx\"));\n    FormulaEvaluator eval = wb.getCreationHelper().createFormulaEvaluator();\n    eval.evaluateFormulaCell(wb.getSheetAt(0).getRow(2).getCell(0));\n    FileOutputStream fout = new FileOutputStream(\"subtotal_output.xlsx\");\n    wb.write(fout);\n    fout.close();\n\nIf you execute this sample code, you will get subtotal_output.xlsx.\nWhen opening this file in Excel 2007, you will get next spreadsheet.\n    A1: 1\n    A2: 1\n    A3: 2\n\nCorrectly, cell A3 should be 1.\nIt seems that the cell containing SUBTOTAL (A2) is summed up while evaluating SUBTOTAL in A3, though it should be ignored.", "attachment_id": 26253, "id": 141377, "creator": "toshihiko.saka@justsystems.com", "time": "2010-11-04T05:10:56Z", "bug_id": 50209, "creation_time": "2010-11-04T05:10:56Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 50209, "text": "For anyone coming back to this bug later, please see today's discussions on this bug on the user mailing list:\nhttp://mail-archives.apache.org/mod_mbox/poi-user/201011.mbox/%3Calpine.DEB.1.10.1011051553340.11599@urchin.earth.li%3E", "id": 141499, "attachment_id": null, "creator": "apache@gagravarr.org", "creation_time": "2010-11-05T14:13:03Z", "time": "2010-11-05T14:13:03Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "ulrich.wenzel@iconparc.de", "text": "Bugfix: Evaluation of Subtotals does not consider nested subtotals anymore\n\n- test-files and test-data contained in new-files.tar\n- java-subtotals.patch does not include test-files\n\nAttachment: java-subtotals.patch and new-files.tar\n\nTherefore:\n1) Double-Values of referenced cells (not subtotals) are collected and used for evaluation in class Subtotal\n2) The Method getFunctionIndex is added to classes LazyAreaEval/AreaEvalBase, SheetRefEvaluator and WorkbookEvaluator which seems to be the shortes path to the WorkbookEvaluator\n3) Functions Count and CountA are implemented directly in Subtotal.", "id": 146889, "time": "2011-06-06T14:24:38Z", "bug_id": 50209, "creation_time": "2011-06-06T14:24:38Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 50209, "attachment_id": 27117, "id": 146890, "time": "2011-06-06T14:26:37Z", "creator": "ulrich.wenzel@iconparc.de", "creation_time": "2011-06-06T14:26:37Z", "is_private": false, "text": "Created attachment 27117\ncode, test and excel-sheet"}, {"count": 4, "tags": [], "bug_id": 50209, "attachment_id": 27118, "text": "Created attachment 27118\npatch", "id": 146891, "time": "2011-06-06T14:27:54Z", "creator": "ulrich.wenzel@iconparc.de", "creation_time": "2011-06-06T14:27:54Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 50209, "text": "\n(In reply to comment #4)\n> Created attachment 27118 [details]\n> patch\n\nFixed in r1150673\n\nThe fix is based on the proposed patch, but I chose a bit different strategy. Instead of pulling DoubleList and iteration logic from MultiOperandNumericFunction and thus duplicating code, it is better to inject this logic right into MultiOperandNumericFunction.collectValues.\nI think I found an elegant way how to do that.\n\nP.S. You patch assumes that the last ptg in nested cells is FuncVarPtg:\n\n\n+\tpublic int getFunctionIndex( EvaluationCell srcCell ){\n\n+\t\tPtg[] ptgs = _workbook.getFormulaTokens(srcCell);\n\n+\t\tint index = -1;\n\n+\t\tif( ptgs.length > 0  &&  ptgs[ptgs.length-1] instanceof FuncVarPtg){\n\n+\t\t\tFuncVarPtg fVar = (FuncVarPtg)ptgs[ptgs.length-1];\n\n+\t\t\tindex = fVar.getFunctionIndex();\n\n+\t\t}\n\n+\t\treturn index;\n\n+\t}\n\n\n\nIt is not always so. Consider two use cases:\n\nSUBTOTAL(9, A1:A2)      ptgs: [9, A1:A2, SUBTOTAL]\nSUBTOTAL(9, A1:A2) + 1  ptgs: [9, A1:A2, SUBTOTAL, 1, '+']\n\nYour implementation ignores the second case which is wrong. The correct logic is to iterate over all ptgs and check if there is a FuncVarPtg for the SUBTOTAL function.\n\nRegards,\nYegor", "id": 148132, "time": "2011-07-25T16:19:00Z", "creator": "yegor@dinom.ru", "creation_time": "2011-07-25T16:19:00Z", "is_private": false, "attachment_id": null}]