[{"count": 0, "tags": [], "text": "Created attachment 24803\nsheet that exhibits issue\n\n>> The EBEE tries to format decimal values before returning them using\n>> the method formatNumberDateCell. \u00a0I have some xls (unfortunately I\n>> can't share) that throw an exception from the DecimalFormat\n>> constructor:\n>> java.lang.IllegalArgumentException: Unquoted special character ';' in\n>> pattern \"_(*#,##0_);_(*(#,##0);_(* \"-\"_);_(@_)\"\n\n\nUserModel copes, but because no formatting is applied. Relevant code\nin ExcelExtractor:\n\ncase HSSFCell.CELL_TYPE_NUMERIC:\n\u00a0// Note - we don't apply any formatting!\n\u00a0text.append(cell.getNumericCellValue());\n\u00a0break;\n\nHowever, a date formatted cell (string cell type) with\n\"hh:mm;hh:mm;hh:mm\" fails in both.\n\nI believe this means conditional cell formatting never works (either\nnot being applied or throwing exception), only static cell formatting.\n\u00a0I'm not sure what the above format of the 3- or 4-valued conditional\nis, though.\n\nI'll file a bug for this. Attached is a doc that exhibits the issue\nand a java class that reproduces.", "is_private": false, "id": 133390, "creator": "philvarner@gmail.com", "time": "2010-01-06T09:49:49Z", "bug_id": 48494, "creation_time": "2010-01-06T09:49:49Z", "attachment_id": 24803}, {"count": 1, "tags": [], "bug_id": 48494, "attachment_id": 24804, "id": 133391, "time": "2010-01-06T09:50:55Z", "creator": "philvarner@gmail.com", "creation_time": "2010-01-06T09:50:55Z", "is_private": false, "text": "Created attachment 24804\nruns EBEE and EE on xls"}, {"count": 2, "tags": [], "text": "Patch (the revision commit numbers may need removing/changing, this was to a private svn repo):\n\nIndex: src/java/org/apache/poi/hssf/extractor/EventBasedExcelExtractor.java\n===================================================================\n--- src/java/org/apache/poi/hssf/extractor/EventBasedExcelExtractor.java        (revision 99199)\n+++ src/java/org/apache/poi/hssf/extractor/EventBasedExcelExtractor.java        (revision 99174)\n@@ -275,15 +275,8 @@\n                        }\n \n                        // Format as a number\n-                       // some format strings contain unescaped ;s which cause\n-                       // problems.  Since this is only for indexing, we\n-                       // can ignore these and just return the unformatted string (hacky?)\n-                       try {\n-                               DecimalFormat df = new DecimalFormat(formatString);\n-                               return df.format(value);\n-                       } catch (java.lang.IllegalArgumentException e){\n-                               return String.valueOf(value);\n-                       }\n+                       DecimalFormat df = new DecimalFormat(formatString);\n+                       return df.format(value);\n                }\n        }\n }", "attachment_id": null, "id": 135070, "creator": "philvarner@gmail.com", "time": "2010-03-05T06:06:13Z", "bug_id": 48494, "creation_time": "2010-03-05T06:06:13Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 48494, "is_private": false, "text": "Fixed in r950616.\n\nWe already had a reference to the usermodel style DataFormatter, we just weren't using it, doh! Now changed to call the normal DataFormatter, so the event based extractor should behave more like the usermodel one does", "id": 137282, "time": "2010-06-02T12:13:53Z", "creator": "apache@gagravarr.org", "creation_time": "2010-06-02T12:13:53Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 48494, "is_private": false, "text": "Also, your time formats like HH:MM;HH:MM;HH:MM are also detected as times now too.", "id": 137284, "time": "2010-06-02T13:18:16Z", "creator": "apache@gagravarr.org", "creation_time": "2010-06-02T13:18:16Z", "attachment_id": null}]