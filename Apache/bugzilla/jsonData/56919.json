[{"count": 0, "tags": [], "bug_id": 56919, "attachment_id": 31968, "text": "Created attachment 31968\nPerl program to generate config to replicate the bug\n\nOn apache 2.4.7, loading a significant number of SSL sites causes a SIGSEGV / SIGILL on load.\n\nThe number of sites required seems inversely proportional to the number of module loads each site does. If each site does about 12 module loads, you only need 5 or 6 sites to crash it. With one module load, you need about 62. I thus believe this is in fact a problem with module loading.\n\nI am using Ubuntu 14.04.1, with apache 2.4.7-1ubuntu4.1.\n\nI am using the attached perl program to generate a single active configuration file and have left everything else as default. The perl program simply generates a number of sites of the form:\n\n<VirtualHost 127.0.0.1:$port>\n    ServerName 127.0.0.1:$port\n\n    SSLEngine on\n    SSLCertificateFile    /etc/ssl/certs/ssl-cert-snakeoil.pem\n    SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key\n\n    DBDriver pgsql\n</VirtualHost>\n\nWhen launched I see an illegal instruction signal and Apache fails to start. Details below.\n\nThe problem does not appear to occur with DBDriver mysql (I've tried 2,000 sites) or with no DBDriver line. Putting 'DBDriver pgsql' outside the definition of the sites does not remedy the problem.\n\nThis looks similar to:\n  https://issues.apache.org/bugzilla/show_bug.cgi?id=54357\nexcept that is reported against 2.5 HEAD and only appears to involve a restart (not the initial start).\n\nIt also looks similar to:\n  https://issues.apache.org/bugzilla/show_bug.cgi?id=54357\nexcept I am not using certificate stapling.\n\nGory details:\n\nroot@nimtest:/home/amb/apache2/apache2-2.4.7# gdb --args ./apache2 -k start -X -e Debug\nGNU gdb (Ubuntu 7.7-0ubuntu3.1) 7.7\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from ./apache2...done.\n(gdb) run\nStarting program: /home/amb/apache2/apache2-2.4.7/apache2 -k start -X -e Debug\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n[Sat Sep 06 12:56:33.073345 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module access_compat_module from /usr/lib/apache2/modules/mod_access_compat.so\n[Sat Sep 06 12:56:33.076683 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module alias_module from /usr/lib/apache2/modules/mod_alias.so\n[Sat Sep 06 12:56:33.079835 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module auth_basic_module from /usr/lib/apache2/modules/mod_auth_basic.so\n[Sat Sep 06 12:56:33.083569 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module authn_core_module from /usr/lib/apache2/modules/mod_authn_core.so\n[Sat Sep 06 12:56:33.086495 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module authn_file_module from /usr/lib/apache2/modules/mod_authn_file.so\n[Sat Sep 06 12:56:33.089830 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module authz_core_module from /usr/lib/apache2/modules/mod_authz_core.so\n[Sat Sep 06 12:56:33.092941 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module authz_groupfile_module from /usr/lib/apache2/modules/mod_authz_groupfile.so\n[Sat Sep 06 12:56:33.096129 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module authz_host_module from /usr/lib/apache2/modules/mod_authz_host.so\n[Sat Sep 06 12:56:33.098897 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module authz_user_module from /usr/lib/apache2/modules/mod_authz_user.so\n[Sat Sep 06 12:56:33.102491 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module autoindex_module from /usr/lib/apache2/modules/mod_autoindex.so\n[Sat Sep 06 12:56:33.106266 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module cgi_module from /usr/lib/apache2/modules/mod_cgi.so\n[Sat Sep 06 12:56:33.111027 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module dbd_module from /usr/lib/apache2/modules/mod_dbd.so\n[Sat Sep 06 12:56:33.115365 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module deflate_module from /usr/lib/apache2/modules/mod_deflate.so\n[Sat Sep 06 12:56:33.119236 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module dir_module from /usr/lib/apache2/modules/mod_dir.so\n[Sat Sep 06 12:56:33.122860 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module env_module from /usr/lib/apache2/modules/mod_env.so\n[Sat Sep 06 12:56:33.126453 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module filter_module from /usr/lib/apache2/modules/mod_filter.so\n[Sat Sep 06 12:56:33.130551 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module headers_module from /usr/lib/apache2/modules/mod_headers.so\n[Sat Sep 06 12:56:33.134840 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module lbmethod_byrequests_module from /usr/lib/apache2/modules/mod_lbmethod_byrequests.so\n[Sat Sep 06 12:56:33.146143 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module mime_module from /usr/lib/apache2/modules/mod_mime.so\n[Sat Sep 06 12:56:33.154798 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module mpm_prefork_module from /usr/lib/apache2/modules/mod_mpm_prefork.so\n[Sat Sep 06 12:56:33.163326 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module negotiation_module from /usr/lib/apache2/modules/mod_negotiation.so\n[Sat Sep 06 12:56:33.325670 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module php5_module from /usr/lib/apache2/modules/libphp5.so\n[Sat Sep 06 12:56:33.331395 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module proxy_module from /usr/lib/apache2/modules/mod_proxy.so\n[Sat Sep 06 12:56:33.335814 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module proxy_balancer_module from /usr/lib/apache2/modules/mod_proxy_balancer.so\n[Sat Sep 06 12:56:33.339894 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module proxy_http_module from /usr/lib/apache2/modules/mod_proxy_http.so\n[Sat Sep 06 12:56:33.344144 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module reqtimeout_module from /usr/lib/apache2/modules/mod_reqtimeout.so\n[Sat Sep 06 12:56:33.349207 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module rewrite_module from /usr/lib/apache2/modules/mod_rewrite.so\n[Sat Sep 06 12:56:33.353118 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module setenvif_module from /usr/lib/apache2/modules/mod_setenvif.so\n[Sat Sep 06 12:56:33.357029 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module slotmem_shm_module from /usr/lib/apache2/modules/mod_slotmem_shm.so\n[Sat Sep 06 12:56:33.362100 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module socache_shmcb_module from /usr/lib/apache2/modules/mod_socache_shmcb.so\n[Sat Sep 06 12:56:33.378035 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module ssl_module from /usr/lib/apache2/modules/mod_ssl.so\n[Sat Sep 06 12:56:33.382573 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module status_module from /usr/lib/apache2/modules/mod_status.so\n[Sat Sep 06 12:56:33.386906 2014] [so:debug] [pid 46718] mod_so.c(266): AH01575: loaded module substitute_module from /usr/lib/apache2/modules/mod_substitute.so\nAH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1. Set the 'ServerName' directive globally to suppress this message\n[New Thread 0x7fffe75a1700 (LWP 46726)]\n[Thread 0x7fffe75a1700 (LWP 46726) exited]\n\nProgram received signal SIGILL, Illegal instruction.\n0x00007ffff07fdaf4 in ?? () from /usr/lib/apache2/modules/mod_ssl.so\n(gdb) bt full\n#0  0x00007ffff07fdaf4 in ?? () from /usr/lib/apache2/modules/mod_ssl.so\nNo symbol table info available.\n#1  0x00007ffff2b677a6 in int_free_ex_data (class_index=<optimized out>, obj=0x555555b29870, ad=0x555555b29898) at ex_data.c:522\n        mx = 1\n        i = 0\n        item = 0x555555831cf0\n        ptr = <optimized out>\n        storage = 0x555555949aa0\n#2  0x00007ffff2c08061 in x509_cb (operation=operation@entry=3, pval=pval@entry=0x7fffffffc1b8, it=it@entry=0x7ffff2ec3780 <X509_it>,\n    exarg=exarg@entry=0x0) at x_x509.c:113\n        ret = 0x555555b29870\n#3  0x00007ffff2c0bfea in asn1_item_combine_free (pval=pval@entry=0x7fffffffc1b8, it=it@entry=0x7ffff2ec3780 <X509_it>, combine=combine@entry=0)\n    at tasn_fre.c:173\n        tt = <optimized out>\n        seqtt = <optimized out>\n        ef = <optimized out>\n        cf = <optimized out>\n        aux = <optimized out>\n        asn1_cb = 0x7ffff2c07fa0 <x509_cb>\n        i = <optimized out>\n#4  0x00007ffff2c0c1c5 in ASN1_item_free (val=val@entry=0x555555b29870, it=it@entry=0x7ffff2ec3780 <X509_it>) at tasn_fre.c:71\nNo locals.\n#5  0x00007ffff2c0814c in X509_free (a=a@entry=0x555555b29870) at x_x509.c:141\nNo locals.\n#6  0x00007ffff07f00b8 in ssl_pphrase_Handle (s=s@entry=0x7ffff7fc2de0, p=p@entry=0x7ffff7fc0028) at ssl_engine_pphrase.c:275\n        using_cache = 0\n        mc = 0x7ffff7fc6950\n        sc = 0x7ffff7ea2df0\n        pServ = 0x7ffff7ea5e18\n        cpVHostID = 0x7fffebe75100 \"127.0.0.1:10099\"\n        szPath = \"/etc/ssl/certs/ssl-cert-snakeoil.pem\\000\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000 \\313\\377\\377\\377\\177\\000\\000\\000\\303\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\313\\063\\217\\363\\377\\177\\000\\000 \\303\\377\\377\\377\\177\\000\\000\\260\\307\\377\\377\\377\\177\\000\\000\\320\\312\\377\\377\\377\\177\\000\\000+\", '\\000' <repeats 11 times>, \"\\b\", '\\000' <repeats 51 times>, \"\\247\\340X\\360\\377\\177\", '\\000' <repeats 42 times>...\n        pPrivateKey = <optimized out>\n        asn1 = <optimized out>\n        ucp = 0x555555832986 \"\"\n        length = <optimized out>\n        pX509Cert = 0x555555b29870\n        bReadable = <optimized out>\n        aPassPhrase = 0x7fffebe750c0\n        nPassPhrase = 0\n        nPassPhraseCur = 496363737\n        cpPassPhraseCur = 0x53051b36f95004a2 <error: Cannot access memory at address 0x53051b36f95004a2>\n        nPassPhraseRetry = <optimized out>\n        nPassPhraseDialog = 0\n        nPassPhraseDialogCur = 1377665596\n        bPassPhraseDialogOnce = 4063986178\n        cpp = <optimized out>\n        i = 0\n        j = 0\n        algoCert = 1\n        algoKey = 0\n        at = <optimized out>\n        an = 0x7ffff07ff3c2 \"RSA\"\n        pkey_mtime = 0\n        rv = <optimized out>\n#7  0x00007ffff07e5658 in ssl_init_Module (p=0x7ffff7ff0028, plog=<optimized out>, ptemp=0x7ffff7fc0028, base_server=0x7ffff7fc2de0)\n    at ssl_engine_init.c:194\n        mc = <optimized out>\n        sc = <optimized out>\n        s = 0x0\n---Type <return> to continue, or q <return> to quit---\n#8  0x00005555555aa2a9 in ap_run_post_config (pconf=0x7ffff7ff0028, plog=0x7ffff7fbe028, ptemp=0x7ffff7fc0028, s=0x7ffff7fc2de0) at config.c:103\n        pHook = 0x7ffff7e4e788\n        n = 14\n        rv = 0\n#9  0x000055555558ae07 in main (argc=6, argv=0x7fffffffe548) at main.c:765\n        c = 101 'e'\n        showcompile = 0\n        showdirectives = 0\n        confname = 0x5555555ca607 \"apache2.conf\"\n        def_server_root = 0x5555555ca5fa \"/etc/apache2\"\n        temp_error_log = 0x0\n        error = <optimized out>\n        process = 0x7ffff7ff2118\n        pconf = 0x7ffff7ff0028\n        plog = 0x7ffff7fbe028\n        ptemp = 0x7ffff7fc0028\n        pcommands = 0x7ffff7fc8028\n        opt = 0x7ffff7fc8118\n        rv = <optimized out>\n        mod = 0x5555557ec160 <ap_prelinked_modules+64>\n        opt_arg = 0x7fffffffe7f6 \"Debug\"\n        signal_server = <optimized out>\n(gdb)\n\nroot@nimtest:/home/amb/apache2/apache2-2.4.7# apache2ctl -S\nAH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1. Set the 'ServerName' directive globally to suppress this message\nVirtualHost configuration:\n127.0.0.1:10000        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:2)\n127.0.0.1:10001        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:12)\n127.0.0.1:10002        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:22)\n127.0.0.1:10003        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:32)\n127.0.0.1:10004        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:42)\n127.0.0.1:10005        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:52)\n127.0.0.1:10006        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:62)\n127.0.0.1:10007        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:72)\n127.0.0.1:10008        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:82)\n127.0.0.1:10009        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:92)\n127.0.0.1:10010        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:102)\n127.0.0.1:10011        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:112)\n127.0.0.1:10012        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:122)\n127.0.0.1:10013        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:132)\n127.0.0.1:10014        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:142)\n127.0.0.1:10015        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:152)\n127.0.0.1:10016        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:162)\n127.0.0.1:10017        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:172)\n127.0.0.1:10018        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:182)\n127.0.0.1:10019        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:192)\n127.0.0.1:10020        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:202)\n127.0.0.1:10021        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:212)\n127.0.0.1:10022        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:222)\n127.0.0.1:10023        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:232)\n127.0.0.1:10024        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:242)\n127.0.0.1:10025        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:252)\n127.0.0.1:10026        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:262)\n127.0.0.1:10027        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:272)\n127.0.0.1:10028        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:282)\n127.0.0.1:10029        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:292)\n127.0.0.1:10030        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:302)\n127.0.0.1:10031        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:312)\n127.0.0.1:10032        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:322)\n127.0.0.1:10033        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:332)\n127.0.0.1:10034        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:342)\n127.0.0.1:10035        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:352)\n127.0.0.1:10036        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:362)\n127.0.0.1:10037        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:372)\n127.0.0.1:10038        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:382)\n127.0.0.1:10039        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:392)\n127.0.0.1:10040        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:402)\n127.0.0.1:10041        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:412)\n127.0.0.1:10042        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:422)\n127.0.0.1:10043        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:432)\n127.0.0.1:10044        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:442)\n127.0.0.1:10045        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:452)\n127.0.0.1:10046        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:462)\n127.0.0.1:10047        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:472)\n127.0.0.1:10048        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:482)\n127.0.0.1:10049        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:492)\n127.0.0.1:10050        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:502)\n127.0.0.1:10051        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:512)\n127.0.0.1:10052        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:522)\n127.0.0.1:10053        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:532)\n127.0.0.1:10054        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:542)\n127.0.0.1:10055        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:552)\n127.0.0.1:10056        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:562)\n127.0.0.1:10057        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:572)\n127.0.0.1:10058        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:582)\n127.0.0.1:10059        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:592)\n127.0.0.1:10060        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:602)\n127.0.0.1:10061        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:612)\n127.0.0.1:10062        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:622)\n127.0.0.1:10063        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:632)\n127.0.0.1:10064        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:642)\n127.0.0.1:10065        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:652)\n127.0.0.1:10066        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:662)\n127.0.0.1:10067        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:672)\n127.0.0.1:10068        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:682)\n127.0.0.1:10069        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:692)\n127.0.0.1:10070        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:702)\n127.0.0.1:10071        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:712)\n127.0.0.1:10072        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:722)\n127.0.0.1:10073        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:732)\n127.0.0.1:10074        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:742)\n127.0.0.1:10075        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:752)\n127.0.0.1:10076        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:762)\n127.0.0.1:10077        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:772)\n127.0.0.1:10078        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:782)\n127.0.0.1:10079        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:792)\n127.0.0.1:10080        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:802)\n127.0.0.1:10081        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:812)\n127.0.0.1:10082        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:822)\n127.0.0.1:10083        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:832)\n127.0.0.1:10084        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:842)\n127.0.0.1:10085        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:852)\n127.0.0.1:10086        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:862)\n127.0.0.1:10087        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:872)\n127.0.0.1:10088        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:882)\n127.0.0.1:10089        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:892)\n127.0.0.1:10090        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:902)\n127.0.0.1:10091        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:912)\n127.0.0.1:10092        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:922)\n127.0.0.1:10093        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:932)\n127.0.0.1:10094        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:942)\n127.0.0.1:10095        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:952)\n127.0.0.1:10096        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:962)\n127.0.0.1:10097        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:972)\n127.0.0.1:10098        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:982)\n127.0.0.1:10099        127.0.0.1 (/etc/apache2/sites-enabled/test.conf:992)\nServerRoot: \"/etc/apache2\"\nMain DocumentRoot: \"/var/www\"\nMain ErrorLog: \"/var/log/apache2/error.log\"\nMutex proxy: using_defaults\nMutex ssl-cache: using_defaults\nMutex default: dir=\"/var/lock/apache2\" mechanism=fcntl\nMutex mpm-accept: using_defaults\nMutex watchdog-callback: using_defaults\nMutex proxy-balancer-shm: using_defaults\nMutex rewrite-map: using_defaults\nMutex ssl-stapling: using_defaults\nPidFile: \"/var/run/apache2/apache2.pid\"\nDefine: DUMP_VHOSTS\nDefine: DUMP_RUN_CFG\nDefine: ENABLE_USR_LIB_CGI_BIN\nUser: name=\"www-data\" id=33\nGroup: name=\"www-data\" id=33", "id": 177578, "time": "2014-09-06T13:11:42Z", "creator": "alex@alex.org.uk", "creation_time": "2014-09-06T13:11:42Z", "is_private": false}, {"count": 1, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 177580, "time": "2014-09-06T13:32:54Z", "bug_id": 56919, "creation_time": "2014-09-06T13:32:54Z", "tags": [], "text": "BZ 54357 contains another user report of a crash in the same stack directly after start for 2.4.7, which was commented by the same user as being fixed for him after updating to 2.4.9.\n\nAny chance you can update to latest 2.4 and try again?"}, {"count": 2, "tags": [], "bug_id": 56919, "text": "[ Note for anyone trying to duplicate this: On a clean container on the same machine, I needed 141 or more sites to duplicate this. Also it appears it is necessary to enable mod_php]\n\nOn 2.4.10_1ubuntu1 (utopic version recompiled for trusty), this appears not to occur, which is good news.\n\nBZ 54357 appears to involve certificate stapling, which I have switched off (I believe that's the default). I would rather use 2.4.7 if possible simply because that is the stock version Ubuntu distribute and support. Failing that, I'm happy to identify the specific issue, recompile, and try to persuade Ubuntu to apply a patch to 2.4.7. Any idea what the underlying issue is here, or how I might work around it without an upgrade?", "id": 177586, "time": "2014-09-06T15:41:48Z", "creator": "alex@alex.org.uk", "creation_time": "2014-09-06T15:41:48Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "alex@alex.org.uk", "is_private": false, "text": "Looks like I spoke too soon. This *DOES* occur on 2.4.10, it's just more difficult to replicate. Of course it replicates just fine with my real-world example.\n\nHere's a backtrace of it dying on 2.4.10. I will try to amend the test case to replicate this. In the meantime is there anything further I can do to debug this?\n\nroot@nimtest:~# gdb --args /usr/sbin/apache2 -k start -X -e Debug\nGNU gdb (Ubuntu 7.7-0ubuntu3.1) 7.7\nCopyright (C) 2014 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from /usr/sbin/apache2...Reading symbols from /usr/lib/debug//usr/sbin/apache2...done.\ndone.\n(gdb) run\nStarting program: /usr/sbin/apache2 -k start -X -e Debug\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\n[Mon Sep 08 15:53:47.686373 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module access_compat_module from /usr/lib/apache2/modules/mod_access_compat.so\n[Mon Sep 08 15:53:47.690215 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module alias_module from /usr/lib/apache2/modules/mod_alias.so\n[Mon Sep 08 15:53:47.695217 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module auth_basic_module from /usr/lib/apache2/modules/mod_auth_basic.so\n[Mon Sep 08 15:53:47.697928 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module authn_core_module from /usr/lib/apache2/modules/mod_authn_core.so\n[Mon Sep 08 15:53:47.703892 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module authn_file_module from /usr/lib/apache2/modules/mod_authn_file.so\n[Mon Sep 08 15:53:47.708513 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module authz_core_module from /usr/lib/apache2/modules/mod_authz_core.so\n[Mon Sep 08 15:53:47.714280 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module authz_groupfile_module from /usr/lib/apache2/modules/mod_authz_groupfile.so\n[Mon Sep 08 15:53:47.717910 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module authz_host_module from /usr/lib/apache2/modules/mod_authz_host.so\n[Mon Sep 08 15:53:47.725992 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module authz_user_module from /usr/lib/apache2/modules/mod_authz_user.so\n[Mon Sep 08 15:53:47.733997 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module autoindex_module from /usr/lib/apache2/modules/mod_autoindex.so\n[Mon Sep 08 15:53:47.739117 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module cache_module from /usr/lib/apache2/modules/mod_cache.so\n[Mon Sep 08 15:53:47.744871 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module cgi_module from /usr/lib/apache2/modules/mod_cgi.so\n[Mon Sep 08 15:53:47.750762 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module dbd_module from /usr/lib/apache2/modules/mod_dbd.so\n[Mon Sep 08 15:53:47.757628 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module deflate_module from /usr/lib/apache2/modules/mod_deflate.so\n[Mon Sep 08 15:53:47.765739 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module dir_module from /usr/lib/apache2/modules/mod_dir.so\n[Mon Sep 08 15:53:47.772183 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module env_module from /usr/lib/apache2/modules/mod_env.so\n[Mon Sep 08 15:53:47.780369 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module filter_module from /usr/lib/apache2/modules/mod_filter.so\n[Mon Sep 08 15:53:47.788832 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module headers_module from /usr/lib/apache2/modules/mod_headers.so\n[Mon Sep 08 15:53:47.794207 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module ident_module from /usr/lib/apache2/modules/mod_ident2.so\n[Mon Sep 08 15:53:47.797959 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module lbmethod_byrequests_module from /usr/lib/apache2/modules/mod_lbmethod_byrequests.so\n[Mon Sep 08 15:53:47.801879 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module mime_module from /usr/lib/apache2/modules/mod_mime.so\n[Mon Sep 08 15:53:47.806730 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module mpm_prefork_module from /usr/lib/apache2/modules/mod_mpm_prefork.so\n[Mon Sep 08 15:53:47.813710 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module negotiation_module from /usr/lib/apache2/modules/mod_negotiation.so\n[Mon Sep 08 15:53:47.952346 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module php5_module from /usr/lib/apache2/modules/libphp5.so\n[Mon Sep 08 15:53:47.957451 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module proxy_module from /usr/lib/apache2/modules/mod_proxy.so\n[Mon Sep 08 15:53:47.960908 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module proxy_balancer_module from /usr/lib/apache2/modules/mod_proxy_balancer.so\n[Mon Sep 08 15:53:47.964292 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module proxy_http_module from /usr/lib/apache2/modules/mod_proxy_http.so\n[Mon Sep 08 15:53:47.967260 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module reqtimeout_module from /usr/lib/apache2/modules/mod_reqtimeout.so\n[Mon Sep 08 15:53:47.971368 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module rewrite_module from /usr/lib/apache2/modules/mod_rewrite.so\n[Mon Sep 08 15:53:47.974517 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module setenvif_module from /usr/lib/apache2/modules/mod_setenvif.so\n[Mon Sep 08 15:53:47.977591 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module slotmem_shm_module from /usr/lib/apache2/modules/mod_slotmem_shm.so\n[Mon Sep 08 15:53:47.980582 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module socache_shmcb_module from /usr/lib/apache2/modules/mod_socache_shmcb.so\n[Mon Sep 08 15:53:47.990700 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module ssl_module from /usr/lib/apache2/modules/mod_ssl.so\n[Mon Sep 08 15:53:47.994364 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module status_module from /usr/lib/apache2/modules/mod_status.so\n[Mon Sep 08 15:53:47.997902 2014] [so:debug] [pid 15446] mod_so.c(266): AH01575: loaded module substitute_module from /usr/lib/apache2/modules/mod_substitute.so\nAH00548: NameVirtualHost has no effect and will be removed in the next release /etc/apache2/sites-enabled/000-extility-amber-listen.conf:15\nAH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1. Set the 'ServerName' directive globally to suppress this message\n[New Thread 0x7fffe7166700 (LWP 15462)]\n[Thread 0x7fffe7166700 (LWP 15462) exited]\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff03e5139 in ?? () from /usr/lib/apache2/modules/mod_ssl.so\n(gdb) bt full\n#0  0x00007ffff03e5139 in ?? () from /usr/lib/apache2/modules/mod_ssl.so\nNo symbol table info available.\n#1  0x00007ffff274f7a6 in int_free_ex_data (class_index=<optimized out>, obj=0x555555b03830, ad=0x555555b03858) at ex_data.c:522\n        mx = 2\n        i = 0\n        item = 0x5555558331f0\n        ptr = <optimized out>\n        storage = 0x555555b03ab0\n#2  0x00007ffff27f0061 in x509_cb (operation=operation@entry=3, pval=pval@entry=0x7fffffffdfe8, it=it@entry=0x7ffff2aab780 <X509_it>,\n    exarg=exarg@entry=0x0) at x_x509.c:113\n        ret = 0x555555b03830\n#3  0x00007ffff27f3fea in asn1_item_combine_free (pval=pval@entry=0x7fffffffdfe8, it=it@entry=0x7ffff2aab780 <X509_it>, combine=combine@entry=0)\n    at tasn_fre.c:173\n        tt = <optimized out>\n        seqtt = <optimized out>\n        ef = <optimized out>\n        cf = <optimized out>\n        aux = <optimized out>\n        asn1_cb = 0x7ffff27effa0 <x509_cb>\n        i = <optimized out>\n#4  0x00007ffff27f41c5 in ASN1_item_free (val=0x555555b03830, it=it@entry=0x7ffff2aab780 <X509_it>) at tasn_fre.c:71\nNo locals.\n#5  0x00007ffff27f014c in X509_free (a=<optimized out>) at x_x509.c:141\nNo locals.\n#6  0x00007ffff24caf2d in SSL_load_client_CA_file (file=<optimized out>) at ssl_cert.c:726\n        in = 0x555555b02990\n        x = 0x555555b03830\n        xn = <optimized out>\n        ret = <optimized out>\n        sk = 0x555555b04b70\n#7  0x00007ffff03ca871 in ssl_init_PushCAList (ca_list=0x555555b04190, s=0x7fffebad9238, ptemp=0x7ffff7fc0028, file=<optimized out>)\n    at ssl_engine_init.c:1587\n        n = <optimized out>\n        sk = <optimized out>\n#8  0x00007ffff03cae50 in ssl_init_FindCAList (s=s@entry=0x7fffebad9238, ptemp=ptemp@entry=0x7ffff7fc0028,\n    ca_file=0x7fffebad75c0 \"/etc/ssl/certs/extility-cluster-ca.crt\", ca_path=0x7fffebad7578 \"/etc/ssl/none\") at ssl_engine_init.c:1637\n        ca_list = 0x555555b04190\n#9  0x00007ffff03cb38e in ssl_init_ctx_verify (p=0x7ffff7ff0028, mctx=0x7ffff7e18140, ptemp=0x7ffff7fc0028, s=0x7fffebad9238)\n    at ssl_engine_init.c:674\n        ctx = 0x555555b01d30\n        verify = <optimized out>\n        ca_list = <optimized out>\n#10 ssl_init_ctx (s=0x7fffebad9238, p=0x7ffff7ff0028, ptemp=0x7ffff7fc0028, mctx=0x7ffff7e18140) at ssl_engine_init.c:863\nNo locals.\n#11 0x00007ffff03cc4d8 in ssl_init_server_ctx (pphrases=0x7ffff7eab110, sc=0x7ffff7e3ff50, ptemp=0x7ffff7fc0028, p=0x7ffff7ff0028, s=0x7fffebad9238)\n    at ssl_engine_init.c:1370\n        rv = <optimized out>\n#12 ssl_init_ConfigureServer (s=s@entry=0x7fffebad9238, p=p@entry=0x7ffff7ff0028, ptemp=ptemp@entry=0x7ffff7fc0028, sc=0x7ffff7e3ff50,\n    pphrases=pphrases@entry=0x7ffff7eab110) at ssl_engine_init.c:1469\nNo locals.\n#13 0x00007ffff03cd319 in ssl_init_Module (p=0x7ffff7ff0028, plog=<optimized out>, ptemp=0x7ffff7fc0028, base_server=0x7ffff7fc2de0)\n    at ssl_engine_init.c:304\n        mc = <optimized out>\n        sc = <optimized out>\n        s = 0x7fffebad9238\n        rv = <optimized out>\n        pphrases = 0x7ffff7eab110\n#14 0x00005555555ab019 in ap_run_post_config (pconf=0x7ffff7ff0028, plog=0x7ffff7fbe028, ptemp=0x7ffff7fc0028, s=0x7ffff7fc2de0) at config.c:103\n        pHook = 0x7ffff7eef0c0\n        n = 15\n        rv = 540686391\n#15 0x000055555558b137 in main (argc=6, argv=0x7fffffffe598) at main.c:765\n        c = 101 'e'\n        showcompile = 0\n        showdirectives = 0\n        confname = 0x5555555cb4e7 \"apache2.conf\"\n        def_server_root = 0x5555555cb4da \"/etc/apache2\"\n        temp_error_log = 0x0\n        error = <optimized out>\n        process = 0x7ffff7ff2118\n        pconf = 0x7ffff7ff0028\n        plog = 0x7ffff7fbe028\n        ptemp = 0x7ffff7fc0028\n        pcommands = 0x7ffff7fc8028\n        opt = 0x7ffff7fc8118\n        rv = <optimized out>\n        mod = 0x5555557ed160 <ap_prelinked_modules+64>\n        opt_arg = 0x7fffffffe826 \"Debug\"\n        signal_server = <optimized out>\n(gdb)", "id": 177632, "time": "2014-09-08T15:56:02Z", "bug_id": 56919, "creation_time": "2014-09-08T15:56:02Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 56919, "text": "Created attachment 31975\nPerl program to replicate the bug under 2.4.10\n\nI've attached what I believe is the minimal perl program to replicate the bug under 2.4.10.\n\nThis simply adds one line to the server config:\n\n    SSLCACertificateFile /etc/ssl/certs/ssl-cert-snakeoil.pem\n\nPerhaps there was something fixed in normal SSLCertificate loading that has yet to be fixed in CA certificate loading.", "id": 177634, "time": "2014-09-08T17:12:55Z", "creator": "alex@alex.org.uk", "creation_time": "2014-09-08T17:12:55Z", "is_private": false, "attachment_id": 31975}, {"count": 5, "tags": [], "bug_id": 56919, "text": "(note, you can have a single site that uses an SSLCACertificateFile after a lot of sites not using them, and still see the bug)", "id": 177635, "time": "2014-09-08T17:13:56Z", "creator": "alex@alex.org.uk", "creation_time": "2014-09-08T17:13:56Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 56919, "text": "I believe I now understand the root cause of this bug and it's very NASTY. I don't think it's properly fixed in 2.4.10 for any certificates.\n\nWhat appears to be happening is this. In main.c (prior to line 702), apache processes the config file. This dlopen()'s mod_ssl, and calls ssl_init_Module(). At main.c line 707, inside the 'for (;;)' loop around reloads, it does an apr_pool_clear(). This dlclose()'s all the modules that have been open, and reprocesses the configuration, which again dlopen()'s mod_ssl and calls ssl_init_Module() again.\n\nHowever, inspection shows that mod_ssl isn't always loaded at the same address. If you have a large configuration, that's more likely (not sure whether it's a memory leak, or fragmentation, or what, but this is the cause). For instance, I put a breakpoint on ssl_init_Module(), and then ran apache2 and got the output below. You can see the location of ssl_init_Module has changed.\n\nThis in itself would not be an issue. However, when the certificates are first loaded through openssl, they are set up with a free_func (in the openssl structure) that points to something in mod_ssl freeing the additional storage - see http://osxr.org/openssl/source/crypto/ex_data.c#0566\n\nWhen the config file is reprocessed, that free_func's address changes. However, openssl object has not (yet) been freed. When it is, the free_func() is called using the PREVIOUS address associated with mod_ssl. What I believe is happening here is that the SSL library is checking to see whether a certificate with the same CN has already been loaded, here:\n http://osxr.org/openssl/source/ssl/ssl_cert.c#0707\nand deinitialising mod_ssl is not clearing the loaded certificates. This is probably deliberate as there may be other users of the openssl library that might also be loading certificates.\n\nI don't really know how one would go about fixing this. The least horrible option I think would be to never dlclose() a module once it is loaded. IE a reload of apache2 would leave modules in RAM (but presumably deinited), so that they would always be at the same place. A reload would then leave them loaded.\n\nBreakpoint 1, ssl_init_Module (p=0x7ffff7ff0028, plog=0x7ffff7fbe028, ptemp=0x7ffff7fbc028, base_server=0x7ffff7fc1ec8) at ssl_engine_init.c:138\n138\t{\n(gdb) print pc\nNo symbol \"pc\" in current context.\n(gdb) print &ssl_init_Module\n$1 = (apr_status_t (*)(apr_pool_t *, apr_pool_t *, apr_pool_t *, server_rec *)) 0x7ffff03d7000 <ssl_init_Module>\n(gdb) cont\nContinuing.\nwarning: Temporarily disabling breakpoints for unloaded shared library \"/usr/lib/apache2/modules/mod_ssl.so\"\n[New Thread 0x7fffe6fee700 (LWP 56253)]\n[Thread 0x7fffe6fee700 (LWP 56253) exited]\n\nBreakpoint 1, ssl_init_Module (p=0x7ffff7ff0028, plog=0x7ffff7fbe028, ptemp=0x7ffff7fc0028, base_server=0x7ffff7fc2de0) at ssl_engine_init.c:138\n138\t{\n(gdb) print &ssl_init_Module\n$2 = (apr_status_t (*)(apr_pool_t *, apr_pool_t *, apr_pool_t *, server_rec *)) 0x7ffff03cd000 <ssl_init_Module>\n(g", "count": 6, "id": 177639, "time": "2014-09-08T18:20:00Z", "creator": "alex@alex.org.uk", "creation_time": "2014-09-08T18:20:00Z", "is_private": false}, {"count": 7, "tags": [], "creator": "alex@alex.org.uk", "text": "Created attachment 31977\nDemonstration patch to work around the bug\n\nA minimum patch for this bug is attached. This swaps the SEGV for a memory leak, on the basis that a memory leak is probably less bad. I am neither sure this is suitable or a complete solution.\n\nThe patch works as follows: the problem is that the address of certinfo_free is being stored somewhere deep in openssl. When modssl is dlclosed()'d and dlopen()'d again, the address of certinfo_free may change. openssl then calls the free function at its old location, and SEGV / illegal instruction ensues. By not providing a free function for the extra data, we avoid openssl calling anything.\n\nThis appears to avoid the test case crashing, which at least means the problem is correctly identified.", "id": 177641, "time": "2014-09-08T18:41:08Z", "bug_id": 56919, "creation_time": "2014-09-08T18:41:08Z", "is_private": false, "attachment_id": 31977}, {"count": 8, "tags": [], "bug_id": 56919, "is_private": false, "text": "I would guess the proper cleanup is missing in ssl_init_ModuleKill.", "id": 177645, "time": "2014-09-08T19:29:50Z", "creator": "rpluem@apache.org", "creation_time": "2014-09-08T19:29:50Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 56919, "is_private": false, "text": "I'm not sure what the proper way to fix is this.\n\nIt's tempting to call CRYPTO_cleanup_all_ex_data, but I don't think that's the right solution. Firstly ssl_cleanup_pre_config says:\n\n    /* Also don't call CRYPTO_cleanup_all_ex_data here; any registered\n     * ex_data indices may have been cached in static variables in\n     * OpenSSL; removing them may cause havoc.  Notably, with OpenSSL\n     * versions >= 0.9.8f, COMP_CTX cleanups would not be run, which\n     * could result in a per-connection memory leak (!). */\n\nSecondly some other ssl user (for instance a DBD driver using an SSL interface to the database) may not take kindly to us stomping on its data.\n\nIt's tempting to remove the index that X509_get_ex_new_index added, removing the data, save that as far as I can see openssl doesn't have an API call to do that.\n\nThat would leave us attempting to ensure that every single object that mod_ssl allocates is freed. But firstly, I'm not sure how to do that, and secondly this won't fix the problem where there is some other ssl user that also allocates objects. It would also be inherently fragile.\n\nThe final option would be to rewrite the stapling code so it didn't use ex_data at all. To me this seems like the best route, but I don't understand the stapling code well enough to do it.\n\nIs there some easier option I have missed?", "id": 177665, "time": "2014-09-09T11:28:59Z", "creator": "alex@alex.org.uk", "creation_time": "2014-09-09T11:28:59Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 56919, "text": "Thank you for the thorough debugging and analysis, Alex. I think it's really a duplicate of bug 54357, and it would be best to dupe this one into it (or vice versa).\n\n(In reply to Alex Bligh from comment #9)\n> The final option would be to rewrite the stapling code so it didn't use\n> ex_data at all. To me this seems like the best route, but I don't understand\n> the stapling code well enough to do it.\n> \n> Is there some easier option I have missed?\n\nOne option might be to avoid ex_data fiddling in the \"first round\", based on a ssl_config_global_isfixed() check - i.e., something like this (untested):\n\nIndex: ssl_engine_init.c\n===================================================================\n--- ssl_engine_init.c   (revision 1624017)\n+++ ssl_engine_init.c   (working copy)\n@@ -272,7 +272,9 @@\n         return HTTP_INTERNAL_SERVER_ERROR;\n     }\n #ifdef HAVE_OCSP_STAPLING\n-    ssl_stapling_ex_init();\n+    if (ssl_config_global_isfixed(mc) == TRUE) {\n+        ssl_stapling_ex_init();\n+    }\n #endif\n\n     /*\n@@ -1067,6 +1069,7 @@\n          * later, we defer to the code in ssl_init_server_ctx.\n          */\n         if ((mctx->stapling_enabled == TRUE) &&\n+            (ssl_config_global_isfixed(mc) == TRUE) &&\n             !ssl_stapling_init_cert(s, mctx, cert)) {\n             ap_log_error(APLOG_MARK, APLOG_ERR, 0, s, APLOGNO(02567)\n                          \"Unable to configure certificate %s for stapling\",\n@@ -1418,7 +1421,8 @@\n      * (late) point makes sure that we catch both certificates loaded\n      * via SSLCertificateFile and SSLOpenSSLConfCmd Certificate.\n      */\n-    if (sc->server->stapling_enabled == TRUE) {\n+    if ((sc->server->stapling_enabled == TRUE) &&\n+        (ssl_config_global_isfixed(myModConfig(s)) == TRUE)) {\n         X509 *cert;\n         int i = 0;\n         int ret = SSL_CTX_set_current_cert(sc->server->ssl_ctx,\n\n\nGetting rid of ex_data might be cleaner in the end, and was actually one of Joe's questions on the dev list in October 2009:\n\nhttps://mail-archives.apache.org/mod_mbox/httpd-dev/200910.mbox/%3C20091025200721.GA20714@redhat.com%3E\n\n(see also bug 43822)", "id": 177701, "time": "2014-09-10T15:06:07Z", "creator": "asfbugz@velox.ch", "creation_time": "2014-09-10T15:06:07Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 56919, "attachment_id": null, "text": "(In reply to Kaspar Brand from comment #10)\n\n> One option might be to avoid ex_data fiddling in the \"first round\", based on\n> a ssl_config_global_isfixed() check - i.e., something like this (untested):\n> \n> Index: ssl_engine_init.c\n> ===================================================================\n> --- ssl_engine_init.c   (revision 1624017)\n> +++ ssl_engine_init.c   (working copy)\n> @@ -272,7 +272,9 @@\n>          return HTTP_INTERNAL_SERVER_ERROR;\n>      }\n>  #ifdef HAVE_OCSP_STAPLING\n> -    ssl_stapling_ex_init();\n> +    if (ssl_config_global_isfixed(mc) == TRUE) {\n> +        ssl_stapling_ex_init();\n> +    }\n>  #endif\n\nMaybe I am missing something, but we always call\n\nssl_config_global_fix(mc);\n\na few lines above. So the condition would be always true.", "id": 177719, "time": "2014-09-11T06:09:25Z", "creator": "rpluem@apache.org", "creation_time": "2014-09-11T06:09:25Z", "is_private": false}, {"count": 12, "tags": [], "creator": "rpluem@apache.org", "is_private": false, "text": "\n\n*** This bug has been marked as a duplicate of bug 54357 ***", "id": 177720, "time": "2014-09-11T06:09:52Z", "bug_id": 56919, "creation_time": "2014-09-11T06:09:52Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 56919, "text": "(In reply to Ruediger Pluem from comment #11)\n> Maybe I am missing something, but we always call\n> \n> ssl_config_global_fix(mc);\n> \n> a few lines above. So the condition would be always true.\n\nYou're absolutely right, my bad. Forget about my idea in comment 10 completely, as it also wouldn't work for restarts.", "count": 13, "id": 177782, "time": "2014-09-12T05:01:56Z", "creator": "asfbugz@velox.ch", "creation_time": "2014-09-12T05:01:56Z", "is_private": false}]