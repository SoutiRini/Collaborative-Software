[{"count": 0, "tags": [], "creator": "torsten.foertsch@gmx.net", "text": "Created attachment 26889\nthe cure\n\nwhen httpd startup is aborted because the DYNAMIC_MODULE_LIMIT is hit it segfaults. This happens because config.c:ap_add_module() inserts the new module into the module list before it has checked for all possible errors. Then if the limit is reached the module is partly added.\n\nThe caller mod_so.c:load_module() installs a pool cleanup to remove the module only if ap_add_module() returns without error. But APR has also added a pool cleanup to remove the mapped memory segment.\n\nNow, when the pool is destroyed first the APR cleanup is called and it removes the memory segment. But that segment also contains the module structure where ap_top_module still points to. Then the next cleanup function for a dynamic module (the one loaded previous to the module that caused hitting the limit) is called. It calls config.c:ap_remove_module() which traverses the list starting at ap_top_module. But ap_top_module still points to the memory segment that has just been removed from the address space. Hence, it segfaults.", "id": 145813, "time": "2011-04-15T08:59:21Z", "bug_id": 51072, "creation_time": "2011-04-15T08:59:21Z", "is_private": false, "attachment_id": 26889}, {"count": 1, "tags": [], "creator": "sf@sfritsch.de", "text": "committed as r1092787. Thanks for debugging this.", "id": 145816, "time": "2011-04-15T15:05:18Z", "bug_id": 51072, "creation_time": "2011-04-15T15:05:18Z", "is_private": false, "attachment_id": null}]