[{"count": 0, "tags": [], "text": "When I configure init-params in web.xml for a JSP like this:\n\n<servlet>\n  <servlet-name>Foo</servlet-name>\n  <jsp-file>/foo.jsp</jsp-file>\n  <init-param>\n    <param-name>bar</param-name>\n    <param-value>42</param-value>\n  </init-param>\n</servlet>\n\nI cannot read them using the ServletConfig.getInitParameter() method. Using \nServletConfig.getInitParameterNames() I found that I get the init-params from \nthe 'jsp' page compiler servlet (org.apache.jasper.servlet.JspServlet in \nconf/web.xml) instead.", "is_private": false, "bug_id": 4362, "id": 7038, "time": "2001-10-23T02:22:59Z", "creator": "efussi@gmx.net", "creation_time": "2001-10-23T02:22:59Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "remm@apache.org", "text": "Let's say you define a mapping for the snoop JSP from the examples webapp:\n    <servlet>\n     <servlet-name>Snoop</servlet-name>\n     <jsp-file>/jsp/snp/snoop.jsp</jsp-file>\n     <init-param>\n       <param-name>bar</param-name>\n       <param-value>42</param-value>\n     </init-param>\n    </servlet>\n\nThen you need to define a mapping for it:\n    <servlet-mapping>\n        <servlet-name>\n            Snoop\n        </servlet-name>\n        <url-pattern>\n            /Snoop\n        </url-pattern>\n    </servlet-mapping>\n\nIf you access /Snoop, you'll see the 'bar' init parameter. If you \naccess '/jsp/snoop.jsp', you're actually using the mapping for the Jasper \nJspServlet, so that's why you get the init parameters for that servlet.", "id": 7124, "time": "2001-10-24T18:42:48Z", "bug_id": 4362, "creation_time": "2001-10-24T18:42:48Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 4362, "is_private": false, "text": "OK, that works. Nevertheless it seems pretty strange to me that any JSP should \nbe able to read internal initialization parameters...", "id": 7183, "time": "2001-10-26T02:04:36Z", "creator": "efussi@gmx.net", "creation_time": "2001-10-26T02:04:36Z", "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 4362, "is_private": false, "id": 7353, "time": "2001-10-30T23:45:13Z", "creator": "efussi@gmx.net", "creation_time": "2001-10-30T23:45:13Z", "tags": [], "text": "I just checked the Servlet Spec again. Although it does not specifically state \nhow <init-param>eters are accessible from within JSPs, it on the other hand \ndoes not require a <servlet-mapping> to be given.\nAnother hint that this should work without <servlet-mapping> is that <init-\nparam> is a subelement of the <servlet> element, not of the <servlet-mapping> \nelement.\nFurthermore, I still don't think that implementation details like the <init-\nparm>eters of the JSP invoker servlet should be exposed as easily.\nTherefore I am re-opening this bug with a changed summary line."}, {"count": 4, "tags": [], "bug_id": 4362, "text": "I don't agree, because the JSP servlet is a special case. If you \ninvoke /foo.jsp without defining a mapping for it, the mapping *.jsp is used, \nand the Jasper servlet definition is used (it is defined in the default \nconf/web.xml).", "id": 7354, "time": "2001-10-30T23:58:20Z", "creator": "remm@apache.org", "creation_time": "2001-10-30T23:58:20Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "craig.mcclanahan@sun.com", "text": "Remy's analysis of how init parameters work is correct.  To put it in more\ngeneral terms:\n\n* <init-param> is a sub-element of <servlet>.  Therefore,\n  initialization parameters belong to the particular servlet\n  *definition* that is defined by that <servlet> element.\n\n* Initialization parameter names and values are exposed\n  (via the ServletConfig) object to any instance of that\n  particular servlet definition that is exectued.  (Note\n  that it's legal to have more than one <servlet>\n  definition with the same servlet class -- the two\n  definitions are unique.\n\n* It is legal to have zero or more <servlet-mapping> rules\n  that map requests to a particular <servlet> definition.\n\n* The servlet container uses <servlet-mapping> rules to\n  select which servlet definition should process a\n  request.  Based on this selection, it follows the\n  servlet lifecycle rules (single instance of the servlet\n  class, call init() before the first request, and son on)\n  and passes a ServletConfig object that corresponds to\n  the <servlet> definition on to that servlet.\n\nIn the absence of a <servlet> definition for a specific page, Tomcat uses a\n\"*.jsp\" URL pattern in a <servlet-mapping> to map them to the default\nJspServlet.  Therefore, every page mapped this way should see the init params\nfor the standard JspServlet.  But note that this is a consequence of the way\nthat Tomcat happens to implement JSP -- you cannot count on it generally.\n\nThe bottom line of all of this -- if you want to utilize servlet initialization\nparameters, you *must* define them in a <servlet> definition, and you *must*\nprovide a <servlet-mapping> that selects that servlet definition.\n", "id": 7372, "time": "2001-10-31T09:14:27Z", "bug_id": 4362, "creation_time": "2001-10-31T09:14:27Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 4362, "attachment_id": null, "is_private": false, "id": 7379, "time": "2001-10-31T09:53:44Z", "creator": "efussi@gmx.net", "creation_time": "2001-10-31T09:53:44Z", "text": "Thanks a lot for the very detailed explanation! Makes sense to me. I am closing \nthis bug now.\nBut I still don't like the exposure of implementation details this scenario \nallows... just doesn't feel right ;-)..."}]