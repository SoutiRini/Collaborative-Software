[{"count": 0, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "Reviewing testsuite logs when running on Windows, I noted the following error messages:\n\n<date, time> org.apache.catalina.loader.WebappClassLoader clearReferencesThreads\nSEVERE: The web application [/foo] appears to have started a thread named [SeedGenerator Thread] but has failed to stop it. This is very likely to create a memory leak.\n\nThe above warning is from org.apache.catalina.authenticator.TestDigestAuthenticator, but there are other test cases that display it.\n\nThis is observed when testing on Windows 7 using\nTomcat 8.0.3 +Oracle Java 7u51 (32-bit)\nTomcat 7.0.52 +Oracle Java 6u45 (32-bit)\nTomcat 7.0.52 +Oracle Java 7u51 (32-bit)\n\n\nGoogling by the thread name, I found openjdk7 source code for sun.security.provider.SeedGenerator class at [1]\n\n[1] http://www.docjar.com/html/api/sun/security/provider/SeedGenerator.java.html\n\n\nTo reproduce on an usual Tomcat instance, on Windows:\n1). Create bin/setenv.bat:\n\nset CATALINA_OPTS=-Djava.security.egd=file:/dev/./urandom\n\n2). Start Tomcat. Note what web application was deployed and started first. In my case it is \"docs\".\n\n3). Trigger reload or redeploy of the web application (touch its WEB-INF/web.xml, or rename docs -> docs1).\n\nAfter this, an \"appears to have started a thread named [SeedGenerator Thread]\" message is logged in catalina.<date>.log file.\n\n(It does not matter whether the application actually generates session ids. It matters that it was the first to start session id generator).\n\n\n\nMy conclusion:\n===============\n1. This is triggered by the following setting in build.properties.default file:\ntest.jvmarg.egd=-Djava.security.egd=file:/dev/./urandom\n\nIf the file \"/dev/urandom\" is not readable (e.g. on Windows, may be on some unix systems as well), SeedGenerator fallbacks to an algorithm that creates that \"SeedGenerator Thread\" thread.\n\n2. Workaround:\nRedefine this property in custom build.properties file.\nUsing any 1 of the following 2 lines works. The message disappears from test logs.\n\ntest.jvmarg.egd=-Djava.security.egd=file:/dev/urandom\n\ntest.jvmarg.egd=\n\n(The \"file:/dev/urandom\" value is considered by SeedGenerator class as a special value, a marker to use native implementation of random seed generator).\n\n\nPossible fixes:\n================\n1. Document this effect in places where \"java.security.egd\" property is mentioned.\n\nA web application should not use such value of \"java.security.egd\" property when /dev/urandom is not readable.\n\n(I know two places: Migration guide, \"FasterStartUp\" wiki page)\n\n2. Fix configuration of the tests.\n\nMaybe either document this in testing section of BUILDING.txt,\nor move this property definition into build.xml, making it conditional on <available file=\"/dev/urandom\">.\n\n3. Can JreMemoryLeakPreventionListener guard against this?\nMaybe it can, by creating a SecureRandom instance.\n\nGenerally, I see no need for such guard there, because trying to use /dev/urandom on a system where such file is not readable  is a blatant configuration error.\n\n\n4. Can clearReferencesThreads turn a deaf ear to SeedGenerator thread?\n\nI think it should not. I think it is a read issue that pins TCCL in memory.", "id": 173047, "time": "2014-02-14T15:41:29Z", "bug_id": 56139, "creation_time": "2014-02-14T15:41:29Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "Possible fix 2 looked like the best option to me so I implemented in trunk for 8.0.4 and 7.0.x for 7.0.53.", "id": 173066, "time": "2014-02-17T10:35:12Z", "bug_id": 56139, "creation_time": "2014-02-17T10:35:12Z", "is_private": false, "attachment_id": null}]