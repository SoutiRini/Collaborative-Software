[{"count": 0, "attachment_id": null, "bug_id": 59836, "is_private": false, "id": 192269, "time": "2016-07-10T06:51:05Z", "creator": "onealj@apache.org", "creation_time": "2016-07-10T06:51:05Z", "tags": [], "text": "This is a aggregate bug for recent changes in classes from using short or int to using enums with codes.\n\nBenefits:\n* self-explanatory usage rather than needing to list the valid constants in the javadocs\n* easier to distinguish arguments in function signatures (not just a 5 ints)\n* clearer error messages, no functions needed to convert code to string\n* free range checking (less boiler plate code that does the same)\n* type safety\n\nDrawbacks:\n* some permgen overhead\n* type checking execution overhead\n\nOverall, this seems like a good thing.\n\nIn effort to maintain backwards compatibility, the following is suggested:\n\nIf there is currently\nint getSomething();\nvoid setSomething(int);\n\nThen we should add\nenum getSomethingEnum();\nvoid setSomething(Enum);\n\nAnd deprecate\nvoid setSomething(int);\nint getSomething();\n\nIt's a bit tricky handling getSomething/getSomethingEnum while maintaining backwards compatibility because at some point the signature will abruptly change. Both getters should be offered for a while with a note encouraging users to use the constants or enums rather than using literal values. This is good coding practice anyway to not hard-code literal values, but is especially important with regard to backwards compatibility here.\n\nAt least 2 releases later, but not later than POI 4.0:\nDelete void setSomething(int);\nDelete int getSomething();\nRename enum getSomethingEnum(); to enum getSomething();\n\nIn the end, we will have\nenum getSomething();\nvoid setSomething(enum);\nas the only two methods."}, {"count": 1, "tags": [], "bug_id": 59836, "attachment_id": null, "is_private": false, "id": 193945, "time": "2016-09-22T23:36:59Z", "creator": "onealj@apache.org", "creation_time": "2016-09-22T23:36:59Z", "text": "Todo: update https://poi.apache.org/spreadsheet/quick-guide.html"}, {"count": 2, "tags": [], "bug_id": 59836, "attachment_id": null, "is_private": false, "id": 195169, "time": "2016-11-23T16:09:23Z", "creator": "onealj@apache.org", "creation_time": "2016-11-23T16:09:23Z", "text": "https://poi.apache.org/apidocs/org/apache/poi/xwpf/usermodel/XWPFPictureData.html#getPictureType()\nXWPFPictureData.getPictureType() could return https://poi.apache.org/apidocs/org/apache/poi/sl/usermodel/PictureData.PictureType.html"}, {"count": 3, "tags": [], "bug_id": 59836, "attachment_id": null, "id": 196304, "time": "2017-01-22T22:03:09Z", "creator": "kiwiwings@apache.org", "creation_time": "2017-01-22T22:03:09Z", "is_private": false, "text": "preparation for removing those many HSSFColor subclasses with an enum via r1779866"}]