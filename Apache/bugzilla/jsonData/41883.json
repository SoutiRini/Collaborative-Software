[{"count": 0, "attachment_id": null, "creator": "hauser@acm.org", "is_private": false, "id": 100551, "time": "2007-03-18T13:12:12Z", "bug_id": 41883, "creation_time": "2007-03-18T13:12:12Z", "tags": [], "text": "After a client certificate authentication, the certificate is in\norg.apache.catalina.Globals.CERTIFICATES_ATTR \n\nAs per the object oriented coding and design principles, I'd expect that a cert\nwould also entail methods to e.g. check the its CRL status, etc.\n\njava.security.cert.X509Certificate unfortunately doesn't.\n\nIn order to enable programmers to use smarter extensions of the certificate\nobject, I suggest \n   1) Tomcat to use an extension of the X509Certificate object that has a \n      constructor with the X509Certificate as an argument\n   2) add an attribute in the server.xml's Connector element such that another \n      implementation can be specified - e.g. \"X509CertClass\"\n      (http://tomcat.apache.org/tomcat-5.5-doc/config/http.html#SSL%20Support)\n  \nThis allows to use such a smarter certificate implementation in\norg.apache.catalina.authenticator.SSLAuthenticator as well as later on in the\nbusiness logic, e.g. accessed via the httpServletRequest of an MVC framework\nsuch as struts, by simply putting that implementation into\nCATALINA_HOME/common/[lib/classes]"}, {"count": 1, "tags": [], "bug_id": 41883, "attachment_id": null, "text": "The abstract class all extended X509Certificate implementations would have to\nextend could be as simple as\n\npublic abstract class X509CertificateExtensible extends X509Certificate {\n\tprivate static final long serialVersionUID = 1L;\n\tprotected X509Certificate javaCert = null;\n\tstatic Log log = LogFactory.getLog(X509CertificateExtensible.class);\n\tpublic X509CertificateExtensible(X509Certificate javaCert) {\n\t\tthis.javaCert = javaCert;\n\t}\n\nI am happy to provide a baseline wrapper that basically just maintains backward\ncompatibility.", "id": 100552, "time": "2007-03-18T13:14:31Z", "creator": "hauser@acm.org", "creation_time": "2007-03-18T13:14:31Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 41883, "is_private": false, "id": 100567, "creation_time": "2007-03-19T01:30:33Z", "time": "2007-03-19T01:30:33Z", "creator": "hauser@acm.org", "text": "see also Bug 34643", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 41883, "text": "So... it's only been 6.5 years since this enhancement request was filed, but I found it looking for something related.\n\nI think it's unlikely that this will be fixed, because the servlet spec says that the object found under \"javax.servlet.request.X509Certificate\" should be an array of java.security.cert.X509Certificate objects. While the spec (and API) doesn't bar any container from providing /subclasses/ of that class, any code expecting to use such a subclass would no longer be container-neutral.\n\nThe kind of thing requested in this enhancement is best implemented in the webapp and not in the container.\n\nI'm marking this request as INVALID due to the semantic violation of the servlet spec. Re-open if there is disagreement.\n\n(Note that the container can already check the CRL status of the client certificate for you and so the webapp does not have to ... unless you have a nuanced setup where the container is not the appropriate place for those checks).", "id": 171195, "time": "2013-11-12T18:11:41Z", "creator": "chris@christopherschultz.net", "creation_time": "2013-11-12T18:11:41Z", "is_private": false, "attachment_id": null}]