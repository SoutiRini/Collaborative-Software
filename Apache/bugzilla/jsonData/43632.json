[{"attachment_id": null, "tags": [], "creator": "bobacus@gmail.com", "is_private": false, "count": 0, "id": 109378, "time": "2007-10-16T02:45:58Z", "bug_id": 43632, "creation_time": "2007-10-16T02:45:58Z", "text": "I may have discovered a bug in jakarta-taglibs-standard-1.1.2.\n\nThe JSP code\n\n<x:transform doc=\"${onlineevents_archiveDoc}\"\nxslt=\"${onlineevents_archiveXSLT}\">\n<x:param name=\"order\" value=\"${order}\" />\n</x:transform>\n\nis very occasionally causing a NullPointerException, with the\nfollowing stack trace:\n\njava.lang.NullPointerException\n***\norg.apache.taglibs.standard.tag.common.xml.TransformSupport.addParameter(TransformSupport.java:221)\n***\norg.apache.taglibs.standard.tag.common.xml.ParamSupport.doEndTag(ParamSupport.java:74)\n***\norg.apache.jsp.onlineevents.archive.default_jsp._jspx_meth_x_param_0(default_jsp.java:546)\n***\norg.apache.jsp.onlineevents.archive.default_jsp._jspx_meth_x_transform_0(default_jsp.java:515)\n***\norg.apache.jsp.onlineevents.archive.default_jsp._jspService(default_jsp.java:206)\n*** org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:97)\n*** javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n*** org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:332)\n*** org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:314)\n*** org.apache.jasper.servlet.JspServlet.service(JspServlet.java:264)\n*** javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n***\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)\n***\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)\n***\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)\n***\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)\n*** org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)\n***\norg.apache.catalina.cluster.tcp.ReplicationValve.invoke(ReplicationValve.java:346)\n*** org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)\n***\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)\n*** org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)\n*** org.apache.coyote.ajp.AjpAprProcessor.process(AjpAprProcessor.java:425)\n***\norg.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler.process(AjpAprProtocol.java:452)\n*** org.apache.tomcat.util.net.AprEndpoint$Worker.run(AprEndpoint.java:1285)\n*** java.lang.Thread.run(Thread.java:595)\n\nLooking at the source of TransformSupport, I see the offending method is:\n\n   public void addParameter(String name, Object value) {\n       t.setParameter(name, value);\n   }\n\nimplying that instance variable 't' (of type\njavax.xml.transform.Transformer) is set to null - which suggests some\nkind of weird bug where it is either overwritten or not initialised\nproperly.\n\nI'm a bit stuck as I can't reproduce this myself; it seems to be\noccurring at random several times a day on my production site.\n\nI had thought it was a concurrency issue and have tried wrapping the\ncall to <x:transform> in a synchronized block, just in case, but it\nhasn't made any noticeable difference.\n\nThe server information is:\nTomcat 5.5.17\nJVM: Sun 1.5.0_07-b03\nOS: SunOS 5.9\nArch: sparc"}, {"attachment_id": null, "tags": [], "creator": "kschneider@gmail.com", "is_private": false, "count": 1, "id": 109390, "time": "2007-10-16T05:04:27Z", "bug_id": 43632, "creation_time": "2007-10-16T05:04:27Z", "text": "Make sure that ${order} does not evaluate to null. Transformer.setParameter\nshould throw an NPE if the parameter value is null."}, {"count": 2, "tags": [], "bug_id": 43632, "attachment_id": null, "is_private": false, "id": 109391, "time": "2007-10-16T05:36:55Z", "creator": "bobacus@gmail.com", "creation_time": "2007-10-16T05:36:55Z", "text": "(In reply to comment #1)\n> Make sure that ${order} does not evaluate to null. Transformer.setParameter\n> should throw an NPE if the parameter value is null.\n\nYes, but the first entry in the stack trace is TransformSupport.addParameter, so\ndoesn't that imply that t is null?\n\nAnyway I will add a check of ${order} to eliminate the possibility that it\nevaluates to null.\n\nRob"}, {"attachment_id": null, "tags": [], "creator": "bobacus@gmail.com", "is_private": false, "count": 3, "id": 109396, "time": "2007-10-16T08:24:18Z", "bug_id": 43632, "creation_time": "2007-10-16T08:24:18Z", "text": "OK, the same NPE has occurred, and this time ${order} is definitely not null\n\n<% if (pageContext.findAttribute(\"order\")==null)\n\tthrow new Exception(\"order==null\"); \n%><x:transform doc=\"${onlineevents_archiveDoc}\" xslt=\"${onlineevents_archiveXSLT}\">\n<x:param name=\"order\" value=\"${order}\" />\n</x:transform>\n\nRob"}, {"count": 4, "tags": [], "bug_id": 43632, "attachment_id": null, "is_private": false, "id": 109399, "time": "2007-10-16T10:28:01Z", "creator": "kschneider@gmail.com", "creation_time": "2007-10-16T10:28:01Z", "text": "(In reply to comment #3)\nYeah, I skimmed too quickly. Actually, it looks like ParamSupport.doEndTag would\nnever allow it to be null anyway. I'm having a hard time seeing how the\nTransformer in TransformSupport could be null though. It's set every time via\ndoStartTag and TransformFactory.newTransformer(Source) is supposed to guarantee\na non-null return value..."}, {"count": 5, "attachment_id": null, "bug_id": 43632, "text": "Feels like a Sherlock Holmes mystery :)\n\nNothing unsets t, so either it's being set to null, or it's not being set in the\nfirst place. The latter either because doStartTag is not being called, or\nbecause doStartTag is not reaching the 't = ...' line. \n\n1) TransformerFactory breaking contract and returning null.\n2) Container breaking contract and not calling doStartTag.\n3) doStartTag throwing an Exception which is quietly caught. \n\nAs nothing unsets t, I don't think concurrency would be at play, unless it's a\nbug relating to (2) above. \n\nI can't see anything in the Tomcat release notes post 5.5.17 about doStartTag.\n\nOnly suggestion I have is to put tracing into the JSTL classes and try to hunt\ndown which it seems to be. ", "id": 109415, "time": "2007-10-16T22:59:54Z", "creator": "bayard@apache.org", "creation_time": "2007-10-16T22:59:54Z", "tags": [], "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 43632, "text": "I faced exactly the same issue... then going to previous JSTL releases, and running the same x:transform, with the same XML & XSL files. The exception was different:\n\njavax.xml.transform.TransformerConfigurationException: Impossible de compiler la feuille de style\n\tat com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTemplates(Unknown Source)\n\tat com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl.newTransformer(Unknown Source)\n....\n\n\nThe pb was the malformed XSL file... there was a BOM responsible for bad SAX parsing, after a file edition. What I am sure is 't' can be null if SAX failed to parse the XSL file (don't know if it is the same behavior with bad XML doc parsing), because when I updated my jstl.jar and standard.jar to last 1.1 release afterwards, the previous exception \n\njava.lang.NullPointerException\norg.apache.taglibs.standard.tag.common.xml.TransformSupport.addParameter(TransformSupport.java:221).\n\nwent back.\n\n\nI hope it helps,\n\n\nNicolas", "id": 120996, "time": "2008-09-25T12:11:31Z", "creator": "nicolas.flinois@gmail.com", "creation_time": "2008-09-25T12:11:31Z", "tags": [], "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 43632, "text": "Resolving as I can't see how the code could be NPE'ing there and we needed more info to get any further.", "id": 132453, "time": "2009-11-29T19:53:55Z", "creator": "bayard@apache.org", "creation_time": "2009-11-29T19:53:55Z", "tags": [], "is_private": false}]