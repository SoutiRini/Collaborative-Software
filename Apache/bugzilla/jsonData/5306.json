[{"text": "Here is the programm pattern wich I ran on the console\n\njava -cp jakarta-regexp-1.2.jar org.apache.regexp.recompile \"test\" \"this \n\\\"([^\\\"]*?)\\\" should be the same as \\\"([^\\\"]*?)\\\"\"\n\nthe output was:\n\n// Pre-compiled regular expression 'this \"([\"]*?)\" should be the same as \"([^\"]\n*?)\"'\n\n\nAs you can see in the first part of the pattern the '^' is missing.", "tags": [], "creator": "breidert@sitewaerts.de", "is_private": false, "count": 0, "id": 8672, "time": "2001-12-06T09:12:12Z", "bug_id": 5306, "creation_time": "2001-12-06T09:12:12Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "vgritsenko@apache.org", "attachment_id": null, "id": 43381, "time": "2003-08-27T14:44:41Z", "bug_id": 5306, "creation_time": "2003-08-27T14:44:41Z", "is_private": false, "text": "That's a problem with passing command line arguments into the recompile, and not\nwith recompile itself. Please note how this one works, correctly:\n\njava -cp jakarta-regexp-1.3-dev.jar org.apache.regexp.recompile \"test\" \"a\n([^\\\"]*?) \\\" b ([^\\\"]*?)\"\n\nOutput:\n// Pre-compiled regular expression 'a ([^\"]*?) \" b ([^\"]*?)'\n\nBut, as soon as your remove \\\" before b, the output changes to:\n// Pre-compiled regular expression 'a ([^\"]*?) b ([\"]*?)'\n\nI'll mark it as WONTFIX as there is nothing to fix with recompile itself.\n"}, {"count": 2, "tags": [], "creator": "vgritsenko@apache.org", "attachment_id": null, "id": 49478, "time": "2003-12-20T18:07:24Z", "bug_id": 5306, "creation_time": "2003-12-20T18:07:24Z", "is_private": false, "text": "Closed"}]