[{"count": 0, "tags": [], "bug_id": 32141, "attachment_id": null, "is_private": false, "id": 66653, "time": "2004-11-10T04:22:10Z", "creator": "ken@powerticker.com", "creation_time": "2004-11-10T04:22:10Z", "text": "env:\nOS: Win2k Server SP2\nWEB SERVER: Apache 1.3.31\nSERVLET CONTAINER: Jakarta-tomcat 5.0.27, JK1.2, OPENSSL 0.9.7\nVM: J2sdk1.4.2, startup parameter\n= -Xmx256M -Xms256M -XX:NewSize=64M -XX:MaxNewSize=64M\n\nTest case:\n- Optimizeit Profiler 6.0\n- serve only 1 jsp with no content (no html code / script)\n- step: Startup apache and tomcat -> make 500 requests -> force GC -> mark # of \ninstance in optimizeit client and take snapshot-> make 5000 requests -> force \nGC -> compare heap content with saved Snapshot(see screen capture)\n- no memory leak for same test with JMX Request-Registration disabled\n\nscreen shot:\n\nnews://news.3home.net/4190c731@news.3home.net\nnews://news.3home.net/4190c73d$1@news.3home.net\nnews://news.3home.net/4190c745$4@news.3home.net"}, {"count": 1, "tags": [], "text": "What version of JK?", "is_private": false, "id": 67268, "creator": "yoavs@computer.org", "time": "2004-11-19T21:29:02Z", "bug_id": 32141, "creation_time": "2004-11-19T21:29:02Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "ken@powerticker.com", "attachment_id": null, "id": 67318, "time": "2004-11-22T07:26:28Z", "bug_id": 32141, "creation_time": "2004-11-22T07:26:28Z", "is_private": false, "text": "1.2.6"}, {"count": 3, "tags": [], "bug_id": 32141, "attachment_id": null, "text": "Does 1.2.7 (newly released) fix it?", "id": 67641, "time": "2004-11-30T18:28:05Z", "creator": "yoavs@computer.org", "creation_time": "2004-11-30T18:28:05Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 32141, "is_private": false, "id": 67900, "time": "2004-12-03T19:59:24Z", "creator": "yoavs@computer.org", "creation_time": "2004-12-03T19:59:24Z", "tags": [], "text": "Is this actually a leak, or just more memory used when you enable request \nregistration?  I think it's the latter, which is expected and normal."}, {"count": 5, "tags": [], "text": "The JMX Request-Registration is enabled by default. I need to restart my tomcat \nevery week before out-of-memory error.\n\nI re-test my case again and set the heap size to 64M. I did not stick with \nOptimizeit this time and I got an out-of-memory error after one night of non-\nstopping requests.", "attachment_id": null, "id": 67968, "creator": "ken@powerticker.com", "time": "2004-12-06T04:25:02Z", "bug_id": 32141, "creation_time": "2004-12-06T04:25:02Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 32141, "attachment_id": null, "text": "The problem is that I can't identify who could be holding a reference to the \nObjectNames.  The screen shots don't show a corresponding number of \nRequestInfos, so it seems that request unregistration is working, and there \nalso aren't a corresponding number of MsgContexts, which is the only other \nobject that should have a reference.\n\nIf you can provide more research into the leak, it would be very appreciated.\n", "id": 67970, "time": "2004-12-06T07:22:39Z", "creator": "william.barker@wilshire.com", "creation_time": "2004-12-06T07:22:39Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 32141, "attachment_id": null, "id": 67973, "time": "2004-12-06T09:44:07Z", "creator": "ken@powerticker.com", "creation_time": "2004-12-06T09:44:07Z", "is_private": false, "text": "I can give you the snap-shot of my profiler. The snap-shot file must be opened \nby Optimizeit Profiler 6.0 Ent. edition, build 031104.\n\nIn case you cannot open the snp file, I can try to produce more screen shot or \ngive you the test case for you to repeat the problem.\n\nOne more thing, my test case use exactly the same config files \n(apache/tomcat/jk) which are copied from my production machine. May be the \nproblem can only be produced by my config file. My production have two tomcats \non same machine, may be that is the cause."}, {"count": 8, "attachment_id": null, "bug_id": 32141, "is_private": false, "id": 70032, "time": "2005-01-24T17:14:19Z", "creator": "vgritsenko@apache.org", "creation_time": "2005-01-24T17:14:19Z", "tags": [], "text": "Memory leak happens in javax.management.ObjectNames which has private static map\nm_cache caching all ObjectNames objects. This map never cleaned out, resulting\nin memory leak. Probably this is fixed in later jmx versions. See:\n\n  Bug: Metadata cache memory leak as never flushed\n  http://www.jcp.org/aboutJava/communityprocess/maintenance/jsr003/final_list.html"}, {"count": 9, "tags": [], "bug_id": 32141, "attachment_id": null, "id": 70043, "time": "2005-01-24T19:39:39Z", "creator": "vgritsenko@apache.org", "creation_time": "2005-01-24T19:39:39Z", "is_private": false, "text": "mx4j has ObjectNames cache rewritten since 2.0 release."}, {"count": 10, "tags": [], "text": "Updated summary.\n\nDoes somebody know, what is the sense in registering each request with JMX? HTTP\nconnector does not do it, so I'd suggest removing this from Jk connector as\nwell, if possible - and it will make it perform a bit faster, too.\n\nRequest registration was introduced with Tomcat 5.0.26:\nhttp://cvs.apache.org/viewcvs.cgi/jakarta-tomcat-connectors/jk/java/org/apache/jk/common/ChannelSocket.java?r1=1.45&r2=1.46&diff_format=h\nand is present in all versions since 5.0.26.", "attachment_id": null, "id": 70099, "creator": "vgritsenko@apache.org", "time": "2005-01-26T16:07:07Z", "bug_id": 32141, "creation_time": "2005-01-26T16:07:07Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 32141, "attachment_id": null, "is_private": false, "id": 70103, "time": "2005-01-26T16:17:07Z", "creator": "vgritsenko@apache.org", "creation_time": "2005-01-26T16:17:07Z", "text": "Changed Component - \"Connector:AJP\" seems like a better match, as the bug is not\nin native code."}, {"count": 12, "tags": [], "text": "There at least used to be a way to turn this off in jk2.properties...\n\nAnyone remember what this was?\n\nIt would seem like turning this off makes sense unless you're using Java 1.5 or\nanother fixed JMX implementation.", "attachment_id": null, "id": 70105, "creator": "jessh@ptc.com", "time": "2005-01-26T16:24:27Z", "bug_id": 32141, "creation_time": "2005-01-26T16:24:27Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 32141, "is_private": false, "text": "(In reply to comment #10)\n> Updated summary.\n> Does somebody know, what is the sense in registering each request with JMX? \nHTTP\n> connector does not do it, so I'd suggest removing this from Jk connector as\n> well, if possible - and it will make it perform a bit faster, too.\n> Request registration was introduced with Tomcat 5.0.26:\n\nUrm, request registration goes back at least to 5.0.19, and, yes, the HTTP \nconnector does register all requests.  It's requests just live much longer so \nthe leak isn't as noticable.\n\nThe registration is for use by the /manager/status servlet.  If you don't care \nabout this, then just disable the registration by setting:\n  request.registerRequests=false\nin jk2.properties (for 5.0.x) or:\n  request.registerRequests=\"false\"\nin the <Connector> tag (for 5.5.x).\n", "id": 70117, "time": "2005-01-26T19:43:02Z", "creator": "william.barker@wilshire.com", "creation_time": "2005-01-26T19:43:02Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 32141, "is_private": false, "text": "Well, as I understand it this leak is present in 5.0.30 at least unless one uses\nJava 1.5 and its fixed JMX classes.\n\nIf this is the case, then I'd think that registerRequests should be false by\ndefault unless/until JMX classes containing the fix can be incorporated.", "id": 70120, "time": "2005-01-26T21:04:17Z", "creator": "jessh@ptc.com", "creation_time": "2005-01-26T21:04:17Z", "attachment_id": null}, {"count": 15, "tags": [], "text": "(In reply to comment #13)\n> \n> Urm, request registration goes back at least to 5.0.19, and, yes, the HTTP \n> connector does register all requests.  It's requests just live much longer so \n> the leak isn't as noticable.\n\nWhat is preventing you from upgrading mx4j to, say, version 2.1.1, in Tomcat\n5.0.31 (or which one is coming next in 5.0 line)?", "attachment_id": null, "id": 70184, "creator": "vgritsenko@apache.org", "time": "2005-01-27T17:06:02Z", "bug_id": 32141, "creation_time": "2005-01-27T17:06:02Z", "is_private": false}, {"count": 16, "attachment_id": null, "bug_id": 32141, "is_private": false, "id": 70197, "time": "2005-01-27T18:51:02Z", "creator": "jessh@ptc.com", "creation_time": "2005-01-27T18:51:02Z", "tags": [], "text": "That sounds like a good alternative even for those (like me) redistributing\nTomcat 5.0.30 -- assuming that suffices.\n\nAnyone have any feedback on this?"}, {"count": 17, "tags": [], "bug_id": 32141, "attachment_id": null, "id": 70201, "time": "2005-01-27T20:02:20Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2005-01-27T20:02:20Z", "is_private": false, "text": "We already use 2.0.1 with 5.0(.27). Works smoothly as far as I can judge.\n\nDon't know about memory leak there, because we have set\nrequest.registerRequests=false.\n\n"}, {"count": 18, "tags": [], "text": "I have Tomcat 5.0.28 with mod_jk for Apache2.0.49.\n\nI found this problem too.\nIf I press constantly the \"F5\" (refresh) key in the IE6 on the servlet with\ndatabase connection (PostgreSQL), the memory is decreassed and back only on\nTomcat restart.\n\nI put these settings into jk2.properties:\nrequest.registerRequests=false -as suggested in a mailing list.\n\nThe situation is same: a memory leak.\n\nCan you help me, what to make in my config files?\nI have SLES 9 with default packages of Apache2, and mod_jk. The mod_jk2 doesn't\nwork, because some compilling errors in the original packages.", "attachment_id": null, "id": 71617, "creator": "yoursoft@freemail.hu", "time": "2005-02-28T17:02:53Z", "bug_id": 32141, "creation_time": "2005-02-28T17:02:53Z", "is_private": false}, {"count": 19, "tags": [], "bug_id": 32141, "attachment_id": null, "text": "For those who can't wait for this to be fixed in 5.0.x, look at this URL for instructions on replacing jmx.jar\n\nhttps://sourceforge.net/tracker/?func=detail&atid=450647&aid=1068766&group_id=47745\n", "id": 74649, "time": "2005-05-10T05:17:16Z", "creator": "tom@squeat.com", "creation_time": "2005-05-10T05:17:16Z", "is_private": false}, {"count": 20, "tags": [], "text": "Recent Tomcat versions have used the updated JMX jars so this leak has been gone\nfor a while.  The workaround of disabling the request registration is also\navailable, documented, and effective.\n\nWe don't know if/when the next 5.0 release will happen.", "attachment_id": null, "id": 81225, "creator": "yoavs@computer.org", "time": "2005-10-17T01:22:24Z", "bug_id": 32141, "creation_time": "2005-10-17T01:22:24Z", "is_private": false}]