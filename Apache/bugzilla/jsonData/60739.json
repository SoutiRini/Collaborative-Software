[{"count": 0, "tags": [], "creator": "david@davidfavor.com", "attachment_id": null, "id": 197073, "time": "2017-02-16T15:15:34Z", "bug_id": 60739, "creation_time": "2017-02-16T15:15:34Z", "is_private": false, "text": "Changes in SSLProtocol seem to be ignored.\n\nThis can be observed in all SSL testers I've used.\n\nThe testssl script provides an easy way to check this, without having to wait for minutes (like SSLLabs) for output.\n\nProblem can be shown via...\n\ntestssl --protocols https://davidfavor.com/\n\nEnvironment - Apache-4.2.5 + OpenSSL 1.0.2k + Ubuntu Yakkety.\n\nMy goal == disable TLS 1.0 for some of my hosting clients who have PCI requirements for this level of TLS to be disabled.\n\nNone of these permutations work. In fact, I can't find any SSLProtocol setting which changes protocols at all. In all cases SSL2 + SSL3 are disabled + all TLS versions are enabled.\n\nSettings tried, that fail to disable TLSv1...\n\n# SSLProtocol All -SSLv2 -SSLv3 -TLSv1 -TLSv1.1\n# SSLProtocol -All TLSv1.2\n# SSLProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1\n\n# SSLProtocol all -SSLv2 -SSLv3 -TLSv1\n# SSLProtocol -all +TLSv1.2\n# SSLProtocol TLSv1.2 -TLSv1\n# SSLProtocol TLSv1.2\n# SLProtocol -All +TLSv1.1 +TLSv1.2\n\nSSLProtocol all -SSLv2 -SSLv3 -TLSv1"}, {"count": 1, "tags": [], "creator": "david@davidfavor.com", "attachment_id": null, "id": 197074, "time": "2017-02-16T15:41:44Z", "bug_id": 60739, "creation_time": "2017-02-16T15:41:44Z", "is_private": false, "text": "Setting SSLProtocols to -all produces expected behavior, which is an error about no protocols.\n\nThis suggests the problem relates to setting TLSv1.2, which incorrectly seems to also enable TLSv1.1 + TLSv1.0 so maybe this is the real problem.\n\nThe following also fail disabling TLSv1.\n\n# SSLProtocol all -SSLv2 -SSLv3 +TLSv1.2 -TLSv1\n# SSLProtocol -all +TLSv1.2 -TLSv1"}, {"count": 2, "tags": [], "creator": "david@davidfavor.com", "attachment_id": null, "id": 197075, "time": "2017-02-16T15:43:48Z", "bug_id": 60739, "creation_time": "2017-02-16T15:43:48Z", "is_private": false, "text": "The following also works oddly.\n\nSSLProtocol -all +TLSv1\n\nThis enables TLS 1.0 + 1.1 + 1.2 rather than just 1.0 as expected."}, {"count": 3, "tags": [], "text": "This seem to have changed somewhere between 2.4.18 + 2.4.23 as setting SSLProtocol use to be honored.", "is_private": false, "bug_id": 60739, "id": 197283, "time": "2017-02-26T15:56:08Z", "creator": "david@davidfavor.com", "creation_time": "2017-02-26T15:56:08Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "https://bugs.launchpad.net/ubuntu/+source/apache2/+bug/1665151 - related Ubuntu bug ticket.", "is_private": false, "bug_id": 60739, "id": 197302, "time": "2017-02-27T15:04:56Z", "creator": "david@davidfavor.com", "creation_time": "2017-02-27T15:04:56Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 60739, "attachment_id": null, "id": 197663, "time": "2017-03-14T17:23:49Z", "creator": "apache-bugzilla@michael-kaufmann.ch", "creation_time": "2017-03-14T17:23:49Z", "is_private": false, "text": "I have tested this with Apache 2.4.25 and OpenSSL 1.0.2k, with global settings and also with virtual host settings.\n\nIt works for me. For example, with \"SSLProtocol -All +TLSv1.1 +TLSv1.2\", TLS 1.0 is not possible, TLS 1.1 and TLS 1.2 are possible.\n\nCould you please provide a minimal, stand-alone Apache configuration that shows the problem?"}, {"count": 6, "attachment_id": null, "bug_id": 60739, "is_private": false, "id": 197709, "time": "2017-03-16T11:36:54Z", "creator": "david@davidfavor.com", "creation_time": "2017-03-16T11:36:54Z", "tags": [], "text": "The problem seems to be an interaction between the Cipher List + SSLProtocol.\n\nDepending on setting of Cipher List SSLProtocol seems to work or be ignored.\n\nThese settings disable TLSv1.0\n\n# support old Android phones\nSSLProtocol All -SSLv2 -SSLv3 -TLSv1\n\n# Force using custom cipher list\nSSLHonorCipherOrder on\n\nDefine sslCiphers -ALL:!ADH:!aNULL:!EXP:!EXPORT40:!EXPORT56:!3DES:!eNULL:!NULL:!RC4:!DES:!MD5:!LOW\nDefine sslCiphers ${sslCiphers}:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA\nSSLCipherSuite ${sslCiphers}\n\nOther sslCiphers settings cause SSLProtocol to be ignored.\n\nI think the fix is either to have SSLProtocol cause a prune of sslCiphers settings or if there's a conflict between SSLProtocol + sslCiphers then have some sort of warning about the conflict.\n\nAll in all, the problem is far more complex than it appears on the surface.\n\nFor now, I'll resolve my situation by using the above settings."}, {"count": 7, "tags": [], "bug_id": 60739, "attachment_id": null, "id": 197710, "time": "2017-03-16T12:48:42Z", "creator": "covener@gmail.com", "creation_time": "2017-03-16T12:48:42Z", "is_private": false, "text": "(In reply to David Favor from comment #6)\n> The problem seems to be an interaction between the Cipher List + SSLProtocol.\n> \n> Depending on setting of Cipher List SSLProtocol seems to work or be ignored.\n> \n> These settings disable TLSv1.0\n> \n> # support old Android phones\n> SSLProtocol All -SSLv2 -SSLv3 -TLSv1\n> \n> # Force using custom cipher list\n> SSLHonorCipherOrder on\n> \n> Define sslCiphers\n> -ALL:!ADH:!aNULL:!EXP:!EXPORT40:!EXPORT56:!3DES:!eNULL:!NULL:!RC4:!DES:!MD5:!\n> LOW\n> Define sslCiphers\n> ${sslCiphers}:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-\n> AES256-SHA:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-\n> SHA:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA\n> SSLCipherSuite ${sslCiphers}\n> \n> Other sslCiphers settings cause SSLProtocol to be ignored.\n> \n\nCan you share a specific pair with unexpected results?"}, {"count": 8, "tags": [], "bug_id": 60739, "attachment_id": null, "id": 198134, "time": "2017-04-03T16:22:30Z", "creator": "martin@xorax.info", "creation_time": "2017-04-03T16:22:30Z", "is_private": false, "text": "I have similar issue. Whatever I set in SSLProtocol it's ignored.\n\napache2ctl -v\nServer version: Apache/2.4.10 (Debian)\nServer built:   Feb 24 2017 18:40:28\n\nopenssl version\nOpenSSL 1.0.1t  3 May 2016\n\nIf I use the settings provided by David Favor :\n\nSSLProtocol All -SSLv2 -SSLv3 -TLSv1\nSSLCipherSuite ALL:!ADH:!aNULL:!EXP:!EXPORT40:!EXPORT56:!3DES:!eNULL:!NULL:!RC4:!DES:!MD5:!LOW:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA\n\nI got only TLSv1.2 enabled, not TLSv1.1.\n\nI could find a way to activate TLSv1.1, with or without TLSv1. All the time, only TLSv1.2 (I tried a lot of different ciphers suite).\n\nNote that if I try with the openssl s_server command, all is working as expected."}, {"count": 9, "tags": [], "creator": "martin@xorax.info", "attachment_id": null, "text": "Fix:\n> I CANNOT find a way to activate TLSv1.1, with or without TLSv1. All the time, only TLSv1.2 (I tried a lot of different ciphers suite).", "id": 198136, "time": "2017-04-03T16:39:18Z", "bug_id": 60739, "creation_time": "2017-04-03T16:39:18Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 60739, "attachment_id": null, "id": 198137, "time": "2017-04-03T16:52:57Z", "creator": "david@davidfavor.com", "creation_time": "2017-04-03T16:52:57Z", "is_private": false, "text": "Per my other comment above, it appears SSLProtocol is strongly effected by SSLCipherSuite list.\n\nThis means SSLProtocol may or may not have any effect, based on SSLCipherSuite list.\n\nLikely this is a complex fix, which might be accomplished by...\n\n1) process SSLCipherSuite\n\n2) then removed any SSLCipherSuite ciphers based on SSLProtocol setting\n\nSimple to describe. Complex to implement.\n\nAnother solution might be to just deprecate the SSLProtocol setting.\n\nThis would mean SSLCipherSuite determines protocol selection, which appears to be what's actually occurring.\n\nThis would involve, removing all code related to SSLProtocol processing + updating documentation for SSLCipherSuite saying, protocols set derive from SSLCipherSuite list provided."}, {"count": 11, "attachment_id": null, "bug_id": 60739, "is_private": false, "id": 198138, "time": "2017-04-03T17:06:44Z", "creator": "martin@xorax.info", "creation_time": "2017-04-03T17:06:44Z", "tags": [], "text": "The SSLCipherSuite seems has no effect on the protocol my side.\nWhatever I put :\n\nSSLCipherSuite ALL:!ADH:!aNULL:!EXP:!EXPORT40:!EXPORT56:!3DES:!eNULL:!NULL:!RC4:!DES:!MD5\nor\nSSLCipherSuite ALL\nor\nSSLCipherSuite ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:DES-CBC3-SHA:HIGH:SEED:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!RSAPSK:!aDH:!aECDH:!EDH-DSS-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA:!SRP\n\nI got no changes in protocol, only TLSv1.2 is enabled."}, {"count": 12, "tags": [], "creator": "jchampion@apache.org", "attachment_id": null, "id": 198139, "time": "2017-04-03T18:46:54Z", "bug_id": 60739, "creation_time": "2017-04-03T18:46:54Z", "is_private": false, "text": "I'm also unable to reproduce. httpd 2.4.25, OpenSSL 1.0.2g -- the protocols are honored correctly with the example ciphersuite lines that have been given in this bug.\n\nFor those who can repro: can you please provide the exact set of configuration directives that reproduces the issue?"}, {"count": 13, "tags": [], "creator": "martin@xorax.info", "attachment_id": null, "text": "Well, my bad... After trying to reproduce it on a dockerized version, I found I add a false config hidden.....\n\nI confirm that I can use TLSv1.1 as well as TLSv1.2 with this simple config :\nSSLProtocol all -SSLv3 -TLSv1\nSSLCipherSuite HIGH:!aNULL\n\nServer version: Apache/2.4.10 (Debian)\nServer built:   Feb 24 2017 18:40:28\nOpenSSL 1.0.1t  3 May 2016\n\n@David Favor : I'm not able to reproduce the issue (having TLS activated depends of ciphers). If you have a ciphers list with which you seen some protocols disabled, share us and I will try.", "id": 198159, "time": "2017-04-04T17:35:31Z", "bug_id": 60739, "creation_time": "2017-04-04T17:35:31Z", "is_private": false}]