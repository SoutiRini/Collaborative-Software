[{"count": 0, "tags": [], "bug_id": 51332, "attachment_id": 27123, "is_private": false, "id": 146915, "time": "2011-06-07T08:51:56Z", "creator": "sammychuhf@gmail.com", "creation_time": "2011-06-07T08:51:56Z", "text": "Created attachment 27123\nThe problematic Excel file\n\nWhen HSSFPatriarch store more than 1023 drawing objects with list validation enabled, POI will generate a problematic excel (xls) which will move the (total drawing objects % 1024) th drawing object to the validation cell when click on the validation enabled cell.\n\nHere is the example code to produce this bug:\n==========================================================================\nimport java.awt.image.BufferedImage;\nimport java.io.ByteArrayOutputStream;\nimport java.io.FileOutputStream;\nimport java.io.InputStream;\nimport java.io.OutputStream;\n\nimport javax.imageio.ImageIO;\n\nimport org.apache.poi.hssf.usermodel.DVConstraint;\nimport org.apache.poi.hssf.usermodel.HSSFClientAnchor;\nimport org.apache.poi.hssf.usermodel.HSSFDataValidation;\nimport org.apache.poi.hssf.usermodel.HSSFPatriarch;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.ss.usermodel.ClientAnchor;\nimport org.apache.poi.ss.util.CellRangeAddressList;\n\npublic final class TestCase {\n    public static void main (String[] args) {\n        HSSFWorkbook wb = null;\n        try {\n            wb = new HSSFWorkbook();\n            HSSFSheet sheet = wb.createSheet();\n            InputStream iconFileStream = TestCase.class.getResourceAsStream(\"icon.png\");\n            // Convert to PNG image format in case the image is not in PNG\n            BufferedImage iconImage = ImageIO.read(iconFileStream);\n            ByteArrayOutputStream iconByteStream = new ByteArrayOutputStream();\n            ImageIO.write(iconImage, \"PNG\", iconByteStream);\n            HSSFPatriarch patriarch = sheet.createDrawingPatriarch();\n\n            // Use the same image for the demo\n            int imgIndex = wb.addPicture(iconByteStream.toByteArray(), HSSFWorkbook.PICTURE_TYPE_PNG);\n            for (int i = 0; i < 1023; ++i) {\n                HSSFClientAnchor anchor = new HSSFClientAnchor(0, 0, 0, 0, (short) 1, i, (short) 2, i + 1);\n                anchor.setAnchorType(ClientAnchor.MOVE_DONT_RESIZE);\n                patriarch.createPicture(anchor, imgIndex);\n            }\n            // The 1024+ th image\n            for (int i = 0; i < 1; ++i) {\n                HSSFClientAnchor anchor = new HSSFClientAnchor(0, 0, 0, 0, (short) 3, i, (short) 4, i + 1);\n                anchor.setAnchorType(ClientAnchor.MOVE_DONT_RESIZE);\n                patriarch.createPicture(anchor, imgIndex);\n            }\n            // Create validation for demo the bug\n            DVConstraint listValidatorConstraint = DVConstraint.createExplicitListConstraint(new String [] { \"Value 1\" });\n            HSSFDataValidation listValidator = new HSSFDataValidation(new CellRangeAddressList(0, 65535, 2, 2), listValidatorConstraint);\n            sheet.addValidationData(listValidator);\n            OutputStream fos = new FileOutputStream(\"problematic.xls\");\n            wb.write(fos);\n            fos.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n==========================================================================\n\nWhen you click on the column C of the generated Excel file, the picture in B1 will move to the current position and the validation does not work."}, {"count": 1, "tags": [], "text": "What does excel do if you generate a file with that many drawings in it? Does it store them all in the same record structure, or does it split them? Does it use different structures entirely?", "attachment_id": null, "id": 146917, "creator": "apache@gagravarr.org", "time": "2011-06-07T08:58:06Z", "bug_id": 51332, "creation_time": "2011-06-07T08:58:06Z", "is_private": false}, {"count": 2, "tags": [], "text": "In our project, we generate those Excel with different images, comments and validation list for selecting input. When the drawing exceeds the 1023 limit, the validation list become problematic.\n\nSorry, I don't know what you mean about \"store them all in the same record structure\".\n\nThanks for your quick reply.", "is_private": false, "id": 146918, "creator": "sammychuhf@gmail.com", "time": "2011-06-07T09:37:56Z", "bug_id": 51332, "creation_time": "2011-06-07T09:37:56Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 51332, "attachment_id": null, "id": 146919, "time": "2011-06-07T09:43:59Z", "creator": "sammychuhf@gmail.com", "creation_time": "2011-06-07T09:43:59Z", "is_private": false, "text": "The above code is just for illustrate the bug."}, {"count": 4, "attachment_id": null, "creator": "apache@gagravarr.org", "is_private": false, "id": 146921, "time": "2011-06-07T11:26:57Z", "bug_id": 51332, "creation_time": "2011-06-07T11:26:57Z", "tags": [], "text": "First up we need a file generated by excel with at least the problem number of images. Then someone needs to figure out what excel does differently, be it multiple records, different structures etc."}, {"count": 5, "tags": [], "bug_id": 51332, "attachment_id": 27128, "id": 146946, "time": "2011-06-08T03:07:03Z", "creator": "sammychuhf@gmail.com", "creation_time": "2011-06-08T03:07:03Z", "is_private": false, "text": "Created attachment 27128\nThe reference Excel file\n\nHi, I just generated a similar Excel file using JExcelApi and adding list validation in Excel 2003 SP3 (Since JExcelApi does not support this feature).\nHope this can help to figure out the problem."}, {"count": 6, "tags": [], "bug_id": 51332, "attachment_id": null, "text": "Fixed in r1138465. \n\nI was able to reproduce the problem in Excel 2003, but not in Excel 2010 - the latest version of Excel seems to be more forgiving to flaws in input files.\n\nIt is an old bug, I think we have since POI-3.0 or so. The problem was in how POI generated internal IDs for the generated shapes. The bug can be reproduced with any types of shapes, i.e. if you replace Picture with Textbox you will have the same issue.\n\nEach shape in Excel must have a unique low-level id. The problem is that Excel uses several different sequences of IDs to handle drawing objects - some start with 1024, others with 1, etc.  POI did not make any differences and used the same id for all. It worked well for most cases except when the number of shapes exceeded a certain limit.\n\nRegards,\nYegor", "id": 147361, "time": "2011-06-22T13:50:25Z", "creator": "yegor@dinom.ru", "creation_time": "2011-06-22T13:50:25Z", "is_private": false}]