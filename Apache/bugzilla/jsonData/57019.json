[{"count": 0, "tags": [], "bug_id": 57019, "attachment_id": 32055, "id": 178104, "time": "2014-09-25T08:06:59Z", "creator": "misc@fctwente.net", "creation_time": "2014-09-25T08:06:59Z", "is_private": false, "text": "Created attachment 32055\nSample application reproducing the error\n\nWe have a webapplication that retrieves templates from a database. On a page request a template is fetched from the database, written to the filesystem as JSP and the request is forwarded to the JSP. This has worked without problems on older versions of Tomcat, but since Tomcat 8 this results in the following exception:\n\nSEVERE: Servlet.service() for servlet [test.TestServlet] in context with path [/DynamicJSPTester] threw exception [File &quot;/1411630997360.jsp&quot; not found] with root cause\njavax.servlet.ServletException: File &quot;/1411630997360.jsp&quot; not found\n\tat org.apache.jasper.servlet.JspServlet.handleMissingResource(JspServlet.java:413)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:380)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:335)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:725)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:721)\n\tat org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:584)\n\tat org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:523)\n\tat test.TestServlet.doGet(TestServlet.java:42)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:618)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:725)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:291)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:505)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)\n\tat org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:610)\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:534)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1081)\n\tat org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:658)\n\tat org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:222)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1566)\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1523)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n\tat java.lang.Thread.run(Thread.java:745)\n\nIt seems to have something to do with a Cache, as this is the stack that tries to retrieve the resource:\n\nCache.getResource(String, boolean) line: 62\t\nStandardRoot.getResource(String, boolean, boolean) line: 216\t\nStandardRoot.getResource(String) line: 206\t\nApplicationContext.getResource(String) line: 533\t\nApplicationContextFacade.getResource(String) line: 199\t\nJspServlet.serviceJspFile(HttpServletRequest, HttpServletResponse, String, boolean) line: 379\t\nJspServlet.service(HttpServletRequest, HttpServletResponse) line: 335\t\nJspServlet(HttpServlet).service(ServletRequest, ServletResponse) line: 725\t\nApplicationFilterChain.internalDoFilter(ServletRequest, ServletResponse) line: 291\t\nApplicationFilterChain.doFilter(ServletRequest, ServletResponse) line: 206\t\nApplicationDispatcher.invoke(ServletRequest, ServletResponse, ApplicationDispatcher$State) line: 721\t\nApplicationDispatcher.doInclude(ServletRequest, ServletResponse) line: 584\t\nApplicationDispatcher.include(ServletRequest, ServletResponse) line: 523\t\nTestServlet.doGet(HttpServletRequest, HttpServletResponse) line: 42\t\n\nEnvironment:\n\nApache Tomcat/8.0.12\nConnector: http-nio-8082\nJava(TM) SE Runtime Environment (build 1.8.0_20-b26)\nJava HotSpot(TM) 64-Bit Server VM (build 25.20-b23, mixed mode)\nMicrosoft Windows [Version 6.3.9600]"}, {"count": 1, "tags": [], "bug_id": 57019, "attachment_id": null, "id": 178105, "creation_time": "2014-09-25T08:16:11Z", "time": "2014-09-25T08:16:11Z", "creator": "misc@fctwente.net", "text": "I also tried the 'cachingAllowed=false' attribute in the context.xml, but that doesn't solve the issue.", "is_private": false}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 178122, "time": "2014-09-25T20:30:20Z", "bug_id": 57019, "creation_time": "2014-09-25T20:30:20Z", "is_private": false, "text": "You are correct that the caching is what is getting in the way. The getRealPath() call you use to construct the path to write to triggers a lookup. The result that the file does not exist is then cached.\n\nDisabling the cache will fix your issue. The problem you are seeing is because you are trying to do this using Tomcat 7 configuration settings rather than Tomcat 8 configuration. You need to read the migration guide:\nhttp://tomcat.apache.org/migration-8.html#Web_application_resources\n\nI also have a couple of suggestions.\n\n1. Leave caching enabled, use getRealPath(\"/\") and the append the file name to the result. That way you get to keep the benefit of the cache.\n\n2. HttpServletRequest.getSession().getServletContext() is longer winded than it needs to be. You could use HttpServletRequest.getServletContext() as of Servlet 3.0 (Tomcat 7)."}, {"count": 3, "tags": [], "bug_id": 57019, "attachment_id": null, "id": 178123, "time": "2014-09-25T20:34:30Z", "creator": "markt@apache.org", "creation_time": "2014-09-25T20:34:30Z", "is_private": false, "text": "One more thing. I forgot to say thanks for the quality of the report and for providing a test case.\n\nThe bug might have been invalid that doesn't change the fact that it was well written, clearly described the problem at hand and came with a test case that was always going to be trivial for a developer to get working. If all bug reports were of this standard, my life would be a lot easier.\n\nAs an aside, some good did come of this. I fixed the problem that was causing &quot; to appear in the error page output."}]