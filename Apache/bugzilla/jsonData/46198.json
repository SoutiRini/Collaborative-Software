[{"count": 0, "tags": [], "bug_id": 46198, "attachment_id": null, "id": 122426, "creation_time": "2008-11-13T07:03:27Z", "time": "2008-11-13T07:03:27Z", "creator": "apache@hm2k.org", "text": "Similar to the \"DOCUMENT_ROOT environment variable set incorrectly with VirtualDocumentRoot\" bug located here: https://issues.apache.org/bugzilla/show_bug.cgi?id=26052\n\nI have found that when using mod_userdir the DOCUMENT_ROOT does not return the document root of the user.\n\nIE:\n\nvisiting url:\n http://example.com/~user/\nDOCUMENT_ROOT returns:\n /var/www/\nit should return:\n /home/user/public_html/\n\nI am on the understanding that we shouldn't rely on DOCUMENT_ROOT, however it seems that other modules do, such as mod_rewrite where it looks in the wrong place for the files.\n\nIE:\n\nRewriteRule ^(.+)$ index.php [L,QSA]\n\nIn url:\n http://example.com/~user/\nIt will be looking in:\n /var/www/\nWith url:\n http://user.example.com/\nIt will be looking in\n /home/user/public_html/\n\nBoth should be looking in the same place.\n\nRewriteBase isn't possible as it is URL-based not filesystem.\n\nThis appears to be a fairly common bug, with no realistic solution.", "is_private": false}, {"count": 1, "tags": [], "creator": "apache@hm2k.org", "text": "I think we can agree that mod_rewrite used under userdir should be looking in the userdir not in the virtualhost DOCUMENT_ROOT.", "id": 122429, "time": "2008-11-13T07:31:02Z", "bug_id": 46198, "creation_time": "2008-11-13T07:31:02Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "covener@gmail.com", "is_private": false, "id": 122432, "time": "2008-11-13T09:27:51Z", "bug_id": 46198, "creation_time": "2008-11-13T09:27:51Z", "tags": [], "text": "You have to use a RewriteBase if you want to rewrite to a relative filename like this. Did you leave it off entirely?"}, {"count": 3, "attachment_id": null, "creator": "apache@hm2k.org", "is_private": false, "id": 122437, "time": "2008-11-13T10:13:27Z", "bug_id": 46198, "creation_time": "2008-11-13T10:13:27Z", "tags": [], "text": "RewriteBase is relative to the URL not to the filesystem so that won't work in all cases.\n\nThe cases are as follows:\nhttp://example.com/\nhttps://secure.example.net/~user/\n\nIn both of these cases the working directory is /home/user/public_html/\n\nhttps://secure.example.net/ has a working directory of /home/secure/public_html/\n\nYou would expect the document root of https://secure.example.net/~user/ to be /home/user/public_html NOT /home/secure/public_html/ which is (in this case) the document root of https://secure.example.net/\n\nmod_userdir should update the document_root to the userdir OR mod_rewrite should use the userdir not the document_root if it exists.\n\nIE:\n\nhttp://example.com/ is DOCUMENT_ROOT=/home/user/public_html/\nhttps://secure.example.net/ is DOCUMENT_ROOT=/home/secure/public_html/\n\nThese are correct.\n\nhttps://secure.example.net/~user/ is DOCUMENT_ROOT=/home/secure/public_html/\nhttps://secure.example.net/~user/ should be DOCUMENT_ROOT=/home/user/public_html/\n\n"}, {"count": 4, "tags": [], "bug_id": 46198, "attachment_id": null, "id": 122441, "creation_time": "2008-11-13T11:17:43Z", "time": "2008-11-13T11:17:43Z", "creator": "covener@gmail.com", "text": "(In reply to comment #3)\n> RewriteBase is relative to the URL not to the filesystem so that won't work in\n> all cases.\n\nThe premise is that it works in all cases that the base URL got you to the correct directory in the first place, because that's how mod_rewrite re-injects the modifications (and ends up back in the same directory).  When you leave the RewriteBase off, and don't use a full filesystem path in your substitution, and you're operating per-directory, you don't end up back in the same spot.\n\n\n\n\n", "is_private": false}, {"count": 5, "tags": [], "bug_id": 46198, "attachment_id": null, "text": "The issue is not with RewriteBase, leaving RewriteBase on or off is not a conditional option, since both URLs point to the same directory the RewriteBase is either on or off in the `.htaccess` for both cases.\n\nIn both cases mod_rewrite should be looking in the working directory rather than the document_root, but it doesn't.\n\nThe reality of the issue is that DOCUMENT_ROOT should be that of the userdir, and if that can't be done, mod_rewrite should be looking in the userdir before it looks in the DOCUMENT_ROOT.\n\n\n(In reply to comment #4)\n> (In reply to comment #3)\n> > RewriteBase is relative to the URL not to the filesystem so that won't work in\n> > all cases.\n> \n> The premise is that it works in all cases that the base URL got you to the\n> correct directory in the first place, because that's how mod_rewrite re-injects\n> the modifications (and ends up back in the same directory).  When you leave the\n> RewriteBase off, and don't use a full filesystem path in your substitution, and\n> you're operating per-directory, you don't end up back in the same spot.\n> \n\n", "id": 122445, "time": "2008-11-13T13:17:55Z", "creator": "apache@hm2k.org", "creation_time": "2008-11-13T13:17:55Z", "is_private": false}, {"count": 6, "attachment_id": null, "creator": "bobsiegen@googlemail.com", "is_private": false, "id": 122740, "time": "2008-11-21T15:45:02Z", "bug_id": 46198, "creation_time": "2008-11-21T15:45:02Z", "tags": [], "text": "(In reply to comment #5)\n> and if that can't be done, mod_rewrite should be looking in the userdir before\n> it looks in the DOCUMENT_ROOT.\n\nI disagree that the Document_root should be set dynamically, since this is not the document_root of that domain, but more or less an alias.\n\nWhere did you place the RewriteRule? Under which path (either .htaccess or <directory...> section?\n\nI assume a per-directory configuration under  /home/user/public_html/\n\nSince your substitution index.php is a local filepath, i.e. it does not start with a leading slash, mod_rewrite will add the directory prefix /home/user/public_html/ which results in /home/user/public_html/index.php. There are now two possible ways, while the 1st one will take precedence.\n\n- mod_rewrite tries to replace the directory-prefix with RewriteBase, the URL-path of /home/user/public_html/ is /~user/, so we need 'RewriteBase /~user/'. Mod_rewrite replaces /home/user/public_html/ with /~user/ and goes with /~user/index.php into the internal redirect\n\n- mod_rewrite tries to substitute the document_root from the directory-prefix. If your URL-path is not related to the filesystem path, this reduction feature will fail.\n\nAs the documentation states \"If your webserver's URLs are not directly related to physical file paths [that is the case if you're using mod_userdir or mod_alias], you will need to use RewriteBase in every .htaccess file where you want to use RewriteRule directives.\"\n\nWhat do you mean by \"It will be looking in:\"? The self reduction process to an URL-path will fail, so your \"URL-path\" is now /home/user/public_html/index.php - the same, if you typed into your browser's location bar http://example.com/home/user/public_html/index.php. And such a request will be mapped to /var/www/home/user/public_html/index.php.\n\nRemember: At the end of th rewriting process, mod_rewrite needs an URL-path, you can either define the path directly in the substitution:\n  RewriteRule ^foo /~user/index.php [L]\nor use the features provided by mod_rewrite to built the URL-path, but one won't work in all cases (as documented).\n\nTherefore I cannot see a bug, that's exactly the case why the directive RewriteBase was developed.\n"}, {"count": 7, "tags": [], "bug_id": 46198, "attachment_id": null, "text": "With the change in r1132494, mod_userdir now sets the new CONTEXT_DOCUMENT_ROOT and CONTEXT_PREFIX variables, which contain the necessary information to correctly rewrite URLs.", "id": 146876, "time": "2011-06-05T21:38:19Z", "creator": "sf@sfritsch.de", "creation_time": "2011-06-05T21:38:19Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 46198, "attachment_id": null, "text": "fixed in 2.4.1", "id": 154210, "time": "2012-02-26T16:50:15Z", "creator": "sf@sfritsch.de", "creation_time": "2012-02-26T16:50:15Z", "is_private": false}]