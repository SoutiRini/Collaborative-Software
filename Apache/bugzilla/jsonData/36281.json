[{"count": 0, "tags": [], "bug_id": 36281, "attachment_id": null, "text": "Apache 1.3.33\nTomcat 5.0.30\nmod_jk 1.2.14\nSolaris 9\n\nHi,\n\nThere seems to be a problem in supporting Failover of a failed Tomcat server on \nSolaris 9 with mod_jk 1.2.14.  When I simulate the failed Tomcat server by \npulling the network cable, the worker will do all the appropriate \nsocket_timeouts and retries, but when that fails, as it should, another worker \nis not chosen, and the failed worker is not put in_error.  Here is a snippet \nfrom the log:\n\n[trace] service::jk_lb_worker.c (551): enter\n[trace] get_most_suitable_worker::jk_lb_worker.c (453): enter\n[debug] get_most_suitable_worker::jk_lb_worker.c (539): found best worker \n(giraffe) using by request method\n[trace] get_most_suitable_worker::jk_lb_worker.c (543): exit\n[debug] service::jk_lb_worker.c (587): service worker=giraffe jvm_route=giraffe\n[trace] ajp_service::jk_ajp_common.c (1630): enter\n[debug] ajp_service::jk_ajp_common.c (1670): processing with 3 retries\n[info]  ajp_service::jk_ajp_common.c (1749): Sending request to tomcat failed,  \nrecoverable operation attempt=1\n[info]  ajp_service::jk_ajp_common.c (1749): Sending request to tomcat failed,  \nrecoverable operation attempt=2\n[info]  ajp_service::jk_ajp_common.c (1749): Sending request to tomcat failed,  \nrecoverable operation attempt=3\n[error] ajp_service::jk_ajp_common.c (1758): Error connecting to tomcat. Tomcat \nis probably not started or is listening on the wrong port. worker=giraffe failed\n[trace] ajp_service::jk_ajp_common.c (1768): exit\n<log ends>\n\nThe ajp_service::jk_ajp_common.c method is called by the \nservice::jk_lb_worker.c method, but there are no more log messages after \najp_service returns.  We should at least see an exit trace log for the service \nmethod.  I put in logging statements in the code, and found the offending lines.\n\nFrom jk_lb_worker.c ln. 603-607:\n\nservice_stat = end->service(end, s, l, &is_service_error);\n/* IT IS ONE OF THESE TWO LINES THAT CAUSES THE THREAD TO DIE OR HANG */\nrec->s->readed += end->rd;\nrec->s->transferred += end->wr;\nend->done(&end, l);\n\nA logging message directly after the end->service method is called is seen, but \none right before the end->done method is called is not.\nIn any case, if I comment out the two lines that update the shared memory, \neverything works as expected.", "id": 78721, "time": "2005-08-19T21:08:37Z", "creator": "chuck_betts@intuit.com", "creation_time": "2005-08-19T21:08:37Z", "is_private": false}, {"count": 1, "attachment_id": 16117, "creator": "chuck_betts@intuit.com", "is_private": false, "id": 78722, "time": "2005-08-19T21:09:18Z", "bug_id": 36281, "creation_time": "2005-08-19T21:09:18Z", "tags": [], "text": "Created attachment 16117\nA full log file showing one failed request"}, {"count": 2, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "text": "I would like to see your workers.properties and the Jk directives in your httpd\nconfiguration.\n\nAlso: Could you please check, if the failing Apache child processes are still\nthere, or if they died? The log chows the PID of the relevant process directly\nbehind the date. If the process is still there, you can use\n\n/usr/proc/bin/pstack PID\n\nto write a thrad dump. That way we can confirm, in which function the hanging\nprocess sits. You could attach the pstack.\n\nIf the process is not there any more, it might have crashed. In case you succeed\nin dumping a core file of the process, you can again use pstack on that core file.\n\nFinally it might be interesting to use truss (or if you are already familiar\nwith it dtrace) to find out, if the error is related to some system call.\nConfigure apache to only use very few children (like startng 2 servers and\nhaving sparemax and min also equals to 2). Start the server via\n\ntruss -f -o some_output_file -w all -r all -v all \\\n/usr/local/apache/bin/apachectl start\n\nand then redo your tests (apache will be a little slow). The file\nsome_output_file contains information about all system calls, about bytes read\nand written, signals received, errnos etc.\n\nTo have a somewhat easier test case: In the log you attached one can see, that\nthe working request for the html produces to image requests going to two apache\nprocesses in parallel which both fail. I ould be a simpler retest to only use\nsingle requests, not something in parallel, e.g. not automatically reloading\nembedded objevcts via the browser.", "id": 78723, "time": "2005-08-19T21:33:06Z", "bug_id": 36281, "creation_time": "2005-08-19T21:33:06Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 36281, "text": "Created attachment 16119\nworkers.properties", "id": 78724, "time": "2005-08-19T22:21:00Z", "creator": "chuck_betts@intuit.com", "creation_time": "2005-08-19T22:21:00Z", "is_private": false, "attachment_id": 16119}, {"count": 4, "tags": [], "bug_id": 36281, "text": "Created attachment 16120\nMod_jk configuration file", "id": 78725, "time": "2005-08-19T22:22:49Z", "creator": "chuck_betts@intuit.com", "creation_time": "2005-08-19T22:22:49Z", "is_private": false, "attachment_id": 16120}, {"text": "The pstack returned nothing, and I confirmed by watching TOP that the process \nis created then dies when the http request is over.\n\nI am having trouble running truss, I'll get back to you with that when I can.", "tags": [], "bug_id": 36281, "attachment_id": null, "count": 5, "id": 78726, "time": "2005-08-19T22:24:29Z", "creator": "chuck_betts@intuit.com", "creation_time": "2005-08-19T22:24:29Z", "is_private": false}, {"count": 6, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 78736, "time": "2005-08-19T23:43:35Z", "bug_id": 36281, "creation_time": "2005-08-19T23:43:35Z", "tags": [], "text": "Config is pretty basic and looks OK.\nThe process dead is strange and I don't see an immediate reason for it.\n\nIt would be good, if you could reproduce it with without parallel requests to\nsimplify the situation.\n\nDid you build apache and mod_jk yourself? Have they been compiled using the same\ncompiler and the same CFLAGS?"}, {"count": 7, "tags": [], "bug_id": 36281, "text": "Sorry for all this.  We were building on a seperate machine using the gcc \ncompiler, because our primary Sun build machine wasnt working at the time.  Now \nit is and I recompiled on it, and everything is hunkey-dorey now.", "id": 78740, "time": "2005-08-20T01:28:26Z", "creator": "chuck_betts@intuit.com", "creation_time": "2005-08-20T01:28:26Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 36281, "attachment_id": null, "text": "FYI:\n\nThe compiler we used was the Forte from Sun, the compiler flag is: \nCFLAGS=\"-mt -fast -xarch=v8plusa -xtarget=ultra2 -xO5 -KPIC\"\nLDFLAGS=\"-L/lib -R/usr/local/lib -R/usr/lib -R/lib -lpthread\"\n\n\n", "id": 83467, "time": "2005-12-09T02:14:27Z", "creator": "chuck_betts@intuit.com", "creation_time": "2005-12-09T02:14:27Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 36281, "is_private": false, "text": "Most likely this is a duplicate of 36525 and fixed in the already released\n1.2.15. Since it was a 64Bit alignment bug, some compilers might show the bug,\nothers not.", "id": 83469, "time": "2005-12-09T03:23:33Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2005-12-09T03:23:33Z", "attachment_id": null}]