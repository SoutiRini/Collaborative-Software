[{"count": 0, "tags": [], "text": "Created attachment 32366\nThe stack trace of the loop\n\nRunning a Spring MVC 4.1.4 web application on JDK 7, Ubuntu 14.10 (and Debian Wheezy).\nTested on version 7.0.53 through 7.0.57. The web application works as expected in versions 7.0.53 and 7.0.54. Version 7.0.55 and up display the following issue.\n\nWhen uploading a large file, larger than the specified maximum, the exception org.springframework.web.multipart.MaxUploadSizeExceededException (caused by a org.apache.commons.fileupload.FileUploadBase.SizeLimitExceededException) is caught via an @ExceptionHandler. After logging the exception and resolving some parameters from the inputstream a redirect is performed like this:\n\nreturn new org.springframework.web.servlet.ModelAndView(\"redirect:/error\", new org.springframework.ui.ExtendedModelMap());\n\nI expect that this would generate a HTTP 302 redirect and will trigger a GET request on \"/error\". The upload obviously is a POST request and the redirect would perform a GET request. Tomcat version 7.0.54 and .53 indeed do that, but in version 55 and up it remains a POST request. The complete multipart content-type is saved and the whole request is repeated until the server throws an error: (failed) net::ERR_CONNECTION_RESET.\n\nProvisional headers:\nRequest URL:https://localhost:8443/import/ratings\nRequest Headers\nProvisional headers are shown\nAccept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nContent-Type:multipart/form-data; boundary=----WebKitFormBoundaryNT3MUmtXDpFSSCLy\nOrigin:https://localhost:8443\nReferer:https://localhost:8443/import/ratings\nUser-Agent:Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\nRequest Payload\n------WebKitFormBoundaryNT3MUmtXDpFSSCLy\nContent-Disposition: form-data; name=\"commandName\"\n\nimportRatingsCommand\n------WebKitFormBoundaryNT3MUmtXDpFSSCLy\nContent-Disposition: form-data; name=\"ratings\"; filename=\"file.pdf\"\nContent-Type: application/pdf", "is_private": false, "id": 180277, "creator": "martinvisser@gmail.com", "time": "2015-01-13T08:31:46Z", "bug_id": 57438, "creation_time": "2015-01-13T08:31:46Z", "attachment_id": 32366}, {"count": 1, "tags": [], "bug_id": 57438, "is_private": false, "text": "Tomcat will always use a 302 for a redirect.\n\nSpring MVC will always use a 302 unless the application specifically over-rides it.\n\nI'd recommend checking exactly what is on the wire with something like wireshark (you should see 302 redirects rather than 307) and then take a closer look at your client and/or your app to see why the POST is being resent.", "id": 180486, "time": "2015-01-22T15:34:07Z", "creator": "markt@apache.org", "creation_time": "2015-01-22T15:34:07Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "martinvisser@gmail.com", "text": "After changing the implementation in the Spring MVC controllers I managed to avoid the problem. I was unable to trace the redirects via Wireshark, but I still think it's something in Tomcat rather than in Spring.\nI did nothing in the Spring application, I only switched Tomcat versions. That's why I created this issue. But nonetheless, it works for me now, so this issue can be closed.", "id": 180514, "time": "2015-01-23T09:25:16Z", "bug_id": 57438, "creation_time": "2015-01-23T09:25:16Z", "is_private": false, "attachment_id": null}]