[{"count": 0, "tags": [], "creator": "apache_bugzilla@zwiers.ca", "attachment_id": 27366, "text": "Created attachment 27366\nPatch to fix issue.  Variable not renamed to show just a matter of replacing class.\n\nCSV Data Sets which are encoded in UTF-8 do not work on platforms where the default file.encoding is UTF-8.\n\nUTF-8 is used to illustrate here, but this would presumably apply to other non-8bit character sets as well.\n\nReason:  The use of ByteArrayOutputStream in the CSVSaveService.csvReadFile() method.   Specifically, the boas.write(ch) call is implemented (internally in ByteArrayOutputStream) with a cast to the byte primitive type ( buf[count] = (byte)b; in my JVM).\n\nLater, the ByteArrayOutputStream is interpreted according to the platform default (via baos.toString()) and if the content of the array are then interpreted according to the platform's default char set.  If that charset (eg. ISO-8859-1) is 8-bit, everything is fine.  However, unpredictable results/unmapped chars result for other charsets (like UTF-8).\n\nFor example, the character \\u0027 (LATIN SMALL LETTER C WITH CEDILLA) with decimal code point 231.  When put into boas, it becomes (7 bit signed) -25.  When converted via toString() with UTF-8 as the default char set, the value is not recognized as a valid code point and the value \\ufffd (decimal code point 65533 == Unicodes \"REPLACEMENT CHARACTER\" placeholder) is placed in the return string instead.\n\nFix: patche attached. Simply replace ByteArrayOutputStream with CharArrayWriter and the UTF-8 files work regardless of the value for file.encoding.", "id": 148532, "time": "2011-08-10T19:48:30Z", "bug_id": 51645, "creation_time": "2011-08-10T19:48:30Z", "is_private": false}, {"count": 1, "tags": [], "creator": "apache_bugzilla@zwiers.ca", "attachment_id": 27367, "text": "Created attachment 27367\nTest cases to expose bug. Run with file.encoding=UTF-8\n\nTests will execute successfully if default file.encoding is ISO-8859-1 (or other 8bit that can handle the chars in the test).  However, run with  -Dfile.encoding=UTF-8 VM arg and tests will fail.  Requires new bin/testfiles/testutf8.csv (attached next).", "id": 148533, "time": "2011-08-10T19:56:50Z", "bug_id": 51645, "creation_time": "2011-08-10T19:56:50Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 51645, "text": "Created attachment 27368\n.csv file for previous test patch\n\nRequired for one of the previously attached tests. Belongs in bin/testfiles", "id": 148534, "time": "2011-08-10T19:58:17Z", "creator": "apache_bugzilla@zwiers.ca", "creation_time": "2011-08-10T19:58:17Z", "is_private": false, "attachment_id": 27368}, {"count": 3, "tags": [], "bug_id": 51645, "text": "Thanks very much.\n\nPatch applied:\n\nURL: http://svn.apache.org/viewvc?rev=1156416&view=rev\nLog:\nBug 51645 - CSVDataSet does not read UTF-8 files when file.encoding is UTF-8\n\nAdded:\n   jakarta/jmeter/trunk/bin/testfiles/testutf8.csv   (with props)\nModified:\n   jakarta/jmeter/trunk/src/core/org/apache/jmeter/save/CSVSaveService.java\n   jakarta/jmeter/trunk/test/src/org/apache/jmeter/config/TestCVSDataSet.java\n   jakarta/jmeter/trunk/test/src/org/apache/jmeter/save/TestCSVSaveService.java\n   jakarta/jmeter/trunk/xdocs/changes.xml", "id": 148535, "time": "2011-08-11T00:37:08Z", "creator": "sebb@apache.org", "creation_time": "2011-08-11T00:37:08Z", "is_private": false, "attachment_id": null}]