[{"count": 0, "tags": [], "text": "Documents using the server-parsed handler are incorrectly served (instead of\ngiving a 404 error) when the URL for the server-parsed page has a / appended to\nit, perhaps followed by additional characters.  This is a problem mainly because\nit serves the document in a form that breaks relative URLs and server-side includes.\n\nSteps to reproduce:\n Create an .htaccess file with:\n    AddType \"text/html; charset=iso-8859-1\" .abug\n    AddHandler server-parsed .abug\n and create a simple foo.abug file in that directory.\n\nActual results:\n  http://server/dir/foo.abug , http://server/dir/foo.abug/ , and\n  http://server/dir/foo.abug/bar all return the document.\n\nExpected results:\n  Only the first of the three URLs should return the document.\n\nThis bug can be seen on a live server (which uses \"Options +MultiViews\") at:\n  http://dbaron.org/log/2003-01\n  http://dbaron.org/log/2003-01/\n  http://dbaron.org/log/2003-01/aaaa\n\n(Users of my pages are occasionally confused by the fact that I use MultiViews\nand don't use extensions in my URLs.  This is, after all, good practice:\nhttp://www.w3.org/Provider/Style/URI.html .  However, occasionally users think\nthe URL is a directory, since it lacks an extension, and add a slash to the end.\n This problem has been pointed out to me a number of times over the past few\nyears, so I'm finally breaking down and filing a bug despite not having tested\nit on the very latest version of Apache (or on Apache 2.0, for that matter),\nsince I'm not running my own server and don't have the time to set one up just\nto test this bug.)", "attachment_id": null, "id": 30341, "creator": "dbaron@dbaron.org", "time": "2003-01-30T14:07:19Z", "bug_id": 16595, "creation_time": "2003-01-30T14:07:19Z", "is_private": false}, {"count": 1, "tags": [], "text": "Yes, it's a known issue. There were a lot of discussion about SSI and path info\nin the past. However, these resulted in the behaviour in Apache 2.x, were SSI\n(resp. the core handler) rejects all path info by default and has to be\nexplicitely turned on.\n(<http://httpd.apache.org/docs-2.0/mod/core.html#acceptpathinfo>)\n\nYou may want to use mod_rewrite or similar to check for PATH_INFO and reject the\nrequest.\n\nThanks for using Apache!", "is_private": false, "id": 30348, "creation_time": "2003-01-30T15:01:43Z", "time": "2003-01-30T15:01:43Z", "creator": "nd@perlig.de", "bug_id": 16595, "attachment_id": null}, {"count": 2, "tags": [], "text": "\n  To be very precise, AcceptPathInfo Default causes the path info to be accepted\n  by the corresponding handler by it's specific preference.\n\n  So most content generators, such as CGI, PHP, and SSI (because SSI may nest \n  other generators) default to accepting path info.  The core static content\n  handler defaults to rejecting path info.  But any of these may be overriden\n  with AcceptPathInfo to tollerate or reject such requests.\n\n  For disambigiating URIs I strong believe in setting AcceptPathInfo Off within\n  the root of the server, and setting up AcceptPathInfo On only for the scripts\n  and content which *uses* the path info (e.g. a viewcvs.cgi style script.)\n  But that's religion and advocacy.  In order to prevent *breaking* all of the\n  deployed 1.3.x servers as they migrated to 2.0.x, the team elected to keep\n  the behavior as similar as possible to Apache 1.3's behavior.\n", "attachment_id": null, "bug_id": 16595, "id": 30353, "time": "2003-01-30T15:57:42Z", "creator": "wrowe@apache.org", "creation_time": "2003-01-30T15:57:42Z", "is_private": false}]