[{"count": 0, "tags": [], "creator": "richabaronia2u@gmail.com", "attachment_id": null, "text": "Overview : HTTP request having one of its header folded send to NIO connctor fails with 400 bad request.\n\nSteps to Reproduce:\n1) Send an HTTP request having a header whoes value is folded (example :\nAdd an HTTP header TestHeader  with value = \"abcd\" +\"\\r\\n\\t\"+\"efgh\"\nto a server which is using Java Nio Blocking Connector  Http11NioProtocol \n\nExpected Result : Request should be handled successfully\n\nActual Result   : 400 Bad Request response is send back\n\nAdditional Information: \nThe issue is present in the  parseHeader() method of InternalNioInputBuffer class.\nHere the variable headerParsePos is set according to the enum\nHeaderParsePosition {HEADER_START, HEADER_NAME, HEADER_VALUE, HEADER_MULTI_LINE}\nInorder to verify if the header is multiline first the value of  headerParsePos is set to HEADER_MULTI_LINE\nThen following code is executed\nif ( headerParsePos == HeaderParsePosition.HEADER_MULTI_LINE ) {\n                if ( (chr != Constants.SP) && (chr != Constants.HT)) {\n                    headerParsePos = HeaderParsePosition.HEADER_START;\n                } else {\n                    eol = false;\n                    // Copying one extra space in the buffer (since there must\n                    // be at least one space inserted between the lines)\n                    buf[headerData.realPos] = chr;\n                    headerData.realPos++;\n                }\n}\n\nHere if the first character of the next line is not equal to space or tab then the value of   variable   headerParsePos is set to HEADER_START\nBut if the value is equal to space or tab then value of   variable   headerParsePos remains HEADER_MULTI_LINE.\nThe futher parsing of the header value is done only in case headerParsePos is set to HEADER_VALUE\nwhile (headerParsePos == HeaderParsePosition.HEADER_VALUE ||\n              headerParsePos == HeaderParsePosition.HEADER_MULTI_LINE) {\n          if ( headerParsePos == HeaderParsePosition.HEADER_VALUE ) {\n//code to parse header value \n         }\n       if ( headerParsePos == HeaderParsePosition.HEADER_MULTI_LINE ) {\n//code to handle multiline header\n        }\n}\nSince the value of headerParsePos is not being set back to HEADER_VALUE therefore code to handle multiline header is being executed .\nAnd the while loop goes in an endless loop.\nIf the else part of code to handle multiline header if                     headerParsePos = HeaderParsePosition. HEADER_VALUE; line is added as below\nif ( headerParsePos == HeaderParsePosition.HEADER_MULTI_LINE ) {\n                if ( (chr != Constants.SP) && (chr != Constants.HT)) {\n                    headerParsePos = HeaderParsePosition.HEADER_START;\n                } else {\n                    eol = false;\n                    // Copying one extra space in the buffer (since there must\n                    // be at least one space inserted between the lines)\n                    buf[headerData.realPos] = chr;\n                    headerData.realPos++;\n                    headerParsePos = HeaderParsePosition. HEADER_VALUE;\n                }\n}\nThen the header folding is handled successfully", "id": 134987, "time": "2010-03-02T08:05:16Z", "bug_id": 48839, "creation_time": "2010-03-02T08:05:16Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 48839, "text": "Many thanks for the analysis and the suggested fix. Your fix has been applied to trunk (for 7.0.x) and has been proposed for 6.0.x.\n\nI also created a unit test for this.", "id": 135745, "time": "2010-03-29T10:40:19Z", "creator": "markt@apache.org", "creation_time": "2010-03-29T10:40:19Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 136869, "time": "2010-05-14T15:24:35Z", "bug_id": 48839, "creation_time": "2010-05-14T15:24:35Z", "text": "This has been fixed in 6.0.x and will be included in 6.0.27 onwards."}]