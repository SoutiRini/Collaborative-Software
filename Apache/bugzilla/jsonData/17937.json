[{"count": 0, "tags": [], "bug_id": 17937, "attachment_id": null, "id": 33088, "creation_time": "2003-03-12T22:35:20Z", "time": "2003-03-12T22:35:20Z", "creator": "freqout@speakeasy.net", "text": "There is a bug in the mod_negotiation module of Apache httpd where it is \nincorrectly returning HTTP status 200 and content when receiving a browser \nclient request that contains restricted Accept headers, when the correct web \nserver response should be a HTTP status 406.\n\nFor example using the HTTP client request header of\n\nGET /images/asf_logo_wide.gif HTTP/1.1\nUser-Agent: Mozilla/4.0 [en] ()\nAccept: text/*\nConnection: keep-alive\nHost: www.apache.org\n\n(note www.apache.org is a 2.x based server, but this defect does apply to \n1.3.27 and other 1.3.x versions)\n\nThe httpd web server should return a HTTP STATUS 406 because the .gif is \nassociated with image/gif and does not match the HTTP client's Accept \ncriteria.  Instead, Apache httpd currently responds with a HTTP STATUS 200 with \nthe gif file's binary content.\n\nAssociated references:\nHTTP 1.1, rfc2616 Section 14\nhttp://www.ietf.org/rfc/rfc2616.txt \nhttp://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\nand Apache negotiation algorithm in\nhttp://httpd.apache.org/docs/content-negotiation.html", "is_private": false}, {"count": 1, "tags": [], "bug_id": 17937, "attachment_id": null, "text": "Related Apache httpd-1.3.x based bug # 17936", "id": 33090, "time": "2003-03-12T22:37:32Z", "creator": "freqout@speakeasy.net", "creation_time": "2003-03-12T22:37:32Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 17937, "is_private": false, "id": 33093, "creation_time": "2003-03-12T23:10:29Z", "time": "2003-03-12T23:10:29Z", "creator": "nd@perlig.de", "text": "You're requesting a non-negotiated resource. Therefore negotiation rules don't\napply.", "attachment_id": null}, {"count": 3, "tags": [], "creator": "freqout@speakeasy.net", "text": "Andre, I'm afraid you'll have to go into more detail concerning non-negotiated \nresource.  There is no mention of non-negotiated resources in either RFC 2616 \nor the Apache content negotiation documentation.  If you could point me towards \ndocumentation, or show me an example where Apache correctly returns the 406, \nthat would be really helpful.\n\nI would also like to point out the Apache negotiation documentation concerning \nthis issue.\n-------------------------< SNIP >-------------------------------------------\nApache Negotiation Algorithm\nApache can use the following algorithm to select the 'best' variant (if any) to \nreturn to the browser. This algorithm is not further configurable. It operates \nas follows:\n\nFirst, for each dimension of the negotiation, check the appropriate Accept* \nheader field and assign a quality to each variant. If the Accept* header for \nany dimension implies that this variant is not acceptable, eliminate it. If no \nvariants remain, go to step 4. \nSelect the 'best' variant by a process of elimination. Each of the following \ntests is applied in order. Any variants not selected at each test are \neliminated. After each test, if only one variant remains, select it as the best \nmatch and proceed to step 3. If more than one variant remains, move on to the \nnext test. \nMultiply the quality factor from the Accept header with the quality-of-source \nfactor for this variant's media type, and select the variants with the highest \nvalue. \nSelect the variants with the highest language quality factor. \nSelect the variants with the best language match, using either the order of \nlanguages in the Accept-Language header (if present), or else the order of \nlanguages in the LanguagePriority directive (if present). \nSelect the variants with the highest 'level' media parameter (used to give the \nversion of text/html media types). \nSelect variants with the best charset media parameters, as given on the Accept-\nCharset header line. Charset ISO-8859-1 is acceptable unless explicitly \nexcluded. Variants with a text/* media type but not explicitly associated with \na particular charset are assumed to be in ISO-8859-1. \nSelect those variants which have associated charset media parameters that are \nnot ISO-8859-1. If there are no such variants, select all variants instead. \nSelect the variants with the best encoding. If there are variants with an \nencoding that is acceptable to the user-agent, select only these variants. \nOtherwise if there is a mix of encoded and non-encoded variants, select only \nthe unencoded variants. If either all variants are encoded or all variants are \nnot encoded, select all variants. \nSelect the variants with the smallest content length. \nSelect the first variant of those remaining. This will be either the first \nlisted in the type-map file, or when variants are read from the directory, the \none whose file name comes first when sorted using ASCII code order. \nThe algorithm has now selected one 'best' variant, so return it as the \nresponse. The HTTP response header Vary is set to indicate the dimensions of \nnegotiation (browsers and caches can use this information when caching the \nresource). End. \nTo get here means no variant was selected (because none are acceptable to the \nbrowser). Return a 406 status (meaning \"No acceptable representation\") with a \nresponse body consisting of an HTML document listing the available variants. \nAlso set the HTTP Vary header to indicate the dimensions of variance.\n-------------------------< SNIP >-------------------------------------------\n\nFollowing the negotiation algorithm above (and I must say kudos to Apache for \nproviding this document) you do step 1, in which you discover that there is no \nmaching Accept type, and must go to step 4, which states that a 406 should be \nreturned.\n\n", "id": 33122, "time": "2003-03-13T16:00:37Z", "bug_id": 17937, "creation_time": "2003-03-13T16:00:37Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 17937, "attachment_id": null, "id": 33135, "creation_time": "2003-03-13T18:29:16Z", "time": "2003-03-13T18:29:16Z", "creator": "freqout@speakeasy.net", "text": "I'll allow this bug to remain RESOLVED - INVALID, while the issue is discussed \nin 17936.", "is_private": false}]