[{"count": 0, "tags": [], "creator": "nicolas.socheleau@quickoffice.com", "attachment_id": 23803, "id": 127905, "time": "2009-06-12T00:41:52Z", "bug_id": 47359, "creation_time": "2009-06-12T00:41:52Z", "is_private": false, "text": "Created attachment 23803\ntestcase for baseline-shift property\n\nAccording to the spec (http://www.w3.org/TR/SVG11/text.html#BaselineShiftProperty),\nbaseline-shift properties can nest and are additive but not inheritable.\n\nthe following example is expected to render text on the same line though the tspan is back on the baseline:\n\n<text baseline-shift=\"10pt\">the quick <tspan fill=\"brown\">brown</tspan> fox</text>\n\nthe following example is expected to render the tspan within another tspan higher up compared to the baseline:\n\n<text> using <tspan baseline-shift=\"super\">super <tspan baseline-shift=\"5pt\">super!</tspan> script</tspan></text>\n\nAttached are testcases for the baseline-shift property"}, {"count": 1, "tags": [], "creator": "nicolas.socheleau@quickoffice.com", "text": "Created attachment 23804\nbetter formatted testcase\n\ntestcase formatted for the batik test suite", "id": 127907, "time": "2009-06-12T01:59:49Z", "bug_id": 47359, "creation_time": "2009-06-12T01:59:49Z", "is_private": false, "attachment_id": 23804}, {"count": 2, "tags": [], "bug_id": 47359, "attachment_id": 23805, "text": "Created attachment 23805\nfix attempt\n\nthis is a proposed patch, but I'm rusty and I haven't followed much lately any development on Batik, so I'm not sure it is valuable. Still, the rendering of baseline-shift seems correct with this patch.", "id": 127908, "time": "2009-06-12T02:02:36Z", "creator": "nicolas.socheleau@quickoffice.com", "creation_time": "2009-06-12T02:02:36Z", "is_private": false}, {"count": 3, "tags": [], "creator": "helder.magalhaes@gmail.com", "attachment_id": null, "id": 127931, "time": "2009-06-13T01:07:25Z", "bug_id": 47359, "creation_time": "2009-06-13T01:07:25Z", "is_private": false, "text": "First of all, thanks for the report and suggested fix, Nicolas! ;-)\n\nFew bug properties meta changes:\n * Version moved to 1.8 as the issue was confirmed in trunk (revision 784345);\n * Component changed to GVT Text as, although Bridge also seems to be involved, conceptually this concerns text handling (I'm not very confident about this although IMO it sounds better);\n * Added [PATCH] prefix and related keyword in order to reflect the fact that there's a fix proposal available;\n * Added the mailing list discussion prior to issue creation as the report's URL (a bit of background for the curious). :-)\n\nI'll try to follow-up with a set of comments regarding each of the attachments."}, {"count": 4, "tags": [], "creator": "helder.magalhaes@gmail.com", "text": "(In reply to comment #1)\n> Created an attachment (id=23804) [details]\n> better formatted testcase\n> \n> testcase formatted for the batik test suite\n\nThis should apparently be placed in \"samples/tests/spec/text\" (quick tip to save time). ;-)\n\nAs the test is basically a small extend of \"textLayout2.svg\", I'd propose merging the new sub-tests ('<text> baseline-shift=\"-5pt\" / baseline-shift=\"+/-10pt\"' and 'nested <tspan>') into it (\"textLayout2.svg\"), maybe by using two or more columns such as in \"textLayout.svg\", and replace this attachment for a patch against that test (\"textLayout2.svg\"). Note that, for coherency with \"textLayout2.svg\", I'd propose dropping the guide lines used (or adding them consistently in \"textLayout2.svg\" also).", "id": 127932, "time": "2009-06-13T02:02:23Z", "bug_id": 47359, "creation_time": "2009-06-13T02:02:23Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "helder.magalhaes@gmail.com", "attachment_id": null, "id": 127933, "time": "2009-06-13T02:33:56Z", "bug_id": 47359, "creation_time": "2009-06-13T02:33:56Z", "is_private": false, "text": "(In reply to comment #2)\n> Created an attachment (id=23805) [details]\n> fix attempt\n> \n> this is a proposed patch, but I'm rusty and I haven't followed much lately any\n> development on Batik, so I'm not sure it is valuable. Still, the rendering of\n> baseline-shift seems correct with this patch.\n\nIntuitively sounds good, although I haven't tested the patch myself yet. Few comments first:\n\n\nBatik uses the space character for indenting. Please update your patch (which uses a mix of tabs and spaces) with this in mind. ;-)\n\n\nMissing space before \"asb\" in:\n\n+        fillAttributedStringBuffer(ctx, element, true, null, null, null, null,asb);\n\n\nMissing space before \"elementAttributes\" in:\n\n+\tparentAttributes = handleNestedBaselineShift(parentAttributes,elementAttributes);\n\n\nIs it safe to assume \"elementAttributes\" is always non-null? That is, should we be making the same null check made for the \"parentAttributes\" nearby?\n\n+        if ( elementAttributes.containsKey(BASELINE_SHIFT) )\n\n\nI'd say the space before the semi-colon could be dropped in:\n+                    for(int k = 0 ; k < values.size(); k++)\n\n\nAlthough this portion was adapted from previous code, I'd propose that spaces were inserted between \"==\" and also the \"+= -\" was changed to \"-=\" in:\n\n+                            if (baselineValue==TextAttribute.SUPERSCRIPT_SUPER) {\n+                                baselineAdjust += baselineAscent*0.5f;\n+                            } else if (baselineValue==TextAttribute.SUPERSCRIPT_SUB) {\n+                                baselineAdjust += -baselineAscent*0.5f;\n\n\nWith these small changes addressed, I'd say the patch is ready for review. ;-)\n\n\nApart from the changes, I'd just like to leave a couple of thoughts which I haven't been able to dig down properly (at least, not for now):\n * Is this code ready for on-the-fly modification of the baseline-shift property? By scripting or by placing a SMIL animation on the property, either in the child or in the parent for a nesting sample, does the proposal keep up with?\n * Can the introduced memory allocations be introducing any memory leaks?"}, {"count": 6, "tags": [], "bug_id": 47359, "attachment_id": null, "text": "(In reply to comment #4)\n> As the test is basically a small extend of \"textLayout2.svg\", I'd propose\n> merging the new sub-tests [...] into it (\"textLayout2.svg\") [...]\n\nOops, forgot to mention that, if one decides to keep the two tests separately, the newly introduced should be also added to the test list (\"test-resources/org/apache/batik/test/samplesRendering.xml\") so regard [1] can see it. A reference image needs to be generated also.\n\nIf the couple of introduced sub-tests are merged into the existing one, only the reference image needs to be updated. ;-)\n\n[1] http://xmlgraphics.apache.org/batik/dev/test.html#regard", "id": 127934, "time": "2009-06-13T02:48:00Z", "creator": "helder.magalhaes@gmail.com", "creation_time": "2009-06-13T02:48:00Z", "is_private": false}, {"count": 7, "tags": [], "creator": "nicolas.socheleau@quickoffice.com", "attachment_id": 23811, "id": 127971, "time": "2009-06-16T08:59:48Z", "bug_id": 47359, "creation_time": "2009-06-16T08:59:48Z", "is_private": false, "text": "Created attachment 23811\nfix attempt 2\n\nI updated the patch to take into account Helder Magalh\u00e3es commments"}, {"count": 8, "tags": [], "bug_id": 47359, "attachment_id": null, "text": "> Batik uses the space character for indenting. Please update your patch (which\n> uses a mix of tabs and spaces) with this in mind. ;-)\n> \n> \n> Missing space before \"asb\" in:\n> \n> +        fillAttributedStringBuffer(ctx, element, true, null, null, null,\n> null,asb);\n> \n> \n> Missing space before \"elementAttributes\" in:\n> \n> +    parentAttributes =\n> handleNestedBaselineShift(parentAttributes,elementAttributes);\n> \n> \n\nI've addressed those issues in the 2nd submitted patch.\n\n> Is it safe to assume \"elementAttributes\" is always non-null? That is, should we\n> be making the same null check made for the \"parentAttributes\" nearby?\n> \n> +        if ( elementAttributes.containsKey(BASELINE_SHIFT) )\n> \n\nhandleNestedBaselineShift( Map, Map ) is called from one location only and a few lines before the call, elementsAttributes is set to new HashMap(). I assume it is safe not to check elementAttributes within that method.\n\n> \n> I'd say the space before the semi-colon could be dropped in:\n> +                    for(int k = 0 ; k < values.size(); k++)\n> \n> \n> Although this portion was adapted from previous code, I'd propose that spaces\n> were inserted between \"==\" and also the \"+= -\" was changed to \"-=\" in:\n> \n> +                            if\n> (baselineValue==TextAttribute.SUPERSCRIPT_SUPER) {\n> +                                baselineAdjust += baselineAscent*0.5f;\n> +                            } else if\n> (baselineValue==TextAttribute.SUPERSCRIPT_SUB) {\n> +                                baselineAdjust += -baselineAscent*0.5f;\n> \n> \n\nadjusted in the latest patch\n\n> With these small changes addressed, I'd say the patch is ready for review. ;-)\n> \n> \n> Apart from the changes, I'd just like to leave a couple of thoughts which I\n> haven't been able to dig down properly (at least, not for now):\n>  * Is this code ready for on-the-fly modification of the baseline-shift\n> property? By scripting or by placing a SMIL animation on the property, either\n> in the child or in the parent for a nesting sample, does the proposal keep up\n> with?\n\nI've attached test file for animation and scripting as well for the review.", "id": 127973, "time": "2009-06-16T09:04:59Z", "creator": "nicolas.socheleau@quickoffice.com", "creation_time": "2009-06-16T09:04:59Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 47359, "attachment_id": 23814, "text": "Created attachment 23814\nanimation of baseline-script property\n\ntestcase with <animate/> and <set/> to modify the baseline-shift property", "id": 127977, "time": "2009-06-16T09:12:42Z", "creator": "nicolas.socheleau@quickoffice.com", "creation_time": "2009-06-16T09:12:42Z", "is_private": false}, {"count": 10, "tags": [], "creator": "nicolas.socheleau@quickoffice.com", "text": "Created attachment 23815\nscripting of the baseline-shift property\n\ntestcase with onload ecmascript to modify the baseline-shift property", "id": 127978, "time": "2009-06-16T09:13:33Z", "bug_id": 47359, "creation_time": "2009-06-16T09:13:33Z", "is_private": false, "attachment_id": 23815}, {"count": 11, "tags": [], "bug_id": 47359, "attachment_id": null, "text": "(In reply to comment #8)\n> > Missing space before \"asb\" in: [code snippet]\n> > Missing space before \"elementAttributes\" in: [code snippet]\n> I've addressed those issues in the 2nd submitted patch.\n\nApparently not those two items. ;-)\n\n\n> +                    for(int k = 0; k < values.size(); k++)\n> +                    {\n> +                        Object baselineValue = values.get(k);\n\nCould/should the \"Object\" variable be moved to outside the cycle? Although the nesting will probably never be more than one level...\n\n\n> +         //for the child of the element\n\nSeems that a superfluous (indenting) space slipped into that line. ;-)\n\n\n> handleNestedBaselineShift( Map, Map ) is called from one location only and a\n> few lines before the call, elementsAttributes is set to new HashMap().\n> I assume it is safe not to check elementAttributes within that method.\n\nSounds reasonable. :-)\n\n\n> I've attached test file for animation and scripting as well for the review.\n\nCool, I noticed the attachments but didn't have the chance to test them yet. Nevertheless, you didn't state whether the patch properly handled those situations (although you working suggests so).\n\n\nI'd say that, even without the minor formatting stuff integrated, the patch is ready for a deeper review from someone with a deeper knowledge on Batik's internals (assuming that the animation cases are being properly handled, as guessed in the previous paragraph). ;-)", "id": 127985, "time": "2009-06-16T11:20:13Z", "creator": "helder.magalhaes@gmail.com", "creation_time": "2009-06-16T11:20:13Z", "is_private": false}, {"count": 12, "tags": [], "creator": "nicolas.socheleau@quickoffice.com", "text": "Created attachment 23820\nminor formatting fix\n\n- fix the 2 missing space between the comma and the parameter name (this time;)\n- remove the extra space\n- move the local variable outside of the loop", "id": 127992, "time": "2009-06-16T13:24:15Z", "bug_id": 47359, "creation_time": "2009-06-16T13:24:15Z", "is_private": false, "attachment_id": 23820}, {"count": 13, "tags": [], "bug_id": 47359, "attachment_id": null, "text": "> \n> Apparently not those two items. ;-)\n\nI hope I got it right this time :)\n\n> > +                    for(int k = 0; k < values.size(); k++)\n> > +                    {\n> > +                        Object baselineValue = values.get(k);\n> \n> Could/should the \"Object\" variable be moved to outside the cycle? Although the\n> nesting will probably never be more than one level...\n\nI moved it outside of the loop\n\n> > +         //for the child of the element\n> \n> Seems that a superfluous (indenting) space slipped into that line. ;-)\n> \nyou got me!\n\n> > I've attached test file for animation and scripting as well for the review.\n> \n> Cool, I noticed the attachments but didn't have the chance to test them yet.\n> Nevertheless, you didn't state whether the patch properly handled those\n> situations (although you working suggests so).\n> \n\nthe scripting and animation test files are working with the patch. Though, I'm still working on some other animations where I don't get what I expect. \nI'm starting to fix it is a different issue. I'll keep digging...", "id": 127993, "time": "2009-06-16T13:28:13Z", "creator": "nicolas.socheleau@quickoffice.com", "creation_time": "2009-06-16T13:28:13Z", "is_private": false}]