[{"count": 0, "tags": [], "bug_id": 42616, "text": "e.g :\n\nrichard@birkenhead /cygdrive/c/Documents and Settings/richard/IdeaProjects/Apach\ne FOP $ ./fop -awt examples/fo/basic/readme.fo\n\nproduces the following:\n\ncygpath: error converting \"FOP/lib/*.jar:Settings/richard/IdeaProjects/Apache:an\nd:/cygdrive/c/Documents:/cygdrive/c/Documents and Settings/richard/IdeaProjects/\nApache FOP/build/fop.jar:/cygdrive/c/Documents and Settings/richard/IdeaProjects\n/Apache FOP/build/fop-sandbox.jar:/cygdrive/c/Documents and Settings/richard/Ide\naProjects/Apache FOP/build/fop-hyph.jar:/cygdrive/f/geolog/trunk/geolog/src\" - U\nnknown error 4294967295\nException in thread \"main\" java.lang.NoClassDefFoundError: org/apache/fop/cli/Ma\nin\n\nThis affects the current trunk.\n\nRelated bugs are:\n40583     Under Cygwin, fop bash script CLASSPATH problem \n  http://issues.apache.org/bugzilla/show_bug.cgi?id=40583\n21070     ClassPath with spaces cause undefined class errors\n  http://issues.apache.org/bugzilla/show_bug.cgi?id=21070", "id": 104191, "time": "2007-06-08T05:18:16Z", "creator": "richardw@geoquip-rnd.demon.co.uk", "creation_time": "2007-06-08T05:18:16Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "spepping@apache.org", "attachment_id": null, "text": "The problem may be due to this part:\n\nDIRLIBS=${FOP_HOME}/lib/*.jar\nfor i in ${DIRLIBS}\n\nI have no idea how to solve it, even on Linux. ${FOP_HOME}/lib/*.jar simply is\nnot expanded when it contains one or more spaces, even when quoted or when the\nspaces are escaped. The for loop is even worse. Even if DIRLIBS would be\nproperly set, it seems impossible to obtain a correct word splitting in the for\nloop when each separate path element contains spaces.\n\nBug 40583 is not really related. It addresses another problem, one which is\nspecific for Cygwin.\n\n", "id": 104303, "time": "2007-06-11T11:16:01Z", "bug_id": 42616, "creation_time": "2007-06-11T11:16:01Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 42616, "text": "To avoid splitting arguments on spaces, set IFS to newline at the beginning of\nthe script like so:\n\n  export IFS=$'\\n'\n\nPlease try this and report your findings.\n", "id": 104324, "time": "2007-06-12T00:19:53Z", "creator": "arno@dmxprint.nl", "creation_time": "2007-06-12T00:19:53Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 42616, "attachment_id": null, "text": "Spaces are not the whole of the problem:\n\nThe following works:\n\nrichard@birkenhead /cygdrive/f/dir with spaces/fop-head/xml-fop\n$ ./fop -awt ./examples/fo/basic/simple.fo > foo 2>&1\n\n\nThe following doesn't:\n\nrichard@birkenhead /cygdrive/f/dir with spaces/fop-head/xml-fop\n$ cd ../\n\nrichard@birkenhead /cygdrive/f/dir with spaces/fop-head\n$ mv xml-fop xml\\ fop\n\nrichard@birkenhead /cygdrive/f/dir with spaces/fop-head\n$ cd xml\\ fop/\n\nrichard@birkenhead /cygdrive/f/dir with spaces/fop-head/xml fop\n$ !./f\n./fop -awt ./examples/fo/basic/simple.fo > foo 2>&1\n\nrichard@birkenhead /cygdrive/f/dir with spaces/fop-head/xml fop\n$ cat ./foo\ncygpath: error converting \"fop/lib/*.jar:spaces/fop-head/xml:with:/cygdrive/f/di\nr:/cygdrive/f/dir with spaces/fop-head/xml fop/build/fop.jar:/cygdrive/f/dir wit\nh spaces/fop-head/xml fop/build/fop-sandbox.jar:/cygdrive/f/dir with spaces/fop-\nhead/xml fop/build/fop-hyph.jar:/cygdrive/f/geolog/trunk/geolog/src\" - Unknown e\nrror 4294967295\njava.lang.NoClassDefFoundError: org/apache/fop/cli/Main\nException in thread \"main\"\nrichard@birkenhead /cygdrive/f/dir with spaces/fop-head/xml fop\n$\n", "id": 104851, "time": "2007-06-28T08:26:46Z", "creator": "richardw@geoquip-rnd.demon.co.uk", "creation_time": "2007-06-28T08:26:46Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 42616, "attachment_id": null, "id": 104852, "time": "2007-06-28T08:28:15Z", "creator": "richardw@geoquip-rnd.demon.co.uk", "creation_time": "2007-06-28T08:28:15Z", "is_private": false, "text": "export IFS=$'\\n'\n\nAdding this just after the opening comments fixes the problem under Linux and \nCygwin.\n"}, {"count": 5, "tags": [], "text": "Applied the fix in the form:\n\nexport IFS=\"\n\"\n\nbecause I feared that $'\\n' is specific for bash. Thanks for the suggestion and\nthe testing. See revision 551972.\n", "is_private": false, "bug_id": 42616, "id": 104924, "time": "2007-06-29T10:41:02Z", "creator": "spepping@apache.org", "creation_time": "2007-06-29T10:41:02Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "anathaniel@apache.org", "attachment_id": null, "id": 109552, "time": "2007-10-22T07:36:47Z", "bug_id": 42616, "creation_time": "2007-10-22T07:36:47Z", "is_private": false, "text": "http://svn.apache.org/viewvc?view=rev&revision=551972 breaks the 0.94 fop \nscript on Solaris where /bin/sh is a plain-vanilla Bourne shell.\n\nThe assigment should be written as:\n\nIFS=\"\n\"\nexport IFS\n"}, {"count": 7, "tags": [], "bug_id": 42616, "attachment_id": null, "id": 109558, "time": "2007-10-22T12:11:56Z", "creator": "spepping@apache.org", "creation_time": "2007-10-22T12:11:56Z", "is_private": false, "text": "Fixed in revision 587204. I removed the export statement because it is not needed."}, {"count": 8, "tags": [], "bug_id": 42616, "attachment_id": null, "is_private": false, "id": 109876, "time": "2007-10-29T07:41:04Z", "creator": "anathaniel@apache.org", "creation_time": "2007-10-29T07:41:04Z", "text": "*** Bug 43704 has been marked as a duplicate of this bug. ***"}, {"count": 9, "tags": [], "bug_id": 42616, "attachment_id": null, "id": 109878, "time": "2007-10-29T07:48:31Z", "creator": "anathaniel@apache.org", "creation_time": "2007-10-29T07:48:31Z", "is_private": false, "text": "The IFS assignment has to be removed altogether.  In Bourne shell it means that\n\nfop -xml foo.xml -xsl foo.xsl -pdf foo.pdf\n\nis interpreted as\n\nfop \"-xml foo.xml -xsl foo.xsl -pdf foo.pdf\"\n\nwhich produces for basically all commandlines:\n\njava.lang.IllegalArgumentException: Error creating InputHandler object.\n        at org.apache.fop.cli.CommandLineOptions.createInputHandler\n(CommandLineOptions.java:818)\n        at org.apache.fop.cli.CommandLineOptions.parse\n(CommandLineOptions.java:165)\n        at org.apache.fop.cli.Main.startFOP(Main.java:154)\n        at org.apache.fop.cli.Main.main(Main.java:197)\n\nWorkaround (provided bash is installed): invoke fop script explicitly as bash \nscript instead of implicit #!/bin/sh\n\n$ bash fop -xml foo.xml -xsl foo.xsl -pdf foo.pdf\n"}, {"count": 10, "tags": [], "text": "(In reply to comment #9)\n> The IFS assignment has to be removed altogether.  In Bourne shell it means that\n> \n> fop -xml foo.xml -xsl foo.xsl -pdf foo.pdf\n> \n> is interpreted as\n> \n> fop \"-xml foo.xml -xsl foo.xsl -pdf foo.pdf\"\n\nCan you explain? I do not see such a thing happen:\n$ /fop/fop --execdebug -xml foo.xml -xsl foo.xsl -pdf foo.pdf\nexec \"/usr/lib/jvm/java-1.5.0-sun/bin/java\" -classpath\n\"/fop/lib/xmlgraphics-commons-1.3svn.jar:/fop/lib/xml-apis-1.3.02.jar:/fop/lib/xercesImpl-2.7.1.jar:/fop/lib/xalan-2.7.0.jar:/fop/lib/servlet-2.2.jar:/fop/lib/serializer-2.7.0.jar:/fop/lib/fop-hyph.jar:/fop/lib/commons-logging-1.0.4.jar:/fop/lib/commons-io-1.3.1.jar:/fop/lib/batik-all-1.6.jar:/fop/lib/avalon-framework-4.2.0.jar:/fop/build/fop.jar:/fop/build/fop-sandbox.jar:/fop/build/fop-hyph.jar\"\norg.apache.fop.cli.Main \"-xml\" \"foo.xml\" \"-xsl\" \"foo.xsl\" \"-pdf\" \"foo.pdf\"\n", "is_private": false, "bug_id": 42616, "id": 109920, "time": "2007-10-29T12:23:59Z", "creator": "spepping@apache.org", "creation_time": "2007-10-29T12:23:59Z", "attachment_id": null}, {"count": 11, "tags": [], "creator": "lists@pbw.id.au", "attachment_id": null, "text": "Try\n\nOLD_IFS=$IFS\nIFS=\"\n\"\nfind ${FOP}/lib -name -name '*.jar'|while read jarfile\ndo\n      if [ -z \"$LOCALCLASSPATH\" ] ; then\n        LOCALCLASSPATH=\"$jarfile\"\n      else\n        LOCALCLASSPATH=\"$jarfile\"${pathSepChar}$LOCALCLASSPATH\n      fi\ndone\nIFS=$OLD_IFS\n\n\nI don't know how the CLASSPATH reacts to spaces. If there's a problem, the\nassignments to LOCALCALSSPATH will have to have the spaces escaped.", "id": 109931, "time": "2007-10-29T18:40:57Z", "bug_id": 42616, "creation_time": "2007-10-29T18:40:57Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 42616, "text": "(In reply to comment #11)\n> Try\n> \n> OLD_IFS=$IFS\n> IFS=\"\n> \"\n> find ${FOP}/lib -name -name '*.jar'|while read jarfile\n> do\n>       if [ -z \"$LOCALCLASSPATH\" ] ; then\n>         LOCALCLASSPATH=\"$jarfile\"\n>       else\n>         LOCALCLASSPATH=\"$jarfile\"${pathSepChar}$LOCALCLASSPATH\n>       fi\n> done\n> IFS=$OLD_IFS\n> \nfind \"${FOP}/lib\" -name '*.jar'|while read jarfile\ndo\n      if [ -z \"$LOCALCLASSPATH\" ] ; then\n        LOCALCLASSPATH=$jarfile\n      else\n        LOCALCLASSPATH=$jarfile${pathSepChar}$LOCALCLASSPATH\n      fi\ndone\n\nwould be almost perfect, and avoid the need for the change of IFS, except that\nthe call to find places the whole while loop in a subshell, and updates of\nLOCALCLASSPATH are lost when it returns.\n\n", "id": 109970, "time": "2007-10-30T13:32:33Z", "creator": "spepping@apache.org", "creation_time": "2007-10-30T13:32:33Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "creator": "lists@pbw.id.au", "attachment_id": null, "id": 109999, "time": "2007-10-30T22:05:17Z", "bug_id": 42616, "creation_time": "2007-10-30T22:05:17Z", "is_private": false, "text": "I forgot that everything in the line would be assigned to the variable, and I\nforgot that the pipeline would be executed in a subshell.\n\nSo how about\n\nJARPATH=$(SEP=\"\";find ${FOP}/lib -name '*.jar'|\\\nwhile read jarfile;do echo -n $SEP\"$jarfile\"; SEP=${pathSepChar}; done)\n\nif [ -z \"$LOCALCLASSPATH\" ] ; then\n    LOCALCLASSPATH=\"$JARPATH\"\nelse\n    LOCALCLASSPATH=\"$JARPATH\"${pathSepChar}$LOCALCLASSPATH\nfi\n"}, {"count": 14, "tags": [], "creator": "spepping@apache.org", "attachment_id": null, "text": "(In reply to comment #13)\n> So how about\n> \n> JARPATH=$(SEP=\"\";find ${FOP}/lib -name '*.jar'|\\\n> while read jarfile;do echo -n $SEP\"$jarfile\"; SEP=${pathSepChar}; done)\n> \n> if [ -z \"$LOCALCLASSPATH\" ] ; then\n>     LOCALCLASSPATH=\"$JARPATH\"\n> else\n>     LOCALCLASSPATH=\"$JARPATH\"${pathSepChar}$LOCALCLASSPATH\n> fi\n> \nExcellent. But keep it simple and use =`...` instead of =$(...) (is this a\nbashism?). Then the following should replace the libs section in the fop script:\n\n# add in the dependency .jar files, which reside in $FOP_HOME/lib\nif [ -z \"$LOCALCLASSPATH\" ] ; then\n  SEP=\"\"\nelse\n  SEP=\"${pathSepChar}\"\nfi\nLOCALCLASSPATH=${LOCALCLASSPATH}`find \"${FOP_HOME}/lib\" -name '*.jar' \\\n  | while read jarfile\ndo\n  echo -n \"$SEP$jarfile\"\n  SEP=\"${pathSepChar}\"\ndone`\n\nNote, however, that the complaint with which this bug was reopened, has never\nbeen validated; see comments #9 and #10. So one may argue that this solution is\nnot sufficiently better to warrant being committed. I think it is, because it\nremoves the fiddling with IFS and the parsing of a list of libs.\n", "id": 110075, "time": "2007-10-31T13:07:09Z", "bug_id": 42616, "creation_time": "2007-10-31T13:07:09Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 42616, "text": "$(...) is posix-preferred, I believe.", "id": 110091, "time": "2007-10-31T22:56:00Z", "creator": "lists@pbw.id.au", "creation_time": "2007-10-31T22:56:00Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 42616, "attachment_id": null, "text": "if this problem still exists in current trunk (FOP1.0 or later), then submit a new bug", "id": 157025, "time": "2012-04-01T19:21:52Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T19:21:52Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 42616, "text": "batch transition resolved+wontfix to closed+wontfix", "id": 158552, "time": "2012-04-30T00:14:39Z", "creator": "gadams@apache.org", "creation_time": "2012-04-30T00:14:39Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 42616, "text": "batch transition resolved+wontfix to closed+wontfix; if you believe this remains a bug and can demonstrate it with appropriate input FO file and output PDF file (as applicable), then you may reopen", "id": 158597, "time": "2012-04-30T00:17:08Z", "creator": "gadams@apache.org", "creation_time": "2012-04-30T00:17:08Z", "is_private": false, "attachment_id": null}]