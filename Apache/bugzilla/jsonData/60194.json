[{"count": 0, "tags": [], "bug_id": 60194, "is_private": false, "id": 194111, "attachment_id": null, "creator": "peterhansson_se@yahoo.com", "creation_time": "2016-10-02T14:56:56Z", "time": "2016-10-02T14:56:56Z", "text": "It is now 2016 and most people are using Java 7 or Java 8. In Java 6 the Connection.isValid() method was introduced as a way to \"ping\" a connection. Yet, for anyone wishing to implement Tomcat JDBC Pool it will appear to them as if they'll need to figure out and configure a validation query for each type of database that they'll be using. And I guess this is true. tomcat-jdbc doesn't take advantage of Connection.isValid(). The documentation doesn't mention anything about Connection.isValid() as an alternative to custom validation queries.\n\nOther JDBC Pools takes the approach of using Connection.isValid() if present and otherwise falling back to custom query. \n\nWhile bug 48817 discusses this issue back in 2010, I cannot really see what came out it. \n\nI believe there are a number of things that can be done (in order of effort):\n\n1. Improve documentation. What are people supposed to do?  Is the recommended approach to implement a custom Validator which would then call Connection.isValid()?  \n\n2. Perhaps include a ready-made Validator which does just that. Then people can use it simply by adding config (\"show them the path\").\n\n3. Maybe time to ditch Java 5 compatibility ?  .. meaning do what other JDBC Pools do and let Connection.isValid() be the default."}, {"count": 1, "tags": [], "creator": "kfujino@apache.org", "attachment_id": null, "id": 194999, "creation_time": "2016-11-15T05:33:48Z", "time": "2016-11-15T05:33:48Z", "bug_id": 60194, "text": "Thanks for the report.\nIf validationQuery is not specified, connection validation is done by calling the isValid() method.\nThe fix will be in :\n- 9.0.x for 9.0.0.M14 onwards\n- 8.5.x for 8.5.9 onwards\n- 8.0.x for 8.0.40 onwards\n- 7.0.x for 7.0.74 onwards", "is_private": false}]