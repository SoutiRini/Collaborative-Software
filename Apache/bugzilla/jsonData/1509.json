[{"count": 0, "tags": [], "text": "For example, in the buildStarted() method of my logger, getName(), \ngetDefaultTarget(), and getUserProperty(\"ant.file\") on the project object all \nreturn null. \n\nimport org.apache.tools.ant.*;\npublic class TestLogger extends DefaultLogger\n{\n\tpublic void buildStarted(BuildEvent event)\n\t{\n\t\tout.println(event.getProject());\n\t\tout.println(event.getProject().getBaseDir());\n\t\tout.println(event.getProject().getName());\n\t\tout.println(event.getProject().getDefaultTarget());\n\t\tout.println(event.getProject().getUserProperty(\"ant.file\"));\n\t\tout.println(event.getProject().getProperty(\"ant.file\"));\n\n\t\tsuper.buildStarted(event);\n\t}\n}\n\nOutput is:\n\norg.apache.tools.ant.Project@58610\nD:\\z\\Test2\nnull\nnull\nnull\nnull", "is_private": false, "id": 2096, "creator": "arosen@silverstream.com", "time": "2001-04-25T11:47:24Z", "bug_id": 1509, "creation_time": "2001-04-25T11:47:24Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 1509, "is_private": false, "text": "This is a chicken and egg problem to some extent. The problem is do \nbuildListeners expect to receive a buildStarted before they receive any otehr \nevents. If I move the build started event generation, then you will receive a \nnumber of message events prior to the buildStartedEvent. \n\nThere are three possible courses of action that I see.\n1. Add in an additional event - ProjectConfigured or something like that\n2. Move the firing of the buildStarted event to just before the execution of \nthe first target and indicate that events can be received prior to the \nbuildStarted event\n3. Don't change anything but make it clear that the Project object will not be \nfully initialised at this time.\n\nIn the last case, the workaround is to defer access to the Project until you \nreceive the first targetStarted event. \n", "id": 2384, "time": "2001-05-10T07:46:12Z", "creator": "conor@apache.org", "creation_time": "2001-05-10T07:46:12Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "OK, I am going for option 3 - don't change anything. To add a new method to the \ninterface would break all existing listeners which would not be cool. So the \nworkaround is the best way to go - ignore buildStarted and use the first other \nevent to get the project information. You may want to use targetStarted, but \nother events may be received before the first on eof those.", "is_private": false, "id": 4214, "creator": "conor@apache.org", "time": "2001-08-01T07:27:31Z", "bug_id": 1509, "creation_time": "2001-08-01T07:27:31Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 1509, "is_private": false, "text": "reopened so people can vote on it - where Conor's option 1 is probably what\npeople would vote for.", "id": 6786, "time": "2001-10-17T04:36:31Z", "creator": "bodewig@apache.org", "creation_time": "2001-10-17T04:36:31Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "It seems the BuildListener interface was designed to be unextensible. My \nsuggestion: Switch to a publish/subscribe model, with a compatibility adaptor.\n\n1) Create an ExtendedBuildListener interface.\n2) Give ExtendedBuildListener one method: buildEvent(BuildEvent)\n3) Make BuildEvent abstract.\n4) Create concrete BuildEvent classes for each type of event to deliver.\n5) Add Project.addBuildListener(Class, ExtendedBuildListener) to register for \nspecific events (or categories of events).\n6) Deliver these events *instead*.\n7) Redo Project.addBuildListener(BuildListener) to register for the current set \nof events, using adaptors.\n8) Add new events as needed, without breaking existing code.\n\n-- Or use JMS --", "is_private": false, "id": 9222, "creator": "bob.kerns@firepond.com", "time": "2001-12-31T03:14:18Z", "bug_id": 1509, "creation_time": "2001-12-31T03:14:18Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 1509, "text": "*** Bug 9159 has been marked as a duplicate of this bug. ***", "id": 25938, "time": "2002-11-08T14:25:27Z", "creator": "bodewig@apache.org", "creation_time": "2002-11-08T14:25:27Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "nwhitehe@yahoo.com", "attachment_id": null, "is_private": false, "id": 52852, "time": "2004-02-24T13:46:54Z", "bug_id": 1509, "creation_time": "2004-02-24T13:46:54Z", "text": "Cool. Thanks. I entered a work around:\n\nThe uninitialized status of the project (and hence the event) is over by the\ntime the first task start event fires. For most of my issues, I simply created a\nclass level boolean in my build listener to track if the event is populated or\nnot. Then   I defer the buildStarted until the project name comes through.\n\n  public void buildStarted(BuildEvent event) {\n    if(event.getProject().getName()==null) return;\n    started = true;\n    LOG.info(\"Build Started:\" + event.getProject().getName());\n  }\n\n  public void targetStarted(BuildEvent event) {\n    if(!started) {\n      buildStarted(event);\n    }\n    LOG.info(\"Target Started:\" + event.getProject().getName() + \".\" +\nevent.getTarget().getName());\n  }\n\nUgly, but seems to work."}, {"count": 7, "tags": [], "text": "I would like to see option 2 here.\n\nThe current XmlLogger has to store up all of the log in memory because it\ndoesn't have a file name when buildStarted is fired.  For large builds this\ncauses OutOfMemory errors.  XmlLogger is forced to write the file when\nbuildFinished fires.   One big dump from memory to disk at the end of the build\nIMHO is lame...and obviously causes errors.", "is_private": false, "bug_id": 1509, "id": 58886, "time": "2004-06-08T17:21:28Z", "creator": "dhardy@proclarity.com", "creation_time": "2004-06-08T17:21:28Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 1509, "is_private": false, "text": "I misstated my opinion slightly, sorry. I would like to see either 1 or 2.", "id": 58887, "time": "2004-06-08T17:40:46Z", "creator": "dhardy@proclarity.com", "creation_time": "2004-06-08T17:40:46Z", "attachment_id": null}, {"count": 9, "tags": [], "creator": "peterreilly@apache.org", "attachment_id": null, "is_private": false, "id": 101861, "time": "2007-04-18T04:24:24Z", "bug_id": 1509, "creation_time": "2007-04-18T04:24:24Z", "text": "Seems to be set to wontfix by accident"}, {"count": 10, "tags": [], "bug_id": 1509, "text": "sigh", "id": 102316, "time": "2007-04-25T06:11:38Z", "creator": "peterreilly@apache.org", "creation_time": "2007-04-25T06:11:38Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 1509, "text": "Although this bug report has been reopened several times to deal with a \"Vote\" on the best method for handling the initial status of events and the build listener, no votes have been posted since 2004. I think it is fairly safe to conclude that this is a non-issue for anyone any more. There are a couple of workarounds listed, so I'm going to close this now.\n\nIf there is disagreement with this, please bring it up for discussion on the developer list so that we can talk about what we want to change and why, rather than just reopening this bug. Thanks.", "id": 153019, "time": "2012-01-22T18:13:34Z", "creator": "bruce@callenish.com", "creation_time": "2012-01-22T18:13:34Z", "is_private": false, "attachment_id": null}]