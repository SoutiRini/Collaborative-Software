[{"count": 0, "tags": [], "bug_id": 58099, "attachment_id": null, "is_private": false, "id": 183884, "time": "2015-07-04T13:12:40Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-07-04T13:12:40Z", "text": "Currently HTTPClient 4 implementation eagerly creates an SSLContext , degrading in a important way performances of HttpClient init.\n\nThis is particularly annoying for tests using Concurrent download for resources and for test that do not use HTTPS at all.\n\n\nThis would be helpful as it would:\n- improve overall performance particularly for Concurrent download\n- Unblock https://issues.apache.org/bugzilla/show_bug.cgi?id=52073\n\n\nThis issue is created after closing Bug 57320."}, {"count": 1, "tags": [], "bug_id": 58099, "attachment_id": null, "id": 184846, "time": "2015-08-29T16:17:06Z", "creator": "sebb@apache.org", "creation_time": "2015-08-29T16:17:06Z", "is_private": false, "text": "Lazy init would work well for tests that don't use HTTPS.\n\nHowever it would still cause a slight slowdown in tests that use HTTPS when the first HTTPS sample is performed. (The sample response time is not affected)\n\nA work-round is to add a dummy HTTP request in a setUp thread group.\n\nNote that there will be other initialisation overheads in JMeter."}, {"count": 2, "tags": [], "bug_id": 58099, "attachment_id": null, "is_private": false, "id": 184849, "time": "2015-08-29T22:00:56Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-08-29T22:00:56Z", "text": "I don't think workaround works as the httpclient is shared in thread local but setup thread group threads die before thread group thread start.\n\nThe current state impacts uselessly tests that only run http, it drastically degrades performances of tests that use embedded resources parallel download.\n\nFor me this bug should be in our priorities."}, {"count": 3, "tags": [], "bug_id": 58099, "is_private": false, "id": 184851, "attachment_id": null, "creator": "sebb@apache.org", "creation_time": "2015-08-29T23:08:04Z", "time": "2015-08-29T23:08:04Z", "text": "The work-round seemed to work for me. At least some of the startup overhead was reduced. I think this is because of the static{} block.\n\nWhat is the SSL code that is being invoked per thread?\nI had a quick look and could not find anything SSL related apart from a call to JsseSSLManager sslMgr = (JsseSSLManager) SSLManager.getInstance() which is only done if the protocol is HTTPS.\n\nBut perhaps I have missed something."}, {"count": 4, "tags": [], "text": "(In reply to Sebb from comment #3)\n> The work-round seemed to work for me. At least some of the startup overhead\n> was reduced. I think this is because of the static{} block.\n> \nRead the thread on dev list called:\n\nhttpClient.getConnectionManager() performance with HTTP only\nOleg wrote this:\n\n-----------------------------------\nI see. For the time what you can do is to use a custom SSL socket\nfactory that lazily initializes SSL context when requested for the first\ntime. This is exactly what HC 3.1 does. It will be somewhat slower given\nthat one would need to mutex to synchronize access to the initialization\ncode\n\n-----------------------------------\n\n\n\n\n> What is the SSL code that is being invoked per thread?\n> I had a quick look and could not find anything SSL related apart from a call\n> to JsseSSLManager sslMgr = (JsseSSLManager) SSLManager.getInstance() which\n> is only done if the protocol is HTTPS.\n> \n> But perhaps I have missed something.", "is_private": false, "bug_id": 58099, "id": 184852, "time": "2015-08-30T06:18:15Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-08-30T06:18:15Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "is_private": false, "text": "Created attachment 33567\nPatch fixing this issue", "id": 188515, "time": "2016-02-17T18:45:50Z", "bug_id": 58099, "creation_time": "2016-02-17T18:45:50Z", "attachment_id": 33567}, {"count": 6, "tags": [], "bug_id": 58099, "is_private": false, "id": 188517, "attachment_id": null, "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2016-02-17T18:46:02Z", "time": "2016-02-17T18:46:02Z", "text": "*** Bug 59020 has been marked as a duplicate of this bug. ***"}, {"count": 7, "tags": [], "text": "Comment on attachment 33567\nPatch fixing this issue\n\n[New file needs an AL header]\n\nLooks like adaptee is created using double-checked locking.\nThat is not thread-safe unless protected by volatile (or a full lock, in which case no point in double-checking).\n\nGiven that the adaptee depends only on the value of CPS_HTTPS, and that is only checked at startup, there will only ever be one adaptee. So the code could perhaps use the IODH idiom instead.", "attachment_id": 33567, "bug_id": 58099, "id": 188529, "time": "2016-02-17T21:21:30Z", "creator": "sebb@apache.org", "creation_time": "2016-02-17T21:21:30Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 58099, "text": "Author: pmouawad\nDate: Wed Feb 17 21:31:24 2016\nNew Revision: 1730947\n\nURL: http://svn.apache.org/viewvc?rev=1730947&view=rev\nLog:\nBug 58099 - Performance : Lazily initialize HttpClient SSL Context to avoid its initialization even for HTTP only scenarios\nBugzilla Id: 58099\n\nAdded:\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/LazySchemeSocketFactory.java   (with props)\nModified:\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPHC4Impl.java\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/util/SlowHC4SSLSocketFactory.java\n    jmeter/trunk/xdocs/changes.xml", "id": 188531, "time": "2016-02-17T21:31:50Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2016-02-17T21:31:50Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "text": "(In reply to Sebb from comment #7)\n> Comment on attachment 33567 [details]\n> Patch fixing this issue\n> \n> [New file needs an AL header]\nfixed\n> \n> Looks like adaptee is created using double-checked locking.\n> That is not thread-safe unless protected by volatile (or a full lock, in\n> which case no point in double-checking).\n> \nThanks, used volatile.\n\n> Given that the adaptee depends only on the value of CPS_HTTPS, and that is\n> only checked at startup, there will only ever be one adaptee. So the code\n> could perhaps use the IODH idiom instead.\nDidn't do it, feel free to do it if you think it is useful.", "id": 188533, "time": "2016-02-17T21:36:46Z", "bug_id": 58099, "creation_time": "2016-02-17T21:36:46Z", "is_private": false}, {"count": 10, "tags": [], "creator": "sebb@apache.org", "is_private": false, "text": "When I wrote:\n\n\"there will only ever be one adaptee\"\n\nI meant that for a given test run, there will only be a single adaptee.\n\nHowever this may be either a HC4TrustAllSSLSocketFactory or a SlowHC4SSLSocketFactory\n\nThe commit that was applied no longer uses SlowHC4SSLSocketFactory, however AFAICT it should (as per the diff that was originally posted)", "id": 188546, "time": "2016-02-17T23:48:03Z", "bug_id": 58099, "creation_time": "2016-02-17T23:48:03Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 58099, "text": "Hi,\nNo SlowHC4SSLSocketFactory is not useful anymore, look at code it just extends HC4TrustAllSSLSocketFactory without anything specific.\nI deprecated it , we could even remove it.", "id": 188559, "time": "2016-02-18T09:07:45Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2016-02-18T09:07:45Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "text": "(In reply to Philippe Mouawad from comment #11)\n> Hi,\n> No SlowHC4SSLSocketFactory is not useful anymore, look at code it just\n> extends HC4TrustAllSSLSocketFactory without anything specific.\n\nThat's not so; it passes cps to HttpSSLProtocolSocketFactory.\nIf that's not working it needs to be fixed, not arbitrarily abandoned.\n\n> I deprecated it , we could even remove it.\n\nIn any case, this issue is entirely separate.\nRemoval of SlowHC4SSLSocketFactory would require a separate issue (but I don't think it should be removed).\n\nPlease revert the parts that removed SlowHC4SSLSocketFactory.", "is_private": false, "bug_id": 58099, "id": 188562, "time": "2016-02-18T10:29:04Z", "creator": "sebb@apache.org", "creation_time": "2016-02-18T10:29:04Z", "attachment_id": null}, {"count": 13, "tags": [], "text": "Hi Sebb,\n(In reply to Sebb from comment #12)\n> (In reply to Philippe Mouawad from comment #11)\n> > Hi,\n> > No SlowHC4SSLSocketFactory is not useful anymore, look at code it just\n> > extends HC4TrustAllSSLSocketFactory without anything specific.\n> \n> That's not so; it passes cps to HttpSSLProtocolSocketFactory.\n> If that's not working it needs to be fixed, not arbitrarily abandoned.\n> \n\nI am aware of that,look at HC4TrustAllSSLSocketFactory, it takes into account CPS also.\n\n> > I deprecated it , we could even remove it.\n> \n> In any case, this issue is entirely separate.\n\n> Removal of SlowHC4SSLSocketFactory would require a separate issue (but I\n> don't think it should be removed).\n\nNo it is not needed as HttpSSLProtocolSocketFactory does its job already\n> \n> Please revert the parts that removed SlowHC4SSLSocketFactory.\n\nIt is related as this removal occured through implementation of  LazySchemeSocketFactory.\n\nUnless I am missing something, I don't see any issue here", "is_private": false, "bug_id": 58099, "id": 188564, "time": "2016-02-18T10:45:42Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2016-02-18T10:45:42Z", "attachment_id": null}, {"count": 14, "tags": [], "text": "Author: pmouawad\nDate: Thu Feb 18 23:44:53 2016\nNew Revision: 1731172\n\nURL: http://svn.apache.org/viewvc?rev=1731172&view=rev\nLog:\nBug 58099 - Performance : Lazily initialize HttpClient SSL Context to avoid its initialization even for HTTP only scenarios\nFix regression on HTTPS tests, No route to host...\nBugzilla Id: 58099\n\nModified:\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/LazySchemeSocketFactory.java", "attachment_id": null, "id": 188590, "creator": "p.mouawad@ubik-ingenierie.com", "time": "2016-02-18T23:45:10Z", "bug_id": 58099, "creation_time": "2016-02-18T23:45:10Z", "is_private": false}, {"count": 15, "tags": [], "text": "(In reply to Philippe Mouawad from comment #13)\n> Hi Sebb,\n> (In reply to Sebb from comment #12)\n> > (In reply to Philippe Mouawad from comment #11)\n> > > Hi,\n> > > No SlowHC4SSLSocketFactory is not useful anymore, look at code it just\n> > > extends HC4TrustAllSSLSocketFactory without anything specific.\n> > \n> > That's not so; it passes cps to HttpSSLProtocolSocketFactory.\n> > If that's not working it needs to be fixed, not arbitrarily abandoned.\n> > \n> \n> I am aware of that,look at HC4TrustAllSSLSocketFactory, it takes into\n> account CPS also.\n> \n> > > I deprecated it , we could even remove it.\n> > \n> > In any case, this issue is entirely separate.\n> \n> > Removal of SlowHC4SSLSocketFactory would require a separate issue (but I\n> > don't think it should be removed).\n> \n> No it is not needed as HttpSSLProtocolSocketFactory does its job already\n> > \n> > Please revert the parts that removed SlowHC4SSLSocketFactory.\n> \n> It is related as this removal occured through implementation of \n> LazySchemeSocketFactory.\n> \n> Unless I am missing something, I don't see any issue here\n\nIt does seem to work OK.\n\nIt seems SlowHC4SSLSocketFactory was effectively made obsolete in Bugzilla 55455.\n\nSo it's not suprising that dropping it as a part of this bug is confusing.", "is_private": false, "bug_id": 58099, "id": 188591, "time": "2016-02-19T00:13:33Z", "creator": "sebb@apache.org", "creation_time": "2016-02-19T00:13:33Z", "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 58099, "attachment_id": null, "id": 188593, "time": "2016-02-19T01:08:10Z", "creator": "sebb@apache.org", "creation_time": "2016-02-19T01:08:10Z", "is_private": false, "text": "URL: http://svn.apache.org/viewvc?rev=1731180&view=rev\nLog:\nPerformance : Lazily initialize HttpClient SSL Context to avoid its initialization even for HTTP only scenarios\nSimplify by using IODH idiom\nBugzilla Id: 58099\n\nModified:\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/LazySchemeSocketFactory.java"}]