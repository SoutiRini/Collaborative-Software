[{"count": 0, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": 26533, "is_private": false, "id": 143574, "time": "2011-01-22T10:35:45Z", "bug_id": 50634, "creation_time": "2011-01-22T10:35:45Z", "text": "Created attachment 26533\nWebapp that demonstrates this error.\n\nDeploy the attached webapp and navigate to http://host/jspc/Test.jsp\n\nExpected: correct execution of the JSP.\n\nResult:\njava.lang.ClassNotFoundException: org.apache.jasper.runtime.JspSourceDependent\n        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1643)\n        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1488)\n        at java.lang.ClassLoader.defineClass1(Native Method)\n        at java.lang.ClassLoader.defineClassCond(ClassLoader.java:632)\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:616)\n        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)\n        at org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:2775)\n        at org.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoader.java:1115)\n        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1610)\n        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1488)\n        at org.apache.catalina.core.DefaultInstanceManager.loadClass(DefaultInstanceManager.java:415)\n        at org.apache.catalina.core.DefaultInstanceManager.loadClassMaybePrivileged(DefaultInstanceManager.java:397)\n        at org.apache.catalina.core.DefaultInstanceManager.newInstance(DefaultInstanceManager.java:118)\n        at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1048)\n        at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:799)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:135)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)\n        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:541)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:380)\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:243)\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:188)\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:166)\n        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:288)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:662)"}, {"count": 1, "attachment_id": null, "creator": "chris@christopherschultz.net", "is_private": false, "id": 143575, "time": "2011-01-22T10:39:59Z", "bug_id": 50634, "creation_time": "2011-01-22T10:39:59Z", "tags": [], "text": "It looks like the STR are more complicated. I deployed this into a running TC7 container by simply copying jspc.war into the webapps directory and letting autodeploy do the work.\n\nAfter that, I received the above exception.\n\nThen, I tried to access /src/Test.jsp and I got this exception:\n\nSEVERE: Servlet.service() for servlet [jsp] in context with path [/jspc] threw excep\ntion [Servlet execution threw an exception] with root cause\njava.lang.ClassNotFoundException: org.apache.jasper.util.ExceptionUtils\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:202)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:190)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:307)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:248)\n        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:342)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:306)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:240)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:164)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:100)\n        at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:541)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:380)\n        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:243)\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:188)\n        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:166)\n        at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:288)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n        at java.lang.Thread.run(Thread.java:662)\n\n\nAfter restarting the server, a startup autodeploy occurred and the page ran as I expected it would (printing 4 list items with literal \"${num}\" as the text).\n\nThen, when accessing /jspc/src/Test.jsp (the source of the JSP, no precompiling), I get a different output:\n\nExample Pre-compiled JSP\n\n    Item #{1\n    Item #2\n    Item #3\n    Item #4}\n\nAccording to Konstantin, this is probably what I should have expected in the first place.\n\nSeveral funny things are going on, here."}, {"count": 2, "tags": [], "creator": "markt@apache.org", "text": "I've tested this with the latest 7.0.x source. I can't reproduce the ClassNotFoundException. That looks like compilation was done with a very old version of JspC.\n\nOutputting ${num} is a bug. Not sure yet what the cause is.", "id": 143748, "attachment_id": null, "bug_id": 50634, "creation_time": "2011-01-28T05:31:20Z", "time": "2011-01-28T05:31:20Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 50634, "text": "Further testing shows outputting ${num} is not a bug.\n\nI suspect the web application you pre-compiled with JspC did not have a web.xml. In this case, Tomcat assumes JSP < 2.0 where EL is not supported. Hence ${num} gets treated as literal text.\n\nAdd a web.xml with an appropriate specification version and the JSP will work as intended.", "id": 143749, "time": "2011-01-28T05:46:52Z", "creator": "markt@apache.org", "creation_time": "2011-01-28T05:46:52Z", "is_private": false, "attachment_id": null}, {"count": 4, "attachment_id": null, "creator": "chris@christopherschultz.net", "is_private": false, "id": 143759, "time": "2011-01-28T12:40:39Z", "bug_id": 50634, "creation_time": "2011-01-28T12:40:39Z", "tags": [], "text": "(In reply to comment #2)\n> I've tested this with the latest 7.0.x source. I can't reproduce the\n> ClassNotFoundException. That looks like compilation was done with a very old\n> version of JspC.\n\nI was using 7.0.x/trunk at the time. I'll re-try."}, {"count": 5, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "is_private": false, "id": 143760, "time": "2011-01-28T12:50:35Z", "bug_id": 50634, "creation_time": "2011-01-28T12:50:35Z", "text": "> Further testing shows outputting ${num} is not a bug.\n> \n> I suspect the web application you pre-compiled with JspC did not have a\n> web.xml. In this case, Tomcat assumes JSP < 2.0 where EL is not supported.\n> Hence ${num} gets treated as literal text.\n\nIn fact, the webapp does have a web.xml using the 3.0 schema.\n\n> Add a web.xml with an appropriate specification version and the JSP will work\n> as intended.\n\nSure?\n\nDoes it also make sense that accessing the precompiled JSP gives me one behavior while accessing the non-precompiled JSP gives me another?\n\nI'll bet I know what happened:\n\nI pre-compiled the JSPs with no web.xml, so JspC defaulted as you say to JSP 2.0 with no EL availability.\n\nI deployed both the precompiled and source JSP into a 3.0-spec webapp, so the precompiled version and on-the-fly version operate differently.\n\nLemmie double-check and I'll VERIFY INVALID.\n\nI'm still concerned about the CNFE, though..."}, {"count": 6, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "is_private": false, "id": 143880, "time": "2011-02-01T21:18:45Z", "bug_id": 50634, "creation_time": "2011-02-01T21:18:45Z", "text": "Okay, confirmed INVALID.\n\nThe whole ${num} thing was due to my precompiling with no web.xml which resulted in different semantics from the webapp into which it was deployed."}]