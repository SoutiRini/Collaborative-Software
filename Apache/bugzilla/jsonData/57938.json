[{"count": 0, "tags": [], "bug_id": 57938, "attachment_id": 32745, "id": 183049, "time": "2015-05-19T20:56:40Z", "creator": "onrshin@gmail.com", "creation_time": "2015-05-19T20:56:40Z", "is_private": false, "text": "Created attachment 32745\nSample project to reproduce bug\n\nWhen sending a HTML form as multipart/form-data, if allowCasualMultipartParsing is set to True and any form field is empty, calling HttpServletRequest.getParts() causes NullPointerException.\n\n19-May-2015 23:30:59.912 SEVERE [http-nio-8512-exec-14] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [post] in context with path [/test] threw exception\njava.lang.NullPointerException\n\tjava.lang.String.<init>(String.java:479)\n\torg.apache.tomcat.util.http.fileupload.disk.DiskFileItem.getString(DiskFileItem.java:321)\n\torg.apache.catalina.connector.Request.parseParts(Request.java:2758)\n\torg.apache.catalina.connector.Request.getParts(Request.java:2641)\n\torg.apache.catalina.connector.RequestFacade.getParts(RequestFacade.java:1083)\n\tcom.multipart.emptytest.post.doPost(post.java:25) (<--- HttpServletRequest.getParts() here)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:648)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:729)\n\torg.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n\t...\n\n\nTo Reproduce Bug:\n\n1) Set allowCasualMultipartParsing to \"true\" in context.xml,\n2) Create a HTML form with enctype=\"multipart/form-data\",\n3) Submit the form it to a servlet that calls HttpServletRequest.getParts(),\n4) If you leave any field empty in the form you will get a NPE.\n\nExpected Results: \n\nWhether there is an empty field or not HttpServletRequest.getParts() should complete without any exceptions. Empty fields should return empty Part objects.\n\nActual Results:\n\nGot NPE.\n\nAdditional Information: \n\nWhether allowCasualMultipartParsing is true or false if the servlet is annotated as @MultipartConfig, error disappears and HttpServletRequest.getParts() behaves as expected. But since sole purpose of allowCasualMultipartParsing is the opportunity of using getParts() in a ServletFilter, this is not a solution.\n\nA sample project to reproduce bug in attachment."}, {"count": 1, "tags": [], "bug_id": 57938, "text": "Just figured out what the problem is. maxPostSize attribute of Connector in server.xml was set to -1. When allowCasualMultipartParsing is true and if there is no @MultpartConfig, a MultipartConfigElement is created in org.apache.catalina.connector.Request.parseParts using this code:\n\n\nMultipartConfigElement mce = getWrapper().getMultipartConfigElement();\n\nif (mce == null) {\n    if(context.getAllowCasualMultipartParsing()) {\n        mce = new MultipartConfigElement(null,\n                                         connector.getMaxPostSize(),\n                                         connector.getMaxPostSize(),\n                                         connector.getMaxPostSize());\n    } else {\n                ...\n\nThe last parameter of MultipartConfigElement above is fileSizeTreshold which is (from javadoc) \"the size threshold after which files will be written to disk\". \n\nAlthough it says that \"The maximum size in bytes of the POST which will be handled by the container FORM URL parameter parsing. The limit can be disabled by setting this attribute to a value less than or equal to 0. If not specified, this attribute is set to 2097152 (2 megabytes).\" for maxPostSize in documents(https://tomcat.apache.org/tomcat-8.0-doc/config/http.html#Common_Attributes), setting maxPostSize to 0 blocks all post requests for example:\n\nHTTP Status 500 - java.lang.IllegalStateException: org.apache.tomcat.util.http.fileupload.FileUploadBase$SizeLimitExceededException: the request was rejected because its size (235) exceeds the configured maximum (0)\n\nSo setting maxPostSize to 0 is not a solution for anyone who wants to allow unlimited size file uploads.\n\n\nPosible quick fix is:\n\nMultipartConfigElement mce = getWrapper().getMultipartConfigElement();\n\nif (mce == null) {\n    if(context.getAllowCasualMultipartParsing()) {\n        mce = new MultipartConfigElement(null,\n                                         connector.getMaxPostSize(),\n                                         connector.getMaxPostSize(),\n                                         Math.max(0,connector.getMaxPostSize())); //line 2671 in v8.0.22\n    } else {\n                ...\n\n\n\nI set my maxPostSize to a reasonable value as a temporary fix. But this bug and misleading documentation of maxPostSize should be fixed.", "id": 183051, "time": "2015-05-19T23:07:39Z", "creator": "onrshin@gmail.com", "creation_time": "2015-05-19T23:07:39Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Thanks for the report. These issues have been fixed in trunk (9.0.x), 8.0.x (for 8.0.24 onwards) and 7.0.x (for 7.0.63 onwards).\n\nI opted for a slightly different fix for the first issue. Negative values are now converted to 0 in the MultipartConfigElement constructor.\n\nmaxPostSize=0 was really a bug in how allowCasualMultipartParsing was implemented but I opted to switch the meaning if zero to a limit of zero since a) it is more intuitive and b) it aligns with maxSavePostSize.", "id": 183549, "time": "2015-06-16T11:14:45Z", "bug_id": 57938, "creation_time": "2015-06-16T11:14:45Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 57938, "attachment_id": null, "id": 183568, "time": "2015-06-16T19:57:38Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-06-16T19:57:38Z", "is_private": false, "text": "(In reply to Mark Thomas from comment #2)\n> maxPostSize=0 was really a bug in how allowCasualMultipartParsing was\n> implemented but I opted to switch the meaning if zero to a limit of zero\n> since a) it is more intuitive and b) it aligns with maxSavePostSize.\n\nI'm interested (since I wrote it), what was the \"real\" bug?"}, {"count": 4, "tags": [], "bug_id": 57938, "attachment_id": null, "id": 183570, "time": "2015-06-16T20:14:48Z", "creator": "markt@apache.org", "creation_time": "2015-06-16T20:14:48Z", "is_private": false, "text": "(In reply to Christopher Schultz from comment #3)\n> (In reply to Mark Thomas from comment #2)\n> > maxPostSize=0 was really a bug in how allowCasualMultipartParsing was\n> > implemented but I opted to switch the meaning if zero to a limit of zero\n> > since a) it is more intuitive and b) it aligns with maxSavePostSize.\n> \n> I'm interested (since I wrote it), what was the \"real\" bug?\n\nIt didn't handle the 0 == no limit case"}]