[{"count": 0, "tags": [], "bug_id": 52304, "attachment_id": null, "id": 152074, "time": "2011-12-08T20:06:10Z", "creator": "brandonkirsch@gmail.com", "creation_time": "2011-12-08T20:06:10Z", "is_private": false, "text": "I'm using the following <Limit> configuration to always allow OPTIONS requests for any path. Trouble begins when a client asks for OPTIONS for any URI that maps to an existing folder. Files, 404s and folders without a trailing slash remain unaffected.\n\n# Contrived (but literal!) httpd.conf snippet gets the point across\n<Location />\n        Deny from all\n        <Limit OPTIONS>\n                Allow from all\n                Satisfy any\n        </Limit>\n</Location>\n\nTrouble begins when a client asks for OPTIONS for any URI that maps to an existing folder.  Example client requests and the Apache response:\n\nClient: OPTIONS /isAFile HTTP/1.1\nApache: 200 OK\n\nClient: OPTIONS /doesNotExist HTTP/1.1\nApache: 200 OK\n\nClient: OPTIONS /doesNotExist/ HTTP/1.1\nApache: 200 OK\n\nClient: OPTIONS /isAFolder HTTP/1.1\nApache: 301 Location: /isAFolder/ (mod_dir behavior)\n\nClient: OPTIONS /isAFolder/ HTTP/1.1\nApache: 403 Forbidden (PROBLEM RESPONSE!)\n\n\nCorrect responses (200 OK) are given to all requests for files or non-existent files or folders.\n\nCorrect responses (301 Redirect) is also given to requests for real folders that are missing the trailing slash.\n\nA problem response occurs when the URI 1) Maps to a real folder and 2) Contains a trailing slash.\n\nSummary: I cannot get Apache to always allow OPTIONS requests that map to real folders.\n\nI just compiled and installed a vanilla 2.2.21 build on Linux to verify that the problem exists without any third party modules loaded."}]