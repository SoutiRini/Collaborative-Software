[{"count": 0, "tags": [], "bug_id": 2111, "attachment_id": null, "id": 2857, "time": "2001-06-11T06:40:05Z", "creator": "donald_l_taylor_jr@yahoo.com", "creation_time": "2001-06-11T06:40:05Z", "is_private": false, "text": "When using the -logfile option, for example, '-logfile build.log', *all* output \ngoes to the log, from the source I can see this is by design.\n\nWhat I wanted to do is 'echo' my progress while logging all the build results \nto a log file. Perhaps an attribute for 'echo' could be created to indicate a \nforce to System.out instead of the log file, or maybe a new task such \nas 'progress' that does this."}, {"count": 1, "tags": [], "text": "If I understand correctly, it looks like that what you want can be achieved by \nusing a custom BuildListener/BuildLogger) and pass it via the -listener/-\nlogger argument.\n\nI think it is difficult to add such feature to the core because some may be \ninterested in events A, other events B, etc... so I think it really must be \nsomething customized and nothing can be done to satisfy everyone.", "is_private": false, "id": 4090, "creator": "sbailliez@apache.org", "time": "2001-07-28T05:59:48Z", "bug_id": 2111, "creation_time": "2001-07-28T05:59:48Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "conor@apache.org", "attachment_id": null, "text": "I don't think a custom listener will work since it doesn't have access to the \noriginal System.out (the console). How about \"tail -f\" ? Can you give an \nindication of what sort of output you would like to see when logging, to give \nme an idea about what is required.", "id": 4134, "time": "2001-07-30T07:28:31Z", "bug_id": 2111, "creation_time": "2001-07-30T07:28:31Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 2111, "text": "I did create a custom build listener to get around this problem, but since I \ndon't have access to System.out I had to use a Swing-based form, which works \nfor me but certainly isn't a generic solution. All I wanted to do was use the \n<echo> task to indicate the target and task I was currently executing, that way \nI'd have a sense of where I was, or a progress if you will, in the build \nprocess.", "id": 4141, "time": "2001-07-30T09:17:09Z", "creator": "donald_l_taylor_jr@yahoo.com", "creation_time": "2001-07-30T09:17:09Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 2111, "attachment_id": null, "id": 4146, "time": "2001-07-30T09:44:18Z", "creator": "donald_l_taylor_jr@yahoo.com", "creation_time": "2001-07-30T09:44:18Z", "is_private": false, "text": "Have you folks considered using Jakarta's log4j? It would solve this problem, \nplus a whole lot more. You could have a -logcfgfile command-line argument where \nyou can point to an optional log configuration file where you can setup the \nlogging however you want.\n\nPeople have always complained about using the -verbose option and getting more \ninformation than they really need. Problem solved. If you follow the guideline \nof each class being its own category, you could specify a logging configuration \nwhere I only see the verbose output for the tasks I choose.\n\nYou want e-mail notification? Setup an SMTPAppender. You could also log to a \ndatabase, to an external logging server (using SocketAppender), anything you \nwant. The beauty is the ant source wouldn't have to change dramatically to \nsupport it. Once you add in the logging facility the user can pretty much do as \nhe pleases.\n\nOf course you'd have to have a default configuration file to support current \nant behavior, but that wouldn't be too hard to do.\n\nSeems like log4j would solve several of ant's problems. How 'bout it?"}, {"count": 5, "tags": [], "bug_id": 2111, "attachment_id": null, "id": 4256, "time": "2001-08-03T07:23:27Z", "creator": "conor@apache.org", "creation_time": "2001-08-03T07:23:27Z", "is_private": false, "text": "I have added a simple log4j listener. It expects the log4j.properties to be in \nthe directory from which you run ant. "}]