[{"count": 0, "tags": [], "bug_id": 146, "is_private": false, "id": 126, "attachment_id": null, "creator": "dev@tomcat.apache.org", "creation_time": "2000-09-27T10:56:59Z", "time": "2000-09-27T10:56:59Z", "text": "We recently upgraded our version of Tomcat 3.1.  We had \r\nactually been running 3.1 for awhile, but discovered that \r\nchanges had been made to the release being offered by \r\napache.org, even though the version number hadn't been \r\nchanged.  Indeed, some of the changes proved very \r\ndeleterious.  Under the previous release of Tomcat 3.1, \r\nI had been able to run parallel versions of a servlet off \r\nthe same running copy of the servlet engine: a \r\nproduction version and a development version. \r\nThe two servlet versions use classes with identical names \r\nbut residing of course in different locations.  \r\n(The production version is accessed via \r\nhttp://sunsite.berkeley.edu/xdlib/servlet/... \r\nand the development version via \r\nhttp://sunsite.berkeley.edu/xdlibdev/servlet/...)  \r\nThe previous release of Tomcat 3.1 had no problem keeping \r\nthese two versions of my servlet sorted out; it activated \r\nthe proper classes from the proper classpath for the \r\nversion of the servlet which the URL indicated.  \r\nBut under the new version of Tomcat 3.1, this has changed.  \r\nIf a user invokes the xdlibdev servlet (my development \r\nservlet), Tomcat will now use classes from the \r\nxdlib/servlet classpath (the production servlet classpath) \r\nif these are already loaded! In other words, it now seems \r\nonly to pay attention to the package and class names, not \r\nto the classpath that is associated with a servlet when \r\nloading classes for use. Surely this can't be considered a \r\nfeature!"}, {"count": 1, "tags": [], "bug_id": 146, "attachment_id": null, "is_private": false, "id": 986, "time": "2001-03-05T10:20:26Z", "creator": "marc.saegesser@apropos.com", "creation_time": "2001-03-05T10:20:26Z", "text": "I'm not sure about 3.1, but 3.2 uses a separate class loader for each webapp.  \nAs long as the classes aren't found using the systemwide CLASSPATH or in a jarj \nfile in tomcat/lib then the instances will remain complete separate in the \nxdlib and xdlibdev webapps."}]