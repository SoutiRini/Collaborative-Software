[{"count": 0, "tags": [], "creator": "jboynes@apache.org", "attachment_id": null, "id": 138127, "time": "2010-07-04T12:22:01Z", "bug_id": 49548, "creation_time": "2010-07-04T12:22:01Z", "is_private": false, "text": "This started with \"add some more test cases for the setting code\" and got more momentum.\n\nPatch primarily adds test cases and refactors the large \"if\" clause that sets the result into smaller methods. It also clears up IDE warnings (at least from IDEA).\n\nOne side effect was I18N of the exception message for \"SET_BAD_DEFERRED_SCOPE\" This also required changing the POM so that the resources were included (that perhaps could have been a separate patch). We could also move the resource bundles to Maven's default of src/main/resources.\n\nI18N also needed access to the original value (which was not being retained) and in conjunction with that I replaced the \"scopeSpecified\" indicator with a check on whether the \"scope\" attribute is null.\n\nI also changed the comment where the exception is thrown when target is null. This can happen as target is a request-time attribute and the spec does define this behaviour.\n\nWhen setting a bean property, the for loop now exits after setting its property rather than continuing to iterate through all of them. This should have no impact unless a bean can have two PropertyDescriptors with the same name and I don't believe it can.\n\nFinally, all throws of JspException were replaced with JspTagException as these are errors coming from a Tag Handler rather than the JSP Engine itself."}, {"count": 1, "tags": [], "bug_id": 49548, "attachment_id": 25694, "id": 138128, "time": "2010-07-04T12:23:01Z", "creator": "jboynes@apache.org", "creation_time": "2010-07-04T12:23:01Z", "is_private": false, "text": "Created attachment 25694\nRefactors SetSupport"}, {"count": 2, "tags": [], "bug_id": 49548, "attachment_id": null, "id": 138200, "time": "2010-07-06T02:35:45Z", "creator": "bayard@apache.org", "creation_time": "2010-07-06T02:35:45Z", "is_private": false, "text": "pom.xml changes applied (r960812)."}, {"count": 3, "attachment_id": null, "bug_id": 49548, "is_private": false, "id": 138202, "time": "2010-07-06T02:54:53Z", "creator": "bayard@apache.org", "creation_time": "2010-07-06T02:54:53Z", "tags": [], "text": "SetSupport and .properties changes also committed (r960817).\n\nOn the tests - what are Syntax1 and Syntax3?"}, {"count": 4, "attachment_id": null, "bug_id": 49548, "text": "(In reply to comment #3)\n> On the tests - what are Syntax1 and Syntax3?\n\nThey are references to the \"Syntax\" section in the spec. Syntax one is where a variable is set from the value attribute, syntax 3 is where a property on some target option is set. The description in the spec refers to them like that, which I will confess assumes you're looking at the spec doc :-)", "id": 138213, "time": "2010-07-06T09:20:16Z", "creator": "jboynes@apache.org", "creation_time": "2010-07-06T09:20:16Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "text": "Makes sense. I think it's a fair bit of tribal knowledge to have to pick up and I like the methodical spec based approach it leads to.\n\nsvn ci -m \"Adding more tests for SetSupport from Jeremy Boynes' patch to #49548. The Syntax1/Syntax3 notations refers to the specification. \"\nSending        impl/src/test/java/org/apache/taglibs/standard/tag/common/core/TestSetSupport.java\nTransmitting file data .\nCommitted revision 961058.", "attachment_id": null, "bug_id": 49548, "id": 138236, "time": "2010-07-06T22:24:07Z", "creator": "bayard@apache.org", "creation_time": "2010-07-06T22:24:07Z", "is_private": false}]