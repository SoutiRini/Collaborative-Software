[{"count": 0, "tags": [], "bug_id": 56343, "attachment_id": null, "text": "Hi,\n\nI believe there is a bug in  org.apache.tomcat.websocket.WsWebSocketContainer.connectToServer(Object pojo, URI path) method in the following lines:\n\nif (!ClientEndpointConfig.Configurator.class.equals(configuratorClazz)) {\n  try {\n    configurator = configuratorClazz.newInstance();\n  } catch (InstantiationException | IllegalAccessException e) {\n    throw new DeploymentException(sm.getString(\"wsWebSocketContainer.defaultConfiguratorFail\"), e);\n  }\n}\n\nI don't understand why you don't like instantiating ClientEndpointConfig.Configurator class? This is an empty / default configurator for the endpoint which has a default constructor. Because of this bug I had do specify explicitly a dummy configurator e.g.:\n\nimport javax.websocket.ClientEndpointConfig;\npublic class CustomConfigurator extends ClientEndpointConfig.Configurator {\n}\n\n@ClientEndpoint(configurator = CustomConfigurator.class)\npublic class ClientEndpoint {\n\nIMHO it's useless.\n\nCheers,\nPrzemyslaw", "id": 174237, "time": "2014-04-03T07:41:19Z", "creator": "pbielicki@gmail.com", "creation_time": "2014-04-03T07:41:19Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 56343, "attachment_id": null, "is_private": false, "id": 174241, "time": "2014-04-03T09:36:23Z", "creator": "remm@apache.org", "creation_time": "2014-04-03T09:36:23Z", "text": "There's no bug in what you describe, it will use a static instance (rather than a new instance)."}, {"count": 2, "tags": [], "bug_id": 56343, "attachment_id": null, "is_private": false, "id": 174242, "time": "2014-04-03T09:56:43Z", "creator": "pbielicki@gmail.com", "creation_time": "2014-04-03T09:56:43Z", "text": "Hi,\n\nnot really:\n\nException in thread \"main\" java.lang.NullPointerException\n\tat org.apache.tomcat.websocket.WsWebSocketContainer.connectToServer(WsWebSocketContainer.java:259)\n\tat org.apache.tomcat.websocket.WsWebSocketContainer.connectToServer(WsWebSocketContainer.java:198)\n\tat org.apache.tomcat.websocket.WsWebSocketContainer.connectToServer(WsWebSocketContainer.java:215)\n\tat WsClient.main(WsClient.java:21)\n\nCheers,\nPrzemyslaw"}, {"count": 3, "tags": [], "creator": "markt@apache.org", "text": "Please provide test case (with all source code) for the simplest possible client (I'd strongly suggest the client connects to the Tomcat WebSocket echo example on localhost, port 8080 for easy testing) that demonstrates this issue. That will enable us to figure out exactly what is going on here.", "id": 174248, "time": "2014-04-03T12:59:32Z", "bug_id": 56343, "creation_time": "2014-04-03T12:59:32Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "pbielicki@gmail.com", "text": "Created attachment 31470\nWsClient.java main class", "id": 174249, "time": "2014-04-03T13:05:11Z", "bug_id": 56343, "creation_time": "2014-04-03T13:05:11Z", "is_private": false, "attachment_id": 31470}, {"count": 5, "tags": [], "creator": "pbielicki@gmail.com", "text": "Created attachment 31471\nEchoClient.java websocket client endpoint", "id": 174250, "time": "2014-04-03T13:05:36Z", "bug_id": 56343, "creation_time": "2014-04-03T13:05:36Z", "is_private": false, "attachment_id": 31471}, {"count": 6, "attachment_id": null, "bug_id": 56343, "text": "small tip: I'm not using tomcat-websocket-api.jar - I'm using the official javax.websocket-api-1.0.jar instead", "id": 174251, "time": "2014-04-03T13:49:54Z", "creator": "pbielicki@gmail.com", "creation_time": "2014-04-03T13:49:54Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 56343, "attachment_id": null, "text": "and I found that there are some discrepancies in ClientEndpointConfig.java between Tomcat and JSR jars.\n\nIMHO you should align Tomcat WebSocket API to match the one from JSR, to avoid such nasty errors.", "id": 174252, "time": "2014-04-03T14:09:53Z", "creator": "pbielicki@gmail.com", "creation_time": "2014-04-03T14:09:53Z", "is_private": false}, {"count": 8, "tags": [], "creator": "markt@apache.org", "text": "The public API for the Tomcat implementation of the Java WebSocket 1.0 API and any other implementation (inlcuding the RI) should be identical. I was checking this regularly all the way through development so there should not be any differences. If you have spotted a difference in the public API then please open a separate Bugzilla issue for that. Note that the actual implementation beind the API may well differ.\n\nWhat appears to have happened here is that the Tomcat implementation and the RI are both correctly treating a null client configurator as meaning \"use the default NO-OP implementation\" but Tomcat and the RI have implemented that differently. The differences stem from Tomcat's desire to have a single default Configurator instance to reduce memory footprint and GC. The difference is problematic because the difference crosses the boundary between the API classes and the implementation classes.\n\nI'm leaning towards calling this a bug in Tomcat primarily because of the Javadoc for ClientEndpointConfig.Builder.configurator(). Tomcat calls this with null which arguably is the wrong thing to do. It would certainly be safer (and should have the same end result) not to call the method at all in this case.", "id": 174261, "time": "2014-04-03T22:09:32Z", "bug_id": 56343, "creation_time": "2014-04-03T22:09:32Z", "is_private": false, "attachment_id": null}, {"count": 9, "attachment_id": null, "bug_id": 56343, "text": "This has been fixed in 8.0.x for 8.0.6 onwards and in 7.0.x 7.0.54 onwards.", "id": 174292, "time": "2014-04-04T21:38:09Z", "creator": "markt@apache.org", "creation_time": "2014-04-04T21:38:09Z", "tags": [], "is_private": false}]