[{"count": 0, "tags": [], "bug_id": 10283, "attachment_id": null, "id": 18657, "time": "2002-06-27T14:33:40Z", "creator": "cote@computer.org", "creation_time": "2002-06-27T14:33:40Z", "is_private": false, "text": "I would like to suggest an enhancement to the Uptodate task (and\nCondition/uptodate).  In my particular, I have several generated files that are\ngenerated by a lot of file.  For now, I arbitrary choose one file as the target\nfile and compare all the source files to that one.\n\nInstead of specifying a mapper, I would like to directly a specify a file set of\ndestination files (or a reference to it).  I would list the task to check if the\noldest destfile is newer that the newest source file."}, {"count": 1, "tags": [], "bug_id": 10283, "attachment_id": null, "id": 21109, "time": "2002-08-15T21:08:55Z", "creator": "sbailliez@apache.org", "creation_time": "2002-08-15T21:08:55Z", "is_private": false, "text": "I'm not sure to clearly understand what you want based on your description and \nyour summary. I don't see any relation with some sort of 'destfile' (which \nname is close to 'targetfile') and a fileset(oldest)/fileset(newest)"}, {"count": 2, "tags": [], "bug_id": 10283, "attachment_id": null, "id": 21362, "time": "2002-08-20T09:13:51Z", "creator": "cote@computer.org", "creation_time": "2002-08-20T09:13:51Z", "is_private": false, "text": "Maybe it would be more clear with a example.\n\nI have a task call ejbdoclet which generate a lot of files base on some\njavasource.  For now, I have the following in my build.xml.\n\n        <uptodate property=\"prod.ejbdoclet.notRequired\">\n            <srcfiles refid=\"prod.ejbdoclet.src.fileset\"/>\n            <mapper type=\"merge\" to=\"${prod.meta.tmp.dir}/ejb-jar.xml\"/>\n        </uptodate>\n\nFor now, I check all my file against a single target file : ejb-jar.xml.  What I\nwould like would look like :\n\n        <uptodate property=\"prod.ejbdoclet.notRequired\">\n            <srcfiles refid=\"prod.ejbdoclet.src.fileset\"/>\n            <targetfiles dir=\"${build.dir}\">\n               <include name=\"metadata/ejb-jar.xml\"/>\n               <include name=\"metadata/weblogic-ejb-jar.xml\"/>\n               <include name=\"metadata/weblogic-cmp-rdbms-jar.xml\"/>\n               <include name=\"gensrc/**/*Remote.java\"/>\n               <include name=\"gensrc/**/*RemoteHome.java\"/>\n               <include name=\"gensrc/**/*Local.java\"/>\n               <include name=\"gensrc/**/*LocalHome.java\"/>\n               <include name=\"gensrc/**/*Data.java\"/>\n            </targetfiles>\n        </uptodate>\n\nwhen the property is set only when all the file in targetfiles are newer that\nthe newer file in srcfiles."}, {"count": 3, "tags": [], "bug_id": 10283, "attachment_id": null, "id": 33916, "time": "2003-03-27T13:52:03Z", "creator": "bodewig@apache.org", "creation_time": "2003-03-27T13:52:03Z", "is_private": false, "text": "What would you want to see happen if ${build.dir}/metadata/ejb-jar.xml isn't\nthere at all?  The fileset wouldn't mind and uptodate would happily consider\nthe targetfiles up-to-date."}, {"count": 4, "tags": [], "bug_id": 10283, "attachment_id": null, "id": 33928, "time": "2003-03-27T15:07:31Z", "creator": "cote@computer.org", "creation_time": "2003-03-27T15:07:31Z", "is_private": false, "text": "No the opposite, the targetfiles are consider update only if they all exist and\nthe oldest targetfile is younger that that the youngest sourcefile.\n\nIf you assume that nonexisting file are ok, I would have to make and between an\navailable element and an uptodate element."}, {"count": 5, "tags": [], "bug_id": 10283, "attachment_id": null, "is_private": false, "id": 33930, "time": "2003-03-27T15:18:52Z", "creator": "bodewig@apache.org", "creation_time": "2003-03-27T15:18:52Z", "text": "I've not been clear enough.\n\nWhat I described, is the behavior of fileset.  Your idea wouldn't catch the missing\ntargetfile as filesets don't care if some include patterns don't match anything.\n\n<filelist> may be what you want, but then you don't get any pattern matching.\n\nWhat are you going to do, if you detect that something is not uptodate?\nMay <dependset> help you?  You could probably use <dependset> followed by\n<available> for ejb-jar.xml.  If it is still there, things have been up-to-date."}, {"count": 6, "tags": [], "bug_id": 10283, "attachment_id": null, "id": 33938, "time": "2003-03-27T15:42:12Z", "creator": "ddevienne@lgc.com", "creation_time": "2003-03-27T15:42:12Z", "is_private": false, "text": "Actually, <uptodate> and <dependset> are pretty much superseded by Peter's \n<outofdate> available from Ant-Contrib on SF.NET. Go get it, and you'll be \nhappy you did ;-) See recent ant-contrib-dev mailing lists for recent posts \nabout it's use. --DD"}]