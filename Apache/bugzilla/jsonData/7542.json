[{"count": 0, "tags": [], "creator": "isberg@parc.com", "text": "javac and jikes both support argument files (specified on the command line as @\n{path}) for passing large lists of files to the compiler.  I'd like to avoid \nconverting my list files to ant form, and this interface would be required when \nproviding an taskdef for the AspectJ ajc compiler based on the build.compiler \nproperty.\n\nIf this is acceptable, I can submit a patch.", "id": 12425, "attachment_id": null, "bug_id": 7542, "creation_time": "2002-03-27T21:18:42Z", "time": "2002-03-27T21:18:42Z", "is_private": false}, {"count": 1, "tags": [], "text": "Isn't the format the same you'd use for <patternset includesfile=\"....\" />?\nI.e. one filename per line, file names are relative to the root of source tree.\n", "attachment_id": null, "id": 12737, "creator": "bodewig@apache.org", "time": "2002-04-03T11:55:36Z", "bug_id": 7542, "creation_time": "2002-04-03T11:55:36Z", "is_private": false}, {"count": 2, "tags": [], "creator": "isberg@parc.com", "attachment_id": null, "text": "Diane Holt kindly pointed this out, and I should have updated the bug to \nreflect why this is needed to support the AspectJ compiler (ajc).\n\nInterpreting them as includes works ok for javac, though it does not support \nfiles listing full paths.\n\nIt doesn't work well for implementing the AspectJ compiler, ajc, using \nbuild.properties:\n- ajc has options not in Javac, which we can support using argfiles to avoid \ntweaking the Javac taskdef interface.  The current alternative of supporting \nour own taskdef interface makes it harder to implement switching between javac \nand ajc.\n- ajc also permits other argfiles to be included, which permits recursive \ndefinitions essential to combining source subsets effectively\n- most AspectJ developers use argfiles because all sources must be listed on \nthe command line and they have to include AspectJ and Java sources in the same \ntree to preserve their IDE views.\n- ajc users also compiling from the command line use argfiles already; not \nsupporting argfiles duplicates the build semantics unnecessarily.\n\nI think a new argfile option would not break any existing ant scripts or \nCompilerAdapter implementations, and since both Javac and Jikes support it, \ntheir CompilerAdapter implementations would be easy to upgrade.\n\nI'm attaching a verbose explanation if you want more details.", "id": 12766, "time": "2002-04-03T16:08:38Z", "bug_id": 7542, "creation_time": "2002-04-03T16:08:38Z", "is_private": false}, {"count": 3, "tags": [], "creator": "isberg@parc.com", "attachment_id": 1469, "text": "Created attachment 1469\nverbose rationale for a new argfile option", "id": 12767, "time": "2002-04-03T16:09:23Z", "bug_id": 7542, "creation_time": "2002-04-03T16:09:23Z", "is_private": false}, {"count": 4, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "With Ant 1.5 you can use <compilerarg> to pass arbitrary additional arguments\ndown to the compiler.  Note that the compiler there attribute is optional.", "id": 25925, "time": "2002-11-08T13:40:39Z", "bug_id": 7542, "creation_time": "2002-11-08T13:40:39Z", "is_private": false}]