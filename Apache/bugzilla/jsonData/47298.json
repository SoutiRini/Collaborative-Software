[{"count": 0, "tags": [], "creator": "james.hoare2@ntlworld.com", "attachment_id": null, "is_private": false, "id": 127554, "time": "2009-06-02T05:38:02Z", "bug_id": 47298, "creation_time": "2009-06-02T05:38:02Z", "text": "Hi, our app currently relies on using the attribute emptysessionpath=true on the ajp connector due to having most of our \nurls not containing the context path of our web app. \n\nWe are having trouble with the jvmroute switching as the Tomcat code doesn't appear to \ncheck if the jvmroute is valid for that node? I noticed in the \norg.apache.catalina.session.ManagerBase there is some code that is \ncommented out, which would fix the route replacement.\n\n\nIs it possible to uncomment the route replacement check below in ManagerBase?\n\n\ncode from ManagerBase:\n\nif (sessionId == null) {\n            sessionId = generateSessionId();\n        // FIXME WHy we need no duplication check?\n        /*        \n             synchronized (sessions) {\n                while (sessions.get(sessionId) != null) { // Guarantee\n                    // uniqueness\n                    duplicates++;\n                    sessionId = generateSessionId();\n                }\n            }\n        */\n           \n            // FIXME: Code to be used in case route replacement is needed\n            /*\n        } else {\n            String jvmRoute = getJvmRoute();\n            if (getJvmRoute() != null) {\n                String requestJvmRoute = null;\n                int index = sessionId.indexOf(\".\");\n                if (index > 0) {\n                    requestJvmRoute = sessionId\n                            .substring(index + 1, sessionId.length());\n                }\n                if (requestJvmRoute != null && \n!requestJvmRoute.equals(jvmRoute)) {\n                    sessionId = sessionId.substring(0, index) + \".\" + \njvmRoute;\n                }\n            }\n            */\n        }"}, {"count": 1, "tags": [], "text": "We have uncommented the route node replacement code in ManasgerBase and built from source and this seems to be working on our QA environment. \n\nSo is it possible to get this into the next point release?", "attachment_id": null, "id": 127580, "creator": "james.hoare2@ntlworld.com", "time": "2009-06-03T02:21:13Z", "bug_id": 47298, "creation_time": "2009-06-03T02:21:13Z", "is_private": false}, {"count": 2, "tags": [], "text": "When we take a node down for maintenaince we experience problems with the exisitng sessions that were created on that node. These sessions are  bouncing between the other nodes, as the worker has been removed from the mod_jk workers file. \n\nTherefore, we need the susbsequent check in ManagerBase to replace the jvm route with the local node if they are different.", "attachment_id": null, "id": 127874, "creator": "james.hoare2@ntlworld.com", "time": "2009-06-11T06:07:19Z", "bug_id": 47298, "creation_time": "2009-06-11T06:07:19Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 47298, "text": "James, I see your issue. \nWhile the documentation http://tomcat.apache.org/tomcat-6.0-doc/config/http.html\nonly has the behavior documented as \"setting cookie Path=/\" it over 4 years ago also introduced a side effect of creating a session with the supplied ID.\n\nThis behavior is too old to be changed in the way you requested, even though its not properly documented.\n\nIn Tomcat 7 (Servlet 3.0) there is a standard way of configuring the session cookie paramneters (such as path) so this wont be an issue.\n\nFor Tomcat 6, I will attach a simple code solution that would work to rewrite the JVM route in a Valve to solve your problem.\n\nI will therefor close the issue as WONT FIX.\n\nPlease see my attached valve for how you could solve your specific use case.", "id": 127887, "time": "2009-06-11T09:28:36Z", "creator": "fhanik@apache.org", "creation_time": "2009-06-11T09:28:36Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "Created attachment 23796\nWork around for undocumented behavior of emptySessionPath", "attachment_id": 23796, "id": 127888, "creator": "fhanik@apache.org", "time": "2009-06-11T09:29:56Z", "bug_id": 47298, "creation_time": "2009-06-11T09:29:56Z", "is_private": false}]