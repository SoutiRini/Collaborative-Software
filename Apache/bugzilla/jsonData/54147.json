[{"count": 0, "tags": [], "bug_id": 54147, "attachment_id": 29601, "text": "Created attachment 29601\nPatch for the DOMElementWriter class\n\nOur Unit Test contains keeps failing with java.lang.OutOfMemory exception when the test results are written into the XML/text file.\nFirst problem was solved by applying the patch from patch from the https://issues.apache.org/bugzilla/show_bug.cgi?id=45536.\n\nBut it still does not helped, and the exception is still thrown:\n\n[epos junit] Exception in thread \"main\" java.lang.OutOfMemoryError: Java heap space\n[epos junit] \tat java.lang.StringCoding$StringDecoder.decode(StringCoding.java:133)\n[epos junit] \tat java.lang.StringCoding.decode(StringCoding.java:173)\n[epos junit] \tat java.lang.StringCoding.decode(StringCoding.java:185)\n[epos junit] \tat java.lang.String.<init>(String.java:570)\n[epos junit] \tat java.lang.String.<init>(String.java:593)\n[epos junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:547)\n[epos junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1052)\n[epos junit] \tat org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:906)\n\nAfter a short investigation I have found, that the problem lies in the conversion of the DOM representation into the XML/Text file, caused by multiple allocation of the memory for storing of the string data of the CDATA element.\n\nI have skipped the copy of the CDATA into the memory, the data will be written directly into the output stream, instead (see the attached patch).", "id": 163457, "time": "2012-11-15T12:30:07Z", "creator": "branislav.hanacek@hp.com", "creation_time": "2012-11-15T12:30:07Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 54147, "attachment_id": null, "is_private": false, "id": 163989, "time": "2012-12-09T15:35:24Z", "creator": "dtrebbien@gmail.com", "creation_time": "2012-12-09T15:35:24Z", "text": "1.  Rather than moving and renaming the encodedata() method, why not make the necessary changes in place? This way, history is better preserved.\n\n2.  The new implementation is not correct.  It writes out \"]]]]><![CDATA[>\" as soon as it sees \"]]\", but this means that \"]]>\" is replaced with \"]]]]><![CDATA[>>\".\n\nWhat you could do is write out \"]]]]><![CDATA[\" instead.  Though, this slightly changes the behavior (i.e. instead of escaping \"]]>\", it actually escapes \"]]\") and the JavaDoc comment would need to be updated.\n\n3.  Because characters are written individually in the new code, there is likely a negative impact on performance."}, {"count": 2, "attachment_id": 29734, "creator": "dtrebbien@gmail.com", "is_private": false, "id": 163990, "time": "2012-12-09T15:38:26Z", "bug_id": 54147, "creation_time": "2012-12-09T15:38:26Z", "tags": [], "text": "Created attachment 29734\nAlternative patch\n\nhttps://github.com/dtrebbien/ant/commit/3b44cab456780e9976acdbe39b74c5f09f351a27"}, {"attachment_id": 29735, "tags": [], "bug_id": 54147, "text": "Created attachment 29735\nTest program\n\nI used this test program to check my suggested implementation of encodedata(Writer, String).", "count": 3, "id": 163991, "time": "2012-12-09T15:45:45Z", "creator": "dtrebbien@gmail.com", "creation_time": "2012-12-09T15:45:45Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 54147, "attachment_id": null, "text": "slipped into svn revision 1556001 by accident when it should have been a separate commit.  second part is svn revision 1556004", "id": 172124, "time": "2014-01-06T20:00:01Z", "creator": "bodewig@apache.org", "creation_time": "2014-01-06T20:00:01Z", "is_private": false}]