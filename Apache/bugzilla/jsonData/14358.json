[{"count": 0, "tags": [], "creator": "robert.widmer@omv.com", "is_private": false, "text": "The supplied rotatelogs tool in Apache 1.3 only allows a fixed UTC offset \nvalue. So 2 times a year the config has to be changed.\nI added some code in rotatelogs.c to use the local TZ settings automatically. \nOn the command line the last option is utc_offset in minutes. I added a new \nvalue of \"TZ\" instead of minutes to use the local time UTC offset with daylight \nsavings.\n\nThis is the diff -C3 old.c new.c:\n\n*** rotatelogs.c.orig   Wed Dec 26 18:14:06 2001\n--- rotatelogs.c        Tue Oct 29 22:21:49 2002\n***************\n*** 4,9 ****\n--- 4,12 ----\n   * Contributed by Ben Laurie <ben@algroup.co.uk>\n   *\n   * 12 Mar 1996\n+  *\n+  * 28 Oct 2002: added UTC offset using TZ settings\n+  * by Robert Widmer <robert.widmer@omv.com>\n   */\n\n\n***************\n*** 18,29 ****\n  #define MAX_PATH       1024\n  #endif\n\n  int main (int argc, char **argv)\n  {\n      char buf[BUFSIZE], buf2[MAX_PATH], errbuf[ERRMSGSZ];\n      time_t tLogEnd = 0, tRotation;\n      int nLogFD = -1, nLogFDprev = -1, nMessCount = 0, nRead, nWrite;\n!     int utc_offset = 0;\n      int use_strftime = 0;\n      time_t now;\n      char *szLogRoot;\n--- 21,43 ----\n  #define MAX_PATH       1024\n  #endif\n\n+ /* RW: return current locale UTC offset */\n+ int local_offset (void)\n+ {\n+     time_t now = time(NULL);\n+     struct tm *local_tm = localtime(&now);\n+     struct tm *gm_tm = gmtime(&now);\n+     time_t local_t = mktime(local_tm);\n+     time_t gm_t = mktime(gm_tm);\n+     return (local_t - gm_t);\n+ }\n+\n  int main (int argc, char **argv)\n  {\n      char buf[BUFSIZE], buf2[MAX_PATH], errbuf[ERRMSGSZ];\n      time_t tLogEnd = 0, tRotation;\n      int nLogFD = -1, nLogFDprev = -1, nMessCount = 0, nRead, nWrite;\n!     int utc_offset = 0, use_TZ = 0;\n      int use_strftime = 0;\n      time_t now;\n      char *szLogRoot;\n***************\n*** 54,65 ****\n                  \"starts (N.B. this time will always be a\\nmultiple of the \"\n                  \"rotation time, so you can synchronize cron scripts with \nit).\\n\"\n                  \"At the end of each rotation time a new log is started.\\n\");\n          exit(1);\n      }\n\n      szLogRoot = argv[1];\n      if (argc >= 4) {\n!         utc_offset = atoi(argv[3]) * 60;\n      }\n      tRotation = atoi(argv[2]);\n      if (tRotation <= 0) {\n--- 68,91 ----\n                  \"starts (N.B. this time will always be a\\nmultiple of the \"\n                  \"rotation time, so you can synchronize cron scripts with \nit).\\n\"\n                  \"At the end of each rotation time a new log is started.\\n\");\n+\n+         /* RW: additional usage info for the offset parameter*/\n+         fprintf(stderr,\n+                 \"\\nAn offset value of \\\"TZ\\\" will use the TZ settings \"\n+                 \"to calculate the UTC offset.\\n\");\n          exit(1);\n      }\n\n      szLogRoot = argv[1];\n      if (argc >= 4) {\n!         /* RW: UTC offset may be a number or the string \"TZ\" */\n!         if (argv[3][0] == 'T') {\n!             utc_offset = local_offset();\n!             use_TZ = 1;\n!         }\n!         else {\n!             utc_offset = atoi(argv[3]) * 60;\n!         }\n      }\n      tRotation = atoi(argv[2]);\n      if (tRotation <= 0) {\n***************\n*** 82,87 ****\n--- 108,116 ----\n          }\n          if (nLogFD < 0) {\n              time_t tLogStart = (now / tRotation) * tRotation;\n+             /* RW: refresh utc offset for the new file */\n+             if (use_TZ)\n+                 utc_offset = local_offset();\n              if (use_strftime) {\n                  struct tm *tm_now;\n                  tm_now = gmtime(&tLogStart);", "id": 25870, "time": "2002-11-07T15:43:31Z", "bug_id": 14358, "creation_time": "2002-11-07T15:43:31Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 14358, "attachment_id": null, "id": 65579, "time": "2004-10-23T11:31:12Z", "creator": "jorton@redhat.com", "creation_time": "2004-10-23T11:31:12Z", "is_private": false, "text": "2.0.51 and later support using local time rather than UTC with an -l flag, which\nshould fix this."}]