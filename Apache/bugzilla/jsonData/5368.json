[{"count": 0, "tags": [], "bug_id": 5368, "is_private": false, "text": "In the situation where both client and server are passing session tracking\ntokens around (via jsessionid in the URL or JSESSIONID cookie), Valves attached\nto the Catalina pipeline should have access to a non-new session on the second\nrequest to the servlet container.\n\nAs of CVS HEAD today, session state does not change from new to old until the\nStandardContextValve (SCV) is called at the end of the pipeline (immediately\nbefore it\ninvokes the Servlet wrapper).  If Valves attached to the pipeline before SCV are\ncalled, to them the session will appear to be new.  According to version 2.3 of\nthe servlet spec, a session is new if:\n\n* The client does not yet know about the session.\n* The client chooses not to join a session. This implies that the servlet\ncontainer has no mechanism by which to associate a request with a previous request.\n\nNeither of the above are true during the second request to Catalina in the\nscenario I'm describing, and the current implementation of SCV does the Right\nThing as per the spec.  However, SCV takes action too late.  The block which\ncalls StandardSession.access() in SCV should be moved to the beginning of the\npipeline, giving Valves attached in the middle access to a session whose state\nhas been set appropriately.", "id": 8792, "time": "2001-12-11T16:07:56Z", "creator": "dlr@finemaltcoding.com", "creation_time": "2001-12-11T16:07:56Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 5368, "is_private": false, "text": "Added Jason Brittain to CC list.\n", "id": 8793, "time": "2001-12-11T16:11:25Z", "creator": "dlr@finemaltcoding.com", "creation_time": "2001-12-11T16:11:25Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 5368, "is_private": false, "count": 2, "id": 8855, "time": "2001-12-12T12:36:22Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2001-12-12T12:36:22Z", "text": "Doing something like this makes sense to me.  Implementing it would seem to\ninvolve the following:\n\n* Modify o.a.c.Pipeline to include a method that lets\n  you stick a Valve at the head of the chain instead\n  of the end.\n\n* Modify o.a.c.core.StandardPipeline to implement this\n\n* Modify o.a.c.startup.ContextConfig to add a new valve\n  containing the session.access() call.\n\nDoes this sound like a reasonable approach?\n"}, {"count": 3, "tags": [], "bug_id": 5368, "text": "That is a perfect solution.\n", "id": 8861, "time": "2001-12-12T13:32:04Z", "creator": "dlr@finemaltcoding.com", "creation_time": "2001-12-12T13:32:04Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 5368, "text": "Attaching a sample implementation.  StandardContextValve is currently added to\nthe pipeline by o.a.c.core.StandardContext, so I add the new Valve in the same\nspot (rather than in o.a.c.startup.ContextConfig).  ContextConfig did reference\nSCV, but only as an optimization when searching for an authenticator.\n\n\nThe notFound() method is currently duplicated in both the StandardContextValve,\nand the new StandardInitialValve.  Also, I'm not especially attached to the\nnaming scheme for the new Valve (which is based on the word \"initial\"), just\nwanted to get a patch together.\n", "id": 8874, "time": "2001-12-12T16:37:09Z", "creator": "dlr@finemaltcoding.com", "creation_time": "2001-12-12T16:37:09Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": 895, "creator": "dlr@finemaltcoding.com", "text": "Created attachment 895\nAllows use of container valves at both beginning and end of the pipeline", "id": 8875, "time": "2001-12-12T16:38:55Z", "bug_id": 5368, "creation_time": "2001-12-12T16:38:55Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "dlr@finemaltcoding.com", "attachment_id": null, "is_private": false, "id": 9178, "time": "2001-12-27T13:31:38Z", "bug_id": 5368, "creation_time": "2001-12-27T13:31:38Z", "text": "Will someone take a look at the patch attached to this pipeline bug?  It's been\nsitting for a while.\n\nThanks, Dan"}, {"count": 7, "tags": [], "bug_id": 5368, "is_private": false, "text": "I've looked at the patch, but I'm not convinced that kind of extensive change is\nneeded here, since we should be able to call the session access() in the\nStandardHostValve right after the context is mapped (and therfore before any\nvalve in the \"context pipeline\" is called). Or did I miss something ?", "id": 9349, "time": "2002-01-04T06:39:57Z", "creator": "remm@apache.org", "creation_time": "2002-01-04T06:39:57Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 5368, "text": "The nightly for 01/05 will contain the fix I was talking about.", "id": 9353, "time": "2002-01-04T08:34:42Z", "creator": "remm@apache.org", "creation_time": "2002-01-04T08:34:42Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 5368, "text": "Remy:\n\nThe fix that you checked in looks good to me.  We'll try it out and\nlet you know soon if the problem is fixed.\n\nThanks for getting this into 4.0.2 -- it's going to be a very nice\nrelease!", "id": 9355, "time": "2002-01-04T08:56:30Z", "creator": "jason_brittain@yahoo.com", "creation_time": "2002-01-04T08:56:30Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 5368, "text": "Before your change, I wasn't aware of another method of getting operations added\nto the beginning of Catalina's processing flow.  Calling the Session.access() in\nthe StandardHostValve right after the context is mapped satisfies this requirement.\n\nI've re-built from today's source and verified this fix with my Valve\nimplementations.  Thanks Remy!\n\n- Dan\n\n", "id": 9361, "time": "2002-01-04T12:35:28Z", "creator": "dlr@finemaltcoding.com", "creation_time": "2002-01-04T12:35:28Z", "is_private": false, "attachment_id": null}]