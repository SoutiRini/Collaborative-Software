[{"count": 0, "tags": [], "creator": "brnrd@freebsd.org", "attachment_id": null, "id": 107278, "time": "2007-08-27T03:20:46Z", "bug_id": 43218, "creation_time": "2007-08-27T03:20:46Z", "is_private": false, "text": "Setup:\n\nListen *:443\nListen *:444 https\n\n<Virtualhost *:443>\nServerName web1.example.com\nServerAlias www.example.com\nSSLCertificateFile ssl/www.crt\nSSLCertificateKeyFile ssl/www.key\nErrorLog logs/error_443.log\nProxyPass / http://app1.example.com\nProxyPassReverse / http://app1.example.com\n</VirtualHost>\n\n<Virtualhost *:444>\nServerName web1.example.com\nServerAlias www01.example.com\nSSLCertificateFile ssl/www01.crt\nSSLCertificateKeyFile ssl/www01.key\nErrorLog logs/error_444.log\nProxyPass / http://app2.example.com\n<Location />\n   ProxyPassReverse /\n</Location>\n</VirtualHost>\n\nwww.crt CN = www.example.com\nwww01.crt CN = www01.example.com\n\nSymptoms:\nAt startup I find in error_444.log: \"[warn] RSA server certificate CommonName\n(CN) `www.example.com' does NOT match server name!?\"\nWhen opening https://www.example.com:444 I get the www.example.com cert\n\nChecks performed:\n* If I break the cert or key filename in the 444 vhost, apache won't start with\nan error on the filename so it is trying to open the file\n* If I switch the order of the vhosts, I get the www01.example.com cert for both\nvhosts and the CN warning is in the error_443.log file\n* Both the apache-2.2.4_1 port on FreeBSD 6.2 and the ssl build from\napachelounge.com behave the same\n* When the ServerName is changed on one of the vhosts, the correct cerificate is\nissued for each vhost"}, {"count": 1, "tags": [], "creator": "wckits@rit.edu", "attachment_id": null, "is_private": false, "id": 114083, "time": "2008-02-27T15:58:15Z", "bug_id": 43218, "creation_time": "2008-02-27T15:58:15Z", "text": "We had the same problem and found a workaround / solution:\n\nAppend the port to the ServerName directive in each virtual host so you have:\n\nServerName web1.example.com:443\nServerName web1.example.com:444\n\nAnd it will work like a champ.\n\nI think there is still a BUG here - if you specify the certificate CHAIN file different for each vhost you get the right chain file... so it is inconsistent."}, {"count": 2, "tags": [], "creator": "wckits@rit.edu", "attachment_id": null, "id": 114099, "time": "2008-02-28T06:59:01Z", "bug_id": 43218, "creation_time": "2008-02-28T06:59:01Z", "is_private": false, "text": "Sorry I forgot to mention, Comment #1 applies to Server version: Apache/2.2.6 (Unix), so that workaround is only tested there, and the base issue still exists."}, {"id": 124176, "tags": [], "bug_id": 43218, "attachment_id": null, "count": 3, "text": "CC myself on FreeBSD related bugs", "time": "2009-01-18T16:19:22Z", "creator": "pgollucci@apache.org", "creation_time": "2009-01-18T16:19:22Z", "is_private": false}, {"count": 4, "tags": [], "creator": "asf@bapf.de", "attachment_id": null, "is_private": false, "id": 141099, "time": "2010-10-27T11:19:25Z", "bug_id": 43218, "creation_time": "2010-10-27T11:19:25Z", "text": "We're having the same bug with apache httpd 2.2.17 on linux and more: We don't just get a warning, the server refuses to start with this kind of configuration (which worked fine up until now).\n\nWe also found the same workaround as described in comment #1.\n\nWhile this workaround is working we're having quite a few problems with it:\nWhen using mod_proxy with this workaround the ProxyPassReverse-directive substitutes the internal hostnames with the external hostname _and_ the port (as specified in the ServerName-Directive) which causes a lot of hazzle if the internal host isn't ssl-enabled. (We regularly end up with redirects in the form of http://ext-hostname:443/path)\n\nI know that this kind of NameBasedVirtualHosting for SSL-Hosts never was officially supported but a lot of people depend heavily on it.\n\nMy question is now: Is the requirement of the port in the ServerName-directive a bug and can I expect a fix for this or is it working as intended (as part of the changes necessary for server name indication)?"}, {"count": 5, "tags": [], "creator": "jorton@redhat.com", "is_private": false, "id": 144223, "attachment_id": null, "bug_id": 43218, "creation_time": "2011-02-12T10:10:39Z", "time": "2011-02-12T10:10:39Z", "text": "This issue is a side-effect of some mod_ssl internals: mod_ssl caches the private key and certificate across restarts, so the passphrase for an encrypted privkey is not required after first startup.  (Actually I don't know why it caches certs as well as privkeys, it seems unnecessary.)  This dates way back in mod_ssl history and predates SNI support.\n\nInternally two hash tables \"servername -> decoded cert\" and \"servername -> decoded key\" are kept, so it is here that the ServerName uniqueness matters.\n\nIt is certainly correct to be including the ports in the ServerName directive, and arguably a configuration error to not do so.  If this leads to any confusion with proxy config perhaps the UseCanonical* settings also need tweaking.\n\nThere is no obvious way to \"fix\" this situation; I think ideally it would be caught as a configuration error instead, rather than being silently accepted yet acting in a surprising fashion."}, {"count": 6, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 169389, "time": "2013-08-13T02:13:13Z", "bug_id": 43218, "creation_time": "2013-08-13T02:13:13Z", "is_private": false, "text": "*** Bug 55407 has been marked as a duplicate of this bug. ***"}, {"count": 7, "tags": [], "creator": "calestyo@scientia.net", "attachment_id": null, "is_private": false, "id": 169531, "time": "2013-08-17T01:38:06Z", "bug_id": 43218, "creation_time": "2013-08-17T01:38:06Z", "text": "I've reported the same as bug #55047, and while this report here notes that it happens on different ports (which just hit me now)... I only noted that it also happens on the same port (i.e. multiple vhosts on the same IP:port, that just differ in ServerAlias).\n\nAs shown at #557047, I'd have expected that Apache then simply takes the \"first\" vhost when the ServerName is given as Host: header... and the corresponding vhost when any ServerAlias is given as Host: header.\n\n\nOf course you may say now that this is just cosmetic, and I could simply change the ServerName of the second vhost (as it won't be ever matched anyway)... it's a bit more... as ServerName is used as default in some places (canonical name and such)... and e.g. people may want to use that to get things like redirects back to the first (canonical) vhost.\n\n\n\nAnyway... that issue is 6 years old now... is anything ever going to happen?"}, {"count": 8, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 172497, "time": "2014-01-19T19:23:50Z", "bug_id": 43218, "creation_time": "2014-01-19T19:23:50Z", "is_private": false, "text": "*** Bug 49995 has been marked as a duplicate of this bug. ***"}]