[{"count": 0, "tags": [], "bug_id": 51283, "attachment_id": 27082, "id": 146708, "time": "2011-05-28T12:08:41Z", "creator": "michael_furman@hotmail.com", "creation_time": "2011-05-28T12:08:41Z", "is_private": false, "text": "Created attachment 27082\nThe AuthenticatorBase.java file with fix that invalidating of an existing HTTP session after an authentication\n\nSession Fixation Vulnerability is solved recently in Tomcat 6 and in Tomcat 7.\nUnfortunately, Session Fixation is solved without an invalidating of an existing HTTP session.\n\nI do agree, that generation of new session ID solves many Session Fixation attacks.\nAny case, an advanced attacker is able to put a vulnerable object in a known HTTP session and then force the session on a user.\nPlease not that in this case the HTTP session will have new ID and an attacker will not be able to access the session from a client. Any case, with the vulnerable object in the session he can access to other object and may be even to send it remotely.\nI do recommend to change the implementation and to invalidate the existing HTTP session after the authentication.\nPlease find attached code with a fix.  I tested this code in my development environment.\nBest regards,\n  Michael \nSecurity Architect"}, {"count": 1, "tags": [], "bug_id": 51283, "attachment_id": null, "id": 146712, "time": "2011-05-28T15:14:09Z", "creator": "markt@apache.org", "creation_time": "2011-05-28T15:14:09Z", "is_private": false, "text": "*** Bug 51284 has been marked as a duplicate of this bug. ***"}, {"count": 2, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 146718, "time": "2011-05-28T18:29:11Z", "bug_id": 51283, "creation_time": "2011-05-28T18:29:11Z", "tags": [], "text": "Users can't place objects into the session. Only the application can do that.\n\nIf the application is doing something that is security sensitive before authentication, I would class that as an application flaw.\n\nI'm having trouble coming up with an scenarios where this would be an issue that I don't view as an application rather than container problem. With such a scenario I could see an argument to make the behaviour on authentication configurable (do nothing / change ID / create new session). Without such a scenario this issue is going to get resolved as invalid."}, {"count": 3, "tags": [], "bug_id": 51283, "attachment_id": null, "is_private": false, "id": 146815, "time": "2011-06-02T13:00:18Z", "creator": "markt@apache.org", "creation_time": "2011-06-02T13:00:18Z", "text": "As per my previous comment."}, {"count": 4, "tags": [], "bug_id": 51283, "attachment_id": null, "is_private": false, "id": 146860, "time": "2011-06-04T03:45:53Z", "creator": "michael_furman@hotmail.com", "creation_time": "2011-06-04T03:45:53Z", "text": "(In reply to comment #3)\n> As per my previous comment.\n\nHi!\nWhy you do not want to solve at as you suggested in the previous comment?\nI think session fixation configurable (do nothing / change ID / create new session) is great suggestion.\n\nToday it is only do nothing / change ID"}, {"attachment_id": null, "tags": [], "bug_id": 51283, "is_private": false, "count": 5, "id": 146861, "time": "2011-06-04T04:40:14Z", "creator": "chris@christopherschultz.net", "creation_time": "2011-06-04T04:40:14Z", "text": "Mark was suggesting that if a plausible use-case were to be presented where an application should need the container to protect users from itself, he might consider such a feature.\n\nSince no use-case was presented, he marked this bug as INVALID.\n\nI tend to agree: if the users cannot trust the webapp, they should be using it."}, {"attachment_id": null, "tags": [], "bug_id": 51283, "is_private": false, "count": 6, "id": 146888, "time": "2011-06-06T13:48:07Z", "creator": "chris@christopherschultz.net", "creation_time": "2011-06-06T13:48:07Z", "text": "(In reply to comment #5)\n> I tend to agree: if the users cannot trust the webapp, they should be using it.\n\nUmm... I meant \"...should NOT be using it\", of course."}]