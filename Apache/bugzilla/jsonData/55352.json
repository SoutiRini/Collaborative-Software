[{"count": 0, "tags": [], "text": "Hi.\n\nThe <Proxy> directive, matches even if just a prefix string is matched, e.g. having:\n\n       <Location \"/foobar\">\n                ProxyPass \"http://localhost:11371/foobar\"\n        </Location>\n\n        <Proxy http://localhost:11371/foo>\n                Order allow,deny\n                Allow from all\n        </Proxy>\n\n\nWill grant the access as http://localhost:11371/foo is a prefix of http://localhost:11371/foobar.\n\nWhil one would expect this for the ProxyMatch version, it contradicts any behaviour of all the other <foo> vs. <fooMatch> blocks.\n\n\n\nSimilarly, \"*\" in case of <Proxy> seems to also match \"/\", again \"*\" in all other blocks (not talking about the fooMatch blocks of course) doesn't.\n\n\nCheers,\nChris.", "attachment_id": null, "bug_id": 55352, "id": 169096, "time": "2013-08-04T21:31:10Z", "creator": "calestyo@scientia.net", "creation_time": "2013-08-04T21:31:10Z", "is_private": false}, {"count": 1, "tags": [], "creator": "calestyo@scientia.net", "is_private": false, "id": 169555, "attachment_id": null, "bug_id": 55352, "creation_time": "2013-08-18T16:07:57Z", "time": "2013-08-18T16:07:57Z", "text": "Escalating severity, as this is IMHO quite some security problem, as it will typically allow access to content that should not be accessible.\n\nIMHO a CVE needs to be registered for this."}, {"count": 2, "tags": [], "bug_id": 55352, "is_private": false, "id": 172528, "creation_time": "2014-01-20T00:32:46Z", "time": "2014-01-20T00:32:46Z", "creator": "covener@gmail.com", "text": "backported trunk docs to describe the matching behavior as different from <Location>", "attachment_id": null}]