[{"count": 0, "attachment_id": null, "bug_id": 56905, "text": "Testing 8.0.12 release candidate.\nWindows, JDK 7u67 (32-bit), NIO connector.\n\nSteps to reproduce:\n==========\n1. Start Tomcat\n\n2. Visit \"Echo\" websockets example and do the following\nhttp://localhost:8080/examples/websocket/echo.xhtml\n- Select any connection option\n(I like \"(*) annotation API (stream)\", but the issue is reproducible with any of the 3 connection options)\n- Press \"Connect\" button\n- Press \"Echo message\" button\n- Press \"Disconnect\" button\n\n3. Touch file webapps\\examples\\WEB-INF\\web.xml and wait for the web application to be reloaded by Tomcat\n\nActual: Webapp reloading completes successfully, but a \"Unable to destroy WebSocket thread group\" warning is logged into logs/catalina.2014-08-31.log file:\nExpected: No warning.\n\n[[[\n31-Aug-2014 18:20:22.357 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/examples] has started\n31-Aug-2014 18:20:22.362 WARNING [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.tomcat.websocket.server.WsServerContainer.destroy Unable to destroy WebSocket thread group [WebSocketServer-localhost-/examples] as some threads were still running when the web application was stopped\n31-Aug-2014 18:20:22.877 INFO [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/examples] is completed\n]]]\n\nEvaluation, notes\n==========\n1) Reproduction rate is less than 100%. Sometimes the warning does not happen. Steps 2-4 can be repeated without restarting Tomcat until the issue shows itself.\nIn the example, any connection option can be used. The issue does not depend on it.\n\n2) The message is printed by org.apache.tomcat.websocket.server.WsServerContainer.destroy() method and originates from r1589043\n\n3) I tried to get more information, by adding the following debug code:\n[[[\n            StringBuilder buf = new StringBuilder();\n            buf.append(threadGroup.getName());\n            buf.append(\" activeCount: \").append(threadGroup.activeCount());\n            buf.append(\" isDestroyed: \").append(threadGroup.isDestroyed());\n            Thread[] threads = new Thread[100];\n            int threadCount = threadGroup.enumerate(threads, false);\n            buf.append(\"\\nactual Thread count: \").append(threadCount);\n            for (int i=0; i<threadCount; i++) {\n                buf.append(\"\\n\\n\").append(threads[i]);\n                StackTraceElement[] stack = threads[i].getStackTrace();\n                for (StackTraceElement ste: stack) {\n                    buf.append(\"\\n\\t\").append(ste);\n                }\n            }\n            log.warn(buf.toString());\n]]]\n\nThe results:\n1. activeCount: 0 isDestroyed: false\n2. actual Thread count: 0, threadGroup.enumerate() have not returned any thread.\n3. If I add second threadGroup.destroy(); call after the above code, it succeeds.\n\n4) There are no PermGen memory leaks. (No thread stack traces are printed by WebappClassLoader leak detection code. No leaks detected by Find leaks command in Tomcat Manager webapp).\n\nMissing a ThreadGroup.destroy() call will keep this thread group in its parent thread group's list, so there will be a small java object leak.\n\n5) In this case we were safe, but generally there might be threads that are still running, as they perform some web application code.\nSo the warning is justified.\n\nThoughts on a possible fix\n==========\n1) Use threadGroup.setDaemon(true) [1].\n\nThe daemon flag on a thread group means that its destroy() method will be called automatically when its thread count reaches zero.\n\nGenerally it either shall be done in a synchronized(threadGroup) block, or we shall call some synchronized methods later to make sure that the change is propagated. (E.g. calling ThreadGroup.isDestroyed(), ThreadGroup.activeCount() is good for this).\n\nThe goal is to avoid the java object leak.\n\n[1] http://docs.oracle.com/javase/7/docs/api/java/lang/ThreadGroup.html#setDaemon%28boolean%29\n\n2) Ask for threadGroup.activeCount() and include the count in the warning message.", "id": 177484, "time": "2014-09-01T08:04:17Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-09-01T08:04:17Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 56905, "attachment_id": 31958, "text": "Created attachment 31958\n2014-09-01_tc8_56905_v1.patch\n\nPatch (v1) for current trunk at r1621698\nI have not tested it yet.", "id": 177487, "time": "2014-09-01T09:15:22Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-09-01T09:15:22Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 56905, "text": "Patch looks sensible to me. Applied to 8.0.x for 8.0.13 onwards and to 7.0.x got 7.0.56 onwards.", "id": 177511, "time": "2014-09-03T13:41:40Z", "creator": "markt@apache.org", "creation_time": "2014-09-03T13:41:40Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 56905, "text": "Hello,\n\nRunning on tomcat 8.0.33, we are having this issue.\n\nHere is the trace:\n\n03-May-2016 22:09:13.405 WARNING [http-nio-8002-exec-150] org.apache.tomcat.websocket.server.WsServerContainer.destroy Unable to destroy WebSocket thread group [WebSocketServer-localhost-/0\n********] as [1] threads were still running when the web application was stopped. The thread group will be destroyed once the threads terminate.\n\nThe application that we tried to stop does not restart.\nI will add the thread dump in attachment asap.", "id": 190708, "time": "2016-05-03T20:55:14Z", "creator": "reda.housnialaoui@gmail.com", "creation_time": "2016-05-03T20:55:14Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 56905, "attachment_id": null, "text": "(In reply to R\u00e9da Housni Alaoui from comment #3)\n> Hello,\n> \n> Running on tomcat 8.0.33, we are having this issue.\n> \n> Here is the trace:\n> \n> 03-May-2016 22:09:13.405 WARNING [http-nio-8002-exec-150]\n> org.apache.tomcat.websocket.server.WsServerContainer.destroy Unable to\n> destroy WebSocket thread group [WebSocketServer-localhost-/0\n> ********] as [1] threads were still running when the web application was\n> stopped. The thread group will be destroyed once the threads terminate.\n> \n> The application that we tried to stop does not restart.\n> I will add the thread dump in attachment asap.\n\nBugzilla is not a support forum. Please use the Tomcat users' mailing list for this question.", "id": 190721, "time": "2016-05-04T13:07:28Z", "creator": "markt@apache.org", "creation_time": "2016-05-04T13:07:28Z", "is_private": false}]