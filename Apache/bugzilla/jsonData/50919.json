[{"count": 0, "tags": [], "bug_id": 50919, "attachment_id": null, "id": 144953, "creation_time": "2011-03-12T17:14:31Z", "time": "2011-03-12T17:14:31Z", "creator": "songlinhai0543@gmail.com", "text": "/httpd-2.2.17/modules/loggers/mod_log_forensic.c:129\n           sprintf(q, \"%02x\", *(unsigned char *)p);\n\nAfter reading apache codes, I find this code fragment. Using this method to convert a number into a character which represents a hex number is very slow. \n\nI give out my patch as follows:\n\n static char hexmap[]= { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };\n\n q = hexmap[*(unsigned char *)p]; \n\n\nIn my unit test, my patch run as 7 times faster than the code fragment I find. If the code fragment will be executed many times, I believe it can slow down the whole application. \n\nI suggest that we should fix this bug.", "is_private": false}, {"count": 1, "tags": [], "bug_id": 50919, "attachment_id": null, "text": "It appears you have compressed 2^8 bits into 2^4 bit representation, is that\nwhat you meant to do?\n\nHave you tested this with mapping to hexmap[(p >> 4)& 15] . hexmap[p & 15]...\nand using a 256 char hexmap?", "id": 144954, "time": "2011-03-12T17:44:25Z", "creator": "wrowe@apache.org", "creation_time": "2011-03-12T17:44:25Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 50919, "attachment_id": null, "text": "(In reply to comment #1)\n> It appears you have compressed 2^8 bits into 2^4 bit representation, is that\n> what you meant to do?\n> \n> Have you tested this with mapping to hexmap[(p >> 4)& 15] . hexmap[p & 15]...\n> and using a 256 char hexmap?\n\nyes, this is what I mean\n\n\nI write a wrong patch, and very sorry for the mistake.\n\nthe correct patch is \n\nstatic char _dig_vec_lower[]= { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a','b', 'c', 'd', 'e', 'f' };\n\nstatic void array_to_hex( char * to , const char * str , unsigned char  len )\n{\n\n    const char * str_end = str + len;\n    for( ; str != str_end ; ++ str )\n    {\n       *to++ = _dig_vec_lower[ ((unsigned char) *str) >> 4 ];\n       *to++ = _dig_vec_lower[ ((unsigned char) *str) & 0x0F ];\n    }\n}\n\nmy unit test is using this patch, and it is more than 7 times faster than calling sprintf.", "id": 144957, "time": "2011-03-12T19:13:47Z", "creator": "songlinhai0543@gmail.com", "creation_time": "2011-03-12T19:13:47Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 50919, "text": "Fixed in trunk.\n\nhttp://svn.apache.org/viewvc?view=revision&sortby=date&revision=1429564", "id": 164414, "time": "2013-01-06T18:09:48Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2013-01-06T18:09:48Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 50919, "attachment_id": null, "text": "Backported to 2.4.x: r1455222\n\nWill be part of 2.4.5", "id": 167523, "time": "2013-05-31T07:03:24Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2013-05-31T07:03:24Z", "is_private": false}]