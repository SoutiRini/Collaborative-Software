[{"count": 0, "tags": [], "bug_id": 16599, "text": "(This may well be my newbie fault;\nI have 5 DAYS java experience)\n\nI have a simple project which is using (amongst other things)\nthe XML parser that ships with j2sdk1.41_01\n\nMy project has a single classpath property,\nwhich is used for compilation (<javac> task),\njunit testing (<junit> task) and\nexcercising the application (<java> task).\n\nOr at least it should be. But the <java> task\nwon't run my application unless I use fork=\"yes\".\nIf I don't I get the following problem:\n\nBuildfile: build.xml\n\ninit:\n\nbuild-java:\n\nrun:\n     [java] java.lang.NoClassDefFoundError: org/xml/sax/SAXException\n\nBUILD SUCCESSFUL\nTotal time: 5 seconds\n\nFor reference the class *is* in jar file\n/usr/java/j2sdk1.4.1_01/jre/lib/rt.jar\n\nSo; why does it all work for <junit> and <javac>, or\nconversely why doesn't it work for <java>?\n\nOr is it a bug?\n\n     BugBear", "id": 30352, "time": "2003-01-30T15:47:51Z", "creator": "pwomack@engage.com", "creation_time": "2003-01-30T15:47:51Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "conor@apache.org", "text": "Can you run with -debug and show the stack trace for the exception?", "id": 30385, "time": "2003-01-31T01:53:16Z", "bug_id": 16599, "creation_time": "2003-01-31T01:53:16Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "pwomack@engage.com", "text": "Created attachment 4660\nthe requested -debug output", "id": 30393, "time": "2003-01-31T09:13:11Z", "bug_id": 16599, "creation_time": "2003-01-31T09:13:11Z", "is_private": false, "attachment_id": 4660}, {"count": 3, "attachment_id": null, "bug_id": 16599, "text": "Would you be able to try out a 1.6 Nightly build. I think it will probably fix\nthis for you. If so, the fix will be in Ant 1.5.2\n\nThis has a lot to do with how the <java> task works to make the class being\nexecute think it is in its own VM. It is not a perfect illusion. The best\nworkaround in Ant 1.5.1 is, as you've discovered, to use fork=\"yes\".\n\nLet us know.", "id": 30409, "time": "2003-01-31T13:28:42Z", "creator": "conor@apache.org", "creation_time": "2003-01-31T13:28:42Z", "tags": [], "is_private": false}, {"attachment_id": 4664, "tags": [], "creator": "pwomack@engage.com", "text": "Created attachment 4664\noutput a -debug with 1.6 alpha nightly build", "count": 4, "id": 30412, "time": "2003-01-31T14:35:12Z", "bug_id": 16599, "creation_time": "2003-01-31T14:35:12Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 16599, "attachment_id": null, "text": "sorry - fixed one class problem, created another.\nAttachment attached (yuck)\n\n    BugBear", "id": 30413, "time": "2003-01-31T14:35:42Z", "creator": "pwomack@engage.com", "creation_time": "2003-01-31T14:35:42Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 16599, "text": "I presume you have xerces in the classpath when you execute your java class.\nWhat I think you are seeing is the interaction between Xerces in your loader and\nthe JAXP classes in the system loader. Specifically, the factory comes from the\nsystem (parent) loader\n\nResourceStream for META-INF/services/javax.xml.parsers.DocumentBuilderFactory\nloaded from parent loader\nFinding class org.apache.xerces.jaxp.DocumentBuilderFactoryImpl\n\nbut that loader knows nothing of the Xerces classes. Well, I'm guessing a bit\nhere since I don't know what your code is doing nor the classpath setup of your\n<java> task. Is your code specifically asking for Xerces when it wants a parser?\n\nAt this stage, it is probably academic. You are probably better off just forking\nthe <java> execution so everything winds up in the system loader.\n\nI'm going to close as WONTFIX, but please feel free to add more comments or\nreopen if required.", "id": 30418, "time": "2003-01-31T15:07:13Z", "creator": "conor@apache.org", "creation_time": "2003-01-31T15:07:13Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 16599, "attachment_id": null, "id": 30420, "time": "2003-01-31T15:17:28Z", "creator": "conor@apache.org", "creation_time": "2003-01-31T15:17:28Z", "is_private": false, "text": "You could try setting the context loader in your code so the JAXP factory can\nsee find the Xerces parser."}, {"count": 8, "tags": [], "text": ">> Is your code specifically asking for Xerces when it wants a parser?\n\nNo.\n\nAs you may have guessed I'm parsing XML :-)\n\nThe first call my code make to DocumentBuilderFactory is:\n\n    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n\nWhen I *HAD* xerces in my path I got errors I didn't understand,\nso I took it out.\n\nEverything ran(runs) fine under <junit> and <java> fork = \"yes\"\n(and from the command line with java)\n\nI'm guessing (on the basic of not much) that it's an interaction\nwith the xerces (etc) that ant itself is using.\n\nAs you say, fork = \"yes\" cures my problem, so I ain't losing\nsleep (or productivity) over this.\n\n     BugBear", "attachment_id": null, "id": 30424, "creator": "pwomack@engage.com", "time": "2003-01-31T15:49:34Z", "bug_id": 16599, "creation_time": "2003-01-31T15:49:34Z", "is_private": false}]