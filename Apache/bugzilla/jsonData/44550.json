[{"count": 0, "tags": [], "bug_id": 44550, "attachment_id": null, "text": "Apache 2.0.59 on Solaris 10 Update 4 (Generic_120011-14)\n\nCorrupt HTTP/1.1 chunking output seen. Corresponded exactly to the duplication of the contents of a file descriptor (an SSI file inclusion) passed as an argument to sendfilev() (without a preceding chunk header the browsers barfed)\n\nThe problem was *only* seen when the machine was under I/O stress and sendfilev() returned EINTR according to truss. There were never problems without EINTR. Disabling sendfile support in a .htaccess made the problem disappear.\n\nThe sun manual page : http://docs.sun.com/app/docs/doc/816-5172/sendfilev-3ext?a=view\nsays EINTR will not have sent data. However, if you compare the Apache sendfilev() handling to the Samba sendfilev() handling you see different handling of EINTR.\n\nApache: srclib/apr/network_io/unix/sendrecv.c\n\n    do {\n        /* Clear out the repeat */\n        repeat = 0;\n\n        /* socket, vecs, number of vecs, bytes written */\n        rv = sendfilev(sock->socketdes, sfv, vecs, &nbytes);\n\n        if (rv == -1 && errno == EAGAIN) {\n            if (nbytes) {\n                rv = 0;\n            }\n            else if (!arv &&\n                     apr_is_option_set(sock->netmask, APR_SO_TIMEOUT) == 1) {\n                apr_status_t t = apr_wait_for_io_or_timeout(NULL, sock, 0);\n\n                if (t != APR_SUCCESS) {\n                    *len = 0;\n                    return t;\n                }\n\n                arv = 1;\n                repeat = 1;\n            }\n        }\n    } while ((rv == -1 && errno == EINTR) || repeat);\n\nSamba:\n\n/*\n * Although not listed in the API error returns, this is almost certainly\n * a slow system call and will be interrupted by a signal with EINTR. JRA.\n */\n\t\n        xferred = 0;\n \t\n \t#if defined(HAVE_EXPLICIT_LARGEFILE_SUPPORT) && defined(HAVE_OFF64_T) && defined(HAVE_SENDFILEV64)\n \t                        nwritten = sendfilev64(tofd, vec, sfvcnt, &xferred);\n \t#else\n \t                        nwritten = sendfilev(tofd, vec, sfvcnt, &xferred);\n \t#endif\n \t                if (nwritten == -1 && errno == EINTR) {\n \t                        if (xferred == 0)\n \t                                continue; /* Nothing written yet. */\n \t                        else\n \t                                nwritten = xferred;\n \t                }\n\n\nI have also raised a bug with Sun over the documentation of their error behaviour", "id": 114372, "time": "2008-03-06T12:08:32Z", "creator": "declanw@is.bbc.co.uk", "creation_time": "2008-03-06T12:08:32Z", "is_private": false}, {"count": 1, "text": "Created attachment 21919\nproposed patch for apr 0.9 (Apache 2.0.x)", "bug_id": 44550, "is_private": false, "id": 116225, "time": "2008-05-04T22:45:32Z", "creator": "trawick@apache.org", "creation_time": "2008-05-04T22:45:32Z", "tags": [], "attachment_id": 21919}, {"count": 2, "tags": [], "creator": "trawick@apache.org", "attachment_id": 21920, "is_private": false, "id": 116226, "time": "2008-05-04T22:46:06Z", "bug_id": 44550, "creation_time": "2008-05-04T22:46:06Z", "text": "Created attachment 21920\nproposed patch for apr trunk"}, {"count": 3, "tags": [], "bug_id": 44550, "attachment_id": null, "is_private": false, "id": 116228, "time": "2008-05-04T22:48:47Z", "creator": "trawick@apache.org", "creation_time": "2008-05-04T22:48:47Z", "text": "testing requested; I doubt I'll be able to find the time\n"}, {"count": 4, "tags": [], "bug_id": 44550, "attachment_id": null, "is_private": false, "id": 116290, "time": "2008-05-06T04:08:57Z", "creator": "declanw@is.bbc.co.uk", "creation_time": "2008-05-06T04:08:57Z", "text": "I'll see what I can do."}, {"count": 5, "tags": [], "creator": "henryjen@ztune.net", "attachment_id": null, "text": "According to http://sunsolve.sun.com/search/document.do?assetkey=1-1-6408517-1, this bug is fixed in Solaris Express, not sure if it was integrated into Solaris 10 5/08.\n\nBug ID: 6408517\n\nSynopsis: sendfile should only return EINTR if no bytes have been transferred.\n\nProduct: solaris\n\nCategory: library\n\nSubcategory: libsendfile\n\n\nRelease: solaris_nevada\n\nFixed by patch: \n\nIntroduced in Build: s81_37\n\nCommit to fix in Build: snv_42\n\nFixed in Build: snv_42\n\nIntegrated in Build: snv_42", "id": 116544, "time": "2008-05-12T23:21:02Z", "bug_id": 44550, "creation_time": "2008-05-12T23:21:02Z", "is_private": false}, {"count": 6, "tags": [], "creator": "henryjen@ztune.net", "attachment_id": null, "text": "I am not sure about reset rv to 0 when bytes transferred is non 0. There are other errno could have set the byte transferred to non-zero value.", "id": 116546, "time": "2008-05-12T23:40:18Z", "bug_id": 44550, "creation_time": "2008-05-12T23:40:18Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 44550, "is_private": false, "text": "The patch made the machines go splattydeath apparently. \nLoops and memory leaks they said, but I wasn't around when it got unexpectedly deployed/reverted so I haven't got any hard data on what happened.\n\nI will try and set up a pet to persecute to find out how/why it failed, but in the meantime, it's failed.", "id": 118016, "time": "2008-06-26T09:08:18Z", "creator": "declanw@is.bbc.co.uk", "creation_time": "2008-06-26T09:08:18Z", "attachment_id": null}, {"id": 118262, "tags": [], "bug_id": 44550, "is_private": false, "count": 8, "text": "Created attachment 22214\ntruss -vall -u '*:*' output of apache going loopy using previous patch\n\nGot a trace of an above-patched apache going batbleep loopy.\nIt was attempting to send a flatfile jpg.\nCaught with truss -vall -u '*:*'", "time": "2008-07-03T15:07:42Z", "creator": "declanw@is.bbc.co.uk", "creation_time": "2008-07-03T15:07:42Z", "attachment_id": 22214}, {"count": 9, "tags": [], "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 119843, "attachment_id": null, "bug_id": 44550, "creation_time": "2008-08-14T14:07:23Z", "time": "2008-08-14T14:07:23Z", "text": "I hope I've got some interesting additional information:\n\nWe started analyzing a similar problem: Acrobat Reader retrieving a PDF document via Range requests and getting E/A errors. Server was Apache httpd 2.0.63 on Solaris 10.\n\nNo Problem on some Solaris 8 and 9 systems.\n\nTruss revealed the ocurrence of sendfilev() calls returning with EINVAL. First I thought the problem are the params to sendfilev, because vecs was 0 and by going up the stack I saw, that there were no headers and trailers and also file size 0. Strange.\n\nThen I noticed, that the actual problem is in the sendfilev call shortly before the one, that returns with EINVAL. The sendfilev directly before returns with a number of written bytes bigger, than all headers plus trailers plus file.\n\nBy some code instrumentation I saw: httpd hands sendfilev over 20 buffers. If I call sendfile in the same way as httpd would, and use only the first 1, 2, ... 16 buffers it returns the correct number of bytes. If I call sendfilev with the first 17 buffers, it returns twice the number of bytes for the first 16 buffers plus the size of the 17th.\n\nSo when crossing from 16 to 17 buffers, it seems to write the first 16 buffers double. That's when I found this issue here, which is also about Solaris, sendfile, EINVAl and dupliocate data written.\n\nI'll try to search sunsolve, check against older 2.0.x versions and also to make an easy test case against apr 0.9 tomorrow. It does not seem to happen with httpd 2.2, although it could be, that the problem depends on subtle specifics of the requests (byte sizes etc.).\n\nI didn't try the patch Jeff attached here, because I think the EINVAL is not the root cause. That only happens, because the number of bytes written is too big and breaks later calculations in server/core.c., such that sendfilev later4 gets called again with zero buffers."}, {"count": 10, "tags": [], "creator": "rainer.jung@kippdata.de", "text": "If I'm not totally wrong in what I'm doing, I am now down to the following finding:\n\nIn my test case I throw away all sendfilev buffers directly before the call to sendfilew coming from httpd and create 17 new buffers instead, each of size 1 and containing the single character 'X'. The web server indeed returns the 17 characters \"X\" (naturally not in an HTTP compliant way), but sendfilev says it has written 33 bytes, i.e. again double the size of the first 16 buffers plus the size of buffer 17.\n\nIf I go down to 16 buffers, this does not happen. If I'm using sendfilev directly and write to a file on the file system it does not happen. If I'm using sendfilev directly and write to a network socket directly created with socket/bind/listen/address it does happen. So it seems this is reproducible without apr/httpd.\n\nThough I didn't find any obviously relevant patch in Sunsolve, I'll check again.", "id": 119846, "attachment_id": null, "bug_id": 44550, "creation_time": "2008-08-14T17:44:09Z", "time": "2008-08-14T17:44:09Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 44550, "text": "Our problem was finally fixed by applying the most recent Solaris 10 Kernel Jumbo Patch 137111-04. It is only a few weeks old and contains a critical security fix for Bug \"6675943: dblk_t structures may be overwitten by sendfilev() mishandling certain input vectors\". Apart from fixing a sendfilev issue, the part of the bug description publicly available doesn't sound as related to this issue here, but applying the patch to the system fixed it.\n\nD White: can you confirm, that this patch for Solaris 10 also fixes your problem?", "id": 119854, "time": "2008-08-15T02:21:16Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-08-15T02:21:16Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "declanw@is.bbc.co.uk", "is_private": false, "id": 120670, "attachment_id": null, "bug_id": 44550, "creation_time": "2008-09-16T03:41:58Z", "time": "2008-09-16T03:41:58Z", "text": "Won't have an opportunity to test for a while (no more deployments/Apache2.2 on the horizon). Will squeak if I do."}]