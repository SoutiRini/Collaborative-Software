[{"count": 0, "tags": [], "bug_id": 29250, "attachment_id": null, "id": 58225, "time": "2004-05-27T17:29:39Z", "creator": "wolfgang.gerteis@sap.com", "creation_time": "2004-05-27T17:29:39Z", "is_private": false, "text": "PROPFIND response does not handle trailing \"/\" as it \"SHOULD\" according to\nRFC 2518:\n\nThere is a standing convention that when a collection is referred to by its \nname without a trailing slash, the trailing slash is automatically appended.  \nDue to this, a resource may accept a URI without a trailing \"/\" to point to a \ncollection. In this case it SHOULD return a content-location header in the \nresponse pointing to the URI ending with the \"/\". For example, if a client \ninvokes a method on http://foo.bar/blah (no trailing slash), the resource \nhttp://foo.bar/blah/ (trailing slash) may respond as if the operation were \ninvoked on it, and should return a content-location header with \nhttp://foo.bar/blah/ in it. In general clients SHOULD use the \"/\" form of \ncollection names. \n\nHTTP/1.1 207 Multi-Status\n\nContent-Type: text/xml;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Wed, 26 May 2004 17:58:52 GMT\nServer: Apache-Coyote/1.1\n\n<D:response xmlns:D=\"DAV:\">\n    <D:href>/slide/files/folder-1932954899/folderC</D:href>\n    <D:propstat>\n        <D:prop>\n            <D:creationdate>2004-05-26T17:58:49Z</D:creationdate>\n            <D:displayname>folderC</D:displayname>\n            <D:source></D:source>\n            <D:lockdiscovery></D:lockdiscovery>\n            <D:supportedlock>\n                <D:lockentry>\n                    <D:lockscope>\n                        <D:exclusive></D:exclusive>\n                    </D:lockscope>\n                    <D:locktype>\n                        <D:write></D:write>\n                    </D:locktype>\n                </D:lockentry>\n                <D:lockentry>\n                    <D:lockscope>\n                        <D:shared></D:shared>\n                    </D:lockscope>\n                    <D:locktype>\n                        <D:write></D:write>\n                    </D:locktype>\n                </D:lockentry>\n            </D:supportedlock>\n            <D:getlastmodified>Wed, 26 May 2004 17:58:49 \nGMT</D:getlastmodified>\n            <D:getcontentlength>0</D:getcontentlength>\n            <D:modificationdate>2004-05-26T17:58:51Z</D:modificationdate>\n            <D:resourcetype>\n                <D:collection></D:collection>\n            </D:resourcetype>\n        </D:prop>\n        <D:status>HTTP/1.1 200 OK</D:status>\n    </D:propstat>\n</D:response>\n\n<D:response xmlns:D=\"DAV:\">\n    <D:href>/slide/files/folder-1932954899/folderC/folderE</D:href>\n    <D:propstat>\n        <D:prop>\n            <D:creationdate>2004-05-26T17:58:51Z</D:creationdate>\n            <D:displayname>folderE</D:displayname>\n            <D:source></D:source>\n            <D:lockdiscovery></D:lockdiscovery>\n            <D:supportedlock>\n                <D:lockentry>\n                    <D:lockscope>\n                        <D:exclusive></D:exclusive>\n                    </D:lockscope>\n                    <D:locktype>\n                        <D:write></D:write>\n                    </D:locktype>\n                </D:lockentry>\n                <D:lockentry>\n                    <D:lockscope>\n                        <D:shared></D:shared>\n                    </D:lockscope>\n                    <D:locktype>\n                        <D:write></D:write>\n                    </D:locktype>\n                </D:lockentry>\n            </D:supportedlock>\n            <D:getlastmodified>Wed, 26 May 2004 17:58:51 \nGMT</D:getlastmodified>\n            <D:getcontentlength>0</D:getcontentlength>\n            <D:modificationdate>2004-05-26T17:58:51Z</D:modificationdate>\n            <D:resourcetype>\n                <D:collection></D:collection>\n            </D:resourcetype>\n        </D:prop>\n        <D:status>HTTP/1.1 200 OK</D:status>\n    </D:propstat>\n</D:response>\n\n<D:response xmlns:D=\"DAV:\">\n    <D:href>/slide/files/folder-1932954899/folderC/folderD</D:href>\n    <D:propstat>\n        <D:prop>\n            <D:creationdate>2004-05-26T17:58:50Z</D:creationdate>\n            <D:displayname>folderD</D:displayname>\n            <D:source></D:source>\n            <D:lockdiscovery></D:lockdiscovery>\n            <D:supportedlock>\n                <D:lockentry>\n                    <D:lockscope>\n                        <D:exclusive></D:exclusive>\n                    </D:lockscope>\n                    <D:locktype>\n                        <D:write></D:write>\n                    </D:locktype>\n                </D:lockentry>\n                <D:lockentry>\n                    <D:lockscope>\n                        <D:shared></D:shared>\n                    </D:lockscope>\n                    <D:locktype>\n                        <D:write></D:write>\n                    </D:locktype>\n                </D:lockentry>\n            </D:supportedlock>\n            <D:getlastmodified>Wed, 26 May 2004 17:58:50 \nGMT</D:getlastmodified>\n            <D:getcontentlength>0</D:getcontentlength>\n            <D:modificationdate>2004-05-26T17:58:50Z</D:modificationdate>\n            <D:resourcetype>\n                <D:collection></D:collection>\n            </D:resourcetype>\n        </D:prop>\n        <D:status>HTTP/1.1 200 OK</D:status>\n    </D:propstat>\n</D:response>\n\nThe folder names of the <D:href> elements \"SHOULD\" therefore end with a \ntrailing \"/\"."}, {"count": 1, "tags": [], "creator": "will@fastforward.ch", "attachment_id": null, "is_private": false, "id": 80678, "time": "2005-10-02T11:26:29Z", "bug_id": 29250, "creation_time": "2005-10-02T11:26:29Z", "text": "I've tripped over this one too, trying to get an ls from an apache mod_webdav enabled server. Here's a \nfix to this problem:\n\nIn WebdavResources.java in the setWebdavProperties(Enumeration responses) method after\n\nString myURI = httpURL.getEscapedURI();\n\ndo the following:\n// 1. get the current href into a variable you can mess around with:\nString helperHref = href;\n// 2. check if it ends with a trailing slash\nif (helperHref.endsWith(\"/\")) {\n    helperHref = helperHref.substring(0, helperHref.length()-1);\n}\n// 3. use the \"fixed\" helperHref in the next step\nchar[] childURI = (myURI + (myURI.endsWith(\"/\") ? \"\" : \"/\") + URIUtil.getName(helperHref)).toCharArray();\n\nNow if one of the slied committers could verify this fix and (if considerd o.k.) check it in, then this bug \ncould be closed.\n\nCheers,\nWill\n"}]