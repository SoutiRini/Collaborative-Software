[{"count": 0, "tags": [], "bug_id": 55821, "attachment_id": null, "is_private": false, "id": 171463, "time": "2013-11-27T16:12:26Z", "creator": "cffilter@gmail.com", "creation_time": "2013-11-27T16:12:26Z", "text": "From a cold start with several versions of a webapp in the autodeploy directory & with undeployoldversions=true, Tomcat should determine the latest version of the webapp, and deploy only that one, and simultaneously delete the old versions of the webapp from the autodeploy deirectory."}, {"count": 1, "attachment_id": null, "bug_id": 55821, "is_private": false, "id": 171465, "time": "2013-11-27T17:12:32Z", "creator": "markt@apache.org", "creation_time": "2013-11-27T17:12:32Z", "tags": [], "text": "It isn't quite that simple as the Manager may have persisted sessions to disk which will be loaded when Tomcat starts. The clients of those sessions may still try and access them.\n\nRather than have the deployer try and keep track of the above, it may well be simpler to just let the background process undeploy the old versions once all the session have expired (which may be very soon after the restart if the old version has no valid sessions).\n\nOn this basis I am leaning towards a resolution of WONTFIX."}, {"count": 2, "tags": [], "bug_id": 55821, "text": "Having thought about this some more there are quite a few possible variations of the use case for this and the options for handling them would add complexity to the deployment process. Therefore I am closing this as won't fix.", "id": 171662, "time": "2013-12-09T09:23:36Z", "creator": "markt@apache.org", "creation_time": "2013-12-09T09:23:36Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 55821, "attachment_id": null, "is_private": false, "id": 171722, "time": "2013-12-13T01:34:03Z", "creator": "cffilter@gmail.com", "creation_time": "2013-12-13T01:34:03Z", "text": "What I see in practice: in a development environment, I wind up with several jars in the autodeploy directory: myapp##1212.jar & myapp##1213.jar.  \n\nTomcat starts to deploy myapp##1212, eventually starts to deploy myapp##1213.\n\nIf a lot of development & building has occurred, there may be many versions of the webapp in autodeploy.  At this point, using autodeploy & parallel deployment together is not really tenable.  \n\nI have to kill Tomcat, manually delete the jars & the exploded webapp directories, then restart Tomcat.  Just to be clear, I have to do that during development because Tomcat isn't smart enough to deploy the latest version first.\n\nYes, there may be these sessions written to disk, but what if there aren't?  (Which case seems probable for the vast majority of developers during the vast majority of development.)\n\nAlso, saying \"let the background process undeploy the old versions once all the session[s] have exprired (which may be very soon after the restart...)\" misses the point: undeploying the versions is often very quick, especially if there are no sessions.  \n\nBut how much of the combined deployment & undeployment time of each version is taken up by undeployment?  My marginally complex webapp on a nice machine takes about 45s to deploy.  If there are 4 or 5 versions, I should expect to wait 5 minutes for Tomcat to start?  \n\nNo: I'll invariably delete the old versions of the webapp as above.  It seems like an improvement would be if Tomcat just did that for me or at least if there was a setting for Tomcat to do that for me.  \n\nTo me it just appears like the \"undeployoldversions\" feature was not adequately engineered or tested to account for the case of multiple webapp versions on Tomcat start (to say nothing of the situation in which the old versions fail to undeploy, which leaves something to be desired as well.)"}, {"count": 4, "tags": [], "text": "(In reply to Colin Freas from comment #3)\n> If a lot of development & building has occurred, there may be many versions\n> of the webapp in autodeploy.  At this point, using autodeploy & parallel\n> deployment together is not really tenable.\n\nParallel deployment isn't intended to be used in a development environment.\n\n> Yes, there may be these sessions written to disk, but what if there aren't? \n> (Which case seems probable for the vast majority of developers during the\n> vast majority of development.)\n\nThen have your deployment process for the new version undeploy the old version(s) at the same time.\n\n> But how much of the combined deployment & undeployment time of each version\n> is taken up by undeployment?  My marginally complex webapp on a nice machine\n> takes about 45s to deploy.  If there are 4 or 5 versions, I should expect to\n> wait 5 minutes for Tomcat to start?\n\nAside: You can use threaded deployment to reduce that to closer to 45s.\n  \n> To me it just appears like the \"undeployoldversions\" feature was not\n> adequately engineered or tested to account for the case of multiple webapp\n> versions on Tomcat start\n\nundeployOldVersions (case matters) and the parallel deployment feature was designed for use in production environments were a seamless switchover to a new version was required. It wasn't designed to be used the way you are trying to use it. It isn't clear why you are trying to use parallel deployment in a development environment. There may be better solutions to the problem you are trying to solve but that would be a discussion for the users mailing list.\n\n> (to say nothing of the situation in which the old\n> versions fail to undeploy, which leaves something to be desired as well.)\n\nFailed undeployments are the responsibility of the code that has opened a file and failed to close it. I am not aware of any such bugs currently open against Tomcat. The most likely cause is a bug in the web app or a library it is using. These are often tricky to track down. To help, Tomcat 8 has introduced a feature for tracing locked files. You may find it useful to test your problematic apps with Tomcat 8 and the traceLockedFiles option (ask on the users list of you need help with this - it is still very new and currently undocumented).", "attachment_id": null, "id": 171729, "creator": "markt@apache.org", "time": "2013-12-13T11:31:48Z", "bug_id": 55821, "creation_time": "2013-12-13T11:31:48Z", "is_private": false}]