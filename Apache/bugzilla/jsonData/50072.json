[{"count": 0, "tags": [], "text": "Created attachment 26153\nTcp dump log with blank and normal responses.\n\nWe are facing problem with empty file response from server, after upgrading from Apache 6.0.20 to any higher version. Approx 20% generated responses went ok, 80% responses were empty files without any error log. Types of files was XML, HTML pages - with no diffrence. Files were requested by browsers, PHP scripts (XML) from different client servers.\n\nI started to log all the requests on top of doGet() method and all the normal responses logged correctly. Incorrect requests never get to aplication, empty files had no log.\n\nThere was no diffrence when server had load on the resources were free. We use \"org.apache.coyote.http11.Http11NioProtocol\", requests were sent with GET method. I attach TCPdump from one of the client-side servers - what they see. After downgrade back to 6.0.20 the problem dissapeared, so we are kind of locked there.", "is_private": false, "id": 140655, "creator": "petr@creactive.cz", "time": "2010-10-11T02:00:58Z", "bug_id": 50072, "creation_time": "2010-10-11T02:00:58Z", "attachment_id": 26153}, {"count": 1, "tags": [], "bug_id": 50072, "attachment_id": null, "text": "There haven't been any similar reports and 6.0.24 was released almost 9 months ago. Either the application is triggering a rare code-path in Tomcat which is hitting a bug or the application is sending invalid requests that Tomcat is now being stricter in how it is handling them.\n\nI tried to read the attached trace in Wireshark but a dump of the text output from tcpdump is not easily imported. Looking through the text output I see some oddities (e.g. Host headers in a HTTP 1.0 request) but nothing that jumps out as obviously malformed.\n\nPlease provide a complete tcpdump trace of 5 to 10 requests in pcap format that demonstrates this issue.\n\nAlso, note there is no need to edit the file to obscure any host names, IP addresses etc. since they are all present in the hex data in the attached file.\n\nYou might also like to try running Tomcat with the BIO connector to see if the problem remains.", "id": 140657, "time": "2010-10-11T06:32:33Z", "creator": "markt@apache.org", "creation_time": "2010-10-11T06:32:33Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 50072, "attachment_id": 26168, "id": 140714, "time": "2010-10-13T09:09:24Z", "creator": "petr@creactive.cz", "creation_time": "2010-10-13T09:09:24Z", "is_private": false, "text": "Created attachment 26168\ntcpdump log - nio connector"}, {"count": 3, "tags": [], "bug_id": 50072, "attachment_id": 26169, "id": 140715, "time": "2010-10-13T09:09:59Z", "creator": "petr@creactive.cz", "creation_time": "2010-10-13T09:09:59Z", "is_private": false, "text": "Created attachment 26169\ntcpdump log - bio connector"}, {"count": 4, "tags": [], "bug_id": 50072, "attachment_id": null, "text": "This problem has tomcat 6.0.24 and all next releases. I tested it now with version 6.0.29 and php on one of our client servers where the problem was detected before. Problem is with http 1.0 requests from php (fopen, simplexml_load_file functions) and NIO connector. Same script works fine with BIO connector. Http 1.1 requests (curl, fsockopen php functions) works fine with both connectors. I attach bio.log and nio.log tcpdump logs. Top +- 10 requests are from simplexml_load_file and next are curl and fsockopen.", "id": 140716, "time": "2010-10-13T09:10:26Z", "creator": "petr@creactive.cz", "creation_time": "2010-10-13T09:10:26Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 50072, "attachment_id": 26173, "text": "Created attachment 26173\nProposed patch", "id": 140735, "time": "2010-10-13T17:59:19Z", "creator": "markt@apache.org", "creation_time": "2010-10-13T17:59:19Z", "is_private": false}, {"count": 6, "tags": [], "text": "Thanks for the additional traces and analysis. The analysis is particularly helpful. I tracked the problem down to a long standing issue in the NIO connector where request lines sent in more that one packet are likely to be mis-read. The simplest way to reproduce this is to use telnet.\n\nI have applied a fix for this issue to 7.0.x and it will be included in 7.0.4 onwards.\n\nI have proposed a port of the same fix for 6.0.x (patch attached).", "is_private": false, "id": 140736, "creator": "markt@apache.org", "time": "2010-10-13T18:02:49Z", "bug_id": 50072, "creation_time": "2010-10-13T18:02:49Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "Thank you. Works fine with your patch.", "is_private": false, "id": 140817, "creator": "petr@creactive.cz", "time": "2010-10-19T04:14:37Z", "bug_id": 50072, "creation_time": "2010-10-19T04:14:37Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 50072, "text": "Thanks for the feedback. Good to know the problem I found was the same one you were seeing.\n\nKeeping open until the patch has been applied to 6.0.x", "id": 140819, "time": "2010-10-19T08:29:54Z", "creator": "markt@apache.org", "creation_time": "2010-10-19T08:29:54Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 50072, "attachment_id": null, "id": 141370, "time": "2010-11-03T15:07:55Z", "creator": "markt@apache.org", "creation_time": "2010-11-03T15:07:55Z", "is_private": false, "text": "Fixed in 6.0.x and will be included in 6.0.30 onwards."}, {"count": 10, "tags": [], "bug_id": 50072, "attachment_id": null, "id": 141498, "time": "2010-11-05T14:04:35Z", "creator": "markt@apache.org", "creation_time": "2010-11-05T14:04:35Z", "is_private": false, "text": "*** Bug 50224 has been marked as a duplicate of this bug. ***"}, {"count": 11, "tags": [], "bug_id": 50072, "attachment_id": null, "id": 143077, "time": "2011-01-04T18:05:36Z", "creator": "markt@apache.org", "creation_time": "2011-01-04T18:05:36Z", "is_private": false, "text": "*** Bug 50505 has been marked as a duplicate of this bug. ***"}]