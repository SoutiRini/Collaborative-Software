[{"count": 0, "tags": [], "creator": "johnco3@hotmail.com", "attachment_id": null, "is_private": false, "id": 30323, "time": "2003-01-30T04:27:34Z", "bug_id": 16578, "creation_time": "2003-01-30T04:27:34Z", "text": "Hi I am having a problem with an apache's mod_cgi in a CGI application running \non Apache 2.0.43 on both windows and linux redhat.  The application basically \nis trying to send back the following text in the body of a CGI return with a \n200 OK return code.\n\nMessages Waiting: yes\\r\\n\nVoicemail: 2/2 (0/0)\\r\\n\n\\r\\n\n\\r\\n\n\n\nThe CGI sends the following to standard out to send the above back to the \ncalling program by using printf to sent the string to standard out (the http \nresponse stream)\n\nContent-Length: 49\\r\\n\nContent-Type: application/simple-message-summary\\r\\n\n\\r\\n\nMessages Waiting: yes\\r\\n\nVoicemail: 2/2 (0/0)\\r\\n\n\\r\\n\n\\r\\n\n\nThe problem is that when the calling program receives the body text it comes in \nas \n\\r\\n\nMessages Waiting: yes\\r\\r\\n\nVoicemail: 2/2 (0/0)\\r\\r\\n\n\\r\\r\\n\n\\r\\r\\n\n\nI tried setting the content type to image/gif, removing the Content-length \noptional header, also changing the request prototol from HTTP 1.0 to HTTP 2.0 \nand still the return stream is corrupted every time.  My only work around was \nto remove the \\r's from the CGI and Apache filled them in on my behalf but it \nis not consistent on windows and linux, typically linux will insert an extra \nline befire the start of my body by the time it is received in the calling \napplication\n\nThanks in advance for any help\n\nJohn Coffey"}, {"count": 1, "tags": [], "text": "This behaviour is desired by CGI/1.1 draft (see, for example\n<http://cgi-spec.golux.com/draft-coar-cgi-v11-03-clean.html>, 2.2, the NL rule). \nSimply use only a native \\n in your application (or alternatively nph-scripts,\nwhich are not parsed at all).\n\nThanks for using Apache!", "is_private": false, "bug_id": 16578, "id": 30344, "time": "2003-01-30T14:53:04Z", "creator": "nd@perlig.de", "creation_time": "2003-01-30T14:53:04Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 16578, "text": "I'm not sure that the resolution for this is correct.  It's a good thing that \napache insert \\r's before the \\n's but ONLY if the \\r's are missing, the \nbehavior I'm seeing it that if I return \\r\\n Apache sends back \\r\\r\\n \n(inserting a \\r before EVERY occurance of the \\n in my body contents).  I \ndon't think that this behaviour is correct.  I wonder if it may be related to \nsome other headers I may not be setting, basically I'm looking for a way to \npreserve the body contents that I carefully create in the CGI server side and \nreturn these as is to the client.\n\nJohn", "id": 30354, "time": "2003-01-30T16:21:07Z", "creator": "johnco3@hotmail.com", "creation_time": "2003-01-30T16:21:07Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "text": "Sorry, I tend to label this bug as invalid again, because\n\n- using heuristics for interpreting headers is dangarous, since a single \\r may\nor may not be a regular part of the header. Again: use native \\n characters and\neverything is fine.\n\n- Apache (resp. mod_cgi) doesn't touch the content (except for chunked stuff or\ncustom output filters, of course). So the additional \\rs probably come from your\ninterpreter and/or the underlying I/O-library. Switching STDOUT to binmode after\nwriting the headers may help.\n\n(leaving reopened for further issues)", "is_private": false, "bug_id": 16578, "id": 30358, "time": "2003-01-30T16:47:09Z", "creator": "nd@perlig.de", "creation_time": "2003-01-30T16:47:09Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "text": "No further response.", "id": 31491, "time": "2003-02-18T02:11:09Z", "bug_id": 16578, "creation_time": "2003-02-18T02:11:09Z", "is_private": false}]