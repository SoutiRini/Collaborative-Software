[{"count": 0, "tags": [], "bug_id": 23173, "attachment_id": null, "is_private": false, "id": 44199, "time": "2003-09-15T10:40:59Z", "creator": "escowles@ucsd.edu", "creation_time": "2003-09-15T10:40:59Z", "text": "When a file with UTF8 characters (e.g., &#231;) is loaded and then retrieved from Xindice using the \nXML:DB API, the character encoding of the retrieved document does not match the declared \ncharacter encoding.  The retrieved document has no encoding declaration (so is UTF8 by default), \nbut the characters are actually encoded using ISO-8859-1.\n\nWhen the same document is retrieved using the command-line tools, the character is correctly \nencoded in UTF8."}, {"count": 1, "tags": [], "creator": "escowles@ucsd.edu", "attachment_id": 8225, "id": 44200, "time": "2003-09-15T10:42:46Z", "bug_id": 23173, "creation_time": "2003-09-15T10:42:46Z", "is_private": false, "text": "Created attachment 8225\nSimple Java program to load and retrieve a document"}, {"count": 2, "attachment_id": 8226, "creator": "escowles@ucsd.edu", "is_private": false, "id": 44201, "time": "2003-09-15T10:46:32Z", "bug_id": 23173, "creation_time": "2003-09-15T10:46:32Z", "tags": [], "text": "Created attachment 8226\nTest XML file with UTF8 character."}, {"count": 3, "tags": [], "bug_id": 23173, "attachment_id": 8227, "id": 44202, "time": "2003-09-15T10:46:56Z", "creator": "escowles@ucsd.edu", "creation_time": "2003-09-15T10:46:56Z", "is_private": false, "text": "Created attachment 8227\n(Invalid) output XML file"}, {"count": 4, "tags": [], "creator": "vgritsenko@apache.org", "attachment_id": null, "id": 57789, "time": "2004-05-21T12:21:13Z", "bug_id": 23173, "creation_time": "2004-05-21T12:21:13Z", "is_private": false, "text": "Can't reproduce on Xindice 1.1b4, and it won't be fixed in 1.0.\n\nOne of the problems I'd noticed is that files is being read / written in this\ndemo program is using default encoding, which is not UTF8. This will cause data\ncorruption. UTF8 files should be read / written using\nInputStreamReader/OutputStreamWriter:\n\n    BufferedReader in = new BufferedReader(new InputStreamReader(new\nFileInputStream(id), \"UTF8\"));\n    PrintWriter out = new PrintWriter(new OutputStreamWriter(new\nFileOutputStream(id + \".out\"), \"UTF8\"));\n\nThis could have been the cause of the failure, but I can't verify this because\ncode works for me anyway.\n"}]