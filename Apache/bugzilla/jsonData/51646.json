[{"count": 0, "tags": [], "creator": "szetheli+apache@gmail.com", "text": "It looks like pathcovert is using the OS directory separator for processing mapper even if a custom dirsep is specified.\n\nI'm trying to write pathcovert statement that is OS agnostic, so I turn dirsep=\"/\" since I don't want to deal with windows \"\\\".  I need to do some manipulation on the path as well, turning the file names into properties, so I use mapper to strip the parts I don't need.\n\nExample:\n<pathconvert property=\"-service.fragments.properties\" pathsep=\"=${line.separator}\" dirsep=\"/\"\n  refid=\"-service.fragment.path\" >\n    <chainedmapper>\n      <filtermapper>\n\t<!-- BUGBUG - even though dirsep=/, the filter sees \\ on windows.  The below line is necessary to make windows/linux treat the path the same-->\n\t<replacestring from=\"\\\" to=\"/\" />\n\t<replaceregex pattern=\".*/([^/]*)\" replace=\"\\1\"/>\n      </filtermapper>\n    </chainedmapper>\n</pathconvert>\n\nExpected:\nIf I comment out the replacestring statement, mapper should see the path elements as \"a/b/c/file\".\n\nActual:\nwith replacestring commented, replaceregex does not match, because its seeing a\\b\\c\\file\n\nWork around:\nAdding replacestring statement in place of the dirsep attribute (yuck).", "id": 148536, "time": "2011-08-11T01:50:15Z", "bug_id": 51646, "creation_time": "2011-08-11T01:50:15Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "Probably the dirsep processing is just happening after the mappers, in which case this is not a bug?", "attachment_id": null, "bug_id": 51646, "id": 152929, "time": "2012-01-19T14:31:58Z", "creator": "jglick@apache.org", "creation_time": "2012-01-19T14:31:58Z", "is_private": false}, {"count": 2, "tags": [], "creator": "szetheli+apache@gmail.com", "attachment_id": null, "is_private": false, "id": 152946, "time": "2012-01-19T18:13:27Z", "bug_id": 51646, "creation_time": "2012-01-19T18:13:27Z", "text": "I'd consider it at least \"Undesirable behavior\".  Just because that's the order the code currently evaluates things doesn't mean it's the order most desirable by the user. \n\nGiven pathconvert is used to convert paths into different strings, not necessarily another path, it makes sense to me that dirsep should be applied before the filters look at it, otherwise dirsep can be pretty useless in pathcovert with filters."}]