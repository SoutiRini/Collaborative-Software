[{"count": 0, "tags": [], "bug_id": 42120, "attachment_id": null, "is_private": false, "id": 101687, "time": "2007-04-13T14:20:27Z", "creator": "dopey@moonteeth.com", "creation_time": "2007-04-13T14:20:27Z", "text": "If a Location block is tagged as requiring auth.\nFor example\n<Location /somewhere>\n  AuthName \"REalm\"\n  AuthType Basic\n  AuthBasicProvider ldapProvider\n  require valid-user\n</Location>\n\nA hit to http://server/somewhere or http://server/somewhere/ will be challenged\nfor authentication.  However\nhttp://server/somewhere;parameter=value will not be challenged.\n\nI believe this is incorrect as per RFC 2396:\n3.3. Path Component\n\n   The path component contains data, specific to the authority (or the\n   scheme if there is no authority component), identifying the resource\n   within the scope of that scheme and authority.\n\n      path          = [ abs_path | opaque_part ]\n\n      path_segments = segment *( \"/\" segment )\n      segment       = *pchar *( \";\" param )\n      param         = *pchar\n\n      pchar         = unreserved | escaped |\n                      \":\" | \"@\" | \"&\" | \"=\" | \"+\" | \"$\" | \",\"\n\n   The path may consist of a sequence of path segments separated by a\n   single slash \"/\" character.  Within a path segment, the characters\n   \"/\", \";\", \"=\", and \"?\" are reserved.  Each path segment may include a\n   sequence of parameters, indicated by the semicolon \";\" character.\n   The parameters are not significant to the parsing of relative\n   references.\n\nThe last sentence I believe is saying that the parameter is not significant in\nterms of the actual referenced path segment."}, {"attachment_id": null, "tags": [], "bug_id": 42120, "is_private": false, "count": 1, "id": 101688, "time": "2007-04-13T14:27:45Z", "creator": "nd@perlig.de", "creation_time": "2007-04-13T14:27:45Z", "text": "(In reply to comment #0)\n>    The parameters are not significant to the parsing of relative\n>    references.\n> \n> The last sentence I believe is saying that the parameter is not significant in\n> terms of the actual referenced path segment.\n\nI believe, it doesn't say something about particular server configuration\ndirectives...\n\nWhy don't you just take LocationMatch if it bothers you? Changing the semantics\nof Location would be hard thing to do here anyway for compat reasons."}, {"attachment_id": null, "tags": [], "bug_id": 42120, "text": "No, however, considering that the <Location> directive documentation notes that\nit's a URL or URL-path, it implies that the URL RFC would be followed in order\nto match a URL.  If the URL RFC states that the path element parameter is not\nsignificant to parsing the reference, then it seems that <Location> should\nhandle this properly.\n\nI'm looking into using LocationMatch with a sane regex expression.  However, it\njust seems that this behavior is something a standard <Location> tag should be\nable to handle.", "count": 2, "id": 101701, "time": "2007-04-13T23:23:40Z", "creator": "dopey@moonteeth.com", "creation_time": "2007-04-13T23:23:40Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 42120, "is_private": false, "count": 3, "id": 101710, "time": "2007-04-14T04:07:50Z", "creator": "nd@perlig.de", "creation_time": "2007-04-14T04:07:50Z", "text": "The nice thing about standards is that there are so many to choose from :-)\nWe would work against RFC 1738 if we'd do that and that way open a leak in order\nto close another one (so to speak)."}]