[{"count": 0, "tags": [], "bug_id": 56618, "is_private": false, "text": "I use mod_jk 1.2.40, httpd-2.2.15-29.el6.centos.x86_64.\nI set Hostname property to IPv6 address using JK Status Manager, But error occured.\n\nIn web browser Firefox, I clicked the link 'E' ('[S|E|R] Worker Status for ajp13w') .\nand I set Hostname property to IPv6 address(2001:c0a8::1) in Edit worker settings pages, But error occured.\n\n-mod_jk.log\n[Thu Jun 12 11:09:13.029 2014] [4233:140197382711040] [info] commit_member::jk_status.c (3369): Status worker 'jkstatus' setting 'host' for sub worker 'ajp13w' to '2001%3Ac0a8%3A%3A1'\n[Thu Jun 12 11:09:13.029 2014] [4233:140197382711040] [error] commit_member::jk_status.c (3384): Status worker 'jkstatus' failed resolving address '2001%3Ac0a8%3A%3A1:8009' for sub worker 'ajp13w'.\n-", "id": 175796, "time": "2014-06-13T04:47:40Z", "creator": "shimizuhiroto123@gmail.com", "creation_time": "2014-06-13T04:47:40Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "Thread on @users:\n\"I can not set Hostname property to IPv6 address using JK Status Manager\"\nhttp://tomcat.markmail.org/thread/5z54blmnrttwytr6\n\nThe problem is that url-encoded parameter value (2001%3Ac0a8%3A%3A1) is passed \"as\nis\" to the jk_resolve method.\n\nLooking at the code, jk_status.c has its own HTTP query parameters parsing (status_parse_uri() in native/common/jk_status.c), implemented by splitting the query string.\nThe url-decoding of parameters is not performed. There is a comment that it had been planned, but has not been implemented yet.\n\n/* XXX Depending on the params values, we might need to trim and decode */", "id": 175798, "time": "2014-06-13T10:33:32Z", "bug_id": 56618, "creation_time": "2014-06-13T10:33:32Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 56618, "text": "(In reply to Konstantin Kolinko from comment #1)\n> Looking at the code, jk_status.c has its own HTTP query parameters parsing\n> (status_parse_uri() in native/common/jk_status.c), implemented by splitting\n> the query string.\n> The url-decoding of parameters is not performed. There is a comment that it\n> had been planned, but has not been implemented yet.\n> \n> /* XXX Depending on the params values, we might need to trim and decode */\n\nYes, jk_status.c:1277 looks like the right place to do this. It seems no parameter-decoding is happening at all, probably because mod_jk never expects to get a parameter value that is encoded in any way.\n\nThere are several settings that could be affected in this way:\n\n  hostname, route, redirect-route, cluster-domain, worker-name\n\nThe last one (worker-name) could be configured properly in workers.properties, but then be unable to send the worker's name via HTTP without encoding, in which case mod_jk would never be able to find the worker.", "id": 180086, "time": "2014-12-30T18:00:53Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-12-30T18:00:53Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": 32339, "creator": "chris@christopherschultz.net", "text": "Created attachment 32339\nInitial patch with (possibly) sloppy memory management\n\nI have a patch which lifts the whole apr_unescape_url method from APR 1.5 and uses it in jk_status:status_parse_uri and initial testing suggests that it works. However, I have been lazy with my memory allocations because I have not yet understood how jk_map_put deals with memory.\n\nI'm attaching my proposed patch with the understanding that it is almost certainly not complete, as it likely contains a memory leak.\n\nIt also does not decode parameter *names*, but it doesn't seem like the mod_jk status worker really needs that right now.", "id": 180087, "time": "2014-12-30T18:03:52Z", "bug_id": 56618, "creation_time": "2014-12-30T18:03:52Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "chris@christopherschultz.net", "text": "Created attachment 32340\nA better patch without memory leaks", "id": 180089, "attachment_id": 32340, "bug_id": 56618, "creation_time": "2014-12-30T19:40:44Z", "time": "2014-12-30T19:40:44Z", "is_private": false}, {"count": 5, "tags": [], "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 180117, "attachment_id": null, "bug_id": 56618, "creation_time": "2015-01-01T20:25:08Z", "time": "2015-01-01T20:25:08Z", "text": "Hi Chris,\n\nI have applied your patch with some minor variation in r1648934.\n\nI have removed the dependency on APR, because the same code is used when the status worker is called via the ISAPI redirector.\n\nSince unescape shortens the URL (at least doesn't make it longer), I have chosen to do the unescaping in place, i.e. not to copy the original string.\n\nThanks!\n\nRainer"}, {"count": 6, "tags": [], "bug_id": 56618, "text": "(In reply to Rainer Jung from comment #5)\n> Hi Chris,\n> \n> I have applied your patch with some minor variation in r1648934.\n> \n> I have removed the dependency on APR, because the same code is used when the\n> status worker is called via the ISAPI redirector.\n\nFor httpd-based systems, APR will be there, so I figured we could take advantage of it.\n\n> Since unescape shortens the URL (at least doesn't make it longer), I have\n> chosen to do the unescaping in place, i.e. not to copy the original string.\n\nIt doesn't save much but its a bit tidier. I did a separate buffer just in case there was a bug there would be less likelihood of trashing the original query string. It also allows us to reject a malformed parameter value without half-decoding it; instead we can use the completely-encoded value in the event of a failure (though we always fail when the value can't be decoded).", "id": 180119, "time": "2015-01-02T01:54:26Z", "creator": "chris@christopherschultz.net", "creation_time": "2015-01-02T01:54:26Z", "is_private": false, "attachment_id": null}]