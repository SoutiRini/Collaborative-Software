[{"count": 0, "tags": [], "bug_id": 30651, "attachment_id": null, "text": "Even though Ant is not designed to be a scripting environment, it is a shame \nthat developpers have to write some (usually crappy) .bat or .sh scripts to \nstartup little interactive demo/example/benchmark programs, when all the \nCLASSPATH/PATH/LD_LIBRARY_PATH is already cleanly encapsulated in the build \nfile. Furthermore, these scripts duplicate all the path info of the build file \nitself (which in my case is computed by custom tasks based on dependency info, \nMaven style).\n\nIn a different life, I used to startup the X server on Solaris using the \nxserver program (I think that's the name), which recognized a special -- \nargument, after which all other args were not for xserver itself, but for the \nprocess it forked (the separate X11 server program).\n\nI thus added a similar behavior to the new Ant 1.6.x Launcher class. It now \nrecognizes a new -- argument, and converts all arguments after it into Ant \nproperties passed in to the traditional Ant main. The properties defined take \nthe shell/perl like $0, $1, $2, etc... notation, with the special $# property \nfor the total number of arguments after -- (including $0), and the special $* \nproperty that contains all the arguments (excluding $0) as a string (with \nsimple logic to quote arguments that contain spaces or tabs).\n\nGiven the following command lines, the properties are defined as below using \nthe following target (that uses custom tasks, but that's beside the point):\n\n  <target name=\"start\" xmlns:bm=\"antlib:com.lgc.buildmagic\">\n    <bm:echo unless=\"$0\" message=\"Warning: No -- arguments specified\" />\n    <bm:echo><propertyset><propertyref prefix=\"$\" /></propertyset></bm:echo>\n  </target>\n\nC:\\oss\\org_apache\\ant16>build start\nWarning: No -- arguments specified\n\nC:\\oss\\org_apache\\ant16>build start --\nThe -- argument must be followed by one or more argument(s)\n\nC:\\oss\\org_apache\\ant16>build start -- toto\n$0 = toto\n$# = 1\n$* =\n\nC:\\oss\\org_apache\\ant16>build start -- toto titi tutu\n$1 = titi\n$0 = toto\n$# = 3\n$* = titi tutu\n$2 = tutu\n\nC:\\oss\\org_apache\\ant16>build start -- toto \"titi tyty\" tutu\n$1 = titi tyty\n$0 = toto\n$# = 3\n$* = \"titi tyty\" tutu\n$2 = tutu\n\nUsing this new -- argument passing technique with <java> and <exec>, Ant is now \nmuch more flexible to start up arbitrary Java programs (by using $0 in <java>'s \nclassname attribute) and either <arg line=\"${$*}\" /> or multiple <arg \nvalue=\"${$1}\" /> style arguments.\n\nThanks for considering this addition to Ant. --DD", "id": 61951, "time": "2004-08-13T15:27:48Z", "creator": "ddevienne@lgc.com", "creation_time": "2004-08-13T15:27:48Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 30651, "attachment_id": 12420, "is_private": false, "id": 61952, "time": "2004-08-13T15:28:26Z", "creator": "ddevienne@lgc.com", "creation_time": "2004-08-13T15:28:26Z", "text": "Created attachment 12420\nPatch to Launcher.java for adding -- argument logic"}]