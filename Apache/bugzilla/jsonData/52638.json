[{"count": 0, "tags": [], "creator": "nithen.ac@hcl.com", "attachment_id": 28297, "text": "Created attachment 28297\n1 hidden sheet and 1 non hidden sheet\n\nhi,\n\nI have created a excel workbook using hssf.\n\nthe workbook contains two sheets \n\nsheet 1 :\"Master\" is hidden\n\nsheet 2: \"CreateFeed\" \n\nWhen opening the sheet in excel , nothing is rendered (even the Row and column id's of excel).\n\nWhen i highlight cells the Values appear , but instead of the \"createfeed\" values , the \"Master\" sheets values which are supposed to be hidden are shown.\n\n\nI have attached the excel sheet.\n\nPlease forgive my bad english.\n\nregards,\nnithen", "id": 153651, "time": "2012-02-10T10:58:52Z", "bug_id": 52638, "creation_time": "2012-02-10T10:58:52Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 52638, "attachment_id": null, "id": 153652, "time": "2012-02-10T11:08:46Z", "creator": "yegor@dinom.ru", "creation_time": "2012-02-10T11:08:46Z", "is_private": false, "text": "Which version of POI? \n\nPlease post the Java code you are using.\n\nYegor"}, {"count": 2, "tags": [], "bug_id": 52638, "attachment_id": null, "id": 153653, "time": "2012-02-10T11:10:00Z", "creator": "nithen.ac@hcl.com", "creation_time": "2012-02-10T11:10:00Z", "is_private": false, "text": " I am using POI- 3.7"}, {"count": 3, "tags": [], "creator": "nithen.ac@hcl.com", "attachment_id": null, "text": "====================java code======================\n\n\npackage com.hcl.eimcc.createfeed;\n\n\n\n\nimport java.sql.*;\nimport java.util.*;\nimport java.io.*;\n\nimport org.apache.poi.hssf.usermodel.*;\n\nimport org.apache.poi.ss.usermodel.*;\nimport org.apache.poi.ss.util.CellRangeAddressList;\n\n\npublic class chumma {\n\n\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tString mValueSql = \"select * from edis_master_values order by MASTER_TYPE_ID;\";\n\t\tString MTypesSql=\"select MASTER_TYPE from edis_master_types order by MASTER_TYPE_ID;\";\n\t\t\n\t\tList MasterValues= mysqlv(mValueSql);\n\n\t\tList MasterTypes= mysqlt(MTypesSql);\n\n\t\t \n\t\twriteExcel(MasterValues,MasterTypes);\n\n\t}\n\t\n\t\n\n\tpublic static List mysqlv(String Sql)throws Exception \n\t {\n\t\tConnection conn=getconnection();\n\t    conn.setAutoCommit(false);\n\t    Statement st = conn.createStatement();\n\t    \n\t    ResultSet rs = st.executeQuery(Sql);\n\t  \n\n\t    List SourceData= new ArrayList(); \n\t    List Data = new ArrayList(); \n\t\t\n\t\t ResultSetMetaData rsMetaData = rs.getMetaData();\n\t\t    int numberOfColumns=rsMetaData.getColumnCount();\n\t\t   for (int i = 1; i < numberOfColumns + 1; i++)\n\t\t   {\n\t\t      String columnName = rsMetaData.getColumnLabel(i);\n\t\t   //  System.out.print(columnName + \"   \");\n\t\t    \n\t\t      Data.add(columnName);\n\t\t    }\n\t\n\t\t  SourceData.add(Data);\n\t\t  // System.out.println();\n\t\t   // System.out.println(\"----------------------\");\n\tint k=0;// ROW COUNT\n\t\t    while (rs.next()) {\n\t\t    \tList Data1 = new ArrayList(); \n\t\t      for (int i = 1; i < numberOfColumns + 1; i++) {\n\t\t      //  System.out.print(rs.getString(i) + \"   \");\n\n\t\t        \n\t\t        Data1.add(rs.getString(i));\n\t\t        if(i==numberOfColumns)\n\t\t        {\n\t\t        \t \n\t\t        }\n\t\t      }\n\t\t   // System.out.println();\n\t\t \n\t\t      SourceData.add(Data1);\n\t\t      k++;// row count\n\t\t    }\n\t\t    System.out.println(\"Row Count :\"+ k);// row count\n\n\t\t   \n\t\t    System.out.println(\"arraylist size\"+SourceData.size());\n\t\t//writeExcel(SourceData);\n\t\t    \n\n\t    rs.close();\n\t    st.close();\n\t    conn.close();\n\t  \n\t    return SourceData;\n\t}\n\t\n\tpublic static List mysqlt(String Sql)throws Exception \n\t {\n\t\tConnection conn=getconnection();\n\t    conn.setAutoCommit(false);\n\t    Statement st = conn.createStatement();\n\t    \n\t    ResultSet rs = st.executeQuery(Sql);\n\t  \n\n\t    List SourceData= new ArrayList(); \n\t   \n\t\t\n\t\t \n\tint k=0;// ROW COUNT\n\t\t    while (rs.next()) {\n\t\t    \t\n\t\t     System.out.println(rs.getString(1));\n\t\t \n\t\t      SourceData.add(rs.getString(1));\n\t\t      k++;// row count\n\t\t    }\n\t\t    System.out.println(\"Row Count cf :\"+ k);// row count\n\n\t\t   \n\t\t    System.out.println(\"arraylist size cf \"+SourceData.size());\n\t\n\t\t\tfor (int i1=0;i1<SourceData.size();i1++)\n\t\t\t{\n\t\t\t\tSystem.out.println(SourceData.get(i1).toString());\n\t\t\t}\n\n\t    rs.close();\n\t    st.close();\n\t    conn.close();\n\t  \n\t    return SourceData;\n\t}\n\t\n\t\n\tpublic static  Connection getconnection()\n\t{\n\t\tConnection conn = null;\n\t\t  String url = \"jdbc:mysql://localhost:3306/\";\n\t\t  String dbName = \"eimcc\";\n\t\t  String driver = \"com.mysql.jdbc.Driver\";\n\t\t  String userName = \"root\"; \n\t\t  String password = \"root\";\n\t\t  try {\n\t\t  Class.forName(driver).newInstance();\n\t\t  conn = DriverManager.getConnection(url+dbName,userName,password);\n\t\t // System.out.println(\"Connected to the database\");\n\t\n\t\t  //System.out.println(\"Disconnected from database\");\n\t\t  } catch (Exception e) {\n\t\t  e.printStackTrace();\n\t\t  }\n\t\treturn conn;\n\t}\n\npublic static void writeExcel(List SourceData, List MasterTypes) throws Exception\n{\n\n\tint rownum=SourceData.size();\n   // String sname1 = \"Master\",sname2 = \"CreateFeed\", cname = \"TestName\",cvalue = \"TestVal\";\n\tHSSFWorkbook wb = new HSSFWorkbook();\n    FileOutputStream fileOut = new FileOutputStream(\"D:\\\\playbook1.xls\");\n    HSSFSheet worksheet1 = wb.createSheet(\"Master\");\n    HSSFSheet worksheet2 = wb.createSheet(\"CreateFeed\");\n\n    //worksheet1.autoSizeColumn(0);\n    wb.setActiveSheet(1);\n   wb.setSheetHidden(0, true);\n\n\tfor (int i1=0;i1<SourceData.size();i1++)\n\t{\n\t\tRow row = worksheet1.createRow((short)i1);\n\t}\n  int r=0;\n  int c=0;\n  int i=1;\n  String start= null;\n \n  List cell1 = (List) SourceData.get(1);\n\t \n\tstart=cell1.get(1).toString();\n\n\t\n\twhile(i<SourceData.size())\n\t{\n\t\tList cell = (List) SourceData.get(i);\n   \t String mt=cell.get(1).toString();\n\n   \t \n   \t if (mt.equals(start))\n   \t {\n   \t\t r++;\n   \t\t\n    \t\tRow row = worksheet1.getRow(r);\n   \t\t \n   \t\trow.createCell(c).setCellValue(cell.get(2).toString());\n   \t\t//System.out.println(\"mt :\"+mt+ \"   r :\"+r+ \" c:\"+c +\" i\" +i);\n   \t\t\n   \t }else\n   \t { \n   \t\t r=1;\n   \t\t c++;\n   \t\tRow row = worksheet1.getRow(r);\n    \t\trow.createCell(c).setCellValue(cell.get(2).toString());\n   \t\t start=mt;\n    \t\t//System.out.println(\"mt :\"+mt+ \"   r :\"+r+ \" c:\"+c +\" i\" +i);\n   \t }\n   \t \n   \t \n   \t \n   \t \n   \t i++;\n\t}\n\t\n\tSystem.out.println(\"SourceData size : \"+SourceData.size());\n   \n\t// create feed\n\tRow row = worksheet2.createRow(0);\n\tRow row1 = worksheet2.createRow(1);\n\trow.createCell(0).setCellValue(\"Feed Name\");\n\tfor (int i1=1;i1<MasterTypes.size();i1++)\n\t{\n\t\t\n\t\tString cell2=MasterTypes.get(i1).toString();\n\t\t\n\t\trow.createCell(i1).setCellValue(cell2);\n\t}\n\t CellRangeAddressList addressList = new CellRangeAddressList(1,1, 0, 0);\n\t  DVConstraint dvConstraint ;\n\t  dvConstraint = DVConstraint.createFormulaListConstraint(\"'Master'!$A:$A\");\n\t\t    DataValidation dataValidation = new HSSFDataValidation(addressList, dvConstraint);\n\t\t    dataValidation.setSuppressDropDownArrow(false);\n\t\t    worksheet2.addValidationData(dataValidation);\n\t\n\tfor (int i1=1;i1<MasterTypes.size();i1++)\n\t{\n\t\t\n\t\t\n\t}\n\t\n\t\n    wb.write(fileOut);\n    fileOut.flush();\n    fileOut.close();\n\t\n}\n\n}", "id": 153654, "time": "2012-02-10T11:17:18Z", "bug_id": 52638, "creation_time": "2012-02-10T11:17:18Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 52638, "text": "Please try with the latest POI 3.8-beta5.\n\nAlso, please post an isolated Java code that does not require any requests to a a database. \n\nYegor", "id": 153656, "time": "2012-02-10T11:35:37Z", "creator": "yegor@dinom.ru", "creation_time": "2012-02-10T11:35:37Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "POI 3.8 Fixes the issue...\n\n\nI am not sure what caused the issue though...\n\nIf anyone faces the issue, please upgrade your jars", "is_private": false, "id": 153659, "creator": "nithen.ac@hcl.com", "time": "2012-02-10T11:46:12Z", "bug_id": 52638, "creation_time": "2012-02-10T11:46:12Z", "attachment_id": null}]