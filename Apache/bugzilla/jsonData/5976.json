[{"count": 0, "tags": [], "creator": "webmaster@cienciapura.com.br", "attachment_id": null, "id": 9804, "time": "2002-01-23T11:58:05Z", "bug_id": 5976, "creation_time": "2002-01-23T11:58:05Z", "is_private": false, "text": "Catalina up and running, JSSE libraries on $java.home/jre/lib/ext/\n\nLook at the following servlet:\nimport java.io.*;\nimport java.util.*;\nimport java.net.*;\nimport javax.servlet.*;\nimport javax.net.ssl.*;\n\npublic class JSSE extends GenericServlet {\n\n  public void service(ServletRequest req, ServletResponse res)\n                             throws ServletException, IOException {\n    res.setContentType(\"text/plain\");\n    PrintWriter out = res.getWriter();\n\n    /*java.security.Security.addProvider(new \ncom.sun.net.ssl.internal.ssl.Provider());\n    System.setProperty\n(\"java.protocol.handler.pkgs\",\"com.sun.net.ssl.internal.www.protocol\");*/\n\n    URL url = new URL( \"https://www.verisign.com\" );\n\n    BufferedReader in = null;\n    String conteudo = \"\", str=\"\";\n    URLConnection urlc = url.openConnection();\n    in = new BufferedReader( new InputStreamReader( urlc.getInputStream() ) );\n            while ((str = in.readLine()) != null) {\n                conteudo += str;\n            }\n    out.print(conteudo);\n  }\n}\n\nStarting Catalina without Security Manager ( catalina.sh start ) it works.\n\nStarting Catalina with a Security Manager ( catalina.sh start -security ) it \ndoesn't work. I even tried to give all permission to the codeBase of this web \napplication ( permission java.security.AllPermission; ) but it does not work.\n\nIt works on Tomcat 3.3 and 3.2.\n\nError:\n\n2002-01-22 18:23:07 StandardWrapperValve[invoker]: Servlet.service() for \nservlet invoker threw exception\njava.net.SocketException: SSL implementation not available\n        at javax.net.ssl.DefaultSSLSocketFactory.createSocket([DashoPro-V1.2-\n120198])\n        at com.sun.net.ssl.internal.www.protocol.https.HttpsClient.doConnect\n([DashoPro-V1.2-120198])\n        at com.sun.net.ssl.internal.www.protocol.https.NetworkClient.openServer\n([DashoPro-V1.2-120198])\n        at com.sun.net.ssl.internal.www.protocol.https.HttpClient.l([DashoPro-\nV1.2-120198])\n        at com.sun.net.ssl.internal.www.protocol.https.HttpClient.<init>\n([DashoPro-V1.2-120198])\n        at com.sun.net.ssl.internal.www.protocol.https.HttpsClient.<init>\n([DashoPro-V1.2-120198])\n        at com.sun.net.ssl.internal.www.protocol.https.HttpsClient.a([DashoPro-\nV1.2-120198])\n        at com.sun.net.ssl.internal.www.protocol.https.HttpsClient.a([DashoPro-\nV1.2-120198])\n        at \ncom.sun.net.ssl.internal.www.protocol.https.HttpsURLConnection.connect\n([DashoPro-V1.2-120198])\n\nMore information, from JVM debug:\n\ndefault context init failed: java.security.PrivilegedActionException \n<<java.security.NoSuchAlgorithmException: Algorithm SunX509 not available>>"}, {"count": 1, "tags": [], "bug_id": 5976, "attachment_id": null, "text": "One more info:\n\nI left the catalina.policy file with just these 2 lines:\n\ngrant {\n        permission java.security.AllPermission;\n};\n\nI believe this is equivalent as running Tomcat 4 without a security manager, \nbut it does not work either. ( again, it works without the '-security' option ).\n\nI have my java.security file setup correctly since JSSE works correctly without \nSM. Also, CATALINA_OPTS is set to: \"-\nDjava.protocol.handler.pkgs=com.sun.net.ssl.internal.www.protocol -Xms400m -\nXmx500m\"", "id": 9864, "time": "2002-01-24T16:29:46Z", "creator": "webmaster@cienciapura.com.br", "creation_time": "2002-01-24T16:29:46Z", "is_private": false}, {"count": 2, "tags": [], "creator": "glenn@apache.org", "attachment_id": null, "id": 11274, "time": "2002-02-28T03:21:05Z", "bug_id": 5976, "creation_time": "2002-02-28T03:21:05Z", "is_private": false, "text": "I have had no problem using Tomcat 4, JSSE, and the SecurityManager.\nEither as a servlet initiating an SSL connection to a remote server,\nor with Tomcat creating an HTTP Connector which accepts SSL.\n\nTo debug these type of problems I recommend the following.\n\nStart Tomcat with the property -Djava.security.debug=access,failure\nalso for SSL related problems, -Djavax.net.debug=ssl\n\nIf you haven't changed your ${java.home}/jre/lib/security/java.security\nconfig security.provider properties, you need to add support for JSSE.\n\nHere are my security.provider properties:\n\n #\n# List of providers and their preference orders (see above):\n#\nsecurity.provider.1=sun.security.provider.Sun\n# Added below for Tomcat 4 SSL support\nsecurity.provider.2=com.sun.net.ssl.internal.ssl.Provider\nsecurity.provider.3=com.sun.rsajca.Provider\n\nThere is also a Security Permission related to use of Certificates.\n\npermission java.security.SecurityPermission \"getProperty.cert.provider.x509v1\";\n\n"}, {"count": 3, "tags": [], "bug_id": 5976, "attachment_id": null, "is_private": false, "id": 11277, "time": "2002-02-28T03:43:41Z", "creator": "glenn@apache.org", "creation_time": "2002-02-28T03:43:41Z", "text": "Oh, and here are a couple of more security permissions I use for SSL.\n\npermission java.util.PropertyPermission \"javax.net.ssl.trustStore\", \"read\";\npermission java.util.PropertyPermission \"java.protocol.handler.pkgs\", \"read\";"}, {"count": 4, "tags": [], "creator": "webmaster@cienciapura.com.br", "attachment_id": null, "id": 11293, "time": "2002-02-28T12:41:58Z", "bug_id": 5976, "creation_time": "2002-02-28T12:41:58Z", "is_private": false, "text": "Thanks Glenn !\n\nWith the extra security permissions it worked fine !"}]