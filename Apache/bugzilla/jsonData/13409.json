[{"count": 0, "tags": [], "text": "The <javac> task fails to compile java file, when running same target again - \nit completes succesfully.\n\n- The classpath contains openide.jar which contains \"org\\openide\\util\\Task\" \nclass.\n\n- The NbMainExplorer.java is located in src dir and in core.jar file which is\nlocated in classpath too. The NbMainExplorer is overloading the one from jar \nfile.\n\nWhen running same target again - it completes succesfully.\n\n\nHere is target output:\n\nD:\\development\\song\\dev\\song\\src\\org\\netbeans\\core\\NbMainExplorer.java:905: cann\not access org.openide.util.Task\nfile org\\openide\\util\\Task.class not found\n            if (t != null) {\n                  ^\n1 error\nCompile failed; see the compiler error output for details.\n\ndo_compile:\nSince fork is true, ignoring compiler setting.\nCompiling 10 source files to D:\\development\\song\\dev\\song\\classes\nSince fork is true, ignoring compiler setting.\nD:\\development\\song\\dev\\song\\src\\org\\netbeans\\core\\NbMainExplorer.java:905: cann\not access org.openide.util.Task\nfile org\\openide\\util\\Task.class not found\n            if (t != null) {\n                  ^\n1 error\n\nBUILD FAILED\nfile:D:/development/song/dev/song/build.xml:156: Compile failed; see the compile", "is_private": false, "id": 24135, "creator": "miha@softhome.net", "time": "2002-10-08T14:30:53Z", "bug_id": 13409, "creation_time": "2002-10-08T14:30:53Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "conor@apache.org", "attachment_id": null, "id": 29848, "time": "2003-01-22T09:42:14Z", "bug_id": 13409, "creation_time": "2003-01-22T09:42:14Z", "is_private": false, "text": "Can you give more details on the compilation setup, such as the separate\ncompilation/jarring steps, the location of classes and source files in the\nvarious jars and directories. Are you using an explicit import? \n\nIs openide.jar built in the same build and used in a compilation classpath in\nanother compile (or two). I have seen issues where a jar is locked in memory and\nlater written out so that on the second pass the jar is different, perhaps\nsatisfying a compilation dependency. \n\nSo, more information please"}]