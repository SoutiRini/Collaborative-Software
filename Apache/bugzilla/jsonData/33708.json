[{"count": 0, "tags": [], "creator": "goncalo@ist.utl.pt", "attachment_id": null, "id": 71396, "time": "2005-02-23T14:37:29Z", "bug_id": 33708, "creation_time": "2005-02-23T14:37:29Z", "is_private": false, "text": "Hello.\nI am working with log4j version 1.2.9.\n\nI am trying to subclass a logger with my own logger (because I want it\nto accept varargs style logging, for example debug(\"hello\",new\nInteger(1), \"Hello\"); )\n\nI managed to get it working but, and this is weird, only when\nconfiguring the logger by log4j.properties.\n\nI'm using the following configuration:\nlog4j.debug=true\nlog4j.loggerFactory=logging.VarArgsLoggerFactory\nlog4j.rootLogger=DEBUG, A1\nlog4j.appender.A1=org.apache.log4j.ConsoleAppender\nlog4j.appender.A1.layout=org.apache.log4j.PatternLayout\nlog4j.appender.A1.layout.ConversionPattern=%5p [%t] %c - %m%n\n\nWith this, it works greate.\n\nHowever, if I try to use the following xml configuration (log4j.xml):\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE log4j:configuration SYSTEM \"log4j.dtd\">\n\n<log4j:configuration xmlns:log4j=\"http://jakarta.apache.org/log4j/\"\ndebug=\"true\">\n<appender name=\"ConsoleAppender\"\nclass=\"org.apache.log4j.ConsoleAppender\">\n  <layout class=\"org.apache.log4j.PatternLayout\">\n       <param name= \"ConversionPattern\" value= \"%5p [%t] (%F:%L) - %m%n\"/>\n  </layout>\n</appender>\n<logger name=\"some.cat\">\n\n      <level value=\"debug\"/>\n      <appender-ref ref=\"ConsoleAppender\"/>\n</logger>\n<categoryFactory class=\"logging.VarArgsLoggerFactory\"/>\n</log4j:configuration>\n\nI get a \"ClassCastException\" error, due to the erroneous processing of\nthe \"categoryFactory\" element.\n\nI was debugging the DOMConfigurator class and I found out that, at\nline parseCategoryFactory the class is perfectly instanteated but\nnothing is done with it !\nOn the other hand, on PropertyConfigurator I found out that, on line\n459 there is the following statement:\nPropertySetter.setProperties(loggerFactory, props, FACTORY_PREFIX + \".\");\n\nwhich I thing that updates the configuration.\n\nIn resume, I think that DOMConfigurator must update the cat variable\nin the parseCategoryFactory method (as it does for the other\nconfiguration elements).\nIs this resolved in the latest version of Log4j ?\n\nPlease help me, I really need to get this working.\n\nPlus, can anyone provide me an actual log4j.dtd?\n\nThank you very much,"}, {"count": 1, "attachment_id": null, "creator": "hoju@visi.com", "is_private": false, "id": 71409, "time": "2005-02-23T18:46:50Z", "bug_id": 33708, "creation_time": "2005-02-23T18:46:50Z", "tags": [], "text": "If you move to Log4j 1.3, this is handled natively.  Actually, you can do this\nwith the more generic UGLI interfaces as well.  I wouldn't subclass, and if you\ndo, you should wrap instead.  See Log4j docs for info.\n\nLog4j-1.2.x is almost surely not going to have another release, so your best bet\nis to move to 1.3 ASAP if 1.2.9 isn't working for you.  Oh, and DOMConfigurator\nis deprecated in 1.3 in favor of JoranConfigurator, which is much more flexible.\n I'm going to close this as WontFix.  If you find you still need to wrap Log4j\nloggers when using 1.3 and this still doesn't work for you with\nJoranConfigurator, then please reopen this bug and move the version to 1.3alpha\n(I moved it back to 1.2 since the bug is reported on 1.2.9).\n\n\nJake"}, {"count": 2, "tags": [], "text": "Hello.\nI am actually using log4j 1.3.\nMy issue with subclassing is to avoid the parameter handling as in\nlog.debug(\"hello\" + object1 + \" I am  \" + object2); I am subclassing a logger\nwith VarArgs support so I can write the above as:\nlog.debug(\"hello %s I am %s\",object1,object2). So this way Java won't build the\nstrings unless it is really necessary.\nI am aware of Joran configurator but it does not handle the loggerFactory and\nthus I get a ClassCastException runtime error.\n\nThe subclassing examples on log4j has the good.cat that calls one attention to\nthe categoryfactory=XXXXXXX configuration that is not present at bad.cat file. \n\nSo the final question is: how can I subclass without getting a ClassCastException..\n\nThank you for your quick reply.", "is_private": false, "id": 71420, "creator": "goncalo@ist.utl.pt", "time": "2005-02-23T22:02:08Z", "bug_id": 33708, "creation_time": "2005-02-23T22:02:08Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 33708, "attachment_id": null, "id": 71479, "time": "2005-02-24T18:15:50Z", "creator": "hoju@visi.com", "creation_time": "2005-02-24T18:15:50Z", "is_private": false, "text": "Hmm.. you reported Log4j-1.2.9 in your initial report.  Was that a typo?\n\nIn any case, you say you are using Log4j-1.3alpha now.  If that's the case, then\nyou don't need to wrap Log4j loggers to get the behavior you want.  See...\n\nhttp://logging.apache.org/log4j/docs/ugli.html\n\nAnd note that Log4j-1.3 directly implements UGLI.  You can also compile against\nany individual UGLI jar such as the ugli-nop.jar.  This makes you jar\ndependencies very small and lets the end user decide what kind of logging they want.\n\n\nJake\n"}, {"count": 4, "tags": [], "bug_id": 33708, "attachment_id": null, "id": 98631, "time": "2007-01-28T02:59:47Z", "creator": "genman@noderunner.net", "creation_time": "2007-01-28T02:59:47Z", "is_private": false, "text": "<categoryFactory class=\"logging.VarArgsLoggerFactory\"/>\n\nand\n\n<loggerFactory class=\"logging.VarArgsLoggerFactory\"/>\n\nis now supported in 1.3 (SVN trunk).  Check the DTD."}, {"count": 5, "tags": [], "text": "Based on my own attempts to use <categoryFactory> element in log4j-1.2.13, I\nfind that this bug in DOMConfigurator is *not* fixed.  The same symptoms prevail\nas shown by the original poster: i.e., a ClassCastException.  (I could find no\ntest case for either categoryFactory or loggerFactory configuration in\nlog4j.xml, so I don't know how anyone could claim it is fixed.)\n\nIt would be nice if it could get fixed for log4j-1.2.15.  \n\nThe following diff shows how to fix this problem.\n\n--- src/java/org/apache/log4j/xml/DOMConfigurator.java  2007-02-23 12:48:53.408\n-0500     511036\n+++ src/java/org/apache/log4j/xml/DOMConfigurator.java  2007-03-18 22:25:07.597\n-0500\n@@ -109,6 +109,9 @@\n   Properties props;\n   LoggerRepository repository;\n \n+\n+  protected LoggerFactory catFactory = null;\n+\n   /**\n      No argument constructor.\n   */\n@@ -258,7 +261,10 @@\n \t    eh.setBackupAppender(findAppenderByReference(currentElement));\n \t  } else if(tagName.equals(LOGGER_REF)) {\n \t    String loggerName = currentElement.getAttribute(REF_ATTR);\t    \n-\t    Logger logger = repository.getLogger(loggerName);\n+      Logger logger =\n+          (catFactory == null)\n+          ? repository.getLogger(loggerName)\n+          : repository.getLogger(loggerName, catFactory);\n \t    eh.setLogger(logger);\n \t  } else if(tagName.equals(ROOT_REF)) {\n \t    Logger root = repository.getRootLogger();\n@@ -317,7 +323,9 @@\n \n     if(EMPTY_STR.equals(className)) {\n       LogLog.debug(\"Retreiving an instance of org.apache.log4j.Logger.\");\n-      cat = repository.getLogger(catName);\n+      cat = (catFactory == null )\n+          ? repository.getLogger(catName)\n+          : repository.getLogger(catName, catFactory);\n     }\n     else {\n       LogLog.debug(\"Desired logger sub-class: [\"+className+']');\n@@ -361,8 +369,8 @@\n     }\n     else {\n       LogLog.debug(\"Desired category factory: [\"+className+']');\n-      Object catFactory = OptionConverter.instantiateByClassName(className, \n-                                                                \nLoggerFactory.class, \n+      catFactory = (LoggerFactory)OptionConverter.instantiateByClassName(className,\n+                                                                \nLoggerFactory.class,\n                                                                  null);\n       PropertySetter propSetter = new PropertySetter(catFactory);\n \n", "attachment_id": null, "bug_id": 33708, "id": 100558, "time": "2007-03-18T19:56:24Z", "creator": "pfurbacher@mac.com", "creation_time": "2007-03-18T19:56:24Z", "is_private": false}, {"count": 6, "attachment_id": null, "creator": "carnold@apache.org", "is_private": false, "id": 100847, "time": "2007-03-23T14:05:44Z", "bug_id": 33708, "creation_time": "2007-03-23T14:05:44Z", "tags": [], "text": "Commited fix and test cases against 1.2 in rev 521903."}]