[{"count": 0, "attachment_id": 22928, "bug_id": 46284, "text": "Created attachment 22928\nA multi-file patch that includes changes that allow DeltaManager to block processing of cluster messages until local application initialization is complete\n\nSuggested enhancement to DeltaManager that allows a configuration element to control whether incoming cluster messages should be blocked until after local applications are done initializing.\n\nThe idea is that there exist some web applications (I know of at least one commercial app [that I happen to support during working hours]) that, when deployed on a cluster with session replication, fails when the cluster is implemented with Tomcat but works fine when using other application containers.\n\nThe inspiration for this enhancement is a comment from the vendor's engineering support, who tell me that other application containers (WebSphere and WebLogic, at least) initialize local applications before beginning to process session replication messages from the cluster.\n\nThe attached patch gives the Tomcat user the option of continuing to begin processing session replication messages from the cluster immediately (the default), or block processing those messages until local applications have completed initialization.", "id": 122811, "time": "2008-11-24T17:28:21Z", "creator": "jason.lunn@gmail.com", "creation_time": "2008-11-24T17:28:21Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 46284, "text": "Here is some feedback:\n\n1. The formatting gets somewhat messed up, there are tabs in the patch.\n\n2.      public void messageDataReceived(ClusterMessage cmsg) {\n+    \t// Block processing until local application initialization has\n+    \t// completed, if a gate has been erected\n+    \tif(gate != null) {\n+    \t\ttry {\n+    \t\t\tgate.await();\n+    \t\t\tgate = null;\n+    \t\t}\n+    \t\tcatch(InterruptedException e) {\n+    \t\t\tlog.error(e, e);\n+    \t\t}\n+    \t}\n+\n\nThis will pose a problem since it blocks the messaging threads. Other applications running would suffer since you are now holding on to threads that are supposed to deliver replication messages in other parts of the system.\n\n3. openContainerGates\nDoes this happen all at once after all the apps are finished. (Am I reading it correct?).\na container gate should be opened immediately after a context has finished initialization. regardless of what other applications/containers are doing.\n\n4. the 'gate' variable would have to be volatile, since the thread that is creating the gate is different from the thread that is reading it, and the non null gate might not have yet become visible.\n\n", "id": 123168, "time": "2008-12-08T08:13:30Z", "creator": "fhanik@apache.org", "creation_time": "2008-12-08T08:13:30Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 46284, "attachment_id": 23005, "text": "Created attachment 23005\nA multi-file patch that includes changes that allow DeltaManager to block processing of cluster messages until local application initialization is complete\n\nRevised per Filip's feedback:\n\n1. added volatile keyword to declaration of variable 'gate'\n2. synchronized the null check and assignment of 'gate'\n3. -- Nothing done here yet, the intention of the current design is to block all incoming session replication messages from being processed until all local applications have been initialized.\n4. removed tabs", "id": 123193, "time": "2008-12-09T06:49:48Z", "creator": "jason.lunn@gmail.com", "creation_time": "2008-12-09T06:49:48Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 46284, "text": "I've been looking through the Tomcat code and the essential behaviour appears to be the same all the way back to 6.0.18 (it did change in 6.0.18 in a way that looks to be helpful to the use case).\n\nThe session state is transferred when the Manager is started. As of 6.0.18, the ServletContainerInitializers (for 7.0.x onwards) and ServletContextListeners are triggered before the state transfer is started. The only application initialisation that has not been completed at this point is starting the filters and the loadOnStartup Servlets.\n\nWhile it should be possible to swap the order of the Manager start, Filter initialisation and loadOnStartup Servlet processing, I can't think of a good reason that justifies one order over another. The important order for me is the SCI and SCL vs Manager start and that is already the 'right' way around for the use case described in this bug report.\n\nTherefore, I am resolving this as WONTFIX. If we revisit this, my instinct is to look at simply delaying the request state transfer although that looks much easier for the DeltaManager than the BackupManager.", "id": 198986, "time": "2017-05-31T10:32:01Z", "creator": "markt@apache.org", "creation_time": "2017-05-31T10:32:01Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 46284, "attachment_id": null, "id": 198997, "time": "2017-06-01T12:31:17Z", "creator": "jason.lunn@gmail.com", "creation_time": "2017-06-01T12:31:17Z", "is_private": false, "text": "After over 8 and a half years I have long since stopped being invested in the outcome of this issue."}]