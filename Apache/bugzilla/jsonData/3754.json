[{"count": 0, "tags": [], "bug_id": 3754, "text": "I'm having some difficulty creating a DataSource using the default Tyrex \nfactory provided in Tomcat 4.  In the DefaultContext, I have:\n \n              <ResourceParams name=\"jdbc/SomeDB\">\n                  <parameter>\n                      <name>user</name>\n                      <value>username</value>\n                  </parameter>\n                  <parameter>\n                      <name>password</name>\n                      <value>pass</value>\n                  </parameter>\n                  <parameter>\n                      <name>driverClassName</name>\n                      <value>com.jnetdirect.jsql.JSQLDriver</value>\n                  </parameter>\n                  <parameter>\n                      <name>driverName</name>\n \n<value>jdbc:JSQLConnect://dbhost/database=somedata</value>\n                  </parameter>\n              </ResourceParams>\n \nAnd in my code I:\n \n            Context initCtx = new InitialContext();\n            Context envCtx = (Context) initCtx.lookup(\"java:comp/env\");\n            DataSource ds = (DataSource) envCtx.lookup(\"jdbc/SomeDB\");\n            Connection conn = ds.getConnection();\n \nHowever, at runtime, I get the following error on the third line of the above \ncode fragment:\n \n        java.lang.ClassCastException: tyrex.jdbc.xa.EnabledDataSource\n\nIf I change DataSource to EnabledDataSource, and import the appropriate Tyrex \nclass, then things work perfectly, as expected, but shouldn't I be able to \ncast an EnabledDataSource to a DataSource?\n\nI do not have the Tyrex jar in my classpath at compile time, and I don't \nbelieve I should have to.  I recognize this is probably a defect in Tyrex \nitself, but this certainly affects Tomcat's usability, and even it's \nspecification compliance, from what I can tell.", "id": 5860, "time": "2001-09-20T17:03:07Z", "creator": "dan@wellogic.com", "creation_time": "2001-09-20T17:03:07Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 3754, "attachment_id": null, "text": "Do you have a copy of the JDBC Optional package JAR file in your system\nextensions directory ($JAVA_HOME/jre/lib/ext)?  If so, it could cause problems\nlike this -- please try it without that file.\n\nThe usual filename is \"jdbc2_0-stdext.jar\", but you might also have renamed it\nto something else.\n", "id": 5885, "time": "2001-09-21T09:54:16Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2001-09-21T09:54:16Z", "is_private": false}, {"count": 2, "text": "Same thing happens to me. I don't have the standard JDBC extension in neither\nJAVA_HOME/lib/ext nor in my WebApp /WEB-INF/lib.", "bug_id": 3754, "attachment_id": null, "id": 20737, "time": "2002-08-07T03:08:04Z", "creator": "m_poplacenel@yahoo.com", "creation_time": "2002-08-07T03:08:04Z", "tags": [], "is_private": false}, {"text": "I think I found the problem. I DID have the JDBC driver in the application's lib\n(myApp/WEB-INF/lib). As soon as I took that out, everything worked fine. \n\nI assume the explanation is that the JDBC driver, Tyrex and the JDBC extension\njar all have to be seen by the same class loader. I haven't actually tried with\nall of them in myApp, but I bet that works too. ", "tags": [], "bug_id": 3754, "is_private": false, "count": 3, "id": 20760, "time": "2002-08-07T17:32:39Z", "creator": "m_poplacenel@yahoo.com", "creation_time": "2002-08-07T17:32:39Z", "attachment_id": null}]