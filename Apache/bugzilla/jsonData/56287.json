[{"count": 0, "text": "Created attachment 31410\nFix offset in metafix code\n\nmod_proxy_html deletes the wrong data from HTML code when a \"http-equiv\" meta tag specifies a Content-Type behind any other \"http-equiv\" meta tag. For better understanding of the issue, please consider the following HTML code (also attached as file metafix-breaker.html) treated by mod_proxy_html:\n\n<html>\n <head>\n  <meta http-equiv=\"X-Dummy-Header\" content=\"dummy value\">\n  <style type=\"text/css\">div.ok { color: green; }       </style>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf8\"      >\n <head>\n <body>\n  <div class=\"ok\">If the metafix is not broken, this text should get rendered in green color.</div>\n </body>\n</html>\n\nWithout the attached patch, mod_proxy_html will remove the <style> tag inside the <head> tag as soon as it parses the meta tag with the http-equiv=\"Content-Type\" attribute. With the attached patch applied, mod_proxy_html removes the meta tag with the http-equiv=\"Content-Type\" attribute instead. I guess this is what the code intended to do.\n\nThe attached patch is based on httpd trunk, rev. 1579365.", "bug_id": 56287, "is_private": false, "id": 173950, "time": "2014-03-19T21:01:59Z", "creator": "micha@lenk.info", "creation_time": "2014-03-19T21:01:59Z", "tags": [], "attachment_id": 31410}, {"count": 1, "tags": [], "creator": "micha@lenk.info", "text": "Created attachment 31411\nSample HTML code that breaks when processed by through mod_proxy_html", "id": 173951, "time": "2014-03-19T21:03:12Z", "bug_id": 56287, "creation_time": "2014-03-19T21:03:12Z", "is_private": false, "attachment_id": 31411}, {"count": 2, "tags": [], "creator": "christophe.jaillet@wanadoo.fr", "text": "Thanks for the report.\n\nI confirm your point and I have commited it as r1584878.\nIt can only be triggered if ProxyHTMLMeta is set, which is not the default.\n\n\nHowever a few other issues puzzle me:\n\n   - what if several \"Content-Type\" are found ? \n     With current code, only the latest will be taken into account\n\n   - line 675:\n          if (*p != '=')\n              continue;\n    Really ? Shouldn't we break instead ?\n    Continue will go back to line 671 and we will perform a p +=7 which could go past the end of the buffer\n\n   - line 680:\n     Shouldn't we also check for *q in case only one delimiter ('\\'' or '\"') is present. Without it, we could scan past the end of the buffer", "id": 174283, "attachment_id": null, "bug_id": 56287, "creation_time": "2014-04-04T20:00:10Z", "time": "2014-04-04T20:00:10Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 56287, "attachment_id": null, "is_private": false, "id": 174285, "time": "2014-04-04T20:31:08Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2014-04-04T20:31:08Z", "text": "2nd and 3rd point are addressed in r1584884 and in r1584896."}, {"count": 4, "tags": [], "bug_id": 56287, "is_private": false, "id": 174603, "creation_time": "2014-04-15T20:42:00Z", "time": "2014-04-15T20:42:00Z", "creator": "christophe.jaillet@wanadoo.fr", "text": "r1584878, r1584884 and r1584896 have been backported and will be part of 2.4.10.", "attachment_id": null}]