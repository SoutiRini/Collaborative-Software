[{"count": 0, "tags": [], "bug_id": 8276, "attachment_id": null, "text": "This <c:out> (used to illustrate what happens for an invalid bean property)\n\n  <c:out value=\"${pageContext.request.requestUri}\" />\n\nresults in this exception root cause:\n\njava.lang.NoClassDefFoundError: org/apache/taglibs/standard/tag/el/core/ExprTag\n\tat java.lang.Class.newInstance0(Native Method)\n\tat java.lang.Class.newInstance(Class.java:237)\n\tat org.apache.jasper.servlet.JspServlet$JspServletWrapper.load(JspServlet.java:139)\n...\n\nin the 4/18 build. Other <c:out>'s work fine. Maybe there's an old reference\nto ExprTag (now called OutTag, I believe) in a class related to exception\nhandling?", "id": 14010, "time": "2002-04-18T20:56:02Z", "creator": "hans@gefionsoftware.com", "creation_time": "2002-04-18T20:56:02Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 8276, "attachment_id": null, "text": "Hans, this doesn't sound right; just to be sure, I checked for textual\ndependencies on the class's name in JSTL.  Are you sure you're working from a\npristine environment, with no classes hanging around from a prior build and no\nold files in Tomcat's workspace?", "id": 14011, "time": "2002-04-18T20:59:11Z", "creator": "bayern@essentially.net", "creation_time": "2002-04-18T20:59:11Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 8276, "text": "Ah, a servlet had been generated and compiled for this page with an earlier\nversion of JSTL, including references to the ExprTag instead of OutTag. Forcing\na recompile fixed it.\n\nSorry about that.", "id": 14013, "time": "2002-04-18T21:27:41Z", "creator": "hans@gefionsoftware.com", "creation_time": "2002-04-18T21:27:41Z", "is_private": false, "attachment_id": null}]