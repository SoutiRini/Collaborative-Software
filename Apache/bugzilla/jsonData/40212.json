[{"count": 0, "tags": [], "creator": "nhb_web@nexgo.de", "is_private": false, "text": "Hi, \n\ni have a problem with log4j-1.2.13.jar when invoking Logger.getLogger(string)\nfrom a shutdown hook. I have verified that the the string-parameter is not null.\n\njava.lang.NullPointerException\n        at org.apache.log4j.LogManager.getLogger(LogManager.java:188)\n        at org.apache.log4j.Logger.getLogger(Logger.java:104)\n        at de.his.log.LogManager.getLogger(LogManager.java:122)\n        at de.his.log.LogManager.getLogger(LogManager.java:81)\n        at de.his.utils.SecureProperties.<clinit>(SecureProperties.java:72)\n        at sun.misc.Unsafe.ensureClassInitialized(Native Method)\n        at\nsun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(UnsafeFieldAccessorFactory.java:25)\n        at\nsun.reflect.ReflectionFactory.newFieldAccessor(ReflectionFactory.java:122)\n        at java.lang.reflect.Field.acquireFieldAccessor(Field.java:917)\n        at java.lang.reflect.Field.getFieldAccessor(Field.java:898)\n        at java.lang.reflect.Field.get(Field.java:357)\n        at\norg.apache.catalina.loader.WebappClassLoader.clearReferences(WebappClassLoader.java:1605)\n       at\norg.apache.catalina.loader.WebappClassLoader.stop(WebappClassLoader.java:1489)\n        at org.apache.catalina.loader.WebappLoader.stop(WebappLoader.java:706)\n        at org.apache.catalina.core.StandardContext.stop(StandardContext.java:4360)\n        at\norg.apache.catalina.core.ContainerBase.removeChild(ContainerBase.java:892)\n        at org.apache.catalina.startup.HostConfig.undeployApps(HostConfig.java:1159)\n        at org.apache.catalina.startup.HostConfig.stop(HostConfig.java:1131)\n        at\norg.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:312)\n        at\norg.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n        at org.apache.catalina.core.ContainerBase.stop(ContainerBase.java:1053)\n        at org.apache.catalina.core.ContainerBase.stop(ContainerBase.java:1065)\n        at org.apache.catalina.core.StandardEngine.stop(StandardEngine.java:447)\n        at org.apache.catalina.core.StandardService.stop(StandardService.java:512)\n        at org.apache.catalina.core.StandardServer.stop(StandardServer.java:734)\n        at org.apache.catalina.startup.Catalina.stop(Catalina.java:601)\n        at\norg.apache.catalina.startup.Catalina$CatalinaShutdownHook.run(Catalina.java:644)\n\n\n\n\n\nHendrik", "id": 92036, "time": "2006-08-08T14:54:45Z", "bug_id": 40212, "creation_time": "2006-08-08T14:54:45Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "serg_main@yahoo.com", "attachment_id": null, "text": "Another example of this bug:\n\nException in thread \"Store \norg.riverock.webmill.core.GetWmPortalCatalogLanguageItem Expiry Thread\" \njava.lang.NullPointerException\n\tat org.apache.log4j.LogManager.getLogger(LogManager.java:188)\n\tat org.apache.log4j.Logger.getLogger(Logger.java:104)\n\tat org.apache.commons.logging.impl.Log4JLogger.getLogger\n(Log4JLogger.java:283)\n\tat org.apache.commons.logging.impl.Log4JLogger.isDebugEnabled\n(Log4JLogger.java:293)\n\tat net.sf.ehcache.store.DiskStore.expiryThreadMain(DiskStore.java:768)\n\tat net.sf.ehcache.store.DiskStore.access$700(DiskStore.java:61)\n\tat net.sf.ehcache.store.DiskStore$ExpiryThread.run(DiskStore.java:942)\n", "id": 94236, "time": "2006-09-28T15:03:31Z", "bug_id": 40212, "creation_time": "2006-09-28T15:03:31Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "florian.kirchmeir@gmx.at", "is_private": false, "id": 94419, "time": "2006-10-03T00:54:51Z", "bug_id": 40212, "creation_time": "2006-10-03T00:54:51Z", "tags": [], "text": "Hi all!\nI can still confirm this bug using log4j-1.2.14.\nSame stacktrace.\n\nRegards,\nFlorian"}, {"count": 3, "attachment_id": null, "bug_id": 40212, "text": "confirming for log4j-1.2.14.jar too:\n\nException in thread \"Thread-10\" java.lang.NullPointerException\n\tat org.apache.log4j.LogManager.getLogger(LogManager.java:188)\n\tat org.apache.log4j.Logger.getLogger(Logger.java:104)\n\tat \norg.apache.commons.logging.impl.Log4JLogger.getLogger(Log4JLogger.java:229)\n\tat \norg.apache.commons.logging.impl.Log4JLogger.warn(Log4JLogger.java:157)\n\tat \norg.apache.jcs.auxiliary.disk.indexed.IndexedDiskCache$ShutdownHook.run(IndexedDiskCache.java:1523)\nException in thread \"Thread-9\" java.lang.NullPointerException\n\tat org.apache.log4j.LogManager.getLogger(LogManager.java:188)\n\tat org.apache.log4j.Logger.getLogger(Logger.java:104)\n\tat \norg.apache.commons.logging.impl.Log4JLogger.getLogger(Log4JLogger.java:229)\n\tat \norg.apache.commons.logging.impl.Log4JLogger.warn(Log4JLogger.java:157)\n\tat \norg.apache.jcs.auxiliary.disk.indexed.IndexedDiskCache$ShutdownHook.run(IndexedDiskCache.java:1523)\nException in thread \"Thread-12\" java.lang.NullPointerException\n\tat org.apache.log4j.LogManager.getLogger(LogManager.java:188)\n\tat org.apache.log4j.Logger.getLogger(Logger.java:104)\n\tat \norg.apache.commons.logging.impl.Log4JLogger.getLogger(Log4JLogger.java:229)\n\tat \norg.apache.commons.logging.impl.Log4JLogger.warn(Log4JLogger.java:157)\n\tat \norg.apache.jcs.auxiliary.disk.indexed.IndexedDiskCache$ShutdownHook.run(IndexedDiskCache.java:1523)\nException in thread \"Thread-11\" java.lang.NullPointerException\n\tat org.apache.log4j.LogManager.getLogger(LogManager.java:188)\n\tat org.apache.log4j.Logger.getLogger(Logger.java:104)\n\tat \norg.apache.commons.logging.impl.Log4JLogger.getLogger(Log4JLogger.java:229)\n\tat \norg.apache.commons.logging.impl.Log4JLogger.warn(Log4JLogger.java:157)\n\tat \norg.apache.jcs.auxiliary.disk.indexed.IndexedDiskCache$ShutdownHook.run(IndexedDiskCache.java:1523)", "id": 101022, "time": "2007-03-27T02:58:54Z", "creator": "m.zdila@episoftware.com", "creation_time": "2007-03-27T02:58:54Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "bayard@apache.org", "is_private": false, "text": "That seems to be at the second of these lines.\n\n  public static Logger getLogger(String name) {\n    return repositorySelector.getLoggerRepository().getLogger(name);\n\nSo either the repositorySelector is null, or its returning a null\nLoggerRepository. If this is always from a shutdown hook (the other reports\ndon't mention if it's a shutdown hook). setRepositorySelector(..) is never\ncalled, so presumably it's a null from LoggerRepository.\n\nHowever, DefaultRepositorySelector does not even have an API for removing a\nrepository once set. That would seem to suggest that the selector was made with\na null LoggerRepository in the first place - but it can't be :)\n\nNothing Commons-Logging looks like it touches this, so currently I keep\nsuggesting the NPE can't happen. Need to repeat my steps and see where I screwed up.", "id": 103842, "time": "2007-05-30T15:16:17Z", "bug_id": 40212, "creation_time": "2007-05-30T15:16:17Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 40212, "attachment_id": null, "text": "Digging further, I continue to think there's no code way that the NPE can happen.\n\nIt's all on shutdown hooks though - so presumably the JVM has pulled the rug. My\ninstinct is to suggest that Tomcat, EHCache and JCS are all implementing their\nshutdown hooks badly - or that log4j isn't very shutdown friendly.\n\nBacking off on this issue in favour of one of the log4j committers :)", "id": 103843, "time": "2007-05-30T15:34:24Z", "creator": "bayard@apache.org", "creation_time": "2007-05-30T15:34:24Z", "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 40212, "text": "Hello,\n\nI also have the same problem using log4j 1.2.14. I get the next stack trace in\ncatalinat.out at tomcat startup (I use Spring as container)\n\nJun 4, 2007 10:07:40 AM org.apache.catalina.core.StandardService start\nINFO: Starting service Catalina\nJun 4, 2007 10:07:40 AM org.apache.catalina.core.StandardEngine start\nINFO: Starting Servlet Engine: Apache Tomcat/5.5.20\nJun 4, 2007 10:07:40 AM org.apache.catalina.core.StandardHost start\nINFO: XML validation disabled\nJun 4, 2007 10:07:40 AM org.apache.catalina.startup.HostConfig deployWAR\nINFO: Deploying web application archive xxx_yyy_web.war\nJun 4, 2007 10:07:42 AM org.apache.catalina.core.StandardContext start\nSEVERE: Error listenerStart\nJun 4, 2007 10:07:42 AM org.apache.catalina.core.StandardContext start\nSEVERE: Context [/xxx_yyy_web] startup failed due to previous errors\nERROR: unable to return the LOG xxx.xxx.xxx.services.security.InputCheckingHelper\njava.lang.NullPointerException\n        at org.apache.log4j.LogManager.getLogger(LogManager.java:188)\n        at org.apache.log4j.Logger.getLogger(Logger.java:104)\n        at xxx.xxx.xxx.util.logging.AbstractLogImpl.<init>(AbstractLogImpl.java:20)\n        at xxx.xxx.xxx.util.logging.SimpleLogImpl.<init>(SimpleLogImpl.java:14)\n        at xxx.xxx.xxx.util.logging.LogFactory.createLog(LogFactory.java:145)\n        at xxx.xxx.xxx.util.logging.LogFactory.getLog(LogFactory.java:82)\n        at xxx.xxx.xxx.util.logging.LogFactory.getLog(LogFactory.java:48)\n        at\nxxx.xxx.xxx.services.security.InputCheckingHelper.<clinit>(InputCheckingHelper.java:17)\n        at sun.misc.Unsafe.ensureClassInitialized(Native Method)\n        at sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor(Unknown Source)\n        at sun.reflect.ReflectionFactory.newFieldAccessor(Unknown Source)\n        at java.lang.reflect.Field.acquireFieldAccessor(Unknown Source)\n        at java.lang.reflect.Field.getFieldAccessor(Unknown Source)\n        at java.lang.reflect.Field.set(Unknown Source)\n        at\norg.apache.catalina.loader.WebappClassLoader.clearReferences(WebappClassLoader.java:1611)\n        at\norg.apache.catalina.loader.WebappClassLoader.stop(WebappClassLoader.java:1492)\n        at org.apache.catalina.loader.WebappLoader.stop(WebappLoader.java:736)\n        at org.apache.catalina.core.StandardContext.stop(StandardContext.java:4393)\n        at org.apache.catalina.core.StandardContext.start(StandardContext.java:4241)\n        at\norg.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:759)\n        at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:739)\n        at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524)\n        at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:809)\n        at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:698)\n        at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:472)\n        at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1122)\n        at\norg.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:310)\n        at\norg.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1021)\n        at org.apache.catalina.core.StandardHost.start(StandardHost.java:718)\n        at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1013)\n        at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)\n        at org.apache.catalina.core.StandardService.start(StandardService.java:450)\n        at org.apache.catalina.core.StandardServer.start(StandardServer.java:709)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:551)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n        at java.lang.reflect.Method.invoke(Unknown Source)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:294)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:432)\n\n", "id": 104023, "time": "2007-06-04T02:35:28Z", "creator": "hsq125@gmail.com", "creation_time": "2007-06-04T02:35:28Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 40212, "text": "I have the same problem during redeploy. It sometimes happens during shutdown\nand always when it is started again:\n\nCaused by: java.lang.NullPointerException\n\tat org.apache.log4j.Category.isEnabledFor(Category.java:746)\n\tat org.apache.commons.logging.impl.Log4JLogger.isTraceEnabled(Log4JLogger.java:327)\n\tat net.sf.ehcache.store.MemoryStore.get(MemoryStore.java:137)\n\tat net.sf.ehcache.Cache.searchInMemoryStore(Cache.java:820)\n\tat net.sf.ehcache.Cache.get(Cache.java:655)\n\tat net.sf.ehcache.constructs.blocking.BlockingCache.get(BlockingCache.java:513)\n\tat\nnet.sf.ehcache.constructs.blocking.SelfPopulatingCache.get(SelfPopulatingCache.java:71)\n\nMy setup is this:\n\n- commons-logging-api 1.1 in tomcat/bin\n- commons-logging 1.1 in tomcat/common/lib\n- log4j 1.2.14 in tomcat/common/lib\n- ehcache 1.2.4 in tomcat/common/lib\n- property files in tomcat/common/classes\n- commons-logging 1.1 in WEB-INF/lib\n- log4j 1.2.14 in WEB-INF/lib\n- property files in WEB-INF/classes\n\nI have *two* webapps deployed which use ehcache. My guess is that during\nshutdown, the log4j which is used by tomcat itself is destroyed while the webapp\ntries to get rid of its copy because there is a mixup in the classloader or a\npointer into log4j from ehcache (which probably uses the tomcat log4j) leaks\ninto the webapp.", "id": 105133, "time": "2007-07-06T02:39:42Z", "creator": "digulla@hepe.com", "creation_time": "2007-07-06T02:39:42Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 40212, "attachment_id": null, "id": 106888, "time": "2007-08-18T09:23:15Z", "creator": "wiseley@gmail.com", "creation_time": "2007-08-18T09:23:15Z", "is_private": false, "text": "I am getting a NullPointerException in LogManager line 188 because\nLogManager.repositorySelector is null. The user of LogManager in this case is\nthe JCS ShrinkerThread class. I only get this exception after Tomcat reloads the\ncontext. My theory is that the static block at the top of LogManager is not\nexecuting for some reason, or is failing. Eclipse apparently can't debug static\nblocks, so it's hard for me to see exactly what's happening. Here is a stack trace:\n\nException in thread \"Thread-2\" java.lang.NullPointerException\n        at org.apache.log4j.LogManager.getLogger(LogManager.java:188)\n        at org.apache.log4j.Logger.getLogger(Logger.java:104)\n        at\norg.apache.commons.logging.impl.Log4JLogger.getLogger(Log4JLogger.java:229)\n        at\norg.apache.commons.logging.impl.Log4JLogger.isDebugEnabled(Log4JLogger.java:239)\n        at\norg.apache.jcs.engine.memory.shrinking.ShrinkerThread.shrink(ShrinkerThread.java:120)\n        at\norg.apache.jcs.engine.memory.shrinking.ShrinkerThread.run(ShrinkerThread.java:96)\n        at EDU.oswego.cs.dl.util.concurrent.ClockDaemon$RunLoop.run(Unknown Source)\n        at java.lang.Thread.run(Thread.java:595)\n"}, {"count": 9, "tags": [], "bug_id": 40212, "attachment_id": null, "id": 106890, "time": "2007-08-18T11:03:18Z", "creator": "wiseley@gmail.com", "creation_time": "2007-08-18T11:03:18Z", "is_private": false, "text": "After some further investigation, I believe the error I previously reported was\ncaused a stray thread created by JCS that was left running after the context\nreloaded. That thread referenced a class with a final static logger. I solved\nthis problem in my application by adding\nJCS.getInstance(\"someRegionName\").dispose(); to the Filter.destroy() method of\none of my Servlet Filters. I don't pretend to know exactly why that fixed it,\nbut it did. I would consider this is a JCS bug, not a Log4J bug.\n\n"}, {"count": 10, "attachment_id": null, "bug_id": 40212, "text": "Marking INVALID until it can be shown as a log4j bug with a proposed resolution.", "id": 107102, "time": "2007-08-22T19:15:36Z", "creator": "carnold@apache.org", "creation_time": "2007-08-22T19:15:36Z", "tags": [], "is_private": false}, {"count": 11, "attachment_id": null, "bug_id": 40212, "text": "I also don't think this is a log4j issue but the NPE usually happens when\nsomething is wrong with the classloader (keeping a static reference to log4j\nwhile the webapp is reloaded or loading log4j in one classloader and then trying\nto log from another).\n\nTherefore, I suggest to add a check for a null value here and throw an\nIllegalStateException() with this message: \"repositorySelector is null. This can\nonly happen if log4j classes are used from two different classloaders. Look for\nstale static references to loggers and make sure that all loggers are loaded via\nthe same classloader.\"\n\nThat won't fix the issue but will make it much more straightforward to fix the\nreal problem.", "id": 107181, "time": "2007-08-23T11:38:34Z", "creator": "digulla@hepe.com", "creation_time": "2007-08-23T11:38:34Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "text": "Added a check of repositorySelector before dereferencing it.  If null, a new repositorySelector is created \nwrapping a NOPLoggerRepository, the guard is nulled and a LogLog.error message is output.  Should \nprevent the NPE's that you are seeing, but you will lose all logging until and unless something changes the \nrepository selector.  Immediate feedback would be much appreciated.", "is_private": false, "id": 107194, "creator": "carnold@apache.org", "time": "2007-08-23T12:42:44Z", "bug_id": 40212, "creation_time": "2007-08-23T12:42:44Z", "attachment_id": null}, {"count": 13, "tags": [], "creator": "digulla@hepe.com", "attachment_id": null, "is_private": false, "id": 107195, "time": "2007-08-23T13:02:55Z", "bug_id": 40212, "creation_time": "2007-08-23T13:02:55Z", "text": "After looking through the official log4j website, I couldn't find a link to the\ntrunk. Where is it?"}, {"count": 14, "tags": [], "text": "svn co https://svn.apache.org/repos/asf/logging/log4j/trunk\n\nwill get you the current SVN HEAD which is close to the final 1.2.15 release.  (log4j 1.3 has been moved off  \nto a thread).  To build, download Maven 2.0.7 and then do a \"mvn package\".\n\nStaged new website is available at http://svn.apache.org/repos/asf/logging/site/trunk/docs/index.html", "attachment_id": null, "id": 107199, "creator": "carnold@apache.org", "time": "2007-08-23T13:28:28Z", "bug_id": 40212, "creation_time": "2007-08-23T13:28:28Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 40212, "text": "Fix is available in log4j 1.2.15 RC6 and later.", "count": 15, "id": 107253, "time": "2007-08-25T06:50:54Z", "creator": "carnold@apache.org", "creation_time": "2007-08-25T06:50:54Z", "is_private": false}, {"count": 16, "attachment_id": 20709, "creator": "digulla@hepe.com", "is_private": false, "id": 107254, "time": "2007-08-25T08:54:45Z", "bug_id": 40212, "creation_time": "2007-08-25T08:54:45Z", "tags": [], "text": "Created attachment 20709\nPatch to fix the same NPE in Category.java\n\nHere is a patch which fixes the same issue for Category.isXxxEnabled().\n\nTwo comments: Check the TODO in the patch. There are several places where\nrepository is written to despite the comment in setHierarchy(). To make the\npatch compile, I had to make it protected.\n\nAlso, I'm not sure if anyone ever calls setHierarchy(null) during shutdown of\nLog4j. So feel free to remove the code which uses \"nulledBy\". Otherwise, this\nmight help to track down these bugs."}, {"count": 17, "tags": [], "text": "Can't accept the 2007-08-25 patch since it changes the visibility from protected to private of \nCategory.repository which breaks API compatibility.  Should not have been protected, but we are stuck \nwith that now.", "is_private": false, "id": 107255, "creator": "carnold@apache.org", "time": "2007-08-25T10:10:17Z", "bug_id": 40212, "creation_time": "2007-08-25T10:10:17Z", "attachment_id": null}, {"count": 18, "tags": [], "text": "Created attachment 20710\nFixed patch\n\nNot as safe as the first one but should work equally well in the standard case\n(where users don't extend Category). Instead of marking it private, I've\ndeprecated the field.", "is_private": false, "id": 107262, "creator": "digulla@hepe.com", "time": "2007-08-26T04:12:54Z", "bug_id": 40212, "creation_time": "2007-08-26T04:12:54Z", "attachment_id": 20710}, {"count": 19, "tags": [], "creator": "chrisahn@gmx.net", "is_private": false, "text": "This may be related to \"NPE in Logging due to classloading\"\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=41939", "id": 109755, "time": "2007-10-25T15:07:30Z", "bug_id": 40212, "creation_time": "2007-10-25T15:07:30Z", "attachment_id": null}, {"count": 20, "attachment_id": null, "bug_id": 40212, "text": "I've followed the bugs mentioned there and I concur: log4j is probably being\nconfused by the Tomcat classloader clearing all static fields on unload.\n\nThis also means that the usual setup (one log4j/commons-logging per tomcat and\nper webapp) to get logging per webapp is not safe; if we get NPEs after reload,\nthis means that tomcat somehow mixes different instances of log4j (because after\nreload, there shouldn't be *anything* reachable from the last run even if the GC\ncouldn't throw the classes out, yet).", "id": 110189, "time": "2007-11-02T13:20:56Z", "creator": "digulla@hepe.com", "creation_time": "2007-11-02T13:20:56Z", "tags": [], "is_private": false}, {"count": 21, "tags": [], "text": "It seems that fixing this issue introduced another problem.\n\nAfter upgrading from 1.2.14 to 1.2.15 the following error show up during shutdown:\nlog4j:ERROR LogMananger.repositorySelector was null likely due to error in class\nreloading, using NOPLoggerRepository.\n\nNo errors at all with 1.2.14", "is_private": false, "id": 110558, "creator": "marius.scurtescu@gmail.com", "time": "2007-11-14T14:59:45Z", "bug_id": 40212, "creation_time": "2007-11-14T14:59:45Z", "attachment_id": null}, {"count": 22, "tags": [], "bug_id": 40212, "text": "Added a separate bug 43867", "id": 110560, "time": "2007-11-14T15:05:25Z", "creator": "marius.scurtescu@gmail.com", "creation_time": "2007-11-14T15:05:25Z", "is_private": false, "attachment_id": null}, {"count": 23, "tags": [], "text": "Bugs should not span releases and this was reported as fixed in 1.2.15.  Use Bug 43867 for post 1.2.15 \ndiscussion.  ", "attachment_id": null, "id": 110855, "creator": "carnold@apache.org", "time": "2007-11-20T08:48:05Z", "bug_id": 40212, "creation_time": "2007-11-20T08:48:05Z", "is_private": false}]