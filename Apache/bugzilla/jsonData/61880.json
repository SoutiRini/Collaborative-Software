[{"count": 0, "tags": [], "creator": "saanchi@gmail.com", "attachment_id": null, "is_private": false, "id": 202658, "time": "2017-12-08T22:12:08Z", "bug_id": 61880, "creation_time": "2017-12-08T22:12:08Z", "text": "Java process crashing multiple time on Tomcat \n\n\n Problem Summary \n --------------------------------------------------- \n Java process crashing multiple time on Tomcat \n\n Problem Description \n --------------------------------------------------- \n We see below exception being logged when the issue occur and this we suspect is causing Java process to crash frequently. \n\n OJDBC 5 : Implementation-Version: 11.2.0.1.0 \n Java(TM) SE Runtime Environment (build 1.7.0_79-b15) \nTomcat version is 5\n\n 2017-12-03 09:49:26,454|ERROR|Log Runner Thread|149766653| \n BasicConnectionFactory: Error while destroying a connection \n java.sql.SQLException: Protocol violation \n at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:450) \n at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:186) \n at oracle.jdbc.driver.T4C7Ocommoncall.doOLOGOFF(T4C7Ocommoncall.java:61) \n at oracle.jdbc.driver.T4CConnection.logoff(T4CConnection.java:491) \n at oracle.jdbc.driver.PhysicalConnection.close(PhysicalConnection.java:3754) \n at org.apache.commons.dbcp.DelegatingConnection.close(DelegatingConnection.java:151) \n at org.apache.commons.dbcp.PoolableConnection.reallyClose(PoolableConnection.java:95) \n at org.apache.commons.dbcp.PoolableConnectionFactory.destroyObject(PoolableConnectionFactory.java:301) \n at com.capula.connectionPool.BasicConnectionFactory.access$001(BasicConnectionFactory.java:17) \n at com.capula.connectionPool.BasicConnectionFactory$Destroyer.call(BasicConnectionFactory.java:40) \n at com.capula.connectionPool.BasicConnectionFactory$Destroyer.call(BasicConnectionFactory.java:30) \n at java.util.concurrent.FutureTask.run(FutureTask.java:262) \n at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) \n at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) \n at java.lang.Thread.run(Thread.java:745)"}, {"count": 1, "attachment_id": null, "bug_id": 61880, "is_private": false, "id": 202675, "time": "2017-12-09T20:01:18Z", "creator": "chris@christopherschultz.net", "creation_time": "2017-12-09T20:01:18Z", "tags": [], "text": "Invalid because:\n\n1. This error is occurring in Oracle's JDBC driver, not Tomcat. Note that this is a Java exception being thrown, and should not result in a JVM shutdown or process termination.\n2. Tomcat 5 is no longer supported[1]\n\n[1] https://tomcat.apache.org/tomcat-55-eol.html"}, {"attachment_id": null, "tags": [], "bug_id": 61880, "is_private": false, "count": 2, "id": 202694, "time": "2017-12-11T10:37:24Z", "creator": "saanchi@gmail.com", "creation_time": "2017-12-11T10:37:24Z", "text": "Hi,\n\nThank you for responding to the bug.\nI understand Tomcat 5 is desupported.\n\nWe are having an issue in production env where the tomcat server is crashing. We see below OOM errors,\nWould you be able to comment as what area needs investigation?\nIs it  the jdbc driver which is causing the issue? We have upgrade to jdbc driver 7 but still haivng below issue. Any comment/guideline much appreciated.\nThanks.\n\n2017-12-01 08:20:38,943|ERROR|TP-Processor1|42286971|\nException [Java heap space] in action [class org.apache.struts.action.ActionMapping]\ncom.capula.eoasis.EoasisException: Java heap space\n        at com.capula.eoasis.actions.EoasisDispatchAction.execute(EoasisDispatchAction.java:46)\n        at org.apache.struts.action.RequestProcessor.processActionPerform(RequestProcessor.java:421)\n        at org.apache.struts.action.RequestProcessor.process(RequestProcessor.java:226)\n        at org.apache.struts.action.ActionServlet.process(ActionServlet.java:1164)\n        at org.apache.struts.action.ActionServlet.doGet(ActionServlet.java:397)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:743)\n        at sun.reflect.GeneratedMethodAccessor681.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:606)\n        at com.capula.eoasis.actions.EoasisDispatchAction.execute(EoasisDispatchAction.java:40)\n        ... 42 more\nCaused by: java.lang.OutOfMemoryError: Java heap space\n        at java.lang.reflect.Array.newInstance(Array.java:70)\n        at oracle.jdbc.driver.BufferCache.get(BufferCache.java:226)\n        at oracle.jdbc.driver.PhysicalConnection.getCharBuffer(PhysicalConnection.java:7422)\n        at oracle.jdbc.driver.OracleStatement.prepareAccessors(OracleStatement.java:983)\n        at oracle.jdbc.driver.T4CTTIdcb.receiveCommon(T4CTTIdcb.java:273)\n        at oracle.jdbc.driver.T4CTTIdcb.receiveFromRefCursor(T4CTTIdcb.java:157)\n        at oracle.jdbc.driver.T4CResultSetAccessor.unmarshalOneRow(T4CResultSetAccessor.java:197)\n        at oracle.jdbc.driver.T4CTTIrxd.unmarshal(T4CTTIrxd.java:916)\n        at oracle.jdbc.driver.T4CTTIrxd.unmarshal(T4CTTIrxd.java:835)\n        at oracle.jdbc.driver.T4C8Oall.readRXD(T4C8Oall.java:658)\n        at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:328)\n        at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:186)\n        at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:521)\n        at oracle.jdbc.driver.T4CCallableStatement.doOall8(T4CCallableStatement.java:202)\n        at oracle.jdbc.driver.T4CCallableStatement.executeForRows(T4CCallableStatement.java:1005)\n        at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1307)\n        at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3449)\n        at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3550)\n        at oracle.jdbc.driver.OracleCallableStatement.execute(OracleCallableStatement.java:4693)\n        at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1086)\n        at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:168)\n        at com.capula.eoasis.model.dao.PatientDAO.getPatientDetails(PatientDAO.java:215)\n        at com.capula.eoasis.model.dao.TheatreDAO.getAppointmentNew(TheatreDAO.java:2023)\n        at com.capula.eoasis.model.dao.TheatreDAO.getMicroSessionAppointmentsNew(TheatreDAO.java:1915)\n        at com.capula.eoasis.model.theatre.TheatreViewManagerImpl.getMicroSessionsNew(TheatreViewManagerImpl.java:309)\n        at com.capula.eoasis.model.theatre.TheatreViewManagerImpl.getMicroSessions(TheatreViewManagerImpl.java:88)\n        at com.capula.eoasis.model.theatre.TheatreViewManagerImpl.getMicroSessions(TheatreViewManagerImpl.java:81)\n        at com.capula.eoasis.model.theatre.TheatreViewManagerImpl.getMicroSessions(TheatreViewManagerImpl.java:77)\n        at com.capula.eoasis.model.theatre.TheatreViewManagerImpl.getMicroSessions(TheatreViewManagerImpl.java:73)\n        at sun.reflect.GeneratedMethodAccessor662.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:606)"}, {"attachment_id": null, "tags": [], "bug_id": 61880, "text": "Tomcat 5 is no longer supported - and hasn't been for over 5 years.\n\nEven if it were, Bugzilla is not a support forum. You want the Apache Tomcat users mailing list.", "count": 3, "id": 202697, "time": "2017-12-11T11:02:07Z", "creator": "markt@apache.org", "creation_time": "2017-12-11T11:02:07Z", "is_private": false}]