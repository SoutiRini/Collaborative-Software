[{"count": 0, "tags": [], "bug_id": 15207, "attachment_id": null, "text": "When a URI passes through mod_proxy, either via ProxyPass or a proxying\nRewriteRule, mod_proxy appears to be decoding percent escaped characters before\npassing the URI on to the destination server.  (So, for example, if the original\nURI contains a \"%2B\", the destination server will see a \"+\".)\n\nThis is contrary to RFC 2616 (HTTP/1.1), which says 'A transparent proxy MUST\nNOT rewrite the \"abs_path\" part of the received Request-URI when forwarding it\nto the next inbound server, except as noted above to replace a null abs_path\nwith \"/\".' (section 5.1.2).  In addition, it breaks a CGI I'm using.  :)\n\nAs further information, the decoding seems to be recursive to a degree.  \"%252B\"\nis also converted into \"+\", but \"%25252B\" merely becomes \"%252B\".", "id": 27570, "time": "2002-12-10T01:58:06Z", "creator": "phil_g@pobox.com", "creation_time": "2002-12-10T01:58:06Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rl@math.technion.ac.il", "attachment_id": null, "id": 36186, "time": "2003-04-27T09:37:23Z", "bug_id": 15207, "creation_time": "2003-04-27T09:37:23Z", "is_private": false, "text": "A reverse proxy doesn't need to be transparent. It may be as well a caching\nproxy, that approached the backend server only if it doens't have a fresh copy\nof the requested object. There fore, it MAY alter the URL. However, there is a\nbug in this alteration: In the reverse proxy case, unescaping is done twice. In\nthe first   unesacping, the core does this for any non-proxy request. However,\nthis is done before reverse proxy requests are identified by matching the URL\nwith ProxyPass directives. Therefore, the second unescaping, in the function\nap_proxy_canonenc in proxy_util.c, should be done only for a standard proxy, and\nnot for a reverse proxy, and the line\n\nif (isenc && ch == '%') {\n\n(proxy_util.c:206 in httpd_2.0.45) should be replaced by\n\nif (isenc == PROXYREQ_PROXY && ch == '%') {"}, {"count": 2, "tags": [], "bug_id": 15207, "attachment_id": null, "text": "*** Bug 24873 has been marked as a duplicate of this bug. ***", "id": 59921, "time": "2004-06-26T14:50:26Z", "creator": "nick@webthing.com", "creation_time": "2004-06-26T14:50:26Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 15207, "text": "*** Bug 18564 has been marked as a duplicate of this bug. ***", "id": 59927, "time": "2004-06-26T16:10:39Z", "creator": "nick@webthing.com", "creation_time": "2004-06-26T16:10:39Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "nick@webthing.com", "attachment_id": null, "id": 60035, "time": "2004-06-29T06:47:18Z", "bug_id": 15207, "creation_time": "2004-06-29T06:47:18Z", "is_private": false, "text": "Fix now committed to HEAD (subject to review)"}, {"count": 5, "text": "This bug still exists as of 2.0.53. The suggested patch in proxy_util.c from Zvi\nHar'El, listed below, corrects the problem for me:\n\nif (isenc == PROXYREQ_PROXY && ch == '%') {\n\nTo reproduce the bug, I setup a Reverse Proxy and use the following urls for\ntesting:\n\nhttp://1.2.3.4/%\t\t-Returns bad request\nhttp://1.2.3.4/%25\t\t-Works\nhttp://1.2.3.4/proxy/%\t\t-Returns bad request\nhttp://1.2.3.4/proxy/%25\t-Returns bad request\n\nAfter the patch, the last example works properly.", "bug_id": 15207, "attachment_id": null, "id": 71223, "time": "2005-02-18T21:02:30Z", "creator": "joshua.hirsh@partnersolutions.ca", "creation_time": "2005-02-18T21:02:30Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "cahya@mail.com", "text": "I have also the same problem with apache 2.0.54, \nis there any plan to fix it in the next release?\nthanks", "id": 75278, "time": "2005-05-24T18:30:59Z", "bug_id": 15207, "creation_time": "2005-05-24T18:30:59Z", "is_private": false, "attachment_id": null}, {"count": 7, "attachment_id": null, "bug_id": 15207, "text": "Fixed for 2.0.55: http://svn.apache.org/viewcvs.cgi?rev=227435&view=rev", "id": 78163, "time": "2005-08-05T16:02:29Z", "creator": "jorton@redhat.com", "creation_time": "2005-08-05T16:02:29Z", "tags": [], "is_private": false}]