[{"count": 0, "tags": [], "bug_id": 48692, "is_private": false, "id": 134279, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2010-02-07T02:41:33Z", "time": "2010-02-07T02:41:33Z", "text": "Provide an option to treat application/x-www-form-urlencoded encoded parameters in a PUT request in a similar manner to application/x-www-form-urlencoded parameters in a POST request"}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "*** Bug 49964 has been marked as a duplicate of this bug. ***", "id": 139994, "time": "2010-09-20T16:31:54Z", "bug_id": 48692, "creation_time": "2010-09-20T16:31:54Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 48692, "is_private": false, "count": 2, "id": 139995, "time": "2010-09-20T16:40:52Z", "creator": "chris@christopherschultz.net", "creation_time": "2010-09-20T16:40:52Z", "text": "I'll copy my comments from the duplicate bug #49964 just so they're more likely to be read:\n\nMy proposal is this (and I'm prepared to write the patches myself):\n\n1. A new configuration attribute on the <Connector> element:\n\"parseBodyRequestParametersMethods\" (suggestions for a better name are\nwelcome). The default value for this setting is \"POST\" which retains strict\nservlet spec compliance.\n\n2. Change catalina.connector.Request.parseParameters method to allow any method\nmentioned in the above configuration attribute to undergo request body\nconversion into request parameters. All other existing requirements remain in\nplace: the request body must be application/x-www-form-urlencoded, must fit\ninto maxPostSize, etc.\n\nOne question I have about this implementation: how should it behave under\norg.apache.catalina.STRICT_SERVLET_COMPLIANCE=true? I believe that\norg.apache.catalina.STRICT_SERVLET_COMPLIANCE=true should take precedence over\nthis setting, disable it's use, and issue a warning/error during startup when\nthey conflict."}, {"count": 3, "tags": [], "bug_id": 48692, "is_private": false, "text": "How about parsePutBodyParams (since POST will always be parsed) with values false (default) or true?\n\nThe logic for STRICT_SERVLET_COMPLIANCE in 7.0.x has been made more consistent. It now only changes the defaults for other options and explicitly setting an option always overrides STRICT_SERVLET_COMPLIANCE.\n\nTherefore, assuming PUT parsing is off by default, it should be independent of STRICT_SERVLET_COMPLIANCE.", "id": 139996, "time": "2010-09-20T16:45:51Z", "creator": "markt@apache.org", "creation_time": "2010-09-20T16:45:51Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "is_private": false, "id": 139997, "time": "2010-09-20T16:50:00Z", "bug_id": 48692, "creation_time": "2010-09-20T16:50:00Z", "text": "In one of the discussions on the tomcat-user list, the OP had complained that he couldn't pass \"parameters\" using methods such as DELETE, etc. I figured I'd let the configuration specify any HTTP method(s) that should be parsed, and not just PUT.\n\nThat's why I chose that stupidly-long name.\n\nGood news about the STRICT_SERVLET_COMPLIANCE: since this is a new configuration parameter, it will simply default to adhere strictly to the servlet spec (that is, only POST gets it's body parsed) and any user-defined configuration will override it. Thanks."}, {"count": 5, "tags": [], "bug_id": 48692, "text": "OK. A comma separated list of method names would make sense in that case. Although methods that are not allowed to have bodies should not be permitted.", "id": 139998, "time": "2010-09-20T16:54:15Z", "creator": "markt@apache.org", "creation_time": "2010-09-20T16:54:15Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 48692, "text": "Hmm. I was trying to avoid an exhaustive or partial list of HTTP methods specifically in the code: I wanted to let this code grow to work with any crazy non-standard methods a user might want to use, too (like \"MYPUT\"). Such non-standard HTTP methods might actually then allow, say, a REST-based service work without breaking other webapps that depend on spec-compliant handling of PUT bodies :)\n\nI'll read-through the HTTP spec to look for methods for which bodies are actually forbidden, and we can reject those with a warning.", "id": 139999, "time": "2010-09-20T17:02:15Z", "creator": "chris@christopherschultz.net", "creation_time": "2010-09-20T17:02:15Z", "is_private": false, "attachment_id": null}, {"count": 7, "attachment_id": null, "bug_id": 48692, "is_private": false, "id": 140000, "time": "2010-09-20T18:15:54Z", "creator": "chris@christopherschultz.net", "creation_time": "2010-09-20T18:15:54Z", "tags": [], "text": "Okay, I've got my patch working in TC 7, and I've renamed the configuration setting to the less unwieldy \"parseBodyMethods\"."}, {"count": 8, "tags": [], "text": "Mark, I've just glanced-over RFC 2616 and I can't find any HTTP methods (defined in section 9) that specifically prohibit a request body.\n\nOn the other hand, section 4.3 says:\n\n\"\nThe presence of a message-body in a request is signaled by the inclusion of a Content-Length or Transfer-Encoding header field in the request's message-headers. A message-body MUST NOT be included in a request if the specification of the request method (section 5.1.1) does not allow sending an entity-body in requests.\n\"\n\nThere's a short discussion that can be found here:\nhttp://lists.w3.org/Archives/Public/ietf-http-wg/2006AprJun/0103.html\n\nI tend to agree with one of the contributor's assertion that the principle of robustness applies, here: we shouldn't actively prohibit a request body from being sent, here.", "attachment_id": null, "bug_id": 48692, "id": 140023, "time": "2010-09-21T10:56:59Z", "creator": "chris@christopherschultz.net", "creation_time": "2010-09-21T10:56:59Z", "is_private": false}, {"count": 9, "tags": [], "text": "(In reply to comment #8)\n> Mark, I've just glanced-over RFC 2616 and I can't find any HTTP methods\n> (defined in section 9) that specifically prohibit a request body.\n\nTRACE does. No others I could see.", "is_private": false, "id": 140031, "creator": "markt@apache.org", "time": "2010-09-21T15:36:42Z", "bug_id": 48692, "creation_time": "2010-09-21T15:36:42Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 48692, "text": "Created attachment 26252\nPatch to provide request-entity parsing for arbitrary HTTP methods\n\nThis patch adds a new configuration setting \"parseBodyMethods\" to all connectors. Simply specify the list of HTTP methods that should be parsed as a comma-separated list (e.g. \"POST, PUT\") to enable this parsing on those methods.\n\nRequesting the TRACE method will result in an IllegalArgumentException and no changes to the Connector's configuration, to avoid an HTTP spec violation.", "id": 141373, "time": "2010-11-03T20:22:40Z", "creator": "chris@christopherschultz.net", "creation_time": "2010-11-03T20:22:40Z", "is_private": false, "attachment_id": 26252}, {"count": 11, "tags": [], "bug_id": 48692, "text": "I ought to provide a documentation patch as well. One will be forthcoming.\n\nAlso: should I bother to log a WARN (or other level) message when this setting is used to alter the servlet-spec-compliant setting of simply \"POST\"?", "id": 141374, "attachment_id": null, "creator": "chris@christopherschultz.net", "creation_time": "2010-11-03T20:24:25Z", "time": "2010-11-03T20:24:25Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 48692, "attachment_id": null, "id": 141375, "time": "2010-11-03T20:41:15Z", "creator": "markt@apache.org", "creation_time": "2010-11-03T20:41:15Z", "is_private": false, "text": "No need for a log message. We don't do it elsewhere in similar circumstances."}, {"count": 13, "tags": [], "bug_id": 48692, "attachment_id": 26259, "is_private": false, "id": 141494, "time": "2010-11-05T13:17:46Z", "creator": "chris@christopherschultz.net", "creation_time": "2010-11-05T13:17:46Z", "text": "Created attachment 26259\nPatch to docs describing the previous patch\n\n...and the doc patch."}, {"count": 14, "tags": [], "bug_id": 48692, "attachment_id": null, "id": 142337, "time": "2010-12-03T11:11:26Z", "creator": "chris@christopherschultz.net", "creation_time": "2010-12-03T11:11:26Z", "is_private": false, "text": "Fixed in trunk. Will be included in Tomcat 7.0.6."}, {"count": 15, "tags": [], "bug_id": 48692, "text": "*** Bug 53409 has been marked as a duplicate of this bug. ***", "id": 161194, "attachment_id": null, "creator": "chris@christopherschultz.net", "creation_time": "2012-08-09T16:44:24Z", "time": "2012-08-09T16:44:24Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 48692, "attachment_id": null, "id": 161196, "time": "2012-08-09T16:48:23Z", "creator": "chris@christopherschultz.net", "creation_time": "2012-08-09T16:48:23Z", "is_private": false, "text": "Proposed for 6.0.x."}, {"count": 17, "tags": [], "text": "Created attachment 29222\nPatch for Tomcat 6.0\n\nThis patch is an amalgamation of the following patches:\nhttp://svn.apache.org/viewvc?view=revision&revision=1041892 (initial patch)\nhttp://svn.apache.org/viewvc?view=revision&revision=1043983 (fixes formatting; improved documentation)\nhttp://svn.apache.org/viewvc?view=revision&revision=1049264 (improved javadoc)\n\nPlus a modification of the original patch because Tomcat 6.0.x's Connector does not have an \"initInternal\" method.", "is_private": false, "id": 161356, "creator": "chris@christopherschultz.net", "time": "2012-08-14T00:54:10Z", "bug_id": 48692, "creation_time": "2012-08-14T00:54:10Z", "attachment_id": 29222}, {"count": 18, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "The patch has been applied to 6.0.x and will be included in 6.0.36 onwards.", "id": 162564, "time": "2012-10-04T14:56:44Z", "bug_id": 48692, "creation_time": "2012-10-04T14:56:44Z", "is_private": false}]