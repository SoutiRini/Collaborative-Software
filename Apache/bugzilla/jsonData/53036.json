[{"count": 0, "attachment_id": 28545, "bug_id": 53036, "text": "Created attachment 28545\nSample Windows project to reproduce the bug\n\nFixCRLF task always converts line endings to platform-default even if eol=\"asis\" option is specified.\n\nSteps to reproduce in Windows:\n\n1) Create a simple Ant project for conversion, for example:\n\n<project name=\"test\">\n        <target name=\"crlf\">\n                <fixcrlf file=\"test.txt\"\n                         destDir=\"out\"\n                         eol=\"asis\"\n                         tab=\"remove\"\n                         tablength=\"4\"/>\n        </target>\n</project>\n\n2) Create a test file, test.txt, for example:\n\n^I^Ia$\n^Ib$\n\nwhere \"^I\" is a single TAB character and \"$\" is a single LF character.\n\n3) Build the \"crlf\" target:\n\n$ ant crlf\n\n\nObserved result: the out/test.txt file has each TAB character replaced with 4 spaces, and each end of line represented with CRLF sequence.\n\nExpected result: the out/test.txt file should have each TAB character replaced with 4 spaces but EOLs should stay LF-only.\n\n\nSteps to reproduce in *NIX: same, but make sure that the initial test.txt file in step 2 uses DOS convention for line endings, for example:\n\n$ unix2dos test.txt\n\nAfter the crlf target is built, the out/test.txt will have LF line endings while expected result is the original CRLF line endings\n\n\nAttached is a sample project which can be used to reproduce the bug in Windows.\n\n\nTested build: apache-ant-1.9.0alpha nightly build #296 (Mar 19, 2012 12:02:44 AM)\n\nTested platforms:\n1) Windows 7 Enterprise\n2) Red Hat Enterprise 6.2 kernel 2.6.32-220.4.2.el6.x86_64", "id": 157197, "time": "2012-04-04T23:11:28Z", "creator": "snake.scaly@gmail.com", "creation_time": "2012-04-04T23:11:28Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 53036, "is_private": false, "id": 159352, "time": "2012-05-26T20:47:19Z", "creator": "jkf@apache.org", "creation_time": "2012-05-26T20:47:19Z", "tags": [], "text": "Cause found, but the function is quite old.\n\nASIS currently is implemented to always go to the platform encoding, this has been so since the beginning. Indeed this does not match the documentation.\n\nas the documentation is quite explicit on how to achieve the platform encoding (by not specifying the eol attribute, I will change the behaviour of ASIS to indeed leave eols always alone.\n\nfixlast will never apply in case eol behaviour is ASIS."}]