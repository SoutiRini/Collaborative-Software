[{"count": 0, "tags": [], "creator": "muzammel.linux@gmail.com", "attachment_id": null, "id": 133421, "time": "2010-01-07T06:17:44Z", "bug_id": 48505, "creation_time": "2010-01-07T06:17:44Z", "is_private": false, "text": "hi Guys\n\nI am using apache version Apache/2.2.13 (Unix) on Fedora -11 , and using ldap as url authentications. I setup my conf in --> /etc/httpd/conf.d/mydomain.conf with below values\n\nI define only here below the ldap related entries only.\n\n\nLDAPTrustedMode TLS\nLDAPConnectionTimeout 4\n\n<Directory \"/var/www/html/test\" >\n\n\nAuthName \"Testing Ldap fail over\"\nAuthType Basic\n\n# The LDAP server(s)\nAuthLDAPURL \"ldap://ldap1.mydomain.com ldap2.mydomain.com/dc=mydomain,dc=com?uid??\"\nAuthBasicProvider ldap\nAuthLDAPBindDN \"uid=webcon,ou=WebAdmin,dc=mydomain,dc=com\"\nAuthLDAPBindPassword abxxyz\n\nAuthLDAPGroupAttribute memberUid\n\nRequire ldap-group cn=WEBOU,dc=mydomain,dc=com\nOrder Allow,Deny\nOptions Indexes FollowSymLinks Multiviews\nAllow from All\n\n</Directory>\n\n\nSo its working when primary ldap1 server is up but for testing i down the ldap1 and then do check, so apache not forwarded the auth request to ldap2 for a long time. it takes so many time to connect with ldap2, i think its may be 15-20 mins. I want to immediate ldap failover if primary ldap1 is down so it connects connect to ldap2 after just some seconds. For this i can find directive \"LDAPConnectionTimeout\" in docs i can try it to define 7 seconds, but still it fails to connect with ldap2.\n\nSo please kindly give suggestions , which i need extra to make ldap fail over effective.\nEdit/Delete Message"}, {"count": 1, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 133422, "time": "2010-01-07T06:37:50Z", "bug_id": 48505, "creation_time": "2010-01-07T06:37:50Z", "is_private": false, "text": "Apache doesn't do anything with the two hostnames or the connect timeout (boils down to LDAP option  LDAP_OPT_NETWORK_TIMEOUT), they are passed up-front to whatever LDAP library on your system Apache has been linked with.\n\nif it takes 15-20 minutes to figure out you can't connect, you probably have a firewall that blocks the RST sent from the LDAP server to the webserver, which is what signales that the connection is activelt refused."}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> Apache doesn't do anything with the two hostnames or the connect timeout (boils\n> down to LDAP option  LDAP_OPT_NETWORK_TIMEOUT), they are passed up-front to\n> whatever LDAP library on your system Apache has been linked with.\n> \n> if it takes 15-20 minutes to figure out you can't connect, you probably have a\n> firewall that blocks the RST sent from the LDAP server to the webserver, which\n> is what signales that the connection is activelt refused.\n\nHi\n\nNo in my firewall, ldap ports (389,636) are allowed for both incoming/outgoing for all hosts. the above timeout directive is mentioned in apache 2.2 docs, but i dont know why its not forwarding request to secondary ldap2 after desire seconds", "attachment_id": null, "id": 133424, "creator": "muzammel.linux@gmail.com", "time": "2010-01-07T07:10:10Z", "bug_id": 48505, "creation_time": "2010-01-07T07:10:10Z", "is_private": false}, {"count": 3, "tags": [], "creator": "muzammel.linux@gmail.com", "attachment_id": null, "id": 133425, "time": "2010-01-07T07:20:09Z", "bug_id": 48505, "creation_time": "2010-01-07T07:20:09Z", "is_private": false, "text": "i forget to change status"}, {"count": 4, "tags": [], "bug_id": 48505, "attachment_id": null, "text": "I've clarified the documentation here:\n\nhttp://svn.apache.org/viewvc?rev=896897&view=rev\n\nBut it's not an Apache bug if your LDAP client takes 15 minutes to fail to acquire a connection, and this is not a support forum.", "id": 133426, "time": "2010-01-07T07:31:23Z", "creator": "covener@gmail.com", "creation_time": "2010-01-07T07:31:23Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 48505, "attachment_id": null, "text": "(In reply to comment #4)\n> I've clarified the documentation here:\n> \n> http://svn.apache.org/viewvc?rev=896897&view=rev\n> \n> But it's not an Apache bug if your LDAP client takes 15 minutes to fail to\n> acquire a connection, and this is not a support forum.\n\nmy dear on same machine, my clients just take 5 seconds for ssh/vsftpd auth with ldap failover, but for apache its take a to much time, and also one thing more leave the time taken, i have a problem just, when my primary ldap is down, apache not forward request to ldap2 just, the time thing i mentioned i tested it again and its still fails after the 15th min. so please suggest.\n\nThanks", "id": 133429, "time": "2010-01-07T08:06:05Z", "creator": "muzammel.linux@gmail.com", "creation_time": "2010-01-07T08:06:05Z", "is_private": false}, {"count": 6, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 133430, "time": "2010-01-07T08:09:43Z", "bug_id": 48505, "creation_time": "2010-01-07T08:09:43Z", "is_private": false, "text": "http://httpd.apache.org/userslist.html"}, {"count": 7, "tags": [], "bug_id": 48505, "attachment_id": null, "text": "*** Bug 48515 has been marked as a duplicate of this bug. ***", "id": 133463, "time": "2010-01-09T09:53:13Z", "creator": "covener@gmail.com", "creation_time": "2010-01-09T09:53:13Z", "is_private": false}, {"count": 8, "tags": [], "creator": "muzammel.linux@gmail.com", "attachment_id": null, "id": 133466, "time": "2010-01-09T10:43:37Z", "bug_id": 48505, "creation_time": "2010-01-09T10:43:37Z", "is_private": false, "text": "Its not resolved yet and mailing list not provide me any info and update, so i reopened it again, and assume i touch with professionals peoples in this bugzilla community.\n\nThanks"}, {"count": 9, "tags": [], "creator": "covener@gmail.com", "text": "*** Bug 48515 has been marked as a duplicate of this bug. ***", "id": 133469, "time": "2010-01-09T11:30:29Z", "bug_id": 48505, "creation_time": "2010-01-09T11:30:29Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 48505, "attachment_id": null, "text": "attach your ErrorLog, with LogLevel debug set, and a binary, unformatted, unlimited capture length packet capture (tcpdump, wireshark) of your LDAP port. \n\nTo re-iterate, this timeout and failover is implemented by the LDAP library, not by Apache. Apache literally passess of the URL with two hostnames to the LDAP library in a single call. \n\nIf your network takes 15 minutes to figure out it can't connect, and your LDAP library doesn't use the network timeout for connect(), there's nothing Apache can do about it.", "id": 133471, "time": "2010-01-09T11:36:45Z", "creator": "covener@gmail.com", "creation_time": "2010-01-09T11:36:45Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 48505, "attachment_id": null, "text": "OK, I'm going to document this exhaustively.  Please bear with me.\n\nMY PLATFORM:\n\nI am using the mod_authnz_ldap that ships with Red Hat Enterprise Linux v5.4, as part of their httpd-2.2.3-31.el5_4.2 package.  The problem I am seeing is consistent with the hundreds of similar problems easily found with Google from various releases and builds of Apache 2.2 with the ASF LDAP auth modules.\n\nMy underlying libraries are OpenLDAP and I have turned debugging up to the point of crippling the server, which allows me to see exactly what Apache is doing and why so many people are whining and complaining.\n\nTHE ISSUE:\n\nThe problem appears to be in the AuthLDAPURL directive, which is not compliant with RFC2255 (the current relevant RFCs are 4516 and 4510) as documented, because the RFCs do not specify host failover syntax as far as I can determine.  I have searched extensively, and while there is a \"de facto standard\" for failover specification used by nearly all LDAP capable software (except Apache) I could not find any RFC that explicitly addressed failover host specification syntax.  Embedding multiple host names the way Apache does in the midst of an otherwise RFC compliant string breaks compliancy.\n\nIf Apache uses the de facto standard as used by IBM, HP, OpenLDAP, and PADL, there will be no more problems - the underlying libraries will be able to do whatever they are capable of doing instead of being restricted by Apache's ability to parse, and all the things people are trying to do will work.\n\nIf Apache continues to use the current syntax, users must make a choice of either efficiency or security - they cannot have both in a failover configuration.\n\nAPACHE DOCS:\n\nFrom the apache module itself (viewed via mod_info.c) the spec is described as: \n\nldap://host[:port]/basedn[?attrib[?scope[?filter]]]\n\nthe module doc additionally states:\n\n\"Host is the name of the LDAP server. Use a space separated list of hosts to specify redundant servers\"\n\nA second parameter of \"LDAP connection mode\" is allowed with permitted values of NONE, SSL, or TLS/STARTTLS.\n\nWHY THIS IS SUCH A PROBLEM:\n\nLDAP lookups frequently contain passwords, and ldap services frequently use dissimilar schema.\n\nIn real world LDAP deployments, system architects usually want to encrypt ldap lookups across networks for security, but do not wish to incur encryption overhead on ldap lookups using local secure channels (such as the loopback interface or named pipes or a separate network, depending on OS capabilities and site setup).\n\nLess commonly, sites that have dual LDAP backends (typically OpenLDAP and Active Directory) may present a single replicated data set using different attributes and thus may require different filter or port specifications for different hosts specified as failovers.\n\nAuthLDAPURL's syntax prevents this by forcing a single set of parameters across hosts, which is not required by the underlying libraries.\n\nEXAMPLES:\n\nThis is a commonly used LDAP failover configuration in PADL's pam_ldap and nss_ldap configurations (on Red Hat, both are in /etc/ldap.conf):\n\nuri ldap://127.0.0.1:389/ ldaps://remotehost.example.com:636/\n\nNote how the local loopback has no encryption, but the failover host is forced into an SSL tunnel.\n\nHere's another, with a named pipe:\n\nuri ldapi://%2fvar%2frun%2fldapi_sock/\n# Note: %2f encodes the '/' used as directory separator\n\nHere's one for a machine that runs scalix, note the weird port:\n\nuri ldapi://%2fvar%2frun%2fldapi_sock/ ldap://127.0.0.1:9009/ ldaps://failoverhost.example.com/\n\nThese are (host obscured) real-world examples from running machines using PADL's pam_ldap to access OpenLDAP's client libraries.  NONE of these configurations can be achieved with the Apache module's AuthLDAPURL syntax using the same libraries.  The limitation is not in the libraries, it's in the AuthLDAPURL syntax.\n\nRECOMMENDED SOLUTION:\n\nIn order to avoid breaking current applications that are using any of the \"hacks\" found on the net, implement a new parameter  AuthLDAPURI (note uri rather than url, this is consistent with LDAP v3 nomenclature as per RFC) which behaves exactly like OpenLDAP & PADL syntax.  This syntax allows all the various combinations that users want and is completely compliant with both  RFC2255 (historical) and RFC4516 (current) as well as LDAPS and STARTTLS.\n\nAuthLDAPURI ldap[s]://host[:port]/basedn[?attrib[?scope[?filter]]]\n\n\"Use a space separated list of URIs to specify redundant servers\"\n\nCONCLUSION:\n\nI hope this clears up the confusion about the problems users are encountering in the wild.  Google currently shows 23,100 hits when searching \"ldap failover in apache 2.2\", and they all seem to be complaints. There are clearly hundreds of sites struggling to find a solution to their misunderstanding of the Apache 2.2 LDAP limitations.  These limitations are not present in the underlying libraries.", "id": 133844, "time": "2010-01-22T14:49:11Z", "creator": "medievalist@gmail.com", "creation_time": "2010-01-22T14:49:11Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 48505, "attachment_id": null, "text": "Where does the lengthy post about ldapi:// tie back into the issue in this report? I think it belongs in a separate enhancement request.\n\nFor the OP, Stefan introduced a change to flip the option used by openldap for the connect or bind timeouts, which were not touched by the current mod_ldap timeout setting.\n\nhttp://svn.apache.org/viewvc?rev=898102&view=rev", "id": 133845, "time": "2010-01-22T15:23:05Z", "creator": "covener@gmail.com", "creation_time": "2010-01-22T15:23:05Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 48505, "attachment_id": null, "text": "Eric, it's not about ldapi, it's about the way Apache's broken AuthLDAPURL syntax is crippling systems by preventing easy access to underlying LDAP client libraries.\n\nYou require this for syntax:\n\ntransport://host host host host host:port/dn?filter\n\nthis is not RFC compliant, you cannot embed multiple hosts like that. This is a hack and it's not a good one.  It prevents many common and desirable configs.\n\nThis is the right way to do it:\n\ntransport://host:port/dn?filter transport://host:port/dn?filter transport://host:port/dn?filter\n\nIt's the way OpenLDAP's code does it, it's the way PADL's code does it, it's the only way I know of that conforms to the relevant RFCs.  The relevant RFCs were written by Kurt Zeilinga, and Kurt uses the form I've recommended in his own code.  All the people complaining about failover not working are trying to use this well-known format which Apache does not support.\n\nIn regards to ldapi, that is one single line of my previous post.  I was trying to illustrate that a proper syntax will allow access to *everything* the client libraries provide, including ldapi.  However, if that introduces confusion, please ignore the one single line that mentions ldapi, I did not mean to mislead you.", "id": 133892, "time": "2010-01-25T11:28:39Z", "creator": "medievalist@gmail.com", "creation_time": "2010-01-25T11:28:39Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 48505, "attachment_id": null, "text": "I understand what's desirable, I just don't see how it relates to the bug report it's attached to.  Stefan fixed the reported problem for modern openldap by using a timeout on non-connect operations, which is IMO orthogonal to not being able to specify two different transports.", "id": 133897, "time": "2010-01-25T11:40:58Z", "creator": "covener@gmail.com", "creation_time": "2010-01-25T11:40:58Z", "is_private": false}, {"count": 15, "tags": [], "creator": "covener@gmail.com", "text": "probably aiding in the confusion: OP discussed this issue in multiple bugs and on the ML, and my discussion of the internal host and connect timeouts is actually OT for the issue he reported and fixed by setting a timeout in his SDK directly.\n\nCharlie: Please open a new bug or enhancement request along with as much SDK info as you can gather.\n\ntimeout issue fixed in trunk rev for contemporary openldap (and resolvy OP via setting timesouts system-wide, see 48515)\n\nhttp://svn.apache.org/viewvc?rev=898102&view=rev", "id": 133900, "time": "2010-01-25T11:51:42Z", "bug_id": 48505, "creation_time": "2010-01-25T11:51:42Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "creator": "medievalist@gmail.com", "attachment_id": null, "id": 133952, "time": "2010-01-26T08:08:31Z", "bug_id": 48505, "creation_time": "2010-01-26T08:08:31Z", "is_private": false, "text": "(In reply to comment #15)\n> Charlie: Please open a new bug or enhancement request along with as much SDK\n> info as you can gather.\n\nSo let it be written, so let it be done.\n\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=48623\n\nEric, thank you for your help and advice!  I am not an experienced bugzilla user, and I haven't written anything in C in at least a decade, but I know LDAP very well."}, {"count": 17, "tags": [], "bug_id": 48505, "attachment_id": null, "text": "I have figure out network timeout issue and fixed it. As i mentioned i already define two ldap hosts, and its works on failover if ldap service is not run on primary ldap then its switch to secondary ldap2 automatically in just some seconds\nbut problem for if primary ldap is down like poweroff etc then apache hangs, so the soluiton is define below directive in --> /etc/openldap/ldap.conf file\n\nNETWORK_TIMEOUT 4 (with 4 seconds wait)\n\nSo its switch to ldap2 incase of network failure with primary ldap1, i can test it gradually by down ldap1 with poweroff or unplug network cable or block port using iptables, its now works f9. :)\n\nMuzi", "id": 133962, "time": "2010-01-26T10:49:12Z", "creator": "muzammel.linux@gmail.com", "creation_time": "2010-01-26T10:49:12Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 48505, "attachment_id": null, "text": "Relating to the ldapi:/// URLs, please refer to bug 44302.", "id": 142976, "time": "2010-12-28T16:19:35Z", "creator": "bugs@mark.ziesemer.com", "creation_time": "2010-12-28T16:19:35Z", "is_private": false}]