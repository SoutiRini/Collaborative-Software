[{"count": 0, "tags": [], "bug_id": 16998, "text": "The class org.apache.log4j.jdbc.JDBCAppender in Log4j 1.2.7 (and probably \nearlier too) leaks memory. In the method flushBuffer() values are added to the \nArrayList removes (removes.add(logEvent)), but this ArrayList is never cleared \nor values removed. After some time this will end up with an OutOfMemoryError.\nIn my example of flushBuffer() below there will be no memory leak.\n\nBesides this we have some ideas about improving performance for user threads\nby adding a thread that handles the database writing.\n\n  public void append(LoggingEvent event) {\n    buffer.add(event);\n    if (buffer.size() >= bufferSize)\n      logThread.wakeup();\n  }\n  public synchronized void flushBuffer() {\n    LoggingEvent logEvent = null;\n    while (buffer.size() >0) {\n      try {\n        logEvent = (LoggingEvent)buffer.remove(0);\n      } catch(Exception ignore){\n        break;\n      }\n      try {\n        String sql = getLogStatement(logEvent);\n        execute(sql);\n      } catch (SQLException sqle) {\n        // Unable to store LogEvent i database, put it back in buffer.\n        if (logEvent != null)\n          buffer.add(logEvent); // I'm not sure this is a good idea\n\n\terrorHandler.error(\"Failed to excute sql\", sqle, \nErrorCode.FLUSH_FAILURE);\n      }\n    }\n  }", "id": 31139, "time": "2003-02-12T14:58:31Z", "creator": "Roland.S.Nygren@Telia.se", "creation_time": "2003-02-12T14:58:31Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 16998, "text": "This is a duplicate of earlier reported bug #14827, which will be addressed in \nthe v1.2.8 release.  If you are interested in improving JDBCAppender, I urge \nyou to become involved with its development on the log4j-dev email list.  \nThanks.\n\n*** This bug has been marked as a duplicate of 14827 ***", "id": 31564, "time": "2003-02-19T04:54:39Z", "creator": "mwomack@apache.org", "creation_time": "2003-02-19T04:54:39Z", "is_private": false, "attachment_id": null}]