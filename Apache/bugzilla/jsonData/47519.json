[{"count": 0, "tags": [], "text": "Here's the gdb backtrace:\n\nStarting program: /usr/sbin/apache2 -D DEFAULT_VHOST -D NAGIOS -D SSL -D SSL_DEFAULT_VHOST -D PHP5 -d /usr/lib64/apache2 -f /etc/apache2/httpd.conf -X\n[Thread debugging using libthread_db enabled]\n[New Thread 0x7fe603c03740 (LWP 6379)]\n\nProgram received signal SIGSEGV, Segmentation fault.\n[Switching to Thread 0x7fe603c03740 (LWP 6379)]\n0x00007fe602982c5d in apr_pollset_add (pollset=0x0, descriptor=0x7fff0bc1bd30) at poll/unix/epoll.c:170\n170\t    if (pollset->flags & APR_POLLSET_NOCOPY) {\ngdb> where\n#0  0x00007fe602982c5d in apr_pollset_add (pollset=0x0, descriptor=0x7fff0bc1bd30) at poll/unix/epoll.c:170\n#1  0x0000000000456788 in child_main (child_num_arg=0) at prefork.c:532\n#2  0x0000000000456abc in make_child (s=0x21a1590, slot=0) at prefork.c:698\n#3  0x0000000000457044 in ap_mpm_run (_pconf=0x2069c00, plog=0x207b900, s=0x21a1590) at prefork.c:974\n#4  0x0000000000426555 in main (argc=16, argv=0x7fff0bc1c048) at main.c:740\ngdb> bt full\n#0  0x00007fe602982c5d in apr_pollset_add (pollset=0x0, descriptor=0x7fff0bc1bd30) at poll/unix/epoll.c:170\n\tev = {events = 1, data = {ptr = 0x0, fd = 0, u32 = 0, u64 = 0}}\n\tret = -1\n\telem = (pfd_elem_t *) 0x0\n\trv = 0\n#1  0x0000000000456788 in child_main (child_num_arg=0) at prefork.c:532\n\tpfd = {p = 0x0, desc_type = APR_POLL_SOCKET, reqevents = 1, rtnevents = 0, desc = {f = 0x21a0b80, s = 0x21a0b80}, client_data = 0x21a0b40}\n\tptrans = (apr_pool_t *) 0x2113220\n\tallocator = (apr_allocator_t *) 0x2113cc0\n\tstatus = 0\n\ti = 1\n\tlr = (ap_listen_rec *) 0x21a0b40\n\tpollset = (apr_pollset_t *) 0x0\n\tsbh = (ap_sb_handle_t *) 0x20afde0\n\tbucket_alloc = (apr_bucket_alloc_t *) 0x7fff20000000\n\tlast_poll_idx = 0\n#2  0x0000000000456abc in make_child (s=0x21a1590, slot=0) at prefork.c:698\n\tpid = 0\n#3  0x0000000000457044 in ap_mpm_run (_pconf=0x2069c00, plog=0x207b900, s=0x21a1590) at prefork.c:974\n\tindex = 0\n\tremaining_children_to_start = 197246576\n\trv = 0\n#4  0x0000000000426555 in main (argc=16, argv=0x7fff0bc1c048) at main.c:740\n\tc = 88 'X'\n\tconfigtestonly = 0\n\tconfname = 0x7fff0bc1c762 \"/etc/apache2/httpd.conf\"\n\tdef_server_root = 0x7fff0bc1c74c \"/usr/lib64/apache2\"\n\ttemp_error_log = 0x0\n\terror = 0x0\n\tprocess = (process_rec *) 0x2069bd0\n\tserver_conf = (server_rec *) 0x21a1590\n\tpglobal = (apr_pool_t *) 0x2069680\n\tpconf = (apr_pool_t *) 0x2069c00\n\tplog = (apr_pool_t *) 0x207b900\n\tptemp = (apr_pool_t *) 0x21a14e0\n\tpcommands = (apr_pool_t *) 0x2069cb0\n\topt = (apr_getopt_t *) 0x207b6e0\n\trv = 0\n\tmod = (module **) 0x66d6e0\n\toptarg = 0x0\n\tsignal_server = (apr_OFN_ap_signal_server_t *) 0\n\nIn strace, just before the SEGV happens, I see weird calls like this:\n\nsyscall_291(0x80000, 0x2, 0x17ae0b8, 0x7ffffe557600, 0x1d0, 0, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2 <unfinished ...>\n\nThe syscall then resumes and a SEGV is triggered.\n\nAt first I suspected this to be a dupe of bug 46467 since I ran 2.6.25.4, but an update to 2.6.29.5 didn't help. CONFIG_EPOLL is \"y\".\n\nSo I backdated from apr-1.3.6 to -1.3.5 and the problem went away.\n\nVersions involved:\napache 2.2.11-r2\napr 1.3.6 (1.3.5 does not have this problem)\napr-util 1.3.8\nkernel 2.6.29.5 (2.6.25.4 behaves likewise)\nglibc 2.9_p20081201\n\nulimits:\n# ulimit -a\ncore file size          (blocks, -c) 0\ndata seg size           (kbytes, -d) unlimited\nscheduling priority             (-e) 0\nfile size               (blocks, -f) unlimited\npending signals                 (-i) 38911\nmax locked memory       (kbytes, -l) 32\nmax memory size         (kbytes, -m) unlimited\nopen files                      (-n) 1024\npipe size            (512 bytes, -p) 8\nPOSIX message queues     (bytes, -q) 819200\nreal-time priority              (-r) 0\nstack size              (kbytes, -s) 8192\ncpu time               (seconds, -t) unlimited\nmax user processes              (-u) 38911\nvirtual memory          (kbytes, -v) unlimited\nfile locks                      (-x) unlimited", "attachment_id": null, "id": 128792, "creation_time": "2009-07-13T08:10:48Z", "time": "2009-07-13T08:10:48Z", "creator": "klausman@gentoo.org", "bug_id": 47519, "is_private": false}, {"count": 1, "tags": [], "creator": "rpluem@apache.org", "is_private": false, "text": "\n\n*** This bug has been marked as a duplicate of bug 46467 ***", "id": 128796, "time": "2009-07-13T09:03:24Z", "bug_id": 47519, "creation_time": "2009-07-13T09:03:24Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 47519, "is_private": false, "id": 128798, "time": "2009-07-13T09:40:31Z", "creator": "klausman@gentoo.org", "creation_time": "2009-07-13T09:40:31Z", "tags": [], "text": "That other bug says this should be fixed on the kernel side in 2.6.28.4. Wouldn't that indicate that it shouldn't happen with the kernel I used, either? Please clarify."}, {"count": 3, "tags": [], "bug_id": 47519, "attachment_id": 23971, "is_private": false, "id": 128801, "time": "2009-07-13T10:39:33Z", "creator": "chetanreddy@gmail.com", "creation_time": "2009-07-13T10:39:33Z", "text": "Created attachment 23971\nadd check for epoll_create1 function\n\nI had reported this bug on the mailing list. Here is a patch to apr that fixed the issue for me."}, {"count": 4, "tags": [], "text": "(In reply to comment #2)\n> That other bug says this should be fixed on the kernel side in 2.6.28.4.\n> Wouldn't that indicate that it shouldn't happen with the kernel I used, either?\n> Please clarify.\n\nMy fault I did not read your report completly. So yes, this should happen with a newer kernel. Maybe it is the issue mentioned by Chetan Reddy.\nCould you please test his patch?", "is_private": false, "id": 128804, "creator": "rpluem@apache.org", "time": "2009-07-13T11:53:13Z", "bug_id": 47519, "creation_time": "2009-07-13T11:53:13Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "(In reply to comment #0)\n> In strace, just before the SEGV happens, I see weird calls like this:\n> \n> syscall_291(0x80000, 0x2, 0x17ae0b8, 0x7ffffe557600, 0x1d0, 0, 0x2, 0x2, 0x2,\n> 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2,\n> 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2 <unfinished ...>\n\nDoes the strace show the return code or errno of this syscall? It works for me with the Debian 2.6.29 kernel and glibc 2.9 on i386:\n\nSYS_329(0x80000, 0, 0xb7f134f8, 0, 0x99b98e8) = 18\nepoll_ctl(18, EPOLL_CTL_ADD, 10, {EPOLLIN, {u32=164579440, u64=164579440}}) = 0\n...\n\n(syscall 291 is epoll_create1 on x86_64, 329 is epoll_create1 on i386)", "is_private": false, "id": 128809, "creator": "sf@sfritsch.de", "time": "2009-07-13T14:37:18Z", "bug_id": 47519, "creation_time": "2009-07-13T14:37:18Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 47519, "attachment_id": null, "is_private": false, "id": 128823, "time": "2009-07-14T01:32:04Z", "creator": "klausman@gentoo.org", "creation_time": "2009-07-14T01:32:04Z", "text": "(In reply to comment #5)\n> (In reply to comment #0)\n> > In strace, just before the SEGV happens, I see weird calls like this:\n> > \n> > syscall_291(0x80000, 0x2, 0x17ae0b8, 0x7ffffe557600, 0x1d0, 0, 0x2, 0x2, 0x2,\n> > 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2,\n> > 0x2, 0x2, 0x2, 0x2, 0x2, 0x2, 0x2 <unfinished ...>\n> \n> Does the strace show the return code or errno of this syscall? It works for me\n> with the Debian 2.6.29 kernel and glibc 2.9 on i386:\n> \n> SYS_329(0x80000, 0, 0xb7f134f8, 0, 0x99b98e8) = 18\n> epoll_ctl(18, EPOLL_CTL_ADD, 10, {EPOLLIN, {u32=164579440, u64=164579440}}) = 0\n> ...\n> \n> (syscall 291 is epoll_create1 on x86_64, 329 is epoll_create1 on i386)\n\n$ strace  /usr/sbin/apache2 -D DEFAULT_VHOST -D NAGIOS -D SSL -D SSL_DEFAULT_VHOST -D PHP5 -d /usr/lib64/apache2 -f /etc/apache2/httpd.conf -X\n[... lots of output ...]\nwrite(2, \"POOL DEBUG: [30349/13978117091923\"..., 122) = 122\nsyscall_291(0x80000, 0x2, 0x26c0e50, 0x7fff5f0b6f20, 0x262b100, 0xe0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0) = -1 (errno 38)\n--- SIGSEGV (Segmentation fault) @ 0 (0) ---\n+++ killed by SIGSEGV +++\n\nI'll give the patch a shot in a moment."}, {"count": 7, "tags": [], "creator": "klausman@gentoo.org", "attachment_id": null, "is_private": false, "id": 128824, "time": "2009-07-14T01:49:25Z", "bug_id": 47519, "creation_time": "2009-07-14T01:49:25Z", "text": "That patch makes the wholething work. No more segfaults and Apache works as expected."}, {"count": 8, "tags": [], "text": "The fix for this (i.e. Chetan's patch), plus better detection of dup3 and accept4 have been committed to trunk. Please test and if all is well, it will be backported to 1.4.x and 1.3.x.", "is_private": false, "id": 128892, "creator": "bojan@rexursive.com", "time": "2009-07-15T18:46:22Z", "bug_id": 47519, "creation_time": "2009-07-15T18:46:22Z", "attachment_id": null}, {"count": 9, "tags": [], "creator": "bojan@rexursive.com", "is_private": false, "text": "Fixed in trunk, 1.4.x and 1.3.x.", "id": 128963, "time": "2009-07-17T16:16:56Z", "bug_id": 47519, "creation_time": "2009-07-17T16:16:56Z", "attachment_id": null}]