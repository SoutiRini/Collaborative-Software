[{"count": 0, "tags": [], "bug_id": 51601, "attachment_id": 27341, "id": 148336, "time": "2011-08-02T16:06:59Z", "creator": "felix@sanchezit.com", "creation_time": "2011-08-02T16:06:59Z", "is_private": false, "text": "Created attachment 27341\nCorrupted file created by poi 3.7, workbook with 1371 sheets\n\nI use the version of POI(3.7) to create 1400 sheets in a workbook. And when I open the XLS file generated by the programe, the MS excel 2003 pops the error like bellow. \n\nDamage to the file was so extensive that repairs were not possible.  Excel\nattempted to recover your formulas and values, but some data may have been\nlost or corrupted.\n\nIn addition,  if the number of sheet is under 1370, it can be opened normally.  Also when I use POI 2.5.1 the workbook is generated fine.\n\nAttached is the generated file and here is the test code:\n\npackage com.test;\n\nimport java.io.FileOutputStream;\nimport org.apache.poi.ss.usermodel.*;\nimport org.apache.poi.ss.usermodel.Cell;\n\nimport org.apache.poi.ss.usermodel.CellStyle;\nimport org.apache.poi.ss.usermodel.Font;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.ss.usermodel.DataFormat;\n//import org.apache.poi.ss.util.Color;\n//import org.apache.poi.ss.util.Region;\npublic class poiTest36 {\n\n\tWorkbook m_wb;\n\tFont m_boldFont;\n\tCellStyle cellStyle;\n\tpoiTest36() {\n\t\tm_wb = new HSSFWorkbook();\n\n\t\tm_boldFont = m_wb.createFont();\n\t\tm_boldFont.setBoldweight( Font.BOLDWEIGHT_BOLD );\n\t\tcellStyle=m_wb.createCellStyle();\n\t\t\n\t}\n\t\n\tpublic void createSheet(){\n\t\tSheet sheet=m_wb.createSheet();\n\t\t\n\t\t\n\t\t\n\t\tcellStyle.setFont(m_boldFont);\n\t\tcellStyle.setBorderBottom( CellStyle.BORDER_MEDIUM );\n\t\tcellStyle.setBorderRight( CellStyle.BORDER_MEDIUM );\n\t\tcellStyle.setBorderLeft( CellStyle.BORDER_MEDIUM);\n\t\tcellStyle.setBorderTop( CellStyle.BORDER_MEDIUM);\n\t\tRow row=sheet.createRow(1);\n\t\t\n\t\tCell cell=row.createCell((short)1);\n\t\tcell.setCellStyle(cellStyle);\n\t\tcell.setCellValue(\"Felix S\");\n\t}\n\t\n\tpublic void save( String filename) throws Exception  {\n\t\t\n\t\tFileOutputStream fileout = new FileOutputStream( filename );\n\t\tm_wb.write( fileout );\n\t\tfileout.close();\t\t\t\t\n\t}\n\t\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tpoiTest36 p = new poiTest36();\n\t\tfor(int i=0; i<1371; i++) {\n\t\t\tp.createSheet();\n\t\t}\n\t\ttry {\n\t\tp.save(\"/home/fsanchez/tmp/test.xls\");\n\t\t}\n\t\tcatch (Exception e){\n\t\t\tSystem.out.println(\"got exeption:\" + e.getMessage());\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n}"}, {"count": 1, "tags": [], "bug_id": 51601, "is_private": false, "text": "As I see, this is because content of an excel record cannot exceed certain value (in bytes). RecordInputStream.java's MAX_RECORD_DATA_SIZE value needs to be modified. Its current value is 8224 bytes.", "id": 148337, "time": "2011-08-02T17:38:42Z", "creator": "kalyan.opensource@gmail.com", "creation_time": "2011-08-02T17:38:42Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 51601, "is_private": false, "id": 189806, "time": "2016-03-29T19:42:07Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-03-29T19:42:07Z", "tags": [], "text": "I don't think there is much chance of fixing this unless a full patch with a number of unit-tests to cover the changes is contributed. \n\nHaving so many sheets is a very rare case and changing the sizes of records has a high risk of breaking other stuff. \n\nUsing XSSFWorkbook and the newer .xlsx files allows to create such Excel files just fine, so if possible please switch to using the newer .xlsx based format."}]