[{"count": 0, "tags": [], "creator": "1983-01-06@gmx.net", "attachment_id": 34531, "text": "Created attachment 34531\nPatch for ErrorReportValve\n\nPlease find attached a patch (against 8.5.x trunk) for the current ErrorReportValve. It is a slightly modified version of my publically available EnhancedErrorReportValve.\n\nWhat has been changed and why:\n* Properties:\n** Translate 'Type' to French and Spanish\n** Apply proper case (upper case) for titles and labels according to Chicago Manual of Style\n** Add stylistically correct en dash in English, semirraya/raya menor in Spanish and tiret demi-cadratin in French\n** Remove all status codes below 400 because they aren't errors and can't be used with this valve anyway due to line 149/150\n   (Cross-references aren't present to that bundle)\n** Remove reference to org/apache/tomcat/util/http/res/LocalStrings.properties, this bundle does not exist any more\n** Update all descriptions in English by the most recent versions of today's RFCs (through IANA listings/references)\n** Split status codes to reasons and descriptions based on RFCs\n\n* Java:\n** Import TomcatCSS class for better readablity of the code\n** Obtain reason and description from properties\n** Align HTML code to HTML5 style\n** Change head/title to status code and reason. The user (of a browser) does not care about the server running this webapp.\n   Rather inform the user upfront that an HTTP error has happened and what its phrase is. More details are on the page itself.\n** Have statusHeader contain only general information, details are layed out in the body\n** Don't show in statusHeader message if showReport is false (applies to the issues above)\n** Always include the CSS style because even if showReport is false, it still remains HTML and a few elements are displayed\n** Use boolean getters rather than the fields directly\n** Use translated label for 'Type'\n** Don't abuse div as hr\n** Don't use underline and bold, it is considered as bad style\n** Omit the message line if there isn't any\n** Don't print server info with rootCauseInLogs as it is confusing with the version and duplicates the information with the subsequent line\n** Use System.lineSeparator() instead of \\n\n\nThe goal is to clean up old strings, remove duplication and add consistency.", "id": 195529, "time": "2016-12-16T23:57:54Z", "bug_id": 60490, "creation_time": "2016-12-16T23:57:54Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 60490, "text": "Some comments.\n\n- Line endings should be either be CRLF or LF. On certain systems, System.lineSeparator may return CR only which could cause some problems[1]. I'd recommend reverting that particular change, or using CRLF.\n\n- All of the various messages here need to be HTML-escaped before being dropped-into the HTML document. Specific examples: reason phrase, error message and description, root cause, and stack trace elements. You might consider this out-of-scope for your patch, which is okay.\n\n[1] http://stackoverflow.com/questions/5916340/using-only-cr-as-linebreak-inside-pre-tag-doesnt-work", "id": 195569, "time": "2016-12-19T21:32:51Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-12-19T21:32:51Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 60490, "text": "(In reply to Christopher Schultz from comment #1)\n> Some comments.\n> \n> - Line endings should be either be CRLF or LF. On certain systems,\n> System.lineSeparator may return CR only which could cause some problems[1].\n> I'd recommend reverting that particular change, or using CRLF.\n\nThanks for that, looks like an oversight from me. I will rework on Tuesday. It was previously \\n. How can that method return \\r? Documentation says LF on Unix, CRLF on Windows.\n\n> - All of the various messages here need to be HTML-escaped before being\n> dropped-into the HTML document. Specific examples: reason phrase, error\n> message and description, root cause, and stack trace elements. You might\n> consider this out-of-scope for your patch, which is okay.\n\nThe messages are in our control, nothing which needs to be escaped. The stacktrace gets escaped already by RequestUtil#filter().\nWhy should everything but stacktrace be espaced if there is nothing unsafe for HTML? I do agree that \"message\" has to be escaped, yes!\n \n> [1]\n> http://stackoverflow.com/questions/5916340/using-only-cr-as-linebreak-inside-\n> pre-tag-doesnt-work", "id": 195570, "time": "2016-12-19T22:39:28Z", "creator": "1983-01-06@gmx.net", "creation_time": "2016-12-19T22:39:28Z", "is_private": false, "attachment_id": null}, {"attachment_id": 34537, "tags": [], "creator": "1983-01-06@gmx.net", "text": "Created attachment 34537\nPatch for ErrorReportValve\n\nUpdated patch\n\n* Line endings normalized\n* message is already escaped at the start of report()", "count": 3, "id": 195573, "time": "2016-12-20T11:00:47Z", "bug_id": 60490, "creation_time": "2016-12-20T11:00:47Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 60490, "attachment_id": null, "id": 196247, "creation_time": "2017-01-20T13:35:02Z", "time": "2017-01-20T13:35:02Z", "creator": "1983-01-06@gmx.net", "text": "Anyone willing to take a look? The longer the patch remains stale the more merge conflicts are likely.", "is_private": false}, {"count": 5, "tags": [], "bug_id": 60490, "attachment_id": null, "id": 196314, "time": "2017-01-23T09:50:44Z", "creator": "markt@apache.org", "creation_time": "2017-01-23T09:50:44Z", "is_private": false, "text": "Thanks for the patch.\n\nFixed in:\n- trunk for 9.0.0.M18 onwards\n- 8.5.x for 8.5.12 onwards"}, {"count": 6, "tags": [], "bug_id": 60490, "text": "(In reply to Mark Thomas from comment #5)\n> Thanks for the patch.\n> \n> Fixed in:\n> - trunk for 9.0.0.M18 onwards\n> - 8.5.x for 8.5.12 onwards\n\nThank you very much, I can finally discontinue my public version: http://mo-tomcat-ext.sourceforge.net/xref/net/sf/michaelo/tomcat/extras/valves/EnhancedErrorReportValve.html", "id": 196318, "time": "2017-01-23T11:47:07Z", "creator": "1983-01-06@gmx.net", "creation_time": "2017-01-23T11:47:07Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "text": "(In reply to Michael Osipov from comment #2)\n> How can that method return \\r? Documentation says LF\n> on Unix, CRLF on Windows.\n\nMac OS used to use \\r for line endings. It's possible that there were never any JVMs that ran on it before they switched to a BSD base, and switched to \\n.", "attachment_id": null, "id": 196368, "creator": "chris@christopherschultz.net", "time": "2017-01-24T16:35:16Z", "bug_id": 60490, "creation_time": "2017-01-24T16:35:16Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 60490, "text": "(In reply to Christopher Schultz from comment #7)\n> (In reply to Michael Osipov from comment #2)\n> > How can that method return \\r? Documentation says LF\n> > on Unix, CRLF on Windows.\n> \n> Mac OS used to use \\r for line endings. It's possible that there were never\n> any JVMs that ran on it before they switched to a BSD base, and switched to\n> \\n.\n\nClassic, more than 15 years ago. Fully neglectable.", "id": 196370, "time": "2017-01-24T16:52:18Z", "creator": "1983-01-06@gmx.net", "creation_time": "2017-01-24T16:52:18Z", "is_private": false, "attachment_id": null}]