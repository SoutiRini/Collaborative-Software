[{"count": 0, "tags": [], "creator": "vamsimohan07@gmail.com", "attachment_id": 32520, "is_private": false, "id": 181315, "time": "2015-02-25T06:59:40Z", "bug_id": 57633, "creation_time": "2015-02-25T06:59:40Z", "text": "Created attachment 32520\nLogs contains JMeter Logs, Base and modified file of HTTPSampler.java, Wireshark Capture, jmx file.\n\nSituation:\n\nI am doing performance testing using JMeter and my focus of testing is to measure performance of file upload and download of the server. The file sizes ranges for smaller files like 4KB to large files like 2GB.\n\nWhile doing PUT testing, I had varied file ranges of 4KB to 1GB. PUT for sizes of 4KB and 1.6MB is working perfectly. However, the next size of 100MB and greater than that (500MB and 1GB) are failing. There is no apparent error seen in JMeter logs or console, but when I captured wireshark trace, I could see that TCP threeway handshake was successful, followed by HTTP PUT with right content length and then some data tranfer. However, after certain data transfer, there are no more transfers. Wireshark does not capture any further transfer. So, my Server Under Test times out and closes the connection as complete file is not received. \n\nJMeter Build:\nI am using JMeter 2.12 r1636949.\n\nNote: I have modified certain part of code in JMeter to handle GET request. Though I do not think these below changes have resulted in problem I see in PUT, I just wanted to mention this as an FYI. \n\nTo enhance the performance of GET on client, I made modifications to JMeter code to ignore the data coming to client by not calculating MD5 hash. I only validate the status code received for GET.\n\nFollowing changes are done:\n\n  HTTPSamplerBase.java:\n\n     Method Name: public byte[] readResponse\n     Code Changed:\n             if (asMD5) { // && md != null)\n                    //md.update(readBuffer, 0 , bytesRead);\n                    totalBytes += bytesRead;\n                } else {\n                    w.write(readBuffer, 0, bytesRead);\n                }\n            }\n            if (first){ // Bug 46838 - if there was no data, still need to set latency\n                sampleResult.latencyEnd();\n            }\n            in.close();\n            w.flush();\n            if (asMD5) { //&& md != null) \n                byte[] md5Result = new byte[1]; //md.digest();\n                w.write(JOrphanUtils.baToHexBytes(md5Result)); \n                sampleResult.setBytes(totalBytes);\n            }\n\nAttachments to this bug:\n\n    JMeter Logs, Base and modified file of HTTPSampler.java, Wireshark Capture, jmx file.   \n\n*** This issue is currently blocking my testing commitments and hence request to take this up with priority****\n\nPlease let me know for any further information."}, {"count": 1, "tags": [], "bug_id": 57633, "attachment_id": null, "text": "Hi,\nFew questions:\n- Are you using GUI or NON GUI ? I think you are using GUI\n- What is your Xmx value in jmeter ?\n- Can you check the output of your shell to see if there is no OutOfMemoryError occuring ?\n\nThanks", "id": 181714, "time": "2015-03-12T21:07:34Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-03-12T21:07:34Z", "is_private": false}, {"count": 2, "tags": [], "text": "As we got no answer , from description of case and logs I see GUI mode is used (which is against best-practices) ,and no information provided on Xmx so temporary conclusion is that an OOM or GC issues were faced leading to this.\nRequalifying as enhancement as per reporter whish to have an option to not compute MD5 but only size.", "attachment_id": null, "bug_id": 57633, "id": 181957, "time": "2015-03-22T17:54:57Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-03-22T17:54:57Z", "is_private": false}]