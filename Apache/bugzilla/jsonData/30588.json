[{"count": 0, "tags": [], "creator": "sta_larsen@hotmail.com", "text": "The stacktraces generated by JRockit differs from Sun's stacktrace in that they\ncontain the full signature of each method. \n\nJRockit looks like this:\n        at Log.main([Ljava.lang.String;)V(Log.java:14)\n\nSun looks like this:\n        at Log.main(Log.java:14)\n\nThis confuses the parser in LocationInfo.java. The fix is simply to search for\nthe first occurence of ( intead of the last when trying to find the class and\nmethod names in getClassName() and getMethodName() respectively.\n\nThis is the diff against the 1.2.8 source code:\n\n149c149\n<       int iend = fullInfo.indexOf('(');\n---\n>       int iend = fullInfo.lastIndexOf('(');\n226c226\n<       int iend = fullInfo.indexOf('(');\n---\n>       int iend = fullInfo.lastIndexOf('(');", "id": 61810, "time": "2004-08-11T12:17:52Z", "bug_id": 30588, "creation_time": "2004-08-11T12:17:52Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "I've tested with JRockit R27.2.0 both 1.4.2 and 1.6 and on both Windows and Linux and it appears that the \nstack traces in JRockit look just like Sun stack traces.  I'm assuming that the behavior has changes since \nthis bug was filed.  The change seems innocuous, but it would be nice to know that we are doing some \ngood on a change.  I have fixed the unit tests so they pass on JRockit by explicitly setting the thread \nnames in the test.", "is_private": false, "id": 102576, "creator": "carnold@apache.org", "time": "2007-04-27T14:12:15Z", "bug_id": 30588, "creation_time": "2007-04-27T14:12:15Z", "attachment_id": null}]