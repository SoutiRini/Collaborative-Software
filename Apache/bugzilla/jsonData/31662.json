[{"count": 0, "tags": [], "creator": "yang.jenny@gmail.com", "attachment_id": null, "text": "I wanted to use a JMSAppender to log java class instances. On the topic \nconsumer side, I used a Message Driven Bean to retrive an object message\n(LoggingEvent.getMessage()) and use the instanceof operator to determine its \nclass so that I can cast it into the right class objects. The problem is, the \nmessage retrived from JMS topic is always a String object in LoggingEvent, \nalthough it is defined as Object type. This is due to message property in \nLoggingEvent is defined as transient, and in my view, it should be serializable \ninstead so that object from logging source can be restored.\n\nHere is the code sniplet:\n\nLoggingEven evt = jmsMessage.getObject();\nObject msg = evt.getMessage();\nif (msg instanceof String) {\n      // in the current log4j1.2.8 implementation, this will always be true \ncoming out of JMS topic, which is wrong.\n} else { msg instance of CallerProfile )  {\n      // in the current log4j1.2.8 implementation, this will always be false, I \nwould like to see msg=evt.getMessage() be serializable so that it could be true \nhere. \n}\n\n\n\nRegards,\nJenny", "id": 64970, "time": "2004-10-12T06:58:38Z", "bug_id": 31662, "creation_time": "2004-10-12T06:58:38Z", "is_private": false}, {"count": 1, "tags": [], "creator": "ceki@apache.org", "attachment_id": null, "text": "Hello Jenny,\n\n\nGiven that the serialized tree of an object can be very large, we have\nmade  a conscious  decision  not  to serialize  the  message field  in\nLoggingEvent.  Please  keep  in  mind  that log4j  is  not  a  generic\ntransport library, but a specialized library dealing only with logging\nevents.\n\nIf  you  wish  to discuss  this  issue  further,  please post  to  the\nlog4j-user@logging.apache.org mailing  list.  In  the mean time,  I am\nclosing this report.\n", "id": 64975, "time": "2004-10-12T09:59:27Z", "bug_id": 31662, "creation_time": "2004-10-12T09:59:27Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 31662, "text": "I still think it should be serializable, giving the fact that most people use \ngetRenderedMessage() instead to retrive text message. For a special group \npeople, the message field can be very useful. E.g in my case, instead of \nconventionally log a log4j message, I am tring to leverage log4j interface to \ngenerate very useful application report data into database schemas, which later \non any management staff can generate application reports using a report tool \nlike crystal reports. In order to do that, a text message that lum sum all \nreporting information is not good enough, it should be structured, i.g. be \nobject, so that the object can tell what data in it and which database table it \nshould go into. This, if enabled, open an new applcation field of log4j --\nreporting.", "id": 65009, "time": "2004-10-12T21:22:12Z", "creator": "yang.jenny@gmail.com", "creation_time": "2004-10-12T21:22:12Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 31662, "text": "Is there any updates on this?  Actually, as long as the 'transient' modifier is \nto be removed from the message property, it will work for me--that is, the \nmessage property does not necessary to be serializable...  Isn't this better \nfor you? (as you worried about the size of serializable tree)\n\nRegards,\nJenny", "id": 65633, "time": "2004-10-25T05:06:21Z", "creator": "yang.jenny@gmail.com", "creation_time": "2004-10-25T05:06:21Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 31662, "attachment_id": null, "id": 65634, "time": "2004-10-25T07:37:29Z", "creator": "ceki@apache.org", "creation_time": "2004-10-25T07:37:29Z", "is_private": false, "text": "In case I was not clear the first time, allow me to repeat yself.\n\nGiven that the serialized tree of an object can be very large, we have\nmade  a conscious  decision  not  to serialize  the  message field  in\nLoggingEvent.  Please  keep  in  mind  that log4j  is  not  a  generic\ntransport library, but a specialized library dealing only with logging\nevents.\n\nIf  you  wish  to discuss  this  issue  further,  please post  to  the\nlog4j-user@logging.apache.org mailing  list.  In  the mean time,  I am\nclosing this report."}]