[{"count": 0, "attachment_id": 34488, "creator": "sean.smitz@gmail.com", "text": "Created attachment 34488\nThe 'Safety_getpic1' named range will trigger the IllegalArgumentException\n\nThis is apparently related to bug 44949 which reported it in HSSFName. Mine appears in XSSFName. stack trace and trigger file follows:\n\n1-29 09:55:09,561 [utionServiceListener] [execution] ERROR  - [OpName=executeService] [OpId=75eb4e56-720f-46c3-908d-b2acb2ad2f6f] [OpUser=http://openanzo.org/system/internal/sysadmin] [UserDesc=Anzo CLI] o.o.e.SemanticServiceExecutionService- Error executing operaton http://www.lilly.com/service/namedrange#processRequests\norg.openanzo.exceptions.AnzoException: ErrorCode[5892] Error executing service/operation: http://www.lilly.com/service/namedrange/http://www.lilly.com/service/namedrange#processRequests service-specific-error:References passed to the AreaReference must be contiguous, use generateContiguous(ref) if you have non-contiguous references Root Cause: java.lang.IllegalArgumentException References passed to the AreaReference must be contiguous, use generateContiguous(ref) if you have non-contiguous references\n\tat org.openanzo.execution.v2.SemanticServiceExecutionService.executeServiceInternal(SemanticServiceExecutionService.java:727)\n\tat org.openanzo.execution.v2.SemanticServiceExecutionService.executeService(SemanticServiceExecutionService.java:538)\n\tat org.openanzo.execution.SemanticServiceExecutionService.executeServiceInternal(SemanticServiceExecutionService.java:590)\n\tat org.openanzo.execution.SemanticServiceExecutionService.executeService(SemanticServiceExecutionService.java:510)\n\tat org.openanzo.execution.SemanticServiceExecutionService.executeService(SemanticServiceExecutionService.java:333)\n\tat org.openanzo.combus.listeners.CombusExecutionServiceListener.handleMessage(CombusExecutionServiceListener.java:123)\n\tat org.openanzo.combus.endpoint.BaseServiceListener.processMessage(BaseServiceListener.java:660)\n\tat org.openanzo.combus.endpoint.BaseServiceListener$ProcessThread.run(BaseServiceListener.java:368)\nCaused by: java.lang.IllegalArgumentException: References passed to the AreaReference must be contiguous, use generateContiguous(ref) if you have non-contiguous references\n\tat org.apache.poi.ss.util.AreaReference.<init>(AreaReference.java:45)\n\tat org.apache.poi.xssf.usermodel.XSSFName.getSheetName(XSSFName.java:293)\n\tat com.lilly.sdp.named_ranges.poi.NamedRangeWorksheet.processNamedRanges(NamedRangeWorksheet.java:92)\n\tat com.lilly.sdp.named_ranges.poi.NamedRangeWorksheet.<init>(NamedRangeWorksheet.java:31)\n\tat com.lilly.sdp.named_ranges.poi.NamedRangeWorkbook.<init>(NamedRangeWorkbook.java:47)\n\tat com.lilly.sdp.named_ranges.NamedRangeServiceImpl.processFile(NamedRangeServiceImpl.java:224)\n\tat com.lilly.sdp.named_ranges.NamedRangeServiceImpl.processRequest(NamedRangeServiceImpl.java:204)\n\tat com.lilly.sdp.named_ranges.NamedRangeServiceImpl.processRequests(NamedRangeServiceImpl.java:172)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.openanzo.execution.v2.SemanticServiceExecutionService.executeServiceInternal(SemanticServiceExecutionService.java:694)\n\t... 7 common frames omitted", "id": 195289, "time": "2016-11-29T15:14:22Z", "bug_id": 60430, "creation_time": "2016-11-29T15:14:22Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 60430, "attachment_id": null, "text": "Can you share a code sample that generates this error so that we can reproduce this?", "id": 195290, "time": "2016-11-29T17:08:13Z", "creator": "onealj@apache.org", "creation_time": "2016-11-29T17:08:13Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 60430, "attachment_id": null, "text": "        final FormulaEvaluator evaluator = wb.getCreationHelper().createFormulaEvaluator();\n        for (int i = 0; i < wb.getNumberOfNames(); i++) {\n            Name name = wb.getNameAt(i);\n            try {\n                if (!ignoreNamedRanges.contains(name.getNameName()) && !name.getRefersToFormula().equals(\"#REF!\") && name.getSheetName().equals(getTitle())) {\n                    namedRanges.add(new NamedRange(name, sheet, evaluator));\n                }\n            } catch (IllegalArgumentException e) {\n                // TODO: Add logging.\n            }\n        }", "id": 195300, "time": "2016-11-30T00:25:15Z", "creator": "sean.smitz@gmail.com", "creation_time": "2016-11-30T00:25:15Z", "is_private": false}, {"count": 3, "attachment_id": null, "creator": "sean.smitz@gmail.com", "text": "final FormulaEvaluator evaluator = wb.getCreationHelper().createFormulaEvaluator();\nfor (int i = 0; i < wb.getNumberOfNames(); i++) {\n    Name name = wb.getNameAt(i);\n    try {\n        if (!ignoreNamedRanges.contains(name.getNameName()) && !name.getRefersToFormula().equals(\"#REF!\") && name.getSheetName().equals(getTitle())) {\n                    namedRanges.add(new NamedRange(name, sheet, evaluator));\n        }\n    } catch (IllegalArgumentException e) {\n                // TODO: Add logging.\n    }\n}\n\n\nname.getSheetName() in the if-statement throws the exception.", "id": 195301, "time": "2016-11-30T00:28:57Z", "bug_id": 60430, "creation_time": "2016-11-30T00:28:57Z", "tags": [], "is_private": false}]