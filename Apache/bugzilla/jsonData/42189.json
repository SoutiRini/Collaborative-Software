[{"count": 0, "attachment_id": null, "bug_id": 42189, "is_private": false, "id": 102039, "time": "2007-04-22T16:56:42Z", "creator": "psmith@apache.org", "creation_time": "2007-04-22T16:56:42Z", "tags": [], "text": "I'd like to propose that we consider adding a simplistic juli log filter class\nto log4j 1.2.  Since it needs to compile with jdk 1.4, we'd probably have to\ncreate a separate jar for this, perhaps a new log4j-juli sandbox module.\n\nWe could update all *Configurator classes to detect if this bridge is available,\nand expose a new property on the configurators such as\n\npublic void setUseJDK14LoggingBridge(boolean true)\n\n(or better name).\n\nThis could throw an IllegalStateException if the underlying OS is not JDK 1.4 or\nabove, and the juli-bridge classes are not available.  That way a simple bridge\ncould be provided to our user community by them doing:\n\n* Downloading and adding a single additional jar to log4j\n* Using the latest log4j 1.2.15 (say)\n* Adding a single method call to their Configurator usage\n\nPerhaps as an added bonus, adding support to the XML/Properties configuration to\nallow that\n\n<log4j:configuration debug=\"false\" threshold=\"debug\"\nuseJDK14LoggingBridge=\"true\"....>"}, {"count": 1, "tags": [], "text": "Revisions 531719 and 531720 committed to the log4j sandbox area a working\nversion of a bridge with simple test cases.\n\nOnly the LocationInfo to do, I think.\n\nURL: http://svn.apache.org/repos/asf/logging/sandbox/juli-to-log4j-bridge/\n\nI created a Maven pom.xml, but I'm still new to Maven, so tread carefully.. :)\n\nComments and code review most welcome.", "attachment_id": null, "bug_id": 42189, "id": 102190, "time": "2007-04-23T21:58:41Z", "creator": "psmith@apache.org", "creation_time": "2007-04-23T21:58:41Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 42189, "attachment_id": null, "id": 102202, "time": "2007-04-24T01:16:33Z", "creator": "ebourg@apache.org", "creation_time": "2007-04-24T01:16:33Z", "is_private": false, "text": "That may be wise to provide a Handler as well as a Filter if someone doesn't\nwant to route exclusively the messages to log4j."}, {"count": 3, "tags": [], "bug_id": 42189, "text": "(In reply to comment #2)\n> That may be wise to provide a Handler as well as a Filter if someone doesn't\n> want to route exclusively the messages to log4j.\n\nYes, a good point.  I'll add some flexibility there.", "id": 102207, "time": "2007-04-24T02:35:53Z", "creator": "psmith@apache.org", "creation_time": "2007-04-24T02:35:53Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "ebourg@apache.org", "attachment_id": null, "text": "Another thought, the level conversion should support custom levels. Currently if\nI define a FATAL level above the SEVERE level, it'll turn into a DEBUG log4j\nlevel. The best would be to compare the value of the level.", "id": 102219, "time": "2007-04-24T04:34:07Z", "bug_id": 42189, "creation_time": "2007-04-24T04:34:07Z", "is_private": false}, {"count": 5, "tags": [], "creator": "psmith@apache.org", "attachment_id": null, "id": 102223, "time": "2007-04-24T04:50:29Z", "bug_id": 42189, "creation_time": "2007-04-24T04:50:29Z", "is_private": false, "text": "This is why I created the LevelConverter interface.  You can simply create your\nown mapping.\n\nHaving said that, I should take a look at the numeric values of the Level object\nand use that as a basis, that probably does make more sense than simply\ndefaulting to DEBUG if the standard mapping doesn't work.\n\nthanks."}, {"count": 6, "tags": [], "creator": "psmith@apache.org", "attachment_id": null, "id": 102274, "time": "2007-04-24T22:00:03Z", "bug_id": 42189, "creation_time": "2007-04-24T22:00:03Z", "is_private": false, "text": "I've done some more updates, and added an 'assimilate' mechanism that completely\ntakes over juli.\n\nOn the issue of the Filter, I've decided that the 'bridge' mechanism\n(alternative to 'assimilate'), delegates to an existing Filter if already\nconfigured on \nthe logger, or returns 'true' which effectively acts like a null-Filter.  This\neliminates (I think) the impact on existing juli configuration.\n\nI think having both bridge and assimilate mechanisms works for the use cases I\ncan think of.  Be keen to get feedback on that though."}, {"count": 7, "tags": [], "bug_id": 42189, "text": "A minor detail, from the standpoint of a java.util.logging user, I think the\nhandler would be better named Log4JHandler since it's a handler that delegates\nthe work to Log4J.", "id": 102403, "time": "2007-04-25T14:39:38Z", "creator": "ebourg@apache.org", "creation_time": "2007-04-25T14:39:38Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "psmith@apache.org", "attachment_id": null, "text": "Yes, that's probably better.  I'm going to review the naming.  I started calling\nthings JULI, which I believed to be the generic term for java.util.logging, but\nit turns out that that's a library already developed by the Tomcat team.  So\nquite a bit of renaming to do...\n\nOn a related note, we'll be moving the contents of this project inside the\nlog4j-receivers module, because it is effectively just that, a Receiver that\nimports LoggingEvents into log4j.  I'll be adding a log4j plugin that does the\nassimilation as part of the log4j configuration.", "id": 102405, "time": "2007-04-25T14:57:47Z", "bug_id": 42189, "creation_time": "2007-04-25T14:57:47Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 42189, "text": "Firstly, 'reassigning' this bug back to log4j-dev@logging.apache.org so that\ncomments are seen on the list.  That was my bad. \n\nI have renamed the module to be 'jul-to-log4j-bridge', and renamed the classes\nto match 'JUL' instead of 'juli' to avoid confusion.\n\nWe have not merged this module into the log4j-receivers module because the\nbridge requires JDK 1.4, but the rest of the receivers do not.\n\nI've added a log4j Receiver, so that one can configure the bridge using XML\nconfiguration (requires log4j 1.2.15 though, not yet released).\n\nhttp://svn.apache.org/repos/asf/logging/sandbox/jul-to-log4j-bridge/README.txt\n\nThere is still a maven weirdness whereby the unit tests do not pass, because\nsomehow maven is putting log4j 1.2.14 on the classpath instead of 1.2.15.  The\n'ant test' does pass though.  That is still under investigation.", "count": 9, "id": 102639, "time": "2007-04-29T15:16:17Z", "creator": "psmith@apache.org", "creation_time": "2007-04-29T15:16:17Z", "is_private": false}, {"count": 10, "attachment_id": null, "creator": "psmith@apache.org", "is_private": false, "id": 110229, "time": "2007-11-04T23:19:28Z", "bug_id": 42189, "creation_time": "2007-11-04T23:19:28Z", "tags": [], "text": "Incidentally for the watchers of this bug, latest viewable snapshot available here:\n\nhttp://people.apache.org/~psmith/logging.apache.org/repo/org/apache/logging/apache-jul-log4j-bridge/1.0.0-SNAPSHOT/\n\nWebsite docs here:\n\nhttp://people.apache.org/~psmith/logging.apache.org/sandbox/jul-log4j-bridge/"}, {"count": 11, "attachment_id": null, "creator": "ebourg@apache.org", "text": "What's the status on this issue ? I see that log4j 1.2.15 has been released but\nthe bug is still open. Do we have the java.util.Logging bridge in the latest\nrelease of log4j ?", "id": 113790, "time": "2008-02-15T05:15:12Z", "bug_id": 42189, "creation_time": "2008-02-15T05:15:12Z", "tags": [], "is_private": false}, {"count": 12, "tags": [], "text": "We have had one 'customer' report successful usage of this module, and working\ntowards a release (other log4j sub-modules considered a priority).\n\nIf you were able to try out the latest snapshot and confirm it works for your\nuse cases it would encourage us that this module is stable enough as a release\nworthy.  \n\nThat would help a lot.", "attachment_id": null, "bug_id": 42189, "id": 113803, "time": "2008-02-15T13:55:20Z", "creator": "psmith@apache.org", "creation_time": "2008-02-15T13:55:20Z", "is_private": false}, {"count": 13, "attachment_id": null, "bug_id": 42189, "text": "I don't think it is a good idea to replicate the work that has been done with slf4j regarding gluing logging frameworks together.  I believe they have functional log4j and j.u.l bridges, and that log4j should only concentrate on log4j stuff.\n\n", "id": 118255, "time": "2008-07-03T13:45:33Z", "creator": "thorbjoern@gmail.com", "creation_time": "2008-07-03T13:45:33Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "creator": "psmith@apache.org", "text": "(In reply to comment #13)\n> I don't think it is a good idea to replicate the work that has been done with\n> slf4j regarding gluing logging frameworks together.  I believe they have\n> functional log4j and j.u.l bridges, and that log4j should only concentrate on\n> log4j stuff.\n> \n\nThat's a pretty fair point actually!  ", "id": 118266, "time": "2008-07-03T16:04:55Z", "bug_id": 42189, "creation_time": "2008-07-03T16:04:55Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 42189, "text": "As you want, that's a small and useful feature though, but as long as an alternative exists that's fine.\n\nPaul's implementation has an interesting advantage, the redirection can be simply declared in an external configuration file. the SL4J bridge requires to change the code to call SLF4JHandler.install(). The declarative approach is better IMHO, it's less intrusive and doesn't require to recompile its code to enable the redirection. (btw I'm not a SL4J expert, I may have missed a similar feature).\n", "count": 15, "id": 118294, "time": "2008-07-04T06:25:17Z", "creator": "ebourg@apache.org", "creation_time": "2008-07-04T06:25:17Z", "is_private": false}, {"count": 16, "tags": [], "text": "\n(In reply to comment #15)\n> As you want, that's a small and useful feature though, but as long as an\n> alternative exists that's fine.\n> \n> Paul's implementation has an interesting advantage, the redirection can be\n> simply declared in an external configuration file. the SL4J bridge requires to\n> change the code to call SLF4JHandler.install(). The declarative approach is\n> better IMHO, it's less intrusive and doesn't require to recompile its code to\n> enable the redirection. (btw I'm not a SL4J expert, I may have missed a similar\n> feature).\n\nThere can never be enough free software :)\n\nAs other code in log4j-core needs Java 1.4+ to compile I see no reason why this could not go in the core distribution.  Can we still support Java 1.1 even when compiling with a Java 1.5 compiler? \n", "attachment_id": null, "bug_id": 42189, "id": 119269, "time": "2008-08-02T13:08:08Z", "creator": "thorbjoern@gmail.com", "creation_time": "2008-08-02T13:08:08Z", "is_private": false}, {"count": 17, "tags": [], "text": " \n> As other code in log4j-core needs Java 1.4+ to compile I see no reason why this\n> could not go in the core distribution.  Can we still support Java 1.1 even when\n> compiling with a Java 1.5 compiler? \n\n\neh?  If there is log4j-core code that needs Java 1.4 to compile, then we've made a mistake somewhere.  I believe log4j 1.2.x series is designed to be Java 1.2 source compatible?  (perhaps no-one cares anymore and no-ones noticed).\n\n \n\n", "attachment_id": null, "bug_id": 42189, "id": 119460, "time": "2008-08-05T18:28:28Z", "creator": "psmith@apache.org", "creation_time": "2008-08-05T18:28:28Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 42189, "text": "Clearing NEEDINFO since it isn't appropriate for this bug.  It should only be used when it is impossible to understand the bug due to missing info.  It should not be used to try to grab the attention of developers since it would have exactly the opposite effect.  NEEDINFO bugs go to the bottom of the list until the reporter (or someone else who has or understands the problem) provide the missing INFO.\n\nRelease preparations require JDK 1.4 since Maven requires JDK 1.4, however the bytecode generated in JRE 1.1 compatible.  However, log4j.jar can alternatively be built using Ant on JDK 1.3 (again targeting JRE 1.1 bytecode).  Last I checked, unit tests could be run on JRE 1.2, it just couldn't be built there due to known compiler problems with JDK 1.2 (and would require an older version of Ant).\n\nIf I remember correctly, JDK 1.5's javac had problems producing JDK 1.1 compatible bytecode.\n\nAnyway, anything \"cutting edge\", \"experimental\" or controversial, should not be in log4j.jar.  The release cycles are too slow for anything rapidly evolving.  If we can't get people to test this as its own log4j companion, we definitely shouldn't push it into log4j and force people to consume it and also freeze our ability to change it.", "id": 119466, "time": "2008-08-05T21:40:18Z", "creator": "carnold@apache.org", "creation_time": "2008-08-05T21:40:18Z", "is_private": false, "attachment_id": null}, {"count": 19, "attachment_id": null, "bug_id": 42189, "text": "Is there any updates on this topic? Is help needed? I have been using this component for quite some time now, most notably as a mean to nicely format the JUL messages in my test cases without touching the code. An official release in the central Maven repository, either as an independent component or as part of the core distribution, would be very welcome.\n\nFor the record here is how I use the bridge to format the log messages in my tests, in the Maven POM I put this:\n\n  <dependencies>\n    <dependency>\n      <groupId>org.apache.logging</groupId>\n      <artifactId>apache-jul-log4j-bridge</artifactId>\n      <version>1.0.0-SNAPSHOT</version>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>log4j</groupId>\n      <artifactId>log4j</artifactId>\n      <version>1.2.16</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  \n  \n  <plugin>\n    <artifactId>maven-surefire-plugin</artifactId>\n    <configuration>\n      <systemProperties>\n        <property>\n          <name>java.util.logging.manager</name>\n          <value>org.apache.logging.julbridge.JULBridgeLogManager</value>\n        </property>\n        <property>\n          <name>log4j.configuration</name>\n          <value>log4j.properties</value>\n        </property>\n      </systemProperties>\n    </configuration>\n  </plugin>\n  \n  <plugin>\n    <artifactId>maven-antrun-plugin</artifactId>\n    <executions>\n      <execution>\n        <phase>generate-test-sources</phase>\n        <goals><goal>run</goal></goals>\n        <configuration>\n          <tasks>\n            <mkdir dir=\"target/test-classes\"/>\n            <echo file=\"target/test-classes/log4j.properties\">\n# log4j configuration for test cases\nlog4j.rootLogger=INFO, console\nlog4j.logger.com.arianesoftware=INFO\n\nlog4j.appender.console=org.apache.log4j.ConsoleAppender\nlog4j.appender.console.layout=org.apache.log4j.PatternLayout\nlog4j.appender.console.layout.ConversionPattern=[%d{HH:mm:ss}] [%p] %x %m%n\n            </echo>\n          </tasks>\n        </configuration>\n      </execution>\n    </executions>\n  </plugin>", "id": 153345, "time": "2012-02-01T14:32:01Z", "creator": "ebourg@apache.org", "creation_time": "2012-02-01T14:32:01Z", "tags": [], "is_private": false}]