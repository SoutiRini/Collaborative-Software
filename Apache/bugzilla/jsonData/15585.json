[{"count": 0, "text": "I have created a pgm to use the log4j.properties file and in the layout I \nspecified to show the Class Name, Method, Line# for each statement that is \nlogged.  The log is produced just fine on a Win2k environment, however, once \nmoved up to an AS400 it only shows \"?\" where the Class Name, Method, Line# \nshould be showing.  \n\nWithout this type of information showing in the log I will have to make changes \nto each log.---- statement to have the info written.  I had already created a \nclass to do this before I was made aware of the log4j.class.  Would like to \ncontinue to use the log4j.class but really need to have this information in the \nlog in order for it to be worth while.", "creator": "creath.jarrell@odfl.com", "attachment_id": null, "id": 28132, "time": "2002-12-20T19:33:51Z", "bug_id": 15585, "creation_time": "2002-12-20T19:33:51Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "ceki@apache.org", "attachment_id": null, "text": "Can you please execute the following code on AS/400 and send me the results?\n\npublic class Foo {\n  static public void main(String[] args) throws Exception {\n    foo();\n  }\n\n  static\n  void foo() throws Exception {\n    throw new Exception(\"Just testing\");\n  }\n}\n\nThis will allow us to discover the reasons for the problem and fix it.", "id": 28141, "time": "2002-12-21T09:06:57Z", "bug_id": 15585, "creation_time": "2002-12-21T09:06:57Z", "is_private": false}, {"count": 2, "text": "Here is the output on AS400 for the test program F00\njava.lang.Exception: Just testing\n      java/lang/Throwable.<init>(Ljava/lang/String;)V+4 (Throwable.java:90)\n      Foo.foo()V+0 (Foo.java:16)\n      Foo.main([Ljava/lang/String;)V+0 (Foo.java:11)\n\n", "bug_id": 15585, "attachment_id": null, "id": 39636, "time": "2003-06-30T10:03:35Z", "creator": "pakolata@lux.eri.ch", "creation_time": "2003-06-30T10:03:35Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 15585, "attachment_id": null, "id": 39734, "time": "2003-07-01T12:27:02Z", "creator": "pakolata@lux.eri.ch", "creation_time": "2003-07-01T12:27:02Z", "is_private": false, "text": "Here are changes I suggest that corrects the problem for log4j\nclass names and line number on AS400.\nThese changes impacts only org.apache.log4j.spi.LocationInfo.java.\n\nNote also that Java program on AS400 need to be optimized.\nOptmisation is defined at level 10, *INTERPRET, 20, 30 or 40.\nIf optimisation is set to 10 or 20 -lowest level-, any exception \nstack trace are complete, and Class name and line number can be \ndisplayed properly.\nAccording to tests I have performed, if optimization is at a \nhigher level, stack trace are not complete -lines are missing- \nso class names and line number may be less precise -corresponding \nto a \"higher\" level in the stack trace-, or may be missing totally.\n\nThanks to include these changes in future release.\nPatrice\n\nChanges in org.apache.log4j.spi.LocationInfo.java\n\nAll new or changed line are starting with a *\n----- changes in static definitions --------\n  // Check if we are running in IBM's visual age.\n  static boolean inVisualAge = false;\n*  // Check if working on as400\n*  static boolean onAS400 = false;\n  static {\n    try {\n      Class dummy = Class.forName(\"com.ibm.uvm.tools.DebugSupport\");\n      inVisualAge = true;\n      LogLog.debug(\"Detected IBM VisualAge environment.\");\n    } catch(Throwable e) {\n      // nothing to do\n    }\n*    try {\n*      Properties p = System.getProperties();\n*      String osname = p.getProperty(\"os.name\");\n*      if ((osname != null) && (osname.equals(\"OS/400\"))) {\n*      \tonAS400 = true;\n*      }\n*\t  LogLog.debug(\"Detected OS/400 environment.\");\n*    } catch(Throwable e) {\n*      // nothing to do\n*    }\n  }\n----- Changes in constructor -----------\npublic LocationInfo(Throwable t, String fqnOfCallingClass) {\n    if(t == null)\n      return;\n*   // on AS400, package path separator in stack trace is not dot '.',\n*   // but slash '/'\n*   if (onAS400)\n*     fqnOfCallingClass = fqnOfCallingClass.replace('.', '/');\n\tString s;\n\t// Protect against multiple access to sw.\n\tsynchronized(sw) {\n\t\tt.printStackTrace(pw);\n\t\ts = sw.toString();\n\t\tsw.getBuffer().setLength(0);\n\t}\n\t//System.out.println(\"s is [\"+s+\"].\");\n\tint ibegin, iend;\n\t// Given the current structure of the package, the line\n\t// containing \"org.apache.log4j.Category.\" should be printed just\n\t// before the caller.\n\n\t// This method of searching may not be fastest but it's safer\n    // than counting the stack depth which is not guaranteed to be\n    // constant across JVM implementations.\n    ibegin = s.lastIndexOf(fqnOfCallingClass);\n    if(ibegin == -1)\n\t\treturn;\n\n\tibegin = s.indexOf(Layout.LINE_SEP, ibegin);\n\tif(ibegin == -1)\n\t\treturn;\n\tibegin+= Layout.LINE_SEP_LEN;\n\t// determine end of line\n    iend = s.indexOf(Layout.LINE_SEP, ibegin);\n    if(iend == -1)\n\t\treturn;\n\n    // VA has a different stack trace format which doesn't\n    // need to skip the inital 'at'.\n*   // -> Same changes for AS400\n*   if ((!inVisualAge) && (!onAS400)) {\n        // back up to first blank character\n        ibegin = s.lastIndexOf(\"at \", iend);\n        if(ibegin == -1)\n            return;\n        // Add 3 to skip \"at \";\n        ibegin += 3;\n    }\n    // everything between is the requested stack item\n    this.fullInfo = s.substring(ibegin, iend);\n}\n\n"}, {"count": 4, "tags": [], "creator": "creath.jarrell@odfl.com", "text": "Made changes and worked great.  Thank you.", "id": 63003, "time": "2004-09-03T02:46:47Z", "bug_id": 15585, "creation_time": "2004-09-03T02:46:47Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 15585, "text": "\nApplied the changes suggested by Patrice Kolata. Could some please one check that it \nreally works?\n\n(You have to get the latest code from CVS.)", "id": 63359, "time": "2004-09-10T15:12:37Z", "creator": "ceki@apache.org", "creation_time": "2004-09-10T15:12:37Z", "is_private": false, "attachment_id": null}, {"count": 6, "text": "I have tried the changes and appears to work fine.", "bug_id": 15585, "attachment_id": null, "id": 63383, "time": "2004-09-10T20:58:48Z", "creator": "creath.jarrell@odfl.com", "creation_time": "2004-09-10T20:58:48Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "bug_id": 15585, "attachment_id": null, "text": "OK, closing this item as it's been verified.", "id": 68285, "time": "2004-12-10T19:48:20Z", "creator": "yoavs@computer.org", "creation_time": "2004-12-10T19:48:20Z", "is_private": false}]