[{"count": 0, "tags": [], "bug_id": 58401, "attachment_id": null, "is_private": false, "id": 185168, "time": "2015-09-12T17:44:28Z", "creator": "yilong.li@runtimeverification.com", "creation_time": "2015-09-12T17:44:28Z", "text": "Reported by RV-Predict (a dynamic race detector) when running the test suite:\nData race on array element #16: {{{\n    Concurrent read in thread T47 (locks held: {Monitor@7ccb7286, Monitor@7ccb7255, Monitor@258500df})\n ---->  at org.apache.catalina.tribes.io.ChannelData.getDataPackage(ChannelData.java:216)\n        at org.apache.catalina.tribes.io.XByteBuffer.createDataPackage(XByteBuffer.java:350)\n        at org.apache.catalina.tribes.transport.nio.ParallelNioSender.sendMessage(ParallelNioSender.java:68)\n        - locked Monitor@258500df at org.apache.catalina.tribes.transport.nio.ParallelNioSender.sendMessage(ParallelNioSender.java:n/a) \n        at org.apache.catalina.tribes.transport.nio.PooledParallelSender.sendMessage(PooledParallelSender.java:51)\n        at org.apache.catalina.tribes.transport.ReplicationTransmitter.sendMessage(ReplicationTransmitter.java:54)\n        at org.apache.catalina.tribes.group.ChannelCoordinator.sendMessage(ChannelCoordinator.java:82)\n        at org.apache.catalina.tribes.group.ChannelInterceptorBase.sendMessage(ChannelInterceptorBase.java:76)\n        at org.apache.catalina.tribes.group.ChannelInterceptorBase.sendMessage(ChannelInterceptorBase.java:76)\n        at org.apache.catalina.tribes.group.interceptors.TestOrderInterceptor$MangleOrderInterceptor.sendMessage(TestOrderInterceptor.java:187)\n        - locked Monitor@7ccb7255 at org.apache.catalina.tribes.group.interceptors.TestOrderInterceptor$MangleOrderInterceptor.sendMessage(TestOrderInterceptor.java:n/a) \n        at org.apache.catalina.tribes.group.interceptors.OrderInterceptor.sendMessage(OrderInterceptor.java:88)\n        at org.apache.catalina.tribes.group.ChannelInterceptorBase.sendMessage(ChannelInterceptorBase.java:76)\n        at org.apache.catalina.tribes.group.GroupChannel.send(GroupChannel.java:233)\n        at org.apache.catalina.tribes.group.GroupChannel.send(GroupChannel.java:186)\n        at org.apache.catalina.tribes.group.interceptors.TestOrderInterceptor$2.run(TestOrderInterceptor.java:111)\n        - locked Monitor@7ccb7286 at org.apache.catalina.tribes.group.interceptors.TestOrderInterceptor$2.run(TestOrderInterceptor.java:110) \n    T47 is created by T1\n        at org.apache.catalina.tribes.group.interceptors.TestOrderInterceptor.testOrder2(TestOrderInterceptor.java:124)\n\n    Concurrent write in thread T37 (locks held: {})\n ---->  at org.apache.catalina.tribes.io.XByteBuffer.toBytes(XByteBuffer.java:478)\n        at org.apache.catalina.tribes.membership.MemberImpl.getData(MemberImpl.java:204)\n        at org.apache.catalina.tribes.membership.MemberImpl.getData(MemberImpl.java:170)\n        at org.apache.catalina.tribes.membership.MemberImpl.getData(MemberImpl.java:164)\n        at org.apache.catalina.tribes.membership.McastServiceImpl.send(McastServiceImpl.java:501)\n        at org.apache.catalina.tribes.membership.McastServiceImpl.send(McastServiceImpl.java:487)\n        at org.apache.catalina.tribes.membership.McastServiceImpl$SenderThread.run(McastServiceImpl.java:575)\n    T37 is created by T31\n        at org.apache.catalina.tribes.membership.McastServiceImpl.start(McastServiceImpl.java:280)\n}}}\n\nRV-Predict uses System.identityHashCode to identify distinct memory locations. When there is a hashcode collision, it could lead to false alarm. This occurs more often on race report which involves array element. I am not familiar with the code enough to check if this data array can shared between threads."}, {"count": 1, "tags": [], "bug_id": 58401, "is_private": false, "id": 185169, "creation_time": "2015-09-12T17:56:19Z", "time": "2015-09-12T17:56:19Z", "creator": "yilong.li@runtimeverification.com", "text": "A similar one:\nData race on array element #14: {{{\n    Concurrent read in thread T239 (locks held: {Monitor@7e1eac7f})\n ---->  at org.apache.catalina.tribes.io.XByteBuffer.append(XByteBuffer.java:228)\n        at org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator$CoordinationMessage.write(NonBlockingCoordinator.java:738)\n        at org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator.createData(NonBlockingCoordinator.java:281)\n        at org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator.sendElectionMsg(NonBlockingCoordinator.java:260)\n        at org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator.sendElectionMsgToNextInline(NonBlockingCoordinator.java:270)\n        at org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator.handleOtherToken(NonBlockingCoordinator.java:365)\n        at org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator.handleToken(NonBlockingCoordinator.java:331)\n        at org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator.processCoordMessage(NonBlockingCoordinator.java:322)\n        at org.apache.catalina.tribes.group.interceptors.NonBlockingCoordinator.messageReceived(NonBlockingCoordinator.java:498)\n        at org.apache.catalina.tribes.group.ChannelInterceptorBase.messageReceived(ChannelInterceptorBase.java:81)\n        at org.apache.catalina.tribes.group.interceptors.TcpFailureDetector.messageReceived(TcpFailureDetector.java:117)\n        at org.apache.catalina.tribes.group.ChannelInterceptorBase.messageReceived(ChannelInterceptorBase.java:81)\n        at org.apache.catalina.tribes.group.interceptors.DomainFilterInterceptor.messageReceived(DomainFilterInterceptor.java:48)\n        at org.apache.catalina.tribes.group.ChannelInterceptorBase.messageReceived(ChannelInterceptorBase.java:81)\n        at org.apache.catalina.tribes.group.ChannelCoordinator.messageReceived(ChannelCoordinator.java:262)\n        at org.apache.catalina.tribes.transport.ReceiverBase.messageDataReceived(ReceiverBase.java:242)\n        at org.apache.catalina.tribes.transport.nio.NioReplicationTask.drainChannel(NioReplicationTask.java:211)\n        at org.apache.catalina.tribes.transport.nio.NioReplicationTask.run(NioReplicationTask.java:102)\n        - locked Monitor@7e1eac7f at org.apache.catalina.tribes.transport.nio.NioReplicationTask.run(NioReplicationTask.java:n/a) \n    T239 is created by T177\n        at java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:1010)\n\n    Concurrent write in thread T219 (locks held: {})\n ---->  at org.apache.catalina.tribes.io.XByteBuffer.toBytes(XByteBuffer.java:482)\n        at org.apache.catalina.tribes.membership.MemberImpl.getData(MemberImpl.java:204)\n        at org.apache.catalina.tribes.membership.MemberImpl.getData(MemberImpl.java:170)\n        at org.apache.catalina.tribes.membership.MemberImpl.getData(MemberImpl.java:164)\n        at org.apache.catalina.tribes.membership.McastServiceImpl.send(McastServiceImpl.java:501)\n        at org.apache.catalina.tribes.membership.McastServiceImpl.send(McastServiceImpl.java:487)\n        at org.apache.catalina.tribes.membership.McastServiceImpl$SenderThread.run(McastServiceImpl.java:575)\n    T219 is created by T165\n        at org.apache.catalina.tribes.membership.McastServiceImpl.start(McastServiceImpl.java:280)\n}}}", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 58401, "is_private": false, "text": "I think these are all duplicates of a previously fixed problem. I'm going to mrk this report as such but we can always re-open it if we find RV-Predict continues to report errors in this area.\n\n*** This bug has been marked as a duplicate of bug 58395 ***", "id": 185337, "time": "2015-09-18T09:23:55Z", "creator": "markt@apache.org", "creation_time": "2015-09-18T09:23:55Z", "attachment_id": null}]