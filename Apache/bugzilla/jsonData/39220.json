[{"count": 0, "tags": [], "bug_id": 39220, "attachment_id": null, "id": 87626, "time": "2006-04-06T11:07:58Z", "creator": "ndolgov@itci.com", "creation_time": "2006-04-06T11:07:58Z", "is_private": false, "text": "1. Invocations of the setHttpURL() method made from constructors lead to \ngeneration of a PROPFIND request with a missing body. Moreover, the \"Content-\nType\" header is not set for that request as well. As a result, a WebdavResource \nconstructor throws an exception: \n\n    public void test() throws Exception {\n        HttpURL url = new HttpURL(\"http://localhost:8080/slide/\");\n        WebdavResource webdav = new WebdavResource(url, 1, true);\n    }\n\ngenerates (Apache Tomcat/5.5.9)\n\nPROPFIND /slide/ HTTP/1.1\nContent-Type: text/xml; charset=utf-8\nUser-Agent: Jakarta Commons-HttpClient/3.0\nHost: 127.0.0.1:8081\nDepth: 1\n\nwhich leads to\n\norg.apache.commons.httpclient.HttpException\n\tat org.apache.webdav.lib.WebdavResource.propfindMethod(WebdavResource.\njava:3467)\n\tat org.apache.webdav.lib.WebdavResource.propfindMethod(WebdavResource.\njava:3423)\n\tat org.apache.webdav.lib.WebdavResource.setNamedProp(WebdavResource.java:\n967)\n\tat org.apache.webdav.lib.WebdavResource.setBasicProperties(WebdavResource.\njava:912)\n\tat org.apache.webdav.lib.WebdavResource.setProperties(WebdavResource.java:\n1894)\n\tat org.apache.webdav.lib.WebdavResource.setHttpURL(WebdavResource.java:\n1301)\n\tat org.apache.webdav.lib.WebdavResource.<init>(WebdavResource.java:275)\n\n\nbecause of\n\nHTTP/1.1 400 Bad Request: Request content missing\nServer: Apache-Coyote/1.1\nSet-Cookie: JSESSIONID=7006BD8F1AE1863B56B86D1C79276E8D; Path=/slide\nContent-Type: text/html;charset=utf-8\nContent-Length: 1077\nDate: Thu, 06 Apr 2006 08:50:30 GMT\nConnection: close\n\n\n2. There is a typo in a constructor (there should not be \"this.\" prefix!)\n\npublic WebdavResource(HttpURL httpURL, int action, int depth,             \nboolean followRedirects)throws HttpException, IOException {\n       \n    setFollowRedirects(this.followRedirects);\n\n}"}, {"count": 1, "tags": [], "bug_id": 39220, "attachment_id": null, "text": "The issue lies in method HttpRequestBodyMethodBase#writeRequestBody where\nthe bytes are not properly written to the underlying ChunkedOutputStream stream \nwhen using chunked contents. The corrected method is shown below.\n\nAdditionally, please also note the wrong comment in the method comment and in \nthe class header.\n\n    protected boolean writeRequestBody(HttpState state, HttpConnection conn)\n        throws IOException, HttpException {\n        OutputStream out = conn.getRequestOutputStream();\n        if (isHttp11() && (null == getRequestHeader(\"Content-Length\"))) {\n            out = new ChunkedOutputStream(out);\n        }\n\n        InputStream inputStream = null;\n        if (file != null && file.exists()) {\n            inputStream = new FileInputStream(file);\n        } else if (url != null) {\n            inputStream = url.openConnection().getInputStream();\n        } else if(data != null){\n            inputStream = new ByteArrayInputStream(data);\n        } else {\n            return true;\n        }\n\n        byte[] buffer = new byte[4096];\n        int nb = 0;\n        while (true) {\n            nb = inputStream.read(buffer);\n            if (nb == -1) {\n                break;\n            }\n            out.write(buffer, 0, nb);\n        }\n        if (out instanceof ChunkedOutputStream){\n          ((ChunkedOutputStream)out).finish();\n        }\n        out.flush();\n        return true;\n    }\n", "id": 89601, "time": "2006-05-30T21:19:37Z", "creator": "gillesGaillard@compuserve.com", "creation_time": "2006-05-30T21:19:37Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 39220, "attachment_id": null, "text": "You also need to override the inherited method #addRequestHeaders otherwise\nthere is no Content-Length nor Transfer-Encoding header, and some server does \nnot like that.\n\n    /**\n     * Overrides the inherited method to add a header \"Transfer-Encoding: \n     * chunked\" if the content-length has not been already set, as expected by \n     * the method writeRequestBody.\n     *  \n     * @see #writeRequestBody\n     */\n    protected void addRequestHeaders(HttpState state, HttpConnection conn)\n    throws IOException, HttpException {\n      super.addRequestHeaders(state, conn);\n      if (isHttp11() && getRequestHeader(\"Content-Length\")==null) {\n        int len = getRequestContentLength();\n        if (len>=0){\n          setRequestHeader(\"Content-Length\", String.valueOf(len));\n        }\n        else setRequestHeader(\"Transfer-Encoding\", \"chunked\");\n      }\n    }\n", "id": 90248, "time": "2006-06-15T15:46:10Z", "creator": "gillouxGaillard@wanadoo.fr", "creation_time": "2006-06-15T15:46:10Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 39220, "attachment_id": null, "text": "Very similar patch from the bug #35213 was applied to the trunk by antoine.\n\n*** This bug has been marked as a duplicate of 35213 ***", "id": 98979, "time": "2007-02-05T12:30:55Z", "creator": "vgritsenko@apache.org", "creation_time": "2007-02-05T12:30:55Z", "is_private": false}]