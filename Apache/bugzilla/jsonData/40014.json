[{"count": 0, "tags": [], "bug_id": 40014, "attachment_id": null, "text": "build.xml\n\n <target description=\"DO EVERYTHING\" name=\"do_all\">\n   \t<ant antfile=\"build_getcode_proj1.xml\" target=\"getcode\"/>\n   \t<ant antfile=\"build_getcode_proj2.xml\" target=\"getcode\"/>\n   </target>\n\n\nbuild_getcode_proj1.xml and build_getcode_proj2.xml have this:\n<target name=\"getcode\" depends=\"get_promotion_group\">\n     <!-- ... non related code -->\n </target> \n\n<target name=\"get_promotion_group\" depends=\"init\" description=\"Prompts user for \na promotion group\" unless=\"pvcs.promotion\">\n    <input message=\"Please specify a promotion group:  \" \naddproperty=\"pvcs.promotion\" validargs=\"DEV,SYS,CAT,PROD\"/>\n  </target>\n\nThe build.xml calls getcode in build_getcode_proj1.xml fine and the input works \nfine.\n\nThen build.xml calls getcode in build_getcode_proj2.xml and the following \nhappens:\nI'm prompted and I'll enter one of the validargs and hit enter.\nNothing happens and nothing is displayed.\nI'll enter one of the validargs again and hit enter and it will continue on \nnormally.\nI should have only had to enter a validargs value once.\n\n\nI'm assuming it is remembering something from the previous build file for some \nreason.\n\nIf I had three such files I imagine on the third file I'd have to enter it 3 \ntimes to get it to continue.", "id": 91132, "time": "2006-07-11T14:58:23Z", "creator": "shawn.garner@pearson.com", "creation_time": "2006-07-11T14:58:23Z", "is_private": false}, {"count": 1, "tags": [], "creator": "carej@us.ibm.com", "is_private": false, "text": "I think you are not fully understanding the way that the <ant> task works;\nplease go back & read the manual.", "id": 91135, "time": "2006-07-11T15:29:20Z", "bug_id": 40014, "creation_time": "2006-07-11T15:29:20Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 40014, "is_private": false, "text": "What do you mean Jeffrey? if property 'pvcs.promotion' is set and used in the \nsub-builds only, the fact that <ant> defaults inheritAll to true is irrelevant, \nno? Or you have something else in mind?\n\nReading the bug report, I thought there might be something wrong with <input>. \nBut I've never used <input> myself though ;-) --DD", "id": 91136, "time": "2006-07-11T15:42:41Z", "creator": "ddevienne@gmail.com", "creation_time": "2006-07-11T15:42:41Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "shawn.garner@pearson.com", "is_private": false, "text": "Read the manual again as I did before I submited this.\nI don't care if any properties or property references are inherited or copied over.\nWhat do you propose I do to fix this then?", "id": 91138, "time": "2006-07-11T15:46:31Z", "bug_id": 40014, "creation_time": "2006-07-11T15:46:31Z", "attachment_id": null}, {"count": 4, "tags": [], "text": "Please double-check that:\n\na) <input> is not defined in > 1 place.\nb) <input> is defined inside a target.", "is_private": false, "bug_id": 40014, "id": 91139, "time": "2006-07-11T15:54:22Z", "creator": "mbenson@apache.org", "creation_time": "2006-07-11T15:54:22Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "You may have to slap together a self-contained example and attach to this issue.", "attachment_id": null, "id": 91140, "creation_time": "2006-07-11T15:56:59Z", "time": "2006-07-11T15:56:59Z", "creator": "mbenson@apache.org", "bug_id": 40014, "is_private": false}, {"count": 6, "tags": [], "bug_id": 40014, "attachment_id": null, "text": "The following two tasks are BOTH defined in BOTH build_getcode_proj1.xml AND\nbuild_getcode_proj2.xml:\nThey are inside a target tag.\n\n<target name=\"getcode\" depends=\"get_promotion_group\">\n     <!-- ... non related code -->\n </target> \n\n<target name=\"get_promotion_group\" depends=\"init\" description=\"Prompts user for \na promotion group\" unless=\"pvcs.promotion\">\n    <input message=\"Please specify a promotion group:  \" \naddproperty=\"pvcs.promotion\" validargs=\"DEV,SYS,CAT,PROD\"/>\n  </target>", "id": 91141, "time": "2006-07-11T15:57:39Z", "creator": "shawn.garner@pearson.com", "creation_time": "2006-07-11T15:57:39Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 40014, "is_private": false, "text": "My original post has everything you need for the three build files to reproduce.", "id": 91142, "time": "2006-07-11T15:59:38Z", "creator": "shawn.garner@pearson.com", "creation_time": "2006-07-11T15:59:38Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 40014, "is_private": false, "text": "well, friend, I will humor you.  My interpretation of your original post is that\nyou have a top-level buildfile.  It uses the <ant> task to call a target from\neach of two buildfiles in turn.  In these sub-buildfiles, the called target\ndepends on a target that collects input into a property.  The property has the\nsame name in each.  So I have:\n\nbuild.xml:\n<project>\n  <ant antfile=\"foo.xml\" target=\"x\" />\n  <ant antfile=\"bar.xml\" target=\"x\" />\n</project>\n\nfoo.xml:\n<project>\n  <target name=\"getx\">\n    <input message=\"enter x\" addproperty=\"x\" validargs=\"x,y,z\" />\n  </target>\n  <target name=\"x\" depends=\"getx\">\n    <echo>$${x}=${x}</echo>\n  </target>\n</project>\n\nbar.xml is identical to foo.xml .\n\nWhen I run 'ant' I get:\n\nBuildfile: build.xml\n\ngetx:\n    [input] enter x(x,y,z)\nx\n\nx:\n     [echo] ${x}=x\n\ngetx:\n    [input] enter x(x,y,z)\ny\n\nx:\n     [echo] ${x}=y\n\nBUILD SUCCESSFUL\nTotal time: 1 second\n\n\nSo, by applying my interpretation of your original description, since in your\ntone of entitlement you are unable to provide me what I ask for ME to help YOU\nwith YOUR problem, I am unable to reproduce your issue.  Reopen this if and when\nyou can provide an example.", "id": 91144, "time": "2006-07-11T16:16:14Z", "creator": "mbenson@apache.org", "creation_time": "2006-07-11T16:16:14Z", "attachment_id": null}, {"count": 9, "tags": [], "creator": "shawn.garner@pearson.com", "attachment_id": null, "is_private": false, "id": 91148, "time": "2006-07-11T16:39:37Z", "bug_id": 40014, "creation_time": "2006-07-11T16:39:37Z", "text": "damn, I did the same thing you did and can't reproduce it either.\nI'll see if I can narrow it down.  I don't want to post the entire huge ones.\n\nShawn"}, {"count": 10, "tags": [], "text": "(In reply to comment #9)\n> damn, I did the same thing you did and can't reproduce it either.\n> I'll see if I can narrow it down.  I don't want to post the entire huge ones.\n\nTrust me, we don't want you to either.  Small examples ensure we can see the\ntrees without having to look through the forest.  Or some metaphor like that.\n\n> \n> Shawn\n\n", "attachment_id": null, "id": 91149, "creation_time": "2006-07-11T16:53:16Z", "time": "2006-07-11T16:53:16Z", "creator": "mbenson@apache.org", "bug_id": 40014, "is_private": false}, {"count": 11, "tags": [], "bug_id": 40014, "attachment_id": null, "id": 91160, "time": "2006-07-11T19:49:22Z", "creator": "shawn.garner@pearson.com", "creation_time": "2006-07-11T19:49:22Z", "is_private": false, "text": "Alright I tracked it down and am able to reproduce it.\nI had to include a jar with the test case so my Zip file is 7 meg.\nI don't have any way to post it online.\nCan I email it somewhere?"}, {"count": 12, "tags": [], "bug_id": 40014, "is_private": false, "text": "You can't attach it to this report?", "id": 91168, "time": "2006-07-11T21:35:37Z", "creator": "mbenson@apache.org", "creation_time": "2006-07-11T21:35:37Z", "attachment_id": null}, {"count": 13, "tags": [], "text": "I don't think it'll let you do any thing larger than 1 meg.\nI tried to attach it and it said it was too big.", "attachment_id": null, "id": 91169, "creation_time": "2006-07-11T21:40:51Z", "time": "2006-07-11T21:40:51Z", "creator": "shawn.garner@pearson.com", "bug_id": 40014, "is_private": false}, {"count": 14, "tags": [], "bug_id": 40014, "attachment_id": null, "is_private": false, "id": 91171, "time": "2006-07-11T21:54:41Z", "creator": "mbenson@apache.org", "creation_time": "2006-07-11T21:54:41Z", "text": "wait--why does it have to have a jar, and one several MB in size at that?  You\ncould include the creation of such a jar in your test buildfile, as well..."}, {"count": 15, "tags": [], "bug_id": 40014, "attachment_id": null, "id": 91186, "time": "2006-07-12T03:50:00Z", "creator": "shawn.garner@pearson.com", "creation_time": "2006-07-12T03:50:00Z", "is_private": false, "text": "Added FTP url to file."}, {"count": 16, "tags": [], "bug_id": 40014, "attachment_id": null, "id": 91210, "time": "2006-07-12T14:49:20Z", "creator": "mbenson@apache.org", "creation_time": "2006-07-12T14:49:20Z", "is_private": false, "text": "Aside from the gross misuse of antcalls in the example (I will assume this was\nfor the sake of the example), your problem is caused by some form of mishandling\nof the input to the <java> task.  The workaround is to add inputstring=\"\" to\nyour <java> invocations; what was happening was the first time you responded to\nthe second <input>, that input was swallowed by the first <java> task, looking\nempty to <input>, which then re-prompts you.  We'll have to see where the actual\nproblem lies, but the workaround should hold you for now."}, {"count": 17, "tags": [], "bug_id": 40014, "attachment_id": null, "id": 91211, "time": "2006-07-12T15:04:56Z", "creator": "shawn.garner@pearson.com", "creation_time": "2006-07-12T15:04:56Z", "is_private": false, "text": "Thanks for the workaround.\nLet me know if you get it fixed permanently.\n\nThanks for all your help!!!"}, {"count": 18, "tags": [], "bug_id": 40014, "attachment_id": null, "text": "removing URL as I'm not sure the included jar should be made available.  In any\nevent, the example would have worked and been much smaller with ANY forked Java\nprocess.", "id": 91216, "time": "2006-07-12T16:08:53Z", "creator": "mbenson@apache.org", "creation_time": "2006-07-12T16:08:53Z", "is_private": false}, {"count": 19, "tags": [], "creator": "shawn.garner@pearson.com", "attachment_id": null, "is_private": false, "id": 91219, "time": "2006-07-12T16:43:44Z", "bug_id": 40014, "creation_time": "2006-07-12T16:43:44Z", "text": "That's cool.  \nI just wanted to make sure it was reproducable and our actual build scripts use\nthat jar."}, {"count": 20, "tags": [], "bug_id": 40014, "attachment_id": null, "text": "Jesse, while you're in Ant mode, do you have any thoughts on this one?  Also see\nhttp://marc.theaimsgroup.com/?l=ant-dev&m=115283123631375&w=2 .\n\nThanks,\nMatt", "id": 91630, "time": "2006-07-26T22:28:08Z", "creator": "mbenson@apache.org", "creation_time": "2006-07-26T22:28:08Z", "is_private": false}, {"count": 21, "tags": [], "text": "Since no one else provided a small, self-contained, reproducible test case:\n\n---%<---\n<project default=\"x\">\n    <target name=\"x\">\n        <input message=\"A:\" addproperty=\"pa\" validargs=\"one,two\"/>\n        <echo>pa=${pa}</echo>\n        <echo file=\"X.java\">public class X { public static void main(String[] x)\n{} }</echo>\n        <javac srcdir=\".\" destdir=\".\" includes=\"X.java\"/>\n        <java fork=\"true\" classpath=\".\" classname=\"X\"/>\n        <input message=\"B:\" addproperty=\"pb\" validargs=\"one,two\"/>\n        <echo>pb=${pb}</echo>\n    </target>\n</project>\n---%<---\n\nproducing on Linux\n\n---%<---\n$ ant -f /tmp/testant40014.xml \nBuildfile: /tmp/testant40014.xml\n\nx:\n    [input] A: (one, two)\none\n     [echo] pa=one\n    [javac] Compiling 1 source file to /tmp\n    [input] B: (one, two)\ntwo\ntwo\n     [echo] pb=two\n\nBUILD SUCCESSFUL\nTotal time: 8 seconds\n---%<---\n\nI'll confess I neither understand what causes the problem, nor know how it could\nbe solved. Unixish pipes have the unpleasant property that the receiver can know\nwhen the producer has sent some bytes, but the producer cannot know if the\nreceiver is expecting any bytes, meaning that for <java fork=\"true\"> there is no\nway for Ant to know whether the process will ever read from stdin or not.", "is_private": false, "bug_id": 40014, "id": 91661, "time": "2006-07-27T18:45:24Z", "creator": "jglick@apache.org", "creation_time": "2006-07-27T18:45:24Z", "attachment_id": null}, {"count": 22, "tags": [], "bug_id": 40014, "attachment_id": null, "id": 91663, "time": "2006-07-27T20:00:17Z", "creator": "mbenson@apache.org", "creation_time": "2006-07-27T20:00:17Z", "is_private": false, "text": "(In reply to comment #21)\n> Since no one else provided a small, self-contained, reproducible test case:\n\n! sorry... I could have attached the one I distilled down from the one\nsubmitted.  :(\n\n> I'll confess I neither understand what causes the problem, nor know how it could\n> be solved. Unixish pipes have the unpleasant property that the receiver can know\n> when the producer has sent some bytes, but the producer cannot know if the\n> receiver is expecting any bytes, meaning that for <java fork=\"true\"> there is no\n> way for Ant to know whether the process will ever read from stdin or not.\n\n:(  Have to keep thinking then..."}, {"count": 23, "tags": [], "text": "\n\n*** This bug has been marked as a duplicate of bug 34461 ***", "attachment_id": null, "id": 119978, "creator": "bodewig@apache.org", "time": "2008-08-21T05:25:58Z", "bug_id": 40014, "creation_time": "2008-08-21T05:25:58Z", "is_private": false}]