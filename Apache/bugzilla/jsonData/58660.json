[{"count": 0, "tags": [], "bug_id": 58660, "text": "Hi,\n\nTomcat 8.0.29 changes the behaviour of requests for paths without a trailing slash. It seems to be limited to context roots, e.g. /examples instead of /examples/servlets.\n\nWhen calling /examples on 8.0.28 it responds with a 302 redirecting to /examples/, but 8.0.29 responds with a 200.\n\nI would say that people should be more careful with their URL:s, but this change in default behaviour is probably going to cause problems. It is probably not correct to respond with /examples/index.html, when accessing /examples. This changes any relative paths on a website, since there will be a / missing. This may indeed be verified by clicking any of the links in the 8.0.29 /examples response HTML. Clicking them causes the browser to fetch e.g. /servlets instead of /examples/servlets.\n\nAccessing /examples/servlets however causes a 302 to /examples/servlets/, just like 8.0.28.\n\n\nTo reproduce:\n\n1. Download Tomcat 8.0.28 and 8.0.29\n\n% wget http://archive.apache.org/dist/tomcat/tomcat-8/v8.0.28/bin/apache-tomcat-8.0.28.zip\n% wget http://apache.mirrors.spacedump.net/tomcat/tomcat-8/v8.0.29/bin/apache-tomcat-8.0.29.zip\n\nUnzip the two archives.\n\n2. Access /examples for Tomcat 8.0.28\n\n% curl -vso /dev/null http://localhost:8080/examples\n* STATE: INIT => CONNECT handle 0x6000572f0; line 1090 (connection #-5000)\n* Added connection 0. The cache now contains 1 members\n*   Trying ::1...\n* STATE: CONNECT => WAITCONNECT handle 0x6000572f0; line 1143 (connection #0)\n* Connected to localhost (::1) port 8080 (#0)\n* STATE: WAITCONNECT => SENDPROTOCONNECT handle 0x6000572f0; line 1240 (connection #0)\n* STATE: SENDPROTOCONNECT => DO handle 0x6000572f0; line 1258 (connection #0)\n> GET /examples HTTP/1.1\n> Host: localhost:8080\n> User-Agent: curl/7.45.0\n> Accept: */*\n>\n* STATE: DO => DO_DONE handle 0x6000572f0; line 1337 (connection #0)\n* STATE: DO_DONE => WAITPERFORM handle 0x6000572f0; line 1464 (connection #0)\n* STATE: WAITPERFORM => PERFORM handle 0x6000572f0; line 1474 (connection #0)\n* HTTP 1.1 or later with persistent connection, pipelining supported\n< HTTP/1.1 302 Found\n* Server Apache-Coyote/1.1 is not blacklisted\n< Server: Apache-Coyote/1.1\n< Location: http://localhost:8080/examples/\n< Transfer-Encoding: chunked\n< Date: Fri, 27 Nov 2015 08:36:11 GMT\n<\n{ [5 bytes data]\n* STATE: PERFORM => DONE handle 0x6000572f0; line 1632 (connection #0)\n* Curl_done\n* Connection #0 to host localhost left intact\n* Expire cleared\n\n\n3. Access /examples for Tomcat 8.0.29\n\n* STATE: INIT => CONNECT handle 0x6000572f0; line 1090 (connection #-5000)\n* Added connection 0. The cache now contains 1 members\n*   Trying ::1...\n* STATE: CONNECT => WAITCONNECT handle 0x6000572f0; line 1143 (connection #0)\n* Connected to localhost (::1) port 8080 (#0)\n* STATE: WAITCONNECT => SENDPROTOCONNECT handle 0x6000572f0; line 1240 (connection #0)\n* STATE: SENDPROTOCONNECT => DO handle 0x6000572f0; line 1258 (connection #0)\n> GET /examples HTTP/1.1\n> Host: localhost:8080\n> User-Agent: curl/7.45.0\n> Accept: */*\n>\n* STATE: DO => DO_DONE handle 0x6000572f0; line 1337 (connection #0)\n* STATE: DO_DONE => WAITPERFORM handle 0x6000572f0; line 1464 (connection #0)\n* STATE: WAITPERFORM => PERFORM handle 0x6000572f0; line 1474 (connection #0)\n* HTTP 1.1 or later with persistent connection, pipelining supported\n< HTTP/1.1 200 OK\n* Server Apache-Coyote/1.1 is not blacklisted\n< Server: Apache-Coyote/1.1\n< Accept-Ranges: bytes\n< ETag: W/\"1156-1448007578000\"\n< Last-Modified: Fri, 20 Nov 2015 08:19:38 GMT\n< Content-Type: text/html\n< Content-Length: 1156\n< Date: Fri, 27 Nov 2015 08:36:38 GMT\n<\n{ [1156 bytes data]\n* STATE: PERFORM => DONE handle 0x6000572f0; line 1632 (connection #0)\n* Curl_done\n* Connection #0 to host localhost left intact\n\nCheers, \nPer Lewau", "id": 186585, "time": "2015-11-27T09:02:31Z", "creator": "per.lewau@smhi.se", "creation_time": "2015-11-27T09:02:31Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 58660, "text": "Read the change log.", "id": 186586, "time": "2015-11-27T09:04:08Z", "creator": "markt@apache.org", "creation_time": "2015-11-27T09:04:08Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "The change in where processing takes place is intentional but the end result should have been the same. Need to look at what is going on for the context root.", "id": 186587, "time": "2015-11-27T09:12:32Z", "bug_id": 58660, "creation_time": "2015-11-27T09:12:32Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 58660, "attachment_id": null, "id": 186588, "time": "2015-11-27T09:20:57Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-11-27T09:20:57Z", "is_private": false, "text": "This is reproducible in Tomcat 7.0.66 (release candidate) as well."}, {"count": 4, "tags": [], "bug_id": 58660, "text": "Tomcat 8.0.29 - Workaround:\nIn conf/context.xml set the following attribute:\n<Context mapperContextRootRedirectEnabled=\"true\">\n\n\nTomcat 7.0.66 (release candidate) - The workaround does not work.\n\nThe cause is that MapperListener calls wrong (deprecated) version of mapper.addContextVersion() method and does not pass the flags to the Mapper.", "id": 186589, "time": "2015-11-27T09:44:16Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-11-27T09:44:16Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 58660, "text": "Specifically for the context root, the default behavior could be to redirect in the mapper (mapperContextRootRedirectEnabled could be true).", "id": 186590, "time": "2015-11-27T10:32:24Z", "creator": "remm@apache.org", "creation_time": "2015-11-27T10:32:24Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 58660, "attachment_id": null, "id": 186593, "time": "2015-11-27T11:31:05Z", "creator": "markt@apache.org", "creation_time": "2015-11-27T11:31:05Z", "is_private": false, "text": "I'm neutral on the default behaviour for context root redirects but either way the current issue needs to be fixed. I'm currently working on this."}, {"count": 7, "text": "Well, I messed up as well, since I was certain this was fine (the code change in the default servlet should have redirected the root path as far as I am concerned), although my own patch never removed the \"\" -> \"/\" redirect in the mapper of course.", "creator": "remm@apache.org", "attachment_id": null, "id": 186594, "time": "2015-11-27T11:44:26Z", "bug_id": 58660, "creation_time": "2015-11-27T11:44:26Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "One more place that fails - a FormAuthenticator if it is configured to a web application as a whole and if its authentication form uses a relative URL to j_security_check, like the examples app does.\n\n8.0.29\n1. In webapps/examples/WEB-INF/web.xml\nIn <security-constraint> elements (there are 2 of them) replace \n         <url-pattern>/jsp/security/protected/*</url-pattern>\nwith\n         <url-pattern>/*</url-pattern>\n\n2. In conf/tomcat-users.xml uncomment test users.\n\n3. Start Tomcat\n\n4. Go to http://localhost:8080/examples\n\nA login form is displayed.\n\n5. Type in user name and password (as configured in conf/tomcat-users.xml)\n\n6. The login form sends POST request to\nhttp://localhost:8080/j_security_check;jsessionid=<...>\n\nThis fails with 404, because request goes to a wrong web application (ROOT, not examples).\n\n\nOne more area of concern: anything that sets a cookie before a redirect happens. See \"sessionCookiePathUsesTrailingSlash\" option on Context. \n\n(FormAuthenticator is an example here as well, but as I wrote above there is a more serious issue with it.)", "id": 186595, "time": "2015-11-27T11:49:21Z", "bug_id": 58660, "creation_time": "2015-11-27T11:49:21Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 58660, "attachment_id": null, "id": 186596, "time": "2015-11-27T12:06:26Z", "creator": "remm@apache.org", "creation_time": "2015-11-27T12:06:26Z", "is_private": false, "text": "Well, since we think everything else works, then the easiest/safest is to unconditionally add back the root path redirect in the mapper."}, {"count": 10, "tags": [], "bug_id": 58660, "attachment_id": null, "id": 186597, "time": "2015-11-27T12:14:34Z", "creator": "markt@apache.org", "creation_time": "2015-11-27T12:14:34Z", "is_private": false, "text": "You say that just as I think I have put together a fix. Happy to change the default but I'd like to keep the option of having the Default Servlet do the redirect"}, {"count": 11, "tags": [], "bug_id": 58660, "attachment_id": null, "id": 186600, "time": "2015-11-27T13:53:47Z", "creator": "remm@apache.org", "creation_time": "2015-11-27T13:53:47Z", "is_private": false, "text": "The issue is probably that the mapper rewrites (for mapping purposes I think) a \"no servlet path\" as \"/\", and the default servlet has no way to know this happened. If I remove this rewrite code, it doesn't work any better though.\n\nIf you make the root path redirection in default servlet completely functional, then I'd say it's fine to keep the option (even enabled by default), but otherwise ...\n\nIf it is acked avoiding the root path redirect in the mapper is not something mandatory, it should be possible to add it back and remove the configuration option for now to resolve the regression, and work on it for the next release."}, {"count": 12, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "That is exactly the issue I have been working through. I think I have it solved for the Default Servlet. I'm currently working on issue with FORM login at the context root that Konstantin highlighted.", "id": 186601, "time": "2015-11-27T14:03:29Z", "bug_id": 58660, "creation_time": "2015-11-27T14:03:29Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 58660, "text": "I've committed my first pass at a fix for this to 9.0.x. Please test and I'll work on a 8.0.x release as soon as we are happy with this.\n\nAt this point I'm still neutral on what the default should be for mapperContextRootRedirectEnabled. I think Remy is in favor of it being true. Any other views?", "id": 186602, "time": "2015-11-27T14:54:26Z", "creator": "markt@apache.org", "creation_time": "2015-11-27T14:54:26Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "remm@apache.org", "is_private": false, "count": 14, "id": 186603, "time": "2015-11-27T15:35:43Z", "bug_id": 58660, "creation_time": "2015-11-27T15:35:43Z", "text": "Testing looks ok (but I probably tested the same things you did). I would have preferred not adding the root path redirect flag though."}, {"count": 15, "tags": [], "bug_id": 58660, "attachment_id": null, "id": 186604, "time": "2015-11-27T16:32:37Z", "creator": "markt@apache.org", "creation_time": "2015-11-27T16:32:37Z", "is_private": false, "text": "I think there are valid use cases for the flag so I'd like to keep it but I'd be happy to change the default.\n\nI found a few issues with my first pass which I have now fixed. I'm currently thinking more testing now and over the weekend with a back-port to 8.0.x towards the end of the weekend and tag on Monday."}, {"count": 16, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "*** Bug 58665 has been marked as a duplicate of this bug. ***", "id": 186624, "time": "2015-11-28T15:24:37Z", "bug_id": 58660, "creation_time": "2015-11-28T15:24:37Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 58660, "attachment_id": null, "id": 186654, "time": "2015-11-30T09:39:02Z", "creator": "markt@apache.org", "creation_time": "2015-11-30T09:39:02Z", "is_private": false, "text": "Fixed in 9.0.x (for 9.0.0.M2 onwards), 8.0.x (for 8.0.30 onwards), 7.0.x (for 7.0.67 onwards) and 6.0.x (for 6.0.45 onwards)."}, {"count": 18, "text": "Hi, this defect is still reproducible in 8.0.30. Is it really fixed or should I use mapperContextRootRedirectEnabled parameter? It is unclear from dev discussion about solution.", "creator": "andy_pit@ukr.net", "attachment_id": null, "id": 187908, "time": "2016-01-22T15:03:32Z", "bug_id": 58660, "creation_time": "2016-01-22T15:03:32Z", "tags": [], "is_private": false}, {"count": 19, "tags": [], "bug_id": 58660, "text": "This issue is fixed in 8.0.30\n\nBugzilla is not a support. If you have questions, please use the users' mailing list. If that discussion identifies a further regression then this can be re-opened.", "id": 187909, "time": "2016-01-22T15:05:48Z", "creator": "markt@apache.org", "creation_time": "2016-01-22T15:05:48Z", "is_private": false, "attachment_id": null}, {"count": 20, "attachment_id": null, "creator": "andy_pit@ukr.net", "text": "I've just reproduced following case in 8.0.30 (8.0.28 is ok):\n\nSteps:\n1. Download Tomcat installation\n2. Open webapps/examples/WEB-INF/web.xml folder\n3. Change lines:\n\t<servlet-mapping>\n        <servlet-name>ChatServlet</servlet-name>\n        <url-pattern>/servlets/chat/chat</url-pattern>\n    </servlet-mapping>\n\t\n\tto\n\t\n\t<servlet-mapping>\n        <servlet-name>ChatServlet</servlet-name>\n        <url-pattern>/</url-pattern>\n    </servlet-mapping>\n5. Open http://localhost:8080/examples?key=param \n\nExpected result:\nServer returns response with status 302 to redirect user to http://localhost:8080/examples/?key=param and then to http://localhost:8080/examples/login.jsp\n\nActual result:\nServer returns response with status 302 to redirect user to http://localhost:8080/login.jsp", "id": 187910, "time": "2016-01-22T15:18:41Z", "bug_id": 58660, "creation_time": "2016-01-22T15:18:41Z", "tags": [], "is_private": false}, {"count": 21, "tags": [], "bug_id": 58660, "text": "That behaviour is expected in 8.0.30. The ChatServlet isn't written to handle reuqests to the root of the context that don't have a trailing slash. Whether it should or not is open to debate.\n\nThe default for mapperContextRootRedirectEnabled has changed for back to the pre 8.0.29 behaviour for 8.0.31 onward.", "id": 187912, "time": "2016-01-22T17:22:38Z", "creator": "markt@apache.org", "creation_time": "2016-01-22T17:22:38Z", "is_private": false, "attachment_id": null}, {"count": 22, "tags": [], "creator": "andy_pit@ukr.net", "attachment_id": null, "text": "(In reply to Mark Thomas from comment #21)\n> That behaviour is expected in 8.0.30. The ChatServlet isn't written to\n> handle reuqests to the root of the context that don't have a trailing slash.\n> Whether it should or not is open to debate.\n> \n> The default for mapperContextRootRedirectEnabled has changed for back to the\n> pre 8.0.29 behaviour for 8.0.31 onward.\n\nOk, so I'll just set to \"true\" mapperContextRootRedirectEnabled and mapperDirectoryRedirectEnabled, to restore old behavior and not bother about default values.\n\nBTW, in changelog (https://tomcat.apache.org/tomcat-8.0-doc/changelog.html) it's said:\n\"Move the functionality that provides redirects for context roots and directories where a trailing / is added from the Mapper to the DefaultServlet.\"\n\nAnd in \"context config\" (https://tomcat.apache.org/tomcat-8.0-doc/config/context.html) the description of mapperContextRootRedirectEnabled is following:\n\"If enabled, requests for a web application context root will be redirected (adding a trailing slash) if necessary by the Mapper rather than the default Servlet.\".\n\nI suppose, you need to update \"context config\" given that redirect functionality is now only in DefaultServlet.", "id": 187951, "time": "2016-01-25T10:38:09Z", "bug_id": 58660, "creation_time": "2016-01-25T10:38:09Z", "is_private": false}, {"count": 23, "tags": [], "bug_id": 58660, "attachment_id": null, "id": 195101, "time": "2016-11-21T07:31:48Z", "creator": "wxisaac@hotmail.com", "creation_time": "2016-11-21T07:31:48Z", "is_private": false, "text": "Hi I saw the issue is marked as fixed in 7.0.67/8.0.30 changelog. However as I tried to set mapperContextRootRedirectEnabled=true (in the latest version 7, 8.0.73) to restore the behavior in the previous releases, the url without a trailing slash still doesn't work (404). So I would like to check if anyone find the parameter mapperContextRootRedirectEnabled really works."}]