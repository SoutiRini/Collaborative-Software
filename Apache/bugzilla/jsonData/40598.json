[{"count": 0, "text": "Please note that I've only tested this on the 1.3 series, but this issue\nmight also apply to 2.0 and 2.2 series of apache.\n\nIn Apache 1.3.28 (a \"maintenance release\"), the directive\n\"RewriteOptions\" with \"MaxRedirects\" was introduced to limit local DoS\nby looping Rewriterules (multiple rewriterules running in a loop).\nHowever, I've just found that in 1.3.37, this directive won't work on\nself-looping RewriteRules:\n\nSample from a customer's site:\n\nRewriteEngine on\nRewriteBase /index.php\nRewriteRule ^(openholidayguide)(.*)\\,(.*)\\_\\_(.*)\\.html$ $1&$3=$4$2.html [NC,N]\n\nThat \",N\" is the thing to take care of.\n\nRequesting\n\nGET\n/openholidayguide,typ__anf,pid__5924_1050,anz__mb,lid__120,kontinent__Afrika,lan\nd__Libyen+/+Libysch-Arabische+Dschamahirija,ch__ub.html HTTP/1.0\n\nto that site lets Apache consume cpu and memory in an endless loop,\ndespite the \"MaxRedirects\" option. After about 10 Minutes of running\ntime, the Apache process already consumed 420 MB of RAM, so this needs\nquite fast manual response (by killing the process) in order not to\ntake down the server.\n\nUsing \"memfetch\", I've grepped a string from a memory dump on such\nan apache instance:\n\n/kunden/homepages/40/d108547339/htdocs/hotelbewertungen/openholidayguide&ch=ub&c\nh=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=\nub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub\n&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&ch=ub&c\nh=ub&ch=ub&ch=ub,typ__anf,pid__5924_1050,anz__mb,lid__120,kontinent__Afrika,land\n__Libyen+/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija\n.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.htm\nl/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+L\nibysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libys\nch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-A\nrabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabi\nsche+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische\n+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dsc\nhamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschama\nhirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahiri\nja.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.h\ntml/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/\n+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch\n-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Ara\nbische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabisc\nhe+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+D\nschamahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dscha\nmahirija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahi\nrija.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija\n.html/+Libysch-Arabische+Dschamahirija.html/+Libysch-Arabische+Dschamahirija.htm\nl\n\n\nThe amount of \"Libysch-Arabische+Daschamahirija.html\" within that sample\ncontext is certainly much larger than 10, so if I wouldn't kill that\ninstance, Apache would consume memory until the oomkiller strikes.\n\nTracing such an apache in GDB or strace doesn't give that much\nvaluable information: gdb shows that apache spends most of its time\nin engine.c within the regex parser, strace only shows \"brk()\"-statements.\nTracing such an apache in GDB or strace doesn't give that much\nvaluable information: gdb shows that apache spends most of its time\nin engine.c within the regex parser, strace only shows \"brk()\"-statements.\n\nI personally see this as a local DoS issue: any .htaccess-capable site\nowner can take down a server quite easily with such an Rewriterule. \nWith shared hosting, this can have a very severe impact.\n\nAs the logs only are being written after a request has been fulfilled,\nstrace doesn't give any hints and gdb merely shows that it's \"some regex,\nmaybe a Rewriterule\", tracking down this issue is quite hard for a \"normal\" admin.\n\nNo workarounds exist and it does break a running apache instance, may affect\nother processes (due to the enormous memory consumption) and imposes a major\nmemory leak, that's why I've tagged this critical. I've first sent this issue to\nsecurity@apache.org on 9/20/2006 (as it includes a local DoS), but this issue\nhas been unreplied so far.\n\n\nRegards,\n\nAnders", "bug_id": 40598, "attachment_id": null, "id": 94067, "time": "2006-09-25T08:38:22Z", "creator": "anders@schlund.de", "creation_time": "2006-09-25T08:38:22Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 40598, "attachment_id": null, "id": 94074, "time": "2006-09-25T10:40:08Z", "creator": "rpluem@apache.org", "creation_time": "2006-09-25T10:40:08Z", "is_private": false, "text": "(In reply to comment #0)\n> Please note that I've only tested this on the 1.3 series, but this issue\n> might also apply to 2.0 and 2.2 series of apache.\n> \n> In Apache 1.3.28 (a \"maintenance release\"), the directive\n> \"RewriteOptions\" with \"MaxRedirects\" was introduced to limit local DoS\n> by looping Rewriterules (multiple rewriterules running in a loop).\n> However, I've just found that in 1.3.37, this directive won't work on\n> self-looping RewriteRules:\n> \n> Sample from a customer's site:\n> \n> RewriteEngine on\n> RewriteBase /index.php\n> RewriteRule ^(openholidayguide)(.*)\\,(.*)\\_\\_(.*)\\.html$ $1&$3=$4$2.html [NC,N]\n> \n> That \",N\" is the thing to take care of.\n\nThis works as designed as the Option \"N\" does not cause internal redirects.\nSo MaxRedirects never gets into the game.\nThe documentation for Option \"N\" states:\n\"Be careful not to create an infinite loop!\"\n\nNevertheless I understand that you do not have control over what customers put\nin their .htaccess file. And that is the core of the problem. Even if\nMaxRedirects would limit this kind of loop it would not help you as\nRewriteOptions and thus MaxRedirects can be changed inside of .htaccess.\nSo this would only prevent accidental bad rewriterules not intentional local DoSes.\n\nSo what you would need would be something like the option MaxLoop which of\ncourse would be changeable via .htaccess again. But that would be a new feature.\nAnd new features are very very unlikely to be introduced into 1.3. So it makes\nmore sense to propose this as an enhancement for the actual trunk of httpd and\nhope that it gets backported to 2.0.x.\n\n> memory leak, that's why I've tagged this critical. I've first sent this issue to\n> security@apache.org on 9/20/2006 (as it includes a local DoS), but this issue\n> has been unreplied so far.\n\nGiven the fact that you sent it 5 days ago, I guess you got no reply as this is\nnot seen as a security issue by the security team, but as a configuration\nproblem. All non security related issues get ignored by security@apache.org"}, {"count": 2, "tags": [], "text": "Your described issue is a dup of bug 38642 caused by continuesly adding of\npath-info in each round. This problem does not exist in per-server context.\n\nMaxRedirects - as it sais - limits internal redirects.\n\nYou won't have the problem with\n\nRewriteRule ^(openholidayguide),([^_/]+)__([^,/]+)([^./]*)(\\.html)?$ $1$4?$2=$3\n[NC,QSA,N]\nRewriteRule ^(openholidayguide)$ /$1.php [NC,L]\n\nbut your request will fail this regex (but anyway the logic of the rewriting is\nbetter, because you're rewriting into the queryString, separated from the\nfilename, so the length of the filename will decrease).\n\nA rush fix can be found here:\nhttp://www.modrewrite.de/foren/ftopic2107.html#10478 but since I didn't had much\ntime, it's an ugly one using r->notes.\n\nYes, this issue still exists in trunk.", "attachment_id": null, "id": 94077, "creator": "bobsiegen@googlemail.com", "time": "2006-09-25T10:42:49Z", "bug_id": 40598, "creation_time": "2006-09-25T10:42:49Z", "is_private": false}, {"count": 3, "tags": [], "text": "Created attachment 19046\nMaxLoops conceptual patch\n\n(In reply to comment #1)\n> So what you would need would be something like the option MaxLoop which of\n> course would be changeable via .htaccess again. But that would be a new\n> feature. And new features are very very unlikely to be introduced into 1.3.\n> So it makes more sense to propose this as an enhancement for the actual\n> trunk of httpd and hope that it gets backported to 2.0.x.\n\nHere is the hotfix we used for our servers. It uses a fixed loop count of 10. I\nwas actually planning to make this value configurable and port the patch to\nHEAD then. However, as you mentioned the restriction could easily be\noverwritten by a customer within a .htaccess file.\n\nI was giving this some thought and came up with three halfway decent solutions.\nThe first two introduce another additional \"RewriteOptions\":\n\n1) \"LockOptions\" - values can't be set/overwritten by \"RewriteOptions\"\ndirectives later in the request processing. This would apply to all options\n(inherit, MaxRedirects, MaxLoops). Could easily be enforced in function\ncmd_rewriteoptions(). Maybe \"LockOptions\" should only be allowed in server\ncontext.\n\n2) \"LimitMaxLoops=n\" - the MaxLoops value can't be set to a value greater n.\n\"LimitMaxLoops\" should only be allowed in server context. Customers would still\nhave some flexibility (within the defined range 0-n) it they need to set\nMaxLoops in .htaccess.\n\n3) Disallow to disable a \"MaxLoops\" restriction once set, e.g. the default\n\"MaxLoops\" value of -1 allows endless looping via [N] tagged rules. One can\nonly set non-negative values (say 0 to 10000) in the config. Thus, once set, no\none can disable the endless looping restriction. It would still be possible to\nextend it, though.\n\nI like 2) and 3) better since they just put the endless out of endless loop,\nletting admins sleep well and leaving customers some freedom.\n\nWould any of these approaches be good enough to get into HEAD? Or is that maybe\ngenerally rather hard?", "is_private": false, "bug_id": 40598, "id": 95147, "time": "2006-10-27T07:58:50Z", "creator": "heiko.hund@schlund.de", "creation_time": "2006-10-27T07:58:50Z", "attachment_id": 19046}, {"count": 4, "attachment_id": null, "creator": "bobsiegen@googlemail.com", "is_private": false, "id": 123433, "time": "2008-12-19T13:23:34Z", "bug_id": 40598, "creation_time": "2008-12-19T13:23:34Z", "tags": [], "text": "\n\n*** This bug has been marked as a duplicate of bug 38642 ***"}]