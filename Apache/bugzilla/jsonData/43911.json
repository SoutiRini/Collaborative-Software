[{"count": 0, "tags": [], "creator": "viv_2300@yahoo.com", "text": "My problem is very similar to the problem described on this page:\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=41735\n\nSo to describe in more detail: In my application a logfile is written into, \nthere is an appender describing that as follows:\n\n<appender name=\"PLM1\" class=\"org.apache.log4j.RollingFileAppender\">\n      <param name=\"Append\"         value=\"true\"/> \n      <param name=\"File\"           value=\"plmconsole.txt\"/>\n      <param name=\"MaxBackupIndex\" value=\"5\"/>\n      <param name=\"MaxFileSize\"    value=\"10MB\"/>      \n      <layout class=\"org.apache.log4j.PatternLayout\">\n         <param name=\"ConversionPattern\" \n                value=\"%-5p %-10X{UserName} %m%n\"/>\n      </layout>\n   </appender>\n\nBut this logfile plmconsole.txt does not honour the 10 MB MaxFileSize and also \nI am not able to see the rolled over files plmconsole.txt.1 ... etc. \nOne more piece of information is that in my application there are several \nclasses and they are all writing into plmconsole.txt . This is important in \nthe light of the fact that I have one more logfile and appender combination \nwhose appender is described exactly as above, but to which just one class is \nwriting, and this file gets rolled over satisfactorily.\n\nI went to this page and found that \"this one is marked as complete in log4j \n1.2.15\" , so tried to run the application against log4j 1.2.15 , but this does \nnot help.\n\nRegards", "id": 110786, "time": "2007-11-20T01:19:10Z", "bug_id": 43911, "creation_time": "2007-11-20T01:19:10Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 43911, "is_private": false, "count": 1, "id": 110858, "time": "2007-11-20T08:58:29Z", "creator": "carnold@apache.org", "creation_time": "2007-11-20T08:58:29Z", "text": "> This is important in \n> the light of the fact that I have one more logfile and appender combination \n> whose appender is described exactly as above, but to which just one class is \n> writing, and this file gets rolled over satisfactorily.\n\nDoes this logfile have a different name, or is it also named plmconsole.txt?\n\nWhat operating system and JVM are in use?  Are you running under an application server, if so what \nversion?\n\nCould you attach your entire configuration file?  Does the configuration file work or fail with a trivial \napplication?  If so, could you attach your test app to the bug?\n\nDid you try to set the system property log4j.debug to true?  Did the console output provide any \ndiagnostics?\n\nDo you have any indexing servers that might be preventing the file from being renamed?  Did you try \nrunning tools that report open files to see if multiple processes might have the file open?"}, {"attachment_id": null, "tags": [], "bug_id": 43911, "text": "I have also had this issue in my own use of log4j.  Basically, if a RollingFileAppender is used from multiple VMs pointing at the same file, the RollingFileAppender will not properly roll.  I believe this is due to log4j caching the state of the log files.  \n\nThis cache is ineffective as there are forces at work writing to the file outside of the specific instance of the RollingFileAppender.\n\nI wonder if the submitter found a way to reproduce this issue while having defined multiple rolling file appenders in the same log4j config file all pointing at the same file.  I would imagine this might cause a similar issue with the caching of file sizes.", "count": 2, "id": 115155, "time": "2008-03-31T13:49:29Z", "creator": "nafeger+apache@gmail.com", "creation_time": "2008-03-31T13:49:29Z", "is_private": false}, {"count": 3, "tags": [], "creator": "john.e.francis@gmail.com", "text": "as of 1.2.16, the method rollOver() in RollingFileAppender does not produce any diagnostic output if one or more of the file rename(s) fail, even with log4j.debug=true. Should produce a warning about failed renames.", "id": 150331, "time": "2011-10-07T19:49:26Z", "bug_id": 43911, "creation_time": "2011-10-07T19:49:26Z", "is_private": false, "attachment_id": null}]