[{"attachment_id": null, "tags": [], "creator": "bernard.cena@morganstanley.com", "text": "I'm trying to write a macro wrapper for <java> which provides sensible default \nvalues for attributes for our environment and manages the classpath. I've hit \nan issue with spawn and timeout attributes: if I supply a default value for \ntimeout, then there is no way to use spawn=\"true\". This is because the \nincompatibleWithSpawn flag is set when timeout is set with any default value, \nand it is impossible to reset timeout to null to enable spawn to be used. \nPerhaps the easiest thing to do is to relax the incompatibleWithSpawn check - \nsurely spawn can be made to ignore timeout ?\nThis problem also applies to other tasks in general - it should be able to \nwrap tasks in macros or predefs without needing to code for special cases like \nthis (similar problem will occur for junit and timeout settings, compiler \nsetting for javac etc).", "count": 0, "id": 79458, "time": "2005-09-06T18:38:54Z", "bug_id": 36523, "creation_time": "2005-09-06T18:38:54Z", "is_private": false}, {"count": 1, "text": "can you check out the latest source from SVN, to see if it is better. Some\nfixing of the bitsetting was done, but maybe not enough.\n\nas it is, I have to agree with you; IMO we should not have an incompatible flag\non the setters, but work it out based on the state of values inside execute\nitself(), the way most other tasks do. Patches would be welcome here, with the\ncaveat that as Java is used so broadly, we dont want to break anything", "bug_id": 36523, "is_private": false, "id": 79459, "time": "2005-09-06T18:46:34Z", "creator": "stevel@apache.org", "creation_time": "2005-09-06T18:46:34Z", "tags": [], "attachment_id": null}]