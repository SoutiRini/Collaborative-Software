[{"count": 0, "tags": [], "creator": "dmitryr@visto.com", "is_private": false, "id": 5861, "creation_time": "2001-09-20T17:33:56Z", "time": "2001-09-20T17:33:56Z", "bug_id": 3755, "text": "After execution shutdown script, tomcat display shutdown request, but never \nends.\nLast line in log looks like:\n2001-09-18 13:18:35 StandardHost[localhost]: Removing web application at \ncontext path /ChatHouse\n2001-09-18 13:18:35 StandardWrapper[/ChatHouse:ChatHouse]: Waiting for 4 \ninstance(s) to be deallocated\n\nweb application war available at: \nhttp://tjws.sourceforge.net/download/ChatHouse.war", "attachment_id": null}, {"count": 1, "tags": [], "text": "The message \"Waiting for 4 instance(s) to be deallocated\" means that Tomcat\nthinks there are four requests that have been started for this servlet, but have\nnever returned.  That means one of two things:\n\n* Your servlet accepts a call to its service() method but never\n  returns or throws an exception (probably only possible if you\n  are messing around with threads).\n\n* There is some path through Tomcat internals where it allocates\n  a servlet instance but forgets to deallocate it.\n\nI've examined the code path pretty carefully, and cannot see any case of the\nlatter -- a reproducible test case would be extremely useful in tracking this\ndown.\n", "attachment_id": null, "bug_id": 3755, "id": 5886, "time": "2001-09-21T10:00:22Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2001-09-21T10:00:22Z", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 3755, "is_private": false, "id": 6246, "time": "2001-10-01T13:06:26Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2001-10-01T13:06:26Z", "tags": [], "text": "Closing with \"WORKSFORME\" until a reproducible test case can be created.\n"}, {"count": 3, "tags": [], "bug_id": 3755, "attachment_id": null, "id": 40637, "time": "2003-07-14T14:35:28Z", "creator": "rtstyk@earthlink.net", "creation_time": "2003-07-14T14:35:28Z", "is_private": false, "text": "I don't have a test case as much as a scenario where this definitely is a \nproblem.  My web app has a TCP connection to a server.  Clients connect to the \nwebapp over HTTP to monitor that server.  There is a wait/notify Queue between \nthe read thread from the server and the thread for each listening client.  \n(This I guess would go under Craig's 'messing around with threads' bullet \npoint.)\n\nAfter connecting two clients for monitoring I'm unable to shutdown the webapp.  \nIt says that it's waiting for 2 instances to be deallocated.\n\nAt this point I can close the listening clients but the server never realizes \nthat those clients were closed.  There is a heartbeat message sent to the \nclient so sooner or later the servlet should throw an IOException but nothing \nlike that happens.  I've had Tomcat waiting for a whole weekend and it never \nrestarted.\n\nThe context will never reload until I shut down the TCP server.  Then \neverything happens instantanously, the context will reload and be back to \nnormal.\n\nRegards,\nDavid Mossakowski\nemail: dmossakowskiATNOSPAMYAHOO_dot_com"}, {"count": 4, "tags": [], "bug_id": 3755, "is_private": false, "id": 51845, "attachment_id": null, "creator": "funkman@joedog.org", "creation_time": "2004-02-06T17:27:41Z", "time": "2004-02-06T17:27:41Z", "text": "Closing with respect to Craigs comments. "}]