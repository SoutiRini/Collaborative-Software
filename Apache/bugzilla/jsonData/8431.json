[{"count": 0, "tags": [], "bug_id": 8431, "attachment_id": null, "id": 14501, "time": "2002-04-23T19:20:37Z", "creator": "vparfilko@forbes.com", "creation_time": "2002-04-23T19:20:37Z", "is_private": false, "text": "file location:\n\nc:\\web\\         - web root - declared in config file, keep static default files\nc:\\...\\cgi-bin\\ - cgi-bin keep foxweb.exe (web broker)\nh:\\...\\foxweb\\  - program root directory - keep programs, scripts, databases, \nets. for foxweb. This directory located on the network, defined in FoxWeb \ncofiguration, and appache do not know about it\n\nin appache config:\n\nAddHandler foxweb-script .fwx\nAction foxweb-script /cgi-bin/FoxWeb.exe\n\nin previous version (apache 1.3) everything was fine:\nbrowser call http://hostname/dir/script.fwx\nappache call /cgi-bin/FoxWeb.exe\nand FoxWeb call /dir/script.fwx from program root directory/\nDirectory c:\\web\\dir\\ is also existed and keep static files for aplication\n\napache 2.0 with the same configuration generate error \"Object not found!\", \nbecause-ofcause script.fwx is not located in the \"c:\\web\\dir\\\" (but \nin \"h:\\...\\foxweb\\dir\\\")\nif I create empty(!) file c:\\web\\dir\\script.fwx, so \nh:\\...\\foxweb\\dir\\script.fwx is processed successfuly\nit means apache 2.0 check if file script.fwx exist before calling foxweb !\nbut apache 2.0 should not even see this file on the network\n\nso, I have to:\nreturn to previos version of apache and lost some new features of 2.0 version\nor\nmove all .fwx scripts into c:\\web\\dir\\ - I dont want, because it less secure\nor\ncreate dummy empty .fwx files in c:\\web\\dir\\ for EVERY new script file - monkey \nwork\n\n\nI think the same problem will happen with all web-developers, who keep script \nand static files separatly\n\nsincerely\nvadim"}, {"count": 1, "tags": [], "bug_id": 8431, "attachment_id": null, "id": 14525, "time": "2002-04-23T21:17:37Z", "creator": "slive@apache.org", "creation_time": "2002-04-23T21:17:37Z", "is_private": false, "text": "I'm not really an expert with this stuff, but I think the behavior you describe\nin Apache 2.0 is much better than what happened in 1.3.  I think the change was\ndeliberate.  AddHandler is used to associate handlers with files that actually\nexist.  If the file does not exist in the web space, it it completely correct\nto return a 404 error.\n\nIf what you want is for every request that ends in .fwx to be fed to your script,\nApache provides lots of different ways to do that.  For example:\nScriptAliasMatch (.*)\\.fwx$ c:/.../cgi-bin/foxweb.exe\nAddHandler is *not* the correct way to accomplish that.\n\nI'll leave this report open in case someone who knows this stuff better than\nme can find something I'm missing."}, {"count": 2, "tags": [], "creator": "vparfilko@forbes.com", "attachment_id": null, "text": "Thanks, Joshua!\n\nnow instead \"ScriptAlias\" and \"Action\" I use:\n\nScriptAliasMatch (.*)(\\.fwx|\\.prg) \"C:/.../Apache2/cgi-bin/foxweb.exe$1.$2\"\n\nit's working (I'm only not sure about situaion, when \".fwx\" or \".prg\" can be \npart of parameters - it will be also replaced?)\n\nbut for some reson line\nScriptAliasMatch (.*)(\\.fwx|\\.prg) \"/cgi-bin/foxweb.exe$1.$2\"\nis not working regardles alias \"/cgi-bin/\" is defined\n\n\n> AddHandler is *not* the correct way to accomplish that.\nI disagree\nI think the AddHandler *is* the best solution for process files with specialy \ndefined extensions\n\n\nthanks again\n\nvadim\n", "id": 15151, "time": "2002-04-30T16:36:39Z", "bug_id": 8431, "creation_time": "2002-04-30T16:36:39Z", "is_private": false}, {"count": 3, "tags": [], "text": "Reopening to change Resolution.", "is_private": false, "id": 15153, "creator": "slive@apache.org", "time": "2002-04-30T16:49:44Z", "bug_id": 8431, "creation_time": "2002-04-30T16:49:44Z", "attachment_id": null}, {"text": "If you'd like to discuss your configuration problem, please joing the apache\nusers mailing list.\n\nRegarding\n> I think the AddHandler *is* the best solution for process files with specialy \n> defined extensions\nAddHandler *does* process files with specially defined extensions.  What it\ndoesn't do is process URLs with special extensions that just happen to map\nto a file when processed thorugh some cgi script.  Apache has no knowledge\nthat the CGI script is going to map the URL back to a file.\n\nIn other words, if the file isn't in the webspace, AddHandler is not the\nway to deal with it.\n\nThanks.", "tags": [], "bug_id": 8431, "attachment_id": null, "count": 4, "id": 15154, "time": "2002-04-30T16:52:19Z", "creator": "slive@apache.org", "creation_time": "2002-04-30T16:52:19Z", "is_private": false}, {"count": 5, "attachment_id": null, "bug_id": 8431, "is_private": false, "id": 15165, "time": "2002-04-30T18:10:58Z", "creator": "vparfilko@forbes.com", "creation_time": "2002-04-30T18:10:58Z", "tags": [], "text": "You are right,\nbut:\n--  Apache 1.3 was not check exist file or not if it passed to handler (let's \nhandler care about this) - and that was very useful and clear\n--  in 1.3 alias /cgi-bin/ was suxessfuly substituted - probably this is does \nnot working in 2.0, because RegExpr use another logic and does not allow to \nprocess common stuf for ScriptAliasMatch - again previous style was more clear \n--  in 2.0:\n>> if I create empty(!) file c:\\web\\dir\\script.fwx, so \n>> h:\\...\\foxweb\\dir\\script.fwx is processed successfuly\nwe have funy situation: check existing of one file, but run another\n\nso, I still thinking - this is a B-U-U-U-G! (sorry, out of control)\n\nthanks,\nvadim\n"}, {"count": 6, "tags": [], "bug_id": 8431, "attachment_id": null, "id": 15171, "time": "2002-04-30T18:24:33Z", "creator": "slive@apache.org", "creation_time": "2002-04-30T18:24:33Z", "is_private": false, "text": "\n1. The behavior in 1.3 was wrong.  AddHandler maps *files* to handlers.  If\nthe file does not exist in the apache webspace, then there is nothing to\nmap.  I am fairly confident that the new behavior is clearer and more\nconsistent.  (The old behavior had various bad side-effects like handlers\nneeding to deal with 404 errors on their own, rather than using the internal\n404 handler.)\n\n2. I think you misunderstand how ScriptAlias works.  That should be taken\nup on the users mailing list, not here.\n\n3. I don't see any problem or inconsistency with the fact that an empty file\nworks.  The handler can deal with the empty file however it wants.  The fact\nthat your handler completely ignores the file and finds a new file to serve\nfrom outside the webspace is a design decision on your part.\n\nIn any case, I think we are beyond the scope of the bug database.  If you'd\nlike to argue about the design decision, dev@httpd.apache.org is the place to\ngo.  If you want further configuration help, users@httpd.apache.org is the\nplace.\n\nThanks for using Apache!"}, {"count": 7, "attachment_id": null, "bug_id": 8431, "is_private": false, "id": 31450, "time": "2003-02-17T15:06:39Z", "creator": "slive@apache.org", "creation_time": "2003-02-17T15:06:39Z", "tags": [], "text": "*** Bug 17120 has been marked as a duplicate of this bug. ***"}, {"count": 8, "attachment_id": null, "bug_id": 8431, "is_private": false, "id": 31451, "time": "2003-02-17T15:14:01Z", "creator": "nd@perlig.de", "creation_time": "2003-02-17T15:14:01Z", "tags": [], "text": "The behaviour was changed in 1.3.10 to handle virtual locations and not ported\nto 2.x.\n\nAnyway, I plan to add an argument \"virtual\" to the Action directive (in 2.1)\nthat allows to skip the file-exists-check. Actually the patch already exists on\nmy HDD but the time ... ;-)\n\n(reopening to change resolution)"}, {"count": 9, "tags": [], "text": "\n  Andre, I concur with your assessment.  Handlers should be able to handle\n  virtual resources - and explicitly spelling those that are to handle\n  virtual resources would be goodness.\n\n  However, RESOLVED LATER indicates that the problem is resolved in a past\n  release, only not the version the user reported the problem in.  Reopen\n  this report entirely until you are satisfied of it's closure.\n", "attachment_id": null, "bug_id": 8431, "id": 31568, "time": "2003-02-19T05:26:04Z", "creator": "wrowe@apache.org", "creation_time": "2003-02-19T05:26:04Z", "is_private": false}, {"count": 10, "attachment_id": null, "bug_id": 8431, "is_private": false, "id": 40648, "time": "2003-07-14T16:16:52Z", "creator": "nd@perlig.de", "creation_time": "2003-07-14T16:16:52Z", "tags": [], "text": "Well.. fixed in 2.1 now. Introduced the 'virtual' option which turns off the\nfile check.\nI don't think, that it's such as critical, that it has to be backported to the\nstable tree."}, {"count": 11, "tags": [], "text": "If this isn't going to be backported would it be possible to add a comment in\nthe documentation of 2.0.x? It took me quite some time to figure this out.", "is_private": false, "id": 73054, "creator": "moz@liebesgedichte.siteware.ch", "time": "2005-03-30T09:43:41Z", "bug_id": 8431, "creation_time": "2005-03-30T09:43:41Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 8431, "is_private": false, "id": 73650, "creation_time": "2005-04-14T17:38:52Z", "time": "2005-04-14T17:38:52Z", "creator": "slive@apache.org", "text": "*** Bug 28553 has been marked as a duplicate of this bug. ***", "attachment_id": null}]