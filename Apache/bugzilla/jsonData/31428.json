[{"count": 0, "tags": [], "text": "I had thought that when I set up mod_auth_ldap that it would attempt to\nauthenticate to the LDAP server using a dn for the user ID submitted in the\nrequest. This would allow me to configure OpenLDAP so that anonymous users had\nauth access only. But mod_auth_ldap doesn't work that way. What it does instead\nis bind to the ldap server as anonymous (or the dn specified by AuthLDAPBindDN),\nsearch for the appropriate user object, and then authenticate that user (bind\nagain?)?\n\nI think of this is a minor security bug, as it means that I either need to allow\nanonymous READ access to my people ou, or create a user just for mod_ldap_auth\nto bind to that has READ access (and who's password will be in httpd.conf!).\nWould it be possible to add a directive to mod_auth_ldap to have it bind to the\nldap server as the user attempting to auth? I'm thinking something like:\n\n  AuthLDAPBindUser (uid=%s,ou=people,dc=example,dc=com)\n\nThanks!", "attachment_id": null, "bug_id": 31428, "id": 64236, "time": "2004-09-26T19:15:58Z", "creator": "david@kineticode.com", "creation_time": "2004-09-26T19:15:58Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 31428, "attachment_id": null, "id": 64237, "time": "2004-09-26T19:55:55Z", "creator": "david@kineticode.com", "creation_time": "2004-09-26T19:55:55Z", "is_private": false, "text": "On the other hand, I just changed things to that anyone can READ people, but can\nonly access userPassword for auth. So maybe it's not such a big deal. Anyone who\nwants to prevent anonymous from having READ access to people will need to creat\na user and store its dn and password in httpd.conf. So I'll change this report\nto \"Enhancement.\"\n\nThanks!"}, {"count": 2, "tags": [], "bug_id": 31428, "attachment_id": null, "id": 64948, "time": "2004-10-11T19:57:45Z", "creator": "wrolf.courtney@donovandata.com", "creation_time": "2004-10-11T19:57:45Z", "is_private": false, "text": "Version 2.0.51 behavior differs critically from 2.0.49.\n\nThe new behavior is that after authenticating the user with a SEARCH then a \nBIND as the actual user, mod_auth_ldap/mod_ldap \"logout\" of LDAP, by issuing a \nBIND request with null (anonymous).  Then group membership is checked, but \nanonymously - which in many cases (e.g. my Domino LDAP server) fails.\n\nPreviously, mod_auth_ldap stayed \"logged in\", leaving the BIND intact, and \nallowing for querying of DN membership of groups.\n\nI have confirmed this difference in an Ethereal trace.\n\nSince the point of LDAP is to allow a single place for authentication and \nauthorization information within an environment, it is not reasonable to expect \nthe administrators of the LDAP servers to be the same group as the \nadministrator of a given Apache server.  (In my case, they are not.)\n\nPlease return to the previous behavior."}, {"count": 3, "tags": [], "bug_id": 31428, "attachment_id": null, "id": 65237, "time": "2004-10-17T17:46:55Z", "creator": "minfrin@apache.org", "creation_time": "2004-10-17T17:46:55Z", "is_private": false, "text": "The behaviour going forward for mod_auth_ldap is to bind to the LDAP server\nusing the DN provided in AuthLDAPBindDN, and perform the user search (in the\nauthentication phase) and any group searches (in the authorisation phase) as\nthis DN. No searches are done as the user who logged in, removing the need to\ngive logged in users read or search access to either the person objects or the\ngroup objects inside the LDAP server.\n\nIf AuthLDAPBindDN is not specified, then anonymous searches are used.\n\nIf the above behavior is not being followed, please add a note to this bug.\n"}, {"count": 4, "attachment_id": null, "bug_id": 31428, "is_private": false, "id": 69952, "time": "2005-01-21T22:59:19Z", "creator": "david@wheeler.net", "creation_time": "2005-01-21T22:59:19Z", "tags": [], "text": "Well, that behavior is being followed, but I was suggesting that sometimes LDAP\nadmins want the option to disable anonymous access and don't want security\ncredentials buried in the configuration files of other applications. They may\nprefer to allow authenticated users to search. The current design of\nmod_auth_ldap enforces a particular security policy which may be antithetical\nthe security policies of other organizations that use it, and there's no way for\nthem to stick to such a policy with mod_auth_ldap.\n\nIt's a shame not to allow that flexibility."}, {"count": 5, "tags": [], "bug_id": 31428, "attachment_id": null, "id": 80749, "time": "2005-10-04T17:52:37Z", "creator": "jorton@redhat.com", "creation_time": "2005-10-04T17:52:37Z", "is_private": false, "text": "This is essentially the same as bug 31352 if I understand correctly; that bug\nhas a better synopsis.\n\n*** This bug has been marked as a duplicate of 31352 ***"}]