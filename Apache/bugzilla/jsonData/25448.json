[{"count": 0, "tags": [], "text": "While upgrading from Tomcat 4.1.18 to 5.0.16, I encountered a problem where\nseveral of my JSPs will not compile.  I found that the following syntax was\ncausing Jasper to to throw an error.\n\nThe syntax:\n      <jsp:include page=\"/asset/search-includeaction.jsp\" flush=\"false\" >\n      </jsp:include>\n\nWould cause this exception to be thrown:\norg.apache.jasper.JasperException: /asset/index.jsp(43,6) Expected \"param\" tag\nwith \"name\" and \"value\" attributes\n\tat\norg.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:83)\n\tat org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:402)\n\tat org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:126)\n\tat org.apache.jasper.compiler.Parser.parseParam(Parser.java:892)\n\tat org.apache.jasper.compiler.Parser.parseBody(Parser.java:1838)\n\tat org.apache.jasper.compiler.Parser.parseOptionalBody(Parser.java:1100)\n\tat org.apache.jasper.compiler.Parser.parseInclude(Parser.java:928)\n\tat org.apache.jasper.compiler.Parser.parseStandardAction(Parser.java:1251)\n\tat org.apache.jasper.compiler.Parser.parseElements(Parser.java:1597)\n\tat org.apache.jasper.compiler.Parser.parse(Parser.java:171)\n\tat org.apache.jasper.compiler.ParserController.parse(ParserController.java:247)\n\tat org.apache.jasper.compiler.ParserController.parse(ParserController.java:149)\n\tat org.apache.jasper.compiler.ParserController.parse(ParserController.java:135)\n\tat org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:237)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:456)\n\tat org.apache.jasper.compiler.Compiler.compile(Compiler.java:439)\n\tat org.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:552)\n\tat org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:291)\n\tat org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:301)\n\tat org.apache.jasper.servlet.JspServlet.service(JspServlet.java:248)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:856)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:284)\n\tat\norg.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:204)\n\tat\norg.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:256)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:151)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:564)\n\tat\norg.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:245)\n\tat\norg.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:199)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:151)\n\tat\norg.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:594)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:149)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:564)\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:195)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:151)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:164)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:149)\n\tat\norg.opennms.web.UTF8RequestEncodingValve.invoke(UTF8RequestEncodingValve.java:56)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:149)\n\tat org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:578)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:149)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:564)\n\tat\norg.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:156)\n\tat\norg.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:151)\n\tat org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:564)\n\tat org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:972)\n\tat org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:211)\n\tat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:805)\n\tat\norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:696)\n\tat org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:605)\n\tat\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:677)\n\tat java.lang.Thread.run(Thread.java:536)\n\n\nWorkaround:\nDo one of two things, either make the tag a proper XML empty tag like this:\n      <jsp:include page=\"/asset/search-includeaction.jsp\" flush=\"false\" />\nOr make sure there is nothing at all between the tags like this:\n      <jsp:include page=\"/asset/search-includeaction.jsp\" flush=\"false\" >    \n</jsp:include>\n\n\nMarking as minor as the preferred style (the empty tag) completely works around\nthis problem.", "attachment_id": null, "bug_id": 25448, "id": 48914, "time": "2003-12-11T15:31:08Z", "creator": "larry@oculan.com", "creation_time": "2003-12-11T15:31:08Z", "is_private": false}, {"id": 49146, "tags": [], "bug_id": 25448, "is_private": false, "count": 1, "text": "Reopen to change status.", "time": "2003-12-15T19:15:41Z", "creator": "kin-man.chung@sun.com", "creation_time": "2003-12-15T19:15:41Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "kin-man.chung@sun.com", "attachment_id": null, "id": 49147, "time": "2003-12-15T19:23:37Z", "bug_id": 25448, "creation_time": "2003-12-15T19:23:37Z", "is_private": false, "text": "This is NOT a bug, afterall.  According to JSP 2.0 spec, JSP.1.3.10.1, the\ngrammar for EmptyBody does not allow whitespaces before </jsp:include>.  In this\ncase, whitespaces are allowed only when they are followed by <jsp:params>.  This\nis consistent with how whitespaces are treated in the body of a custom action: a\nbody consists of whitesapces only are not considered empty."}, {"count": 3, "tags": [], "text": "Ok - for all people that have this problem and have access to perl, here is a\nsmall script to fix the problem. It reads the names of jsp files from stdin and\nchanges the <jsp:include's> accordingly. That is, only the ones where page=\"\"\ncomes before flush=\"\" - should be easy to change though.\n\n#!/usr/bin/perl\n\nuse IO::AtomicFile;\nuse strict;\n\nwhile(<STDIN>) {\n    my $fileName = $_;\n    chomp $fileName;\n    print \"processing $fileName\\n\";\n    processFile($fileName);\n}\n\nexit 0;\n\nsub processFile {\n    my $fileName = shift;\n    my $fileContent;\n    open(IN,\"<$fileName\") or die(\"$fileName: $!\");\n    while(<IN>) {\n\t$fileContent .= $_;\n    }\n    close(IN);\n    $fileContent =~ \n\ts/\\<jsp\\:include\\s+page\\s*=\\s*\\\"(.+?)\\\"\\s+flush\\s*=\\s*\\\"(.+?)\\\"\\s*\\>\\s*\\<\\/jsp:include\\s*\\>/<jsp:include\npage=\"$1\" flush=\"$2\"\\/>/msg;\n\n    my $FH = IO::AtomicFile->open(\"$fileName\",\"w\");\n    print $FH $fileContent;\n    $FH->close || warn ( \"write atomic $fileName: $!\");\n}", "attachment_id": null, "bug_id": 25448, "id": 52929, "time": "2004-02-25T13:31:01Z", "creator": "ctolkmit@tng.de", "creation_time": "2004-02-25T13:31:01Z", "is_private": false}, {"count": 4, "tags": [], "text": "*** Bug 29509 has been marked as a duplicate of this bug. ***", "attachment_id": null, "bug_id": 25448, "id": 59051, "time": "2004-06-10T19:09:46Z", "creator": "funkman@joedog.org", "creation_time": "2004-06-10T19:09:46Z", "is_private": false}, {"count": 5, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 97061, "time": "2006-12-18T18:05:02Z", "bug_id": 25448, "creation_time": "2006-12-18T18:05:02Z", "is_private": false, "text": "*** Bug 41180 has been marked as a duplicate of this bug. ***"}]