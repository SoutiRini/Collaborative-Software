[{"count": 0, "tags": [], "bug_id": 56058, "is_private": false, "id": 172652, "attachment_id": null, "creator": "andilist@gmx.de", "creation_time": "2014-01-23T23:14:58Z", "time": "2014-01-23T23:14:58Z", "text": "Hi,\ni think the logging of \n%A - Local IP address\n%p - Local port on which this request was received\nis inconsisstent if an ajp-connector is used.\n\n%A logs the ip of the tomcat Server\n%p logs the port of the Apache webserver\n\nThere should be a possibility to log:\n1) the ip-address of the tomcat Server on which the request was recieved\n2) the port of the tomcat Server on which the request was recieved\n\n3) the ip-address of the webserver on which the request was recieved\n4) the port of the webserver on which the request was recieved\n\nEven \n%h - Remote host name (or IP address if resolveHosts is false) (and %a)\nis not clear in case of an ajp-request.\n\nThere should be a possibility to log\n5) the remote host of the ajp-request (= webserver)\n6) the remote host of the webserver-request (= browser)\n\nUse case:\ni want to log, who is connecting to my tomcat Server. In case of ajp i can only see the endusers ip (with %h)."}, {"count": 1, "tags": [], "bug_id": 56058, "text": "I've been looking at the source and doing some testing.\n\nFor the AJP protocol:\n- %a and %h always refer to the client as seen by the reverse proxy\n- %v is the host header received by the reverse proxy or the reverse proxy's host name for HTTP/1.0 or HTTP/0.9 requests\n- %A is always InetAddress.getLocalHost().getHostAddress() (or 127.0.0.1 if that fails)\n- %p is the port that the reverse proxy received the connection on\n\nThe IP address that the reverse proxy received the connection on is not available in the AJP protocol. You could make this available by setting a custom HTTP header in the reverse proxy and then displaying the value of that header in the AccessLogValve.\n\nBecause of the way AJP is implemented, it is probably easiest to expose the connector port the same way (since the reverse proxy must know what port it is sending the request to).\n\nIt is highly unlikely that there is going to be any functional changes to Tomcat 6 this area.\n\nYou do get much more control if you:\n- upgrade to Tomcat 7.0.x or Tomcat 8.0.x\n- switch to using HTTP rather than AJP for your reverse proxy\n- use the RemoteIpValve or RemoteIpFilter\n- configure the RemoteIpValve or RemoteIpFilter with requestAttributesEnabled=true\n- configure the AccessLogValve with requestAttributesEnabled=false\n\nWith this configuration the standard access log valve elements will record the values as seen by Tomcat. The values as seen by the proxy will be available as request attributes that can be included in the access log via the %{xxx}r pattern.\n\nI'm not going to resolve this just yet as I think the documentation (for all Tomcat versions) could be improved to make clear exactly what gets logged and/or when what gets logged varies.", "id": 172716, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2014-01-27T21:34:31Z", "time": "2014-01-27T21:34:31Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 172726, "time": "2014-01-28T10:41:37Z", "bug_id": 56058, "creation_time": "2014-01-28T10:41:37Z", "tags": [], "text": "Some related info is contained in\n\nhttp://tomcat.apache.org/connectors-doc/generic_howto/proxy.html\n\nIt also contains the names of the Apache variables one can set if one wants to override the data automatically forwarded via AJP by mod_jk (not mod_proxy_ajp)."}, {"count": 3, "tags": [], "bug_id": 56058, "is_private": false, "id": 181501, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2015-03-04T14:07:56Z", "time": "2015-03-04T14:07:56Z", "text": "I've added some links to the AccessLogValve docs for trunk, 8.0.x (8.0.21 onwards), 7.0.x (7.0.60 onwards) and 6.0.x (6.0.44 onwards).\n\nIt loks like what you want to do is possible via configuration. If you need further pointers, please use the users mailing list."}]