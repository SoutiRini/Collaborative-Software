[{"count": 0, "tags": [], "bug_id": 44529, "attachment_id": null, "is_private": false, "id": 114259, "time": "2008-03-04T08:04:54Z", "creator": "robertjanwesterhof@gmail.com", "creation_time": "2008-03-04T08:04:54Z", "text": "The authorization implementation in RealmBase, in the hasResourcePermission method is not fully servlet specification compliant. The spec (both 2.4 and 2.5) states:\n\n\"...\nA security constraint that does not contain an authorization constraint shall combine with authorization constraints that name or imply roles to allow unauthenticated access. \nThe special case of an authorization constraint that names no roles shall combine with any other constraints to override their affects and cause access to be precluded.\n...\"\n\nIn Tomcat this works fine as long as there aren't weird (but legal!) combinations or security-constraints on the same URLs.\n\nExample:\n\n  <security-constraint>\n    <web-resource-collection>\n      <url-pattern>/someUrl/*</url-pattern>\n      <http-method>POST</http-method>\n    </web-resource-collection>\n    <!-- no auth-constraint, to allow everyone -->\n  </security-constraint>\n\n  <security-constraint>\n    <web-resource-collection>\n      <url-pattern>/someUrl/*</url-pattern>\n      <http-method>POST</http-method>\n    </web-resource-collection>\n    <!-- no roles, to allow noone -->\n    <auth-constraint />\n  </security-constraint>\n\n(if we ignore that this kind of configuration is pretty pointless,)\nthe spec dictates that a POST to /someUrl/index.html should be denied access.\nTomcat grants it. (both 5.5.23 and 6.0.14 do)\n\n\nExample 2:\n\n  <security-constraint>\n    <web-resource-collection>\n      <url-pattern>/someUrl/*</url-pattern>\n      <http-method>POST</http-method>\n    </web-resource-collection>\n    <!-- no roles, to allow noone -->\n    <auth-constraint />\n  </security-constraint>\n\n  <security-constraint>\n    <web-resource-collection>\n      <url-pattern>/someUrl/*</url-pattern>\n      <http-method>POST</http-method>\n    </web-resource-collection>\n    <auth-constraint>\n      <role-name>*</role-name>\n    </auth-constraint>\n  </security-constraint>\n\nNow it gets interesting. In \"strict\" mode, access to /someUrl/index.html is denied (regardless of the web.xml-configured security roles and the roles the user has).\nIn \"auth-only\" mode, access is always granted, and in \"strict auth-only\" mode access is granted if there are no web.xml-configured security roles.\nNow these modes are a Tomcat addition to the spec, but I feel access should have been denied in all modes, both to stay in line with the spec and to keep the behaviour predictable."}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "This has been fixed in trunk and proposed for 6.0.x and 5.5.x", "id": 115091, "time": "2008-03-29T07:48:48Z", "bug_id": 44529, "creation_time": "2008-03-29T07:48:48Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "markt@apache.org", "text": "This has been fixed in 6.0.x and will be included in the next release.", "id": 115331, "time": "2008-04-05T10:55:23Z", "bug_id": 44529, "creation_time": "2008-04-05T10:55:23Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 44529, "attachment_id": null, "is_private": false, "id": 119132, "time": "2008-07-30T10:50:30Z", "creator": "markt@apache.org", "creation_time": "2008-07-30T10:50:30Z", "text": "This has been fixed in 5.5.x and will be included in 5.5.27 onwards."}]