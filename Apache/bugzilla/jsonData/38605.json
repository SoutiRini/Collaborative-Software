[{"count": 0, "tags": [], "bug_id": 38605, "attachment_id": null, "id": 85674, "time": "2006-02-10T11:10:11Z", "creator": "peterbacik@inmail.sk", "creation_time": "2006-02-10T11:10:11Z", "is_private": false, "text": "XMLSec 1.3.0, Java \n\nWehn I invoke method KeyInfo.getX509Certificate(), X509CertificateResolver \nthrows NullPointerException. This problem occures if application runs \nmultithreaded. X509CertificateResolver object is shared among all the threads \nand is not synchronized. This was not the case in XMLSec 1.2.1, because there \nwas allways a new X509CertificateResolver object created for every KeyInfo.\n\nOS: Windows XP Professional (32bit), SUSE Linux (64bit)\nJVM: 1.5.0_06"}, {"count": 1, "attachment_id": null, "bug_id": 38605, "is_private": false, "id": 85806, "time": "2006-02-15T09:32:17Z", "creator": "raul-info@r-bg.com", "creation_time": "2006-02-15T09:32:17Z", "tags": [], "text": "I cannot reproduce the error. Can you attach at testcase or even the Backtrace\nof the exception.\n\nThanks."}, {"count": 2, "tags": [], "creator": "peterbacik@inmail.sk", "attachment_id": null, "text": "This is the exception stack trace and a part of the code that runs on the \nexception. Note that the error occurs only if the web service is invoked from \nmultiple threads. Please, let me know, whether this is sufficient.\n\njava.lang.NullPointerException\n\tat \norg.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolve\nr.engineResolveX509Certificate(X509CertificateResolver.java:149)\n\tat \norg.apache.xml.security.keys.keyresolver.KeyResolver.resolveX509Certificate\n(KeyResolver.java:239)\n\tat \norg.apache.xml.security.keys.KeyInfo.getX509CertificateFromStaticResolvers\n(KeyInfo.java:900)\n\tat org.apache.xml.security.keys.KeyInfo.getX509Certificate\n(KeyInfo.java:859)\n\tat provgw.adapter.security.X509SecurityInterceptor.validateSignature\n(X509SecurityInterceptor.java:190)\n\tat provgw.adapter.security.X509CallbackSimSecurityInterceptor.invoke\n(X509CallbackSimSecurityInterceptor.java:89)\n\tat org.apache.axis.strategies.InvocationStrategy.visit\n(InvocationStrategy.java:32)\n\tat org.apache.axis.SimpleChain.doVisiting(SimpleChain.java:118)\n\tat org.apache.axis.SimpleChain.invoke(SimpleChain.java:83)\n\tat org.apache.axis.server.AxisServer.invoke(AxisServer.java:239)\n\tat org.apache.axis.transport.http.AxisServlet.doPost\n(AxisServlet.java:699)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:709)\n\tat org.apache.axis.transport.http.AxisServletBase.service\n(AxisServletBase.java:327)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter\n(ApplicationFilterChain.java:237)\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter\n(ApplicationFilterChain.java:157)\n\tat org.apache.catalina.core.StandardWrapperValve.invoke\n(StandardWrapperValve.java:214)\n\tat org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:104)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:520)\n\tat org.apache.catalina.core.StandardContextValve.invokeInternal\n(StandardContextValve.java:198)\n\tat org.apache.catalina.core.StandardContextValve.invoke\n(StandardContextValve.java:152)\n\tat org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:104)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:520)\n\tat org.apache.catalina.core.StandardHostValve.invoke\n(StandardHostValve.java:137)\n\tat org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:104)\n\tat org.apache.catalina.valves.ErrorReportValve.invoke\n(ErrorReportValve.java:118)\n\tat org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:102)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:520)\n\tat org.apache.catalina.core.StandardEngineValve.invoke\n(StandardEngineValve.java:109)\n\tat org.apache.catalina.core.StandardValveContext.invokeNext\n(StandardValveContext.java:104)\n\tat org.apache.catalina.core.StandardPipeline.invoke\n(StandardPipeline.java:520)\n\tat org.apache.catalina.core.ContainerBase.invoke\n(ContainerBase.java:929)\n\tat org.apache.coyote.tomcat5.CoyoteAdapter.service\n(CoyoteAdapter.java:160)\n\tat org.apache.coyote.http11.Http11Processor.process\n(Http11Processor.java:799)\n\tat \norg.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnecti\non(Http11Protocol.java:705)\n\tat org.apache.tomcat.util.net.TcpWorkerThread.runIt\n(PoolTcpEndpoint.java:577)\n\tat org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run\n(ThreadPool.java:683)\n\tat java.lang.Thread.run(Unknown Source)\n\n-----------\n\nX509Certificate certificate;\nKeyInfo keyInfo = signature.getKeyInfo();\nif (keyInfo != null) {\n  if (keyInfo.containsX509Data()) {\n    try {\n      certificate = keyInfo.getX509Certificate();\n    }\n    catch (KeyResolverException e) {\n      return false;\n    }\n    if (certificate == null) {\n      return false;\n    }\n  }\n}", "id": 85945, "time": "2006-02-20T11:58:43Z", "bug_id": 38605, "creation_time": "2006-02-20T11:58:43Z", "is_private": false}, {"count": 3, "tags": [], "creator": "raul-info@r-bg.com", "attachment_id": null, "id": 86234, "time": "2006-02-26T18:43:09Z", "bug_id": 38605, "creation_time": "2006-02-26T18:43:09Z", "is_private": false, "text": "Fixed in SVN head,\nThanks for pointing the problem. It was true that engineCanResolve set status for the latter engineResolveX methods, and after making Resolvers singleton-like for all threads a race condition can arraise. \nI have fixed it merging this two methods in one the engineResolveX.\nCan you test the changes?\nAlso I think this bug is important enought to do a 1.3.1 release.\nWhat do you think?\n"}, {"count": 4, "tags": [], "bug_id": 38605, "text": "I have tested the bugfix and the code behaves correctly now.\nYes, this bug is surely worth of new release. The 1.3.0 code of the \nX509CertificateResolver is not thread safe and therefore it cannot be trusted \nin multithreaded applications.\n\nThanks for the fix.", "id": 86243, "time": "2006-02-27T10:10:19Z", "creator": "peterbacik@inmail.sk", "creation_time": "2006-02-27T10:10:19Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 38605, "attachment_id": null, "id": 91973, "time": "2006-08-06T17:52:54Z", "creator": "raul-info@r-bg.com", "creation_time": "2006-08-06T17:52:54Z", "is_private": false, "text": "Closing old bugs."}]