[{"count": 0, "tags": [], "creator": "tapas.adhikary@gmail.com", "is_private": false, "text": "Hi,\n   I am using Tomcat 5.0.0 to deploy my web application.As soon as I run tomcat\n, it start memory consumption and after I login to my application the memory\nusage increases.I have taken care of the Threads using in my application so that\nonce logout from the application,they will not be in alive state to hold the\nmemory unnecessarily.But After logout also I found the memory consumption is not\nreduced.\nthe scenario was like this,\nEvent                                   %Mem        %CPU\n-------------                          -------     -------\nBefore login                            3.3          1   \nAfter Login                             3.4          4 \nAfter Logout                            3.4          3\nLogin Again                             3.6          4\nNavigating to Browse View               4.2          7          \nAfter Logout                            4.2          2\n\nBut when I deployed my application in Tomcat 6.1.4 I found a better performance\nthan earlier,like,\nEvent                                   %Mem        %CPU\n------------                            ----        ----\nBefore login                            3.3          1   \nAfter Login                             3.4          4 \nAfter Logout                            3.3          1 (0 after few seconds).\nLogin Back                              3.4          4\nBrowse View                             4.6          12\nConfigure View                          5.2          24\nlogout                                  4.2          2 (0 after few seconds)\nlogin in                                4.4          4\nlogout                                  4.2          1\nlogin                                   4.3          3\nlogout                                  4.2          1\nlogin                                   4.4          3\nlogout                                  4.4          1 (Here Memory didn't    \ndecrease,reason is unknown to me)     \nlogin                                   4.6          5\nlogout                                  4.5          1 (decreased again)\n\nI have some doubt to ask along with this.In Tomcat 5.0.0 , server.xml contains a\nentry for connector where we can specify the number of connector Threads to be\nexecuted by Tomcat.For my case the number is 25.As soon as I run tomcat 25\nThreads start running and I got a trace of those as,\nThread [http-28080-Processor1](Running)  where 28080 is the port number\nThread [http-28080-Processor2](Running)  Tomcat is using. \n.\n.\nThread [http-28080-Processor25](Running)\nWhen I am login to my application(Sending my request to Tomcat), one thread(say,\nThread [http-28080-Processor24]) created by connector, start processing the\nrequest and occupied memory increased along with the used CPU cycles. In case\nof logout again the thread become active, process the request and application\nlogged out. Here no decrement of the memory usage and a small decrement of the\nused CPU cycle .Now if I suspend(not terminate) the thread which processed the\nlast request,occupied memory is getting released. In this whole process, I ran\njConsole utility which has a mechanism to make the object applicable for garbage\ncollection if they are not in use. I used the mechanism but occupied memory\nnever get released till I suspend the connector thread explicitly(Neither\nterminating the thread nor terminating/restarting the Tomcat).Otherwise memory\nusage is just keep increasing.\nI am surprise to see Tomcat 6.1.4 is managing the memory is effective than the\nearlier version.\n\n-Tapas", "id": 112850, "time": "2008-01-14T21:32:47Z", "bug_id": 44237, "creation_time": "2008-01-14T21:32:47Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "markt@apache.org", "is_private": false, "text": "It is hardly surprising that 6.0.14 has fixed a few memory related bugs compared\nto 5.0.0. You'd find the same thing if you compared 5.5.25 and 5.0.0\n\nUnless you have a proven memory leak in the most recent stable release of 5.5.25\nor 6.0.14 that has not since been fixed in svn, please do not re-open this report.", "id": 112887, "time": "2008-01-15T12:20:11Z", "bug_id": 44237, "creation_time": "2008-01-15T12:20:11Z", "attachment_id": null}]