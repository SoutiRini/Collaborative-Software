[{"count": 0, "tags": [], "creator": "dsb@smart.net", "is_private": false, "text": "In whichever XSLT process is Ant's default XSLT processor when running\non JDK 1.6, the predicate on a step is ignored if the step has an axis \nof \"self\" and has a NodeTest that is a NameTest that is a QName.\n\nSee the attached Ant build file, XSLT transform, and XML input file.\n\n\n\nVersions:\n\n  $ ant -version\n  Apache Ant version 1.7.1 compiled on June 27 2008\n  $ java -version\n  java version \"1.6.0_10\"\n  Java(TM) SE Runtime Environment (build 1.6.0_10-b33)\n  Java HotSpot(TM) Client VM (build 11.0-b15, mixed mode, sharing)\n\nAnt installation is not customized.\n\n\n\n(Yes, this is not directly an Ant bug, but this needs someone who\nknows what Ant's default XSLT processor is report the bug upstream\nor tell me enough so I can.)", "id": 124400, "time": "2009-01-27T09:22:13Z", "bug_id": 46612, "creation_time": "2009-01-27T09:22:13Z", "attachment_id": null}, {"attachment_id": 23183, "tags": [], "creator": "dsb@smart.net", "is_private": false, "count": 1, "id": 124401, "time": "2009-01-27T09:25:41Z", "bug_id": 46612, "creation_time": "2009-01-27T09:25:41Z", "text": "Created attachment 23183\nXSLT transform exhibiting buggy behavior"}, {"count": 2, "tags": [], "bug_id": 46612, "is_private": false, "text": "I can't attach the remaining two attachments (a simple Ant build file invoking\nthe XSLT task to run the transform, and a simple XML file for input to the\ntransform (containing simply \"<root/>\")).\n\nBugzilla is reporting:\n\n   The content type text/xml is invalid. Valid types must be of the form \n   foo/bar where foo  is either application, audio, image, message, model, \n   multipart, text, or video.\n\nwhen I try upload files to create additionl attachments.\n", "id": 124402, "time": "2009-01-27T09:32:09Z", "creator": "dsb@smart.net", "creation_time": "2009-01-27T09:32:09Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 46612, "text": "Ant uses the XSLT processor of the JDK or whatever you specify via the endorsed standards mechanism (or the task's factory configuration) - it doesn't dictate any one of them,\n\nIn any case it is a bug in the processor, not in Ant, and there is nothing we could do.", "id": 124414, "time": "2009-01-27T20:51:32Z", "creator": "bodewig@apache.org", "creation_time": "2009-01-27T20:51:32Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 46612, "attachment_id": null, "text": "(In reply to comment #3)\n> Ant uses the XSLT processor of the JDK or whatever you specify via the endorsed\n> standards mechanism (or the task's factory configuration) - ...\n> \n> In any case it is a bug in the processor, not in Ant, \n\nYes, I know.  Did you read the last paragraph of my report?\n\n\n> and there is nothing we could do.\n\nYou could tell me what Ant does:\n\n- mainly, what \"the task's factory configuration\" does.  (Does it do \n  nothing special and probably therefore cause use of the JDK's default \n  XSLT processor, or does it possibly so something else?), and\n\n- whether Ant does anything different than calling the JDk's \n  normal/default API methods for transforming, and, if so, what Ant does.\n\nAnd even though it's not part of Ant, since you (or someone reading this)\nlikely know better than I do, what is the default XSLT transformer for\nJDK 1.6(.11) (so in case Sun is going to also say \"it's not our bug, see\nxyz\", I can jump directly to xyz to report the problem)?  Is it Xalan,\nor something else?  Which version?\n\n\n(I'm trying to get enough information to be able to reproduce the\nbug outside of Ant without spending as much time as I did beating \nagainst the bug in the first place.)\n\n\n\nHey, you changed the status to RESOLVED INVALID before the upstream bug \nin Ant's _default_ XSLT transformer for the _core_ XSLT task was fixed.  \n\nIf the bug were a non-default transformer, I'd agree, but this isn't\nsome optional task or a custom configuration. \n\nWhy not track upstream bugs that affect Ant to make sure they get fixed\n(e.g., the way Debian GNU/Linux tracks such bugs, tracking the bug in \nthe Debian bug system (marked as reported upstream, not for the Debian \nmaintainer to actually fix but just to monitor for a fix from upstream)\nuntil the bug is fixed by the upstream maintainer?  (Wouldn't you\ntrack in and report it upstream if the bug were in the default XML \nprocessor used for reading build.xml files?)\n\n\n", "id": 124439, "time": "2009-01-28T07:44:47Z", "creator": "dsb@smart.net", "creation_time": "2009-01-28T07:44:47Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 46612, "is_private": false, "text": "Sorry if I sounded too harsh.\n\nIf you run \"ant -diagnostics\" it may help you - hmm, I just now realize it only talks about the XML parser but not the XSLT processor, reopening because of that.\n\nThe XSLT task allows you to configure the factory, that's why I talked about it.  Yes, the default is to go with whatever the system provides.\n\nWhat the system provides depends on your vendor.  Sun has decided to ship a (pretty old and buggy) version of XSLTC, a variant of Apache Xalan-J that doesn't seem to become Xalan's main line anytime as their processor with Java5 and I think they still do with Java6.  I may be wrong, though.\n\nPoint 13 in http://java.sun.com/j2se/1.5.0/compatibility.html is the best hint I can give.  See also point 9 of that list.\n\nI happen to be involved with XMLUnit as well and we've gotten lots of problem reports because of Java5's XSLT processor.  I've come to the conclusion to recommend the endorsed standards mechanism and the latest release of Xalan or Saxon to anybody doing XSLT since the default in Sun classlibs is seriously broken (and you've just hit one symptom).\n\nI've resolved it as INVALID because it is not an Ant bug.  We (the Ant community) don't think of the JDK as our upstream and even if we did, since we don't bundle a JDK and have different release cycles this would be impossible to track.\n\nThe problem you see likely doesn't affect people using Apple's JVM on a Mac, IBM's on anything, OpenJDK 6 or Apache Harmony, for example (they will see different bugs).\n\nIMHO there is a difference between a distribution that bundles packages and a single package that happens to depend on another package which may be provided by several different \"vendors\".\n\nAnd no, we wouldn't track an issue in Xerces (which happens to be the default parser for most JDKs - in different versions, of course) here either.", "id": 124440, "time": "2009-01-28T08:43:52Z", "creator": "bodewig@apache.org", "creation_time": "2009-01-28T08:43:52Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "ant -diagnostics will now (svn revision 738872 ) emit something like\n\n-------------------------------------------\n XSLT Processor information\n-------------------------------------------\nXSLT Processor : org.apache.xalan.transformer.TransformerIdentityImpl\nXSLT Processor Location: SOME-PATH\\xalan-2.7.1.jar\n\nor \n\n-------------------------------------------\n XSLT Processor information\n-------------------------------------------\nXSLT Processor : com.sun.org.apache.xalan.internal.xsltc.trax.TransformerImpl\nXSLT Processor Location: SOME-OTHER-PATH\\jre\\lib\\rt.jar\n\nthe later is the default on the JDK 1.6 installation of my windows work machine.\n\nNot sure whether it helps tracking down the problem.  In your case I really\nrecommend downloading Xalan-J 2.7.1 and configuring Ant to use it.\n\nUnfortunately there is no (even remotely) portable way to determine the version.\n", "id": 124470, "time": "2009-01-29T07:00:06Z", "bug_id": 46612, "creation_time": "2009-01-29T07:00:06Z", "is_private": false}]