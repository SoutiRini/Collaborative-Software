[{"count": 0, "attachment_id": null, "bug_id": 31792, "is_private": false, "id": 65337, "time": "2004-10-20T02:04:09Z", "creator": "andrew.r.bredhauer@transport.qld.gov.au", "creation_time": "2004-10-20T02:04:09Z", "tags": [], "text": "We use JMeter to stress test our new web based applications. In doing this we \nwant to test every component of the application infrastructure including the \nnetwork load balancers that we use. Currently it would appear the JMeter opens \na single http connection and will then reuse it indefinitely. This behaviour \ncauses us problems in our load balancing tests as the load balancer has no \nopportunity to switch load when presented with a persistent connection. A much \nbetter method in our situation would be for JMeter to create a new connection \nfor each request (I realise there will be some client overhead here) and give \nthe load balancer the opportunity to manage the traffic.\nIs this observation correct and if so is there a way that this functionality \ncould be disabled to better reflect a real user of the application?\nIf necessary I could test this provided someone can point me to the required \nclass(s)\n\nThanks\n\nAndrew"}, {"count": 1, "tags": [], "creator": "woolfel@yahoo.com", "is_private": false, "text": "I'm not sure I understand the problem. Unless you check \"keep alive\" jmeter\nshould create a new connection for each request for a resource be it a html\npage, graphic or javascript.", "id": 65340, "time": "2004-10-20T03:57:07Z", "bug_id": 31792, "creation_time": "2004-10-20T03:57:07Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Thats what I would have thought also but thats not the case. None of our \nconnections have keep-alive enabled. One added complication that may make a \ndifference is that our environment uses SSL. ", "is_private": false, "id": 65341, "creator": "andrew.r.bredhauer@transport.qld.gov.au", "time": "2004-10-20T05:06:36Z", "bug_id": 31792, "creation_time": "2004-10-20T05:06:36Z", "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 31792, "text": "which version of the HttpSampler are you using?  the second version using\njakarta httpclient supports keep alive correctly. the old httpsampler uses the\nstock URLConnection shipped with the JVM. it has never supported keep alive\ncorrectly, so with that one, it's actually not possible.\n\nmore likely than not, the load balancer may not be configured correctly. I've\nused both Cisco local director and software based solutions like Resonate. I\nwould double check the load balance settings to make sure they are correct.\n\nany additional information you can provide would help diagnose the problem.", "id": 65342, "time": "2004-10-20T05:18:33Z", "creator": "woolfel@yahoo.com", "creation_time": "2004-10-20T05:18:33Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "text": "We're not using the httpclient version of the sampler. We've had this same \nbehaviour since first using JMeter back with version 1.8.1. \nI'd (and so would our networks guys) argue that the load balancers are \nconfigured correctly as production traffic is balanced correctly. \nThe load balancers are configured to stick a client to a server based on the \nSSL session id. As I mentioend in an earlier post our environment uses ssl and \nthis method ensures that a user will not move servers during an application \nsession. When we use JMeter to try and replicate this bahviour each thread \ngoes to the same server and will stick to the same server even across test \nruns (stopping the test and restarting it). The only way we can get load \nbalaced across all servers is to start multiple clients. Alternativley we can \nexit JMeter and restart it and the threads will then go to the next server.", "is_private": false, "id": 65400, "creator": "andrew.r.bredhauer@transport.qld.gov.au", "time": "2004-10-21T00:05:54Z", "bug_id": 31792, "creation_time": "2004-10-21T00:05:54Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "ok, I think I have a better understanding. The problem  you're having is because\nJMeter uses the auth manager to set the cookies for all the threads within a\nthread group. Have you tried setting up the test plan this way:\n\nthread group 1\n  - auth manager\n  - sampler\nthread group 2\n  - auth manager\n  - sampler\n\nIf you had your test plan this way, it would result in all threads hitting the\nsame server, because they all have the same session id\n\nauth manager\nthread group 1\n  - sampler\n\nIf that works for you, I will close the bug.", "is_private": false, "id": 65401, "creator": "woolfel@yahoo.com", "time": "2004-10-21T00:20:05Z", "bug_id": 31792, "creation_time": "2004-10-21T00:20:05Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "andrew.r.bredhauer@transport.qld.gov.au", "text": "I don't think my post was clear enough. Our test plans usually have the \nstructure of\nThread Group\n   - Sampler1\n   - Sampler2\n   - ...\n   - SamplerN\n   - HTTP request defaults\n\nAuthorisation in this case is achieved through client certs so there is no \nneed for an auth manager and each sampler represents a single standalone \ntransaction so there is no session shared between samplers. \nWhen this test executes each thread appears to get the same connection to the \nserver and each sampler sends its data using that connection. \nAn ideal solution for us would be that every sampler gets a unique connection.\n\nI may have confused you before when I said the load balancers stick a client \nto a server based on SSL session id. This id is not the same as the session id \ngenerated by the web server but one used at a lower layer of the network stack \nwhen an SSl session is created between the client and server.See \nhttp://java.sun.com/j2se/1.4.2/docs/api/javax/net/ssl/SSLSession.html for more \ndetail. We're unable to use the standard session id for client/server \nstickyness as we're using ssl and the loadbalancer can't decrypt the message \nto determine the sessionid.", "id": 65408, "time": "2004-10-21T03:35:02Z", "bug_id": 31792, "creation_time": "2004-10-21T03:35:02Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "woolfel@yahoo.com", "is_private": false, "text": "I forgot HTTPS uses secure socket layer session id. the thing is,\norg.apache.jmeter.protocol.sampler.HTTPSampler explicitly calls\nURLConnection.disconnect() at the end of the sample.  At the beginning of each\nsample, it explicitly creates a new connection using URLConnection.connect(). I\ndon't have a https server to hit locally, so it's going to be hard to diagnose.\n\nthere's a note in the finally block of HTTPSampler. here is what it says\n\"calling disconnect doesn't close the connection immediately, but indicates\nwe're through with it. The JVM should close it when necessary\".\n\nif I get time to setup tomcat with ssl, I'll try to diagnose the problem. At\nthis point, I'm inclined to say it is a bug in JVM and not in jmeter. Can you\ntry the new sampler, which uses HttpClient. I believe jakarta HttpClient handles\nkeepalive and disconnect better than the stock URLConnection/HttpURLConnection.\n\nI hope that helps.\n\npeter", "id": 65410, "time": "2004-10-21T04:01:47Z", "bug_id": 31792, "creation_time": "2004-10-21T04:01:47Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "sebb@apache.org", "text": "There is no control over session re-use in the Java http(s) implementation, so \nthe problem cannot be fixed for the default HTTP Sampler.\n\nAFAIK, the problem has been fixed in the HttpClient version of the Http \nSampler.\n\nIf not, please re-open with details.", "id": 104981, "time": "2007-07-02T03:29:41Z", "bug_id": 31792, "creation_time": "2007-07-02T03:29:41Z", "is_private": false, "attachment_id": null}]