[{"count": 0, "tags": [], "text": "In my browser I have a cookie with the following name and value\n\nname  : _mkto_trk\nvalue : id:096-SLE-656&token:_mch-localhost-1304194663326-22461\n\nWhen i try the read this cookie via (HttpServletRequest.getCookies() i will find the cookie but it's value will be id instead of id:096-SLE-656&token:_mch-localhost-1304194663326-22461\n\nthis is incorrect\n\nThis issue seems to have been previously raised on the tomcat-user mailing list\n\nhttp://old.nabble.com/Issue-reading-a-cookie-having-a-colon-in-the-value-.-Is-this-a-bug-in-Tomcat-6.0.32---td30876300.html\n\nWhere tomcat committer Christopher Schultz blamed the issue on broken user agents citing portions of the rfc2965 spec. While that is in fact true, no major browser besides opera ever implemented RFC 2965 (see also the discussion at https://bugzilla.mozilla.org/show_bug.cgi?id=610218#c11)\n\nThe following draft most accurately descibes the current status quo\n\nhttp://tools.ietf.org/html/draft-ietf-httpstate-cookie-23", "is_private": false, "bug_id": 51138, "id": 146050, "time": "2011-04-30T21:58:59Z", "creator": "jelmer@jteam.nl", "creation_time": "2011-04-30T21:58:59Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 51138, "attachment_id": null, "id": 146052, "time": "2011-05-01T09:39:54Z", "creator": "markt@apache.org", "creation_time": "2011-05-01T09:39:54Z", "is_private": false, "text": "Colon's in cookie values are invalid as per rfc2109, rfc2068, rfc2965, rfc2616 and the Servlet specification.\n\nA superficial reading of the v0 cookie specification suggests colons would be allowed, however colons are not permitted since that would be a breach of rfc2068 / rfc2616.\n\nIf http://tools.ietf.org/html/draft-ietf-httpstate-cookie-23 was approved and referenced by a future version of the Servlet specification the colon character would still be invalid in unquoted cookie values.\n\n*** This bug has been marked as a duplicate of bug 48409 ***"}, {"count": 2, "tags": [], "text": "Created attachment 26946\ntestcase", "attachment_id": 26946, "id": 146054, "creator": "jelmer@jteam.nl", "time": "2011-05-01T10:10:26Z", "bug_id": 51138, "creation_time": "2011-05-01T10:10:26Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 51138, "attachment_id": null, "is_private": false, "id": 146055, "time": "2011-05-01T10:58:58Z", "creator": "jelmer@jteam.nl", "creation_time": "2011-05-01T10:58:58Z", "text": "Mark, Actually the document I referenced is no longer a draft. It's now an RFC\n\nhttp://www.rfc-editor.org/rfc/rfc6265.txt \n\nand obsoletes RFC2965 which obsoletes RFC2109 which obsoletes \"version 0\"\n\nYou mention that if this spec was approved it would still be invalid to use a colon in an unquoted value. Could you point out the section in that spec that explains this? \nI've been going over it but cannot seem to find it\nIn rfc2965 a reference is made to the token field from the http spec but in which delimiter fields are explicitly disallowed by rfc6265 uses a cookie-octet field\n\nDo you believe that supporting rfc6265 means not conforming to the servlet specification ? I've been looking into it and it seems to only mention RFC2109 and \"version 0\" as two possible ways to format cookies send to the client.\nI don't believe it mentions how cookies sent by the client should be interpreted"}, {"count": 4, "tags": [], "bug_id": 51138, "attachment_id": null, "is_private": false, "id": 146058, "time": "2011-05-01T18:08:02Z", "creator": "markt@apache.org", "creation_time": "2011-05-01T18:08:02Z", "text": "The valid forms for HTTP headers are described in rfc2616. Unquoted colons are not permitted. Regardless of what rfc6265 may say, it is still defining HTTP headers and therefore must conform to the HTTP spec."}, {"count": 5, "tags": [], "bug_id": 51138, "attachment_id": null, "is_private": false, "id": 146062, "time": "2011-05-02T14:58:12Z", "creator": "jelmer@jteam.nl", "creation_time": "2011-05-02T14:58:12Z", "text": "Fine but then why is an Authorization header with a base64 encoded username and password allowed in tomcat.\nBase64 strings end with ==, and = is also a separator character per rfc2616"}, {"count": 6, "tags": [], "bug_id": 51138, "attachment_id": null, "id": 146063, "time": "2011-05-02T16:10:51Z", "creator": "markt@apache.org", "creation_time": "2011-05-02T16:10:51Z", "is_private": false, "text": "That is a fair point. A similar argument can be made around the use of \":\" etc. in date headers although those are single value headers so parsing them is simpler and separators won't cause complications like they can in cookie headers.\n\nrfc6265 is still a draft, but then again so is rfc2616. What really matters with these specifications - and particularly the cookie specs given the minimal adoption of rfc2965 and the selective implementation of rfc2109 - is adoption.\n\nThe Servlet 3 spec doesn't even mention rfc2965 (not necessarily a bad thing). If you want the Servlet spec to support rfc6265 then you'll need to lobby the Servlet Expert Group.\n\nI wouldn't be against supporting rfc6265 but there are several issues of concern:\n- I would want to look hard at the various security issues that lead to Tomcat tightening up compliance with the cookie specifications to assure myself that implementing rfc6265 was secure\n- browser (specifically IE) interoperability with rfc6265\n- backwards compatibility with applications that expect rfc2109 compliant cookie headers\n\nRegardless of all of the above, the Tomcat 7 implementation based on rfc2109 as per the Servlet 3.0 specification is not going to change."}, {"count": 7, "tags": [], "creator": "jelmer@jteam.nl", "attachment_id": null, "id": 146071, "time": "2011-05-02T21:32:56Z", "bug_id": 51138, "creation_time": "2011-05-02T21:32:56Z", "is_private": false, "text": "Mark, maybe you should read up on the spec, It was actually written to bring the standard in-line with actual practices. So in that sense it has 100% adoption.\n\nAs far as I can tell the servlet spec does not specify how to interpret cookies sent by the client. it only specifies in which format the cookies can be sent to the client. And in fact it is not based on rfc2109, it recommends using the netscape spec because \"RFC 2109 is still somewhat new, consider version 1 as experimental; do not use it yet on production sites.\" \n\nSo I dont see how resolving this bug would break compatibility with the servlet spec. \n\nSo yes it breaks compatibility with rfc2616, but since you are already not compatible with it for good reasons.  I do not see  why this is a big deal. \n\nDisallowing = in the Authentication header would break basic authentication in most if not all browsers\n\nDisallowing colons, pipes etc  in cookie values breaks cookie handeling for lots of  cookies in most of not all browsers\n\nTo me its the exact same thing"}]