[{"count": 0, "tags": [], "text": "The SXSSF temp  xml file is grows to a very large size. e.g. for a 20 MB \ncsv data the size of the temp xml file become few GB large. In order to \nreduce this I have created a path and tested it. \n\nRequest for the review and application of the same to the. \nI have changed the extension of the temp file from xml to gz, which is \nanother cleanliness factor\n\n\n\n>From 3e95b1880a04657ec93e5626720b1d40b5487ee4 Mon Sep 17 00:00:00 2001\nFrom: Santosh <santosh.kharolkar@tcs.com>\nDate: Tue, 4 Oct 2011 12:11:23 +0530\nSubject: [PATCH] Compress the temporary xml file\n\n---\n .../org/apache/poi/xssf/streaming/SXSSFSheet.java  |    9 ++++++---\n 1 files changed, 6 insertions(+), 3 deletions(-)\n\ndiff --git a/src/ooxml/java/org/apache/poi/xssf/streaming/SXSSFSheet.java \nb/src/ooxml/java/org/apache/poi/xssf/streaming/SXSSFSheet.java\nindex 8c1b998..567c9e8 100644\n--- a/src/ooxml/java/org/apache/poi/xssf/streaming/SXSSFSheet.java\n+++ b/src/ooxml/java/org/apache/poi/xssf/streaming/SXSSFSheet.java\n@@ -22,6 +22,8 @@ import java.util.Iterator;\n import java.util.TreeMap;\n import java.util.Map;\n \n+import java.util.zip.GZIPOutputStream;\n+import java.util.zip.GZIPInputStream;\n import org.apache.poi.ss.usermodel.*;\n import org.apache.poi.ss.util.CellReference;\n \n@@ -1284,9 +1286,9 @@ public class SXSSFSheet implements Sheet, Cloneable\n \n         public SheetDataWriter() throws IOException \n         {\n-            _fd = File.createTempFile(\"poi-sxxsf-sheet\", \".xml\");\n+            _fd = File.createTempFile(\"poi-sxxsf-sheet-xml\", \".gz\");\n             _fd.deleteOnExit();\n-            _out = new BufferedWriter(new FileWriter(_fd));\n+            _out = new OutputStreamWriter(new GZIPOutputStream (new \nFileOutputStream(_fd)));\n         }\n         public int getNumberOfFlushedRows()\n         {\n@@ -1308,7 +1310,8 @@ public class SXSSFSheet implements Sheet, Cloneable\n         {\n             _out.flush();\n             _out.close();\n-            return new FileInputStream(_fd);\n+\n+            return new GZIPInputStream ( new FileInputStream(_fd));\n         }\n \n         /**\n-- \n1.7.6.msysgit.0", "attachment_id": null, "id": 150182, "creator": "santosh.kharolkar@tcs.com", "time": "2011-10-05T14:35:13Z", "bug_id": 51961, "creation_time": "2011-10-05T14:35:13Z", "is_private": false}, {"count": 1, "tags": [], "creator": "santosh.kharolkar@tcs.com", "attachment_id": null, "text": "Update the file name\n\n>From 3e95b1880a04657ec93e5626720b1d40b5487ee4 Mon Sep 17 00:00:00 2001\nFrom: Santosh <santosh.kharolkar@tcs.com>\nDate: Tue, 4 Oct 2011 12:11:23 +0530\nSubject: [PATCH] Compress the temporary xml file\n\n---\n .../org/apache/poi/xssf/streaming/SXSSFSheet.java  |    9 ++++++---\n 1 files changed, 6 insertions(+), 3 deletions(-)\n\ndiff --git a/src/ooxml/java/org/apache/poi/xssf/streaming/SXSSFSheet.java \nb/src/ooxml/java/org/apache/poi/xssf/streaming/SXSSFSheet.java\nindex 8c1b998..567c9e8 100644\n--- a/src/ooxml/java/org/apache/poi/xssf/streaming/SXSSFSheet.java\n+++ b/src/ooxml/java/org/apache/poi/xssf/streaming/SXSSFSheet.java\n@@ -22,6 +22,8 @@ import java.util.Iterator;\n import java.util.TreeMap;\n import java.util.Map;\n\n+import java.util.zip.GZIPOutputStream;\n+import java.util.zip.GZIPInputStream;\n import org.apache.poi.ss.usermodel.*;\n import org.apache.poi.ss.util.CellReference;\n\n@@ -1284,9 +1286,9 @@ public class SXSSFSheet implements Sheet, Cloneable\n\n         public SheetDataWriter() throws IOException \n         {\n-            _fd = File.createTempFile(\"poi-sxxsf-sheet\", \".xml\");\n+            _fd = File.createTempFile(\"poi-sxssf-sheet-xml\", \".gz\");\n             _fd.deleteOnExit();\n-            _out = new BufferedWriter(new FileWriter(_fd));\n+            _out = new OutputStreamWriter(new GZIPOutputStream (new \nFileOutputStream(_fd)));\n         }\n         public int getNumberOfFlushedRows()\n         {\n@@ -1308,7 +1310,8 @@ public class SXSSFSheet implements Sheet, Cloneable\n         {\n             _out.flush();\n             _out.close();\n-            return new FileInputStream(_fd);\n+\n+            return new GZIPInputStream ( new FileInputStream(_fd));\n         }\n\n         /**\n-- \n1.7.6.msysgit.0", "id": 151319, "time": "2011-11-09T11:54:05Z", "bug_id": 51961, "creation_time": "2011-11-09T11:54:05Z", "is_private": false}, {"count": 2, "tags": [], "creator": "santosh.kharolkar@tcs.com", "attachment_id": null, "is_private": false, "id": 151972, "time": "2011-12-05T10:11:38Z", "bug_id": 51961, "creation_time": "2011-12-05T10:11:38Z", "text": "Request you to pls add this patch for next beta5 release. It saves me to not keep patching the releases."}, {"count": 3, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "is_private": false, "id": 151973, "time": "2011-12-05T10:39:40Z", "bug_id": 51961, "creation_time": "2011-12-05T10:39:40Z", "text": "It was discussed on the mailing list that compression of the temp files should be optional. I'd rather not apply your patch in its current form.\n\nYegor"}, {"count": 4, "tags": [], "creator": "santosh.kharolkar@tcs.com", "attachment_id": null, "is_private": false, "id": 151974, "time": "2011-12-05T11:27:41Z", "bug_id": 51961, "creation_time": "2011-12-05T11:27:41Z", "text": "If you drop a hint on how to add the option for it, I will rework the patch. Should it be a flag in the sxssfworkbook/sheet class? What is your preferred way to set options?"}, {"count": 5, "attachment_id": null, "bug_id": 51961, "text": "IMO the best would be to define a method to pass a custom instance of SheetDataWriter :\n\nSXSSFWorkbook#setSheetDataWriter (SheetDataWriter  writer) \n\nIn your case you would pass a GZSheetDataWriter that supports compression of the temp files. \n\nDoes it make sense to you? \n\nYegor\n\n(In reply to comment #4)\n> If you drop a hint on how to add the option for it, I will rework the patch.\n> Should it be a flag in the sxssfworkbook/sheet class? What is your preferred\n> way to set options?", "id": 151975, "time": "2011-12-05T11:42:17Z", "creator": "yegor@dinom.ru", "creation_time": "2011-12-05T11:42:17Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 51961, "text": "Created attachment 28031\nFirst cut implementation for data store writer class", "id": 152000, "time": "2011-12-06T11:46:20Z", "creator": "santosh.kharolkar@tcs.com", "creation_time": "2011-12-06T11:46:20Z", "is_private": false, "attachment_id": 28031}, {"count": 7, "tags": [], "creator": "santosh.kharolkar@tcs.com", "is_private": false, "text": "I have the first cut implementation ready. But setting the writer in the workbook class is difficult. Since we need multiple instances of this writer in constructor of workbook. (one per sheet)\n\nCan I suggest the polocy to be set in the Sheet class as static or some other way.\n\nI am attaching the first cut implementation to this", "id": 152001, "time": "2011-12-06T11:47:04Z", "bug_id": 51961, "creation_time": "2011-12-06T11:47:04Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 51961, "attachment_id": null, "id": 152095, "time": "2011-12-09T11:21:17Z", "creator": "yegor@dinom.ru", "creation_time": "2011-12-09T11:21:17Z", "is_private": false, "text": "Committed in r1212330\n\nSantosh,\n\nWhen I suggested passing a subclass of SheetDataWriter I didn't realize the complications. Since each sheet uses its own instance of SheetDataWriter you pass the class name instead of an instance and this is not good in my opinion. \n\nI re-worked the patch and used your original idea: pass a flag to SXSSFWorkbook.\nIn current implementation the gzip compression is turned on as follows:\n\n        SXSSFWorkbook wb = new SXSSFWorkbook();\n        wb.setCompressTempFiles(true); // temp files will be gzipped\n\nI think it is much more user-friendly than passing a class name in the constructor. Sorry that my previous suggestion mislead you. \n\nIn any case, thank you for the patch. You've written 90% of it and I just put it in a slightly different shape. \n\n\nRegards,\nYegor"}, {"count": 9, "tags": [], "bug_id": 51961, "attachment_id": null, "id": 152096, "time": "2011-12-09T11:50:57Z", "creator": "santosh.kharolkar@tcs.com", "creation_time": "2011-12-09T11:50:57Z", "is_private": false, "text": "Thank you., \n\nThough we will need another way to pass this flag as well in next patch I will work that out. In the use case where the wb is created from pre-existing wb. We can track that separately. Another easy solution would be to make the flag a class level static flag. Which can solve all the cases required."}, {"count": 10, "tags": [], "text": "Created attachment 28066\nAdd another constructor to be able to set the compression flag during loading of existing workbook\n\nAdd another constructor to be able to set the compression flag during loading of existing workbook", "attachment_id": 28066, "id": 152125, "creator": "santosh.kharolkar@tcs.com", "time": "2011-12-12T10:53:52Z", "bug_id": 51961, "creation_time": "2011-12-12T10:53:52Z", "is_private": false}, {"count": 11, "tags": [], "creator": "santosh.kharolkar@tcs.com", "is_private": false, "text": "A small patch attached to complete the action checked in by yegor. \n\nAdd another constructor to be able to set the compression flag during loading\nof existing workbook", "id": 152208, "time": "2011-12-16T05:53:13Z", "bug_id": 51961, "creation_time": "2011-12-16T05:53:13Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 51961, "text": "Applied in r1215080\n\nYegor\n\n(In reply to comment #11)\n> A small patch attached to complete the action checked in by yegor. \n> \n> Add another constructor to be able to set the compression flag during loading\n> of existing workbook", "id": 152210, "time": "2011-12-16T10:12:08Z", "creator": "yegor@dinom.ru", "creation_time": "2011-12-16T10:12:08Z", "is_private": false, "attachment_id": null}]