[{"count": 0, "attachment_id": null, "bug_id": 55860, "text": "This bug looks similar to https://issues.apache.org/bugzilla/show_bug.cgi?id=55789\nand while this looks to be a build bug on Solaris I will test and verify that we\nhave the same problem on RHEL also.  For now this bug is on Solaris 10 certainly. \n\nBetween apr version 1.4.8 and 1.5.0 there was a new test added in the tests/Makefile\ncalled testescape.lo however this problem may have also existed in 1.4.8 release. \nLet's just focus on the new release which is needed for httpd 2.4.7 to compile.\n\nRegardless the source ./test/testescape.c makes two calls to apr_pescape_shell()\nat lines 39 and 54 thus : \n\n    dest = apr_pescape_shell(pool, src);\n\nHowever the function apr_pescape_shell() is not defined in any headers that the \nbuild/test process can locate and therefore : \n\nnode002$ ./testall -v \ntestatomic          : SUCCESS\ntestdir             : SUCCESS\ntestdso             : SUCCESS\ntestdup             : SUCCESS\ntestenv             : SUCCESS\ntestescape          : -ld.so.1: testall: fatal: relocation error: file testall: symbol apr_pescape_shell: referenced symbol not found\nKilled\n\nWe can clearly see the function in the header :\n\nnode002$ grep \"apr_pescape_shell\" ./include/apr_escape.h\nAPR_DECLARE(const char *) apr_pescape_shell(apr_pool_t *p, const char *str)\n\nHowever that is of little help if the compiler can not locate it. \n\nThe required header simply does not exist in /usr/local/include/apr-1 because \nwe have not done a \"gmake install\" yet because the testsuite fails.  However \nit seems as if the build process and the test harness are looking for the \nrequired headers in the installation target $PREFIX/include/apr-1.\n\nTo test and prove my theory I will run \"gmake install\" *before* the testsuite\nruns correctly and then re-run the \"testall -v\" thus : \n\nnode002$ \nnode002$ gmake install \ngmake[1]: Entering directory `/usr/local/build/apr-1.5.0_SunOS5.10_sparcv9.001'\ngmake[1]: Nothing to be done for `local-all'.\ngmake[1]: Leaving directory `/usr/local/build/apr-1.5.0_SunOS5.10_sparcv9.001'\n/usr/local/build/apr-1.5.0_SunOS5.10_sparcv9.001/build/mkdir.sh /usr/local/lib /usr/local/bin /usr/local/build-1 \\\n             /usr/local/lib/pkgconfig /usr/local/include/apr-1\nbuild/install.sh -c -m 644 /usr/local/build/apr-1.5.0_SunOS5.10_sparcv9.001/include/apr.h /usr/local/include/apr-1\nfor f in /usr/local/build/apr-1.5.0_SunOS5.10_sparcv9.001/include/apr_*.h; do \\\n    build/install.sh -c -m 644 ${f} /usr/local/include/apr-1; \\\ndone\n/usr/local/bin/bash /usr/local/build/apr-1.5.0_SunOS5.10_sparcv9.001/libtool --mode=install build/install.sh -c -m 755 libapr-1.la /usr/local/lib\nlibtool: install: build/install.sh -c -m 755 .libs/libapr-1.so.0.5.0 /usr/local/lib/libapr-1.so.0.5.0\nlibtool: install: (cd /usr/local/lib && { ln -s -f libapr-1.so.0.5.0 libapr-1.so.0 || { rm -f libapr-1.so.0 && ln -s libapr-1.so.0.5.0 libapr-1.so.0; }; })\nlibtool: install: (cd /usr/local/lib && { ln -s -f libapr-1.so.0.5.0 libapr-1.so || { rm -f libapr-1.so && ln -s libapr-1.so.0.5.0 libapr-1.so; }; })\nlibtool: install: chmod +x /usr/local/lib/libapr-1.so.0.5.0\nlibtool: install: build/install.sh -c -m 755 .libs/libapr-1.lai /usr/local/lib/libapr-1.la\nlibtool: install: build/install.sh -c -m 755 .libs/libapr-1.a /usr/local/lib/libapr-1.a\nlibtool: install: chmod 644 /usr/local/lib/libapr-1.a\nlibtool: install: ranlib /usr/local/lib/libapr-1.a\nbuild/install.sh -c -m 644 apr.exp /usr/local/lib/apr.exp\nbuild/install.sh -c -m 644 apr.pc /usr/local/lib/pkgconfig/apr-1.pc\nfor f in libtool shlibtool; do \\\n    if test -f ${f}; then build/install.sh -c -m 755 ${f} /usr/local/build-1; fi; \\\ndone\nbuild/install.sh -c -m 755 /usr/local/build/apr-1.5.0_SunOS5.10_sparcv9.001/build/mkdir.sh /usr/local/build-1\nfor f in make_exports.awk make_var_export.awk; do \\\n    build/install.sh -c -m 644 /usr/local/build/apr-1.5.0_SunOS5.10_sparcv9.001/build/${f} /usr/local/build-1; \\\ndone\nbuild/install.sh -c -m 644 build/apr_rules.out /usr/local/build-1/apr_rules.mk\nbuild/install.sh -c -m 755 apr-config.out /usr/local/bin/apr-1-config\nnode002$ \n\nnode002$ cd test \nnode002$ ./testall -v \ntestatomic          : SUCCESS\ntestdir             : SUCCESS\ntestdso             : SUCCESS\ntestdup             : SUCCESS\ntestenv             : SUCCESS\ntestescape          : SUCCESS\ntestfile            : SUCCESS\ntestfilecopy        : SUCCESS\ntestfileinfo        : SUCCESS\ntestflock           : SUCCESS\ntestfmt             : SUCCESS\ntestfnmatch         : SUCCESS\ntestargs            : SUCCESS\ntesthash            : SUCCESS\ntestipsub           : SUCCESS\ntestlock            : SUCCESS\ntestcond            : SUCCESS\ntestlfs             : |Line 345: Large Files not supported                                                                         SUCCESS\ntestmmap            : SUCCESS\ntestnames           : SUCCESS\ntestoc              : SUCCESS\ntestpath            : SUCCESS\ntestpipe            : SUCCESS\ntestpoll            : SUCCESS\ntestpools           : SUCCESS\ntestproc            : SUCCESS\ntestprocmutex       : SUCCESS\ntestrand            : SUCCESS\ntestsleep           : SUCCESS\ntestshm             : SUCCESS\ntestsock            : SUCCESS\ntestsockets         : SUCCESS\ntestsockopt         : |Line 84: TCP isn't corkable                                                                                 SUCCESS\nteststr             : SUCCESS\nteststrnatcmp       : SUCCESS\ntesttable           : SUCCESS\ntesttemp            : SUCCESS\ntestthread          : SUCCESS\ntesttime            : SUCCESS\ntestud              : SUCCESS\ntestuser            : SUCCESS\ntestvsn             : SUCCESS\nAll tests passed.\n\n\nQED. \n\nTherefore the build process may have other problems that I can not see because I\nsee a test fail due to the headers being in the wrong place I must wonder what\nthings are silently happening with the wrong headers?  Tough to say. \n\nThe safe thing to do is to compile and test apr-1.5.0 *twice* like so : \n\n------- workaround process -------------\n\n1) download, check sig and then unpack the sources in a build dir\n2) run configure as per usual \n3) run make \n4) run make check and watch a test fail\n5) make install regardless of result in (4)\n6) unpack the sources into a new build dir \n7) re-run configure again as per (2)\n8) re-run the build \n9) re-run the testsuite \n\nIf I follow that sequence of steps then I know that the headers being used in\nboth the build and the test stages will be correct, regardless of their location.\n\nJust to hammer the coffin lid closed here I will follow steps 6 through 9 :\n\nAPR Lock Performance Test\n==============\n\napr_thread_mutex_t Tests\n    Initializing the apr_thread_mutex_t (UNNESTED)          OK\n    Starting 1 threads    OK\nmicroseconds: 372761 usec\napr_thread_mutex_t Tests\n    Initializing the apr_thread_mutex_t (NESTED)            OK\n    Starting 1 threads    OK\nmicroseconds: 390794 usec\napr_thread_rwlock_t Tests\n    Initializing the apr_thread_rwlock_t                    OK\n    Starting 1 threads    OK\nmicroseconds: 1000384 usec\napr_thread_mutex_t Tests\n    Initializing the apr_thread_mutex_t (UNNESTED)          OK\n    Starting 2 threads    OK\nmicroseconds: 1679167 usec\napr_thread_mutex_t Tests\n    Initializing the apr_thread_mutex_t (NESTED)            OK\n    Starting 2 threads    OK\nmicroseconds: 937599 usec\napr_thread_rwlock_t Tests\n    Initializing the apr_thread_rwlock_t                    OK\n    Starting 2 threads    OK\nmicroseconds: 35267593 usec\napr_thread_mutex_t Tests\n    Initializing the apr_thread_mutex_t (UNNESTED)          OK\n    Starting 3 threads    OK\nmicroseconds: 1213406 usec\napr_thread_mutex_t Tests\n    Initializing the apr_thread_mutex_t (NESTED)            OK\n    Starting 3 threads    OK\nmicroseconds: 3344819 usec\napr_thread_rwlock_t Tests\n    Initializing the apr_thread_rwlock_t                    OK\n    Starting 3 threads    OK\nmicroseconds: 53248783 usec\napr_thread_mutex_t Tests\n    Initializing the apr_thread_mutex_t (UNNESTED)          OK\n    Starting 4 threads    OK\nmicroseconds: 1839012 usec\napr_thread_mutex_t Tests\n    Initializing the apr_thread_mutex_t (NESTED)            OK\n    Starting 4 threads    OK\nmicroseconds: 3631924 usec\napr_thread_rwlock_t Tests\n    Initializing the apr_thread_rwlock_t                    OK\n    Starting 4 threads    OK\nmicroseconds: 66622351 usec\napr_thread_mutex_t Tests\n    Initializing the apr_thread_mutex_t (UNNESTED)          OK\n    Starting 5 threads    OK\nmicroseconds: 4923800 usec\napr_thread_mutex_t Tests\n    Initializing the apr_thread_mutex_t (NESTED)            OK\n    Starting 5 threads    OK\nmicroseconds: 5524269 usec\napr_thread_rwlock_t Tests\n    Initializing the apr_thread_rwlock_t                    OK\n    Starting 5 threads    OK\nmicroseconds: 80377977 usec\napr_thread_mutex_t Tests\n    Initializing the apr_thread_mutex_t (UNNESTED)          OK\n    Starting 6 threads    OK\nmicroseconds: 3367671 usec\napr_thread_mutex_t Tests\n    Initializing the apr_thread_mutex_t (NESTED)            OK\n    Starting 6 threads    OK\nmicroseconds: 5141609 usec\napr_thread_rwlock_t Tests\n    Initializing the apr_thread_rwlock_t                    OK\n    Starting 6 threads    OK\nmicroseconds: 99582523 usec\nTrying proc mutexes with mechanism `default'...\n  Mutex mechanism `default' is global in scope on this platform.\nTrying global mutexes with mechanism `default'...\n  no problems encountered...\nTrying proc mutexes with mechanism `sysvsem'...\n  Mutex mechanism `sysvsem' is global in scope on this platform.\nTrying global mutexes with mechanism `sysvsem'...\n  no problems encountered...\nTrying proc mutexes with mechanism `posix'...\n  Mutex mechanism `posix' is global in scope on this platform.\nTrying global mutexes with mechanism `posix'...\n  no problems encountered...\nTrying proc mutexes with mechanism `fcntl'...\n  Mutex mechanism `fcntl' is not global in scope on this platform.\nTrying global mutexes with mechanism `fcntl'...\n  no problems encountered...\nTrying proc mutexes with mechanism `proc_pthread'...\n  Mutex mechanism `proc_pthread' is global in scope on this platform.\nTrying global mutexes with mechanism `proc_pthread'...\n  no problems encountered...\ntestatomic          : SUCCESS\ntestdir             : SUCCESS\ntestdso             : SUCCESS\ntestdup             : SUCCESS\ntestenv             : SUCCESS\ntestescape          : SUCCESS\ntestfile            : SUCCESS\ntestfilecopy        : SUCCESS\ntestfileinfo        : SUCCESS\ntestflock           : SUCCESS\ntestfmt             : SUCCESS\ntestfnmatch         : SUCCESS\ntestargs            : SUCCESS\ntesthash            : SUCCESS\ntestipsub           : SUCCESS\ntestlock            : SUCCESS\ntestcond            : SUCCESS\ntestlfs             : |Line 345: Large Files not supported                                                                         SUCCESS\ntestmmap            : SUCCESS\ntestnames           : SUCCESS\ntestoc              : SUCCESS\ntestpath            : SUCCESS\ntestpipe            : SUCCESS\ntestpoll            : SUCCESS\ntestpools           : SUCCESS\ntestproc            : SUCCESS\ntestprocmutex       : SUCCESS\ntestrand            : SUCCESS\ntestsleep           : SUCCESS\ntestshm             : SUCCESS\ntestsock            : SUCCESS\ntestsockets         : SUCCESS\ntestsockopt         : |Line 84: TCP isn't corkable                                                                                 SUCCESS\nteststr             : SUCCESS\nteststrnatcmp       : SUCCESS\ntesttable           : SUCCESS\ntesttemp            : SUCCESS\ntestthread          : SUCCESS\ntesttime            : SUCCESS\ntestud              : SUCCESS\ntestuser            : SUCCESS\ntestvsn             : SUCCESS\nAll tests passed.\nCreating a test file...\nSending the file...\napr_socket_sendfile() updated offset with 0\napr_socket_sendfile() updated len with 370049\nbytes really sent: 370049\nAfter apr_socket_sendfile(), the kernel file pointer is at offset 0.\nclient: apr_socket_sendfile() worked as expected!\nWaiting for a client to connect...\nProcessing a client...\nserver: apr_socket_sendfile() worked as expected!\nCreating a test file...\nSending the file...\nCalling apr_socket_sendfile()...\nHeaders (3):\n        15 bytes (1)\n        5 bytes (E)\n        80000 bytes (^)\nFile: 200000 bytes from offset 0\nTrailers (3):\n        19 bytes\n        10 bytes\n        90000 bytes\napr_socket_sendfile()->0, sent 211092 bytes\nCalling apr_socket_sendfile()...\nHeaders (0):\nFile: 68928 bytes from offset 131072\nTrailers (3):\n        19 bytes\n        10 bytes\n        90000 bytes\napr_socket_sendfile()->11, sent 0 bytes\nCalling apr_socket_sendfile()...\nHeaders (0):\nFile: 68928 bytes from offset 131072\nTrailers (3):\n        19 bytes\n        10 bytes\n        90000 bytes\napr_socket_sendfile()->0, sent 68928 bytes\nCalling apr_socket_sendfile()...\nHeaders (0):\nFile: 0 bytes from offset 200000\nTrailers (3):\n        19 bytes\n        10 bytes\n        90000 bytes\napr_socket_sendfile()->11, sent 0 bytes\nCalling apr_socket_sendfile()...\nHeaders (0):\nFile: 0 bytes from offset 200000\nTrailers (3):\n        19 bytes\n        10 bytes\n        90000 bytes\napr_socket_sendfile()->0, sent 90029 bytes\nAfter apr_socket_sendfile(), the kernel file pointer is at offset 0.\nclient: apr_socket_sendfile() worked as expected!\nWaiting for a client to connect...\nProcessing a client...\nserver: apr_socket_sendfile() worked as expected!\nCreating a test file...\nSending the file...\nCalling apr_socket_sendfile()...\nHeaders (3):\n        15 bytes (1)\n        5 bytes (E)\n        80000 bytes (^)\nFile: 200000 bytes from offset 0\nTrailers (3):\n        19 bytes\n        10 bytes\n        90000 bytes\napr_socket_sendfile()->0, sent 211092 bytes\nCalling apr_socket_sendfile()...\nHeaders (0):\nFile: 68928 bytes from offset 131072\nTrailers (3):\n        19 bytes\n        10 bytes\n        90000 bytes\napr_socket_sendfile()->0, sent 68928 bytes\nCalling apr_socket_sendfile()...\nHeaders (0):\nFile: 0 bytes from offset 200000\nTrailers (3):\n        19 bytes\n        10 bytes\n        90000 bytes\napr_socket_sendfile()->0, sent 90029 bytes\nAfter apr_socket_sendfile(), the kernel file pointer is at offset 0.\nclient: apr_socket_sendfile() worked as expected!\nWaiting for a client to connect...\nProcessing a client...\nserver: apr_socket_sendfile() worked as expected!\ngmake[1]: Leaving directory `/usr/local/build/apr-1.5.0_SunOS5.10_sparcv9.002/test'\nnode002$ \n\nThere we have a very clean testsuite and thus APR 1.5.0 may be actually installed \nand then move onwards to apr-util and httpd.\n\nI will say that the output from testsockopt and testlfs could be cleaned up\nsuch that we simply see \"SUCCESS\" and not the somewhat misleading messages\nseen above.\n\n\nDennis Clarke  Sun Dec  8 17:15:57 GMT 2013", "id": 171644, "time": "2013-12-08T17:18:21Z", "creator": "dclarke@blastwave.org", "creation_time": "2013-12-08T17:18:21Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 55860, "text": "This doesn't look like a header issue. In that case the compile would have failed. I also check my local compile output, and it contains the right \"-I\" flags.\n\nWhat is happening here is either that during the linking of \"testall\" the wrong (on old) apr library gets found instead of the new one, or - more likely - that during the test execution the runtime linker uses an old installed apr library.\n\nCan you look first for the linker line in the \"make check\" output. Mine is something like:\n\n... /build/path/libtool --silent --mode=link gcc ... -DHAVE_CONFIG_H  -DSOLARIS2=10 -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT -D_LARGEFILE64_SOURCE   -I../include -I/source/path/test/../include   -no-install    -o testall abts.lo testutil.lo testtime.lo teststr.lo testvsn.lo testipsub.lo testshm.lo testmmap.lo testud.lo testtable.lo testsleep.lo testpools.lo testfmt.lo testfile.lo testdir.lo testfileinfo.lo testrand.lo testdso.lo testoc.lo testdup.lo testsockets.lo testproc.lo testpoll.lo testlock.lo testsockopt.lo testpipe.lo testthread.lo testhash.lo testargs.lo testnames.lo testuser.lo testpath.lo testenv.lo testprocmutex.lo testfnmatch.lo testatomic.lo testflock.lo testsock.lo testglobalmutex.lo teststrnatcmp.lo testfilecopy.lo testtemp.lo testlfs.lo testcond.lo testescape.lo ../libapr-1.la   -luuid -lsendfile -lrt -lsocket -lnsl  -lpthread\n\nLook for the output line containing \"-o testall\". We see that it references \"../libapr-1.la\". The \"..\" is relative to the test subdirectory. The libapr-1.la file in the main build directory in turn contains\n\n\n# The name that we can dlopen(3).\ndlname='libapr-1.so.0'\n\n# Names of this library.\nlibrary_names='libapr-1.so.0.5.0 libapr-1.so.0 libapr-1.so'\n\n...\n\n# Directory that this library needs to be installed in:\nlibdir='install/path/lib'\n\n\nNow we inspect the resulting binary file test/testall:\n\n% elfdump -d test/testall\n\n...\n       [0]  NEEDED            0x1704              libapr-1.so.0\n...\n      [10]  RUNPATH           0x1756              /build/path/.libs:/install/path/lib\n      [11]  RPATH             0x1756              /build/path/.libs:/install/path/lib\n\nso when running test/testall it would load libapr-1.so first from /build/path/.libs and if not found there from /install/path/.libs.\n\nLet's check that:\n\n% ldd test/testall\n        libapr-1.so.0 =>         /build/path/.libs/libapr-1.so.0\n\nThat's correct and the test succeeds during my build.\n\nCan you verify where the above starts to differ for your build?\n\nDo you have any LD_LIBRARY_PATH set during the build (and are there old APR libraries in one of the dircetories referenced in LD_LIBRARY_PATH)? That would explain the behavior, because LD_LIBRARY_PATH has stronger preference for the runtime linker than the RPATH set in the binary itself. There's noting we could do against that except train users not to set LD_LIBRARY_PATH to a directory that contains a kitchen sink collection of libraries.\n\nRegards,\n\nRainer", "id": 171648, "time": "2013-12-08T18:00:13Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2013-12-08T18:00:13Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 55860, "is_private": false, "id": 171657, "time": "2013-12-09T04:58:19Z", "creator": "dclarke@blastwave.org", "creation_time": "2013-12-09T04:58:19Z", "tags": [], "text": "Thank you for the reply and I will have to look into this tomorrow. One thing\nis certian is that I never use LD_LIBRARY_PATH as that causes nothing but \nproblems in the Solaris world. I strictly use various LD_options and even \nLD_DEBUG=files to verify things. \n\nRegardless I did get a nice 2.4.7 httpd up and running but want to track down\nthis issue, which may be entirely between my chair and keyboard.  ;-)\n\nDennis"}, {"text": "I am going to downgrade this to a low priority minor bug because I can not\neasily reproduce it.  Even on my own environment here where yes, I could in \nfact reproduce it if I were to restore a backup from last week and then \nstart over with APR and APR_util and then httpd etc etc. In truth I will \ncome back to this OR I will hit it again in the next release of apr. \n\nI have attached a file which shows a complete flawless configure, compile\nand test stage.  Part of me is annoyed that I could not just redo the \ncompile and reproduce the bug and I am sure Rainer Jung and Jeff Trawick\nwill forgive me because I really do try to submit valid and useful bug\nreports and not items of whimsey. \n\nTherefore, dear folks, let's leave this one open, but silently sitting \nin the basement with lost doll shoes and broken christmas lights. \n\nDennis", "tags": [], "creator": "dclarke@blastwave.org", "is_private": false, "count": 3, "id": 171686, "time": "2013-12-10T23:25:30Z", "bug_id": 55860, "creation_time": "2013-12-10T23:25:30Z", "attachment_id": null}, {"text": "Created attachment 31104\nfull configure, compile and test of apr 1.5.0 on Solaris 10 Sparc with Oracle Studio 12.3 compiler tools", "tags": [], "creator": "dclarke@blastwave.org", "is_private": false, "count": 4, "id": 171687, "time": "2013-12-10T23:27:04Z", "bug_id": 55860, "creation_time": "2013-12-10T23:27:04Z", "attachment_id": 31104}, {"count": 5, "tags": [], "creator": "dclarke@blastwave.org", "attachment_id": null, "is_private": false, "id": 178921, "time": "2014-11-03T19:53:04Z", "bug_id": 55860, "creation_time": "2014-11-03T19:53:04Z", "text": "Not a bug. Build environment corrections required and then latest APR and APR_UTIL build fine."}]