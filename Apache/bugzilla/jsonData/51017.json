[{"count": 0, "tags": [], "text": "Created attachment 26849\nFix for this bug\n\nAfter adding support for MinGW+MSys (see also bug #46175), running \"make test\" generated this report:\n\nFailed Tests            Total   Fail    Failed %\n===================================================\ntestdso                     5      4     80.00%\ntestfile                   36      1      2.78%\ntestpipe                   10      1     10.00%\ntestsock                   10      1     10.00%\ntestpass                    4      2     50.00%\n\nI did a quick check on the failure that happens in testfile entry.\nThis failure happens in test_file_trunc() and it fails to truncate the file\nwhen it is open with APR_FOPEN_BUFFERED flag.\nIn other words, SetEndOfFile() was never called and obvioulsy the file is never resized in that state.\nI think there is also a bug in use of SetFilePointer API: after its call, we should test both its return value and the value returned by GetLastError(), for correct error check with files larger than 4 GB.\nI also recommend to work with LARGE_INTEGER type rather than shifting by 32: gcc complains that, saying that shift by 32 was larger than DWORD type size.\n\nInstead of fixing all places where it is called, I made an internal utility function \"SetFilePointerApr\" that should handle the task correctly and it simplifies a lot the code too.\n\nAfter applying the fix, \"testfile\" rised to SUCCESS state.\n\nSincerely,\n\nCarlo Bramini.", "attachment_id": 26849, "bug_id": 51017, "id": 145535, "time": "2011-04-04T06:48:08Z", "creator": "carlo.bramix@libero.it", "creation_time": "2011-04-04T06:48:08Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 51017, "is_private": false, "id": 145538, "time": "2011-04-04T10:15:21Z", "creator": "wrowe@apache.org", "creation_time": "2011-04-04T10:15:21Z", "tags": [], "text": "Thanks for splitting off this issue!  I haven't gone deeply into your patch, but just to let you know, our internal conventions would suggest a name like apr_file_pointer_set[_internal]() or something like that rather than  SetFilePointerApr... since the later is easily misread as a Windows entry point.  We don't want the causal reader to become confused when they are reading the sources :)"}, {"count": 2, "tags": [], "text": "Created attachment 26850\nFix for this bug\n\nFunction name modified according to your suggestion.", "attachment_id": 26850, "bug_id": 51017, "id": 145540, "time": "2011-04-04T11:07:30Z", "creator": "carlo.bramix@libero.it", "creation_time": "2011-04-04T11:07:30Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 51017, "attachment_id": null, "id": 198032, "time": "2017-03-28T01:08:52Z", "creator": "ivan@apache.org", "creation_time": "2017-03-28T01:08:52Z", "is_private": false, "text": "Fixed in r1788929."}]