[{"count": 0, "tags": [], "creator": "rhope@fiberlink.com", "attachment_id": null, "id": 139412, "time": "2010-08-24T10:10:24Z", "bug_id": 49815, "creation_time": "2010-08-24T10:10:24Z", "is_private": false, "text": "It would be desirable to cache requests that have a Range or If-Range header, specifically when mod_cache is configured with a reverse proxy and the actual content is stored on a separate origin server.\n\nIt should be noted that Range requests are generally supported, but they are bascially just passed through to the origin server and they bypass the cache altogether if the full content is not in the cache already.\n\nThere are 2 leading candidates for how this could be impelemented.\n\nOption 1 - The partial request could be passed through to the origin, and selectively stored in the cache.  One way to simulate this with the existing code base is to add a \"Vary: content-range\" header to the origin server.  However, this has a big downside in that each partial response is cached separately.  If there are many different partial requests, this can cause significant redundancy of data (e.g. one partial request is bytes 1-100, a second is 2-101, a third is 3-102, each of which is independently cached).  Any scalable solution would need to re-assemble the 206 responses in the cache.\n\nOption 2 - When a partial request is received and the cache is missed, remove the Range header when the request gets passed through to the origin server so that the whole document is received back from the origin server.  This entire document could then be stored in the cache, but only the partial 206 response get passed back to the client.  Future partial requests would then be a cache hit (on the entire docuemnt) and only the 206 partial response would be returned.\n\nThis is only an issue when the partial request is a total cache miss (as opposed to a cache hit with expired content).  This comes into play when the majority of the requests to the cache are partial requests, and no (or minimal) full requests are made.\n\nDue to the complexity of reassembling the partial requests in the cache in option 1, it is recommended that something like option 2 is implemented.\n\nHere are several related issues for reference:\nbug id 49113 - Partial requests incorrectly cached between v2.2.11 and 2.2.16\nbug id 49786 - Marked as a duplicate of bug 49113, but includes comments about more fully supporting partial requests\nbug id 44579 - A fix to address a very similar issue, but only when there is cached content that has expired, and a partial request is received.  The solution is to request a full update from the origin server, update the cache with the full document, but restore the Range header from the original request to the byte range filter can return the correct 206 response."}]