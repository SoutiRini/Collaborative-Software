[{"count": 0, "tags": [], "creator": "apache@alk.org.lu", "attachment_id": null, "is_private": false, "id": 3124, "time": "2001-06-20T09:22:21Z", "bug_id": 2251, "creation_time": "2001-06-20T09:22:21Z", "text": "We are using log4j in one of our tools with is loaded in Oracle JServer. In order to minimize \nthe amount of code to be loaded into Oracle, we chose not to load xml.jar, and thus we cannot \nload DOMConfigurator. That's ok, as we use flat property files to configure log4j. However, \nOracle's loadjava wants to resolve all classes at load time, and hence it stumbles accross the \nreference to DOMConfigurator which is in OptionConverter. The way the code is written, it \nlooks like the author attempted to make DOMConfigurator optional by catching the \nNoClassDefError raised while instantiating it. Unfortunately, for Oracle, this is not enough, \nbecause Oracle attempts to do the binding much earlyer.\n\nThe following patch replaces the normal instantiation which reflection-based code, which \nshould avoid this problem:\n\n--- tmp/jakarta-log4j-1.1.3/src/java/org/apache/log4j/helpers/OptionConverter.java\tTue Jun \n19 19:22:43 2001\n+++ \nlog4j-1.1.3/jakarta-log4j-1.1.3/src/java/org/apache/log4j/helpers/OptionConverter.java\tWed \nJun 20 18:09:08 2001\n@@ -14,7 +14,7 @@\n import org.apache.log4j.Hierarchy; \n import org.apache.log4j.Priority; \n import org.apache.log4j.spi.Configurator; \n-import org.apache.log4j.xml.DOMConfigurator; \n+//import org.apache.log4j.xml.DOMConfigurator; \n import org.apache.log4j.PropertyConfigurator; \n  \n // Contributors:   Avy Sharell (sharell@online.fr) \n@@ -441,12 +441,19 @@\n     } else { \n       String filename = url.getFile(); \n       if(filename != null && filename.endsWith(\".xml\")) { \n-\ttry { \n-\t  configurator = new DOMConfigurator(); \n-\t} catch(NoClassDefFoundError e) { \n-\t  LogLog.warn(\"Could not find DOMConfigurator!\", e); \n-\t  return; \n-\t} \n+       try { \n+\t Class cl = Class.forName(\"org.apache.log4j.xml.DOMConfigurator\"); \n+         configurator = (Configurator) cl.newInstance(); \n+       } catch(InstantiationException e) { \n+         LogLog.warn(\"Could not find DOMConfigurator!\", e); \n+\t return; \n+       } catch(IllegalAccessException e) { \n+         LogLog.warn(\"Could not find DOMConfigurator!\", e); \n+\t return; \n+       } catch(ClassNotFoundException e) { \n+         LogLog.warn(\"Could not find DOMConfigurator!\", e); \n+\t return; \n+       } \n       } else { \n \tconfigurator = new PropertyConfigurator(); \n       }"}, {"count": 1, "attachment_id": null, "creator": "ceki@apache.org", "text": "\nLog4j 1.2 fixes the problem you mention.", "id": 15827, "time": "2002-05-09T17:55:00Z", "bug_id": 2251, "creation_time": "2002-05-09T17:55:00Z", "tags": [], "is_private": false}]