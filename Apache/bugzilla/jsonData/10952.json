[{"count": 0, "tags": [], "bug_id": 10952, "text": "I'm using Ant 1.5 with j2sdk1.4.1beta and Xerces-1.4.4.\n\nI have a <condition> that worked fine in Ant 1.4.1 (some echo's for debugging \nincluded and using \"|\" to show that the result doesn't have extra whitspace):\n\n<property name=\"javadoc.breakiterator\" value=\"\" />\n<echo message=\"|${ant.java.version}|\" />\n<echo message=\"${javadoc.breakiterator}\" />\n<condition property=\"javadoc.breakiterator\" value=\"-breakiterator\" >\n    <or>\n        <equals arg1=\"${ant.java.version}\" arg2=\"1.4\" />\n        <equals arg1=\"${ant.java.version}\" arg2=\"1.5\" />\n    </or>\n</condition>\n<echo message=\"|${javadoc.breakiterator}|\" />\n\nExpected output:\n\n[echo] |1.4|\n[empty space here]\n[echo] |1.4|\n\nActual output:\n[echo] |1.4|\n[empty space here]\n[empty space here]\n\nSo, the ${ant.java.version} is returning the proper jdk version string of \"1.4\" \nand that matches one of the arguments in the <or> which should make the \ncondition true.  This should cause the ${javadoc.breakiterator} property to be \nset to the assigned value \"-breakiterator\".  However, it never gets set in Ant \n1.5 where it does get set in Ant 1.4.1.\n\nJake", "id": 19789, "time": "2002-07-18T16:34:08Z", "creator": "hoju@visi.com", "creation_time": "2002-07-18T16:34:08Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "holtdl@yahoo.com", "text": "From WHATSNEW, Changes from Ant 1.4.1 to 1.5beta1, Changes that could break \nolder environments:\n* It is no longer possible to overwrite a property using tasks like\n  <condition>, <exec>, <pathconvert>, or <tstamp>. In some exceptional\n  cases it will generate a warning if you attempt to overwrite an\n  existing property.\n\nYou need to move your default-value setting of javadoc.breakiterator to after \nthe <condition>. ", "count": 1, "id": 19791, "time": "2002-07-18T16:42:09Z", "bug_id": 10952, "creation_time": "2002-07-18T16:42:09Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 10952, "attachment_id": null, "id": 19792, "time": "2002-07-18T17:10:08Z", "creator": "hoju@visi.com", "creation_time": "2002-07-18T17:10:08Z", "is_private": false, "text": "Can you give me an example of what you mean by this?\n\nThe following works, but seems very kludgy:\n\n<echo message=\"|${ant.java.version}|\" />\n<echo message=\"${javadoc.breakiterator}\" />\n<condition property=\"javadoc.breakiterator\" value=\"-breakiterator\" >\n    <or>\n        <equals arg1=\"${ant.java.version}\" arg2=\"1.4\" />\n        <equals arg1=\"${ant.java.version}\" arg2=\"1.5\" />\n    </or>\n</condition>\n<condition property=\"javadoc.breakiterator\" value=\"\">\n    <equals arg1=\"${javadoc.breakiterator}\" arg2=\"${javadoc.breakiterator}\" />\n</condition>\n<echo message=\"${javadoc.breakiterator}\" />\n\nThe output I get from this is:\n\n[echo] |1.4|\n[echo] ${javadoc.breakiterator}\n[echo] -breakiterator\n\nIf I change the first <equals> element's second argument to be \"1.3\" I get:\n\n[echo] |1.4|\n[echo] ${javadoc.breakiterator}\n[empty space here]\n\nNote that if I didn't do the second <condition>, the value of \n${javadoc.breakiterator} would be \"${javadoc.breakiterator}\" where I need it to \nbe an empty string if the <condition> turns out to be false.\n\nSo, I've achieved what I want, but it is much messier than just having the \n<condition> overwrite the existing value.  There must exist a simpler way that \nI am missing.  Can you point it out?\n\nthanks,\n\nJake\n"}, {"count": 3, "tags": [], "bug_id": 10952, "is_private": false, "id": 19793, "creation_time": "2002-07-18T17:18:35Z", "time": "2002-07-18T17:18:35Z", "creator": "holtdl@yahoo.com", "text": "No, I mean:\n  <condition property=\"javadoc.breakiterator\" value=\"-breakiterator\">\n    <or>\n        <equals arg1=\"${ant.java.version}\" arg2=\"1.4\"/>\n        <equals arg1=\"${ant.java.version}\" arg2=\"1.5\"/>\n    </or>\n  </condition>\n  <property name=\"javadoc.breakiterator\" value=\"\"/>\n\nIf javadoc.breakiterator got set by <condition>, then the default-value setting \nof it is a no-op, since <property> won't re-set the value of an already set \nproperty. If <condition> didn't set it, then the <property> will.", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 10952, "text": "Whoops. Sorry, you correct.  I mistook something while testing that.\n\nHowever, I would have to resort to the two conditions if there is a chance that \nsomeone will use my build with Ant 1.4.1, right?\n\nJake", "id": 19795, "time": "2002-07-18T17:39:52Z", "creator": "hoju@visi.com", "creation_time": "2002-07-18T17:39:52Z", "is_private": false, "attachment_id": null}, {"count": 5, "text": "Sorry, Sorry, Sorry,\n\nI just tested with 1.4.1 and the technique you provide works fine in that \nversion as well.\n\nAgain, sorry for the spam.\n\nJake", "bug_id": 10952, "attachment_id": null, "id": 19796, "time": "2002-07-18T17:43:30Z", "creator": "hoju@visi.com", "creation_time": "2002-07-18T17:43:30Z", "tags": [], "is_private": false}]