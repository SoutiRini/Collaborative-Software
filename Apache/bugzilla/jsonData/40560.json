[{"count": 0, "tags": [], "bug_id": 40560, "attachment_id": null, "text": "This problem exist in both xml-security-c-1.2.1 and xml-security-c-1.3.0.\n\nI'm trying to decrypt an XML directly with a RSA private key.  The XML looks\nlike the following:\n\n      <SSN>\n        <xenc:EncryptedData xmlns:xenc=\"http://www.w3.org/2001/04/xmlenc#\"\nType=\"http://www.w3.org/2001/04/xmlenc#Content\">\n          <xenc:EncryptionMethod\nAlgorithm=\"http://www.w3.org/2001/04/xmlenc#rsa-1_5\"/>\n          <xenc:CipherData>\n           \n<xenc:CipherValue>M3AF/xZbwfGn65c0eAUUdorBVUrLEUBnd1O2sZlt5FE4dFqKgtwIbRlV0hRBAarVyynLSo8r34rR\nHigemlQwaM6+jAGKB6ALO5U8Qpghgq3ry/fnjvb0utlXpT1F0AsEwisHsMi03h1amzmsQch6uC/B\n8B+27JBMp75iIXgmtdQ=</xenc:CipherValue>\n          </xenc:CipherData>\n        </xenc:EncryptedData>\n      </SSN>\n\nBut I'm getting the following error when calling decryptElement:\nError: Errors occured during de-serialisation of decrypted element content\n\nThe problem is the function\n\"XENCAlgorithmHandlerDefault::doRSADecryptToSafeBuffer\" in \n\"xenc/impl/XENCAlgorithmHandlerDefault.cpp\" treats the decrypted value as binary\ndata.  The following is the end of the function.\n\n        // Copy to output\n        result.sbMemcpyIn(decBuf, decryptLen+1);\n\n        memset(decBuf, 0, decryptLen);\n\nAs a side note, compare it to \"XENCAlgorithmHandlerDefault::decryptToSafeBuffer\"\nin the same file, this function treats the decrypted value as null-terminated\nstring:\n\n        cipherText->appendTxfm(tcipher);\n\n        // Do the decrypt to the safeBuffer\n\n        result.sbStrcpyIn(\"\");\n        unsigned int offset = 0;\n        XMLByte buf[1024];\n        TXFMBase * b = cipherText->getLastTxfm();\n\n        int bytesRead = b->readBytes(buf, 1024);\n        while (bytesRead > 0) {\n                result.sbMemcpyIn(offset, buf, bytesRead);\n                offset += bytesRead;\n                bytesRead = b->readBytes(buf, 1024);\n        }\n\n        result[offset] = '\\0';\n\n\nBut \"XENCCipherImpl::deSerialise\" in \"xenc/impl/XENCCipherImpl.cpp\" treats the\ndecrypted data saved in safeBuffer as a null-terminated string.\n\n        const char * crcb = content.rawCharBuffer();\n        ...\n        sbt.sbStrcatIn(&crcb[offset]);", "id": 93939, "time": "2006-09-20T23:31:28Z", "creator": "samlai@amazon.com", "creation_time": "2006-09-20T23:31:28Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 40560, "attachment_id": null, "text": "Fixed in SVN.  I will do a 1.3.1 sometime soon that will have this in it.\n\nIn the interim - you can try the following (or just take XMLCipherImpl.cpp from\nsvn - this is the only change in there since 1.3.0).\n\nIndex: XENCCipherImpl.cpp\n===================================================================\n--- XENCCipherImpl.cpp  (revision 450386)\n+++ XENCCipherImpl.cpp  (working copy)\n@@ -552,10 +552,11 @@\n        }\n\n        safeBuffer sb(\"\");\n+       unsigned int decryptLen;\n\n        if (handler != NULL) {\n\n-               handler->decryptToSafeBuffer(c,\n+               decryptLen = handler->decryptToSafeBuffer(c,\n                        mp_encryptedData->getEncryptionMethod(),\n                        mp_key,\n                        mp_env->getParentDocument(),\n@@ -570,7 +571,9 @@\n                        \"XENCCipherImpl::decryptElement - Error retrieving a han\ndler for algorithm\");\n\n        }\n-\n+\n+       sb[decryptLen] = '\\0';\n+\n        // Now de-serialise\n        DOMElement * element = mp_encryptedData->getElement();\n        DOMDocumentFragment * frag = deSerialise(sb, element);\n", "id": 94249, "time": "2006-09-28T21:04:37Z", "creator": "blautenb@apache.org", "creation_time": "2006-09-28T21:04:37Z", "is_private": false}]