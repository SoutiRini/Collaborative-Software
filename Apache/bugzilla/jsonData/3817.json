[{"count": 0, "tags": [], "bug_id": 3817, "text": "Placing a jar file that contains the Servlet 2.2 classes in $CATALINA_HOME/lib\ncauses Tomcat to fail to display JSP pages.  The documented class loading order\nin http://jakarta.apache.org/tomcat/tomcat-4.0-doc/class-loader-howto.html is:\n\n    * /WEB-INF/classes of your web application\n    * /WEB-INF/lib/*.jar of your web application\n    * Bootstrap classes of your JVM\n    * System class loader classses (described above)\n    * $CATALINA_HOME/common/classes\n    * $CATALINA_HOME/common/*.jar\n    * $CATALINA_HOME/classes\n    * $CATALINA_HOME/lib/*.jar\n\nSince $CATALINA_HOME/lib is last in priority, shouldn't the Servlet 2.3 classes\noverride the old Servlet classes in $CATALINA_HOME/lib?\n\nThis may seem like a perverse thing to do, but it has to do with making a jar\nfile that's easy to install and use in multiple environments.\n\n\nThe error that Tomcat gives is:\n2001-09-25 10:37:38 StandardWrapper[/tomcat-docs:invoker]: Loading container\nservlet invoker\n2001-09-25 10:37:38 invoker: init\n2001-09-25 10:37:38 StandardWrapper[/tomcat-docs:jsp]: Using Jasper classloader\nfor servlet jsp\n2001-09-25 10:37:38 StandardWrapper[/tomcat-docs:jsp]: Marking servlet jsp as\nunavailable\n2001-09-25 10:37:38 StandardContext[/tomcat-docs]: Servlet /tomcat-docs threw\nload() exception\njavax.servlet.ServletException: Class org.apache.jasper.servlet.JspServlet is\nnot a Servlet\n\tat org.apache.catalina.core.StandardWrapper.load(Unknown Source)\n\tat org.apache.catalina.core.StandardContext.loadOnStartup(Unknown Source)\n\tat org.apache.catalina.core.StandardContext.start(Unknown Source)\n\tat org.apache.catalina.core.ContainerBase.addChild(Unknown Source)\n\tat org.apache.catalina.core.StandardHost.addChild(Unknown Source)\n\tat org.apache.catalina.core.StandardHost.install(Unknown Source)\n\tat org.apache.catalina.startup.HostConfig.deployApps(Unknown Source)\n\tat org.apache.catalina.startup.HostConfig.start(Unknown Source)\n\tat org.apache.catalina.startup.HostConfig.lifecycleEvent(Unknown Source)\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(Unknown Source)\n\tat org.apache.catalina.core.ContainerBase.start(Unknown Source)\n\tat org.apache.catalina.core.ContainerBase.start(Unknown Source)\n\tat org.apache.catalina.core.StandardEngine.start(Unknown Source)\n\tat org.apache.catalina.core.StandardService.start(Unknown Source)\n\tat org.apache.catalina.core.StandardServer.start(Unknown Source)\n\tat org.apache.catalina.startup.Catalina.start(Unknown Source)\n\tat org.apache.catalina.startup.Catalina.execute(Unknown Source)\n\tat org.apache.catalina.startup.Catalina.process(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.apache.catalina.startup.Bootstrap.main(Unknown Source)\n----- Root Cause -----\njava.lang.ClassCastException: org.apache.jasper.servlet.JspServlet\n\tat org.apache.catalina.core.StandardWrapper.load(Unknown Source)\n\tat org.apache.catalina.core.StandardContext.loadOnStartup(Unknown Source)\n\tat org.apache.catalina.core.StandardContext.start(Unknown Source)\n\tat org.apache.catalina.core.ContainerBase.addChild(Unknown Source)\n\tat org.apache.catalina.core.StandardHost.addChild(Unknown Source)\n\tat org.apache.catalina.core.StandardHost.install(Unknown Source)\n\tat org.apache.catalina.startup.HostConfig.deployApps(Unknown Source)\n\tat org.apache.catalina.startup.HostConfig.start(Unknown Source)\n\tat org.apache.catalina.startup.HostConfig.lifecycleEvent(Unknown Source)\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(Unknown Source)\n\tat org.apache.catalina.core.ContainerBase.start(Unknown Source)\n\tat org.apache.catalina.core.ContainerBase.start(Unknown Source)\n\tat org.apache.catalina.core.StandardEngine.start(Unknown Source)\n\tat org.apache.catalina.core.StandardService.start(Unknown Source)\n\tat org.apache.catalina.core.StandardServer.start(Unknown Source)\n\tat org.apache.catalina.startup.Catalina.start(Unknown Source)\n\tat org.apache.catalina.startup.Catalina.execute(Unknown Source)\n\tat org.apache.catalina.startup.Catalina.process(Unknown Source)\n\tat java.lang.reflect.Method.invoke(Native Method)\n\tat org.apache.catalina.startup.Bootstrap.main(Unknown Source)", "id": 6007, "time": "2001-09-25T10:45:10Z", "creator": "pogo_tomcat@yahoo.com", "creation_time": "2001-09-25T10:45:10Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 3817, "attachment_id": null, "id": 6015, "time": "2001-09-25T12:19:06Z", "creator": "remm@apache.org", "creation_time": "2001-09-25T12:19:06Z", "is_private": false, "text": "http://jakarta.apache.org/tomcat/tomcat-4.0-doc/class-loader-howto.html \ndocuments that the shared loader is between the common loader and the webapp \nloader.\n\nSince that's the behavior that's implemented, I don't see any problem.\n\nDon't put anything containing the old servlet API classes in any of the \nCatalina loaders."}, {"count": 2, "tags": [], "bug_id": 3817, "attachment_id": null, "id": 6017, "time": "2001-09-25T12:52:42Z", "creator": "pogo_tomcat@yahoo.com", "creation_time": "2001-09-25T12:52:42Z", "is_private": false, "text": "Perhaps this is a documentation bug, but the list given on that doc page of the \nclassloaders from the point of view of a web application does not say that the \nshared loader is between the webapp and common loaders. Rather, the common \nloader is between webapp and shared.\n\nwebapp: /WEB-INF/classes of your web application \nwebapp: /WEB-INF/lib/*.jar of your web application \nbootstrap: Bootstrap classes of your JVM \nsystem: System class loader classses (described above) \ncommon: $CATALINA_HOME/common/classes \ncommon: $CATALINA_HOME/common/*.jar \nshared: $CATALINA_HOME/classes \nshared: $CATALINA_HOME/lib/*.jar \n\nOr am I misunderstanding?\n"}, {"count": 3, "tags": [], "bug_id": 3817, "text": "There is a tree diagram which shows very clearly the class loader hierarchy. \n\n     Bootstrap\n          |\n       System\n          |\n       Common\n      /      \\\n Catalina   Shared\n             /   \\\n        Webapp1  Webapp2 ... \n          /         /\n       Jasper1  Jasper2 ...\n\n", "id": 6024, "time": "2001-09-25T13:45:21Z", "creator": "remm@apache.org", "creation_time": "2001-09-25T13:45:21Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 3817, "attachment_id": null, "id": 6031, "time": "2001-09-25T14:38:03Z", "creator": "pogo_tomcat@yahoo.com", "creation_time": "2001-09-25T14:38:03Z", "is_private": false, "text": "The tree diagram does not agree with the list I quoted which is further down \nthe page.  If the tree diagram is correct, then the list should be changed to \nmatch.\n"}, {"count": 5, "tags": [], "bug_id": 3817, "attachment_id": null, "id": 6032, "time": "2001-09-25T15:06:17Z", "creator": "remm@apache.org", "creation_time": "2001-09-25T15:06:17Z", "is_private": false, "text": "Ok, I understand the whole thing now (sorry for being slow). The docs advertise \nthat all the CL delegate except the webapp CL. However, in the code, no CL is \nactually delegating."}, {"count": 6, "tags": [], "text": "Fixed (in CVS). Thanks for the report.", "is_private": false, "id": 6036, "creator": "remm@apache.org", "time": "2001-09-25T16:59:03Z", "bug_id": 3817, "creation_time": "2001-09-25T16:59:03Z", "attachment_id": null}]