[{"count": 0, "tags": [], "creator": "a.kovacs@i-docs.com", "attachment_id": null, "id": 139515, "creation_time": "2010-08-27T05:54:01Z", "time": "2010-08-27T05:54:01Z", "bug_id": 49835, "text": "In this problem I have 2 tables. \nThe first one is ending just before the page ends.\nIt is not enough place on the page to display the header of the second table but there is enough place to display 1 row of the second table.\n\nThe header2 goes to the next page but 1 row of the table is displayed on the previous page.\nThis means the table-bodys first row is displayed BEFORE the table-header\n\nAttached is XSL/FO and PDF.", "is_private": false}, {"count": 1, "tags": [], "creator": "a.kovacs@i-docs.com", "text": "Created attachment 25952\ntest pdf", "id": 139516, "time": "2010-08-27T05:54:45Z", "bug_id": 49835, "creation_time": "2010-08-27T05:54:45Z", "is_private": false, "attachment_id": 25952}, {"count": 2, "tags": [], "bug_id": 49835, "attachment_id": 25953, "text": "Created attachment 25953\ntest XSL/FO file", "id": 139517, "time": "2010-08-27T05:56:06Z", "creator": "a.kovacs@i-docs.com", "creation_time": "2010-08-27T05:56:06Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 49835, "attachment_id": 25995, "id": 139727, "time": "2010-09-07T03:02:34Z", "creator": "jeremias@apache.org", "creation_time": "2010-09-07T03:02:34Z", "is_private": false, "text": "Created attachment 25995\nReduced test case\n\nI've reduced the test case to the minimum (attached). It appears to be the same problem I've noticed when I tried to fix column balancing (Bug 49801). It appears to be triggered by the preceding span=\"all\". Something about that algorithm restart after the span change seems to be fishy."}, {"count": 4, "tags": [], "creator": "jeremias@apache.org", "text": "Created attachment 26053\nMinimal Test Case\n\nTest case can be reduced even more. For some reason, the algorithm starts at startIndex 1 after the overflow for line/part 2 even though at startIndex 1, there is no legal break (inf penalty). Still haven't found out why this is happening.", "id": 139965, "time": "2010-09-20T04:06:20Z", "bug_id": 49835, "creation_time": "2010-09-20T04:06:20Z", "is_private": false, "attachment_id": 26053}, {"count": 5, "tags": [], "bug_id": 49835, "attachment_id": 26583, "text": "Created attachment 26583\nMinimal Test Case - Slightly Altered\n\nSo I took a closer look at this one. No immediate fix in mind yet, but one observation so far that could be of use in further tracking this down.\n\nTake a look at the revised attachment. The overflow recovery/deferral mechanism is doing exactly what it is supposed to here. The issue seems to manifest itself in case an overflow condition is reached, and there is no 'real' previous node yet. The auxiliary node that is added at the start, right before the main loop in findBreakingPoints() is entered, is deactivated, and the algorithm then tries to create a 'last forced' node to restart from later (findBreakingPoints() line 577 -> recoverFromTooLong()). This all seems to work fine as long as there actually is a valid node to restart from, but something seems to go wrong in case there isn't, yet.", "id": 143841, "time": "2011-01-31T19:23:52Z", "creator": "adelmelle@apache.org", "creation_time": "2011-01-31T19:23:52Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 49835, "attachment_id": null, "id": 143857, "time": "2011-02-01T07:15:00Z", "creator": "adelmelle@apache.org", "creation_time": "2011-02-01T07:15:00Z", "is_private": false, "text": "Operating on a hunch, I tried prepending each blockList in AbstractBreaker.doLayout() with an auxiliary penalty (w=0, p=0). At line 394, I added a simple:\n\n  blockList.add(0, new KnuthPenalty(0, 0, false, null, true));\n\nIt seems to trigger correct behavior in this case, as the entire block is now deferred to the second page, where it can be kept together in one column.\nOn the other hand, that quick hack breaks quite some testcases. All those that check for element-list content now suddenly have to deal with an extra element at position 0...\n\nFact remains that, without this penalty, the last forced node points to position 0, which corresponds to the first box, while it should actually point to the position preceding the first box."}, {"count": 7, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": 26604, "id": 143977, "creation_time": "2011-02-04T05:23:24Z", "time": "2011-02-04T05:23:24Z", "bug_id": 49835, "text": "Created attachment 26604\npotential fix\n\nLooking closer at this, so far, I have not found a possibility to generate a node in BreakingAlgorithm that merely produces a break, but does not include at least one element... Comparing to the case of a forced break, or the cases where it does work as expected, the difference is always that there is a penalty element preceding the content that should be kept together.\n\nSo, it looks more and more like we cannot avoid somehow inserting that auxiliary penalty. The quick hack I tried earlier, adds this penalty unconditionally, to all block lists. Another, slightly more attractive alternative would be to have the BreakingAlgorithm alter the paragraph and have it insert this penalty when appropriate. That would fix the issue without having to adapt all the testcases that observe the element lists.\n\nAttached minimal patch fixes the issue by conditionally adding the auxiliary penalty in recoverFromTooLong(). If the lastTooLong node would be the first real break, we add the penalty to enable the creation of a node representing a break before the first box.\nIt still 'broke' one layout test: fox_disable-column-balancing.xml. Checking closer, this actually seems to fix the test, rather than break it. The failing check was followed by another, commented check. Removing the failing one, and uncommenting the other, the layout test suite passes completely.\n\nBug 49877 also seems to be fixed by the patch, so I am going to mark that as a duplicate to begin with.", "is_private": false}, {"count": 8, "attachment_id": null, "creator": "adelmelle@apache.org", "text": "*** Bug 49877 has been marked as a duplicate of this bug. ***", "id": 143979, "time": "2011-02-04T05:23:52Z", "bug_id": 49835, "creation_time": "2011-02-04T05:23:52Z", "tags": [], "is_private": false}, {"count": 9, "attachment_id": 26608, "creator": "adelmelle@apache.org", "text": "Created attachment 26608\nrevised patch\n\n\nSlightly more restricted: only add the penalty if the first element of the paragraph is not yet a penalty.\n(+ might as well extract that dummy penalty constructor into a static final that can be used elsewhere)\n\nAlso included a test case, checking for some possibilities in single/multi column layout:\n- single column, constant bpd\n- single column, alternating bpd (increase sufficient to keep together)\n- multi column constant bpd\n- multi column, alternating bpd (increase sufficient to keep together)\n- single column, alternating bpd (increase insufficient to keep together)\n- multi column, alternating bpd (increase insufficient to keep together)", "id": 143995, "time": "2011-02-04T15:52:28Z", "bug_id": 49835, "creation_time": "2011-02-04T15:52:28Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "bug_id": 49835, "attachment_id": null, "id": 144374, "time": "2011-02-17T08:36:45Z", "creator": "alpapad@gmail.com", "creation_time": "2011-02-17T08:36:45Z", "is_private": false, "text": "We have tested the revised patch, and it does fix the problem as described by  a.kovacs.\n\nThe minimal test case must be wrong. The output is the same with or without the patch and it behaves normally, ie rows are displayed were they should.\n\nThanks!"}, {"count": 11, "tags": [], "bug_id": 49835, "attachment_id": null, "text": "Another note: bug 49877 is NOT fixed by this patch so it should be re-opened.\n\n\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=49877", "id": 144375, "time": "2011-02-17T08:39:03Z", "creator": "alpapad@gmail.com", "creation_time": "2011-02-17T08:39:03Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 49835, "attachment_id": null, "text": "Another note: bug 49877 is NOT fixed by this patch so it should be re-opened.\n\n\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=49877", "id": 144376, "time": "2011-02-17T08:39:29Z", "creator": "alpapad@gmail.com", "creation_time": "2011-02-17T08:39:29Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 49835, "attachment_id": null, "text": "> We have tested the revised patch, and it does fix the problem as described by \n> a.kovacs.\n> \n> The minimal test case must be wrong. The output is the same with or without the\n> patch and it behaves normally, ie rows are displayed were they should.\n\nWhich test case are you referring to exactly? I checked all attachments before and after the patch. Before, the content was split anyway after the first line, even though it could be kept together as a whole if deferred to the next page in its entirety.\n\nCan you provide more details on why you would consider bug 49877 not to be fixed? Before the change, there was a strange overlap at the bottom of the first page. When I tried that sample after applying the patch, the offending piece of content was kept together on the next page, as expected.\nThere is indeed still the violation of a keep-constraint. I was going to file that as a different, more general issue (= violation of keep-constraints across span changes), but didn't get around to that yet. If you would rather make that the main issue for bug 49877, or you still have other reasons, then by all means, go ahead and reopen.", "id": 144387, "time": "2011-02-17T15:05:13Z", "creator": "adelmelle@apache.org", "creation_time": "2011-02-17T15:05:13Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 49835, "attachment_id": null, "id": 144396, "time": "2011-02-17T19:24:26Z", "creator": "adelmelle@apache.org", "creation_time": "2011-02-17T19:24:26Z", "is_private": false, "text": "(In reply to comment #13)\n> > The minimal test case must be wrong. The output is the same with or without the\n> > patch and it behaves normally, ie rows are displayed were they should.\n> \n> Which test case are you referring to exactly? I checked all attachments before\n> and after the patch. \n\nIt just occurred to me that, if you mean the 'slightly altered' test case, you may want to read comment 5 more closely. It is expected to produce the same result before and after. More a reference sample to be able to see the difference during debugging."}, {"count": 15, "tags": [], "bug_id": 49835, "attachment_id": null, "id": 144450, "time": "2011-02-21T04:19:14Z", "creator": "alpapad@gmail.com", "creation_time": "2011-02-21T04:19:14Z", "is_private": false, "text": "(In reply to comment #14)\n> (In reply to comment #13)\n> > > The minimal test case must be wrong. The output is the same with or without the\n> > > patch and it behaves normally, ie rows are displayed were they should.\n> > \n> > Which test case are you referring to exactly? I checked all attachments before\n> > and after the patch. \n> \n> It just occurred to me that, if you mean the 'slightly altered' test case, you\n> may want to read comment 5 more closely. It is expected to produce the same\n> result before and after. More a reference sample to be able to see the\n> difference during debugging.\n\nI am sorry Andreas, I am not an expert in fop internals, so my response might have been too fast (and wrong) and it created some confusion.\n\nI was under the impression, that the minimal test case (by Jeremias) manifested the same behavior as Adam's original sample. The result I got from minimal, with and without, the patch is identical. So, I guess this test case does not expose the problem. I haven't tested with your revised (Slightly Altered) test, and I was not referring to it.. \n\n\nAs for the other bug, it is my mistake, I was referring to bug https://issues.apache.org/bugzilla/show_bug.cgi?id=49801,  which is still open and is a totally different case.\n\nI am sorry again for the misunderstanding.\n\n\nRegards,\nAlex"}, {"count": 16, "tags": [], "bug_id": 49835, "attachment_id": null, "text": "(In reply to comment #15)\n\nAlex,\n\nAdded you to the CC list so that you are notified directly of updates. Hope you don't mind.\n\n> I was under the impression, that the minimal test case (by Jeremias) manifested\n> the same behavior as Adam's original sample. The result I got from minimal,\n> with and without, the patch is identical. So, I guess this test case does not\n> expose the problem. I haven't tested with your revised (Slightly Altered) test,\n> and I was not referring to it.. \n\nThat's strange... I will attach the output before/after the patch here. They definitely look different on my end. After the patch, the entire block is deferred to the second page, where it can be kept together as a whole.\n\n> As for the other bug, it is my mistake, I was referring to bug\n> https://issues.apache.org/bugzilla/show_bug.cgi?id=49801,  which is still open\n> and is a totally different case.\n\nOK, no problem! You can add yourself to the CC list of that bug if you want to follow up there.", "id": 144453, "time": "2011-02-21T12:28:52Z", "creator": "adelmelle@apache.org", "creation_time": "2011-02-21T12:28:52Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 49835, "attachment_id": 26686, "id": 144454, "time": "2011-02-21T12:30:01Z", "creator": "adelmelle@apache.org", "creation_time": "2011-02-21T12:30:01Z", "is_private": false, "text": "Created attachment 26686\nMinimal Test Case - before attached patch"}, {"count": 18, "tags": [], "bug_id": 49835, "text": "Created attachment 26687\nMinimal Test Case PDF - after attached patch", "id": 144455, "time": "2011-02-21T12:30:40Z", "creator": "adelmelle@apache.org", "creation_time": "2011-02-21T12:30:40Z", "is_private": false, "attachment_id": 26687}, {"count": 19, "tags": [], "bug_id": 49835, "attachment_id": null, "text": "Thanks, Andreas, for looking into this. I've reviewed your solution and think you should apply it.", "id": 144697, "time": "2011-03-03T04:42:10Z", "creator": "jeremias@apache.org", "creation_time": "2011-03-03T04:42:10Z", "is_private": false}, {"count": 20, "tags": [], "bug_id": 49835, "attachment_id": null, "text": "(In reply to comment #19)\n> Thanks, Andreas, for looking into this. I've reviewed your solution and think\n> you should apply it.\n\nOK, done. See: http://svn.apache.org/viewvc?rev=1079013&view=rev", "id": 144812, "time": "2011-03-07T18:06:37Z", "creator": "adelmelle@apache.org", "creation_time": "2011-03-07T18:06:37Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 49835, "attachment_id": null, "text": "batch transition to closed; if someone wishes to restore one of these to resolved in order to perform a verification step, then feel free to do so", "id": 155467, "time": "2012-04-01T06:17:32Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:17:32Z", "is_private": false}]