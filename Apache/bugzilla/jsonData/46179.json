[{"count": 0, "tags": [], "creator": "pawel.jasinski@gmail.com", "text": "Created attachment 22852\nconfig file and keys/certificates\n\ni am trying to use ssl client authentication together with apr. I have followed the instructions contained in apr manual but no success.\nWhen I try access server with the browser (get the prompt for user cert and submit it), i get the error:\n\n  An error occurred during a connection to rzuem5008u.jap2.ch:8443.\n  SSL peer was unable to negotiate an acceptable set of security parameters.\n  (Error code: ssl_error_handshake_failure_alert)\n\nWhen I try to access the server with:\n  openssl s_client -msg  -CAfile /home/rejap/certs/REtest-RootCA.pem -cert /home/rejap/certs/0D.pem  -state -connect rzuem5008u.jap2.ch:8443\nit produces the following error:\n--- snip, snip ---\n SSL_connect:SSLv3 write client certificate A\n>>> TLS 1.0 Handshake [length 0086], ClientKeyExchange\n    10 00 00 82 00 80 7b a6 c2 cf 5e a1 44 60 1c 5d\n ...\n    71 06 75 4b 06 c4\nSSL_connect:SSLv3 write client key exchange A\n>>> TLS 1.0 Handshake [length 0106], CertificateVerify\n    0f 00 01 02 01 00 4a f4 64 74 56 b4 d0 51 b1 27\n...\n    2b 90 55 46 fd c4\nSSL_connect:SSLv3 write certificate verify A\n>>> TLS 1.0 ChangeCipherSpec [length 0001]\n    01\nSSL_connect:SSLv3 write change cipher spec A\n>>> TLS 1.0 Handshake [length 0010], Finished\n    14 00 00 0c 70 b5 b4 08 35 3a ae 15 d3 28 2c e4\nSSL_connect:SSLv3 write finished A\nSSL_connect:SSLv3 flush data\n<<< TLS 1.0 Alert [length 0002], fatal decrypt_error\n    02 33\nSSL3 alert read:fatal:decrypt error\nSSL_connect:failed in SSLv3 read finished A\n18383:error:1409441B:SSL routines:SSL3_READ_BYTES:tlsv1 alert decrypt error:s3_pkt.c:1053:SSL alert number 51\n18383:error:140790E5:SSL routines:SSL23_WRITE:ssl handshake failure:s23_lib.c:188:\n\n\nThe server.xml is all default except:\n    <Connector port=\"8443\" protocol=\"HTTP/1.1\" SSLEnabled=\"true\"\n               maxThreads=\"150\" scheme=\"https\" secure=\"true\"\n               sslProtocol=\"TLSv1\"\n               SSLCertificateFile=\"/home/rejap/app/certs/rzuem5008u.crt\"\n               SSLCertificateKeyFile=\"/home/rejap/app/certs/rzuem5008u.key\"\n               SSLCertificateChainFile=\"/home/rejap/app/certs/cacert.pem\"\n\n               SSLVerifyClient=\"require\"\n               SSLVerifyDepth=\"10\"\n               SSLCACertificateFile=\"/home/rejap/app/certs/all-cacerts.pem\"\n               /> \n\nContent of the certificate files:\n\nrzuem5008u.crt - server certificate, signed by CA1\nrzuem5008u.key - server private key\ncacert.pem - CA1 certificate signed by ROOT\nall-cacerts.pem - CA1 certificated (signed by ROOT) followed by ROOT (self signed)\n\nclient sends the user certificate (0D.pem) singned by CA1\nclient has the ROOT certificate added to the trust \n\nIf I turn off the verify client (take out last 3 directives from config) the server auth works ok.\nI have verified the certs (chains) with apache server. I did parallel setup with the same certs/keys and it appears to work.\nI have verified the certs with the tomcat without native. Everything is tip top.\n\nI tried to switch to sslv3. I got similar but not exactly the same error. \n\nverions:\ntomcat 6.0.18\napr 1.2.11-1 (ubuntu)\nopenssl 0.9.8g-4ubuntu3.3\njava version \"1.6.0_07\"\n\nPawel", "id": 122352, "time": "2008-11-10T16:34:21Z", "bug_id": 46179, "creation_time": "2008-11-10T16:34:21Z", "is_private": false, "attachment_id": 22852}, {"count": 1, "tags": [], "bug_id": 46179, "attachment_id": null, "id": 143113, "creation_time": "2011-01-06T05:17:55Z", "time": "2011-01-06T05:17:55Z", "creator": "jfclere@gmail.com", "text": "SSLVerifyDepth=\"10\"\n\nYou don't have root certificate for CA so you should use 1.", "is_private": false}, {"count": 2, "tags": [], "bug_id": 46179, "attachment_id": null, "id": 143118, "time": "2011-01-06T08:57:11Z", "creator": "pawel.jasinski@gmail.com", "creation_time": "2011-01-06T08:57:11Z", "is_private": false, "text": "I am a bit confused. As far as I am concerned the correct config file with chain of 2 certificates is provided: all-cacerts.pem \nThis file contains root certificate:\n\n        Issuer: CN=REtest-RootCA, OU=Certification Authorities, OU=NEO, O=RUAG \n   Subject: CN=REtest-RootCA, OU=Certification Authorities, OU=NEO, O=RUAG Electronics, C=CH"}, {"count": 3, "tags": [], "bug_id": 46179, "attachment_id": null, "id": 143120, "time": "2011-01-06T09:04:40Z", "creator": "pawel.jasinski@gmail.com", "creation_time": "2011-01-06T09:04:40Z", "is_private": false, "text": "I am a bit confused. \n\nAs far as I am concerned the correct configuration file with chain of 2 certificates is provided: all-cacerts.pem \nThis file contains root certificate:\nIssuer: CN=REtest-RootCA ...\nSubject: CN=REtest-RootCA ...\n\nIf I set the SSLVerifyDepth to 1, it verifies only the CA1 certificate\n\nShall we say that chained certificates in this particular case are not supported?\n\nIs there any other way to supply the chained certificate to apr/ssl?"}, {"count": 4, "tags": [], "creator": "jfclere@gmail.com", "text": "Could you please try with SSLVerifyDepth=\"1\".\nNote that the certificates attached to the case are too old new :-(", "id": 143165, "time": "2011-01-07T03:34:14Z", "bug_id": 46179, "creation_time": "2011-01-07T03:34:14Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "markt@apache.org", "text": "This is tested with every Tomcat 7 release when we run the Servlet TCK which explicitly tests CLIENT-CERT authentication.", "id": 174422, "time": "2014-04-09T14:52:14Z", "bug_id": 46179, "creation_time": "2014-04-09T14:52:14Z", "is_private": false, "attachment_id": null}]