[{"count": 0, "tags": [], "text": "A FileInputStream in the putMethod(String path, File file) method of\nWebdavResource is not closed.  On Windows (and any other OS that blocks writing\nto open files) this will prevent editing of any file uploaded via this method\nuntil the application that uploaded the file is exited.\n\nSee below for the simple fix (one can simply comment-out the old version of the\nmethod and paste-in this one in its entirety).\n\nCheers!\n\nMichael N. Christoff\ndmx_dawg@hotmail.com\n\n\n    /**\n     * Execute the PUT method for the given path.\n     *\n     * October 22, 2006\n     * Fixed error where FileInputStream not closed.\n     *\n     * @param path the server relative path to put the given file\n     * @param file the filename to get on local.\n     * @return true if the method is succeeded.\n     * @exception HttpException\n     * @exception IOException\n     */\n    public boolean putMethod(String path, File file)\n        throws HttpException, IOException {\n\n        setClient();\n        PutMethod method = new PutMethod(URIUtil.encodePathQuery(path));\n        generateIfHeader(method);\n        if (getGetContentType() != null && !getGetContentType().equals(\"\"))\n            method.setRequestHeader(\"Content-Type\", getGetContentType());\n        long fileLength = file.length();\n        method.setRequestContentLength(fileLength <= Integer.MAX_VALUE\n                                       ? (int) fileLength\n                                       : PutMethod.CONTENT_LENGTH_CHUNKED);\n        FileInputStream fis = new FileInputStream(file);\n        method.setRequestBody(fis);\n        generateTransactionHeader(method);\n        int statusCode = client.executeMethod(method);\n\n        setStatusCode(statusCode);\n\n        fis.close();  // <--- simple update to code\n\n        return (statusCode >= 200 && statusCode < 300) ? true : false;\n    }", "is_private": false, "id": 95163, "creator": "dmx_dawg@hotmail.com", "time": "2006-10-27T13:11:00Z", "bug_id": 40835, "creation_time": "2006-10-27T13:11:00Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "antoine@apache.org", "attachment_id": null, "text": "Thanks for your bug report.\nNow fixed in SVN.\nWill be available for the next release.", "id": 95183, "time": "2006-10-28T16:20:04Z", "bug_id": 40835, "creation_time": "2006-10-28T16:20:04Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 40835, "attachment_id": null, "id": 99137, "time": "2007-02-08T14:38:06Z", "creator": "dmx_dawg@hotmail.com", "creation_time": "2007-02-08T14:38:06Z", "is_private": false, "text": "I realize now that my proposed fix for this is inadequate.  The problem will\nstill arise if an exception occurs at any time after the FileInputStream 'fis'\nis opened but before it is closed.  In that case, the method will exit without\nhaving called fis.close().\n\nBelow is a solution that will ensure the stream closes even in the event of an\nexception:\n\n    public boolean putMethod(String path, File file)\n        throws HttpException, IOException {\n\n\n        FileInputStream fis = null;  // <- * declared outside of try block *\n        try {        // <----------------- * try block added *\n\n\n            setClient();\n            PutMethod method = new PutMethod(URIUtil.encodePathQuery(path));\n            generateIfHeader(method);\n            if (getGetContentType() != null && !getGetContentType().equals(\"\"))\n                method.setRequestHeader(\"Content-Type\", getGetContentType());\n            long fileLength = file.length();\n            method.setRequestContentLength(fileLength <= Integer.MAX_VALUE\n                                           ? (int) fileLength\n                                           : PutMethod.CONTENT_LENGTH_CHUNKED);\n            fis = new FileInputStream(file);\n            method.setRequestBody(fis);\n            generateTransactionHeader(method);\n            int statusCode = client.executeMethod(method);\n\n            setStatusCode(statusCode);\n            return (statusCode >= 200 && statusCode < 300) ? true : false;\n            \n\n        } finally {\n            if(fis != null)      // <---- * stream closed in finally block *\n                fis.close();\n        }\n\n\n    } \n\nBy closing the stream in the finally block we gaurantee the stream will close.\n\nNote: This is also an issue for putMethod(String, File) of the same class.  I\nwill submit a bug report and fix for this shortly.\n\n\n\nCheers!\n\n\nMike N. Christoff\ndmx_dawg@hotmail.com"}, {"count": 3, "tags": [], "bug_id": 40835, "text": "fix just committed in SVN, thanks", "id": 99261, "attachment_id": null, "creator": "antoine@apache.org", "creation_time": "2007-02-11T19:22:07Z", "time": "2007-02-11T19:22:07Z", "is_private": false}]