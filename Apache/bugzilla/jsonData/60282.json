[{"count": 0, "tags": [], "bug_id": 60282, "text": "short\tgetFontHeight()\nGet the font height in unit's of 1/20th of a point.\n\nType short is wrong. There must be a double.\nThe font size can be for example 8.5. Now it returns 8, throwing a fractional part.\n   \n  170 / 20 =8,5\n\nfrom HSSFFont:\n    public short getFontHeightInPoints()\n    {\n        return ( short ) (font.getFontHeight() / 20);\n    }\n\n\nfrom XSSFFont:\n    public short getFontHeightInPoints() {\n        return (short)(getFontHeight()/20);\n    }", "id": 194577, "time": "2016-10-20T12:04:22Z", "creator": "najh.ru@gmail.com", "creation_time": "2016-10-20T12:04:22Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 60282, "text": "Unfortunately, changing the return type of this method would break backwards compatibility.\n\nIf you need the accuracy of fractional points, perform this computation yourself using getFontHeight.\n\nWe could add a warning in the JavaDoc that fractional values are discarded.\nWe could also make the 20 constant a public constant in Font.\nOtherwise we could try to change the return type through some slow deprecation process.", "id": 197098, "time": "2017-02-17T05:33:48Z", "creator": "onealj@apache.org", "creation_time": "2017-02-17T05:33:48Z", "is_private": false, "attachment_id": null}]