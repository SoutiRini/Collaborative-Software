[{"count": 0, "tags": [], "bug_id": 61104, "text": "Created attachment 34997\ncode file\n\nI have added log output, as follow:\nwriter = new BufferedWriter(new FileWriter(textFile));\nInputStream is = new FileInputStream(file);\n\nLOGGER.info(\"bytes:{}\",is.available());\nLOGGER.info(\"SIGN1\");\ndocument = new XWPFDocument(is);\nLOGGER.info(\"SIGN2\");\nif(null == document){\n    LOGGER.info(\"document is null\");\n}\n\nextractor = new XWPFWordExtractor(document);\nwriter.write(extractor.getText());\nwriter.flush();\nLOGGER.info(\"Extract text from {}, write text to {}\", file.getName(), textFile);\n\nthe output is as follow:\n[INFO ][2017-05-18 10:19:41][io.transwarp.extractor.ExtractorWorker.run(ExtractorWorker.java:27)]pool-1-thread-1 start extracting doc:E:\\IDEA\\DocumentDemo\\document_dir\\test.docx\n[INFO ][2017-05-18 10:19:41][io.transwarp.docutils.DocxExtractor.extract(DocxExtractor.java:41)]bytes:13331\n[INFO ][2017-05-18 10:19:41][io.transwarp.docutils.DocxExtractor.extract(DocxExtractor.java:42)]SIGN1\n\nthe code after \"document = new XWPFDocument(is);\" is not executed and the application is in RUNNING STATE  ,  and no exception or error is reported.\nI am also puzzled!!!", "id": 198815, "time": "2017-05-18T13:26:19Z", "creator": "xiaohui.zhang@transwarp.io", "creation_time": "2017-05-18T13:26:19Z", "is_private": false, "attachment_id": 34997}, {"count": 1, "tags": [], "bug_id": 61104, "attachment_id": null, "text": "Are you able to share the triggering .docx file?", "id": 198822, "time": "2017-05-19T15:43:55Z", "creator": "tallison@mitre.org", "creation_time": "2017-05-19T15:43:55Z", "is_private": false}, {"count": 2, "tags": [], "creator": "xiaohui.zhang@transwarp.io", "attachment_id": 34998, "id": 198829, "time": "2017-05-20T05:36:41Z", "bug_id": 61104, "creation_time": "2017-05-20T05:36:41Z", "is_private": false, "text": "Created attachment 34998\ndocx file"}, {"count": 3, "tags": [], "bug_id": 61104, "attachment_id": null, "is_private": false, "id": 198830, "time": "2017-05-20T05:37:40Z", "creator": "xiaohui.zhang@transwarp.io", "creation_time": "2017-05-20T05:37:40Z", "text": "(In reply to Tim Allison from comment #1)\n> Are you able to share the triggering .docx file?\n\nI have shared the triggering docx file"}, {"count": 4, "tags": [], "bug_id": 61104, "attachment_id": null, "id": 198968, "time": "2017-05-31T05:39:23Z", "creator": "onealj@apache.org", "creation_time": "2017-05-31T05:39:23Z", "is_private": false, "text": "I am unable to reproduce your issue with the provided file using the latest POI trunk code, tested locally on my computer. I removed code that appeared to be irrelevant to the demonstrated problem.\n\n    @Test\n    public void test61104() throws IOException {\n        File file = new File(\"test-data/document/61104.docx\");\n        InputStream is = new FileInputStream(file);\n        System.out.println(is.available());\n        XWPFDocument document = new XWPFDocument(is);\n        document.close();\n    }\n\nMy best guess is the issue you're having is due to ExtractorWorker or DocxExtractor. I am not familiar with the io.transwarp library, so I can't suggest anything more specific. Make sure you aren't writing to the file while you're reading from it (possibly by another thread, given how Worker classes tend to run in a multi-threaded environment). In general, POI is not thread safe.\n\nUsually any task that is run inside some kind of Worker is executed on its own thread, and has its own exception handler stack that will not inform the caller. Another possibility is that `document = XWPFDocument(is)` is throwing an exception that your thread never catches, causing the thread pool executor to suspend. Add some try/catch print code to make sure this isn't the case.\n\nIf you're running your program in some web container where your `file` object lives in some restricted filesystem with restricted I/O, the problem may be with the I/O layer of the container.\nYou could use POI's `IOUtils.readFully(is)` to see if there's an I/O problem on your platform.\n\nIf none of the above resolve your question, please respond with the following:\nAre you using poi-3.16.jar, poi-ooxml-3.16.jar, and poi-ooxml-schemas-3.16.jar?\nWhat happens when you remove buffered file writer and replace the loggers with System.out.println?\nWhat vendor and version of Java are you running?\nWhat OS are you running this on?"}, {"count": 5, "tags": [], "bug_id": 61104, "attachment_id": null, "text": "From the mailing list:\n> OS is Windows 10, JDK version is 1.7", "id": 198969, "time": "2017-05-31T05:41:32Z", "creator": "onealj@apache.org", "creation_time": "2017-05-31T05:41:32Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 61104, "text": "Looking at your full code example from attachment 34997, your FileInputStream `is` is never closed. Leaving an open file handle would likely cause problems the next time you try to create a FileInputStream from the same resource. This is another possible cause for your problem.", "id": 198970, "time": "2017-05-31T06:26:52Z", "creator": "onealj@apache.org", "creation_time": "2017-05-31T06:26:52Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 61104, "attachment_id": null, "is_private": false, "id": 199248, "time": "2017-06-16T18:40:50Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2017-06-16T18:40:50Z", "text": "I think we provided some suggestions as to the nature of the problem, thus closing this here for now, please reopen if you still think there is a bug in Apache POI and you have sample code that allows to reproduce the problem outside of your application."}]