[{"count": 0, "tags": [], "creator": "lesley.tay@macquarie.com", "attachment_id": null, "text": "Hi all,\n\nWe have a java 1.4.2_11 app running on Weblogic 8.1. Our Log4j version is 1.2.14. \n\nOur logs are set to roll on a daily basis at midnight. We've noticed that for 1 application, the logs have sometimes have a datestamp with a date in 1970.\nIt occurs every few days and I was wondering if anyone else has come across this issue. The usage of the app can be high and the logs can get to 100mbs in size.\n\nAn example of what we see in unix with the log file names:\nappname-appenv_host.log.1970-02-05.zip\nappname-appenv_host.2009-01-08.zip\n\nwhere both logs contain entries for the exact same day. Typically the log with the 1970 date has 1 entry only, and the log with the correct date will have the rest of the correct entries for the log (i.e. it flows on if you read the logging statements in order, no duplicate entries in either log file). We've also usually seen 1 log statement only in the log named with a 1970 date.\n\nHas anyone else ever seen anything like this? We have this same version of log4j in another app and have not seen the problem. We believe this may be a result of the size of the log i.e. larger log file, larger probability of this date corruption problem happening during the rollover.\n\nHere is our appender config snippet:\n\n    <appender name=\"FILE\" class=\"org.apache.log4j.DailyRollingFileAppender\">\n        <param name=\"File\" value=\"${app.logdir}/${appname}-${appenv}__HOSTNAME_.log\"/>\n        <param name=\"Append\" value=\"true\"/>\n\n        <!-- Rollover at midnight each day -->\n        <param name=\"DatePattern\" value=\"'.'yyyy-MM-dd\"/>\n\n        <layout class=\"org.apache.log4j.PatternLayout\">\n            <param name=\"ConversionPattern\" value=\"%d{ISO8601}\\t%-5p\\t(%t)\\t{%x}\\t[%c{1}]\\t%m%n\" />\n        </layout>\n    </appender>\n\n    <appender name=\"MAIL\" class=\"org.apache.log4j.net.SMTPAppender\">\n    \t<param name=\"Threshold\" value=\"ERROR\"/>\n    \t<param name=\"SMTPHost\" value=\"server\"/>\n    \t<param name=\"To\" value=\"to_email\"/>\n    \t<param name=\"From\" value=\"from_email\"/>\n    \t<param name=\"Subject\" value=\"blah\"/>\n    \t<param name=\"BufferSize\" value=\"1\"/>\n    \t<layout class=\"org.apache.log4j.PatternLayout\">\n       \t\t<param name=\"ConversionPattern\" value=\"%p - %d{ISO8601}%nCategory: %c%nNDC: %x%nThread: %t%n%nMessage:%n%m%n\"/>\n    \t</layout>\n    </appender>\n    \n    <appender name=\"ASYNC\" class=\"org.apache.log4j.AsyncAppender\">\n    \t<appender-ref ref=\"MAIL\"/>\n        <appender-ref ref=\"FILE\"/>\n    </appender>\n\n    <root>\n        <level value=\"INFO\"/>\n        <appender-ref ref=\"ASYNC\"/>\n    </root>\n\n\nAlso while looking at the DailyRollingFileAppender code, we noticed that there seems to be some un-threadsafe use of the SimpleDateFormat class and wondered if this could be the cause of the issue. It's initialised in activateOptions:\n\n    public void activateOptions() {\n        super.activateOptions();\n        if (datePattern != null && fileName != null) {\n            now.setTime(System.currentTimeMillis());\n            sdf = new SimpleDateFormat(datePattern);\n            int type = computeCheckPeriod();\n            printPeriodicity(type);\n            rc.setType(type);\n            File file = new File(fileName);\n            scheduledFilename = fileName + sdf.format(new Date(file.lastModified()));\n\n        } else {\n            LogLog.error(\"Either File or DatePattern options are not set for appender [\" + name + \"].\");\n        }\n    }\n\nand then reused in the rollOver() function:\n\n    /**\n     * Rollover the current file to a new file.\n     */\n    void rollOver() throws IOException {\n\n        /* Compute filename, but only if datePattern is specified */\n        if (datePattern == null) {\n            errorHandler.error(\"Missing DatePattern option in rollOver().\");\n            return;\n        }\n\n        String datedFilename = fileName + sdf.format(now);\n\n\n\nThanks,\nLesley", "id": 124217, "time": "2009-01-20T22:43:51Z", "bug_id": 46570, "creation_time": "2009-01-20T22:43:51Z", "is_private": false}]