[{"count": 0, "tags": [], "creator": "beck@odysseus.de", "text": "Please add the two static methods ExpressionFactory.newInstance(..) as described\nin http://jcp.org/aboutJava/communityprocess/maintenance/jsr245/245-MR1.html.\nThese changes make the EL \"self-contained\" and allow to plug-in third party EL\nimplementations like JUEL (http://juel.sf.net).", "id": 110342, "time": "2007-11-08T14:48:53Z", "bug_id": 43819, "creation_time": "2007-11-08T14:48:53Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 43819, "text": "Created attachment 21097\nPatch to make EL self-contained\n\nAdded patch.", "id": 110343, "time": "2007-11-08T14:52:03Z", "creator": "beck@odysseus.de", "creation_time": "2007-11-08T14:52:03Z", "is_private": false, "attachment_id": 21097}, {"count": 2, "attachment_id": 21097, "creator": "markt@apache.org", "is_private": false, "id": 110344, "time": "2007-11-08T15:27:46Z", "bug_id": 43819, "creation_time": "2007-11-08T15:27:46Z", "tags": [], "text": "Comment on attachment 21097\nPatch to make EL self-contained\n\nCDDL is not compatible with AL2 for source code."}, {"count": 3, "tags": [], "bug_id": 43819, "is_private": false, "text": "Created attachment 21099\nnew patch\n\nSorry... Updated the patch to be pure AL2.", "id": 110351, "time": "2007-11-09T01:29:07Z", "creator": "beck@odysseus.de", "creation_time": "2007-11-09T01:29:07Z", "attachment_id": 21099}, {"count": 4, "attachment_id": null, "bug_id": 43819, "text": "I haven't tested this personally but since the patch changes the signature of a\nspec API class I would assume that this would break tck compliance until a\njsr245-MR1 tck is obtained from sun.", "id": 111869, "time": "2007-12-18T15:56:59Z", "creator": "djencks@apache.org", "creation_time": "2007-12-18T15:56:59Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 43819, "attachment_id": null, "text": "My reading of 245-MR1 is that it will form part of JSP 2.2. I have added some\nTomcat 7 notes to trunk and included a reference to this issue.\n\nIf I have mis-read 245-MR1 and does become part of JSP 2.1 then we can come back\nto this issue once there is a maintenance release (ie when the spec actually\nchanges).", "id": 112304, "time": "2007-12-30T14:45:48Z", "creator": "markt@apache.org", "creation_time": "2007-12-30T14:45:48Z", "is_private": false}, {"count": 6, "attachment_id": 21446, "creator": "tuomas.kiviaho@iki.fi", "is_private": false, "id": 113283, "time": "2008-01-30T03:29:40Z", "bug_id": 43819, "creation_time": "2008-01-30T03:29:40Z", "tags": [], "text": "Created attachment 21446\nJspUtil.patch\n\norg.apache.jasper.compiler.JspUtil.validateExpressions(Mark, String, Class,\nFunctionMapper, ErrorDispatcher) seems to be already obsoleted. The declared\nstatic ExpressionFactory there can be safely removed."}, {"count": 7, "tags": [], "bug_id": 43819, "is_private": false, "text": "Created attachment 21447\nPageInfo.patch\n\nPageInfo holds ExpressionFactory instance which is only used by\nValidator.ValidateVisitor. Since PageInfo only is created in\nCompiler.generateJava and Validator.ValidateVisitor only used there the\ninstance can be safely be deprecated from PageInfo and moved to\nValidator.ValidateVisitor.", "id": 113284, "time": "2008-01-30T04:05:05Z", "creator": "tuomas.kiviaho@iki.fi", "creation_time": "2008-01-30T04:05:05Z", "attachment_id": 21447}, {"count": 8, "tags": [], "text": "Created attachment 21448\nNode.patch\n\nThe expressionFactory reference is used in Validator.Validate to catch invalid\njsp attribute expressions by using Node.JspAttribute.validateEL which has no\nother refences to it. Almost identical approach is used validating plain\nexpressions but the validation mechanism isn't incorporated with the\nNode.ELExpression. By combining these two the number of expression factory\nreferences can be cut down even further.", "is_private": false, "id": 113285, "creator": "tuomas.kiviaho@iki.fi", "time": "2008-01-30T06:18:05Z", "bug_id": 43819, "creation_time": "2008-01-30T06:18:05Z", "attachment_id": 21448}, {"count": 9, "tags": [], "bug_id": 43819, "attachment_id": 21450, "is_private": false, "id": 113289, "time": "2008-01-30T08:42:01Z", "creator": "tuomas.kiviaho@iki.fi", "creation_time": "2008-01-30T08:42:01Z", "text": "Created attachment 21450\nValidator.patch\n\nVariableMapper is the only place at JSP compile time that requires currently\nExpressionFactory. createValueExpression is the only method in use and it\nfunctions as a factory so ExpressionBuilder can be called directly instead and\nstill achieve the same functionality as before. Cross referencing to EL\nimplementation packages existed before as well but it's now just moved from\nPageInfo to Validator. Main difference is that after these changes there isn't\nanymore an explicit reference to ExpressionFactoryImpl at JSP compile time."}, {"count": 10, "tags": [], "bug_id": 43819, "attachment_id": 21451, "is_private": false, "id": 113290, "time": "2008-01-30T08:55:01Z", "creator": "tuomas.kiviaho@iki.fi", "creation_time": "2008-01-30T08:55:01Z", "text": "Created attachment 21451\njasper.compiler.patch"}, {"count": 11, "tags": [], "bug_id": 43819, "attachment_id": 21454, "text": "Created attachment 21454\njasper.compiler.patch2\n\nSecond attempt. I missed also coercion types from Validator from the original\npost. jsr245 enforces EL syntax and semantics way beyond #{} vs. ${} that make\nit impossible to get rid of expression building. This patch and the previous\nones only concentrates the EL validation in one location, nothing more. There\nseems to be also some level of syntax check done with ELParser and EL function\nmapper and these are compiler specific classes.", "id": 113298, "time": "2008-01-30T12:37:32Z", "creator": "tuomas.kiviaho@iki.fi", "creation_time": "2008-01-30T12:37:32Z", "is_private": false}, {"count": 12, "tags": [], "text": "Re-opening to evaluate the patches as these changes did become part of JSP 2.2", "is_private": false, "id": 133227, "creator": "markt@apache.org", "time": "2009-12-30T10:31:41Z", "bug_id": 43819, "creation_time": "2009-12-30T10:31:41Z", "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 43819, "attachment_id": null, "text": "This has been fixed in trunk and will be included in 7.0.0 onwards.\n\nThe patch applied was based on attachment 21099. The patch was not used directly for a couple of reasons:\n- it doesn't ensure InputStreams are closed\n- it caused JSP 2.1 TCK failures\n\nAttachment 21454 was ignored because:\n- it was not required\n- it does not make Jasper independent of o.a.el", "id": 133243, "time": "2009-12-31T01:05:49Z", "creator": "markt@apache.org", "creation_time": "2009-12-31T01:05:49Z", "is_private": false}, {"count": 14, "attachment_id": null, "bug_id": 43819, "is_private": false, "id": 133250, "time": "2009-12-31T07:00:33Z", "creator": "beck@odysseus.de", "creation_time": "2009-12-31T07:00:33Z", "tags": [], "text": "Can you give some details regarding JSP 2.1 TCK failures?\n\nI took a look at the code and I think the way you resolve el.properties in the JRE lib directory is not correct since\n\nSystem.getProperty(\"java.home\") + \"jre\" + SEP + \"lib\" + SEP + \"el.properties\"\n\nwill resolve to .../jre/jre/lib/el.properties."}, {"count": 15, "tags": [], "text": "(In reply to comment #14)\n> Can you give some details regarding JSP 2.1 TCK failures?\n\nOnly vaguely since the TCK is protected by an NDA. The proposed checkType() method failed when checking some numerical types. I think it was Double.TYPE where the failure occurred.\n\n> I took a look at the code and I think the way you resolve el.properties in the\n> JRE lib directory is not correct since\n> \n> System.getProperty(\"java.home\") + \"jre\" + SEP + \"lib\" + SEP + \"el.properties\"\n> \n> will resolve to .../jre/jre/lib/el.properties.\n\nThanks for the catch. I'll fix that in a sec.", "is_private": false, "id": 133251, "creator": "markt@apache.org", "time": "2009-12-31T07:11:55Z", "bug_id": 43819, "creation_time": "2009-12-31T07:11:55Z", "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 43819, "attachment_id": null, "id": 133252, "time": "2009-12-31T08:07:53Z", "creator": "beck@odysseus.de", "creation_time": "2009-12-31T08:07:53Z", "is_private": false, "text": "OK, seems like the checkType() method is no longer needed anyway.\n\nI think package org.apache.jasper.compiler needs some changes too, though this might not be in the scope of this bug. The ELParser class seems to parse expressions using its own internal parsing mechanism and doesn't support syntax for method invocations which is part of EE6. To eliminate redundancy, the code should probably be refactored to use an expression factory instead."}, {"count": 17, "tags": [], "bug_id": 43819, "is_private": false, "text": "(In reply to comment #16)\n> I think package org.apache.jasper.compiler needs some changes too, though this\n> might not be in the scope of this bug.\n\nCorrect. This discussion should be continued on the dev list.\n\n> The ELParser class seems to parse\n> expressions using its own internal parsing mechanism\n\nAs far as I recall (and it is a while since I looked at the EL code) that parser just parses something - eg an attribute value - into bits that are an expression and bits that are not. It doesn't parse the actual expressions.\n\n> and doesn't support syntax for method invocations which is part of EE6.\n\nNothing does yet. That is still on the Tomcat 7 todo list. Oddly enough I am working on it at the moment. First step will be to update the jtt file.\n\n> To eliminate redundancy, the code should probably be refactored to use an\n> expression factory instead.\n\nI'm not sure that refactoring is needed.\n\nMark", "id": 133253, "time": "2009-12-31T09:55:14Z", "creator": "markt@apache.org", "creation_time": "2009-12-31T09:55:14Z", "attachment_id": null}]