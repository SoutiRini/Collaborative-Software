[{"attachment_id": null, "tags": [], "bug_id": 1126, "is_private": false, "count": 0, "id": 1608, "time": "2001-03-26T18:11:10Z", "creator": "jim_stearns@hp.com", "creation_time": "2001-03-26T18:11:10Z", "text": "On DOS (not Linux or cygwin), ant.bat calls lcp.bat to add the ant libraries, \nsuch as lib\\parser.jar, to the CLASSPATH passed to ant.  The problem is that \nlcp.bat *prepends* (not appends) these libraries to the user's classpath.  \n\nWhen building an application using a Level 2 DOM parser (for namespace \nsupport), the compiles fail because ant's parser.java library is found first, \nand it is a Level 1 DOM parser.\n\nFix: in lcp.bat, change\n\n    set LOCALCLASSPATH=%1;%LOCALCLASSPATH%\n\nTo\n\n    set LOCALCLASSPATH=%LOCALCLASSPATH%;%1\n\nThis problem is restricted to version 1.3; version 1.2 correctly appends rather \nthan prepends.  I'm curious how the defect was introduced.\n\nThanks,\n\nJim Stearns"}, {"count": 1, "tags": [], "text": "Not being able to find the original lcp.bat used for Ant 1.2 (it looks like it\nwas deleted out of jakarta-ant/bin and moved to jakarta-ant/src/scripts, in the\nprocess losing the history) I can't find any comments explaining the change.\n\nIs there any reason to *not* implement the requested change?  The comment in the\nant script indicates it was changed to reflect the behaviour in the Windows\nversion (always prepend the jars to the classpath rather than append), but\naccording to this report, that wasn't always the case.", "attachment_id": null, "id": 3398, "creator": "glennm@apache.org", "time": "2001-07-04T07:04:59Z", "bug_id": 1126, "creation_time": "2001-07-04T07:04:59Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 1126, "attachment_id": null, "is_private": false, "id": 3404, "time": "2001-07-04T08:49:00Z", "creator": "glennm@apache.org", "creation_time": "2001-07-04T08:49:00Z", "text": "From Peter Donald:\n\nThe reason not to do it is that it inhibits using ant with no CLASSPATH set \nbecause it can lead to empty entries at start of CLASSPATH var. The way it \nworks now puts the possibly empty entries at end of CLASSPATH. Some JVMs stop \nreading CLASSPATH entries at first empty entry and thus would never see any \nof later entrys.\n---\nGood enough for me.  Its more important to ensure everything on the classpath is\nreadable for all JVMs.\n"}]