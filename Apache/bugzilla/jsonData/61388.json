[{"count": 0, "tags": [], "creator": "tom.tao@protonmail.com", "attachment_id": null, "is_private": false, "id": 200218, "time": "2017-08-07T15:58:20Z", "bug_id": 61388, "creation_time": "2017-08-07T15:58:20Z", "text": "If you return an unescaped %0A (\\n) in a RewriteMap prg: result, Apache (resp. mod_rewrite) becomes confused. It mixes up content results among all requesting clients.\n\nExample Apache Config:\n\n...\n<Location /test>\n    Require ip ...\n\n    RewriteRule /html/(.+) \"/${rewriteUrl:%{REQUEST_URI}?%{QUERY_STRING}}\" [DPI]\n    RewriteRule /expired/forbidden - [F,L]\n</Location>\n\n<IfModule mod_rewrite.c>\n#    LogLevel info rewrite:trace7\n    Mutex file:/appl/locks rewrite-map\n    RewriteMap rewriteUrl   'prg:/appl/bin/rewriteUrl.bin'\n</IfModule>\n...\n\nSubmitting the URL http://test.com/test?func=FILE&file=foo.jpg%0Abar.jff mixes up apache results among all users, if the rewriteUrl prg unescapes %0A to a newline character and therefor returns 2 lines. This behaviour remains until Apache is restarted (graceful)."}, {"count": 1, "text": "Does it happen on 2.4.26 or later? Can you clarify what \"mixup? happens? Is it just that the rewritemap invocation is reading the additional line in the rewritemap program output instead of what would be generated for the new input?", "bug_id": 61388, "attachment_id": null, "id": 200219, "time": "2017-08-07T16:12:27Z", "creator": "covener@gmail.com", "creation_time": "2017-08-07T16:12:27Z", "tags": [], "is_private": false}, {"count": 2, "text": "We use httpd.x86_64 (2.4.6-45.el7).\n\nThe rewritemap prg gets the raw query, unescapes it and prints (because of the now unescaped %0A (newline)) 2 lines to stdout. This results in the following behaviour:\n\nUser A requests file X and gets file X.\nUser B requests file Y and gets file Y\nUser A requests file Z%0Aanything.\nFrom now on the results User A and User B are receiving are random.\nUser A requests file X and gets file X or file Y or 404.\nUser B requests file X and gets file X or file Y or 404.\n...\nhttpd -k graceful ...\neverything's ok again.", "bug_id": 61388, "attachment_id": null, "id": 200220, "time": "2017-08-07T16:26:44Z", "creator": "tom.tao@protonmail.com", "creation_time": "2017-08-07T16:26:44Z", "tags": [], "is_private": false}, {"text": "I'm not sure if the later release would have prevented it.\n\nHowever, the mapping program must produce line-based output. I think mod_rewrite\ndiscarding multiple lines in the map output is an option but seeing as how you're on something 2.4.6-based It wouldn't be a very good idea to wait for it.\n\nBeyond correcting the mapping program or having mod_rewrite discard unexpected lines from the rewrite map program, sending the still-encoded request URL would be another way to stop the map from producing bad output so easily.  One way to \ndo this is to pass it a subset of %{THE_REQUEST}. But i am not sure if before 2.4.26 you may also see malicious CR/LF in %{THE_REQUEST}.", "tags": [], "bug_id": 61388, "is_private": false, "count": 3, "id": 200221, "time": "2017-08-07T16:51:30Z", "creator": "covener@gmail.com", "creation_time": "2017-08-07T16:51:30Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "tom.tao@protonmail.com", "attachment_id": null, "is_private": false, "id": 200222, "time": "2017-08-07T17:06:49Z", "bug_id": 61388, "creation_time": "2017-08-07T17:06:49Z", "text": "For me, it's no problem any more, since it was easy to fix in the mapping prg, once i found the cause of the problem (which was rather painful due to millions accesses to this webserver).\n\nI wanted to report this bug, because i think it is privacy-related. One bad guy could get access to other users websites just by submitting a %0A URL to a server running mod_rewrite (and of cause hoping, the rewritemap prg (if one is used) does not think about limiting its output). And i'm sure, there are many apaches < 2.4.26 out there."}]