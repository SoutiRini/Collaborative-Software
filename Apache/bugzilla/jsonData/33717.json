[{"count": 0, "tags": [], "text": "Now I may not be understanding the usage of the new conversion \ncharacter \"throwable\" in PatternLayout, but when I don't add it to my \nConversionPattern I still see the throwable added to the logging message.  Is \nthere a way to turn off the throwable/stack trace from being added to the \nlogging message after it is added to the logging event via something like \nlogger.error(Object message, Throwable t)?  It would be very useful in the case \nof the SMTPAppender when we don't want to email any stack trace information \n(security reasons) but we would like to have a file logger (i.e. \nRollingFileAppender) record the stack trace.  That way the SMTPAppender would \njust notify the system administrator of an error after which they could go an \nlook at the logs in a more secure setting.\n\nFor example the properties file might look like:\n\n# Output to email message - threshold is FATAL messages only\nlog4j.appender.SMTPAppender=org.apache.log4j.net.SMTPAppender\nlog4j.appender.SMTPAppender.BufferSize=512\nlog4j.appender.SMTPAppender.SMTPHost=???\nlog4j.appender.SMTPAppender.From=???\nlog4j.appender.SMTPAppender.To=???\nlog4j.appender.SMTPAppender.Subject=My App Email Error\nlog4j.appender.SMTPAppender.layout=org.apache.log4j.PatternLayout\nlog4j.appender.SMTPAppender.layout.ConversionPattern=%x%n%d [%t] %p %c - \nCritical Error in My App%n\nlog4j.appender.SMTPAppender.Threshold=ERROR\nlog4j.appender.SMTPAppender.evaluatorClass=???", "attachment_id": null, "bug_id": 33717, "id": 71422, "time": "2005-02-23T22:15:09Z", "creator": "sliepmann@rogers.com", "creation_time": "2005-02-23T22:15:09Z", "is_private": false}, {"count": 1, "tags": [], "creator": "lranatunga@studentloan.org", "attachment_id": null, "text": "(In reply to comment #0):\n\nWe're using an earlier version of log4j (1.2.8) so the following observations\nmay not be relevant, but have run into the same requirement so wanted to share\nour current solution.\n\nThe SMTPAppender appears to force the Throwable information to be appended\nregardless of the conversion pattern specified.  If the ignoresThrowable()\nmethod of the active layout returns true, the SMTPAppender takes it upon itself\nto append the call stack.  See org.apache.log4j.net.SMTPAppender#sendBuffer()\nline 220 in 1.2.8 (line 261 on the current 1.3alpha-6 release).  \n\nTo solve this problem, we are using our own subclass of PatternLayout which\noverrides ignoresThrowable() to return false.\n\nI'm not sure why PatternLayout claims that it ignoresThrowable.  In 1.2.8, a\npattern of %m%n returns the message + call stack - event.getRenderedMessage() is\nused instead of event.getMessage().  I'm guessing this was necessary since there\nwas no pattern token for the throwable info.  \n\nFrom your post, it appears there's now a way to include throwable into the\npattern; perhaps the SMTPAppender no longer needs to append the throwable info\nitself?\n\nHTH.\nlasitha", "id": 80634, "time": "2005-09-30T04:20:14Z", "bug_id": 33717, "creation_time": "2005-09-30T04:20:14Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 33717, "attachment_id": null, "id": 131049, "time": "2009-10-10T10:20:01Z", "creator": "carnold@apache.org", "creation_time": "2009-10-10T10:20:01Z", "is_private": false, "text": "Fixed in EnhancedPatternLayout in extras companion with revision 823889.  log4j 1.3 has been abandoned.\n\nAdded  %throwable{none} to suppress exception entirely.  The existing %throwable{short} will output the first line of the stack trace and a newline.\n\nWithout a %throwable in the pattern, PatternLayout.ignoresThrowable returns true which results in most appenders handling the stack trace themselves.  Prior to %throwable{none}, there was no way short of overriding the class to totally suppress the trace info."}]