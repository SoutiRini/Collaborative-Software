[{"count": 0, "tags": [], "bug_id": 34542, "text": "When a script does an echo $0 with mod_cgid enabled then only the filename is \nprinted and the whole path is not printed which is not the case with mod_cgi. \nBy removing the following lines from cgid_handler() from mod_cgid.c the whole \npath can be obtained.\n--------------------------\n\n    conf = ap_get_module_config(r->server->module_config, &cgid_module);\n    is_included = !strcmp(r->protocol, \"INCLUDED\");\n\n-    if ((argv0 = strrchr(r->filename, '/')) != NULL)\n-        argv0++;\n-    else\n-        argv0 = r->filename;\n\n    nph = !(strncmp(argv0, \"nph-\", 4));\n\n-    if ((argv0 = strrchr(r->filename, '/')) != NULL)\n-        argv0++;\n-    else\n        argv0 = r->filename;\n\n    if (!(ap_allow_options(r) & OPT_EXECCGI) && !is_scriptaliased(r))\n        return log_scripterror(r, conf, HTTP_FORBIDDEN, 0,\n                               \"Options ExecCGI is off in this directory\");\n    if (nph && is_included)\n        return log_scripterror(r, conf, HTTP_FORBIDDEN, 0,\n                               \"attempt to include NPH CGI script\");\n\n-------------------\nThe first 4 lines are reduntant as the same 4 statements are repeated after a \nharmless strncmp function call. The 3 lines removed ensure that argv0 is not \nstripped of the path. \n\nI have looked at the places where argv0 is later used and if it requires only \nthe path name or just the filename is sufficient but haven't found any. Just \nwanted to know if there is any dependency. I have got apache to build and run \nand with the fix the whole path is displayed. Haven't found any dependency till \nnow. Just wanted to confirm.", "id": 73862, "time": "2005-04-20T16:38:13Z", "creator": "pradeep.smani@gmail.com", "creation_time": "2005-04-20T16:38:13Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "text": "But that would break nph-scripts, wouldn't it?", "id": 73883, "time": "2005-04-21T08:34:10Z", "bug_id": 34542, "creation_time": "2005-04-21T08:34:10Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 34542, "attachment_id": null, "id": 73890, "time": "2005-04-21T11:04:39Z", "creator": "pradeep.smani@gmail.com", "creation_time": "2005-04-21T11:04:39Z", "is_private": false, "text": "(In reply to comment #1)\n> But that would break nph-scripts, wouldn't it?\nI have just removed the second 3 lines leaving the first 4 lines intact. I have \ntested that with nph scripts. It works. This ensures that nph scripts get just \nthe filename and the others get the whole path.\n\nSo the code is \n---------------\nconf = ap_get_module_config(r->server->module_config, &cgid_module);\n    is_included = !strcmp(r->protocol, \"INCLUDED\");\n\n    if ((argv0 = strrchr(r->filename, '/')) != NULL)\n        argv0++;\n    else\n        argv0 = r->filename;\n\n    nph = !(strncmp(argv0, \"nph-\", 4));\n\n-    if ((argv0 = strrchr(r->filename, '/')) != NULL)\n-        argv0++;\n-    else\n        argv0 = r->filename;\n\n    if (!(ap_allow_options(r) & OPT_EXECCGI) && !is_scriptaliased(r))\n        return log_scripterror(r, conf, HTTP_FORBIDDEN, 0,\n                               \"Options ExecCGI is off in this directory\");\n    if (nph && is_included)\n        return log_scripterror(r, conf, HTTP_FORBIDDEN, 0,\n                               \"attempt to include NPH CGI script\");\n\n------------------------------------------------\n"}, {"count": 3, "tags": [], "bug_id": 34542, "attachment_id": null, "id": 79140, "time": "2005-08-29T22:13:18Z", "creator": "wrowe@apache.org", "creation_time": "2005-08-29T22:13:18Z", "is_private": false, "text": "\n  Yes, this behavior was broken between mod_cgi and mod_cgid, because the\n  developer hadn't noted that we -tested- argv0 in mod_cgi, but then passed\n  argv[0] for the creation call, and therefore assumed the short name was\n  the argv[0] argument.\n\n  Fixed in SVN trunk, and proposed for backport.\n\n  "}]