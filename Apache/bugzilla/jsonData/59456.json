[{"count": 0, "tags": [], "text": "This might be best handled by an update to the documentation, but I discovered that one must be careful when using RequestHeaders and using header names containing underscores (which get converted to dashes), as they can be spoofed. This is especially important if validating security information, for example with variables provided by mod_ssl.\n\nFor example, the following header can be spoofed (overridden) by a client:\n\nRequestHeader set SSL_CLIENT_VERIFY \"%{SSL_CLIENT_VERIFY}s\"  # Don't do this!\n\nHowever these cannot:\n\nRequestHeader set SSL-CLIENT-VERIFY \"%{SSL_CLIENT_VERIFY}s\"  # Do this\nRequestHeader set Ssl-Client-Verify \"%{SSL_CLIENT_VERIFY}s\"  # Do this\n\nAlthough in all cases the resulting header will be \"Ssl-Client-Verify\", a client can actually spoof the first form by providing a forged header exactly matching the final header name.\n\nAgain, this is arguably not a bug, however it can result in unexpected behavior when people lazily create configurations with underscores (and unfortunately there are plenty of bad \"guides\" with this sort of example configuration). It would be worth clarifying this in the documentation, as the behavior is not obvious.\n\nThis is on 2.4.7, but I didn't find anything suggesting this behavior changed in more recent versions.", "attachment_id": null, "id": 190819, "creator": "lscotte@gmail.com", "time": "2016-05-11T00:29:11Z", "bug_id": 59456, "creation_time": "2016-05-11T00:29:11Z", "is_private": false}, {"count": 1, "tags": [], "creator": "lscotte@gmail.com", "attachment_id": null, "id": 192704, "time": "2016-07-28T20:12:25Z", "bug_id": 59456, "creation_time": "2016-07-28T20:12:25Z", "is_private": false, "text": "I'm a bit surprised that nobody has jumped on this as it's NOT an Apache issue. I did not do my due diligence on this, and it turns out to entirely be a problem in the request processing framework of the application Apache is proxying requests to. It turns out that some frameworks follow old CGI specs that prohibit hyphens (\"-\") in request header names. Apache is passing along both it's header and the client-generated headers, but the proxied framework converts \"-\" to \"_\" which results in a map/dictionary key collision.\n\nThe net results of this is my \"Do this\" advise is wrong and better advice (if you have no control over what the request processing code does) is use constructs like:\n\nRequestHeader set SSLCLIENTVERIFY \"%{SSL_CLIENT_VERIFY}s\"  # Do this\n\nI.e. mitigate the issue completely by avoiding \"-\" and \"_\" entirely."}, {"count": 2, "tags": [], "text": "Closing as RESOLVED/INVALID.", "attachment_id": null, "id": 192705, "creator": "lscotte@gmail.com", "time": "2016-07-28T20:12:52Z", "bug_id": 59456, "creation_time": "2016-07-28T20:12:52Z", "is_private": false}]