[{"count": 0, "tags": [], "creator": "chang.zhao@c-reaction.com", "attachment_id": null, "id": 62277, "time": "2004-08-21T03:36:32Z", "bug_id": 30783, "creation_time": "2004-08-21T03:36:32Z", "is_private": false, "text": "Create a new Excel Document, select tools->protect workbook, and type in a \npassword.\nThis will cause\n\nPOIFSFileSystem fs = new POIFSFileSystem(i);\nHSSFWorkbook wb = new HSSFWorkbook(fs); <=\n\nto fail.\n\nUpon investigation of this bug, it seems that a protected workbook (but not a \nprotected sheet) will cause the system to report length inaccurately:\n\ni.e. in FontRecord \nfillFields(byte [] data, short size, int offset)\n...\n field_10_font_name_len      = data[ 14 + offset ];\n...\n\non an unprotected workbook would give a sane value like 5.  However, on a \nprotected workbook it would report a wierd value like 49.  I believe the \nprevious bugs with ArrayOutofBoundsException s might be related to this \nincorrect length reporting.  This is not limited to length, other fields are \ngoing insane as well.\n\nFurther, further investigation turns out that protected workbooks have an extra \nrecord of type 47, length 56 right between BOF and InterfaceHeader, and it \nlooks like every record after that record (including the interfaceheader) got \neverything scambled.\n\n\nOn a related note,  as I was looking at FontRecord.java, in \nfillFields(byte [] data, short size, int offset)\n\nif (data[ 15 ] == 0) {   // is compressed unicode\n    field_11_font_name = StringUtil.getFromCompressedUnicode(data, 16,\n        LittleEndian.ubyteToInt(field_10_font_name_len));\n}\n\nshould perhaps be\nif (data[ 15 + offset] == 0) {\n    field_11_font_name = StringUtil.getFromCompressedUnicode(data, 16 + offset,\n         LittleEndian.ubyteToInt(field_10_font_name_len));\n\n}\n\n?  Or is there any reason that offset shouldn't be added?\n\nThanks,\n\n\nCZ"}, {"count": 1, "tags": [], "creator": "glens@apache.org", "text": "We're not planning support for protected workbooks at this stage (it's in the\nFAQ I believe).  It is unclear to us from a legal point of view whether we're\nallowed to tackle decrypting protected workbooks so we're playing it safe.  If\nyou wish to independently tackle this feel free but unless we can get a clear\nruling on this it's probably not going to make it into POI proper.", "id": 63786, "time": "2004-09-19T01:34:09Z", "bug_id": 30783, "creation_time": "2004-09-19T01:34:09Z", "is_private": false, "attachment_id": null}]