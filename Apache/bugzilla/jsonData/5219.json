[{"count": 0, "tags": [], "bug_id": 5219, "attachment_id": null, "id": 8480, "time": "2001-11-30T16:56:28Z", "creator": "alan_f_gates@yahoo.com", "creation_time": "2001-11-30T16:56:28Z", "is_private": false, "text": "The PathConvert task does not allow for path separators to be more than one\ncharacter.  \n\nSo if you give it this:\n\n<pathconvert pathsep=\"\\\\\" property=\"newpath\" refid=\"oldpath\">\n\nthe path separators in newpath are set to \\, not \\\\.\n\nI checked the source code, and confirmed that it is only taking the first\ncharacter from the string given in the pathsep attribute."}, {"count": 1, "tags": [], "creator": "umagesh@apache.org", "attachment_id": null, "id": 10047, "creation_time": "2002-01-29T23:43:15Z", "time": "2002-01-29T23:43:15Z", "bug_id": 5219, "text": "Might be a dumb question:  but which operating system uses more than one \ncharacter for a path separator?  I have no problems commiting this patch, but\nwould like to see the use-case first.", "is_private": false}, {"count": 2, "tags": [], "bug_id": 5219, "attachment_id": null, "id": 10055, "time": "2002-01-30T02:52:02Z", "creator": "umagesh@apache.org", "creation_time": "2002-01-30T02:52:02Z", "is_private": false, "text": "Comments from Alan:\n\n> I don't know of any OS that uses a multi-character path separator.  My\n> use case is that I have a template java properties file which includes\n> filepaths.  I use this to build a java properties file specific to the\n> user and OS.  To do the paths in the file, I use PathConvert.  But if I\n> tell PathConvert to set the paths to Windows style, it creates paths like:\n> c:\\product\\bin\\exec.  When java reads these in a properies file, it\n> takes the backslashes to be escapes, so my path ends up as\n> c:productbinexec in my java program.  In order for java to read it\n> properly from the properties file, the path needs to be written as\n> c:\\\\product\\\\bin\\\\exec.  So that's why I need a multi-character path\n> separator.\n>\n> Alan.\n>\n"}, {"count": 3, "tags": [], "bug_id": 5219, "is_private": false, "text": "Alan:\nI find this use case you gave to modify PathConvert invalid.  An alternative\nfor you is to use the <replace> task to convert all \\ to \\\\ in the file\nafter generating the file.\n\nIn Ant words...\n<pathconvert pathsep=\"\\\" property=\"newpath\" refid=\"oldpath\">\n<...write to properties file prop.txt/>\n<replace file=\"prop.txt\" token=\"\\\" value=\"\\\\\"/>\n\nI will mark this Problem Report as 'WontFix'.  Please reopen this with\nadditional details if the solution I suggest will not work for you.\n\nThanks,\nMagesh\n", "id": 10056, "time": "2002-01-30T02:56:40Z", "creator": "umagesh@apache.org", "creation_time": "2002-01-30T02:56:40Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 5219, "is_private": false, "text": "Using the replace task will not work in this case.  The paths are stored in Unix\nformat in the template, not windows format.  And I cannot replace all forward\nslashes with two backslashes because other items in the file (such as http\naddresses) use foward slashes that would be inadvertatently replaced.", "id": 10057, "time": "2002-01-30T03:36:36Z", "creator": "alan_f_gates@yahoo.com", "creation_time": "2002-01-30T03:36:36Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "umagesh@apache.org", "attachment_id": null, "text": "After you convert it to Windows format using pathconvert, you said you save it \nin a properties file.  If you use the replace task on that file, it will work?  \nPlease post the relevant portion of your build.xml snippet.\nI am not suggesting you do away with pathconvert.  All I am saying is use \n<replace> along with <pathconvert>", "id": 10059, "time": "2002-01-30T04:08:07Z", "bug_id": 5219, "creation_time": "2002-01-30T04:08:07Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 5219, "text": "Due to company policy, I can't post the relevant portion of my build.xml.\n\nI think the solution you suggest would work.\n\nHowever, I would also note, that the java property file.separator is a string. \nI do not see a reason to narrow it to a character, as the ant implementation has\ndone.\n", "id": 10060, "time": "2002-01-30T04:30:03Z", "creator": "alan_f_gates@yahoo.com", "creation_time": "2002-01-30T04:30:03Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 5219, "attachment_id": null, "id": 10074, "time": "2002-01-30T15:17:58Z", "creator": "umagesh@apache.org", "creation_time": "2002-01-30T15:17:58Z", "is_private": false, "text": "Alan:\nTake a look at this link (under the Field Summary Section):\nhttp://java.sun.com/j2se/1.3/docs/api/java/io/File.html\nRepresentation as String is only for convenience.\n\nSince you mentioned that the alternative I suggested will work for you, I am \ngoing to mark this as WONTFIX again.\n"}]