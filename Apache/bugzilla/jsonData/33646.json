[{"count": 0, "tags": [], "creator": "speeves@erikin.com", "attachment_id": null, "text": "There is a bug in mod_auth_ldap that appears when using require group. \nEssentially, the require line is split on the first white space, here on lines\n509-510:\n\nmod_auth_ldap.c:507-512\nmethod_restricted = 1;\n\t\nt = reqs[x].requirement;\nw = ap_getword_white(r->pool, &t);    \n\nif (strcmp(w, \"valid-user\") == 0) {\n\nBut, if we are using require group, the require line is not split again.  This\ncauses problems if you want to require more than one group per line. (ie: if you\nare using two types of authentication or authorisation (mod_auth and mod_auth_ldap):\n\nrequire group cn=master,ou=admin,ou=test,ou=web,dc=example,dc=com admin\n\nIn the past, I have worked around this by placing multiple requires in a\ncontainer, which has worked fine.  Now, though, wee are trying to rewrite our\nconf file using mod_perl, and want to make it easier by only having one require.\n The following patch fixes this problem.  \n\n--- mod_auth_ldap.c.bak\t2005-02-16 07:58:25.000000000 -0600\n+++ mod_auth_ldap.c\t2005-02-18 12:39:47.000000000 -0600\n@@ -631,31 +631,34 @@\n             ap_log_rerror(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, 0, r, \n                           \"[%d] auth_ldap authorise: require group: testing for\ngroup membership in \\\"%s\\\"\", \n \t\t          getpid(), t);\n-\n             for (i = 0; i < sec->groupattr->nelts; i++) {\n-\t        ap_log_rerror(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, 0, r, \n-                              \"[%d] auth_ldap authorise: require group: testing\nfor %s: %s (%s)\", getpid(),\n-                              ent[i].name, sec->group_attrib_is_dn ? req->dn :\nreq->user, t);\n-\n-                result = util_ldap_cache_compare(r, ldc, sec->url, t, ent[i].name, \n-                                     sec->group_attrib_is_dn ? req->dn :\nreq->user);\n-                switch(result) {\n-                    case LDAP_COMPARE_TRUE: {\n-                        ap_log_rerror(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, 0, r, \n-                                      \"[%d] auth_ldap authorise: require group: \"\n-                                      \"authorisation successful (attribute %s)\n[%s][%s]\",\n-                                      getpid(), ent[i].name, ldc->reason,\nldap_err2string(result));\n-                        return OK;\n+\t        /* We need to break up the group array here  */\n+\t        while (t[0]) {\n+\t\t    w = ap_getword_conf(r->pool, &t);\n+\t            ap_log_rerror(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, 0, r, \n+                                  \"[%d] auth_ldap authorise: require group:\ntesting for %s: %s (%s)\", getpid(),\n+                                  ent[i].name, sec->group_attrib_is_dn ?\nreq->dn : req->user, w);\n+\n+                    result = util_ldap_cache_compare(r, ldc, sec->url, w,\nent[i].name, \n+                                         sec->group_attrib_is_dn ? req->dn :\nreq->user);\n+                    switch(result) {\n+                        case LDAP_COMPARE_TRUE: {\n+                            ap_log_rerror(APLOG_MARK,\nAPLOG_DEBUG|APLOG_NOERRNO, 0, r, \n+                                          \"[%d] auth_ldap authorise: require\ngroup: \"\n+                                          \"authorisation successful (attribute\n%s) [%s][%s]\",\n+                                          getpid(), ent[i].name, ldc->reason,\nldap_err2string(result));\n+                            return OK;\n+                        }\n+                        default: {\n+                            ap_log_rerror(APLOG_MARK,\nAPLOG_DEBUG|APLOG_NOERRNO, 0, r, \n+                                          \"[%d] auth_ldap authorise: require\ngroup \\\"%s\\\": \"\n+                                          \"authorisation failed [%s][%s]\",\n+                                          getpid(), w, ldc->reason,\nldap_err2string(result));\n+                        }\n                     }\n-                    default: {\n-                        ap_log_rerror(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, 0, r, \n-                                      \"[%d] auth_ldap authorise: require group\n\\\"%s\\\": \"\n-                                      \"authorisation failed [%s][%s]\",\n-                                      getpid(), t, ldc->reason,\nldap_err2string(result));\n-                    }\n-                }\n+\t        }\n             }\n-        }\n+\t}\n         else if (strcmp(w, \"ldap-attribute\") == 0) {\n             while (t[0]) {\n                 w = ap_getword(r->pool, &t, '=');\n\nwhile (t[0]), it calls ap_getword_conf, splits the group on white space, and\ntests for group membership.  The only problem with this would be in situations\nwhere the LDAP group DN contains a white space, (for instance,\ncn=group,ou=Applications Container,dc=example,dc=com).  In this case,\nap_getword_conf would split the group dn in half, and authorisation would fail.\n To get around this problem, I have found that ap_getword_conf handles\nsingle-quotes correctly, allowing you to place single-quotes around a group\nwhich contains a white space.  Here is an example:\n\nrequire group 'cn=master,ou=admin,ou=test web,ou=web,dc=example,dc=com' admin\n\nThis will authorise correctly, as will this:\n\nrequire group 'cn=master,ou=admin,ou=test web,ou=web,dc=example,dc=com'\n'cn=master,ou=testing,ou=test web,ou=web,dc=example,dc=com'  admin\n\nHere is my working Location container for an example:\n\n<Location /_publish>\n  ###### begin of mod_auth\n  AuthType Basic\n  AuthName \"Stinky monkey has bad breathe!!\"\n\n  AuthAuthoritative Off\n  AuthUserFile /etc/apache/access/service.pwd\n  AuthGroupFile /etc/apache/access/htgroup.wwwroot\n  ###### end of mod_auth\n\n  ##### Beginning mod_auth_ldap ##########################\n  AuthLDAPURL ldap://example.com:389/ou=people,dc=example,dc=com?uid\n\n  require group 'cn=master,ou=admin,ou=test web,ou=web,dc=example,dc=com'\n'cn=master,ou=testing,ou=test web,ou=web,dc=example,dc=com'  admin\n  AuthLDAPBindDN \"cn=admin,dc=example,dc=com\"\n  AuthLDAPBindPassword \"password\"\n  ##### End mod_auth_ldap ##########################\n\n  Dav \n  Options None\n  ForceType text/plain\n</Location>", "id": 71230, "time": "2005-02-19T03:19:38Z", "bug_id": 33646, "creation_time": "2005-02-19T03:19:38Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 33646, "attachment_id": 14325, "id": 71231, "time": "2005-02-19T03:20:53Z", "creator": "speeves@erikin.com", "creation_time": "2005-02-19T03:20:53Z", "is_private": false, "text": "Created attachment 14325\n[PATCH] mod_auth_ldap fix for multiple groups on require line"}, {"count": 2, "tags": [], "bug_id": 33646, "attachment_id": 14325, "id": 71303, "time": "2005-02-21T13:27:17Z", "creator": "speeves@erikin.com", "creation_time": "2005-02-21T13:27:17Z", "is_private": false, "text": "Comment on attachment 14325\n[PATCH] mod_auth_ldap fix for multiple groups on require line\n\n--- mod_auth_ldap.c.bak 2005-02-16 07:58:25.000000000 -0600\n+++ mod_auth_ldap.c\t2005-02-18 12:39:47.000000000 -0600\n@@ -631,31 +631,34 @@\n\t     ap_log_rerror(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, 0, r, \n\t\t\t   \"[%d] auth_ldap authorise: require group: testing\nfor group membership in \\\"%s\\\"\", \n\t\t\t  getpid(), t);\n-\n\t     for (i = 0; i < sec->groupattr->nelts; i++) {\n-\t\tap_log_rerror(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, 0, r, \n-\t\t\t       \"[%d] auth_ldap authorise: require group:\ntesting for %s: %s (%s)\", getpid(),\n-\t\t\t       ent[i].name, sec->group_attrib_is_dn ? req->dn :\nreq->user, t);\n-\n-\t\t result = util_ldap_cache_compare(r, ldc, sec->url, t,\nent[i].name, \n-\t\t\t\t      sec->group_attrib_is_dn ? req->dn :\nreq->user);\n-\t\t switch(result) {\n-\t\t     case LDAP_COMPARE_TRUE: {\n-\t\t\t ap_log_rerror(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO,\n0, r, \n-\t\t\t\t       \"[%d] auth_ldap authorise: require\ngroup: \"\n-\t\t\t\t       \"authorisation successful (attribute %s)\n[%s][%s]\",\n-\t\t\t\t       getpid(), ent[i].name, ldc->reason,\nldap_err2string(result));\n-\t\t\t return OK;\n+\t\t/* We need to break up the group array here  */\n+\t\twhile (t[0]) {\n+\t\t    w = ap_getword_conf(r->pool, &t);\n+\t\t    ap_log_rerror(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO, 0, r, \n+\t\t\t\t   \"[%d] auth_ldap authorise: require group:\ntesting for %s: %s (%s)\", getpid(),\n+\t\t\t\t   ent[i].name, sec->group_attrib_is_dn ?\nreq->dn : req->user, w);\n+\n+\t\t     result = util_ldap_cache_compare(r, ldc, sec->url, w,\nent[i].name, \n+\t\t\t\t\t  sec->group_attrib_is_dn ? req->dn :\nreq->user);\n+\t\t     switch(result) {\n+\t\t\t case LDAP_COMPARE_TRUE: {\n+\t\t\t     ap_log_rerror(APLOG_MARK,\nAPLOG_DEBUG|APLOG_NOERRNO, 0, r, \n+\t\t\t\t\t   \"[%d] auth_ldap authorise: require\ngroup: \"\n+\t\t\t\t\t   \"authorisation successful (attribute\n%s) [%s][%s]\",\n+\t\t\t\t\t   getpid(), ent[i].name, ldc->reason,\nldap_err2string(result));\n+\t\t\t     return OK;\n+\t\t\t }\n+\t\t\t default: {\n+\t\t\t     ap_log_rerror(APLOG_MARK,\nAPLOG_DEBUG|APLOG_NOERRNO, 0, r, \n+\t\t\t\t\t   \"[%d] auth_ldap authorise: require\ngroup \\\"%s\\\": \"\n+\t\t\t\t\t   \"authorisation failed [%s][%s]\",\n+\t\t\t\t\t   getpid(), w, ldc->reason,\nldap_err2string(result));\n+\t\t\t }\n\t\t     }\n-\t\t     default: {\n-\t\t\t ap_log_rerror(APLOG_MARK, APLOG_DEBUG|APLOG_NOERRNO,\n0, r, \n-\t\t\t\t       \"[%d] auth_ldap authorise: require group\n\\\"%s\\\": \"\n-\t\t\t\t       \"authorisation failed [%s][%s]\",\n-\t\t\t\t       getpid(), t, ldc->reason,\nldap_err2string(result));\n-\t\t     }\n-\t\t }\n+\t\t}\n\t     }\n-\t }\n+\t}\n\t else if (strcmp(w, \"ldap-attribute\") == 0) {\n\t     while (t[0]) {\n\t\t w = ap_getword(r->pool, &t, '=');"}, {"count": 3, "attachment_id": 14333, "bug_id": 33646, "is_private": false, "id": 71304, "time": "2005-02-21T13:30:06Z", "creator": "speeves@erikin.com", "creation_time": "2005-02-21T13:30:06Z", "tags": [], "text": "Created attachment 14333\n[PATCH] mod_auth_ldap fix for multiple groups on require line\n\ngrabbed the wrong file on the initial submission :P"}, {"count": 4, "attachment_id": null, "bug_id": 33646, "is_private": false, "id": 72089, "time": "2005-03-09T22:36:44Z", "creator": "bnicholes@apache.org", "creation_time": "2005-03-09T22:36:44Z", "tags": [], "text": "This will not work with the new direction that mod_authnz_ldap has taken in \nApache 2.1/2.2.  The \"group\" attribute is no longer shared between mod_auth \nand other authentication modules like mod_authnz_ldap.  Since the \nauthorization stage has been split from the authentication stage and in most \ncases implemented in different modules, modules like mod_authnz_ldap now have \na different attribute for handling groups (require ldap-group).  To use both \nLDAP and group file authorization would require:\n\n require ldap-group cn=public-users,o=ctx\n require group mygroup\n\n\n"}]