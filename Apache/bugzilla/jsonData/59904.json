[{"count": 0, "tags": [], "creator": "sunqi800@163.com", "attachment_id": null, "text": "heap dump:\n\nClass Name\t                        Objects\t Shallow Heap\tRetained Heap\norg.apache.tomcat.util.buf.ByteChunk\t13220789 634597872\t>=643312600\norg.apache.tomcat.util.buf.MessageBytes 13194914 633355872\t>=1801383536\norg.apache.tomcat.util.buf.CharChunk\t13204864 528194560\t>=569456560\norg.apache.tomcat.util.http.ServerCookie 2579614 123821472\t>=1879787624\n\n\nmillion+ ServerCookie objects in the heap,it cause memery leak.\n\norg.apache.coyote.Request objcet contain a ServerCookies,it is a ServerCookie array,and the array length is 2048. \n\n\nso i have a test\n\n\n\n\t\tGetMethod getMethod = new GetMethod(\"http://127.0.0.1:8080/\");\n\n\t\tHeader h = new Header();\n\t\th.setName(\"Cookie\");\n\t\tStringBuilder sb=new StringBuilder();\n\t\tfor(int i=0;i<2000;i++){\n\t\t\tsb.append(\"a=b;\");\n\t\t}\n\t\th.setValue(sb.toString());\n\t\tgetMethod.addRequestHeader(h);\n\n\t\tint statusCode = httpClient.executeMethod(getMethod);\n\n\ndebug and get two thousand cookies in the request,and ServerCookie arrays is cached in heap.\n\nwe hava maxHeaderCount and maxHttpHeaderSize,but Cookie just as one header\nso we need maxCookieCount too.", "id": 192670, "time": "2016-07-27T06:31:47Z", "bug_id": 59904, "creation_time": "2016-07-27T06:31:47Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 59904, "attachment_id": null, "id": 192673, "time": "2016-07-27T11:25:32Z", "creator": "sunqi800@163.com", "creation_time": "2016-07-27T11:25:32Z", "is_private": false, "text": "ps\n\nwe use async servlet\uff0c\uff08If using Servlet 3.0 asynchronous processing, a good default is to use the larger of maxThreads and the maximum number of expected concurrent requests (synchronous and asynchronous),it is much larger than the default value of 200."}, {"count": 2, "tags": [], "bug_id": 59904, "attachment_id": null, "id": 192674, "time": "2016-07-27T14:43:07Z", "creator": "huxing.zhang@gmail.com", "creation_time": "2016-07-27T14:43:07Z", "is_private": false, "text": "We saw two issues in this case:\n\n1) the size of org.apache.tomcat.util.http.Cookies#scookies array never gets shrunk after recycle,  once it is dynamically resized. \n\n2) the number of org.apache.tomcat.util.http.ServerCookie object can be dramatically large, which might lead to memory leak. A maxHeaderSize of 8k has limit the number of ServerCookie object to no more than 2k, assuming each cookie is 4 bytes (e.g. 'a=b;'). This may have limited impact for a web application with low concurrency. However, for a heavily concurrent, NIO-based connector, this may have a  huge impact. Suppose a malicious client is sending 2k concurrent request, each sending 2k cookies, at tomcat side there will be 2k * 2k = 4m ServerCookie objects. Since the default maxConnection value is 10k for NIO, there can be at most 20m Server Cookies objects, and cannot be recycled because of 1).\n\n\nProposal:\n\n1) We propose to shrink the org.apache.tomcat.util.http.ServerCookie object array back to its initial size after recycling org.apache.tomcat.util.http.Cookies object.\n\n2) We propose to add a maxCookieCount configuration to limit the number of cookie to process. When exceeding the limit, extra data are ignored and a warning message is logged. The default value of maxCookieCount shall be unlimited to be compatible with current behavior, and configurable via server.xml.\n\nWe are currently working on a patch of 1\uff09 and 2)."}, {"count": 3, "tags": [], "creator": "huxing.zhang@gmail.com", "attachment_id": null, "text": "> A maxHeaderSize of 8k has limit the number of ServerCookie object to no more than 2k\n\nCorrection:\n\nWe have just observed many 4k ServerCookie object array in org.apache.tomcat.util.http.Cookies#scookies in our latest heap dump.\n\nSince spec [1] does not require cooke name and cookie value to be non-empty\uff0c given maxHeaderSize=8k, the max number of ServerCookie object in a request will be 4k, if if cookie string is '=;=;=;=;=;...'.\n\nWe argue the growing strategy here that the number of ServerCookie object should have an upper limit, which is maxHeaderSize / 2.\n\nFor example, if maxHeaderSize is 5k, then the number of ServerCookie object should be no more than 2.5k, hence the growing from 2k -> 4k will be unnecessary.\n\n\n[1] https://tools.ietf.org/html/rfc6265#section-4.2.2", "id": 192680, "time": "2016-07-28T05:05:31Z", "bug_id": 59904, "creation_time": "2016-07-28T05:05:31Z", "is_private": false}, {"count": 4, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "*** Bug 59911 has been marked as a duplicate of this bug. ***", "id": 192815, "time": "2016-08-02T14:44:51Z", "bug_id": 59904, "creation_time": "2016-08-02T14:44:51Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 59904, "text": "59911 has a patch idea.", "id": 192816, "time": "2016-08-02T14:45:44Z", "creator": "remm@apache.org", "creation_time": "2016-08-02T14:45:44Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "text": "*** Bug 59926 has been marked as a duplicate of this bug. ***", "id": 192819, "time": "2016-08-02T14:47:18Z", "bug_id": 59904, "creation_time": "2016-08-02T14:47:18Z", "is_private": false}, {"count": 7, "tags": [], "creator": "huxing.zhang@gmail.com", "attachment_id": null, "text": "The proposed patch in 59926 is against tomcat 9 trunk.", "id": 192848, "time": "2016-08-03T08:57:49Z", "bug_id": 59904, "creation_time": "2016-08-03T08:57:49Z", "is_private": false}, {"count": 8, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "I did some testing using:\nhttp://browsercookielimits.squawky.net/\n\nFocusing on max cookies per domain, the results are:\nFireFox + Win = 150\nFireFox + OSX = 150\nChrome + Win  = 180\nChrome + OSX  = 180\nIE 11 + Win   =  50\nSafari + OSX  = unlimited?\n\nTherefore, I think enforcing a default limit of 200 is reasonable. That should make the patch simpler since I don't see the need for tracking the attainableMaxCookieCount with this default.", "id": 193010, "time": "2016-08-11T11:05:39Z", "bug_id": 59904, "creation_time": "2016-08-11T11:05:39Z", "is_private": false}, {"count": 9, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "This has been fixed in the following branches:\n- 9.0.x for 9.0.0.M10 onwards\n- 8.5.x for 8.5.5 onwards\n- 8.0.x for 8.0.37 onwards\n- 7.0.x for 7.0.71 onwards\n- 6.0.x for 6.0.46 onwards\n\nThanks for the patch suggestion. It was used, and back-ported, with a few minor changes.", "id": 193040, "time": "2016-08-11T19:50:09Z", "bug_id": 59904, "creation_time": "2016-08-11T19:50:09Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 59904, "text": "Does the cookies-per-domain increase if a subdomain is being used? For example, will the browser separately limit cookies for example.com to 150 but also foo.example.com to another 150, so that foo.example.com could potentially get 300 cookies?", "id": 193127, "time": "2016-08-15T21:54:35Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-08-15T21:54:35Z", "is_private": false, "attachment_id": null}]