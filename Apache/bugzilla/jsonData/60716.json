[{"count": 0, "tags": [], "bug_id": 60716, "attachment_id": null, "is_private": false, "id": 196870, "time": "2017-02-09T11:51:07Z", "creator": "kegorof@gmail.com", "creation_time": "2017-02-09T11:51:07Z", "text": "Environment:\nJava(TM) SE Runtime Environment (build 1.8.0_66-b17)\nJava HotSpot(TM) 64-Bit Server VM (build 25.66-b17, mixed mode)\n\nJava started with following additional parameters:\n-Dcom.sun.net.ssl.checkRevocation=true -Dcom.sun.security.enableCRLDP=true\n\nConnector configuration:\n<Connector port=\"8443\"\n           protocol=\"org.apache.coyote.http11.Http11Nio2Protocol\"\n           SSLEnabled=\"true\"\n           maxThreads=\"150\"\n           scheme=\"https\"\n           secure=\"true\">\n    <SSLHostConfig certificateVerification=\"optional\"\n                   protocols=\"TLSv1.2\"\n                   truststoreFile=\"${catalina.home}/conf/.truststore\"\n                   truststorePassword=\"password\">\n        <Certificate certificateKeystoreFile=\"${catalina.base}/conf/.keystore\"\n                     certificateKeystorePassword=\"password\"\n                     certificateKeyAlias=\"tomcat\"\n                     certificateKeyPassword=\"password\" />\n    </SSLHostConfig>\n</Connector>\n\nHow to reproduce:\n1. Root CA is imported into truststore. Client has valid certificate signed by the root CA, this certificate has CRLDistributionPoint section. Client has access to the application using https protocol.\n2. Then client's certificate is revoked. Wait until certificate revocation list is updated, check that CRL contains client's certificate serial number. \n3. User has access to the application! \n4. Check communication using tcpdump, no connections to CRLDP host. \n5. Try jvm paramter -Djava.security.debug=certpath -- no CRL checks.\n\nThis problem can't be reproduced in tomcat 8.0.x and 7.x. I think the problem is in the org.apache.tomcat.util.net.jsse.JSSEUtil#getParameters method. If SSLHostConfig doesn't contain certificateRevocationListFile parameter, then xparams.setRevocationEnabled(false) invoked (http://svn.apache.org/viewvc/tomcat/tc8.5.x/trunk/java/org/apache/tomcat/util/net/jsse/JSSEUtil.java?diff_format=h&revision=1780997&view=markup#l341). \nSo without crlFile, jvm parameter -Dcom.sun.net.ssl.checkRevocation is ignored. But if crlFile is set, then certificate's CRLDP section is ignored. \nAnyway, crlFile is read only once and all updates are ignored, thus it can't be used as workaround."}, {"count": 1, "tags": [], "creator": "remm@apache.org", "text": "Ok, I see r1757578 added an explicit setRevocationEnabled(false). I think this may need to be improved.\n\nBut overall I think this won't be reverted, as the use and continued support of proprietary system properties like that is never good nor guaranteed. Especially since it's JVM wide while we now need to have per vhost configuration, in case you haven't noticed.", "id": 196879, "time": "2017-02-09T17:53:35Z", "bug_id": 60716, "creation_time": "2017-02-09T17:53:35Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 60716, "attachment_id": null, "id": 196888, "time": "2017-02-09T19:24:27Z", "creator": "kegorof@gmail.com", "creation_time": "2017-02-09T19:24:27Z", "is_private": false, "text": "(In reply to Remy Maucherat from comment #1)\n> Ok, I see r1757578 added an explicit setRevocationEnabled(false). I think\n> this may need to be improved.\n> \n> But overall I think this won't be reverted, as the use and continued support\n> of proprietary system properties like that is never good nor guaranteed.\n> Especially since it's JVM wide while we now need to have per vhost\n> configuration, in case you haven't noticed.\n\nI agree, that these properties are proprietary. But without such properties I can't check certificate revocation using CRLDP. Also OCSP check doesn't work too...\nAnd there is no backward compatibility with tomcat 7.x and 8.0.x.\n\nOf cause, it's possible to implement my own TrustManager and check CRL and OCSP there. But this way is quite complicated. \nWhy you can't remove setRevocationEnabled(false) in the else section or parameterize it? Without it default jvm configuration will be used, so user can enable/disable revocation check using jvm properties."}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 196997, "time": "2017-02-14T12:37:28Z", "bug_id": 60716, "creation_time": "2017-02-14T12:37:28Z", "is_private": false, "text": "Another example of why configuration via system property is just wrong. Sigh.\n\nThe call to setRevocationEnabled(false) is necessary when no revocation is configured since the default is true. Without it, all certs fail validation.\n\nI think the simplest solution is a new JSSE property on SSLHostConfig - revocationEnabled. It will be ignored / assumed to be true if certificateRevocationListFile is set. Default will be false (current behaviour). If you need to configure revocation via proprietary methods for your JSSE provider then you can do so and set the new attribute to true.\n\nI should have a patch for this shortly."}, {"count": 4, "tags": [], "bug_id": 60716, "attachment_id": null, "is_private": false, "id": 196998, "time": "2017-02-14T12:51:50Z", "creator": "markt@apache.org", "creation_time": "2017-02-14T12:51:50Z", "text": "Fixed in:\n- trunk for 9.0.0.M18 onwards\n- 8.5.x for 8.5.12 onwards"}, {"count": 5, "tags": [], "text": "(In reply to Mark Thomas from comment #3)\n> Another example of why configuration via system property is just wrong. Sigh.\n> \n> The call to setRevocationEnabled(false) is necessary when no revocation is\n> configured since the default is true. Without it, all certs fail validation.\n> \n> I think the simplest solution is a new JSSE property on SSLHostConfig -\n> revocationEnabled. It will be ignored / assumed to be true if\n> certificateRevocationListFile is set. Default will be false (current\n> behaviour). If you need to configure revocation via proprietary methods for\n> your JSSE provider then you can do so and set the new attribute to true.\n> \n> I should have a patch for this shortly.\n\nAgree with you. Thank you.", "attachment_id": null, "id": 196999, "creator": "kegorof@gmail.com", "time": "2017-02-14T12:56:33Z", "bug_id": 60716, "creation_time": "2017-02-14T12:56:33Z", "is_private": false}, {"count": 6, "tags": [], "creator": "chris@christopherschultz.net", "text": "(In reply to Mark Thomas from comment #3)\n> I think the simplest solution is a new JSSE property on SSLHostConfig -\n> revocationEnabled.\n\nThat's a confusing configuration attribute: it implies that revocation is actually happening instead of just being consulted. Can we get a better name for that?", "id": 197007, "time": "2017-02-14T18:21:40Z", "bug_id": 60716, "creation_time": "2017-02-14T18:21:40Z", "is_private": false, "attachment_id": null}, {"text": "(In reply to Christopher Schultz from comment #6)\n> That's a confusing configuration attribute: it implies that revocation is\n> actually happening instead of just being consulted. Can we get a better name\n> for that?\n\nI re-used the JVM's internal attribute name. My thinking was if it was ever exposed, having the same name would be helpful.\n\nI see your point that the name could be better. I don't have any better suggestions though. If you can think of one before the next 9.0.x tag then feel free to change it.", "tags": [], "bug_id": 60716, "is_private": false, "count": 7, "id": 197029, "time": "2017-02-15T09:24:29Z", "creator": "markt@apache.org", "creation_time": "2017-02-15T09:24:29Z", "attachment_id": null}]