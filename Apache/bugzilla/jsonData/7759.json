[{"count": 0, "tags": [], "bug_id": 7759, "attachment_id": null, "is_private": false, "id": 12845, "time": "2002-04-05T08:30:51Z", "creator": "zorro.desbois@wanadoo.fr", "creation_time": "2002-04-05T08:30:51Z", "text": "As I said in bug 7026 for tomcat 3.3x, there is a malfunction with the reload of an existing application :\n\nMy test :\nMy application is already deployed.\nI do some modifications on servlet(s), compile and deploy it(them).\nWith the manager, I reload my application AppliTest :\nhttp://localhost:8080/manager/reload?path=/AppliTest\n\nResult :\nMy application (18 threads) is well deployed (modifications are OK) \nbut old native threads are still here (but inaccessible) and new native threads (18) have been created.\n\nSo, if I repeat this operation several times,\nmy system is down because I can't do any fork !!!\n\nSo, at the moment and while this bug isn't resolved, I think this command (reload) must be prohibited (or this problem indicated in the \ndocumentation).\n\nNote : this problem is the same if you remove and install the application.\n\nThanks.\nYo"}, {"attachment_id": null, "tags": [], "bug_id": 7759, "is_private": false, "count": 1, "id": 12852, "time": "2002-04-05T13:21:57Z", "creator": "remm@apache.org", "creation_time": "2002-04-05T13:21:57Z", "text": "Forking threads is not allowed in the J2EE model (as well as using non \ncontainer provided resources).\nIf your application does not care about the programming model, and chooses to \nallocate its own resources, it MUST use the lifecycle event sent by the servlet \ncontainer (like destroy, or some listener) to cleanup those resources. In any \ncase, it is never the responsability of the container to do that."}, {"count": 2, "tags": [], "bug_id": 7759, "is_private": false, "text": "I think there is a misunderstanding with my problem :\nIt is not my application which fork new threads but Tomcat.\n\nMy application is deployed with a file web.xml in which I precise, for each\nservlet, the attribute <load-on-startup>.\nMy application is composed with 18 servlets.\nSo, when I start Tomcat, 18 threads are created by Tomcat (one thread per\nservlet).\nI touch one servlet code, re-compile, re-deploy my application and then reload\nvia the manager.\n\n18 new threads are created BY TOMCAT (corresponding to the servlets) but the 18\nold threads are still active.\n\nSo, my application doesn't fork anything but TOMCAT FORK NEW THREADS for\nservlets.\nSo it is the responsability of the container to cleanup its resources.\n", "id": 12998, "time": "2002-04-08T08:38:10Z", "creator": "zorro.desbois@wanadoo.fr", "creation_time": "2002-04-08T08:38:10Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 7759, "attachment_id": null, "is_private": false, "id": 13003, "time": "2002-04-08T10:07:56Z", "creator": "remm@apache.org", "creation_time": "2002-04-08T10:07:56Z", "text": "Tomcat does not fork a thread to run a load-on-startup servlet. Instead, all of\nthem are run in sequence by the thread responsible for initializing the host.\nTomcat DOES NOT associate one thread per servlet or something like that."}, {"count": 4, "tags": [], "creator": "zorro.desbois@wanadoo.fr", "attachment_id": null, "text": "Even if Tomcat does not fork a thread to run a load-on-startup servlet or something like that,\nafter the reload of my application, the command \"ps -eaf|grep java\" give 18 more processes like this:\n\n/usr/share/jdk1.3.1_02/bin/i386/native_threads/java -Djava.security.policy==/usr/local/tomcat/conf/tomcat.policy -Dtomcat.home=/usr/local/tomcat \norg.apache.tomcat.startup.Main start\n\nIf I repeat the operation, there are more and more processes.\nSo, I don't know what is the solution but there is a problem UNresolved.\n\nnote : there is the same problem in Tomcat3.3.1 (referenced in bug 7026) and Larry Isaacs agree with me.\n", "id": 13020, "time": "2002-04-08T13:34:31Z", "bug_id": 7759, "creation_time": "2002-04-08T13:34:31Z", "is_private": false}, {"count": 5, "attachment_id": null, "bug_id": 7759, "is_private": false, "id": 13021, "time": "2002-04-08T14:01:12Z", "creator": "remm@apache.org", "creation_time": "2002-04-08T14:01:12Z", "tags": [], "text": "He asked for a test case; he wasn't confirming the problem or anything.\nI went on and tested it with the examples webapp (made all servlets load-on-\nstartup, and then touch things), and no threads were forked.\n\nAlso, given that the implementation of TC 4 and TC 3 are completely different \n(except for Jasper), there is very little chance for such a huge identical bug \nto show up."}, {"count": 6, "tags": [], "creator": "zorro.desbois@wanadoo.fr", "text": "SORRY : you were right because my test case was false :\n\nwhen I said \"new native threads have been created\"\nit was not a problem with Tomcat BUT with my application : \nat the init of my servlet, I create a poolManager (which implements Runnable) but I never destroy it.\nSo, when I reload my application, new poolManagers are created!!\n\nI have updated my application and I don't have this problem anymore :-)\n\nSorry for the disturbance.\n\n", "id": 13044, "time": "2002-04-08T15:41:13Z", "bug_id": 7759, "creation_time": "2002-04-08T15:41:13Z", "is_private": false, "attachment_id": null}]