[{"count": 0, "tags": [], "bug_id": 47471, "attachment_id": 23923, "id": 128492, "time": "2009-07-03T17:04:29Z", "creator": "nrc@cs.berkeley.edu", "creation_time": "2009-07-03T17:04:29Z", "is_private": false, "text": "Created attachment 23923\nCandidate patch, v1\n\nAttached is a patch that adds a new function to the apr_hash API, apr_hash_set_if_new(). This is similar to apr_hash_set(), except that it doesn't modify the hash table if the key is already contained in the table. It also returns the value that is now associated with the input key (i.e. the old value associated with key if the key wasn't new).\n\nThe motivation is basically just performance: rather than doing two lookups to check if the key is present and then do apr_hash_set(), this method allows only a single HT lookup to be done.\n\nSuggestions for a better name are welcome. The attached patch adds a test for the new functionality."}, {"count": 1, "tags": [], "bug_id": 47471, "attachment_id": 24278, "id": 130455, "time": "2009-09-16T11:21:02Z", "creator": "nrc@cs.berkeley.edu", "creation_time": "2009-09-16T11:21:02Z", "is_private": false, "text": "Created attachment 24278\nCandidate patch, v2\n\nAttached is a revised version of this patch that fixes a bug in V1: apr_hash_set_if_new() neglected to expand the array if the collision rate grows too high."}]