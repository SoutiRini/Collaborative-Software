[{"count": 0, "tags": [], "creator": "jamie@white-mountain.org", "text": "The 3 supported methods all have problems if you want to dynamically generate a\nlarge personalized document without keeping it on the server indefinitely.\n- Making a file means that you have to also develop a reliable method to delete\nthat file later (but not before the mail has been delivered, and not touching\nany newer files that haven't been delivered yet).\n- Using a URL means basically using a file, or setting up some sort of internet\nserver, and developing a mechanism to only allow the mailer to get it. That may\nseem simple in a proof-of-concept setup but in a load balanced HTTPS world with\nlogins and privacy issues there's suddenly a bunch of extra overhead needed to\njust attach a file without letting the whole world see it, without getting it\nfrom the wrong server, etc.\n- Putting the document inline doesn't work if the attachment is a big binary file.\n\nThe most direct and elegant way I can think of to solve this is just to pass a\nDataHandler to the attach tag, so you can provide a unique in-memory copy of the\ndocument you're generating and not need to clean anything up, not need to worry\nabout hostnames and protocols and ports and passwords, and you can pass anything\nthat JavaMail can handle in a message.\n\nSo, I would like to request that the attach tag be enhanced to take a\nDataHandler instance - maybe by name of a bean in request scope, like this:\n\n<mt:attach datahandler=\"myBigDocumentGenerator\"/>\n\nwhere myBigDocumentGenerator is a DataHandler of your own creation that's in\nrequest scope.", "id": 65618, "time": "2004-10-24T17:59:22Z", "bug_id": 31869, "creation_time": "2004-10-24T17:59:22Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 31869, "attachment_id": null, "text": "Resolving. Taglib has been retired.", "id": 132419, "time": "2009-11-29T19:40:29Z", "creator": "bayard@apache.org", "creation_time": "2009-11-29T19:40:29Z", "is_private": false}]