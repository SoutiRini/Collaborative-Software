[{"count": 0, "tags": [], "bug_id": 58117, "attachment_id": null, "id": 183971, "time": "2015-07-09T11:51:15Z", "creator": "pinl@chamaeleon.de", "creation_time": "2015-07-09T11:51:15Z", "is_private": false, "text": "We are in the process of switching from Tomcat 7.0.27 to Tomcat 8 (currently: 8.0.22). During this process we noticed changes to the behaviour of escaping XML entities inside and outside attributes.\n\nConsider this example:\n\nThe goal is to produce valid HTML5 markup that looks like this:\n\n<span data-text=\"A &ndash; B\"> </span>\n<span>A &ndash; B</span>\n\nIn tomcat 7 I have to use this JSPX code:\n\n<span data-text=\"A &amp;ndash; B\"> </span>\n<span>A &amp;ndash; B</span>\n\n1. It's impossible to use &ndash; in the JSPX code as the jsp compiler would stumble over unknown XML entities (which &ndash; is)\n2. &amp; gets un-escaped to & in the HTML markup, so the browser only sees &ndash; which produces the desired output.\n\nIn Tomcat 8, however, the same JSPX input produces this output:\n\n<span data-text=\"A &amp;ndash; B\"/>\n<span>A &ndash; B</span>\n\nTo me this looks wrong. I'd either expect this to produce exactly the same output as Tomcat 7 or to at least be consistent. (This behaviour makes it also impossible to use HTML entities inside attributes btw since we cannot produce &ndash; as value of an attribute anymore. Without using hacks, that is.)\n\nRegards\nMarkus"}, {"count": 1, "tags": [], "bug_id": 58117, "attachment_id": null, "id": 184226, "time": "2015-07-29T19:09:45Z", "creator": "markt@apache.org", "creation_time": "2015-07-29T19:09:45Z", "is_private": false, "text": "There have definitely been changes in this area in 8.0.x and - if I recall correctly - some bug fixes were applied to 8.0.x and not 7.0.x because we were concerned that they might break existing code. It looks like you have stumbled across one of these changes.\n\nI do remember that my head hurt after working on this last time so it is going to take me a little while to sort out why the current behaviour is as it is. If it is correct, I should be able to explain why it is correct. If it is wrong I'll work on a fix.\n\nIf the current behaviour is correct then you'll need to use something like this:\n\n<jsp:element name=\"span\">\n  <jsp:attribute name=\"data-text\">A &amp;ndash B</jsp:attribute>\n  <jsp:body> </jsp:body>\n</jsp:element>\n<span>A &amp;ndash; B</span>"}, {"count": 2, "attachment_id": null, "creator": "markt@apache.org", "text": "An alternative, shorter form using JSTL:\n\n    <c:out value=\"&lt;span data-text=&quot;A &amp;ndash; B&quot;> &lt;/span>\" escapeXml=\"false\"/>\n    <span>A &amp;ndash; B</span>\n\nOK. It took a few hours but I think I have got to the bottom of this. It is a result of a bug fix that was applied to 7.0.47 onwards and all 8.0.x versions. The bug in question is bug 55198 although that caused a number of regressions so you'll find a number of linked bugs.\n\nThe relevant code is here:\nhttp://svn.eu.apache.org/viewvc/tomcat/trunk/java/org/apache/jasper/compiler/Validator.java?view=annotate#l1392\n\nI don't think this bug report indicates a further regression in the fix for bug 55198 (so I am closing this as invalid) although I'm open to spec based arguments that it does.\n(Note: A large part of the problem here is that the spec isn't very explicit about the expected behaviour.)", "id": 184227, "time": "2015-07-29T20:31:15Z", "bug_id": 58117, "creation_time": "2015-07-29T20:31:15Z", "tags": [], "is_private": false}]