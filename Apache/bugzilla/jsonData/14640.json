[{"count": 0, "tags": [], "bug_id": 14640, "attachment_id": null, "text": "Task provided as-is, without any warranty, for anyone interested. Not the \ncleanest code, but good enough for what I needed, and might be helpful to \nsomeone else.", "id": 26485, "time": "2002-11-18T16:20:39Z", "creator": "ddevienne@lgc.com", "creation_time": "2002-11-18T16:20:39Z", "is_private": false}, {"count": 1, "attachment_id": 3878, "bug_id": 14640, "is_private": false, "id": 26486, "time": "2002-11-18T16:22:07Z", "creator": "ddevienne@lgc.com", "creation_time": "2002-11-18T16:22:07Z", "tags": [], "text": "Created attachment 3878\nThe stand-alone <jaxb> task (depends on Jaxb 1.0 beta at runtime only)."}, {"count": 2, "tags": [], "creator": "ddevienne@lgc.com", "is_private": false, "id": 39109, "attachment_id": null, "bug_id": 14640, "creation_time": "2003-06-19T18:37:51Z", "time": "2003-06-19T18:37:51Z", "text": "For reference, this is how the task is used by our build:\n\n  <!-- ====================================================\n       Generates the Jaxb-generated Java code from XML schemas (XSDs)\n\n       This task will not regenerate the Java code from the schemas if the\n       schema is not more recent the files in the target package/directory,\n       or if this target package/directory as not been modified in any way.\n       Otherwise, the target package/directory will be deleted,\n       and regeneration of the Java code will occur.\n\n       By default, the target package is deduced from the location of the\n       schema, in a generated sub-package with further a sub-package named\n       after the schema short filename (lower-cased).\n\n       For example, schema com/lgc/infra/acme/tools.xsd\n       yields package name com.lgc.infra.acme.generated.tools\n\n       Schema filenames yielding invalid package name fragments\n       will cause build exceptions... For example, schema-1.xsd\n       or schema#1.xsd or 1schema.xsd are all invalid!\n\n       But one can define a mapper to custom-deduce the package name to\n       generate the Java code into, as shown in the target below.\n    -->\n  <target name=\"generated\"\n          description=\"Generates (using Jaxb) Java code from XML schemas\">\n    <jaxb destDir=\"${src}\"\n          readOnly=\"true\"\n          strictValidation=\"true\"\n          xjcjar=\"tools/jwsdp-1.1/jaxb-1.0/lib/jaxb-xjc.jar\">\n      <schemas dir=\"${src}\" includes=\"**/doc-files/*.xsd\" />\n\n      <!-- Custom mapper to deduce the target package name:\n           For example, schema com/lgc/infra/acme/doc-files/tools.xsd\n           yields package name com.lgc.infra.acme.generated.tools\n        -->\n      <targetPackageMapper type=\"regexp\"\n                           from=\"(.*)/doc-files/(.*)\\.xsd\"\n                           to=\"\\1/generated/\\2\" />\n    </jaxb>\n  </target>"}, {"count": 3, "attachment_id": null, "bug_id": 14640, "is_private": false, "id": 39110, "time": "2003-06-19T18:41:55Z", "creator": "ddevienne@lgc.com", "creation_time": "2003-06-19T18:41:55Z", "tags": [], "text": "Note also that the xjcjar attribute in the example above points to the schema-\ncompiler JAR within a pristine jwsdp-1.1 install... This is important, because \nthis JAR has a Class-Path: attribute in its manifest with relative paths to its \ndependent JARs (and their own dependents) that assumes the normal JWSDP 1.1 \nlayout. --DD"}, {"count": 4, "tags": [], "text": "Hi DD, do you still want this as an enchancement?\njaxb now has an ant task that a lot of people use.", "attachment_id": null, "id": 93602, "creator": "peterreilly@apache.org", "time": "2006-09-14T20:33:29Z", "bug_id": 14640, "creation_time": "2006-09-14T20:33:29Z", "is_private": false}, {"count": 5, "tags": [], "text": "Better to close this one. It was used more to safe keep the task than anything \nelse. Maybe the SUN-supplied <jaxb> task has improved since I last checked, \nwhich was ages ago. Theirs didn't do any timestamp checking AFAIK. --DD", "attachment_id": null, "bug_id": 14640, "id": 93605, "time": "2006-09-14T21:13:47Z", "creator": "ddevienne@gmail.com", "creation_time": "2006-09-14T21:13:47Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 14640, "attachment_id": null, "id": 93607, "time": "2006-09-14T21:39:38Z", "creator": "antoine@apache.org", "creation_time": "2006-09-14T21:39:38Z", "is_private": false, "text": "I have inspired myself from what Dominique wrote here to make an Oracle Jaxb\ntask in the project where I work. Works great.\n\nAntoine"}, {"count": 7, "attachment_id": null, "bug_id": 14640, "is_private": false, "id": 104552, "time": "2007-06-20T06:37:34Z", "creator": "stevel@apache.org", "creation_time": "2007-06-20T06:37:34Z", "tags": [], "text": "1. there is a jaxb task elsewhere\n2. O/X mapping is an exercise in futility. something we should not get involved in"}, {"count": 8, "tags": [], "text": "\"O/X mapping is an exercise in futility\"\nO/X mapping is also the foundation of ant ;-)", "is_private": false, "id": 104560, "creator": "peterreilly@apache.org", "time": "2007-06-20T06:44:44Z", "bug_id": 14640, "creation_time": "2007-06-20T06:44:44Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 14640, "text": "Ant is X->O mapping, no O->X or worse, O->X->O mapping. we make no pretense to\nseamlessly convert objects to XML and back again, using words like \"serialize\"\nto pretent the problem is trivial.", "id": 104561, "time": "2007-06-20T06:51:06Z", "creator": "stevel@apache.org", "creation_time": "2007-06-20T06:51:06Z", "is_private": false, "attachment_id": null}]