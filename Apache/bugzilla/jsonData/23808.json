[{"count": 0, "tags": [], "creator": "mhilpert@gmx.de", "attachment_id": null, "is_private": false, "id": 45602, "time": "2003-10-14T13:08:48Z", "bug_id": 23808, "creation_time": "2003-10-14T13:08:48Z", "text": "As soon as i add an inclusion and/or exclusion pattern to the HTTP Proxy \nServer, no samplers at all are added to the Recording Controller. I have to \ndelete all patterns from the HTTP Proxy Server configuration to get entries \nunter the Recording Controller. Of course, for usual websites, there are far \ntoo many unwanted samplers added (like gif files) which makes the HTTP \nRecording practically unusable."}, {"count": 1, "tags": [], "bug_id": 23808, "attachment_id": null, "id": 45634, "time": "2003-10-14T14:41:37Z", "creator": "sebb@apache.org", "creation_time": "2003-10-14T14:41:37Z", "is_private": false, "text": "Can you post an example please?"}, {"count": 2, "text": "Created attachment 8567\nTest plan to show that HTTP Proxy Pattern doesn't work", "bug_id": 23808, "attachment_id": 8567, "id": 45638, "time": "2003-10-14T15:08:55Z", "creator": "mhilpert@gmx.de", "creation_time": "2003-10-14T15:08:55Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "mhilpert@gmx.de", "attachment_id": null, "text": "The attached testplan can be used to reproduce the problem. add a HTTP Proxy \nServer to your workbench (default port 8080 works for me). do not set any \npatterns, start proxy, surf web => samplers are recorded.\n\nstop proxy, add an exclusion patteren (e.g. \"*.gif\"), start proxy, surf web => \nno samplers are recorded.\n\nstop proxy, remove all patterns, start proxy, surf web => samplers are recorded.\n", "id": 45639, "time": "2003-10-14T15:11:34Z", "bug_id": 23808, "creation_time": "2003-10-14T15:11:34Z", "is_private": false}, {"count": 4, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "The attachment did not contain the proxy server.\n\nWorkbench items don't get saved automatically, so please select the workbench \nand use save as to create a copy of the workbench.", "id": 45644, "time": "2003-10-14T15:41:53Z", "bug_id": 23808, "creation_time": "2003-10-14T15:41:53Z", "is_private": false}, {"count": 5, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "If you use an Include pattern, make sure you include ALL the patterns you want \nto match, otherwise ONLY those patterns will be matched.\n\nCould this be the problem you are having?", "id": 45647, "time": "2003-10-14T16:07:34Z", "bug_id": 23808, "creation_time": "2003-10-14T16:07:34Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 23808, "text": "I think I've finally discovered the problem:\n\nThe string \"*.gif\" is not a valid regular expression.\n\nTry using \"\\.gif\" or \".*\\.gif\" instead (without the quotes).\n\nI'll look into why invalid expressions don't seem to be handled very \ngracefully; that is a bug.", "id": 45649, "time": "2003-10-14T16:43:36Z", "creator": "sebb@apache.org", "creation_time": "2003-10-14T16:43:36Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "sebb@apache.org", "is_private": false, "text": "The exception that is being generated is:\n\norg.apache.oro.text.MalformedCachePatternException\n\nThis is a RuntimeException, which is presumably why it was missed.\nIt obviously needs to be caught when passing arbitrary strings to the compiler.\n\n[When testing with Eclipse, the stack trace can be seen in the console as \nstderr; not sure why this does not appear on NT.]\n\nThis will be fixed in due course; meanwhile at least there is a work-round.", "id": 45656, "time": "2003-10-14T17:38:53Z", "bug_id": 23808, "creation_time": "2003-10-14T17:38:53Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 23808, "text": "not really: a pattern of \"\\.gif\" (without quotes) is better than \"*.gif\" \nbecause it does create samplers, but it does not apply the pattern, i.e. there \nare still *.gif images recorded.", "id": 45729, "time": "2003-10-15T12:22:26Z", "creator": "mhilpert@gmx.de", "creation_time": "2003-10-15T12:22:26Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 23808, "text": "but wait ... \".*\\.gif\" seems to work! but why? i thought the correct regular \nexpression for \"*.gif\" is \"\\*\\.gif\"? (\"\\*\\.gif\" doesn't work)\n\nMy suggestion is that JMeter itself should escape the critical characters that \nare used for regular expressions. so that the user can type \"*.gif\". :-)", "id": 45730, "time": "2003-10-15T12:27:08Z", "creator": "mhilpert@gmx.de", "creation_time": "2003-10-15T12:27:08Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 23808, "text": "at least, jmeter should ignore patterns that it can't process or log them as \nerror message, instead of throwing exceptions and don't record anything:\n\norg.apache.oro.text.MalformedCachePatternException: Invalid expression: *\\.gif\n?+* follows nothing in expression\n        at org.apache.oro.text.GenericPatternCache.getPattern(Unknown Source)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.checkExcludes(Prox\nyControl.java:408)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.filterUrl(ProxyCon\ntrol.java:282)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.deliverSampler(Pro\nxyControl.java:240)\n        at org.apache.jmeter.protocol.http.proxy.Proxy.run(Proxy.java:167)\norg.apache.oro.text.MalformedCachePatternException: Invalid expression: *\\.gif\n?+* follows nothing in expression\n        at org.apache.oro.text.GenericPatternCache.getPattern(Unknown Source)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.checkExcludes(Prox\nyControl.java:408)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.filterUrl(ProxyCon\ntrol.java:282)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.deliverSampler(Pro\nxyControl.java:240)\n        at org.apache.jmeter.protocol.http.proxy.Proxy.run(Proxy.java:167)\norg.apache.oro.text.MalformedCachePatternException: Invalid expression: *\\.gif\n?+* follows nothing in expression\n        at org.apache.oro.text.GenericPatternCache.getPattern(Unknown Source)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.checkExcludes(Prox\nyControl.java:408)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.filterUrl(ProxyCon\ntrol.java:282)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.deliverSampler(Pro\nxyControl.java:240)\n        at org.apache.jmeter.protocol.http.proxy.Proxy.run(Proxy.java:167)\norg.apache.oro.text.MalformedCachePatternException: Invalid expression: *\\.gif\n?+* follows nothing in expression\n        at org.apache.oro.text.GenericPatternCache.getPattern(Unknown Source)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.checkExcludes(Prox\nyControl.java:408)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.filterUrl(ProxyCon\ntrol.java:282)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.deliverSampler(Pro\nxyControl.java:240)\n        at org.apache.jmeter.protocol.http.proxy.Proxy.run(Proxy.java:167)\norg.apache.oro.text.MalformedCachePatternException: Invalid expression: *\\.gif\n?+* follows nothing in expression\n        at org.apache.oro.text.GenericPatternCache.getPattern(Unknown Source)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.checkExcludes(Prox\nyControl.java:408)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.filterUrl(ProxyCon\ntrol.java:282)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.deliverSampler(Pro\nxyControl.java:240)\n        at org.apache.jmeter.protocol.http.proxy.Proxy.run(Proxy.java:167)\norg.apache.oro.text.MalformedCachePatternException: Invalid expression: *\\.gif\n?+* follows nothing in expression\n        at org.apache.oro.text.GenericPatternCache.getPattern(Unknown Source)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.checkExcludes(Prox\nyControl.java:408)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.filterUrl(ProxyCon\ntrol.java:282)\n        at org.apache.jmeter.protocol.http.proxy.ProxyControl.deliverSampler(Pro\nxyControl.java:240)\n        at org.apache.jmeter.protocol.http.proxy.Proxy.run(Proxy.java:167)", "id": 45731, "time": "2003-10-15T12:30:28Z", "creator": "mhilpert@gmx.de", "creation_time": "2003-10-15T12:30:28Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 23808, "text": "From component_reference.html, 13.4.3 HTTP Proxy Server\n\nBoth patterns to include and exclude are:\n\n\"Regular expressions that are matched against the URL that is sampled\"\n\nThis means that the values must be valid REs, as has been seen.\n\nWhat is not at all obvious is that the word \"match\" has a very specific \nmeaning - the result of the regular expression must match the WHOLE of the \nobject being matched against. That is why \\.gif did not work (sorry, I misled \nyou there).\n\nThere is a paragraph a bit further down in the section which gives the example \nof using \".*\\.html\", but the example is buried in the text. It would help if \nthere was a bit more explanation.\n\nPattern matching does work, but the error handling and documentation need to be \nimproved.\n\nAs to automatically escaping the patterns: this would make it difficult or \nimpossible to support actual REs.\n\nOne longer-term solution might be to allow each pattern to be treated as either \nan RE or as plain characters, e.g. by adding a check-box for each field. And \none could support \"contains\" as well as \"matches\" etc. But that would entail \nquite a bit of extra work. Feel free to contribute a patch!", "id": 45737, "time": "2003-10-15T14:14:02Z", "creator": "sebb@apache.org", "creation_time": "2003-10-15T14:14:02Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "Code has been updated in CVS. Just remains to update the documentation.", "id": 45756, "time": "2003-10-15T18:01:26Z", "bug_id": 23808, "creation_time": "2003-10-15T18:01:26Z", "is_private": false}, {"count": 13, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "Proxy Controller documentation enhanced.", "id": 45766, "time": "2003-10-16T00:55:38Z", "bug_id": 23808, "creation_time": "2003-10-16T00:55:38Z", "is_private": false}]