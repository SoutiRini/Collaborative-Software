[{"count": 0, "attachment_id": 26962, "creator": "dominik.schuberth@student.hs-rm.de", "is_private": false, "id": 146157, "time": "2011-05-06T09:17:54Z", "bug_id": 51158, "creation_time": "2011-05-06T09:17:54Z", "tags": [], "text": "Created attachment 26962\n\"sheet1.xml\" file of the Excel workbook \"test2.xlsx\"\n\nWhen using the write() method of a XSSFWorkbook multiple times, the content of the created Excel files is not readable by Excel. The reason for this problem is that the content of some files (that are contained in the .xlsx zip archive) is appended to the old content of those files.\n\n\nExample code:\n\n-----------------------------------------------------\n\n// imports\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.apache.poi.xssf.usermodel.XSSFCell;\nimport org.apache.poi.xssf.usermodel.XSSFFont;\nimport org.apache.poi.xssf.usermodel.XSSFRichTextString;\nimport org.apache.poi.xssf.usermodel.XSSFRow;\nimport org.apache.poi.xssf.usermodel.XSSFSheet;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\n\n// example code\nFileOutputStream fos = null;\n\ntry {\n\n    // create a workbook\n    final XSSFWorkbook workbook = new XSSFWorkbook();\n    XSSFSheet sheet = workbook.createSheet(\"Test Sheet\");\n    XSSFRow row = sheet.createRow(2);\n    XSSFCell cell = row.createCell(3);\n    cell.setCellValue(\"test1\");\n\n    // write the first excel file\n    fos = new FileOutputStream(new File(\"test1.xlsx\"));\n    workbook.write(fos);\n    fos.flush();\n    fos.close();\n\n    // add a new cell to the sheet\n    cell = row.createCell(4);\n    cell.setCellValue(\"test2\");\n\n    // write the second excel file\n    fos = new FileOutputStream(new File(\"test2.xlsx\"));\n    workbook.write(fos);\n    fos.flush();\n    fos.close();\n\n} catch (IOException ex) {\n\n    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);\n\n} finally {\n\n    try {\n        fos.close();\n    } catch (IOException ex) {\n        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);\n    }\n\n}\n\n-----------------------------------------------------\n\nThe content of the \"sheet1.xml\" file (\"xl/worksheets/sheet1.xml\") that has been created in the first excel file is correct. In the second Excel file, an incorrect \"sheet1.xml\" file is created. It includes the content of the first \"sheet1.xml\" file and in addition appends the content that this file SHOULD have. (The \"sheet1.xml\" file of the second Excel file of this example is attached to this bug report.)\n\nFurther files that are affected in the same way in the posted example:\ndocProps/app.xml\nxl/sharedStrings.xml\nxl/styles.xml\nxl/workbook.xml\n\nI already searched for the cause of this bug but I could not find the source code that is producing the appended XML code.\n\n---\n\nUsed libraries:\npoi-3.8-beta2-20110408.jar\npoi-ooxml-3.8-beta2-20110408.jar\npoi-ooxml-schemas-3.8-beta2-20110408.jar\n\nUsed external libraries:\ndom4j-1.6.1.jar\nstax-api-1.0.1.jar\nxmlbeans-2.3.0.jar"}, {"count": 1, "tags": [], "bug_id": 51158, "is_private": false, "id": 146164, "creation_time": "2011-05-06T13:18:48Z", "time": "2011-05-06T13:18:48Z", "creator": "apache@gagravarr.org", "text": "Bug #49940 is a similar issue around writing a xssfworkbook multiple times. That one is looking like an xmlbeans bug, but more investigations are needed", "attachment_id": null}, {"count": 2, "tags": [], "text": "The behavior depends on how you construct XSSFWorkbook:\n\nIf you open an existing file and write it twice you will get XmlValueDisconnectedException, as described in Bug 49940:\n\norg.apache.xmlbeans.impl.values.XmlValueDisconnectedException\n\tat org.apache.xmlbeans.impl.values.XmlObjectBase.check_orphaned(XmlObjectBase.java:1213)\n\tat org.apache.xmlbeans.impl.values.XmlObjectBase.newCursor(XmlObjectBase.java:243)\n\tat org.apache.xmlbeans.impl.values.XmlComplexContentImpl.arraySetterHelper(XmlComplexContentImpl.java:1073)\n\tat org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTFontsImpl.setFontArray(Unknown Source)\n \nHowever, with a newly constructed XSSFWorkbook  writing twice passes OK, but the output is broken.\n\nSomething to fix in future versions of POI.\n\nYegor", "is_private": false, "id": 147243, "creation_time": "2011-06-18T10:06:31Z", "time": "2011-06-18T10:06:31Z", "creator": "yegor@dinom.ru", "bug_id": 51158, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 51158, "text": "While generating an example for Bug #52349, I believe I stumbled upon this bug (albeit without having to explicitly call \"write\").  I'm re-posting that example here with details on the \"new\" issue I ran into:\n\n\nAttached \"test.java\" simply walks through a given spreadsheet, outputs the contents (formulas/cached values/FormulaEvaluator results/etc.), and closes the workbook.  For some spreadsheets this works fine...however with others (and specifically with the simple example spreadsheet I'm attaching - test.xlsx), the method runs fine the first time but on subsequent calls it fails with an InvocationTargetException:\n\n\nCaused by: java.io.IOException: error: Unexpected end of file after null\n\tat org.apache.poi.xssf.model.SharedStringsTable.readFrom(SharedStringsTable.java:125)\n\tat org.apache.poi.xssf.model.SharedStringsTable.<init>(SharedStringsTable.java:102)\n\t... 9 more\n\n\nAnd then if you open the file in Excel, you'll get an \"unreadable content\" error with this response if you allow Excel to repair the file:  \"Removed Part: /xl/sharedStrings.xml part with XML error.  (Strings) A document must contain exactly one root element. Line 1, column 0.\"\n\nConfirmed under java versions \"1.6.0_24\" and \"1.7.0\" using poi-3.8-beta4.", "id": 152322, "time": "2011-12-20T16:49:34Z", "creator": "mdlandon@gmail.com", "creation_time": "2011-12-20T16:49:34Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "Created attachment 28093\nExample files used to reproduce InvocationTargetException", "is_private": false, "bug_id": 51158, "id": 152325, "time": "2011-12-20T16:54:39Z", "creator": "mdlandon@gmail.com", "creation_time": "2011-12-20T16:54:39Z", "attachment_id": 28093}, {"count": 5, "tags": [], "bug_id": 51158, "text": "I have fix the item originally reported in this Bug under r1553525, i.e. multiple saves should not cause double-written XML any more.\n\nMichael L., if your problem still persists then please report a separate bug for your problem.", "id": 171941, "time": "2013-12-26T18:00:04Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2013-12-26T18:00:04Z", "is_private": false, "attachment_id": null}]