[{"count": 0, "tags": [], "bug_id": 6953, "text": "OptionConvert.instantiateByClassName() raises Errors, which are not caught by\nthe try-block. Exceptions are caught, but Class.forName() may throw Errors too,\nwhich are derived from Throwable, but not from Exception. To correct the error,\njust change \"Exception\" into \"Throwable\" in OptionConverter.java:309. The same\nsituation may occur in line 223 (in v1.1.3).", "id": 11542, "time": "2002-03-07T11:03:04Z", "creator": "Christoph.Pollmann@web.de", "creation_time": "2002-03-07T11:03:04Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 6953, "text": "\nThanks for the bug report. I don't see a reason to catch *errors* (not \nexceptions) thrown by Class.forClass as such errors (i.e LinkageError, \nExceptionInInitializerError) indicate corrupt classes. It's not log4j \nresponsibility to protect the user from such extreme errors.\nBy the way, is this a situation you encountered in reality?\n", "id": 15671, "time": "2002-05-07T21:12:59Z", "creator": "ceki@apache.org", "creation_time": "2002-05-07T21:12:59Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "text": "Of course, I encountered in reality. In that special case, I knew, that some\nrenderer classes aren't avail and so, I didn't want to get an error from the\noption evaluation.", "is_private": false, "bug_id": 6953, "id": 15938, "time": "2002-05-11T08:37:07Z", "creator": "Christoph.Pollmann@web.de", "creation_time": "2002-05-11T08:37:07Z", "attachment_id": null}]