[{"count": 0, "tags": [], "creator": "jkf@apache.org", "text": "Created patch to update packages\n \norg.apache.tools.ant\norg.apache.tools.ant.filters\norg.apache.tools.ant.filters.util\norg.apache.tools.ant.helper\norg.apache.tools.ant.input\norg.apache.tools.ant.launch\norg.apache.tools.ant.listener\norg.apache.tools.ant.loader\n\nto avoid using deprecated methods as much as possible\nremove reflection to avoid 1.2 / 1.1 issues\nremove constructs to avoid 1.2 / 1.1 issues\nAdded refusal to work for Java 1.1 to the Project.java", "id": 42579, "time": "2003-08-11T21:28:27Z", "bug_id": 22326, "creation_time": "2003-08-11T21:28:27Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 22326, "text": "Created attachment 7757\nRemoves 1.1 constructs and deprecated method calls", "id": 42580, "time": "2003-08-11T21:30:02Z", "creator": "jkf@apache.org", "creation_time": "2003-08-11T21:30:02Z", "is_private": false, "attachment_id": 7757}, {"count": 2, "tags": [], "creator": "conor@apache.org", "is_private": false, "text": "Just a few comments on the AntClassLoader changes:\n\nThe initializeClass method is no longer used within Ant. Nevertheless it can be\nupgraded. The change you have made is, however, not correct. There is no\nguarantee that Class.forName is going to find the given class. You really need\nto ask the class for its loader and then use that loader to load and initialise\nthe class, using the three arg version of Class.forName.\n\nYour change to findBaseClass will fail if parent is null, which it can be.", "id": 42592, "time": "2003-08-12T01:19:12Z", "bug_id": 22326, "creation_time": "2003-08-12T01:19:12Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "jkf@apache.org", "text": "Created attachment 7767\nimproved patch with comments from conor taken into account", "id": 42597, "time": "2003-08-12T07:06:59Z", "bug_id": 22326, "creation_time": "2003-08-12T07:06:59Z", "is_private": false, "attachment_id": 7767}, {"count": 4, "tags": [], "creator": "jkf@apache.org", "text": "It seems, according to the javadoc to be a bug if parent == null, all\nconstructors (except for 1) use the setParent method always, which always sets\nthe parent to a non null value. \nThis one constructor that doesn't actually claims in the javadoc that the parent\nis set to the classloader that loaded this class, as is done in setParent if the\nparent == null. So I also updated that constructor and removed all checks on\nparent == null from the code (except for the one in the setParent).", "id": 42599, "time": "2003-08-12T07:17:36Z", "bug_id": 22326, "creation_time": "2003-08-12T07:17:36Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "is_private": false, "id": 42600, "time": "2003-08-12T07:26:09Z", "bug_id": 22326, "creation_time": "2003-08-12T07:26:09Z", "text": "> This one constructor that doesn't actually claims in the javadoc that the parent\n> is set to the classloader that loaded this class, as is done in setParent if the\n> parent == null.\n\nand the javadocs of Class#getClassLoader\n\n| Returns the class loader for the class. Some implementations may use null to\n| represent the bootstrap class loader. This method will return null in such\n| implementations if this class was loaded by the bootstrap class loader.\n\nso for \"some implementations\" the parent may be null."}, {"count": 6, "tags": [], "creator": "jkf@apache.org", "text": "Sorry I missed that part, I thought it could only be null for void or primitive\ntypes. (Which AntClassLoader clearly isn't). \n\nI am updating and re-checking my patch.\n", "id": 42607, "time": "2003-08-12T08:35:18Z", "bug_id": 22326, "creation_time": "2003-08-12T08:35:18Z", "is_private": false, "attachment_id": null}, {"count": 7, "text": "Currently I am also looking at packages types  - zip, and I think about marking\nsome methods and classes deprecated for their only purpose is to work around 1.1\n- 1.2 differences, is this ok?\n\nFurther I would like to bring up the question if it is really good to introduce\nWeakishReference in 1.6 (at least according to the @since tags in the code). As\n1.6 need not compile against 1.1 and the only purpose of this class (and\nWeakishReference12 is to work around a 1.1 / 1.2 difference. (I would definetely\nhave marked it deprecated if it is ok to mark them deprecated, but it seems a\nbit silly to introduce a new class in a new release that is deprecated from the\nstart.)", "bug_id": 22326, "is_private": false, "id": 42644, "time": "2003-08-12T19:44:05Z", "creator": "jkf@apache.org", "creation_time": "2003-08-12T19:44:05Z", "tags": [], "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 22326, "text": "Created attachment 7793\nReplaces previous 2 patches, comments taken into account, extended with more packages.", "id": 42670, "time": "2003-08-13T12:27:07Z", "creator": "jkf@apache.org", "creation_time": "2003-08-13T12:27:07Z", "is_private": false, "attachment_id": 7793}, {"count": 9, "attachment_id": null, "bug_id": 22326, "text": "Now also the packages\norg.apache.tools.ant.types\norg.apache.tools.ant.types.optional\norg.apache.tools.ant.types.optional.depend\norg.apache.tools.ant.types.optional.image\norg.apache.tools.ant.types.resolver\norg.apache.tools.ant.types.selectors\norg.apache.tools.ant.util\norg.apache.tools.ant.util.depend\norg.apache.tools.ant.util.deped.bcel\norg.apache.tools.ant.util.facade\norg.apache.tools.ant.util.optional\norg.apache.tools.ant.util.regexp\n\norg.apache.tools.bzip2\norg.apache.tools.mail\norg.apache.tools.tar\norg.apache.tools.zip\nhave been changed where necessary.\n\nThis is in the patch of 08/13/03 12:27\n\nI have in this patch marked the following methods deprecated:\nCollectionUtils.equals(Vector, Vector) (use Vector.equals())\nCollectionUtils.equals(Dictionary, Dictionary) (use Map.equals())\nCollectionUtils.putAll(Dictionary, Dictionary) (use Map.putAll())\nFileUtils.getSetLastModified() (use File.setLastModified())\nFileUtils.setLastModified() (use File.setLastModified())\nFileUtils.getParentFile() (use File.getParentFile())\nLoaderUtils.isContextLoaderAvailable() (always returns true)\nWeakishReference (use WeakReference)\nWeakishReference12 (use WeakReference)\nZipEntry.setComprSize (use ZipEntry.setCompressedSize())\n\nIf there are any objections to this please let me know I will in that case\nupdate the patch.\n\nI will now start on the standard taskdefs.\nPlease let me know if it is unlikely that these patches are accepted, as in that\ncase i will stop working on them.\n", "id": 42671, "time": "2003-08-13T12:40:42Z", "creator": "jkf@apache.org", "creation_time": "2003-08-13T12:40:42Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "creator": "peter.reilly@corvil.com", "is_private": false, "text": "I have made the changes to TokenFilter.java and UnknownElement.java\n(deprecated use of fields).", "id": 42680, "time": "2003-08-13T13:48:15Z", "bug_id": 22326, "creation_time": "2003-08-13T13:48:15Z", "attachment_id": null}, {"count": 11, "tags": [], "text": "I have now updated: CollectionUtils.java, XMLCatalog.java, CommandlineJava.java,\nAbstractFileSet.java and ComponentHelper.java\nThere is now nothing that uses WeakishReference, and as Martijn says\nit was introducted in 1.6 and so can be removed.", "is_private": false, "id": 42683, "creator": "peter.reilly@corvil.com", "time": "2003-08-13T14:29:12Z", "bug_id": 22326, "creation_time": "2003-08-13T14:29:12Z", "attachment_id": null}, {"count": 12, "attachment_id": null, "bug_id": 22326, "text": "I have updated the patch to \n\n1) remove the already applied parts\n\n2) also include the taskdefs, except for the optional/sirtaka/Coverage one as I\ncannot compile that package because of an lack of sirtaka, I have had a look at\nall optional packages though and only found the sirtaka one. The Sirtaka one is\ninline here.\n\n3) Still to be done: testcode.\n\n4) Files actually updated by the 4 th patch\nmain/org/apache/tools/ant/AntClassLoader.java\nmain/org/apache/tools/ant/Diagnostics.java\nmain/org/apache/tools/ant/Main.java\nmain/org/apache/tools/ant/Project.java\nmain/org/apache/tools/ant/ProjectHelper.java\nmain/org/apache/tools/ant/input/DefaultInputHandler.java\nmain/org/apache/tools/ant/taskdefs/Ant.java\nmain/org/apache/tools/ant/taskdefs/Available.java\nmain/org/apache/tools/ant/taskdefs/BuildNumber.java\nmain/org/apache/tools/ant/taskdefs/Classloader.java\nmain/org/apache/tools/ant/taskdefs/Concat.java\nmain/org/apache/tools/ant/taskdefs/Copy.java\nmain/org/apache/tools/ant/taskdefs/Execute.java\nmain/org/apache/tools/ant/taskdefs/Expand.java\nmain/org/apache/tools/ant/taskdefs/GenerateKey.java\nmain/org/apache/tools/ant/taskdefs/Get.java\nmain/org/apache/tools/ant/taskdefs/Javac.java\nmain/org/apache/tools/ant/taskdefs/Javadoc.java\nmain/org/apache/tools/ant/taskdefs/Manifest.java\nmain/org/apache/tools/ant/taskdefs/Move.java\nmain/org/apache/tools/ant/taskdefs/Parallel.java\nmain/org/apache/tools/ant/taskdefs/Property.java\nmain/org/apache/tools/ant/taskdefs/Redirector.java\nmain/org/apache/tools/ant/taskdefs/Replace.java\nmain/org/apache/tools/ant/taskdefs/SQLExec.java\nmain/org/apache/tools/ant/taskdefs/SignJar.java\nmain/org/apache/tools/ant/taskdefs/TempFile.java\nmain/org/apache/tools/ant/taskdefs/Touch.java\nmain/org/apache/tools/ant/taskdefs/Untar.java\nmain/org/apache/tools/ant/taskdefs/XSLTProcess.java\nmain/org/apache/tools/ant/taskdefs/Zip.java\nmain/org/apache/tools/ant/taskdefs/compilers/DefaultCompilerAdapter.java\nmain/org/apache/tools/ant/taskdefs/optional/EchoProperties.java\nmain/org/apache/tools/ant/taskdefs/optional/Javah.java\nmain/org/apache/tools/ant/taskdefs/optional/Native2Ascii.java\nmain/org/apache/tools/ant/taskdefs/optional/ReplaceRegExp.java\nmain/org/apache/tools/ant/taskdefs/optional/i18n/Translate.java\nmain/org/apache/tools/ant/taskdefs/optional/junit/JUnitTask.java\nmain/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.java\nmain/org/apache/tools/ant/taskdefs/optional/net/FTP.java\nmain/org/apache/tools/ant/taskdefs/optional/net/SetProxy.java\nmain/org/apache/tools/ant/taskdefs/optional/splash/SplashTask.java\nmain/org/apache/tools/ant/taskdefs/optional/unix/AbstractAccessTask.java\nmain/org/apache/tools/ant/taskdefs/optional/unix/Chgrp.java\nmain/org/apache/tools/ant/taskdefs/optional/unix/Chown.java\nmain/org/apache/tools/ant/taskdefs/optional/unix/Symlink.java\nmain/org/apache/tools/ant/taskdefs/optional/windows/Attrib.java\nmain/org/apache/tools/ant/taskdefs/rmic/DefaultRmicAdapter.java\nmain/org/apache/tools/ant/types/AbstractFileSet.java\nmain/org/apache/tools/ant/types/Path.java\nmain/org/apache/tools/ant/util/FileUtils.java\nmain/org/apache/tools/ant/util/LoaderUtils.java\nmain/org/apache/tools/ant/util/WeakishReference.java\nmain/org/apache/tools/ant/util/optional/WeakishReference12.java\nmain/org/apache/tools/zip/ZipEntry.java\nmain/org/apache/tools/zip/ZipOutputStream.java\n\nPatch for sitraka only, unverified!:\nIndex: main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java\n===================================================================\nRCS file:\n/home/cvspublic/ant/src/main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java,v\nretrieving revision 1.18\ndiff -u -r1.18 Coverage.java\n--- main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java   25 Jul\n2003 12:14:44 -0000      1.18\n+++ main/org/apache/tools/ant/taskdefs/optional/sitraka/Coverage.java   15 Aug\n2003 09:47:35 -0000\n@@ -371,12 +371,10 @@\n         // check for info, do your best to select the java executable.\n         // JProbe 3.0 fails if there is no javaexe option. So\n         if (javaExe == null && (vm == null || \"java2\".equals(vm))) {\n-            if (!JavaEnvUtils.isJavaVersion(JavaEnvUtils.JAVA_1_1)) {\n-                if (vm == null) {\n-                    vm = \"java2\";\n-                }\n-                javaExe = new File(JavaEnvUtils.getJreExecutable(\"java\"));\n+            if (vm == null) {\n+                vm = \"java2\";\n             }\n+            javaExe = new File(JavaEnvUtils.getJreExecutable(\"java\"));\n         }\n     }\n                                                                               \n                                                                               \n     \n", "id": 42799, "time": "2003-08-15T11:32:46Z", "creator": "jkf@apache.org", "creation_time": "2003-08-15T11:32:46Z", "tags": [], "is_private": false}, {"count": 13, "tags": [], "creator": "jkf@apache.org", "text": "Created attachment 7833\nApplied parts removed, brought up to date, updated taskdefs added except sirtaka.", "id": 42800, "time": "2003-08-15T11:33:28Z", "bug_id": 22326, "creation_time": "2003-08-15T11:33:28Z", "is_private": false, "attachment_id": 7833}, {"count": 14, "tags": [], "bug_id": 22326, "text": "In the time between some items of this list have been taken into account, in the\ntime to come probably some more items will be taken into account. The rest will\nprobably come later. So let's free up this space in the open bug reports list.", "id": 68311, "time": "2004-12-11T15:16:02Z", "creator": "jkf@apache.org", "creation_time": "2004-12-11T15:16:02Z", "is_private": false, "attachment_id": null}]