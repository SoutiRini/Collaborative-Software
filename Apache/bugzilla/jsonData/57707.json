[{"count": 0, "text": "When attempting to run \"ant release\" on MacOSX 10.10, the build fails as follows:\n\nBUILD FAILED\n/Users/minfrin/src/tomcat/TOMCAT_7_0_59/build.xml:2082: Execute failed: java.io.IOException: Cannot run program \"wine\" (in directory \"/Users/minfrin/src/tomcat/TOMCAT_7_0_59/output/dist\"): error=2, No such file or directory\n\tat java.lang.ProcessBuilder.processException(ProcessBuilder.java:478)\n\tat java.lang.ProcessBuilder.start(ProcessBuilder.java:457)\n\tat java.lang.Runtime.exec(Runtime.java:593)\n\tat org.apache.tools.ant.taskdefs.launcher.Java13CommandLauncher.exec(Java13CommandLauncher.java:41)\n[SNIP]\n\nGoogling for a workaround led me to this:\n\nhttp://qnalist.com/questions/4654266/vote-release-apache-tomcat-8-0-0-rc10\n\nIn which the following is stated:\n\n013/12/23 Andrew Carr :\nYou cannot build a Windows Installer on an Unix system without wine.\n(The installer is built by NSIS which is a Windows executable).\nYou can skip the step by setting \"skip.installer\" property in Ant configuration.\n(This option is not mentioned in BUILDING.txt though).\n\nIf wine is a prerequisite, the ant build should fail cleanly pointing out in the clear and unambiguous error message that a) wine is required and b) that the skip.installer property can be used to bypass this if needed.", "creator": "minfrin@sharp.fm", "is_private": false, "id": 181762, "time": "2015-03-14T17:38:32Z", "bug_id": 57707, "creation_time": "2015-03-14T17:38:32Z", "tags": [], "attachment_id": null}, {"count": 1, "tags": [], "creator": "knst.kolinko@gmail.com", "is_private": false, "text": "RTFM (BUILDING.txt)", "id": 181763, "time": "2015-03-14T18:35:43Z", "bug_id": 57707, "creation_time": "2015-03-14T18:35:43Z", "attachment_id": null}, {"count": 2, "text": "Little-Net:TOMCAT_7_0_59 minfrin$ cat BUILDING.txt | grep wine\nLittle-Net:TOMCAT_7_0_59 minfrin$ \n\nNo reference to wine in the manual you referenced, sorry.\n\nA quick google shows how to fix this:\n\nhttp://stackoverflow.com/questions/16556746/check-if-executable-command-exists-using-ant", "creator": "minfrin@sharp.fm", "is_private": false, "id": 181765, "time": "2015-03-14T20:28:56Z", "bug_id": 57707, "creation_time": "2015-03-14T20:28:56Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 57707, "attachment_id": null, "text": "Use vi\nLines 268-272 in BUILDING.txt", "id": 181766, "time": "2015-03-14T20:32:52Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-03-14T20:32:52Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 57707, "attachment_id": null, "is_private": false, "id": 181776, "time": "2015-03-15T12:47:06Z", "creator": "minfrin@sharp.fm", "creation_time": "2015-03-15T12:47:06Z", "text": "Ah, WINE was capitalised, and so not searchable.\n\nThis patch fixes it:\n\nIndex: build.xml\n===================================================================\n--- build.xml\t(revision 1666658)\n+++ build.xml\t(working copy)\n@@ -2074,6 +2074,7 @@\n       <patternset refid=\"text.files\" />\n     </fixcrlf>\n \n+    <echo message=\"Note: The Windows installer requires '${nsis.exe}' on Windows or 'wine' on Unix. Use skip.installer to skip this step.\"/>\n     <exec dir=\"${tomcat.dist}\" executable=\"${nsis.exe}\" osfamily=\"windows\">\n       <arg value=\"/DNSISDIR=${nsis.home}\" />\n       <arg value=\"/V2\" />"}, {"count": 5, "tags": [], "creator": "knst.kolinko@gmail.com", "is_private": false, "text": "-1.\n1. The message should not be printed unless there is an error.\n2. The message is wrong. NSIS is automatically downloaded and used by the build script.\n3. One should not set the skip.installer without reading and understanding the documentation. Skipping the step creates an incomplete release.\n\nStarting with your original problem:  The message \"Cannot run program \"wine\"\" means exactly that - that wine is required. Why else would it try to run it? No fix needed.", "id": 181783, "time": "2015-03-15T16:48:52Z", "bug_id": 57707, "creation_time": "2015-03-15T16:48:52Z", "attachment_id": null}, {"count": 6, "text": "Come on guys, the big exception you get screams \"this is broken\". Throw the end user a bone and give them a message of some kind, even if that message is \"this is intentional\".\n\nThe idea that you have to go off and read some obscure document before you can build something is totally unreasonable. In the automake world I just run \"make dist\" and I have a release. In the maven world I run \"mvn release:prepare release:perform\" and I have a release.\n\nObviously the release is incomplete if you've added a \"skip\" option, that's not a justification for wasting the end user's time.", "creator": "minfrin@sharp.fm", "is_private": false, "id": 181801, "time": "2015-03-16T12:26:44Z", "bug_id": 57707, "creation_time": "2015-03-16T12:26:44Z", "tags": [], "attachment_id": null}, {"count": 7, "text": "(In reply to Graham Leggett from comment #6)\n> Come on guys, the big exception you get screams \"this is broken\". Throw the\n> end user a bone and give them a message of some kind, even if that message\n> is \"this is intentional\".\n\n+0\n\n> The idea that you have to go off and read some obscure document before you\n> can build something is totally unreasonable. In the automake world I just\n> run \"make dist\" and I have a release. In the maven world I run \"mvn\n> release:prepare release:perform\" and I have a release.\n\nI think you misunderstand what \"release\" means, here. When you do an \"ant release\" for Tomcat, you are building a complete release for voting and ultimately, publication. If you aren't a Tomcat committer, there's really no reason to be running \"ant release\" unless a) you intend to actually build a set of release-quality artifacts for Tomcat and b) you know what you are doing.\n\nUsing \"ant -projecthelp\" has this to say about the \"release\" target:\n release                          Create a Tomcat packaged distribution\n\nThe default target is \"deploy\", which says this:\n deploy                           Default. Builds a working Tomcat instance\n\n\nI'm pretty sure that's what you are looking for.\n\n> Obviously the release is incomplete if you've added a \"skip\" option, that's\n> not a justification for wasting the end user's time.\n\nWhy is an \"end user\" trying to do a release build, anyway?", "creator": "chris@christopherschultz.net", "is_private": false, "id": 181844, "time": "2015-03-17T15:53:07Z", "bug_id": 57707, "creation_time": "2015-03-17T15:53:07Z", "tags": [], "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 57707, "attachment_id": null, "id": 181847, "creation_time": "2015-03-17T20:50:15Z", "time": "2015-03-17T20:50:15Z", "creator": "knst.kolinko@gmail.com", "text": "(In reply to Graham Leggett from comment #6)\n> Come on guys, the big exception you get screams \"this is broken\".\n\nNo it is not. Learn how to read the message. It is in plain English.\n\nIt says exactly what is broken and what was tried, referencing the exact place (build.xml line 2082).", "is_private": false}, {"count": 9, "tags": [], "bug_id": 57707, "attachment_id": null, "text": "(In reply to Konstantin Kolinko from comment #8)\n\n> No it is not. Learn how to read the message. It is in plain English.\n\nThis is not the kind of response I'd expect to see from the ASF.\n\nIn response to:\n\n> Why is an \"end user\" trying to do a release build, anyway?\n\nI need a patched release to serve as input into an RPM spec file. This means running the release target. Obviously the Windows artefacts are of no use to the spec file, and so the lack of these is not an error in my case.", "id": 181931, "time": "2015-03-21T14:35:55Z", "creator": "minfrin@sharp.fm", "creation_time": "2015-03-21T14:35:55Z", "is_private": false}, {"count": 10, "tags": [], "creator": "chris@christopherschultz.net", "text": "One could argue that, if doing something as technical as preparing an RPM spec file, you probably should have at least skimmed the BUILDING.txt file to see what the requirements were for building a release build.\n\nAnyhow, in an effort to avoid Konstantin's -1 to your patch, I was going to try to do this:\n\n<exec executable=\"wine\" osfamily=\"unix\" resultproperty=\"need-wine\">\n...\n</exec>\n\n<fail if=\"need-wine\">\nBlah\n</fail>\n\nBut for some reason, I can't get the <exec> to NOT fail-on-error. I even tried setting failonerror=\"false\" (which is the default) but it still fails early:\n\ninstaller:\n     [echo] Builds a Windows installer based on Nullsoft Installer\n     [copy] Copying 1 file to /.../tomcat-7.0.x/output/dist\n\nBUILD FAILED\n/.../tomcat-7.0.x/build.xml:2126: Execute failed: java.io.IOException: Cannot run program \"wine\" (in directory \"/.../tomcat-7.0.x/output/dist\"): error=2, No such file or directory\n\nNote that, in the above error output, the \"installer\" target already has an \"echo\" that tells you what it's doing: \"Builds a Windows installer based on Nullsoft Installer\". The only thing you really added in your proposed patch was the note about the \"skip.installer\" property.\n\nI agree with Konstantin that anyone who doesn't understand the error, here, should read the BUILDING.txt file for guidance. The searchability of BUILDING.txt for \"Wine\" (or \"wine\" or \"WINE\", or \"WiNe\") is tough to fix for all possible combinations of case. Case-insensitive search, perhaps?\n\nIf you want to spend some time on a patch for build.xml that directs the user to BUILDING.txt if executing \"wine\" fails, I'd be happy to review and commit it, but I'm not going to bang my /own/ head against ant to get this solved.", "id": 181933, "time": "2015-03-21T21:58:29Z", "bug_id": 57707, "creation_time": "2015-03-21T21:58:29Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 57707, "attachment_id": null, "text": "Yes, the error message could be better but I also don't think it is unreasonable to expect folks to look at BUILDING.txt if they run into a problem building Tomcat. It is in the root of the src distro and the svn repo which are the first places I'd expect people to look for docs if they were having issues.\n\nTesting for the presence of a binary on the path (for a given OS) and then failing the build if it is not found is a on-trivial addition to what is already a large, complex build file. There is a balance to strike between between catching all failure modes and a simpler build file.\n\nMy instinct was to close this as WONTFIX but I wanted a better idea of how much code was required. Having written the patch and found it was ~20 lines I was on the fence whether to apply it or not. It isn't small, but neither is it huge and it is fairly simple so I decided, on balance, to apply it. If I have known at the start it was ~20 lines I probably would have followed by instincts and closed this as WONTFIX.\n\nThe patch has been applied to trunk and I'll back-port it to 8.0.x but I don't intend to back-port it to 7.0.x. If will probably get back-ported when/if code signing is back-ported to 7.0.x.", "id": 182695, "time": "2015-04-28T13:20:41Z", "creator": "markt@apache.org", "creation_time": "2015-04-28T13:20:41Z", "is_private": false}]