[{"count": 0, "tags": [], "bug_id": 55105, "attachment_id": null, "is_private": false, "id": 167868, "time": "2013-06-17T08:17:17Z", "creator": "uogra@adobe.com", "creation_time": "2013-06-17T08:17:17Z", "text": "Workbook wb = new XSSFWorkbook();\n\t\tCreationHelper createHelper = wb.getCreationHelper();\n\t\tSheet sheet = wb.createSheet();\n\t\tRow row = sheet.createRow(0);\n\t\tCellStyle cellStyle = wb.createCellStyle();\n\t\tcellStyle.setDataFormat((short) 14);\n\t\tCell cell = row.createCell(0);\n\t\tcell.setCellType(Cell.CELL_TYPE_NUMERIC);\n\t\tcell.setCellValue(new Date(\"13-jan-2013\"));\n\t\tcell.setCellStyle(cellStyle);\n\t\t\n\t\tcell = row.createCell(1);\n\t\tcell.setCellType(Cell.CELL_TYPE_STRING);\n\t\tcell.setCellValue(\"13-jan-2013\");\n\t\tcell.setCellStyle(cellStyle);\n\t\t sheet.autoSizeColumn(0, false);\n\t\t sheet.autoSizeColumn(1, false);\n\nIn the above example I am adding 2 cells to different columns. One has string type value and other has date type value. Value is same \"13-jan-2013\"\n\nWhen I call autosizecolumn in both columns, first ccolumn doesnt exapnd to fit in the data whereas 2nd column expands properly.\n\nI noticed this thing :\nInternally autosizecolumn  is using SheetUtil.getColumnWidth to get current max width of column. It is returning a value of 8 something.\nPreviously autosizecolumn   was using ColumnHelper.getColumnWidth method and used to return 12 for same data (\"13-jan-2013\"). This is why in previous version  autosizecolumn   was working properly for even date type fields"}, {"count": 1, "tags": [], "bug_id": 55105, "attachment_id": null, "is_private": false, "id": 167904, "time": "2013-06-18T22:30:25Z", "creator": "apache@gagravarr.org", "creation_time": "2013-06-18T22:30:25Z", "text": "Do you have the correct fonts installed on your system and available to Java? POI uses the fonts to work out how wide columns are, and it can't get it right if Java doesn't have the fonts you're using available. Are they all correctly there?"}, {"count": 2, "tags": [], "bug_id": 55105, "attachment_id": null, "id": 167915, "time": "2013-06-19T12:33:33Z", "creator": "uogra@adobe.com", "creation_time": "2013-06-19T12:33:33Z", "is_private": false, "text": "The same code if I run with 3.7 version runs fine and it properly autosizes the column\nBut in 3.9 version it doesnt and internal implemented method returns lesser value of max column width.\nBoth examples I have run on same system. Plus we have also run on other testing systems\nSo I don't think fonts are the issue"}, {"count": 3, "tags": [], "creator": "uogra@adobe.com", "attachment_id": null, "id": 172104, "time": "2014-01-06T12:28:41Z", "bug_id": 55105, "creation_time": "2014-01-06T12:28:41Z", "is_private": false, "text": "Any progress on this bug?"}, {"count": 4, "tags": [], "bug_id": 55105, "attachment_id": null, "text": "i don't see a bug here.\nyou are formatting the Date Cell with format id 14 which seems to be locale dependent.\n\ni tried this snippet\n\nXSSFDataFormat format = wb.createDataFormat();\ncellStyle.setDataFormat(format.getFormat(\"dd-MMM-yyyy\"));\n\nand both Colums are properly sized.", "id": 172121, "time": "2014-01-06T18:43:16Z", "creator": "bodo@bodow.de", "creation_time": "2014-01-06T18:43:16Z", "is_private": false}]