[{"count": 0, "tags": [], "text": "In order to authenticate against ActiveDirectory-style uids with backslashes in \nthem the authentication user name contains this character.\n\nUnfortunately the LDAP logs are showing that Apache is over-escaping the \nbackslash -- at least on Windows (2000 SP4, all security updates applied).  I \nsuspect this above the LDAP SDK layer and thus applies to all platforms, but I \ncould be proven wrong, of course.\n\nThis is a serious issue to anyone needing to support use of such (existing) \ndirectories.  Both workarounds and pointers to code areas to investigate (other \nthan \"look at the mod_auth_ldap and/or util_ldap sources\" -- I know that much) \nwould be greatly appreciated!", "attachment_id": null, "bug_id": 24437, "id": 46875, "time": "2003-11-05T16:58:29Z", "creator": "jessh@ptc.com", "creation_time": "2003-11-05T16:58:29Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 24437, "attachment_id": null, "text": "It turns out that the Microsoft LDAP SDK escapes these characters on its own!\n\nI found the filter escape code in mod_auth_ldap_build_filter in mod_auth_ldap.c\nand observed that its input and output was exactly what I'd expect.  I also note\nthat it's output is what is passed to the LDAP SDK.\n\nI commented out the escape code (in the simplest fashion, i.e. yes, I could use\nstrncpy at this point) and then (and only then) am able to authenticate with \\,\n), (, and * in my user name.\n\nI assume this is a Microsoft LDAP SDK feature as my other LDAP SDK experience\nsuggests the escaping done by mod_auth_ldap is required.\n\nAll the same, I believe we should #if out this filter code when using the\nMicrosoft LDAP SDK -- as it only currently serves to prevent that which it is\nintended to allow.\n\nMy change is to add the comments in the code excerpt below taken from\nmod_auth_ldap.c (sorry, I'm not creating a patch as strncpy would be better,\netc, etc):\n\n    filtbuf_end = filtbuf + FILTER_LENGTH - 1;\n    for (p = user, q=filtbuf + strlen(filtbuf);\n         *p && q < filtbuf_end; *q++ = *p++) {\n/* Microsoft LDAP SDK does this automatically (!); doing this here causes\ndouble-escaping!!!\n   The following code block must therefore be removed when using Microsoft's\nLDAP SDK.\n*/\n/*\n        if (strchr(\"*()\\\\\", *p) != NULL) {\n            *q++ = '\\\\';\n            if (q >= filtbuf_end) {\n\t        break;\n\t    }\n        }\n*/\n    }\n", "id": 46884, "time": "2003-11-05T18:41:08Z", "creator": "jessh@ptc.com", "creation_time": "2003-11-05T18:41:08Z", "is_private": false}, {"count": 2, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "is_private": false, "id": 47356, "time": "2003-11-14T17:23:18Z", "bug_id": 24437, "creation_time": "2003-11-14T17:23:18Z", "text": "\n  I believe your patch is correct, however we need to use a #ifdef to make\n  this determination, to prevent clashes with folks building under OpenLDAP\n  or the Netscape LDAP sdk.\n"}, {"count": 3, "tags": [], "text": "Yes, that's a big reason why I did not provide a patch -- I had not taken the\ntime to investigate the proper #ifdef's, etc, to use.", "is_private": false, "bug_id": 24437, "id": 47365, "time": "2003-11-14T17:43:50Z", "creator": "jessh@ptc.com", "creation_time": "2003-11-14T17:43:50Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "minfrin@sharp.fm", "attachment_id": null, "is_private": false, "id": 57763, "time": "2004-05-21T01:16:05Z", "bug_id": 24437, "creation_time": "2004-05-21T01:16:05Z", "text": "Patch committed to v2.1.0-dev\n\nPlease test if this solves this problem.\n"}, {"count": 5, "tags": [], "creator": "jessh@ptc.com", "text": "Doh!\n\nI'm sure that will work as it is identical to my fix apart from a proper #if block.\n\nI should have taken the 2 extra minutes when I patched this on my own copy to\nlook in apr_ldap.h and see\n  #define APR_HAS_MICROSOFT_LDAPSDK   1\non Windows and done a proper #if block around this.\n\nThanks for rounding out this fix and getting it in.  A merge back to 2.0 would\nbe good too :-)", "id": 57809, "attachment_id": null, "bug_id": 24437, "creation_time": "2004-05-21T14:56:33Z", "time": "2004-05-21T14:56:33Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 24437, "attachment_id": null, "id": 57883, "creation_time": "2004-05-21T23:22:25Z", "time": "2004-05-21T23:22:25Z", "creator": "minfrin@sharp.fm", "text": "Fixed in v2.0.50-dev.\n", "is_private": false}, {"count": 7, "tags": [], "text": "As the person who provided the patch, I must regretfully re-open this SPR.\n\nThe patch works great *except* when the character immediately following the \\ is\na valid hexidecimal character.  I'm not sure how to handle this case with the\nMicrosoft LDAP SDK.\n\nHopefully we're missing some simple \"behave correctly\" flag on the Microsoft\nLDAP SDK...", "attachment_id": null, "bug_id": 24437, "id": 64200, "time": "2004-09-24T19:27:51Z", "creator": "jessh@ptc.com", "creation_time": "2004-09-24T19:27:51Z", "is_private": false}, {"count": 8, "tags": [], "creator": "jessh@ptc.com", "attachment_id": 12919, "is_private": false, "id": 64494, "time": "2004-10-01T22:02:59Z", "bug_id": 24437, "creation_time": "2004-10-01T22:02:59Z", "text": "Created attachment 12919\nPatch to address remaining issues (\\[0-9,a-f], e.g. \\a, etc)"}, {"count": 9, "tags": [], "creator": "jessh@ptc.com", "text": "I discovered Microsoft documentation at\nhttp://msdn.microsoft.com/library/default.asp?url=/library/en-us/adsi/adsi/search_filter_syntax.asp\nthat essentially states \"RFC 1960 says...\", followed by an accurate quote of\nthis IETF RFC, followed by section titled \"Special characters\" where they state\na completely different means by which they require you to handle all the special\ncharacters from the IETF RFC -- without actually stating that they're requiring\nother syntax than that indicated by the RFC much less why they require this!\n\nI produced a patch wherein the Microsoft documentation is obeyed when using\ntheir LDAP SDK.  This seems to fix the remaining issues, so I've attached the\npatch (see above).", "id": 64495, "time": "2004-10-01T22:04:17Z", "bug_id": 24437, "creation_time": "2004-10-01T22:04:17Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "minfrin@apache.org", "text": "Is it possible to create a patch for v2.1 also? The patch does not apply cleanly\nto mod_authnz_ldap.c, not sure why.\n", "id": 64520, "time": "2004-10-03T15:31:21Z", "bug_id": 24437, "creation_time": "2004-10-03T15:31:21Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 24437, "attachment_id": 12930, "id": 64560, "creation_time": "2004-10-04T12:55:28Z", "time": "2004-10-04T12:55:28Z", "creator": "jessh@ptc.com", "text": "Created attachment 12930\nPatch against HEAD rather than against 2.0.52", "is_private": false}, {"count": 12, "tags": [], "bug_id": 24437, "attachment_id": null, "text": "I've attached a patch against mod_authnz_ldap.c as requested.\n\nNote that I've only tested this on Windows against Microsoft's LDAP at this\npoint (the problematic case).  After pre-processing, there should be no\ndifferences in the code for any other platform resulting from my changes.", "id": 64561, "time": "2004-10-04T12:58:31Z", "creator": "jessh@ptc.com", "creation_time": "2004-10-04T12:58:31Z", "is_private": false}, {"count": 13, "attachment_id": null, "creator": "minfrin@apache.org", "text": "Committed to HEAD, backport proposed to v2.0", "id": 64588, "time": "2004-10-05T00:34:39Z", "bug_id": 24437, "creation_time": "2004-10-05T00:34:39Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "creator": "minfrin@apache.org", "text": "The LDAP code in v2.0 is effectively abandoned, as it's too difficult to fix at\nthis point (most of the fixes have involved major rewrites and have gone in\nhttpd v2.1 and apr v1.1).\n\nIf this is broken in httpd v2.1, please reopen this bug.\n", "id": 69948, "attachment_id": null, "bug_id": 24437, "creation_time": "2005-01-21T22:48:40Z", "time": "2005-01-21T22:48:40Z", "is_private": false}, {"count": 15, "tags": [], "creator": "jessh@ptc.com", "text": "I guess I'll check again in 2.2 whenever it is \"stable\".\n\nI have to support a redistribution of a stable 2.x release, so at this time that\nwould be 2.0.52.  Thus I'll keep applying my patch to 2.0.x.", "id": 69955, "attachment_id": null, "bug_id": 24437, "creation_time": "2005-01-21T23:08:14Z", "time": "2005-01-21T23:08:14Z", "is_private": false}, {"count": 16, "tags": [], "text": "Hello,\n\nI just found same problem using 2.2.22-1ubuntu1.4 apache2 package.\nSeems like this bug still needs to be patched.\n\nAny help with this problem will be appreciated.", "is_private": false, "bug_id": 24437, "id": 183928, "time": "2015-07-07T08:50:54Z", "creator": "partner1@inbox.lv", "creation_time": "2015-07-07T08:50:54Z", "attachment_id": null}]