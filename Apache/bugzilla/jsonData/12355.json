[{"count": 0, "tags": [], "creator": "sb@samuelballe.com", "attachment_id": null, "is_private": false, "id": 22355, "time": "2002-09-06T10:19:56Z", "bug_id": 12355, "creation_time": "2002-09-06T10:19:56Z", "text": "when configuring SSLVerifyClient directive from global none to location \nrequire, php scripts inside location are no more able to receive post data. \n\nError Method Not Allowed then occurs.\nerror log shows \"[error] SSL Re-negotiation in conjunction with POST method not \nsupported!\" when SSLVerifyClient is set to 'required' but not when set to 'none'\n\nthis configuration inside ssl virtualhost section activate the bug :\n----\nSSLEngine on\nSSLVerifyClient none\nSSLVerifyDepth  1\nSSLOptions +OptRenegotiate\n<location /consultation/ >\n        SSLVerifyClient require\n</location>\n----\nthis configuration does not activate the bug :\nSSLEngine on\nSSLVerifyClient require\nSSLVerifyDepth  1\nSSLOptions +OptRenegotiate\n<location /consultation/ >\n        SSLVerifyClient require\n</location>"}, {"count": 1, "tags": [], "creator": "slive@apache.org", "attachment_id": null, "id": 24743, "time": "2002-10-17T02:35:23Z", "bug_id": 12355, "creation_time": "2002-10-17T02:35:23Z", "is_private": false, "text": "[This is a mass bug update.]\nThis bug reports a problem in an older version of Apache 2.\nCould you please update to the most recent version and see\nif you can reproduce this problem.  If the bug still exists,\nplease update the bug with the latest version number.  If \nthe bug no longer exists, please close the bug report.\n\nSorry for this impersonal response, but we get many more bug\nreports than our volunteers can keep up with.\nThanks for using Apache!"}, {"count": 2, "tags": [], "bug_id": 12355, "is_private": false, "text": "This bug exists also in Apache/2.0.43 (WIN32) mod_ssl/2.8.11 OpenSSL/0.9.6g.\nThis bug appears when runnimg under both Windows NT4.0 and XP(NT5.1).", "id": 25044, "time": "2002-10-23T13:36:40Z", "creator": "wolf-dietrich.moeller@siemens.com", "creation_time": "2002-10-23T13:36:40Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 12355, "is_private": false, "text": "Addition to last comment:\n\nSorry, it must read Apache/2.0.43 (WIN32) mod_ssl/2.0.43 OpenSSL/0.9.6g", "id": 25047, "time": "2002-10-23T14:08:55Z", "creator": "wolf-dietrich.moeller@siemens.com", "creation_time": "2002-10-23T14:08:55Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "migor@op.pl", "attachment_id": null, "id": 26144, "time": "2002-11-12T17:52:14Z", "bug_id": 12355, "creation_time": "2002-11-12T17:52:14Z", "is_private": false, "text": "I observe the same bug with Apache 2.0.43 running on Linux 2.4.19 box, but \nwith proprietary script handler. "}, {"count": 5, "tags": [], "creator": "pa@ifsic.univ-rennes1.fr", "attachment_id": null, "id": 26169, "time": "2002-11-13T10:19:32Z", "bug_id": 12355, "creation_time": "2002-11-13T10:19:32Z", "is_private": false, "text": "Also observed on a Linux RedHat 8.0 (2.4.18-17 kernel) box running apache\n2.0.43-1, mod_ssl-2.0.43-1 and php 4.2.2-8.\n\n"}, {"count": 6, "tags": [], "text": "After setting up SSL to require client authentication and importing the \ncertificates into browsers, it works with Netscape 4.79 but not MSIE6 \n(6.0.2800.1106.xpsp1.020828-1920).\n\nThe https error file says:\n[error] SSL handshake failed (server myserver.com:443, client 192.168.1.2)\n[error] SSL Library Error: 336105671 error:140890C7:lib(20):func(137):reason\n(199)\nThe first time I also get the spurious SSL handshake interrupt message.\n\nServer config:\nApache/2.0.43 (Unix) mod_ssl/2.0.43 OpenSSL/0.9.7 PHP/4.3.0\nKernel 2.4.8-26mdk", "is_private": false, "bug_id": 12355, "id": 31690, "time": "2003-02-20T18:11:58Z", "creator": "zluugstix@hotmail.com", "creation_time": "2003-02-20T18:11:58Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "ekraar@banking.com", "attachment_id": null, "id": 34742, "time": "2003-04-08T17:10:39Z", "bug_id": 12355, "creation_time": "2003-04-08T17:10:39Z", "is_private": false, "text": "When configured for client certificate authentication, POST method fails after\nKeepAlive timeout - if KeepAlive is disabled, POST method always fails. \nSSLOptions +OptRenegotiate does not fix the problem.\n\nServer: Apache/2.0.45 (Unix) mod_ssl/2.0.45 OpenSSL/0.9.7a\nAIX 4.3.3\n\nI have tested IE 5.5, Netscape 4.8, Netscape 7, and Mozilla 1.3 - All browsers\nseem to be affected.  Log files can be found below.\n\nIE 5.5 generates a segfault of the child and a 302 error along with the general\nsymptoms - details of this can be found in the logs below.\n\n--------------------------------------------------------------------------------------------------\nConfiguration excerpts:\n\nKeepAlive On\nKeepAliveTimeout 15\n\nSSLSessionCache dbm:/var/adm/httpd.ssl.cache\nSSLSessionCacheTimeout 300\nSSLMutex file:/var/adm/httpd.ssl.mutex\n\n<Directory /docs/clientcert>\n\tSSLOptions +StdEnvVars +ExportCertData +OptRenegotiate\n\tSSLVerifyClient require\n\tSSLVerifyDepth 2\n\tSSLRequire %{SSL_CLIENT_CERT} eq file(\"<certfile>\") \\\n\t\tor %{SSL_CLIENT_CERT} eq file(\"<certfile>\")\n\tOrder Deny,Allow\n\tDeny from all\n\tAllow from 1.1.1.1\n</Directory>\n\n--------------------------------------------------------------------------------------------------\nHTML files used for testing:\n\n$ cat index.html\n<HTML>\n<BODY>\nHello client cert\n\n<FORM action=index2.html method=post>\n<INPUT value=\"Post to index2.html\" type=submit>\n</FORM>\n\n</BODY>\n</HTML>\n\n$ cat index2.html\n<HTML>\n<BODY>\nHello client cert - index2\n\n<FORM action=index.html method=post>\n<INPUT value=\"Post to index.html\" type=submit>\n</FORM>\n\n</BODY>\n</HTML>\n\n--------------------------------------------------------------------------------------------------\nVH access log:\n2.2.2.2 - - [07/Apr/2003:14:23:57 -0700] \"GET /clientcert/index.html HTTP/1.1\"\n200 140 \"-\" \"Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.3)\nGecko/20030312\" GET /clientcert/index.html - \"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:14:24:03 -0700] \"POST /clientcert/index2.html HTTP/1.1\"\n200 144 \"https://test.domain.com/clientcert/index.html\" \"Mozilla/5.0 (Windows;\nU; Windows NT 5.0; en-US; rv:1.3) Gecko/20030312\" POST /clientcert/index2.html -\n\"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:14:24:03 -0700] \"POST /clientcert/index.html HTTP/1.1\"\n200 140 \"https://test.domain.com/clientcert/index2.html\" \"Mozilla/5.0 (Windows;\nU; Windows NT 5.0; en-US; rv:1.3) Gecko/20030312\" POST /clientcert/index.html -\n\"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:14:24:04 -0700] \"POST /clientcert/index2.html HTTP/1.1\"\n200 144 \"https://test.domain.com/clientcert/index.html\" \"Mozilla/5.0 (Windows;\nU; Windows NT 5.0; en-US; rv:1.3) Gecko/20030312\" POST /clientcert/index2.html -\n\"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:14:24:05 -0700] \"POST /clientcert/index.html HTTP/1.1\"\n200 140 \"https://test.domain.com/clientcert/index2.html\" \"Mozilla/5.0 (Windows;\nU; Windows NT 5.0; en-US; rv:1.3) Gecko/20030312\" POST /clientcert/index.html -\n\"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:14:24:06 -0700] \"POST /clientcert/index2.html HTTP/1.1\"\n200 144 \"https://test.domain.com/clientcert/index.html\" \"Mozilla/5.0 (Windows;\nU; Windows NT 5.0; en-US; rv:1.3) Gecko/20030312\" POST /clientcert/index2.html -\n\"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:14:24:07 -0700] \"POST /clientcert/index.html HTTP/1.1\"\n200 140 \"https://test.domain.com/clientcert/index2.html\" \"Mozilla/5.0 (Windows;\nU; Windows NT 5.0; en-US; rv:1.3) Gecko/20030312\" POST /clientcert/index.html -\n\"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:14:25:12 -0700] \"POST /clientcert/index2.html HTTP/1.1\"\n405 244 \"https://test.domain.com/clientcert/index.html\" \"Mozilla/5.0 (Windows;\nU; Windows NT 5.0; en-US; rv:1.3) Gecko/20030312\" POST /clientcert/index2.html -\n\"HTTP/1.1\" (-)\n\nVH error log:\n[Mon Apr 07 14:25:12 2003] [error] SSL Re-negotiation in conjunction with POST\nmethod not supported!\nhint: try SSLOptions +OptRenegotiate\n\n--------------------------------------------------------------------------------------------------\nWith Internet Explorer 5.5:\n\nVH access log:\n2.2.2.2 - - [07/Apr/2003:15:46:15 -0700] \"GET /clientcert/ HTTP/1.1\" 302 227 \"-\"\n\"Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 5.0; T312461)\" GET /clientcert/ -\n\"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:15:46:16 -0700] \"GET /clientcert/ HTTP/1.1\" 200 140 \"-\"\n\"Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 5.0; T312461)\" GET\n/clientcert/index.html - \"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:15:46:24 -0700] \"POST /clientcert/index2.html HTTP/1.1\"\n200 144 \"https://test.domain.com/clientcert/\" \"Mozilla/4.0 (compatible; MSIE\n5.5; Windows NT 5.0; T312461)\" POST /clientcert/index2.html - \"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:15:46:25 -0700] \"POST /clientcert/index.html HTTP/1.1\"\n200 140 \"https://test.domain.com/clientcert/index2.html\" \"Mozilla/4.0\n(compatible; MSIE 5.5; Windows NT 5.0; T312461)\" POST /clientcert/index.html -\n\"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:15:46:26 -0700] \"POST /clientcert/index2.html HTTP/1.1\"\n200 144 \"https://test.domain.com/clientcert/index.html\" \"Mozilla/4.0\n(compatible; MSIE 5.5; Windows NT 5.0; T312461)\" POST /clientcert/index2.html -\n\"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:15:46:27 -0700] \"POST /clientcert/index.html HTTP/1.1\"\n200 140 \"https://test.domain.com/clientcert/index2.html\" \"Mozilla/4.0\n(compatible; MSIE 5.5; Windows NT 5.0; T312461)\" POST /clientcert/index.html -\n\"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:15:46:28 -0700] \"POST /clientcert/index2.html HTTP/1.1\"\n200 144 \"https://test.domain.com/clientcert/index.html\" \"Mozilla/4.0\n(compatible; MSIE 5.5; Windows NT 5.0; T312461)\" POST /clientcert/index2.html -\n\"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:15:46:29 -0700] \"POST /clientcert/index.html HTTP/1.1\"\n200 140 \"https://test.domain.com/clientcert/index2.html\" \"Mozilla/4.0\n(compatible; MSIE 5.5; Windows NT 5.0; T312461)\" POST /clientcert/index.html -\n\"HTTP/1.1\" (-)\n2.2.2.2 - - [07/Apr/2003:15:46:58 -0700] \"POST /clientcert/index2.html HTTP/1.1\"\n405 244 \"https://test.domain.com/clientcert/index.html\" \"Mozilla/4.0\n(compatible; MSIE 5.5; Windows NT 5.0; T312461)\" POST /clientcert/index2.html -\n\"HTTP/1.1\" (-)\n\nVH error log:\n[Mon Apr 07 15:46:15 2003] [error] Re-negotiation handshake failed: Not accepted\nby client!?\n[Mon Apr 07 15:46:58 2003] [error] SSL Re-negotiation in conjunction with POST\nmethod not supported!\nhint: try SSLOptions +OptRenegotiate\n\nServer error log:\n[Mon Apr 07 15:46:16 2003] [notice] child pid 28262 exit signal Segmentation\nfault (11)"}, {"count": 8, "tags": [], "creator": "m@tthias.net", "attachment_id": null, "is_private": false, "id": 37096, "time": "2003-05-12T22:36:45Z", "bug_id": 12355, "creation_time": "2003-05-12T22:36:45Z", "text": "The existance of this \"bug\" is documented in modules/ssl/ssl_engine_kernel.c\nline 525. But it would really be nice to reimplement this feature."}, {"count": 9, "tags": [], "creator": "hartmut.keil@gmx.ch", "attachment_id": 9626, "is_private": false, "id": 49319, "time": "2003-12-18T12:33:22Z", "bug_id": 12355, "creation_time": "2003-12-18T12:33:22Z", "text": "Created attachment 9626\ndiff against httpd-2.0.48"}, {"count": 10, "attachment_id": null, "bug_id": 12355, "is_private": false, "id": 49325, "time": "2003-12-18T12:46:15Z", "creator": "hartmut.keil@gmx.ch", "creation_time": "2003-12-18T12:46:15Z", "tags": [], "text": "Fixed the problem in the following way:\nBefore the renegotiation is starting the body of the POST request\nwill be readed via ap_get_client_block().(So content-length, chunking etc.\nis handeld correctly.) \nThe data will be stored in a brigade and an input filter\nwill be added just after the http_header_filter. That input filter has the\ndata from it's ctx. \nSo in any subsequent read call that input filter will be invoked and \ncan return the stored data.\n\n\nP.S. Im not sure if the upload of the diff is ok, so I paste it to be sure\n\n\n*** mod_ssl.h.patched\tThu Dec 18 13:11:48 2003\n--- mod_ssl.h\tThu Dec 18 13:13:19 2003\n***************\n*** 709,714 ****\n--- 709,715 ----\n  void         ssl_io_filter_init(conn_rec *, SSL *);\n  void         ssl_io_filter_register(apr_pool_t *);\n  long         ssl_io_data_cb(BIO *, int, MODSSL_BIO_CB_ARG_TYPE *, int, long,\nlong);\n+ long         ssl_io_suck(request_rec *);\n  \n  /*  PRNG  */\n  int          ssl_rand_seed(server_rec *, apr_pool_t *, ssl_rsctx_t, char *);\n*** ssl_engine_kernel.c.patched\tThu Dec 18 13:11:39 2003\n--- ssl_engine_kernel.c\tThu Dec 18 13:15:04 2003\n***************\n*** 583,596 ****\n       *\n       * !! BUT ALL THIS IS STILL NOT RE-IMPLEMENTED FOR APACHE 2.0 !!\n       */\n!     if (renegotiate && !renegotiate_quick && (r->method_number == M_POST)) {\n          ap_log_error(APLOG_MARK, APLOG_ERR, 0, r->server,\n                       \"SSL Re-negotiation in conjunction \"\n                       \"with POST method not supported!\\n\"\n                       \"hint: try SSLOptions +OptRenegotiate\");\n! \n          return HTTP_METHOD_NOT_ALLOWED;\n      }\n  \n      /*\n       * now do the renegotiation if anything was actually reconfigured\n--- 583,602 ----\n       *\n       * !! BUT ALL THIS IS STILL NOT RE-IMPLEMENTED FOR APACHE 2.0 !!\n       */\n! \tif (renegotiate && !renegotiate_quick && (r->method_number == M_POST)) {\n! #ifdef SSL_CONSERVATIVE \t\t\n          ap_log_error(APLOG_MARK, APLOG_ERR, 0, r->server,\n                       \"SSL Re-negotiation in conjunction \"\n                       \"with POST method not supported!\\n\"\n                       \"hint: try SSLOptions +OptRenegotiate\");\n! \t\t\n          return HTTP_METHOD_NOT_ALLOWED;\n+ #else\t\t\n+ \t\tif( ssl_io_suck(r) != OK) {\n+ \t\t\treturn HTTP_METHOD_NOT_ALLOWED;\n+ \t\t}\n      }\n+ #endif /* SSL_CONSERVATIVE */\n  \n      /*\n       * now do the renegotiation if anything was actually reconfigured\n*** ssl_engine_io.c.patched\tThu Dec 18 13:12:02 2003\n--- ssl_engine_io.c\tThu Dec 18 13:21:31 2003\n***************\n*** 897,902 ****\n--- 897,987 ----\n  }\n  \n  static const char ssl_io_filter[] = \"SSL/TLS Filter\";\n+ static const char ssl_buff_filter[] = \"SSL/TLS Buffering Filter\";\n+ /*\n+  * reads the buffered data during a POST request with renegotiation\n+  * will be registere at runtime.\n+  * NOTE: we try to buffer the complete body. Use the attribute\n'LimitRequestBody'\n+  * preventing DOS attacks.\n+  */\n+ long ssl_io_suck(request_rec *r)\n+ {\n+ \tapr_bucket *bucket;\n+ \tapr_bucket_brigade *bb =\napr_brigade_create(r->pool,r->connection->bucket_alloc);\n+ \n+ \tint readed = 0;\n+ \tint len = 0;\n+ \tint toRead= 0;\n+ \tchar *buffer = NULL;\n+ \tchar *pos = NULL;\n+ \t\n+ \tif(ap_setup_client_block(r,REQUEST_CHUNKED_DECHUNK) !=OK) {\n+ \t\treturn HTTP_METHOD_NOT_ALLOWED; \n+ \t}\n+ \n+ \tif(!ap_should_client_block(r)) {\n+ \t\treturn OK;\n+ \t}\n+ \t\n+ \tdo {\n+ \t\tbuffer = apr_pcalloc(r->pool,HUGE_STRING_LEN);\n+ \t\ttoRead = HUGE_STRING_LEN;\n+ \n+ \t\t/* check malloc */\n+ \t\tif(buffer == NULL) {\n+ \t\t\tap_log_error(APLOG_MARK, APLOG_ERR, 0, r->server,\n+                      \"SSL Re-negotiation in conjunction \"\n+ \t\t\t\t     \"with POST (buffering body failed)!\\n\");\n+ \t\t\tapr_brigade_destroy(bb);\n+ \t\t\treturn HTTP_METHOD_NOT_ALLOWED;\t\t\t\n+ \t\t}\n+ \t\t\n+ \t\t/* fill the bucket */\n+ \t\tpos = buffer;\n+ \t\tlen = 0;\n+ \t\tdo {\n+ \t\t\treaded  = ap_get_client_block(r,pos,toRead);\n+ \n+ \t\t\tif(readed <=0) {\n+ \t\t\t\tbreak;\n+ \t\t\t}\n+ \t\t\t\n+ \t\t\ttoRead  -= readed;\n+ \t\t\t\n+ \t\t\t/* sanity */\n+ \t\t\tif(toRead<0) {\n+ \t\t\t\treturn HTTP_METHOD_NOT_ALLOWED;\n+ \t\t\t}\n+ \n+ \t\t\tpos += readed;\n+ \t\t\tlen += readed;\t\n+ \t\t}\n+ \t\twhile(toRead>0);\n+ \n+ \t\t/* check last read result */\n+ \t\tif(readed<0) {\n+ \t\t\tap_log_error(APLOG_MARK, APLOG_ERR, 0, r->server,\n+                      \"SSL Re-negotiation in conjunction \"\n+ \t\t\t\t     \"with POST (reading body failed)!\\n\");\n+ \t\t\tapr_brigade_destroy(bb);\n+ \t\t\treturn HTTP_METHOD_NOT_ALLOWED; \n+ \t\t}\n+ \t\t\n+ \t\t/* check if we have readed everything */\n+ \t\tif(len == 0) {\n+ \t\t\tbreak;\n+ \t\t}\n+ \t\tbucket =\napr_bucket_pool_create(buffer,len,r->pool,r->connection->bucket_alloc);\n+ \t\t\n+         APR_BRIGADE_INSERT_TAIL(bb, bucket);\n+ \t} \n+ \twhile(1);\n+ \t\n+ \t//add the ssl_buff_filter_input\n+ \tap_add_input_filter(ssl_buff_filter, bb, r, r->connection);\n+ \t\n+ \treturn OK;\t\t\t\t\t\t\t\t\t  \n+ }\n  \n  /*\n   *  Close the SSL part of the socket connection\n***************\n*** 1361,1366 ****\n--- 1446,1529 ----\n      return status;\n  }\n  \n+ static apr_status_t ssl_buff_filter_input(ap_filter_t *f,\n+                                         apr_bucket_brigade *bb,\n+                                         ap_input_mode_t mode,\n+                                         apr_read_type_e block,\n+                                         apr_off_t readbytes)\n+ {\n+ \tapr_bucket_brigade *aa = f->ctx;\n+ \tapr_status_t  rv;\n+ \t\n+ \tif(aa && !APR_BRIGADE_EMPTY(aa)) {\n+ \n+ \t\tif(mode == AP_MODE_READBYTES) {\n+ \t\t\tapr_bucket *b;\n+ \t\t\tapr_off_t missing = readbytes;\n+ \t\t\tapr_size_t len;\n+ \t\t\tconst char *tmp;\n+ \t\n+ \t\t\twhile (!APR_BRIGADE_EMPTY(aa)) {\n+ \t\t\t\tb = APR_BRIGADE_FIRST(aa);\n+ \t\t\t\n+ \t\t\t\trv = apr_bucket_read(b, &tmp, &len, APR_BLOCK_READ);\n+ \t\t\t\tif (rv != APR_SUCCESS) {\n+ \t\t\t\t\treturn rv;\n+ \t\t\t\t}\n+ \t\t\t\t\n+ \t\t\t\t/* consume whole bucket */\n+ \t\t\t\tif(missing >= len) {\n+ \t\t\t\t\tAPR_BUCKET_REMOVE(b);\n+ \t\t\t\t\tAPR_BRIGADE_INSERT_TAIL(bb,b);\n+ \t\t\t\t}\n+ \t\t\t\t/* comsume only a part */ \n+ \t\t\t\telse{\n+ \t\t\t\t\trv = apr_bucket_split(b, missing);\n+ \t\t\t\t\tif (rv != APR_SUCCESS) {\n+ \t\t\t\t\t\treturn rv;\n+ \t\t\t\t\t}\n+ \t\t\t\t\t\n+ \t\t\t\t\tAPR_BUCKET_REMOVE(b);\n+ \t\t\t\t\tAPR_BRIGADE_INSERT_TAIL(bb, b);\n+ \t\t\t\t\tbreak;\n+ \t\t\t\t}\n+ \t\t\t\t\n+ \t\t\t\tmissing -= len;\n+ \t\t\t\t\n+ \t\t\t\tif (missing = 0) {\n+ \t\t\t\t\tbreak;\n+ \t\t\t\t}\n+ \n+ \t\t\t\tif(missing<0) {\n+ \t\t\t\t\treturn AP_FILTER_ERROR;\n+ \t\t\t\t}\n+ \t\t\t}\n+ \t\t\treturn APR_SUCCESS;\n+ \t\t}\n+ \t\telse if (mode == AP_MODE_READBYTES) {\n+ \t\t\tapr_bucket_brigade *nb = apr_brigade_create(f->r->pool,f->c->bucket_alloc);\n+ \t\t\t\n+ \t\t\t/* split */\n+ \t\t\trv = apr_brigade_split_line(nb,aa,block,readbytes);\n+ \t\t\tif( rv != APR_SUCCESS) {\t\t\t\t\n+ \t\t\t\treturn rv;\n+ \t\t\t} \n+ \n+ \t\t\t/* concatinate */\n+ \t\t\tAPR_BRIGADE_CONCAT(bb,aa);\n+ \t\t\t\n+ \t\t\t/* remember the rest */\n+ \t\t\tf->ctx = nb;\n+ \t\t\t\n+ \t\t\treturn APR_SUCCESS;\t\n+ \t\t}\n+ \t\t\n+ \t}\n+ \t\n+ \t\n+ \treturn ap_pass_brigade(f->next, bb);\n+ }\n+ \n  static void ssl_io_input_add_filter(ssl_filter_ctx_t *filter_ctx, conn_rec *c,\n                                      SSL *ssl)\n  {\n***************\n*** 1417,1422 ****\n--- 1580,1586 ----\n  {\n      ap_register_input_filter  (ssl_io_filter, ssl_io_filter_input,  NULL,\nAP_FTYPE_CONNECTION + 5);\n      ap_register_output_filter (ssl_io_filter, ssl_io_filter_output, NULL,\nAP_FTYPE_CONNECTION + 5);\n+     ap_register_input_filter  (ssl_buff_filter, ssl_buff_filter_input,  NULL,\nAP_FTYPE_PROTOCOL - 1);\n      return;\n  }\n  \n\n \n"}, {"count": 11, "tags": [], "bug_id": 12355, "attachment_id": null, "text": "Just adding the PatchAvailable keyword. Hartmut, to keep bugs in the loop please don't resolve \nthem as fixed until they're reviewed and/or committed at least to one dev-tree. Anyway, thanks for \nthe patch.", "id": 49329, "time": "2003-12-18T12:55:21Z", "creator": "erik@codefaktor.de", "creation_time": "2003-12-18T12:55:21Z", "is_private": false}, {"count": 12, "tags": [], "creator": "ms.mouha@progress.com.tn", "attachment_id": null, "id": 49718, "time": "2003-12-26T10:30:15Z", "bug_id": 12355, "creation_time": "2003-12-26T10:30:15Z", "is_private": false, "text": "Also, this configuration does not activate the bug :\nSSLEngine on\nSSLVerifyClient optional\nSSLOptions +OptRenegotiate\n<location /location/ >\n        SSLVerifyClient optional\n        SSLVerifyDepth 10\n</location>"}, {"count": 13, "tags": [], "bug_id": 12355, "attachment_id": null, "text": "I was having a similar problem with per-directory SSL authentication with DAV.\n(Note that the patch posted earlier does not fix the problem for DAV.)\n\nI have worked around the problem by having a global \"SSLVerifyClient optional\"\ndirective.  The per-directory \"SSLVerifyClient required\" is then processed\nproperly.  This seems to preserve all of the behavior that I need.  Those\nwithout a certificate can still access the site via SSL, and the entire site,\nincluding the portions using SSL authentication, work for those with proper\ncertificates. This may need no more than clarification in the documentation.\n", "id": 51964, "time": "2004-02-09T01:27:21Z", "creator": "rob+apache@pangalactic.org", "creation_time": "2004-02-09T01:27:21Z", "is_private": false}, {"count": 14, "tags": [], "creator": "dennison_william@bah.com", "attachment_id": null, "id": 51994, "time": "2004-02-09T15:47:29Z", "bug_id": 12355, "creation_time": "2004-02-09T15:47:29Z", "is_private": false, "text": "I have attempted usage of all posts in this bug to date.  I have used the patch,\nno dice.  I have altered my configurations as noted by the posts mentioning that\nthe bug will not be enabled with a configuration change, again no dice.  I have\nalso used several configurations noted in errors by the apache software and\nnothing works.  I always get \"SSL Re-negotiation in conjunction with POST method\nnot supported!\" when the SSL is renegotiated and the next method is a POST\ninstead of a GET.\n\nI find it hard to swallow (\"because I am a huge fan of Apache and mod_ssl\"),\nthat Apache organization would make such a glaring flaw in the 2.0 builds\nconsidering all this worked great in the 1.3 builds.  My final resolution\nbecause I am in a production environment (until Apache org. fixes the problem).\n Go back to the 1.3 build ASAP."}, {"count": 15, "tags": [], "creator": "btoedtmann@exp-math.uni-essen.de", "attachment_id": null, "is_private": false, "id": 51995, "time": "2004-02-09T16:06:51Z", "bug_id": 12355, "creation_time": "2004-02-09T16:06:51Z", "text": "Hello,\n\nI also applied all \"remedies\" so far mentioned by others (including patching), \nto no avail, the problem is still alive and healthy.  As a consequence, we are \nconsidering going back to 1.3 as well.  I'm reluctant to go in this direction, \nbut without progress for months now, there seems to be no perspective for 2.0 \nwithin environments requiring client certs and the POST method....\n\nBTW: You should remove the \"PatchAvailable\" keyword.  No offense for the creator \nof the patch, but it simply doesn't work.\n\n\nRegards,\n\nBirger"}, {"count": 16, "tags": [], "bug_id": 12355, "attachment_id": null, "text": "*** Bug 21167 has been marked as a duplicate of this bug. ***", "id": 58196, "time": "2004-05-27T10:40:07Z", "creator": "jorton@redhat.com", "creation_time": "2004-05-27T10:40:07Z", "is_private": false}, {"count": 17, "tags": [], "creator": "jorton@redhat.com", "attachment_id": 11681, "id": 58202, "time": "2004-05-27T13:14:45Z", "bug_id": 12355, "creation_time": "2004-05-27T13:14:45Z", "is_private": false, "text": "Created attachment 11681\npatch for 2.0 to fix #12355"}, {"count": 18, "tags": [], "bug_id": 12355, "attachment_id": null, "text": "*Experimental* patch attached above for 2.0, this is closer to fixing the issue\nproperly, without buffering the entire request body in memory.  (it makes one\nbogus assumption about the filter interfaces but seems to work OK)  This\napproach also needs careful checking bugs may allow clients to bypass the access\ncontrol checks.", "id": 58203, "time": "2004-05-27T13:18:28Z", "creator": "jorton@redhat.com", "creation_time": "2004-05-27T13:18:28Z", "is_private": false}, {"count": 19, "tags": [], "text": "Created attachment 11736\nproposed fix", "is_private": false, "bug_id": 12355, "id": 58601, "time": "2004-06-03T09:02:32Z", "creator": "jorton@redhat.com", "creation_time": "2004-06-03T09:02:32Z", "attachment_id": 11736}, {"count": 20, "attachment_id": null, "bug_id": 12355, "is_private": false, "id": 58603, "time": "2004-06-03T09:10:03Z", "creator": "jorton@redhat.com", "creation_time": "2004-06-03T09:10:03Z", "tags": [], "text": "Second patch attached is the fix I have proposed for this issue, which has no\nissues that I'm currently aware of, and could do with some wider testing."}, {"count": 21, "tags": [], "bug_id": 12355, "is_private": false, "text": "*** Bug 18395 has been marked as a duplicate of this bug. ***", "id": 58606, "time": "2004-06-03T09:11:56Z", "creator": "jorton@redhat.com", "creation_time": "2004-06-03T09:11:56Z", "attachment_id": null}, {"count": 22, "attachment_id": 11745, "bug_id": 12355, "is_private": false, "id": 58624, "time": "2004-06-03T12:03:27Z", "creator": "jorton@redhat.com", "creation_time": "2004-06-03T12:03:27Z", "tags": [], "text": "Created attachment 11745\nproposed fix for 2.0 branch"}, {"count": 23, "tags": [], "bug_id": 12355, "attachment_id": null, "text": "Proposed patch, rediffed for 2.0, attached above.", "id": 58625, "time": "2004-06-03T12:05:36Z", "creator": "jorton@redhat.com", "creation_time": "2004-06-03T12:05:36Z", "is_private": false}, {"count": 24, "attachment_id": null, "bug_id": 12355, "is_private": false, "id": 58793, "time": "2004-06-05T10:36:23Z", "creator": "btoedtmann@exp-math.uni-essen.de", "creation_time": "2004-06-05T10:36:23Z", "tags": [], "text": "Hi,\n\nwhen patching the apache2-2.0.48 source RPM for Mandrake 10 (and \nrebuilding the binaries), the SSL service crashes immediately upon\nthe use of client certificates:\n\n[Sat Jun 05 12:30:50 2004] [notice] LDAP: Built with OpenLDAP LDAP SDK\n[Sat Jun 05 12:30:50 2004] [notice] Digest: generating secret for digest\nauthentication ...\n[Sat Jun 05 12:30:50 2004] [notice] Digest: done\n[Sat Jun 05 12:30:51 2004] [notice] Apache-AdvancedExtranetServer/2.0.48\n(Mandrake Linux/6.2.100mdk) mod_ssl/2.0.48 OpenSSL/0.9.7a DAV/2 PHP/4.3.1\nconfigured -- resuming normal operations\n\n - service is now working and delivers ordinary pages successfully,\n   including PHP and MySQL_over_PHP operations and SSL (without client\n   certs) -\n\n[Sat Jun 05 12:32:21 2004] [notice] child pid 29488 exit signal Segmentation\nfault (11)\n\n - that was the child that dealt the first time with a \n   client certificate -\n\n\nWithout the patch (but same source) and without using POST, the \nsite works \"perfectly\" using client certificates.\n\n\n\n\nBirger"}, {"count": 25, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "id": 60238, "time": "2004-07-07T14:09:26Z", "bug_id": 12355, "creation_time": "2004-07-07T14:09:26Z", "is_private": false, "text": "*** Bug 29569 has been marked as a duplicate of this bug. ***"}, {"count": 26, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "id": 60304, "time": "2004-07-08T14:31:20Z", "bug_id": 12355, "creation_time": "2004-07-08T14:31:20Z", "is_private": false, "text": "Please don't mark bugs as fixed without adding a comment, and please don't mark\nbugs as fixed if they aren't really fixed!"}, {"count": 27, "tags": [], "creator": "david.a.desrosiers@gmail.com", "attachment_id": null, "id": 62084, "time": "2004-08-17T18:03:38Z", "bug_id": 12355, "creation_time": "2004-08-17T18:03:38Z", "is_private": false, "text": "Have there been any updates on this issue since the last comment filed on July\n8th of this year? "}, {"count": 28, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "is_private": false, "id": 62360, "time": "2004-08-23T20:18:59Z", "bug_id": 12355, "creation_time": "2004-08-23T20:18:59Z", "text": "No; I'm not really convinced the solution I was working on can be made to be secure.\n\nNote that for many configurations, there is a simple workaround: add\n\n  SSLVerifyClient optional\n\nto the SSL vhost config, as well as the \"SSLVerifyClient require\" in whatever\nLocation/Directory context."}, {"count": 29, "tags": [], "bug_id": 12355, "is_private": false, "text": "I was reminded privately that the other workaround for this bug is of course to\nensure that the first access the browser makes to the SSLVerifyClient-protected\nlocation uses a GET request rather than a POST request.", "id": 62402, "time": "2004-08-24T14:18:07Z", "creator": "jorton@redhat.com", "creation_time": "2004-08-24T14:18:07Z", "attachment_id": null}, {"count": 30, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "is_private": false, "id": 64028, "time": "2004-09-22T10:20:14Z", "bug_id": 12355, "creation_time": "2004-09-22T10:20:14Z", "text": "*** Bug 31314 has been marked as a duplicate of this bug. ***"}, {"count": 31, "tags": [], "bug_id": 12355, "is_private": false, "text": "Some general comments;\n\nHTTP/1.0\n\n  the 'classic' HTTP/1.0 handling -must- buffer the body if the connection\n  will be renegotiated.  This should no longer be handled inside the mod_ssl\n  module itself, by itself.  With the advent of filters, either apreq2 or\n  another 'client buffer' module must be implemented.  The logic looks like;\n\n    brigade read loop\n      mem_body > max_memory_body ?\n        create tmpfile if tmpfile isnull\n        response 'failure' if total_body > max_buffer_body\n        write body -> tmpfile\n    reopen tmpfile read-only\n    insert tmpfile bucket of tmpfile prior to remaining mem_body buckets.\n\n  now we have two controls that would prevent DoS attacks present in the\n  original fix proposed (unbounded growth of the body.)  Remember, the\n  renegotiation would NOT determine the client certificate is valid until\n  after these resources had been consumed by a nefarious client.\n\n  I rather like the idea of apreq2 doing this work, and actually, integrating\n  apreq2 as a 'stock' apache module.  apreq2 does nothing until some module\n  in the server configuration wants to use its services.\n\nHTTP/1.1 + client Expect: 100-continue\n\n  http://rfc.net/rfc2616.html#s8.2.3\n\n  Clients which truly pause for 100-continue could be satisfied with no\n  buffering of the body.  Schedule the renegotation prior to sending the\n  100 CONTINUE response.\n\nFinally note that this is not specific to POST, it's generic to all HTTP\nmethods which contain a client body.  The headers may be inspected to\ndetermine if the client is attempting to push a body with the request.\n\n", "id": 68997, "time": "2004-12-26T17:31:45Z", "creator": "wrowe@apache.org", "creation_time": "2004-12-26T17:31:45Z", "attachment_id": null}, {"count": 32, "tags": [], "text": "Isn't there any way to suppress renegotiation ?", "is_private": false, "bug_id": 12355, "id": 74085, "time": "2005-04-25T15:26:38Z", "creator": "marc.stern@approach.be", "creation_time": "2005-04-25T15:26:38Z", "attachment_id": null}, {"count": 33, "tags": [], "bug_id": 12355, "attachment_id": null, "text": "Workaround!!!\n\nFollowing configuration works fine (optional for any except with CA \ncertificate, and required to an especific location):\n\nSSLEngine on\nSSLVerifyClient optional_no_ca\nSSLVerifyDepth  2\nSSLOptions +OptRenegotiate\n<location /any_location/ >\n        SSLVerifyClient require\n</location>\n\nRegards,\n\nBruno Santiago", "id": 74862, "time": "2005-05-13T21:59:09Z", "creator": "brunonilo@gmail.com", "creation_time": "2005-05-13T21:59:09Z", "is_private": false}, {"count": 34, "tags": [], "creator": "marc.stern@approach.be", "attachment_id": null, "id": 75625, "time": "2005-05-31T11:57:55Z", "bug_id": 12355, "creation_time": "2005-05-31T11:57:55Z", "is_private": false, "text": "\"SSLVerifyClient optional\" seems also safe.\nIs \"SSLOptions +OptRenegotiate\" really needed, or is it an optimisation ?\nIs it totally safe ? The doc states to use this carefully."}, {"count": 35, "attachment_id": null, "bug_id": 12355, "is_private": false, "id": 79157, "time": "2005-08-30T11:17:46Z", "creator": "yefym.dmukh@gmail.com", "creation_time": "2005-08-30T11:17:46Z", "tags": [], "text": "(In reply to comment #34)\n> \"SSLVerifyClient optional\" seems also safe.\n> Is \"SSLOptions +OptRenegotiate\" really needed, or is it an optimisation ?\n> Is it totally safe ? The doc states to use this carefully.\n\n\nThe workaround explained above is not safe at least for apache 2.0.52.\n\"\nRE: [users@httpd] Bug or Feature : global SSLVerifyClient in <VirtualHost>\noverrides the same in  <Location>?\n\nSimple test scenario is :\n1. access document root location - \"SSLVerifyClient optional\" ,  cancel\ncertificate choice window.\n2. access location <Location \"/auth\"> with  \"SSLVerifyClient require\" - no\ntriggered SSL negotiation - access without certificate granted.\n\nCorrect should be the following behaviour, but there is no re-negotiation:\n>SSLVerifyClient is documented as working in directory context, so it should\nalso work in <Location> context. The manual page for mod_ssl does \n>explicitly say that a SSL renegotiation is triggered if a request for the\nlocation is received.\n \n\nconfig sample:\n\n<VirtualHost> \nSSLVerifyClient optional \n\nAlias /auth   /htdocs/access \n<Location \"/access\"> \nSSLVerifyClient require \nSSLOptions +ExportCertData +StdEnvVars +OptRenegotiate\nSSLVerifyDepth 5 \nOptions None \n</Location> \n\n</VirtualHost> \n\n\"\n\n\n\n\n\n"}, {"count": 36, "tags": [], "creator": "yefym.dmukh@gmail.com", "attachment_id": null, "id": 79158, "time": "2005-08-30T11:33:56Z", "bug_id": 12355, "creation_time": "2005-08-30T11:33:56Z", "is_private": false, "text": "Proposed workaround is to add an additional <VirtualHost> and \nconfigure in its context SSLVerifyClient require.\n\n\nIn my particular case creating webapi virtualhost suppose to fix problems with axis.\n\n\n\n\n\n\n\n\n\n"}, {"count": 37, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "is_private": false, "id": 79234, "time": "2005-08-31T16:44:47Z", "bug_id": 12355, "creation_time": "2005-08-31T16:44:47Z", "text": "The problem mentioned in comment 35 is a separate issue from the bug covered\nhere, and is fixed by: http://svn.apache.org/viewcvs?rev=264800&view=rev"}, {"count": 38, "tags": [], "text": "I was told to use something like this:\n\n<VirtualHost ...>\n   ...\n   SSLVerifyClient none\n   ...\n   <Location /plop>\n      ...\n      SSLVerifyClient require\n      ...\n   </Location>\n</VirtualHost>\n\nAnd this seems to work fine. Can someone confirm this is working correctly and\nI'm not missing some \"feature\" for this bug ?\nThanks", "is_private": false, "bug_id": 12355, "id": 79276, "time": "2005-09-01T13:25:05Z", "creator": "marc.poulhies@epfl.ch", "creation_time": "2005-09-01T13:25:05Z", "attachment_id": null}, {"count": 39, "tags": [], "bug_id": 12355, "attachment_id": null, "text": "If the bug isn't fixed, the issue is that the Location-specific renegotiation\nfails on a POST. If you're testing with GET, that's not a useful test.", "id": 79292, "time": "2005-09-01T16:22:02Z", "creator": "cantor.2@osu.edu", "creation_time": "2005-09-01T16:22:02Z", "is_private": false}, {"count": 40, "tags": [], "creator": "jorton@redhat.com", "attachment_id": 16491, "id": 80337, "time": "2005-09-22T20:38:06Z", "bug_id": 12355, "creation_time": "2005-09-22T20:38:06Z", "is_private": false, "text": "Created attachment 16491\nbackport of patch from trunk\n\nThis is a backport of the patch from the trunk which was committed to fix this\nissue.\tAny results from testing are welcome."}, {"count": 41, "tags": [], "creator": "jorton@redhat.com", "attachment_id": 16495, "is_private": false, "id": 80355, "time": "2005-09-23T09:24:09Z", "bug_id": 12355, "creation_time": "2005-09-23T09:24:09Z", "text": "Created attachment 16495\npatch for 2.0.54\n\nThis patch can be applied to 2.0.54."}, {"count": 42, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "id": 80549, "time": "2005-09-28T13:00:20Z", "bug_id": 12355, "creation_time": "2005-09-28T13:00:20Z", "is_private": false, "text": "Now fixed for 2.1.8-beta and later.\n\nhttp://svn.apache.org/viewcvs?rev=290965&view=rev\n\nGiven sufficient testing of the patch from comment 41, this could get a backport\nto 2.0.x."}, {"count": 43, "tags": [], "creator": "asf-bugzilla@sentries.org", "attachment_id": null, "is_private": false, "id": 81340, "time": "2005-10-18T19:34:09Z", "bug_id": 12355, "creation_time": "2005-10-18T19:34:09Z", "text": "(In reply to comment #41)\n\n> This patch can be applied to 2.0.54.\n\nThe patch can be applied to 2.0.55 aswell, and it allows using the\nfollowing setup:\n\n  SSLVerifyClient optional\n  <Location /subversion>\n    DAV svn\n    SVNParentPath /path/to/reps\n    AuthzSVNAccessFile /path/to/accessfile\n    SSLVerifyClient require\n    SSLUserName SSL_CLIENT_S_DN_CN\n    SSLOptions +StrictRequire\n  </Location>\n\nI used Subversion 1.2.3 clients on Linux and Windows for successful\ntesting.\n\nIt is important to note that with the above configuration, access to\nthe Subversion repository requires a client certificate, while other\nareas of the server can be accessed without certificates (i.e. webmail\nvia HTTPS). Judging from my tests, this desired behaviour can not be\nachieved based on vanilla 2.0.55 sources, so I strongly welcome Joe's\npatch and hope it will be included as a 2.0.x backport in the future."}, {"count": 44, "tags": [], "creator": "yefym.dmukh@gmail.com", "attachment_id": null, "is_private": false, "id": 87016, "time": "2006-03-20T09:00:51Z", "bug_id": 12355, "creation_time": "2006-03-20T09:00:51Z", "text": "(In reply to comment #43)\n> (In reply to comment #41)\n> \n> > This patch can be applied to 2.0.54.\n> \n> The patch can be applied to 2.0.55 aswell, and it allows using the\n> following setup:\n> \n>   SSLVerifyClient optional\n>   <Location /subversion>\n>     DAV svn\n>     SVNParentPath /path/to/reps\n>     AuthzSVNAccessFile /path/to/accessfile\n>     SSLVerifyClient require\n>     SSLUserName SSL_CLIENT_S_DN_CN\n>     SSLOptions +StrictRequire\n>   </Location>\n> \n> I used Subversion 1.2.3 clients on Linux and Windows for successful\n> testing.\n> \n> It is important to note that with the above configuration, access to\n> the Subversion repository requires a client certificate, while other\n> areas of the server can be accessed without certificates (i.e. webmail\n> via HTTPS). Judging from my tests, this desired behaviour can not be\n> achieved based on vanilla 2.0.55 sources, so I strongly welcome Joe's\n> patch and hope it will be included as a 2.0.x backport in the future.\n\n\n\nThe problem is still not fixed. Was tested for apache 2.0.55 :\nthere is still post method not allowed message described by you and other guys\nin this topic.\n\nAfter patching apache it still doesn`t work, only the message is different.\n\n\nWe tried with apache_2.0.55 with unofficial patch from bugzilla (No.:12355) and\ngot the following messages in logfiles.\n\naccess_log:\n\n85.115.6.202 - - [17/Mar/2006:13:13:50 +0000] \"POST\n/webservice/services/SessionManagement HTTP/1.0\" 403 - \"-\"\n \"-\"\n\nerror_log with debug level in http.conf:\n\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_kernel.c(1738): OpenSSL:\nHandshake: start\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_kernel.c(1746): OpenSSL: Loop: SSL\nrenegotiate ciphers\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_kernel.c(1746): OpenSSL: Loop:\nSSLv3 write hello request\nA\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_kernel.c(1746): OpenSSL: Loop:\nSSLv3 flush data\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_kernel.c(1746): OpenSSL: Loop:\nSSLv3 write hello request\nC\n[Fri Mar 17 13:32:54 2006] [info] Awaiting re-negotiation handshake\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_kernel.c(1738): OpenSSL:\nHandshake: start\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_kernel.c(1746): OpenSSL: Loop:\nbefore accept initializati\non\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_io.c(1697): OpenSSL: read 0/5\nbytes from BIO#83a24b8 [mem\n: 842d708] (BIO dump follows)\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_io.c(1644):\n+--------------------------------------------\n-----------------------------+\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_io.c(1675):\n+--------------------------------------------\n-----------------------------+\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_kernel.c(1770): OpenSSL: Exit:\nfailed in SSLv3 read clien\nt hello B\n[Fri Mar 17 13:32:54 2006] [error] Re-negotiation handshake failed: Not accepted\nby client!?\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_io.c(1488): [client 85.115.6.202]\nread from buffered SSL\nbrigade, mode 0, 8192 bytes\n[Fri Mar 17 13:32:54 2006] [debug] ssl_engine_io.c(1550): [client 85.115.6.202]\nbuffered SSL brigade no\nw exhausted; removing filter\n[Fri Mar 17 13:33:07 2006] [debug] ssl_engine_io.c(1708): OpenSSL: I/O error, 5\nbytes expected to read\non BIO#83a24b8 [mem: 842d708]\n[Fri Mar 17 13:33:07 2006] [info] (70007)The timeout specified has expired: SSL\ninput filter read faile\nd.\n[Fri Mar 17 13:33:07 2006] [debug] ssl_engine_kernel.c(1756): OpenSSL: Write:\nSSL negotiation finished\nsuccessfully\n[Fri Mar 17 13:33:07 2006] [info] Connection to child 2 closed with standard\nshutdown(server drecord.de\n.something.com:443, client 85.115.6.202)\n\n--------------------------------------------------------------------------------\n\n\nP.S.\nWe have additional virtualhost configured that is responsible for certificate\nauthentication and session management with axis, there it works perfectly. So\nthe problem occures only for <location> that doesn`t have a globaly set\n<SSLVerifyClient> to optional or required\n\nP.P.S. \n<SSLVerifyClient> optional in a global context fix the problem , but this\nsolution is not acceptable because it enforce the browser to show the popup with\ninstalled certificates.(sure it is a browser issue and probably could be\nconfigured on the client side, but this is not the way it should work in\nproductive env.)\n\nRegards, Yefym"}, {"count": 45, "attachment_id": null, "bug_id": 12355, "is_private": false, "id": 87411, "time": "2006-03-30T09:19:59Z", "creator": "jorton@redhat.com", "creation_time": "2006-03-30T09:19:59Z", "tags": [], "text": "If you have any problems using this patch, please upgrade to 2.2.0 instead, and\nfile bugs giving the error_log output from 2.2.0."}, {"count": 46, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "is_private": false, "id": 87441, "time": "2006-03-30T21:16:14Z", "bug_id": 12355, "creation_time": "2006-03-30T21:16:14Z", "text": "*** Bug 39154 has been marked as a duplicate of this bug. ***"}, {"count": 47, "tags": [], "text": "*** Bug 39243 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 12355, "id": 87693, "time": "2006-04-07T23:12:59Z", "creator": "rpluem@apache.org", "creation_time": "2006-04-07T23:12:59Z", "attachment_id": null}, {"count": 48, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 89721, "time": "2006-06-02T22:54:42Z", "bug_id": 12355, "creation_time": "2006-06-02T22:54:42Z", "is_private": false, "text": "*** Bug 39705 has been marked as a duplicate of this bug. ***"}, {"count": 49, "tags": [], "creator": "cc.chen@fsd.com.my", "attachment_id": null, "id": 89759, "time": "2006-06-05T07:38:12Z", "bug_id": 12355, "creation_time": "2006-06-05T07:38:12Z", "is_private": false, "text": "I couldn't understand why this bug is not fix by Apache team since the release \nof Apache2. I really need this features to be enabled as what we have in \nmod_ssl for version for apache1.3.x."}, {"count": 50, "tags": [], "bug_id": 12355, "attachment_id": null, "text": "It is fixed in 2.2.x, but has not been backported to 2.0.x yet. There is a patch\nagainst 2.0.54 attached to this report for those who need to fix this\nimmediately for 2.0.x.", "id": 89768, "time": "2006-06-05T11:37:11Z", "creator": "rpluem@apache.org", "creation_time": "2006-06-05T11:37:11Z", "is_private": false}, {"count": 51, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "id": 91501, "time": "2006-07-23T04:48:06Z", "bug_id": 12355, "creation_time": "2006-07-23T04:48:06Z", "is_private": false, "text": "\n  First this IS fixed in 2.2.0.  Backports aren't discussed on Bugzilla, this\n  issue has been raised in our 2.0.x STATUS file.  And given a more accurate name."}, {"count": 52, "tags": [], "creator": "derrierdo@gmail.com", "attachment_id": null, "is_private": false, "id": 101704, "time": "2007-04-14T00:29:25Z", "bug_id": 12355, "creation_time": "2007-04-14T00:29:25Z", "text": "this bug is always present with Apache/2.2.4.\n\nYou can't mixed SSLVerifyClient optinal and SSLVerifyClient requierd part\nTo allow some Location for non SSL valid Client.\n\n\nNOT WORKING ========\n------------------------\nSSLVerifyClient optional\nSSLVerifyDepth  1\nSSLOptions +OptRenegotiate\n<Location /Album>\nSSLRequireSSL\nSSLVerifyClient      require\nSSLCACertificateFile conf/ssl.crt/Root_Certificat.crt\nSSLCACertificatePath conf/ssl.crt\nSSLRequire  (%{SSL_CLIENT_S_DN_OU} eq \"Portable\" || %{SSL_CLIENT_S_DN_OU} eq\n\"Personnal\")\nSSLVerifyDepth       3\n#FIX ANOTHER BUG\nSetEnv REMOTE_USER ${SSL_CLIENT_S_DN_CN}\nSSLUserName SSL_CLIENT_S_DN_CN\n</location>\n\n\nWORKING ==\n---------"}, {"count": 53, "tags": [], "creator": "derrierdo@gmail.com", "attachment_id": null, "id": 101705, "time": "2007-04-14T00:42:32Z", "bug_id": 12355, "creation_time": "2007-04-14T00:42:32Z", "is_private": false, "text": "Sorry ... I forgot to say .. that the bug is only with php.\nCGI perl work fine .."}, {"count": 54, "tags": [], "bug_id": 12355, "attachment_id": null, "text": "It's working fine when the certificat private key is <= 512.\n2048b not working\n1024b not working.\nBut I don't understand why\n\nIf it's can help coders.\n", "id": 101721, "time": "2007-04-15T01:35:43Z", "creator": "derrierdo@gmail.com", "creation_time": "2007-04-15T01:35:43Z", "is_private": false}, {"count": 55, "tags": [], "creator": "davi@apache.org", "attachment_id": null, "id": 104216, "time": "2007-06-08T09:59:40Z", "bug_id": 12355, "creation_time": "2007-06-08T09:59:40Z", "is_private": false, "text": "(In reply to comment #54 and previous ones)\n> It's working fine when the certificat private key is <= 512.\n> 2048b not working\n> 1024b not working.\n> But I don't understand why\n> \n> If it's can help coders.\n> \n\nThis looks like an unrelated problem, could you open a new issue for it? Thanks."}, {"count": 56, "attachment_id": null, "bug_id": 12355, "is_private": false, "id": 104223, "time": "2007-06-08T11:55:40Z", "creator": "davi@apache.org", "creation_time": "2007-06-08T11:55:40Z", "tags": [], "text": "(In reply to comment #52)\n> this bug is always present with Apache/2.2.4.\n> \n> You can't mixed SSLVerifyClient optinal and SSLVerifyClient requierd part\n> To allow some Location for non SSL valid Client.\n> \n\nThis was fixed in Apache 2.0.55, changelog:\n\n  *) SECURITY: CVE-2005-2700 (cve.mitre.org)\n     mod_ssl: Fix a security issue where \"SSLVerifyClient\" was not\n     enforced in per-location context if \"SSLVerifyClient optional\"\n     was configured in the vhost configuration.  [Joe Orton]\n"}, {"count": 57, "tags": [], "text": "*** Bug 42625 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 12355, "id": 104274, "time": "2007-06-10T03:02:23Z", "creator": "rpluem@apache.org", "creation_time": "2007-06-10T03:02:23Z", "attachment_id": null}, {"count": 58, "tags": [], "creator": "sergeyfd@gmail.com", "attachment_id": null, "is_private": false, "id": 104282, "time": "2007-06-10T18:47:26Z", "bug_id": 12355, "creation_time": "2007-06-10T18:47:26Z", "text": "*** Bug 42625 has been marked as a duplicate of this bug. ***"}, {"count": 59, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "is_private": false, "id": 105727, "time": "2007-07-17T12:22:37Z", "bug_id": 12355, "creation_time": "2007-07-17T12:22:37Z", "text": "Backported to 2.0.x as r536373\n(http://svn.apache.org/viewvc?view=rev&revision=536373)"}]