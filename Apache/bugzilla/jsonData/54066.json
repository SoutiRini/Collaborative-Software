[{"count": 0, "tags": [], "bug_id": 54066, "text": "Hello!\nI want ask, what you think about implementing new function for JMeter which provide possibility for replacing of some pattern in a string?\n\nI wrote a little example which implement that functionality, could you look at it?\n\nYou can use it like:\n______________________________________________________________________________________________________________________________________________________________________________\nExample                        \t                                                                                         |Result\n_________________________________________________________________________________________________________________________|____________________________________________________\n${__Replace(some_xml_big_data_with_#CustomerID#_and_another_else,#CustomerID#,3.15-9.20)}\t                         |some_xml_big_data_with_3.15-9.20_and_another_else\n_________________________________________________________________________________________________________________________|____________________________________________________\n${__Replace(some_#FormatID#_big_data_with_#CustomerID#_and_another_else,#CustomerID#,3.15-9.20,#FormatID#,xml)}\t         |some_xml_big_data_with_3.15-9.20_and_another_else\n_________________________________________________________________________________________________________________________|____________________________________________________\n${__Replace(123456,5,7,3,9)}\t                                                                                         |129476\n_________________________________________________________________________________________________________________________|____________________________________________________\n${__Replace(123456,[1-2],7,3,9)}                                                                                         |779456\n_________________________________________________________________________________________________________________________|____________________________________________________\n${__Replace(123456789qwerty,[1-2],7,3,9,[w],word)}\t                                                                 |779456789qworderty\n_________________________________________________________________________________________________________________________|____________________________________________________\nin User defined variables                                                                                                |\nstring = 123456789qwerty                                                                                                 |\n${__Replace(${string},[1-2],7,3,9,[w],word)}                                                                             |779456789qworderty\n_________________________________________________________________________________________________________________________|____________________________________________________\n\nimport java.util.Collection;\nimport java.util.LinkedList;\nimport java.util.List;\nimport org.apache.jmeter.engine.util.CompoundVariable;\nimport org.apache.jmeter.functions.AbstractFunction;\nimport org.apache.jmeter.functions.InvalidVariableException;\nimport org.apache.jmeter.samplers.SampleResult;\nimport org.apache.jmeter.samplers.Sampler;\n\n/**\n * Parameterize Function to replace in string array of patterns with value.\n *\n * Parameters:\n * - string\n * - pattern\n * - value\n */\n\npublic class Replace extends AbstractFunction {\n\n    private static final List<String> desc = new LinkedList<String>();\n\n    private static final String KEY = \"__Replace\";//$NON-NLS-1$\n\n    static final String ERR_IND = \"**ERR**\";//$NON-NLS-1$\n\n    private Object[] values;\n\n    static {\n        desc.add(\"String where replace\");\n        desc.add(\"Pattern for replace\");\n        desc.add(\"Value for replace\");\n    }\n\n    private static final int MIN_PARAM_COUNT = 3;\n\n    private static final int MAX_PARAM_COUNT = 101;\n\n    public Replace() {\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public synchronized String execute(SampleResult previousResult, Sampler currentSampler)\n             {\n    \tString string = ((CompoundVariable) values[0]).execute();\n    \tString pattern = null;\n    \tString value = null;\n    \tfor(int i = 1; i < (values.length-1); i = i + 2) {\n    \t\tint j = i + 1;\n    \t\tpattern = ((CompoundVariable) values[i]).execute();\n    \t\tvalue = ((CompoundVariable) values[j]).execute();\n    \t\tstring = string.replaceAll(pattern, value);\n    \t}\n    \treturn string;\n    }\n\n\n    /** {@inheritDoc} \n     * @throws InvalidVariableException */\n    @Override\n    public synchronized void setParameters(Collection<CompoundVariable> parameters) throws InvalidVariableException {\n        checkParameterCount(parameters, MIN_PARAM_COUNT, MAX_PARAM_COUNT);\n        values = parameters.toArray();\n    }\n\n    /** {@inheritDoc} */\n    @Override\n    public String getReferenceKey() {\n        return KEY;\n    }\n\n    /** {@inheritDoc} */\n    public List<String> getArgumentDesc() {\n        return desc;\n    }\n}", "id": 163028, "time": "2012-10-29T15:12:59Z", "creator": "yugene1986@gmail.com", "creation_time": "2012-10-29T15:12:59Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "sebb@apache.org", "text": "The scripting functions can already do this, but it would be slightly easier to use a specific function.\n\nIt would not be difficult to add the function (though it also needs test cases and documentation).\n\nHowever, it's only worth adding the function if there is a genuine use case for it. Otherwise it is unnecessary bloat.\n\nNote that you can create your own functions and store them in a jar in lib/ext.", "id": 163125, "time": "2012-11-01T15:58:45Z", "bug_id": 54066, "creation_time": "2012-11-01T15:58:45Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "*** Bug 54018 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 164405, "creator": "p.mouawad@ubik-ingenierie.com", "time": "2013-01-05T15:48:01Z", "bug_id": 54066, "creation_time": "2013-01-05T15:48:01Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 54066, "text": "Seems useless since __groovy method has been introduced which allows doing this without impacting performances.", "id": 193996, "time": "2016-09-26T19:40:53Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2016-09-26T19:40:53Z", "is_private": false, "attachment_id": null}]