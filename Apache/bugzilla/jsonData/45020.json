[{"count": 0, "tags": [], "text": "batik-rasterizer isn't included in the released projects at http://repo1.maven.org/maven2/org/apache/xmlgraphics/ , while most other modules are there.", "is_private": false, "bug_id": 45020, "id": 116706, "time": "2008-05-16T08:40:33Z", "creator": "sergiu@xwiki.com", "creation_time": "2008-05-16T08:40:33Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "cam@apache.org", "attachment_id": null, "id": 117710, "time": "2008-06-15T20:33:25Z", "bug_id": 45020, "creation_time": "2008-06-15T20:33:25Z", "is_private": false, "text": "batik-rasterizer is just the front-end application for the transcoder module.  Does it make sense to create POMs for each the applications (rasterizer and squiggle)?  Do people normally use maven for running applications as well as general library management?\n"}, {"count": 2, "tags": [], "creator": "sewe@st.informatik.tu-darmstadt.de", "attachment_id": null, "id": 142784, "time": "2010-12-16T13:39:13Z", "bug_id": 45020, "creation_time": "2010-12-16T13:39:13Z", "is_private": false, "text": "I can think of at least one case where a third-party application (the DaCapo benchmark suite popular among JVM researchers <http://www.dacapobench.org/>) uses the batik-rasterizer as a dependency; after all, for a benchmark suite an application to benchmark is just a library.\n\nHaving the dependency available via Maven would IMHO be useful, as being able to rely on GAV coordinates and Maven repositories will have a stabilising effect on the suite's build. And reproducible builds are obviously of importance for a research benchmark suite."}, {"count": 3, "tags": [], "bug_id": 45020, "is_private": false, "text": "Setting 1.8 release meta-bug to depend on this as well, in light of the interesting use-cases raised in comment #2. Thanks for sharing! :-)", "id": 142800, "time": "2010-12-17T00:29:10Z", "creator": "helder.magalhaes@gmail.com", "creation_time": "2010-12-17T00:29:10Z", "attachment_id": null}]