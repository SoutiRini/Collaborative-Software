[{"count": 0, "tags": [], "creator": "gregh3269@gmail.com", "text": "Created attachment 32910\n4 dumps of the vm\n\nEvery now and then I get high cpu on Centos 5, 6 7 servers with Tomcat 8 switching back to 7 I do not get the problem.  It seems to be in the ajp-apr-8009-Poller.\n\nI use apache front end mod_jk connector and tomcat-native-1.1.33 and jdk1.8.0_40 (oracle)\n\nI have tried 8.0.21 and 8.0.23\n\n PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND \n2691 runner    20   0 3644m 565m 8324 S 144.0 14.7  20:36.12 java     \n\nDumps attached.\n\nI have asked on the user list but with no success.\n\nCheers Greg", "id": 184071, "time": "2015-07-19T07:45:47Z", "bug_id": 58151, "creation_time": "2015-07-19T07:45:47Z", "is_private": false, "attachment_id": 32910}, {"count": 1, "tags": [], "bug_id": 58151, "attachment_id": null, "text": "Will give version 8.0.24 a test.  TBA.", "id": 184121, "time": "2015-07-22T08:48:35Z", "creator": "gregh3269@gmail.com", "creation_time": "2015-07-22T08:48:35Z", "is_private": false}, {"count": 2, "tags": [], "creator": "gregh3269@gmail.com", "attachment_id": null, "id": 184170, "time": "2015-07-26T09:23:07Z", "bug_id": 58151, "creation_time": "2015-07-26T09:23:07Z", "is_private": false, "text": "Well, same again\n\n PID USER      PR  NI  VIRT  RES  SHR S %CPU %MEM    TIME+  COMMAND \n2707 runner    20   0 3728m 599m 7356 S 36.5 15.6  52:28.85 java"}, {"count": 3, "tags": [], "creator": "gregh3269@gmail.com", "text": "Created attachment 32936\nDump for 8.0.24", "id": 184171, "time": "2015-07-26T09:24:21Z", "bug_id": 58151, "creation_time": "2015-07-26T09:24:21Z", "is_private": false, "attachment_id": 32936}, {"count": 4, "tags": [], "bug_id": 58151, "attachment_id": null, "text": "Hello,\n\nI'm having trouble with the following setup:\n- Gentoo / mariaDB\n- Tomcat 8.0.23\n- Tomcat native 1.1.33\n- Apache http 2.4.12 with modproxy_ajp\n\nserver.xml:\n...\n<Connector port=\"8208\" enableLookups=\"false\" maxThreads=\"1000\"\n  protocol=\"org.apache.coyote.ajp.AjpAprProtocol\"\n  connectionTimeout=\"5000\"\n  maxConnections=\"8000\"\n/>\n...\n\nEverything works fina as long as I don' restart the apache server while the tomcat server is also running. If I do so the I get this in my catalina.out (after tweaking logging.properties):\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,918,626,023,232]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,918,626,023,232] from poller\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Processing socket [139,918,626,023,232] for event(s) [1]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,918,626,078,656]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,918,626,078,656] from poller\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Processing socket [139,918,626,078,656] for event(s) [1]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,918,626,023,232]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,918,626,023,232] from poller\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Processing socket [139,918,626,023,232] for event(s) [1]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,918,626,078,656]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,918,626,078,656] from poller\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Processing socket [139,918,626,078,656] for event(s) [1]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,918,626,023,232]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,918,626,023,232] from poller\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Processing socket [139,918,626,023,232] for event(s) [1]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,918,626,078,656]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,918,626,078,656] from poller\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Processing socket [139,918,626,078,656] for event(s) [1]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,918,626,023,232]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,918,626,023,232] from poller\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Processing socket [139,918,626,023,232] for event(s) [1]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,918,626,078,656]\n07-Jun-2015 11:47:48.217 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,918,626,078,656] from poller\n07-Jun-2015 11:47:48.218 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Processing socket [139,918,626,078,656] for event(s) [1]\n\nAs long as everything is running fine the output is like:\n07-Jun-2015 20:44:01.106 FINE [http-apr-127.0.0.1-8508-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Processing socket [139,978,017,344,528] for event(s) [1]\n07-Jun-2015 20:44:01.109 FINE [http-apr-127.0.0.1-8508-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,978,017,344,528] from poller\n07-Jun-2015 20:44:01.929 FINE [http-apr-127.0.0.1-8508-Acceptor-0] org.apache.tomcat.util.net.AprEndpoint$Acceptor.run APR socket [139,977,950,259,008] opened with remote port [38,896]\n07-Jun-2015 20:44:01.930 FINE [http-apr-127.0.0.1-8508-Acceptor-0] org.apache.tomcat.util.net.AprEndpoint.processSocketWithOptions socket [139,977,950,259,008]\n07-Jun-2015 20:44:01.944 FINE [http-apr-127.0.0.1-8508-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,977,950,259,008]\n07-Jun-2015 20:44:01.944 FINE [http-apr-127.0.0.1-8508-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,977,950,259,008] from poller\n07-Jun-2015 20:44:06.471 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,977,950,307,072]\n07-Jun-2015 20:44:06.471 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,977,950,307,072] from poller\n07-Jun-2015 20:44:06.497 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,977,950,291,840]\n07-Jun-2015 20:44:06.497 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,977,950,291,840] from poller\n07-Jun-2015 20:44:06.501 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,977,950,322,336]\n07-Jun-2015 20:44:06.501 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,977,950,322,336] from poller\n07-Jun-2015 20:44:06.826 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.run Add to poller socket [139,977,950,271,008]\n07-Jun-2015 20:44:06.826 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,977,950,271,008] from poller\n07-Jun-2015 20:44:12.766 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.maintain Timing out [139,977,950,307,072]\n07-Jun-2015 20:44:12.766 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,977,950,307,072] from poller\n07-Jun-2015 20:44:12.766 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Removed [139,977,950,307,072] from poller\n07-Jun-2015 20:44:12.767 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.maintain Timing out [139,977,950,271,008]\n07-Jun-2015 20:44:12.767 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,977,950,271,008] from poller\n07-Jun-2015 20:44:12.767 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Removed [139,977,950,271,008] from poller\n07-Jun-2015 20:44:12.768 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.maintain Timing out [139,977,950,322,336]\n07-Jun-2015 20:44:12.768 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,977,950,322,336] from poller\n07-Jun-2015 20:44:12.768 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Removed [139,977,950,322,336] from poller\n07-Jun-2015 20:44:12.769 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.maintain Timing out [139,977,950,291,840]\n07-Jun-2015 20:44:12.769 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Attempting to remove [139,977,950,291,840] from poller\n07-Jun-2015 20:44:12.769 FINE [ajp-apr-8208-Poller] org.apache.tomcat.util.net.AprEndpoint$Poller.removeFromPoller Removed [139,977,950,291,840] from poller\n\nTo me this looks like a bug that Tomcat is not able to detect that the apache socket has gone away. But could also be a bug in the native ajp implementation of the socket handlers. When disabling apr support from server.xml all seems to function as expected and restarting apache does not result in a flood of messages.\n\nAny ideas on what could be happening? A bug?\n\nThanks for any help,\nMilo van der Zee", "id": 184172, "time": "2015-07-26T09:32:01Z", "creator": "milo@vanderzee.org", "creation_time": "2015-07-26T09:32:01Z", "is_private": false}, {"count": 5, "tags": [], "creator": "gregh3269@gmail.com", "text": "Does it work ok on tomcat 7?", "id": 184173, "time": "2015-07-26T10:28:11Z", "bug_id": 58151, "creation_time": "2015-07-26T10:28:11Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 58151, "attachment_id": null, "text": "Works fine in Tomcat 7. In Tomcat 8 I see a massive amount of context switching and so I assume Tomcat tries to create a connection and fails but tries again immediately.", "id": 184174, "time": "2015-07-26T10:55:42Z", "creator": "milo@vanderzee.org", "creation_time": "2015-07-26T10:55:42Z", "is_private": false}, {"count": 7, "tags": [], "creator": "gregh3269@gmail.com", "text": "Centos 7 running via jsvc\n\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND     \n 1459 runner    20   0 4588960 578536   8312 S 263.0 15.4   8:00.51 jsvc  \n\n:{", "id": 184181, "time": "2015-07-27T06:31:19Z", "bug_id": 58151, "creation_time": "2015-07-27T06:31:19Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 58151, "attachment_id": null, "text": "I can't reproduce this on either Linux or Windows with the 8.0.24 code or the latest 8.0.x code and tc-native 1.1.33. I've been hammering the Tomcat home page (via httpd) using ab with the only impact of an httpd restart is that some requests are delayed a little.\n\nSteps to reproduce this with a clean Tomcat install would help.\n\nIs the CPU spike you observe permanent or temporary? If temporary, how long until it settles back down?\n\nIf this is permanent, figuring out what thread(s) are using the CPU [1] and then remote debugging [2] to figure out what code path is causing the problem would be extremely helpful.\n\n[1] http://javadrama.blogspot.co.uk/2012/02/why-is-java-eating-my-cpu.html\n[2] http://wiki.apache.org/tomcat/FAQ/Developing#Q1", "id": 184239, "time": "2015-07-30T18:39:58Z", "creator": "markt@apache.org", "creation_time": "2015-07-30T18:39:58Z", "is_private": false}, {"count": 9, "text": "It happens randomly on all three of my Centos boxes 5/6/7.  Maybe its only centos/rh? Once it starts you have to stop tomcat and restart it.\nfrom the  \"Dump for 8.0.24\" \n\n\"ajp-apr-8009-Poller\" #26 daemon prio=5 os_prio=0 tid=0x00007f1d48374800 nid=0xc92 runnable [0x00007f1ceb9fa000]\n   java.lang.Thread.State: RUNNABLE\n\tat org.apache.tomcat.jni.Poll.poll(Native Method)\n\tat org.apache.tomcat.util.net.AprEndpoint$Poller.run(AprEndpoint.java:1810)\n\tat java.lang.Thread.run(Thread.java:745) \n\n\nrv = Poll.poll(pollers[i], nextPollerTime, desc, true);\n\nWhy only on my Centos, mystery.\n\nI will have another go at debugging it when it happens again.", "bug_id": 58151, "attachment_id": null, "id": 184246, "time": "2015-07-31T07:57:02Z", "creator": "gregh3269@gmail.com", "creation_time": "2015-07-31T07:57:02Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "creator": "milo@vanderzee.org", "attachment_id": null, "id": 184247, "time": "2015-07-31T08:17:33Z", "bug_id": 58151, "creation_time": "2015-07-31T08:17:33Z", "is_private": false, "text": "Hello,\n\nI'm using Gentoo so not only Centos is affected. I can trigger the bug by restarting apache while there are sessions active.\n\nLoad on the server does not seem to influence the occurance of the bug.\n\nSometimes the load goes down again after about 30 minutes till hours. I did not actually measure the time but I noticed that sometimes the load goes back to normal after a long time.\n\nBecause of the context switching (>400,000 cs/sec) that is causing the load I assume that the parkNanos call is in the neighborhood of where to look for fixes.\n\n\"ajp-apr-8200-exec-107\" #3671 daemon prio=5 os_prio=0 tid=0x00007f62a007f800 nid=0x3adc waiting on condition [0x00007f624d4a6000]\n   java.lang.Thread.State: TIMED_WAITING (parking)\n        at sun.misc.Unsafe.park(Native Method)\n        - parking to wait for  <0x00000000ed8dfbe0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)\n        at java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)\n        at org.apache.tomcat.util.threads.TaskQueue.poll(Unknown Source)\n        at org.apache.tomcat.util.threads.TaskQueue.poll(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1066)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(Unknown Source)\n        at java.lang.Thread.run(Thread.java:745)\n\nThanks.\n\nMAG,\nMilo"}, {"count": 11, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 184249, "time": "2015-07-31T09:33:02Z", "bug_id": 58151, "creation_time": "2015-07-31T09:33:02Z", "is_private": false, "text": "A couple of further questions.\n\nWhat, exactly, do you mean by \"sessions acive\"? An actively used AJP connection to Tomcat?\n\nAlso, what do you mean by \"restart\"? Stop/start? Graceful restart?\n\nIt sounds like a connection is going in and out of the Poller very quickly putting the Poller into (effecively) a tight loop. What we really need to know is why hence my request for remote debugging to trace the code path. That should be enough to figure out what is going on."}, {"count": 12, "tags": [], "creator": "gregh3269@gmail.com", "text": "I have setup eclispe to debug tomcat running on the server, (not done much remote debugging, so bear with me) when I attach the debugger the with a breakpoint it stops as expected, if I then remove and add it again and refresh the application it hangs and does not go back to the breakpoint in eclipse?  I was expecting it to go back and allow me to step through the source.\n\nAre there any more detail instruction how to do this?\n\n\nGo to \"Run->Debug Configurations...\". Click on \"Remote Java Applications\", then click \"New\". Type in the title. Note that port 8000 from the Tomcat instructions. Save and run.\nEclipse will connect to the JVM that Tomcat is running under. Wow, that was easy! \n\nThanks Greg", "id": 184265, "time": "2015-08-01T10:49:21Z", "bug_id": 58151, "creation_time": "2015-08-01T10:49:21Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "creator": "milo@vanderzee.org", "attachment_id": null, "id": 184266, "time": "2015-08-01T11:08:27Z", "bug_id": 58151, "creation_time": "2015-08-01T11:08:27Z", "is_private": false, "text": "What do you mean with \"trace the code path\". Isn't that the stacktrace? But that is already given so what exactly do you mean?"}, {"count": 14, "tags": [], "creator": "gregh3269@gmail.com", "attachment_id": null, "id": 184273, "time": "2015-08-02T08:43:16Z", "bug_id": 58151, "creation_time": "2015-08-02T08:43:16Z", "is_private": false, "text": "Hello,\n\nIt started again and was on thread 3187 (see tomcatdump-8.0.24-2015-08-02.txt)\n\n3187runner2003828m707m13mS16.518.56:38.29java\t6:38.29 java\t\t\"ajp-apr-8009-Poller\" #28 daemon prio=5 os_prio=0 tid=0x00007f0be4626000 nid=0xc73 runnable [0x00007f0b92745000]\n\n\n\n\"ajp-apr-8009-Poller\" #28 daemon prio=5 os_prio=0 tid=0x00007f0be4626000 nid=0xc73 runnable [0x00007f0b92745000]\n   java.lang.Thread.State: RUNNABLE\n\tat org.apache.tomcat.jni.Poll.poll(Native Method)\n\tat org.apache.tomcat.util.net.AprEndpoint$Poller.run(AprEndpoint.java:1810)\n\tat java.lang.Thread.run(Thread.java:745)\n\n\nI managed to get the debugger attached and a breakpoint in AprEndpoint class line 1802 (below),  it seemed to be going in a loop which was consuming the cpu.\n\n\n// Poll for the specified interval\nfor (int i = 0; i < pollers.length; i++) {\n..\n}\n\nthe variable pollers.length == 1\n\nFor some reason it stopped breaking and the CPU went back to normal, after I held it on the breakpoint for some time as I was looking at the source, so not sure?\n\nCheers Greg"}, {"count": 15, "tags": [], "bug_id": 58151, "attachment_id": 32951, "text": "Created attachment 32951\nThread 3187 dump", "id": 184274, "time": "2015-08-02T08:44:09Z", "creator": "gregh3269@gmail.com", "creation_time": "2015-08-02T08:44:09Z", "is_private": false}, {"count": 16, "tags": [], "creator": "gregh3269@gmail.com", "text": "Checking the source from 7.0.61 which works ok with 8.0.24 there are some  differences in the run method, maybe these need checking???\n\nremoveFromPoller(info.socket); added\nrv = mergeDescriptors(desc, rv); added\n\ndifferences\n\n// Process socket timeouts\nif (getSoTimeout() > 0 && maintain++ > 1000 && pollerRunning) {\n // This works and uses only one timeout mechanism for everything, but the\n // non event poller might be a bit faster by using the old maintain.\n maintain = 0;\n maintain();\n}\n\n// Process socket timeouts\nif (getSoTimeout() > 0 && pollerRunning) {\n // This works and uses only one timeout mechanism for everything, but the\n // non event poller might be a bit faster by using the old maintain.\n maintain();\n}\n\nJust an idea?\n\nCheers Greg", "id": 184275, "time": "2015-08-02T09:06:21Z", "bug_id": 58151, "creation_time": "2015-08-02T09:06:21Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 184288, "time": "2015-08-03T20:34:17Z", "bug_id": 58151, "creation_time": "2015-08-03T20:34:17Z", "is_private": false, "text": "The stack trace only shows where execution is at a single point in time. It doesn't show how execution reached that point or where execution will go afterwards.\n\nI suspect that something is putting a socket in an odd/bad state. The code then enters the following loop:\n- the socket is queued to be added to the poller\n- the socket is added to the poller\n- poll() finds an event for the socket\n- the event is processed\n- processing terminates early because of the odd/bad state\n\nWhat we need to figure out is what is this odd/bad state so we can detect it and ensure the socket is correctly processed (probably closed).\n\nIt is possible that a timeout fired while you were looking at the code. I'd recommend increasing the socket timeout to 5-10 minutes while you are debugging this."}, {"count": 18, "tags": [], "bug_id": 58151, "attachment_id": null, "text": "Mark,\n\nI do not think I will be able to debug the run() {..}  Trying to check whether the odd/bad state when I really have no idea what it is supposed to do.\n\n\nif (((desc[n*2] & Poll.APR_POLLHUP) == Poll.APR_POLLHUP)|| ((desc[n*2] & Poll.APR_POLLERR) == Poll.APR_POLLERR) || ((desc[n*2] & Poll.APR_POLLNVAL) == Poll.APR_POLLNVAL)) {\n  if (!processSocket(desc[n*2+1], SocketStatus.ERROR)) {\n    // Close socket and clear pool\n    closeSocket(desc[n*2+1]);\n  }\n}\n\nWould the randomness of this be concurrency issues?  I am running on slower hardware (although it is happening on my new i5 box) had this before, adding and removing at the same time, causing deadlocks.\n\nI don't mind making changes to the source ie backtracing the mods to see which is causing the run() to loop continuously.\n\nCheers Greg", "id": 184293, "time": "2015-08-04T07:57:55Z", "creator": "gregh3269@gmail.com", "creation_time": "2015-08-04T07:57:55Z", "is_private": false}, {"count": 19, "tags": [], "bug_id": 58151, "attachment_id": null, "text": "if you check the private void add{..}\n\nwhat did the ok do?\n\nboolean ok = false;\nsynchronized (this) {\n    // Add socket to the list. Newly added sockets will wait\n    // at most for pollTime before being polled. Don't add the\n    // socket once the poller has stopped but destroy it straight\n    // away\n    if (pollerRunning && addList.add(socket, timeout, flags)) {\n        ok = true;\n        this.notify();\n    }\n}\nif (!ok) {\n    // Can't do anything: close the socket right away\n    boolean comet = connections.get(\n    Long.valueOf(socket)).isComet();\n    if (!comet || (comet && !processSocket(\n        socket, SocketStatus.ERROR))) {\n        closeSocket(socket);\n    }\n}", "id": 184294, "time": "2015-08-04T08:04:31Z", "creator": "gregh3269@gmail.com", "creation_time": "2015-08-04T08:04:31Z", "is_private": false}, {"count": 20, "text": "Don't worry too much about why the loop is happening. Once we know the route execution is taking we'll probably be able to figure out the why. As a starting point, would it be possible for you to find out the following when the loop happens:\n1. Put a break point on AprEndpoint.Poller.add(long, int, int) and tell us the full stack trace for the code that adds the socket to the Poller\n\n2. Put as break point on ApeEndpoint.processSocket(long, status) and (for the looping socket) tell us what the value of the status parameter is.\n\nThe above two bits of information should allow us to get a little further.", "bug_id": 58151, "attachment_id": null, "id": 184297, "time": "2015-08-04T10:02:37Z", "creator": "markt@apache.org", "creation_time": "2015-08-04T10:02:37Z", "tags": [], "is_private": false}, {"count": 21, "tags": [], "bug_id": 58151, "attachment_id": null, "text": "Mark, is it helpfull if I try to setup desktop sharing while the bug is happening? Then you could debug whatever you like :)\n\nBut I'll also add the stacktraces as soon as I'm able to grap them.", "id": 184298, "time": "2015-08-04T10:19:36Z", "creator": "milo@vanderzee.org", "creation_time": "2015-08-04T10:19:36Z", "is_private": false}, {"count": 22, "text": "Breakpoint 1:\nAprEndpoint$Poller.add(139982580808944, -1, 1) line: 1485\t\nAprEndpoint$Poller.access$500(AprEndpoint$Poller, long, int, int) line: 1251\t\nAprEndpoint$AprSocketWrapper.registerforEvent(int, boolean, boolean) line: 2516\t\nAjpAprProtocol$AjpConnectionHandler.release(SocketWrapper<Long>, Processor<Long>, boolean, boolean) line: 136\t\nAjpAprProtocol$AjpConnectionHandler(AbstractProtocol$AbstractConnectionHandler<S,P>).process(SocketWrapper<S>, SocketStatus) line: 722\t\nAprEndpoint$SocketProcessor.doRun() line: 2463\t\nAprEndpoint$SocketProcessor.run() line: 2452\t\nThreadPoolExecutor(ThreadPoolExecutor).runWorker(ThreadPoolExecutor$Worker) line: 1142\t\nThreadPoolExecutor$Worker.run() line: 617\t\nTaskThread$WrappingRunnable.run() line: not available\t\nTaskThread(Thread).run() line: 745\t\n\nThe socket number changes every call to this method.\n==================\nBreakpoint 2:\nAprEndpoint.processSocket(long, OPEN_READ) line: 887\t\nAprEndpoint$Poller.run() line: 1884\t\nThread.run() line: 745\t\n\nI set a conditional breakpoint (return !status.equals(SocketStatus.OPEN_READ);) and I've never seen anything else as OPEN_READ.\n\nHope this helps...", "bug_id": 58151, "attachment_id": null, "id": 184317, "time": "2015-08-04T22:48:33Z", "creator": "milo@vanderzee.org", "creation_time": "2015-08-04T22:48:33Z", "tags": [], "is_private": false}, {"count": 23, "tags": [], "bug_id": 58151, "attachment_id": null, "text": "I found that completely stopping apache triggers the bug instantly. The number of context switches rises from about 5000 cs/sec to 500000 cs/sec.\n\nWhen I then start apache cs/sec goes down to about 15000 cs/sec.", "id": 184333, "time": "2015-08-05T12:15:27Z", "creator": "milo@vanderzee.org", "creation_time": "2015-08-05T12:15:27Z", "is_private": false}, {"count": 24, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 184355, "time": "2015-08-05T15:29:27Z", "bug_id": 58151, "creation_time": "2015-08-05T15:29:27Z", "is_private": false, "text": "Thanks for all the pointers. I'm able to reproduce behavior that looks like the behavior described with high CPU on a single java thread. I can't be sure that I am seeing the same problem but I am seeing a problem which I should be able to fix. I'll update this ticket as I make progress. I might have some dev 8.0.x builds for people to test."}, {"count": 25, "tags": [], "creator": "markt@apache.org", "text": "This should be fixed now in 8.0.x/trunk.\n\nThe problem was that a return value of zero was treated as a non-blocking read that returned no data rather than as EOF. That meant that the socket was put straight back into the Poller only for the Poller to trigger a read event immediately for EOF and so the loop continued.", "id": 184362, "time": "2015-08-05T19:44:00Z", "bug_id": 58151, "creation_time": "2015-08-05T19:44:00Z", "is_private": false, "attachment_id": null}, {"count": 26, "tags": [], "creator": "milo@vanderzee.org", "text": "Thankyou very much.", "id": 184363, "time": "2015-08-05T19:57:53Z", "bug_id": 58151, "creation_time": "2015-08-05T19:57:53Z", "is_private": false, "attachment_id": null}, {"count": 27, "tags": [], "bug_id": 58151, "attachment_id": null, "text": "Excellent, I will apply the change in AjpAprProcessor locally to see if its the same issue (I do not stop and restart tomcat for it to happen). Thanks!\n\nGreg", "id": 184373, "time": "2015-08-06T07:22:25Z", "creator": "gregh3269@gmail.com", "creation_time": "2015-08-06T07:22:25Z", "is_private": false}, {"count": 28, "tags": [], "creator": "milo@vanderzee.org", "text": "@Gregh: not restarting Tomcat but restarting Apache triggers the bug in my setup. Stopping Apache kills one end of the socket and so Tomcat starts the loop.", "id": 184374, "time": "2015-08-06T07:34:36Z", "bug_id": 58151, "creation_time": "2015-08-06T07:34:36Z", "is_private": false, "attachment_id": null}, {"count": 29, "tags": [], "creator": "gregh3269@gmail.com", "text": "Seems fixed with the AjpAprProcessor patch, been over a week without the fans starting!!!  Thanks @Milo (& Mark).\n\nGreg :-)", "id": 184576, "time": "2015-08-16T08:31:36Z", "bug_id": 58151, "creation_time": "2015-08-16T08:31:36Z", "is_private": false, "attachment_id": null}]