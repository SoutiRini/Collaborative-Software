[{"count": 0, "tags": [], "bug_id": 44658, "is_private": false, "text": "Originally posted on fop-users@ by Lou Masters (29-02-2008):\n---\nIn 0.20.3, I used to do the following to give one of my columns some extra size and ensure it always had a minimum: \n\n<fo:table-column column-width=\"20mm+proportional-column-width(1)\"/> \n\nIn 0.94, this now produces bizarre results.  I got around it by changing the width to something like: \n\n<fo:table-column column-width=\"20mm+proportional-column-width(1.2)\"/> \n\nThis seems to be OK.  My question is this:  Should my original method have ever worked?  Was it correct?\n---\n\nThe initial reply was that expressions like these are perfectly legitimate according to the XSL-FO Recommendation.\nIn the meantime, I re-checked the behavior of this expression in FOP Trunk, and it seems to be completely non-functional.\n\nThe reason is that an expression like the above is parsed into a RelativeNumericProperty. \nAs a result, the loop in org.apache.fop.layoutmgr.ColumnSetup.computeTableUnit() does not detect the TableColLength, and in the attached sample, returns a double value of 0.0 for both columns.", "id": 114889, "time": "2008-03-23T03:46:00Z", "creator": "adelmelle@apache.org", "creation_time": "2008-03-23T03:46:00Z", "attachment_id": null}, {"text": "Created attachment 21701\nFO demonstrating the issue", "tags": [], "bug_id": 44658, "is_private": false, "count": 1, "id": 114890, "time": "2008-03-23T03:47:01Z", "creator": "adelmelle@apache.org", "creation_time": "2008-03-23T03:47:01Z", "attachment_id": 21701}, {"count": 2, "tags": [], "bug_id": 44658, "attachment_id": null, "text": "Thinking of a fix, this seems to be all but trivial...\n\nColumnSetup can only detect if the specified width is a relative numeric, but does not have access to the operands, so their type cannot be determined from there.\n\nOne option being investigated:\n- push getTableUnits() up in the hierarchy, and make it part of the Length interface\n- as such, RelativeNumericProperty and NumericProperty *must* also implement it\n- NumericProperty can simply return 0\n- RelativeNumericProperty can check its operands, and if there is a TableColLength, call its getTableUnits() (possible tough nut: deeper nesting, more complex expression tree?)\n- ColumnSetup then only needs to know the column-width is a Length to know that the call to getTableUnits() will succeed; if it is backed by an expression (RelativeNumericProperty) the above should make sure that we also get a correct number of units in that case\n", "id": 114913, "time": "2008-03-24T05:11:28Z", "creator": "adelmelle@apache.org", "creation_time": "2008-03-24T05:11:28Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 44658, "attachment_id": 21706, "is_private": false, "id": 114924, "time": "2008-03-24T13:04:33Z", "creator": "adelmelle@apache.org", "creation_time": "2008-03-24T13:04:33Z", "text": "Created attachment 21706\nInitial patch correcting the problem\n\n\nInitial patch addresses the issue, and at the same time caters for expressions like:\n\nproportional-column-width(1) + proportional-column-width(0.5) -> 1.5 table-units\nmax(proportional-column-width(1), proportional-column-width(1.5)) -> 1.5 table-units\n\nStrange as they may seem, they are definitely legal: proportional-column-width() yields a numeric."}, {"count": 4, "tags": [], "bug_id": 44658, "attachment_id": null, "id": 115368, "creation_time": "2008-04-07T07:08:17Z", "time": "2008-04-07T07:08:17Z", "creator": "spepping@apache.org", "text": "Andreas,\n\nYour fix is high up the tree, in the Length interface. I attach a patch which limits the getTableUnits method to RelativeNumericProperty. The method only plays a role in TableColLength and in RelativeNumericProperty, which may contain TableColLength in its tree.\n\nNote that the method getTableUnits had apparently earlier been implemented in Length. Traces of that are still present in the code.\n\nSimon\n", "is_private": false}, {"count": 5, "tags": [], "bug_id": 44658, "attachment_id": 21785, "id": 115369, "time": "2008-04-07T07:10:24Z", "creator": "spepping@apache.org", "creation_time": "2008-04-07T07:10:24Z", "is_private": false, "text": "Created attachment 21785\nAlternative patch for the problem, as described"}, {"count": 6, "tags": [], "bug_id": 44658, "is_private": false, "id": 115370, "creation_time": "2008-04-07T07:31:54Z", "time": "2008-04-07T07:31:54Z", "creator": "spepping@apache.org", "text": "The method that is a remnant of the past and needs to be removed, is LengthProperty.getTableUnits.", "attachment_id": null}, {"text": "\nCool. Simon's patch indeed looks better than my own attempt.\n\nI'll see if I can apply it to the trunk (if Simon does not beat me to it)", "tags": [], "bug_id": 44658, "is_private": false, "count": 7, "id": 115427, "time": "2008-04-08T13:05:11Z", "creator": "adelmelle@apache.org", "creation_time": "2008-04-08T13:05:11Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 44658, "attachment_id": null, "text": "Fixed in revision 651323.", "id": 115845, "time": "2008-04-24T10:44:07Z", "creator": "spepping@apache.org", "creation_time": "2008-04-24T10:44:07Z", "is_private": false}, {"count": 9, "tags": [], "creator": "gadams@apache.org", "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "id": 156246, "time": "2012-04-01T07:06:31Z", "bug_id": 44658, "creation_time": "2012-04-01T07:06:31Z", "is_private": false, "attachment_id": null}]