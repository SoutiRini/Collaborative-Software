[{"attachment_id": null, "tags": [], "bug_id": 13586, "is_private": false, "count": 0, "id": 24436, "time": "2002-10-13T23:42:20Z", "creator": "stefan@hello-penguin.com", "creation_time": "2002-10-13T23:42:20Z", "text": "The jre-1.3.1 for linux-alpha has an ugly floating point bug.\nThe java-engine raises SIGFPE when comparing a value with NaN at least\nunder some conditions.\nWell, this is not a Fop bug, but I suggest to change the current PDF renderer\nto work arround the problem. I don't know when Digital/Compaq/HP (or the\nAXP technology owner of the day) will fix this or release a new jre:\n\nPDFRenderer.java:\n\non axp, I use\nfloat currentLetterSpacing = (float) 99999.99;\ninstead of:\nfloat currentLetterSpacing = Float.NaN;\n\nto avoid crashes right here:\n\nif (letterspacing != this.currentLetterSpacing) { ... }\n\nto make the thing work on linux axp.\n\nFor everlasting amusement, I attach a backtrace (debug on, optimizer off):\n\n+ exec /usr/opt/axp-fop/jre1.3.1/bin/alpha/native_threads/java -Xrs -cp\n/opt/axp-fop/fop-0.20.4/lib/avalon-framework-cvs-20020315.jar:/opt/axp-fop/fop-0.20.4/lib/xml-apis.jar:/opt/axp-fop/fop-0.20.4/lib/xercesImpl-2.0.1.jar:/opt/axp-fop/fop-0.20.4/lib/xalan-2.3.1.jar:/opt/axp-fop/fop-0.20.4/lib/batik.jar:/opt/axp-fop/fop-0.20.4/build/fop.jar\norg.apache.fop.apps.Fop fop_bild.fo fop_bild.ps\nWarning: JIT compiler \"none\" not found. Will use interpreter.\n[INFO] FOP 0.20.4\n[INFO] building formatting object tree\n[INFO] [1]\n[WARNING] table-layout=auto is not supported, using fixed!\n[WARNING] Sum of fixed column widths 510234 greater than maximum specified IPD\n453543\n[ERROR] text outside block area\n\nSIGFPE    8*   arithmetic exception\n    si_signo [8]: SIGFPE    8*   arithmetic exception\n    si_errno [0]: Success\n    si_code [128]: unknown siginfo\n\tstackpointer=0x11fffcdf8\n\nFull thread dump Classic VM (1.3.1-1, native threads):\n    \"Finalizer\" (TID:0x2000197e850, pid: 4583, sys_thread_t:0x120180b88,\nstate:CW, native ID:0x803) prio=8\n\tat java.lang.Object.wait(Native Method)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:108)\n\tat java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:123)\n\tat java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:162)\n    \"Reference Handler\" (TID:0x2000197e910, pid: 4582, sys_thread_t:0x120176148,\nstate:CW, native ID:0x402) prio=10\n\tat java.lang.Object.wait(Native Method)\n\tat java.lang.Object.wait(Object.java:420)\n\tat java.lang.ref.Reference$ReferenceHandler.run(Reference.java:110)\n    \"main\" (TID:0x2000197e600, pid: 4528, sys_thread_t:0x120105e18, state:R,\nnative ID:0x400) prio=5\n\tat org.apache.fop.render.pdf.PDFRenderer.renderWordArea(PDFRenderer.java:631)\n\tat org.apache.fop.layout.inline.WordArea.render(WordArea.java:31)\n\tat org.apache.fop.render.AbstractRenderer.renderLineArea(AbstractRenderer.java:437)\n\tat org.apache.fop.layout.LineArea.render(LineArea.java:163)\n\tat\norg.apache.fop.render.AbstractRenderer.renderBlockArea(AbstractRenderer.java:406)\n\tat org.apache.fop.layout.BlockArea.render(BlockArea.java:82)\n\tat\norg.apache.fop.render.AbstractRenderer.renderBlockArea(AbstractRenderer.java:406)\n\tat org.apache.fop.layout.BlockArea.render(BlockArea.java:82)\n\tat\norg.apache.fop.render.AbstractRenderer.renderAreaContainer(AbstractRenderer.java:372)\n\tat org.apache.fop.layout.ColumnArea.render(ColumnArea.java:33)\n\tat org.apache.fop.render.AbstractRenderer.renderSpanArea(AbstractRenderer.java:59)\n\tat org.apache.fop.layout.SpanArea.render(SpanArea.java:53)\n\tat\norg.apache.fop.render.AbstractRenderer.renderBodyAreaContainer(AbstractRenderer.java:328)\n\tat org.apache.fop.render.pdf.PDFRenderer.renderPage(PDFRenderer.java:849)\n\tat org.apache.fop.render.pdf.PDFRenderer.render(PDFRenderer.java:814)\n\tat org.apache.fop.apps.StreamRenderer.queuePage(StreamRenderer.java:227)\n\tat org.apache.fop.layout.AreaTree.addPage(AreaTree.java:81)\n\tat org.apache.fop.fo.pagination.PageSequence.format(PageSequence.java:307)\n\tat org.apache.fop.apps.StreamRenderer.render(StreamRenderer.java:210)\n\tat org.apache.fop.fo.FOTreeBuilder.endElement(FOTreeBuilder.java:183)\n\tat\norg.apache.xerces.parsers.AbstractSAXParser.endElement(AbstractSAXParser.java:559)\n\tat\norg.apache.xerces.impl.XMLNamespaceBinder.handleEndElement(XMLNamespaceBinder.java:853)\n\tat\norg.apache.xerces.impl.XMLNamespaceBinder.endElement(XMLNamespaceBinder.java:643)\n\tat\norg.apache.xerces.impl.dtd.XMLDTDValidator.handleEndElement(XMLDTDValidator.java:2978)\n\tat org.apache.xerces.impl.dtd.XMLDTDValidator.endElement(XMLDTDValidator.java:918)\n\tat\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl.handleEndElement(XMLDocumentFragmentScannerImpl.java:1145)\n\tat\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanEndElement(XMLDocumentFragmentScannerImpl.java:988)\n\tat\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(XMLDocumentFragmentScannerImpl.java:1446)\n\tat\norg.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:333)\n\tat\norg.apache.xerces.parsers.StandardParserConfiguration.parse(StandardParserConfiguration.java:529)\n\tat\norg.apache.xerces.parsers.StandardParserConfiguration.parse(StandardParserConfiguration.java:585)\n\tat org.apache.xerces.parsers.XMLParser.parse(XMLParser.java:147)\n\tat org.apache.xerces.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1148)\n\tat org.apache.fop.apps.Driver.render(Driver.java:469)\n\tat org.apache.fop.apps.CommandLineStarter.run(CommandLineStarter.java:70)\n\tat org.apache.fop.apps.Fop.main(Fop.java:19)\nMonitor Cache Dump:\n    <unknown key> (0x1994880): owner \"main\" (0x120105e18) 1 entry\n    <unknown key> (0x197e870): <unowned>\n\tWaiting to be notified:\n\t    \"Finalizer\" (0x120180b88)\n    <unknown key> (0x197e920): <unowned>\n\tWaiting to be notified:\n\t    \"Reference Handler\" (0x120176148)\n    <unknown key> (0x1996110): owner \"main\" (0x120105e18) 1 entry\n    <unknown key> (0x198f2e0): owner \"main\" (0x120105e18) 1 entry\nRegistered Monitor Dump:\n    utf8 hash table: <unowned>\n    JNI pinning lock: <unowned>\n    JNI global reference lock: <unowned>\n    BinClass lock: <unowned>\n    Class linking lock: <unowned>\n    System class loader lock: <unowned>\n    Code rewrite lock: <unowned>\n    Heap lock: <unowned>\n    Monitor cache lock: owner \"main\" (0x120105e18) 1 entry\n    Thread queue lock: owner \"main\" (0x120105e18) 1 entry\n    Monitor registry: owner \"main\" (0x120105e18) 1 entry"}, {"count": 1, "tags": [], "creator": "oleg@tkachenko.com", "text": "So, what you suggests we should use instead of if (letterspacing !=\nthis.currentLetterSpacing) ?", "id": 27009, "time": "2002-11-26T17:00:14Z", "bug_id": 13586, "creation_time": "2002-11-26T17:00:14Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 13586, "text": "Oleg, please READ the report again.\n\nI wrote:\n----------------------------------------------------------------------\non axp, I use\nfloat currentLetterSpacing = (float) 99999.99;\ninstead of:\nfloat currentLetterSpacing = Float.NaN;\n----------------------------------------------------------------------\n\nSo the comparison is ok if currentLetterSpacing is not initialized with\nNaN.\n\nThat's the whole fix.\nDont' use\nfloat currentLetterSpacing = Float.NaN\nJust use\nfloat currentLetterSpacing = (float) 99999.99;\n\n(same source)\n\nThis has no side-effects except if somebody uses\nleterspacing \"99999.99\" which seems not be a real-world\nissue.\n", "count": 2, "id": 27120, "time": "2002-11-28T14:43:33Z", "creator": "stefan@hello-penguin.com", "creation_time": "2002-11-28T14:43:33Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 13586, "attachment_id": null, "is_private": false, "id": 27479, "time": "2002-12-05T23:34:30Z", "creator": "pbwest@powerup.com.au", "creation_time": "2002-12-05T23:34:30Z", "text": "Christian suggests using Float.MAX instead of 99999.99.  That makes things a\nlittle tidier, and makes accidental use of the value a few orders of magnitude\nmore unlikely.  I think that it could be integrated."}, {"count": 4, "tags": [], "creator": "pbwest@powerup.com.au", "is_private": false, "text": "Make that Float.MAX_VALUE.", "id": 27481, "time": "2002-12-05T23:57:08Z", "bug_id": 13586, "creation_time": "2002-12-05T23:57:08Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "oleg@tkachenko.com", "text": "Stefan, can you please verify that using Float.MAX_VALUE will be ok under\njre-1.3.1 for linux-alpha?", "id": 27512, "time": "2002-12-07T18:43:26Z", "bug_id": 13586, "creation_time": "2002-12-07T18:43:26Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 13586, "text": "Probably long obsolete. Closing. Please reopen if necessary.", "count": 6, "id": 122095, "time": "2008-11-01T08:57:13Z", "creator": "jeremias@apache.org", "creation_time": "2008-11-01T08:57:13Z", "is_private": false}, {"count": 7, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 156655, "time": "2012-04-01T13:50:57Z", "bug_id": 13586, "creation_time": "2012-04-01T13:50:57Z", "is_private": false, "text": "batch transition to closed remaining pre-FOP1.0 resolved bugs"}]