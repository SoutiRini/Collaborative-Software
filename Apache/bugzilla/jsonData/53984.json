[{"count": 0, "tags": [], "creator": "pedro.t.garcia@gmail.com", "attachment_id": null, "text": "I keep getting this exception in an application which parses excel files sent to us.\n\nIt's because the file has one or more ColumnInfoRecord right after a row block. Like this:\nOffset=0x00008772(34674) recno=1873 sid=0x00FD size=0x000A(10)\n[LABELSST]\n    .row    = 0x00D2\n    .col    = 0x0006\n    .xfindex= 0x002A\n  .sstIndex = 0x001D\n[/LABELSST]\n\nOffset=0x00008780(34688) recno=1874 sid=0x0201 size=0x0006(6)\n[BLANK]\n    row= 0x00D2\n    col= 0x0007\n    xf = 0x002A\n[/BLANK]\n\nOffset=0x0000878A(34698) recno=1875 sid=0x0201 size=0x0006(6)\n[BLANK]\n\n... several empty cells in row 0xD3\n\n[/BLANK]\n\n\nOffset=0x000087D0(34768) recno=1882 sid=0x007D size=0x000B(11)\n[COLINFO]\n  colfirst = 0\n  collast  = 0\n  colwidth = 10240\n  xfindex  = 0\n  options  = 0x0000\n    hidden   = false\n    olevel   = 0\n    collapsed= false\n[/COLINFO]\n\n\nSeveral versions of Excel and LibreOffice 3.5.4.2 open these files without problem.\nI don't know how they are generated, but I wonder if the record order described in the OOO excelfileformat.pdf is strict or it is allowed for a ColumnInfoRecord to appear after a row block.\nAlso I would like to know if the solution is as simple as adding ColumnInfoRecord to RecordOrderer.isEndOfRowBlock which I guess was the solution to a very similar bug (bug 50426)\n\nThank you very much.", "id": 162639, "time": "2012-10-09T10:18:16Z", "bug_id": 53984, "creation_time": "2012-10-09T10:18:16Z", "is_private": false}, {"count": 1, "tags": [], "creator": "yegor@dinom.ru", "is_private": false, "id": 162641, "attachment_id": null, "bug_id": 53984, "creation_time": "2012-10-09T11:41:35Z", "time": "2012-10-09T11:41:35Z", "text": "Can you attache file ? \n\nYegor"}, {"count": 2, "tags": [], "bug_id": 53984, "is_private": false, "text": "Well, in fact, I can't right now, since I cannot share the contents of the files, and modifying and saving the files fixes the issues.\n\nBut...\nI attached the relevant part of the BiffViewer output for one of the files\nAnd after debugging the execution I can explain what happens exactly.\n\nHaving COLINFO record right after the row block means that ColumnInfoRecords are included in the row block and when processing them the  RowRecordsAggregate(RecordStream rs, SharedValueManager svm) constructor throws an exception when checking the type of record:\n\n\tif (!(rec instanceof CellValueRecordInterface)) { // TRUE for ColumnInfoRecord\n\t\tthrow new RuntimeException(\"Unexpected record type (\" + rec.getClass().getName() + \")\");\n\t}\n\nOops sorry, I just realized I didn't attach the exception stack, i was going to paste it after the bug title, but forgot to do it. Here it is:\njava.lang.RuntimeException: Unexpected record type (org.apache.poi.hssf.record.ColumnInfoRecord)\n\tat org.apache.poi.hssf.record.aggregates.RowRecordsAggregate.<init>(RowRecordsAggregate.java:107) ~[poi-3.8.jar:3.8]\n\tat org.apache.poi.hssf.model.InternalSheet.<init>(InternalSheet.java:208) ~[poi-3.8.jar:3.8]\n\tat org.apache.poi.hssf.model.InternalSheet.createSheet(InternalSheet.java:163) ~[poi-3.8.jar:3.8]\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:296) ~[poi-3.8.jar:3.8]\n\tat org.apache.poi.ss.usermodel.WorkbookFactory.create(WorkbookFactory.java:49) ~[poi-ooxml-3.8.jar:3.8]\n\n\nI have fixed this modifying the RecordOrderer.isEndOfRowBlock method, but don't know if that's the right thing to do:\n\tpublic static boolean isEndOfRowBlock(int sid) {\n\t\tswitch(sid) {\n\t\t\tcase ViewDefinitionRecord.sid:\n\t\t\t\t// should have been prefixed with DrawingRecord (0x00EC), but bug 46280 seems to allow this\n\t\t\tcase DrawingRecord.sid:\n\t\t\tcase DrawingSelectionRecord.sid:\n\t\t\tcase ObjRecord.sid:\n\t\t\tcase TextObjectRecord.sid:\n\n            case GutsRecord.sid:   // see Bug 50426\n            case ColumnInfoRecord.sid:   // see Bug 53984\n\t\t\tcase WindowOneRecord.sid:\n\t\t\t\t// should really be part of workbook stream, but some apps seem to put this before WINDOW2\n\t\t\tcase WindowTwoRecord.sid:\n\t\t\t\treturn true;\n\n\t\t\tcase DVALRecord.sid:\n\t\t\t\treturn true;\n\t\t\tcase EOFRecord.sid:\n\t\t\t\t// WINDOW2 should always be present, so shouldn't have got this far\n\t\t\t\tthrow new RuntimeException(\"Found EOFRecord before WindowTwoRecord was encountered\");\n\t\t}\n\t\treturn PageSettingsBlock.isComponentRecord(sid);\n\t}\n\nPlease, let me know if this info is enough or not.\nIn the meantime I will try to get one of those files without any sensible information so I can attach it here.\n\nThanks.", "id": 162648, "time": "2012-10-09T14:34:05Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2012-10-09T14:34:05Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 53984, "text": "the fix looks sane but I'd rather not commit it without a unit test. BiffViewer dump is not enough, we need a file.\n\nYegor", "id": 162649, "time": "2012-10-09T15:27:16Z", "creator": "yegor@dinom.ru", "creation_time": "2012-10-09T15:27:16Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "is_private": false, "id": 162957, "time": "2012-10-26T11:54:30Z", "bug_id": 53984, "creation_time": "2012-10-26T11:54:30Z", "text": "changing status to NEEDINFO until a test file is provided"}, {"count": 5, "tags": [], "bug_id": 53984, "is_private": false, "id": 164787, "attachment_id": 29880, "creator": "pedro.t.garcia@gmail.com", "creation_time": "2013-01-22T11:43:51Z", "time": "2013-01-22T11:43:51Z", "text": "Created attachment 29880\nTest file throwing the reported exception when openend"}, {"count": 6, "tags": [], "creator": "pedro.t.garcia@gmail.com", "attachment_id": null, "is_private": false, "id": 164788, "time": "2013-01-22T11:44:57Z", "bug_id": 53984, "creation_time": "2013-01-22T11:44:57Z", "text": "After all this time, at last I have a file that I can share with you.\n\nThe problem is that even though you said the fix proposed look sane, it's not perfect, since I found another file which was opening fine that stopped working when I added the workaround suggested, so we have to find another solution for this. Let me know if I can be of any help with it."}, {"count": 7, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 176799, "time": "2014-07-31T13:32:19Z", "bug_id": 53984, "creation_time": "2014-07-31T13:32:19Z", "text": "Fixed in r1614884.\n\nI'm fairly sure that the file in question wasn't generated by Excel, as it does some very very odd things. We do now handle the ColumnInfo coming at the end not the start of the sheet, and we also warn + skip over sheets where the BOFRecord type isn't one we support (this file has a totally invalid one at the end)"}]