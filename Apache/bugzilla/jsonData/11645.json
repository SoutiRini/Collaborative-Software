[{"attachment_id": null, "tags": [], "bug_id": 11645, "text": "Both \ncatalina/src/share/org/apache/catalina/connector/http/HttpResponseStream.java\nand \ncatalina/src/share/org/apache/catalina/connector/ResponseStream.java\nthrow a IOException when calling close and the stream is already closed. Since \nthe is no way to check if a InputStream is open the close method should not \nthrow an Exception if the stream is already close (the InputStream classes in \nthe JDK do this). The close method should look like these in both cases:\n\n/**\n* Close this input stream.  No physical level I-O is performed, but\n* any further attempt to read from this stream will throw an IOException.\n* If a content length has been set but not all of the bytes have yet been\n* consumed, the remaining bytes will be swallowed.\n*/\npublic void close() throws IOException {\n   if (closed)\n      //throw new IOException(sm.getString(\"requestStream.close.closed\"));\n      return;\n   if (length > 0) {\n      while (count < length) {\n         int b = read();\n            if (b < 0)\n               break;\n      }\n   }\n   closed = true;\n}\nThis bug applies to tomcat 4.1.7 too.", "count": 0, "id": 20941, "time": "2002-08-13T02:05:34Z", "creator": "tucu@uol.com.ar", "creation_time": "2002-08-13T02:05:34Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "This bug refers to the deprecated http connector. The coyote connector does not\ndo this.\n\nSince the connector is deprecated, this issue will not be fixed.", "id": 72721, "time": "2005-03-20T19:22:50Z", "bug_id": 11645, "creation_time": "2005-03-20T19:22:50Z", "is_private": false, "attachment_id": null}]