[{"count": 0, "tags": [], "text": "Created attachment 22564\nsheet.getColumnWidth(0) returns negative value\n\nOn Mon, 15 Sep 2008, Thorsten Bux wrote:\n> i tried to get the width of a column with the sheet.getColumnWidth(0)\n> method. If the column width in excel is bigger than a specific size (i\n> think bigger 127 / 890px) then the method sheet.getColumnWidht(0)\n> returns a negative value.\n\nProbably a unsigned 16 bit vs signed 16 bit issue. Probably best if you\ncreate a new bug on bugzilla, and upload a simple test case that shows it\nup.\n\nNick", "is_private": false, "id": 120604, "creation_time": "2008-09-15T04:30:46Z", "time": "2008-09-15T04:30:46Z", "creator": "thorstenbux@gmx.de", "bug_id": 45805, "attachment_id": 22564}, {"count": 1, "tags": [], "creator": "josh@apache.org", "attachment_id": null, "text": "Pretty easy to reproduce this bug:\n\nsheet.setColumnWidth((short)0, (short)40000);\nassertEquals((short)40000, sheet.getColumnWidth((short)0));\n\nExcel column widths are 16 bit unsigned values, but POI was using java shorts for that purpose.  To fix this bug (svn r696075 / r696084), several methods with this problem have been deprecated and replaced with versions that use ints.  \n\nThere is a work-around to java's lack of 16-bit unsigned shorts.  Simply convert (signed) shorts to ints by ANDing with 2^^16-1.  For example:\n\nint width = sheet.getColumnWidth((short)0) & 0xFFFF;\n\nHowever, once you have this bug-fix, the same code can be written:\n\nint width = sheet.getColumnWidth(0);\n", "id": 120696, "time": "2008-09-16T15:08:02Z", "bug_id": 45805, "creation_time": "2008-09-16T15:08:02Z", "is_private": false}]