[{"count": 0, "tags": [], "bug_id": 48460, "attachment_id": null, "is_private": false, "id": 133191, "time": "2009-12-30T00:38:27Z", "creator": "inoue@ariel-networks.com", "creation_time": "2009-12-30T00:38:27Z", "text": "I found three misleading portions in mod_proxy_ajp document.\nIt looks they are derived from http://tomcat.apache.org/connectors-doc/ajp/ajpv13a.html.\n\n\n1. about byte-order (endian-ness)\n\nExcerpted from the original:\n\n    <p>Byte order: I am not clear about the endian-ness of the individual\n    bytes.  I'm guessing the bytes are little-endian, because that's what\n    XDR specifies, and I'm guessing that sys/socket library is magically\n    making that so (on the C side).  If anyone with a better knowledge of\n    socket calls can step in, that would be great.</p>\n\nAJP uses big-endian (I have checked mod_proxy_ajp source code).\nXDR also uses big-endian. See http://www.faqs.org/rfcs/rfc1014.html.\nsocket library function such as htons(3) also uses big-endian(= network byte order).\n\nI suggest that we remove the portion above, and modify the following portion which describes 'integer'.\n\n    <dt><strong>Integer</strong></dt>\n      <dd>A number in the range of <code>0 to 2^16 (32768)</code>.  Stored in\n      2 bytes with the high-order byte first.</dd>\n\nto\n\n    <dt><strong>Integer</strong></dt>\n      <dd>A number in the range of <code>0 to 2^16 (32768)</code>.  Stored in\n      2 bytes with the high-order byte first, which is known as big-endian.</dd>\n\n\n2. a wrong number\n\nExcerpted from the original:\n\n    <p>This works on the assumption that no header names will have length\n    greater than <code>0x9999 (==0xA000 - 1)</code>, which is perfectly\n    reasonable, though somewhat arbitrary.</p>\n\nThis should be as follows,\n\n<code>0x9FFF (==0xA000 - 1)</code>\n\n\n3. description about boolean\n\nExcerpted from the original:\n\n  <section><title>End Response</title>\n    <p>Signals the end of this request-handling cycle.  If the\n    <code>reuse</code> flag is true <code>(==1)</code>, this TCP connection can\n    now be used to handle new incoming requests.  If <code>reuse</code> is false\n    (anything other than 1 in the actual C code), the connection should\n    be closed.</p>\n  </section>\n\nThis should be as follows,\n\ntrue <code>(anything other than 0 in the actual C code)</code>\nfalse <code>(==0)</code>"}, {"count": 1, "attachment_id": null, "creator": "rbowen@apache.org", "text": "Moving docs bugs to docs@httpd.a.o ownership.", "id": 141175, "time": "2010-10-29T11:05:09Z", "bug_id": 48460, "creation_time": "2010-10-29T11:05:09Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "text": "Fixed the original (mod_jk) documentation in r1648589.\n\nAssigning to httpd-docs to get mod_proxy_ajp documentation fixed.", "is_private": false, "bug_id": 48460, "id": 180090, "time": "2014-12-30T20:00:35Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-12-30T20:00:35Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "Added r1648998 (mod_jk) and r1649001 (mod_proxy_ajp in httpd trunk), r1649003 (2.4.x) and r1649005 (2.2.x).", "is_private": false, "bug_id": 48460, "id": 180124, "time": "2015-01-02T12:13:33Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2015-01-02T12:13:33Z", "attachment_id": null}]