[{"count": 0, "tags": [], "creator": "michel.boudinot@inaf.cnrs-gif.fr", "attachment_id": null, "id": 136211, "time": "2010-04-16T17:47:18Z", "bug_id": 49139, "creation_time": "2010-04-16T17:47:18Z", "is_private": false, "text": "When used with 4K blocks OLE documents POIFSFileSystem() invocation gives OutOfBoundsException.\n\n.... part of my code \n\t\tstream = new FileInputStream(fileName);\n\t\tPOIFSFileSystem fs = null;\n    \t        fs = new POIFSFileSystem(stream);         <======( line 101 )\n\t\tDirectoryEntry dir = fs.getRoot();\n\t\t// dir is an instance of DirectoryEntry ...\n\n\t\tdirectoryParse(0, dir);\n......\n\njava.lang.IndexOutOfBoundsException\n\tat org.apache.poi.util.IntList.get(IntList.java:351)\n\tat org.apache.poi.poifs.storage.BlockAllocationTableReader.fetchBlocks(BlockAllocationTableReader.java:191)\n\tat org.apache.poi.poifs.storage.BlockListImpl.fetchBlocks(BlockListImpl.java:130)\n\tat org.apache.poi.poifs.storage.SmallBlockTableReader.getSmallDocumentBlocks(SmallBlockTableReader.java:57)\n\tat org.apache.poi.poifs.filesystem.POIFSFileSystem.<init>(POIFSFileSystem.java:176)\n\tat POIFSDmp.zviDocumentParse(POIFSDmp.java:101)\n\nSame code is ok with 512 byte block documents.\n\nThe document attached (IP-ConvertImage-01.zvi, 22Mb) is a 4K block Zeiss ZVI OLE document to reproduce the observed bug.\nThanks,\nMichel."}, {"attachment_id": 25315, "tags": [], "bug_id": 49139, "text": "Created attachment 25315\nZeiss ZVI Image File (4k blocks OLE document)\n\nThe document attached (IP-ConvertImage-01.zvi, 22Mb) is a 4K block Zeiss ZVI \nOLE document to reproduce the observed bug. \nFile is too big to upload.\nHere is a link to download it within 4 days.\n\nhttp://services.cnrs-gif.fr/bigfiles/Download?key=VONAAEQJFCRJJTQS", "count": 1, "id": 136215, "time": "2010-04-16T18:09:59Z", "creator": "michel.boudinot@inaf.cnrs-gif.fr", "creation_time": "2010-04-16T18:09:59Z", "is_private": false}, {"count": 2, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 136358, "time": "2010-04-23T12:30:26Z", "bug_id": 49139, "creation_time": "2010-04-23T12:30:26Z", "is_private": false, "text": "This is proving to be a bigger job than expected - large swathes of POIFS are hard coded with a 512 byte block size :(\n\nI'm part way through re-doing it to handle things properly, but it's going to take a while longer still\n\nIn the mean time, could you please upload a much smaller example file (eg a few hundred kb) for us to use in a test case?"}, {"count": 3, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "text": "This should now be fixed in svn trunk\n\nHowever, we do still need a smaller file with 4k blocks!", "id": 136402, "time": "2010-04-25T18:28:58Z", "bug_id": 49139, "creation_time": "2010-04-25T18:28:58Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 49139, "attachment_id": 25369, "is_private": false, "id": 136502, "time": "2010-04-28T18:07:19Z", "creator": "michel.boudinot@inaf.cnrs-gif.fr", "creation_time": "2010-04-28T18:07:19Z", "text": "Created attachment 25369\n512 byte block ole document\n\nThis ole document is a Zeiss ZVI Image where the image Content has been removed to reduce file size."}, {"count": 5, "text": "Created attachment 25370\n4K block OLE document\n\nThis ole document is a Zeiss ZVI Image where the image Content has been removed to reduce file size.", "bug_id": 49139, "attachment_id": 25370, "id": 136503, "time": "2010-04-28T18:21:03Z", "creator": "michel.boudinot@inaf.cnrs-gif.fr", "creation_time": "2010-04-28T18:21:03Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 49139, "is_private": false, "text": "(In reply to comment #3)\n> This should now be fixed in svn trunk\n> \n> However, we do still need a smaller file with 4k blocks!\n\nsorry to be late, I was on leave for a week.\nI got svn trunk Checked out revision 939073 and it fails on 512b and 4Kb block ole documents.\nSee results of test with poi-3.6-20091214.jar and poi-3.7-SNAPSHOT-20100428.jar on 512b and 4K block documents.\n\npoi-3.6-20091214.jar                 512_BlockOLE.ole  =>  Ok\npoi-3.6-20091214.jar                   4K_BlockOLE.ole  => Fails\n\njava.io.IOException: Cannot remove block[ 178 ]; out of range[ 0 - 23 ]\n\tat org.apache.poi.poifs.storage.BlockListImpl.remove(BlockListImpl.java:98)\n\tat org.apache.poi.poifs.storage.SmallDocumentBlockList.remove(SmallDocumentBlockList.java:30)\n\tat org.apache.poi.poifs.storage.BlockAllocationTableReader.fetchBlocks(BlockAllocationTableReader.java:191)\n\tat org.apache.poi.poifs.storage.BlockListImpl.fetchBlocks(BlockListImpl.java:123)\n\tat org.apache.poi.poifs.storage.SmallDocumentBlockList.fetchBlocks(SmallDocumentBlockList.java:30)\n\tat org.apache.poi.poifs.filesystem.POIFSFileSystem.processProperties(POIFSFileSystem.java:534)\n\tat org.apache.poi.poifs.filesystem.POIFSFileSystem.<init>(POIFSFileSystem.java:176)\n\tat POIFSDmp.zviDocumentParse(POIFSDmp.java:101)\n       ...\n\npoi-3.7-SNAPSHOT-20100428.jar    512_BlockOLE.ole  =>   Fails\n\njava.lang.NullPointerException\n\tat POIFSDmp.dumpRootThumbnail(POIFSDmp.java:264)\n\tat POIFSDmp.directoryParse(POIFSDmp.java:152)\n\tat POIFSDmp.zviDocumentParse(POIFSDmp.java:105)\n       ...\n\n\npoi-3.7-SNAPSHOT-20100428.jar    4K_BlockOLE.ole   =>   Fails\n\njava.lang.ArrayIndexOutOfBoundsException: 16\n\tat org.apache.poi.poifs.storage.DocumentBlock.getDataInputBlock(DocumentBlock.java:170)\n\tat org.apache.poi.poifs.filesystem.POIFSDocument.getDataInputBlock(POIFSDocument.java:284)\n\tat org.apache.poi.poifs.filesystem.DocumentInputStream.getDataInputBlock(DocumentInputStream.java:117)\n\tat org.apache.poi.poifs.filesystem.DocumentInputStream.readFully(DocumentInputStream.java:255)\n\tat org.apache.poi.poifs.filesystem.DocumentInputStream.read(DocumentInputStream.java:152)\n\tat org.apache.poi.poifs.filesystem.DocumentInputStream.read(DocumentInputStream.java:134)\n\tat POIFSDmp.directoryParse(POIFSDmp.java:126)\n\tat POIFSDmp.zviDocumentParse(POIFSDmp.java:105)\n       ...\n\n\n----Code-----\n               ...\n100\t\tPOIFSFileSystem fs = null;\n101   \tfs = new POIFSFileSystem(stream);\n102\t\tDirectoryEntry dir = fs.getRoot();\n103\t\t// dir is an instance of DirectoryEntry ...\n104\n105\t\tdirectoryParse(0, dir);\n106\t}\n107\t\t\n\n108\tprivate static void directoryParse(int n , DirectoryEntry dir) throws java.io.IOException {\n109\t\tString dirName = dir.getName();\n110\t\tfor (Iterator iter = dir.getEntries(); iter.hasNext(); ) {\n111\t\t\tEntry entry = (Entry) iter.next();\n112\t\t\tif (entry instanceof DirectoryEntry) {\n113\t\t\t// .. recurse into this directory\n114\t\t\t\tdirName = entry.getName();\n115\t\t\t\tdirectoryParse( n++, (DirectoryEntry) entry);\n116\t\t\t}\n117   \t\telse if (entry instanceof DocumentEntry) {\n118        \t// entry is a document, which you can read\n119\t\t\t\tString docName = entry.getName();\n120\t\t\t\tString path = getPath(entry);\n121\t\t\t\tif (DEBUG) System.out.print(path);\n122\t\t\t\tDocumentInputStream dis = new DocumentInputStream((DocumentNode) entry);\n123\t\t\t\tint numBytes = dis.available();\n124\t\t\t\tif (DEBUG) System.out.println (\"(\"+numBytes+\")\");\n125\t\t\t\tbyte[] data = new byte [numBytes];\n126\t\t\t\tdis.read(data);\n\n--------------\n\nThe corresponding ole test files 512_BlockOLE.ole, 4K_BlockOLE.ole.zip are attached, 4K_BlockOLE.ole.zip should be unzipped.", "id": 136504, "time": "2010-04-28T18:29:19Z", "creator": "michel.boudinot@inaf.cnrs-gif.fr", "creation_time": "2010-04-28T18:29:19Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 136604, "time": "2010-05-03T13:20:21Z", "bug_id": 49139, "creation_time": "2010-05-03T13:20:21Z", "is_private": false, "text": "Thanks for the files. I've committed them to svn along with a unit test\n\nNot sure why you're getting the errors you are though - I've just tried with org.apache.poi.poifs.dev.POIFSViewer and it can load both files without error, and display the raw byte contents fine\n\nI'd suggest a full clean of your build and re-try. Please re-open the bug however if the problem remains, and upload a failing unit test for us to work against"}, {"count": 8, "tags": [], "creator": "michel.boudinot@inaf.cnrs-gif.fr", "attachment_id": null, "text": "(In reply to comment #7)\n> Thanks for the files. I've committed them to svn along with a unit test\n> \n> Not sure why you're getting the errors you are though - I've just tried with\n> org.apache.poi.poifs.dev.POIFSViewer and it can load both files without error,\n> and display the raw byte contents fine\n> \n> I'd suggest a full clean of your build and re-try. Please re-open the bug\n> however if the problem remains, and upload a failing unit test for us to work\n> against\n\nI am affraid the problem remains, I am attaching a test case with corresponding test files.\nThe bug appears in two parts. The first issue is new  after your fix, it was not there with previous poi versions. The second issue is relative to the 4k ole block size.\n\nThanks.", "id": 136610, "time": "2010-05-03T16:13:07Z", "bug_id": 49139, "creation_time": "2010-05-03T16:13:07Z", "is_private": false}, {"count": 9, "tags": [], "creator": "michel.boudinot@inaf.cnrs-gif.fr", "attachment_id": 25392, "text": "Created attachment 25392\nTest case (code + data files)\n\nTest case has been run using poi-3.7-SNAPSHOT-20100503.jar, too big to be attached :-(", "id": 136611, "time": "2010-05-03T16:19:42Z", "bug_id": 49139, "creation_time": "2010-05-03T16:19:42Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 49139, "attachment_id": null, "is_private": false, "id": 136613, "time": "2010-05-03T18:00:10Z", "creator": "apache@gagravarr.org", "creation_time": "2010-05-03T18:00:10Z", "text": "Thanks for the testcase. I've been able to reproduce the bug\n\nAlas it looks like it's going to take some digging to find out why it's breaking as it is though...\n\nFailing test case is committed to svn in src/testcases/org/apache/poi/poifs/filesystem/TestPOIFSFileSystem.java (but disabled) if anyone else fancies taking a look first!"}, {"count": 11, "tags": [], "creator": "michel.boudinot@inaf.cnrs-gif.fr", "attachment_id": null, "text": "(In reply to comment #10)\n> Thanks for the testcase. I've been able to reproduce the bug\n> \n> Alas it looks like it's going to take some digging to find out why it's\n> breaking as it is though...\n> \n> Failing test case is committed to svn in\n> src/testcases/org/apache/poi/poifs/filesystem/TestPOIFSFileSystem.java (but\n> disabled) if anyone else fancies taking a look first!\n\nI looked into the first issue of the bug and it appears that it's in fact a bug in my code triggered by the modifications you've done to fix the 4k block issue.\n\n- To display Thumbnail, my code access a metadata hash without testing if it's available. For some raison it's available when using previous poi library and no yet available when using the latest library. It looks like you've changed the order you're accessing OLE streams.\n\n- The second issue is the only concern that remains.\n\nThanks and sorry for the trouble caused by the false first issue.", "id": 136621, "time": "2010-05-04T07:37:41Z", "bug_id": 49139, "creation_time": "2010-05-04T07:37:41Z", "is_private": false}, {"count": 12, "text": "DocumentBlock has 512 hard coded in it too, but slightly more subtly (contained 2^9, rather than the literal 512)\n\nFixed (r941334) to use the correct big block size, and now your 4k file can be loaded fine in your viewer.\n\nOn a different note, please do consider submitting at least some of your viewer as a ZVI metadata text extractor!", "bug_id": 49139, "attachment_id": null, "id": 136654, "time": "2010-05-05T11:10:57Z", "creator": "apache@gagravarr.org", "creation_time": "2010-05-05T11:10:57Z", "tags": [], "is_private": false}]