[{"count": 0, "attachment_id": null, "creator": "markt@apache.org", "text": "Currently Tomcat sends the 100 continue response just before the request is passed to the application for processing. This denies the application the opporutnity to reject the request early based on the request line and/or headers. Dealying the 100 continue response until the application attempts to read the requets body should address this.", "id": 181493, "time": "2015-03-04T11:14:02Z", "bug_id": 57661, "creation_time": "2015-03-04T11:14:02Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "tobias.oberlies@sap.com", "attachment_id": null, "id": 190497, "time": "2016-04-23T13:34:27Z", "bug_id": 57661, "creation_time": "2016-04-23T13:34:27Z", "is_private": false, "text": "It is unfortunate that Tomcat unconditionally send 100 CONTINUE acknowledgements. (In Tomcat 7 this is triggered by the StandardContextValve.)\n\nThe \"Expect: 100-continue\" is important for clients that want to send a large POST request but are unable to read the response before they have sent the complete request body (e.g. the Apache httpclient). These clients could send only headers plus the \"Expect: 100-continue\" and would then see an error response (e.g. 403). With the current behaviour of Tomcat however, they are asked to send the entity, the server application responds with an error, but the client doesn't see it (assuming the request entity is larger than the swallow size, i.e. approx. 2 MB). Instead the client only sees an exception (\"connection reset\")."}, {"count": 2, "attachment_id": null, "creator": "tobias.oberlies@sap.com", "is_private": false, "id": 190498, "time": "2016-04-23T13:35:09Z", "bug_id": 57661, "creation_time": "2016-04-23T13:35:09Z", "tags": [], "text": "It is unfortunate that Tomcat unconditionally send 100 CONTINUE acknowledgements. (In Tomcat 7 this is triggered by the StandardContextValve.)\n\nThe \"Expect: 100-continue\" is important for clients that want to send a large POST request but are unable to read the response before they have sent the complete request body (e.g. the Apache httpclient). These clients could send only headers plus the \"Expect: 100-continue\" and would then see an error response (e.g. 403). With the current behaviour of Tomcat however, they are asked to send the entity, the server application responds with an error, but the client doesn't see it (assuming the request entity is larger than the swallow size, i.e. approx. 2 MB). Instead the client only sees an exception (\"connection reset\")."}, {"count": 3, "tags": [], "text": "Sorry for the redundant comments.\n\nI have an addition to my analysis in comment #1:\n> ... (e.g. the Apache httpclient). These clients could\n> send only headers plus the \"Expect: 100-continue\" and would then see an\n> error response (e.g. 403)\n\nWith this enhancement implemented, there would be benefit, but it would be limited. The benefit would be that the client sees the response instead of an exception.\n\nWhat we wouldn't get with the Apache 4.x httpclient is that the connection can be reused for the next request. The problem is that because the httpclient doesn't send the last chunk of the (to be discarded) entity after seeing a final response to its \"Expect: 100-continue\" request. This forces the server to close the connection. Apparently, this was only fixed in the 5.x httpclient [1]\n\n[1] https://issues.apache.org/jira/browse/HTTPCORE-411", "attachment_id": null, "bug_id": 57661, "id": 190499, "time": "2016-04-23T14:04:54Z", "creator": "tobias.oberlies@sap.com", "creation_time": "2016-04-23T14:04:54Z", "is_private": false}, {"count": 4, "tags": [], "creator": "1983-01-06@gmx.net", "attachment_id": null, "id": 190507, "time": "2016-04-24T11:21:07Z", "bug_id": 57661, "creation_time": "2016-04-24T11:21:07Z", "is_private": false, "text": "To add some additional information based on my findings in Tomcat 6.0.45:\nAs already described by Mark, Tomcat sends the negative reponse before a client has completely uploaded his request body. I believe that this implementation is fully RFC compliant and reasonable one. Consider uploading hundreds of megabytes and then wait for the denial? What a waste.\n\nI was searching for a bug in Firefox and Tomcat and discovered that Firefox is faulty too. curl perfectly handles the premature end of transfer. I have documented my findings with Tomcat and the expect continue with Firefox here: https://bugzilla.mozilla.org/show_bug.cgi?id=751552#c14. Similar issues: https://bugzilla.mozilla.org/show_bug.cgi?id=914088, https://bugzilla.mozilla.org/show_bug.cgi?id=729496"}]