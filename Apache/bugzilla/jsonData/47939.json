[{"count": 0, "tags": [], "bug_id": 47939, "attachment_id": 24342, "is_private": false, "id": 130882, "time": "2009-10-04T20:33:38Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2009-10-04T20:33:38Z", "text": "Created attachment 24342\nWAR that reproduces the issue\n\nI was using the attached web application to test recent VirtualWebappLoader\npatch.\n\nIt uses VirtualWebappLoader to add jstl.jar and standard.jar from Tomcat\nexamples webapp. Its only page, choose.jsp, is copied from our examples and\nuses several JSTL tags.\n\nThis web application works in the current TC 6.0.x, but not in trunk,\ncomplaining that \"The absolute uri: {..} cannot be resolved\".\n\nIt starts working in trunk if I explicitly bundle a copy of c.tld with it and\nreference it in web.xml. Thus it is an issue with TLD scanning, not with class\nloading."}, {"attachment_id": null, "tags": [], "bug_id": 47939, "text": "This is caused by trying to reference JARs located in a WEB-INF/lib directory. The TLD scanning deliberately skips URLs that end /WEB-INF/lib/XXX.jar on the classpath to avoid re-scanning JARs it has already scanned.\n\nThe URLs returned from the WEB-INF/lib scan and the classpath scan are sufficiently different that I can't see a guaranteed way of determining if the WEB-INF/lib in question belongs to the current web app or not, especially when custom DirContext implementations and/or DirContext aliases are used.\n\nThe workaround is not to put the JARs in a directory structure that ends /WEB-INF/lib/. On the basis that the workaround is a reasonable one and that I can't see a viable way to fix this, I am marking it as WONTFIX.", "count": 1, "id": 132118, "time": "2009-11-18T16:40:34Z", "creator": "markt@apache.org", "creation_time": "2009-11-18T16:40:34Z", "is_private": false}]