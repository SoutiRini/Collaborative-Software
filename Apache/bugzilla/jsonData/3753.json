[{"count": 0, "tags": [], "bug_id": 3753, "text": "The following sample program return true, but should return false.  Perhaps the \nescaped '.' is being interpreted unescaped and matching the 'x' in the str?\n\nSample program\n--------------\nimport org.apache.regexp.*;\n\npublic class Test { \n  public static void main(String arg[]) {\n    try {\n      String pattern = \".*\\\\.\";\n      String str = \".x\";\n      RE re = new RE(pattern);\n      System.out.println(re.match(str));        // should be false\n    } catch(Exception e) {\n      e.printStackTrace();\n    }\n  }\n}", "id": 5838, "time": "2001-09-20T14:07:01Z", "creator": "alexdmiller@yahoo.com", "creation_time": "2001-09-20T14:07:01Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "dfs@apache.org", "attachment_id": null, "text": "match() does not require the entire input to match.  It attempts to match\nsome portion of the input.  The pattern \".*\\\\.\" does in fact match the \".\"\nin \".x\"  If you want the entire input to match, try \"^.*\\\\.$\" as your\npattern.\n", "id": 5843, "time": "2001-09-20T14:37:03Z", "bug_id": 3753, "creation_time": "2001-09-20T14:37:03Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 3753, "text": "closed", "id": 36499, "time": "2003-05-02T01:29:47Z", "creator": "vgritsenko@apache.org", "creation_time": "2003-05-02T01:29:47Z", "is_private": false, "attachment_id": null}]