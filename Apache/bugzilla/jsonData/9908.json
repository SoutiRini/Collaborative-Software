[{"count": 0, "tags": [], "creator": "Extern.Rudolf.Ziegaus@audi.de", "text": "Hi,\n\n\n I am using the most recent nightly build. When I try to create a workbook using\n\n  HSSFWorkbook wb = new HSSFWorkbook(fs);\n\nwhere fs refers to an existing file, I get the following exception:\n\n\"java.lang.reflect.InvocationTargetException: \njava.lang.UnsupportedOperationException: 3c (60)\n\tjava.lang.Throwable(java.lang.String)\n\tjava.lang.Exception(java.lang.String)\n\tjava.lang.RuntimeException(java.lang.String)\n\tjava.lang.UnsupportedOperationException(java.lang.String)\n\torg.apache.poi.hssf.record.formula.Ptg \norg.apache.poi.hssf.record.formula.Ptg.createPtg(byte [], int)\n\tjava.util.Stack \norg.apache.poi.hssf.record.NameRecord.getParsedExpressionTokens(byte [], short, \nint, int)\n\tvoid org.apache.poi.hssf.record.NameRecord.fillFields(byte [], short, \nint)\n\tvoid org.apache.poi.hssf.record.Record.fillFields(byte [], short)\n\torg.apache.poi.hssf.record.Record(short, short, byte [])\n\torg.apache.poi.hssf.record.NameRecord(short, short, byte [])\n\tjava.lang.Object java.lang.reflect.Constructor.newInstance\n(java.lang.Object [])\n\torg.apache.poi.hssf.record.Record [] \norg.apache.poi.hssf.record.RecordFactory.createRecord(short, short, byte [])\n\tjava.util.List org.apache.poi.hssf.record.RecordFactory.createRecords\n(java.io.InputStream)\n\torg.apache.poi.hssf.usermodel.HSSFWorkbook\n(org.apache.poi.poifs.filesystem.POIFSFileSystem)\n\tvoid de.rz.demos.poi.ExcelReaderTest.main(java.lang.String [])\n\"", "id": 17897, "time": "2002-06-17T06:27:24Z", "bug_id": 9908, "creation_time": "2002-06-17T06:27:24Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "Extern.Rudolf.Ziegaus@audi.de", "is_private": false, "count": 1, "id": 17898, "time": "2002-06-17T06:30:05Z", "bug_id": 9908, "creation_time": "2002-06-17T06:30:05Z", "text": "Sorry, I forgot to mention that I am using the latest nightly build from \nversion 1.6.0.\n\n\nRudi"}, {"count": 2, "tags": [], "creator": "avik@apache.org", "text": "Thanks, the stack trace is all i needed. Why oh why doesnt netbeans have a \"Find\nUse\" button?? :)\nWill fix in a couple of hours. ", "id": 17906, "time": "2002-06-17T09:26:32Z", "bug_id": 9908, "creation_time": "2002-06-17T09:26:32Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 9908, "is_private": false, "count": 3, "id": 17925, "time": "2002-06-17T17:26:25Z", "creator": "avik@apache.org", "creation_time": "2002-06-17T17:26:25Z", "text": "Fixed. Namerecord is now resilient against unknown ptgs. Will write back exactly\nwhat is read, unless record changed from usermodel, in which case new (correct)\nrec ord will be written back. getReference on namerecord will yeild \"#REF!\" in\nthese cases. The Ptgs that are missing as far as namerecord is concerned is\nprimarily the  error ptgs (RefErr, AreaErr, RefErr3d and AreaError3d). While we\nwill add these ptgs later, we are still pretty much functionally complete at the\nmoment. \n\nRudolf, will you please cross check with you sheet? thanks. (get CVS HEAD,  or\nget a new nightly tomorrow)\n\nEven better, if it is possible for you to send us the sheet causing the error,\nwe can add it to our unit tests. "}, {"count": 4, "tags": [], "creator": "Extern.Rudolf.Ziegaus@audi.de", "text": "Created attachment 2112\nZIP-file containing trouble-causing spreadsheet", "id": 17956, "time": "2002-06-18T06:35:17Z", "bug_id": 9908, "creation_time": "2002-06-18T06:35:17Z", "is_private": false, "attachment_id": 2112}, {"attachment_id": null, "tags": [], "creator": "Extern.Rudolf.Ziegaus@audi.de", "text": "The problem has gone away with yesterday's nightly build, so the error seems to \nbe fixed. However, I do not get any rows out of my spreadsheet. It says, it has \n0 rows in it. Shall I open a new bug for this problem?", "count": 5, "id": 17957, "time": "2002-06-18T06:38:05Z", "bug_id": 9908, "creation_time": "2002-06-18T06:38:05Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 9908, "attachment_id": null, "text": "Well, your sheet seems to have lots of relational operations which we dont\nsupport at the moment. However, the idea is that POI gives you all the other\nstuff as it is, irrespective of what it cant understand. So this would be a bug.\nHold on for a moment, let me check. ", "id": 17959, "time": "2002-06-18T06:51:23Z", "creator": "avik@apache.org", "creation_time": "2002-06-18T06:51:23Z", "is_private": false}, {"count": 7, "tags": [], "creator": "avik@apache.org", "attachment_id": null, "text": "I can successfully run you file through formula viewer. So the problem must be\nelsewhere. investigating. ", "id": 17963, "time": "2002-06-18T07:47:29Z", "bug_id": 9908, "creation_time": "2002-06-18T07:47:29Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 9908, "is_private": false, "count": 8, "id": 18001, "time": "2002-06-18T18:17:37Z", "creator": "avik@apache.org", "creation_time": "2002-06-18T18:17:37Z", "text": "your formula has some kind of hidden sheet which is what you get at\nwb.getSheetAt(0). try wb.getSheetAt with 1,2,or 3 which will give you rows 88,48\nand 44 respectively. "}, {"count": 9, "tags": [], "creator": "Extern.Rudolf.Ziegaus@audi.de", "attachment_id": null, "is_private": false, "id": 18037, "time": "2002-06-19T09:32:45Z", "bug_id": 9908, "creation_time": "2002-06-19T09:32:45Z", "text": "I have tried as suggested (reading sheets 1, 2 or 3) but end with a range check \nexception from ArrayList, since the workbook has only one sheet listed (the \nsize property equals 1).\n\nDid you write any code to show my sheets or did you use another tool? \n\nPlease verify again.\n\n"}, {"count": 10, "tags": [], "creator": "avik@apache.org", "attachment_id": null, "is_private": false, "id": 18040, "time": "2002-06-19T09:55:18Z", "bug_id": 9908, "creation_time": "2002-06-19T09:55:18Z", "text": "The follwoing test passes with the file you have attached above!\n\n  public void testReadComplicated()\n        throws java.io.IOException\n    {\n        String filename = System.getProperty(\"HSSF.testdata.path\");\n\n        filename = filename + \"/Ziegaus.xls\";\n        java.io.FileInputStream stream   = new java.io.FileInputStream(filename);\n        org.apache.poi.poifs.filesystem.POIFSFileSystem fs       = new\norg.apache.poi.poifs.filesystem.POIFSFileSystem(stream);\n        HSSFWorkbook    workbook = new HSSFWorkbook(fs);\n        HSSFSheet       sheet    = workbook.getSheetAt(1);\n\n        assertTrue(\"sheet has more than one row\",sheet.getLastRowNum()>0);\n        sheet = workbook.getSheetAt(2);\n        assertTrue(\"sheet has more than one row\",sheet.getLastRowNum()>0);\n        sheet = workbook.getSheetAt(3);\n        assertTrue(\"sheet has more than one row\",sheet.getLastRowNum()>0);\n        stream.close();\n    }\n\nPlease remember that excel can apply strange optimisations each time you save\nthe file (unlike poi, its not consistent :) so ensure that you are testing with\nexactly the same file. "}, {"attachment_id": null, "tags": [], "creator": "avik@apache.org", "text": "Forgot to add, the test FAILS if i do \n\nsheet = workbook.getSheetAt(0);\nassertTrue(\"sheet has more than one row\",sheet.getLastRowNum()>0);", "count": 11, "id": 18041, "time": "2002-06-19T10:02:16Z", "bug_id": 9908, "creation_time": "2002-06-19T10:02:16Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 9908, "is_private": false, "text": "Hm, very strange. What version do you use for your test? My testing code is \nvery similiar to yours, I just do not use assert statements.\n\nI used the latest nightly build and still get this problem, that I have only \none sheet. If I try to access sheet 1 (getSheetAt(1)), I get an exception.\nI verified that the file is in fact identically with the one I sent to you. I \ndid not touch the file with Excel since June, 3rd.\n\nCan I check which version I do effectively use? Is there an internal version \nnumber?\n\nRudi\n\n\nPS: My test code is as follows:\n\n  POIFSFileSystem fs = new POIFSFileSystem(new FileInputStream\n(\"d:/workbook.xls\"));\n  HSSFWorkbook wb = new HSSFWorkbook(fs);\n  HSSFSheet sheet = wb.getSheetAt(1);  // here I get an exception, because only \none sheet is found\n  HSSFRow row = sheet.getRow(0);\n  HSSFCell cell = row.getCell((short) 0);\n\n", "id": 18043, "time": "2002-06-19T10:19:04Z", "creator": "Extern.Rudolf.Ziegaus@audi.de", "creation_time": "2002-06-19T10:19:04Z", "attachment_id": null}, {"count": 13, "tags": [], "creator": "avik@apache.org", "attachment_id": null, "id": 18097, "time": "2002-06-19T18:06:06Z", "bug_id": 9908, "creation_time": "2002-06-19T18:06:06Z", "is_private": false, "text": "hmm.. very strange indeed. You must be using the the correct version, because my\nlast commit fixed the exception on reading files with name records (the orig\nbug). So we are using the same versions.  All i can think of (apart from a\ngremlin :-) is that the file you have attached here is not the same as the one\nyou are using. The sheet u have attached here is called Ziegus.xls , and shows\nthree sheets called Zeiterfassung , Beispiel , HILFESTELLUNG. \n\nCan u try debugging thru the HSSFWorkbook object. "}, {"count": 14, "tags": [], "creator": "Extern.Rudolf.Ziegaus@audi.de", "attachment_id": null, "is_private": false, "id": 18122, "time": "2002-06-20T07:06:09Z", "bug_id": 9908, "creation_time": "2002-06-20T07:06:09Z", "text": "Sorry, I found a problem in my code. During all the tests I ran, I switched to \nanother file. Unfortunately I did not throw out the \"ziegaus.xls\", but only \nmade a comment to eliminate it. \n\nSo I did not realize that I was in fact using a COMPLETELY WRONG file.\n\nSorry for the inconvenience I made and thanks a lot for the bug you fixed.\n\nRudi"}, {"count": 15, "tags": [], "creator": "avik@apache.org", "attachment_id": null, "id": 18154, "time": "2002-06-20T09:43:20Z", "bug_id": 9908, "creation_time": "2002-06-20T09:43:20Z", "is_private": false, "text": "Thanks. closing. "}]