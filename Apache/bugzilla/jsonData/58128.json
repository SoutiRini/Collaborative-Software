[{"count": 0, "tags": [], "creator": "guido.leenders@invantive.com", "attachment_id": null, "is_private": false, "id": 183999, "time": "2015-07-12T11:19:42Z", "bug_id": 58128, "creation_time": "2015-07-12T11:19:42Z", "text": "Also see http://stackoverflow.com/questions/12979503/how-to-escape-in-ant-scp-task which describes a similar issue and solution. The problem has been checked also to be in Scp.java revision 1342897.\n\nThe Ant SCP task allows copying files using sftp or scp protocol. The parameters for the connection are intermixed with the file specifications, such as:\n\n...of the form user[:password]@host:/directory/path. ...\n\nHowever, more and more companies are using logon codes such as \"john.doe@escrow.nl\". The merits of that are to be discussed by historicians; the presence is a fact of life.\n\nWith command line Unix sftp, these user names are recognized correctly:\n\n$ sftp john.doe@escrow.nl@escrow.nl\nConnecting to escrow.nl...\njohn.doe@escrow.nl@escrow.nl's password:\nsftp>\n\nHowever, the SCP task can not handle it:\n\nBUILD FAILED\n...build.xml:3383: com.jcraft.jsch.JSchException: java.net.UnknownHostException: escrow.nl@escrow.nl\n        at com.jcraft.jsch.Util.createSocket(Util.java:258)\n        at com.jcraft.jsch.Session.connect(Session.java:186)\n        at com.jcraft.jsch.Session.connect(Session.java:145)\n        at org.apache.tools.ant.taskdefs.optional.ssh.SSHBase.openSession(SSHBase.java:223)\n        at org.apache.tools.ant.taskdefs.optional.ssh.Scp.upload(Scp.java:299)\n\n...\n\nThe parsing of the parameter such as:\n\n<scp sftp=\"true\" port=\"xxx\" todir=\"john.doe@escrow.nl@escrow.nl:/test\" password=\"xxx\" trust=\"true\" >\n\nleads to a host name escrow.nl@escrow.nl, since the first at-sign is used as a splitter.\n\nProblems get even worse, because it is nowadays also not uncustomary that a path contains an at-sign. \n\nA solution with using `uri.lastIndexOf('@')` instead of `uri.indexOf('@')` will probably not be a lasting problem, since filesystems and usernames are getting more flexible. Although it is a bad habit to use @ or :, it might work on some filesystems. The cause of the actual problem is that one parameter is used to provide multiple values (in relational theory: not well normalized).\n\nWorkaround for this scenario is to abandon use of the scp task and use the commandline variant instead which again introduces other possible problems.\n\nSuggested correction is therefore to add two optional parameters: host (optional), user (optional). Similar to the already existing parameter 'password' which is also available through the syntax for a filename, it allows a user to specify a specific host and/or user. Whenever the parameter is provided, the algorithm for chopping up the filename specification knows that it does not have to expect a host and/or user in the filename specification, so a possible @ or : must be part of the path."}, {"count": 1, "tags": [], "bug_id": 58128, "text": "I think that it should be noted...  sshexec works perfectly fine with an @ character as part of the username attribute.", "id": 185745, "time": "2015-10-13T20:25:07Z", "creator": "walter.kacynski@gmail.com", "creation_time": "2015-10-13T20:25:07Z", "is_private": false, "attachment_id": null}]