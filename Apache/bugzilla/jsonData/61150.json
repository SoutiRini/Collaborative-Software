[{"count": 0, "attachment_id": null, "bug_id": 61150, "text": "To reproduce:\n\n1) Configure tomcat user for testing (conf/tomcat-users.xml):\n\n    <user username=\"tomcat\" password=\"tomcat\" roles=\"admin-gui,manager-gui\"/>\n\n2) Start Tomcat\n\n    bin/catalina.sh start\n\n3) Create a session\n\n    $ curl -is http://tomcat:tomcat@localhost:8080/manager/html | egrep '(HTTP|JSESSIONID)'\n    HTTP/1.1 200 OK\n    Set-Cookie: JSESSIONID=DAF81E606AED325CB2E5C2773DB866CE; Path=/manager; HttpOnly\n\n4) Stop Tomcat so that the session are serialized\n\n    bin/catalina.sh stop\n\n5) Start Tomcat with Security Manager to deserialize the sessions\n\n    bin/catalina.sh start -security\n\n6) Check log for exception after startup:\n\n02-Jun-2017 14:16:46.114 SEVERE [localhost-startStop-1] org.apache.catalina.session.StandardManager.startInternal Exception loading sessions from persistent storage\n java.io.InvalidClassException: The class [org.apache.catalina.filters.CsrfPreventionFilter$LruCache] did not match the regular expression [java\\.lang\\.(?:Boolean|Integer|Long|Number|String)] for classes allowed to be deserialized\n    at org.apache.catalina.util.CustomObjectInputStream.resolveClass(CustomObjectInputStream.java:146)\n    at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1612)\n    at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1517)\n    at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1771)\n    at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350)\n    at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)\n    at org.apache.catalina.session.StandardSession.doReadObject(StandardSession.java:1624)\n    at org.apache.catalina.session.StandardSession.readObjectData(StandardSession.java:1090)\n    at org.apache.catalina.session.StandardManager.doLoad(StandardManager.java:218)\n    at org.apache.catalina.session.StandardManager$PrivilegedDoLoad.run(StandardManager.java:74)\n    at org.apache.catalina.session.StandardManager$PrivilegedDoLoad.run(StandardManager.java:65)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at org.apache.catalina.session.StandardManager.load(StandardManager.java:149)\n    at org.apache.catalina.session.StandardManager.startInternal(StandardManager.java:356)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:145)\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5331)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:145)\n    at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:753)\n    at org.apache.catalina.core.ContainerBase.access$000(ContainerBase.java:131)\n    at org.apache.catalina.core.ContainerBase$PrivilegedAddChild.run(ContainerBase.java:153)\n    at org.apache.catalina.core.ContainerBase$PrivilegedAddChild.run(ContainerBase.java:143)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:727)\n    at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)\n    at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:587)\n    at org.apache.catalina.startup.HostConfig$DeployDescriptor.run(HostConfig.java:1798)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)", "id": 199036, "time": "2017-06-02T18:50:40Z", "creator": "csutherl@apache.org", "creation_time": "2017-06-02T18:50:40Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "Switching from no security manager to using a security manager makes this worse (stack trace). If a security manager is in use on shutdown then a warning is logged.\n\nI've fixed this by configuring the web applications to permit the (de-)serialization of the CSRFPreventionFilter related attributes.\n\nFixed in:\n- trunk for 9.0.0.M22 onwards\n- 8.5.x for 8.5.16 onwards\n- 8.0.x for 8.0.45 onwards\n- 7.0.x for 7.0.79 onwards", "id": 199148, "attachment_id": null, "bug_id": 61150, "creation_time": "2017-06-11T17:05:03Z", "time": "2017-06-11T17:05:03Z", "is_private": false}]