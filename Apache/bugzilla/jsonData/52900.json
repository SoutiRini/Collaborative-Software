[{"count": 0, "tags": [], "bug_id": 52900, "text": "Hi!\n\nPreface: this seems to be a bug in the GCC compiler/optimizer, but it could easily be solved by changing the Apache 2.4 source code, so you may want to consider to integrate it. Also the workaround I found may help others, therfore I'm posting it here.\n\nThe compilation of Apache 2.4.1 on Solaris 10 SPARC with GCC 4.6.3 and 64 bit mode fails with an assembler error:\n\n/var/tmp//cc8T9vzx.s: Assembler messages:\n/var/tmp//cc8T9vzx.s:12254: Error: Illegal operands\n\nThe line stated contains\n  fdtox   %f8, %f9\nwhich - as far as some research indicates - is an illegal operation in 64 bit mode with an odd numbered register. Details are available if needed.\n\nAnyway. Some analysis revealed that the root cause is an optimization (?) to use apr_uint16_t in ap_random_pick in core.c. Removing this solves the problem.\n\n--- httpd-2.4.1/server/core.c   2012-02-04 11:04:59.000000000 +0100\n+++ patched_core.c      2012-03-12 15:22:27.075035399 +0100\n@@ -4722,16 +4722,20 @@ AP_DECLARE(void) ap_random_insecure_byte\n AP_DECLARE(apr_uint32_t) ap_random_pick(apr_uint32_t min, apr_uint32_t max)\n {\n     apr_uint32_t number;\n-    if (max < 16384) {\n-        apr_uint16_t num16;\n-        ap_random_insecure_bytes(&num16, sizeof(num16));\n-        RAND_RANGE(num16, min, max, APR_UINT16_MAX);\n-        number = num16;\n-    }\n-    else {\n+/* Workaround for GCC 4.6.x producing illegal assembler code on SPARC\n+ * if (max < 16384) {\n+ *      apr_uint16_t num16;\n+ *      ap_random_insecure_bytes(&num16, sizeof(num16));\n+ *      RAND_RANGE(num16, min, max, APR_UINT16_MAX);\n+ *      number = num16;\n+ *  }\n+ *  else {\n+ */\n         ap_random_insecure_bytes(&number, sizeof(number));\n         RAND_RANGE(number, min, max, APR_UINT32_MAX);\n-    }\n+/*\n+ *  }\n+ */\n     return number;\n }\n\nI don't think this could have any negative side effects, but would appreciate your feedback.\n\nCheers,\nMartin", "id": 154878, "time": "2012-03-13T15:01:46Z", "creator": "martin@knaup.org", "creation_time": "2012-03-13T15:01:46Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 52900, "is_private": false, "count": 1, "id": 166443, "time": "2013-04-06T18:55:37Z", "creator": "kvedulv@kvedulv.de", "creation_time": "2013-04-06T18:55:37Z", "text": "I'm having the same problem on FreeBSD/sparc64.\n\nNetBSD is affected, too:\nhttp://gnats.netbsd.org/cgi-bin/query-pr-single.pl?number=47025"}, {"count": 2, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "id": 166445, "time": "2013-04-07T09:30:51Z", "bug_id": 52900, "creation_time": "2013-04-07T09:30:51Z", "is_private": false, "text": "Has someone tested this with a more recent version of gcc? If it is fixed there, we could add some #ifdef magic to apply the workaround only on older gcc's.\n\nIf it isn't fixed, then a bug should be filed on gcc.\n\nAlways using the 32bit type uses more output from the RNG than necessary. And the RNG is relatively expensive (it uses sha256 internally)."}, {"count": 3, "tags": [], "text": "I tried to reproduce on Solaris 10 Sparc, using the following compilers:\n\ngcc-4.1.2\ngcc-4.5.4\ngcc-4.6.3\ngcc-4.7.1\ngcc-4.7.2\n\nand CFLAGS \"-mcpu=v9 -m64 -O2\" source code was httpd 2.4.4.\n\nUnfortunately in my tests compilation succeeds for gcc-4.1.2, gcc-4.5.4 and gcc-4.6.3. For the two 4.7 versions I get a failure in as:\n\n/usr/ccs/bin/as -V -Qy -s -xarch=v9 -o core.o /var/tmp//cclu5H3f.s\n/usr/ccs/bin/as: SunOS 5.10 118683-08 Patch 07/05/2012\n/usr/ccs/bin/as: \"/var/tmp//cclu5H3f.s\", line 10402: error: invalid (misaligned) register\n\nThe assembler line number varies depending on the exact compilation flags.\n\nWhen using CFLAGS only \"-m64\" there's no problem.\n\n32 Bit compilations always succeed.\n\nHere's an excerpt from the assembler code, error is in line 10402:\n\n10378 .LL1698:\n10379         add     %fp, 2041, %o0\n10380         call    ap_random_insecure_bytes, 0\n10381          mov    2, %o1\n10382         sub     %i1, %i0, %i1\n10383         lduh    [%fp+2041], %g1\n10384         srl     %i1, 0, %i1\n10385         st      %g1, [%fp+2011]\n10386         stx     %i1, [%fp+2023]\n10387         mov     1023, %g1\n10388         ldd     [%fp+2023], %f10\n10389         sllx    %g1, 52, %g1\n10390         fxtod   %f10, %f12\n10391         stx     %g1, [%fp+1999]\n10392         mov     1007, %g1\n10393         ldd     [%fp+1999], %f10\n10394         sllx    %g1, 52, %g1\n10395         faddd   %f12, %f10, %f10\n10396         ld      [%fp+2011], %f8\n10397         stx     %g1, [%fp+1999]\n10398         fitod   %f8, %f8\n10399         ldd     [%fp+1999], %f12\n10400         fmuld   %f8, %f12, %f8\n10401         fmuld   %f10, %f8, %f8\n10402         fdtox   %f8, %f9                    <===========\n10403         st      %f10, [%fp+2011]\n10404         lduw    [%fp+2011], %g1\n10405         add     %g1, %i0, %i0\n10406         sll     %i0, 16, %i0\n10407         srl     %i0, 16, %i0\n10408         return  %i7+8\n10409          srl    %o0, 0, %o0\n10410         .size   ap_random_pick, .-ap_random_pick\n10411         .global core_module\n10412         .section        \".data\"\n10413         .align 8\n10414         .type   core_module, #object\n10415         .size   core_module, 104\n10416 core_module:\n\nThis looks like an old bug that was fixed in gcc 3.x times. Although my Solaris assembler gives another error text, the problematic assembler line is the same as reported by the OP.\n\nStrange that it compiles for me with 4.6 but not with 4.6. Unfortunately we don't know the exact flags used by the OP.\n\nRegards,\n\nRainer", "is_private": false, "id": 166448, "creator": "rainer.jung@kippdata.de", "time": "2013-04-07T20:14:00Z", "bug_id": 52900, "creation_time": "2013-04-07T20:14:00Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 52900, "attachment_id": null, "id": 166449, "time": "2013-04-07T20:35:55Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2013-04-07T20:35:55Z", "is_private": false, "text": "Since there's not a strict relation with the compiler version, maybe it is one of the helper libs, like gmp, which also contains assembler. My gcc 4.7 was build using gmp 5.0.5."}, {"attachment_id": null, "tags": [], "bug_id": 52900, "is_private": false, "count": 5, "id": 166458, "time": "2013-04-08T10:34:29Z", "creator": "martin@knaup.org", "creation_time": "2013-04-08T10:34:29Z", "text": "> and CFLAGS \"-mcpu=v9 -m64 -O2\" source code was httpd 2.4.4.\nMy CFLAGS were\n\"-m64 -O3 -mcpu=niagara -pthreads -fexceptions -fstack-protector --param=ssp-buffer-size=4\"\n\nThe build succeeds if I omit the optimization flag, which matches Rainer's findings. If I remember correctly the optimization level does not matter, even with O1 the error occurs.\n\nMaybe even the bintuils version matters, so maybe we should post these versions as well. I'm currently running a test with gcc 4.7.2, GMP 5.1.1 and binutils 2.23.1 and will post the result. Trying gcc 4.8.0 will take a day or two more.\n\nCheers,\n\nMartin"}, {"count": 6, "tags": [], "text": "> I'm currently running a test with gcc 4.7.2, GMP 5.1.1 and\n> binutils 2.23.1 and will post the result.\n/var/tmp//ccMYi3X2.s: Assembler messages:\n/var/tmp//ccMYi3X2.s:12710: Error: Illegal operands\n\nBug still there.\n\nCheers,\n\nMartin", "is_private": false, "bug_id": 52900, "id": 166467, "time": "2013-04-08T12:18:11Z", "creator": "martin@knaup.org", "creation_time": "2013-04-08T12:18:11Z", "attachment_id": null}, {"attachment_id": 30163, "tags": [], "bug_id": 52900, "is_private": false, "count": 7, "id": 166478, "time": "2013-04-08T19:45:10Z", "creator": "sf@sfritsch.de", "creation_time": "2013-04-08T19:45:10Z", "text": "Created attachment 30163\nadd workaround on sparc/64\n\nWe could disable the if block on gcc/sparc/64bit explicitly. This patch should do that.\n\nBut it would still be good if someone with a sparc machine would also file a bug report with gcc and add its URL here."}, {"count": 8, "tags": [], "creator": "rainer.jung@kippdata.de", "text": "Created attachment 30164\nMinimal test case\n\nMinimal test case showing gcc bug.\nCompilation on Sparc with gcc 4.7 (for some builds also 4.6) fails for -m64 when any optimization is enabled.", "id": 166482, "time": "2013-04-09T07:59:37Z", "bug_id": 52900, "creation_time": "2013-04-09T07:59:37Z", "is_private": false, "attachment_id": 30164}, {"count": 9, "tags": [], "bug_id": 52900, "text": "Created attachment 30165\nSlightly bigger test case, showing errors even with O1 on Sparc 64 Bits.", "id": 166483, "time": "2013-04-09T08:08:48Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2013-04-09T08:08:48Z", "is_private": false, "attachment_id": 30165}, {"count": 10, "tags": [], "bug_id": 52900, "text": "The minimal test case and the slightly larger one fail with -O2 when compiling for 64 Bits on Sparc with recent GCC (4.7.1 and 4.7.2 for me, *not* 4.6.3 for me, but likely also 4.6.3 for the OP, maybe due to the version of GMP, MPC or MPFR used?).\n\nError is\n\nerror: invalid (misaligned) register\n\ndue to the line\n\nfdtox   %f8, %f9\n\nIt seems the second register must have an even number.\n\nThe slightly bigger test case also fails for O1 and for simple -O with a different error:\n\ntest.c: In function 'buggy':\ntest.c:13:1: error: insn does not satisfy its constraints:\n(insn 126 42 43 3 (set (reg:HI 40 %f8 [orig:120 D.1367 ] [120])\n        (reg:HI 42 %f10)) test.c:6 58 {*movhi_insn}\n     (nil))\ntest.c:13:1: internal compiler error: in reload_cse_simplify_operands, at postreload.c:403\nPlease submit a full bug report,\nwith preprocessed source if appropriate.\nSee <http://gcc.gnu.org/bugs.html> for instructions.\n\nThis minimal test case does not fail with \"-O1\" or \"-O\", probably because of another register allocation strategy due to the missing second code path.\n\nI'll open a GCC bug report.", "id": 166484, "time": "2013-04-09T08:17:42Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2013-04-09T08:17:42Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "rainer.jung@kippdata.de", "text": "Filed GCC bug:\n\nhttp://gcc.gnu.org/bugzilla/show_bug.cgi?id=56890", "id": 166485, "time": "2013-04-09T08:41:55Z", "bug_id": 52900, "creation_time": "2013-04-09T08:41:55Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 52900, "is_private": false, "count": 12, "id": 166511, "time": "2013-04-10T10:00:07Z", "creator": "martin@knaup.org", "creation_time": "2013-04-10T10:00:07Z", "text": "(In reply to comment #5)\n> Trying gcc 4.8.0 will take a day or two more.\nCompilation of 2.4.4 with gcc 4.8.0 and CFLAGS including \"-m64 -O3 -mcpu=niagara\" works without any patch.\n\nCheers,\n\nMartin"}, {"count": 13, "tags": [], "creator": "rainer.jung@kippdata.de", "text": "Could you please try gcc 4.8.0 with my two very simple to compile test cases, once with only \"-m64 -O\" and once with \"-m64 -O2\" so that we get comparable results? I will then rpeort back to the gcc bug.\n\nThanks!", "id": 166518, "time": "2013-04-10T17:27:01Z", "bug_id": 52900, "creation_time": "2013-04-10T17:27:01Z", "is_private": false, "attachment_id": null}, {"count": 14, "tags": [], "creator": "martin@knaup.org", "text": "(In reply to comment #13)\n> Could you please try gcc 4.8.0 with my two very simple to compile test\n> cases, once with only \"-m64 -O\" and once with \"-m64 -O2\" so that we get\n> comparable results? I will then rpeort back to the gcc bug.\nDone. Added a tarball to the gcc bug.\nBottom line: gcc 4.8.0 compiles the source fine, most likely any older version would need a workaround if CFLAGS include -m64 and -Ox (x>=1) .\n\nCheers,\n\nMartin", "id": 166527, "time": "2013-04-11T09:26:10Z", "bug_id": 52900, "creation_time": "2013-04-11T09:26:10Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 166595, "time": "2013-04-14T09:05:10Z", "bug_id": 52900, "creation_time": "2013-04-14T09:05:10Z", "is_private": false, "text": "I have not yet checked httpd compilation, but I can confirm, that the test cases compile fine with GCC 4.8.0.\n\nProblem still exists with 4.7.3."}, {"count": 16, "tags": [], "text": "A patch has been applied to gcc trunk and 4.7 and 4.8 branches.\nI tried the patch on top of gcc 4.7.3 and it does compile then.\n\nSo:\n\n- we didn't see a problem with 4.8\n- we had a problem with 4.7 which should be fixed in 4.7.4 (not yet released)\n- some of us had a problem in 4.6.3.No patch was applied to that branch.\n- It seems there was no problem before 4.6.\n\nRainer", "attachment_id": null, "id": 166629, "creator": "rainer.jung@kippdata.de", "time": "2013-04-15T15:36:25Z", "bug_id": 52900, "creation_time": "2013-04-15T15:36:25Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 52900, "text": "> - It seems there was no problem before 4.6.\n         \nI can't confirm that. On FreeBSD/sparc64 we're using:\ngcc version 4.2.1 20070831 patched [FreeBSD]                                              \nand I ran into the problem.", "id": 166632, "time": "2013-04-15T16:30:08Z", "creator": "kvedulv@kvedulv.de", "creation_time": "2013-04-15T16:30:08Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 52900, "text": "Created attachment 30217\nWorkaround for sparc/64 on gcc < 4.8\n\nSo, since we don't know an exact version where the bug was introduced, I think we should simply add the workaround for all gccs < 4.8. Can someone verify that this patch does the trick?", "id": 166737, "time": "2013-04-20T10:37:14Z", "creator": "sf@sfritsch.de", "creation_time": "2013-04-20T10:37:14Z", "is_private": false, "attachment_id": 30217}, {"count": 19, "text": "Works for me[tm] :)", "creator": "kvedulv@kvedulv.de", "attachment_id": null, "id": 166739, "time": "2013-04-20T12:13:33Z", "bug_id": 52900, "creation_time": "2013-04-20T12:13:33Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 52900, "is_private": false, "count": 20, "id": 166741, "time": "2013-04-20T16:24:29Z", "creator": "sf@sfritsch.de", "creation_time": "2013-04-20T16:24:29Z", "text": "thanks.\n\ntrunk commit: r1470183"}, {"count": 21, "tags": [], "bug_id": 52900, "attachment_id": null, "id": 166872, "time": "2013-04-26T11:43:24Z", "creator": "rpluem@apache.org", "creation_time": "2013-04-26T11:43:24Z", "is_private": false, "text": "Backported to 2.4.x as r1470183."}]