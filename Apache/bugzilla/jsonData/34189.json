[{"count": 0, "tags": [], "creator": "cserveny.tamas@gmail.com", "text": "Hi,\n\nI've seen lots of encoding related problems with requests, but not a single one\non response headers. So i decided to file this report.\n\nMy problem follows:\n\nI've written a CSV export functionality to my program. My servlet inserts a\n\"Content-Disposition\" header into the response, in order to set the filename of\nthe result csv file. This works fine till I want to insert chars not included in\niso8859-1 encoding, like the accented o char \u00f5\u00d5 or u \u00fb\u00db. They are converted to a\nQq Pp in the output. (I've checked with ethereal, it is not a client problem)\n\nThe character '\u00f5' has a hibyte. (its unicode value is higher than 256) and if\nthat hibyte removed it will turn into a 'Q'. \nThis transformation therefore indicates a lack of char -> byte conversion for\nheaders, just a plain cast.\n\nThe code follows: \n\nres.setContentType(\"text/comma-separated-values\");\nres.setCharacterEncoding(\"ISO8859-2\");\nres.setHeader(\"Content-Disposition\", \"attachment; filename=\\\"\" + report + \".csv\\\"\");\n\neg. \nreport=\"vev\u00f5\" would yield vevQ.csv in the browser.\n\nI was not able to pinpoint the code segment responsible for converting header\nstrings to a byte stream. \n\nI hope i was informative enough to resolve the issue. \n\nBest regards,\n\nTamas", "id": 72894, "time": "2005-03-26T14:05:47Z", "bug_id": 34189, "creation_time": "2005-03-26T14:05:47Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 34189, "attachment_id": null, "text": "Content type applies to the entity body exclusively (ie, not the headers).\nThere's *no* standard for header encoding (ie, even less than for URL encoding),\nand as a result, it always uses the HTTP defaults.\nIf you need encoding there, you should URL encode/decode your headers using the\nappropriate encoding.", "id": 72895, "time": "2005-03-26T14:47:14Z", "creator": "remm@apache.org", "creation_time": "2005-03-26T14:47:14Z", "is_private": false}, {"count": 2, "tags": [], "creator": "cserveny.tamas@gmail.com", "text": "> and as a result, it always uses the HTTP defaults.\n> If you need encoding there, you should URL encode/decode your headers using \n\nI can agree with you up to a point, but IMO, converting chars to bytes by\ncutting the hibyte can't be right. Maybe inserting question marks could be a\nmore elegant solution, but it is not up to me to decide.\n\nBtw, It seems that browsers do assume that header encoding is the same as\ncontent's. I know it's not right, but forceing iso8859-2 solved my problem.(new\nString(msg.getBytes(\"iso8859-2\"))) I've tried to use url encoding, but it was\nuseless. Browsers seems to ignore URL encoding there. (Stateing this does not\nmean I want to convince you to use the same encoding for the headers as the\ncontent, just for the record, maybe someone will run into the same problem)\n\nTamas", "id": 72912, "time": "2005-03-28T00:13:48Z", "bug_id": 34189, "creation_time": "2005-03-28T00:13:48Z", "is_private": false, "attachment_id": null}]