[{"count": 0, "tags": [], "text": "When creating XSSFSheets, it is not possible to ctreate merged regions beyond the 255 column or 65536 row (HSSF) limits. \n\nCalling sheet.addMergedRegion() requires a parameter of org.apache.poi.ss.util.CellRangeAddress. This class (CellRangeAddress) calls super() (CellRangeAddressBase), which throws an IllegalArgumentException \"invalid cell range\" if the column is bigger than 255 or the row is bigger than 65536.\n\nCellRangeAddressBase is an abstract base class and should not impose this restriction on actual implementation classes, e.g. there should be a HSSFCellRangeAddress (with its specific limits) and a XSSFCellRangeAddress (with its specific limits), but those classes do not exist (yet?) in poi-3.5-beta5.\n\nTo reproduce run the following code:\nfinal int NUM_COLUMNS = 300;\nfinal String output = \"MergedRegions.xlsx\";\nfinal int columnSpan = 5;\n\nXSSFWorkbook wb = new XSSFWorkbook();\nXSSFSheet sheet = wb.createSheet(\"sheet1\");\n\n// Create two rows.\nXSSFRow firstRow = sheet.createRow((short)0);\nXSSFRow secondRow = sheet.createRow((short)1);\n\nXSSFCellStyle centeredStyle = wb.createCellStyle();\ncenteredStyle.setAlignment(HorizontalAlignment.CENTER);\n\n// Create NUM_COLUMNS columns.\nfor (int column = 0; column < NUM_COLUMNS; column++) {\n\t// Create a new cell in secondRow.\n\tsecondRow.createCell(column).setCellValue(column);\n\tif (column % columnSpan == 0) {\n\t\t// Create a new cell in firstRow spanning over columnSpan cells.\n\t\tshort colFrom = (short)column;\n                short colTo = (short)(colFrom + columnSpan - 1);\n\t\tCell cell = firstRow.createCell(column);\n\t\tcell.setCellValue(\"Heading for columns \"+colFrom+\" to \"+colTo);\n\t\tcell.setCellStyle(centeredStyle);\n\t\tsheet.addMergedRegion(new CellRangeAddress(0,0,colFrom,colTo));\n\t}\n}\n\nFileOutputStream fileOut = new FileOutputStream(output);\nwb.write(fileOut);\nfileOut.close();", "is_private": false, "id": 125476, "creator": "jurgen.prokein@str.com.au", "time": "2009-03-10T19:55:11Z", "bug_id": 46832, "creation_time": "2009-03-10T19:55:11Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "yegor@dinom.ru", "is_private": false, "text": "Fixed in r762372\n\nThe CellRangeAddress constructor now allows columns greater than 255 and rows greater than 65535. No changes in user code are required. I removed validation from the constructor of CellRangeAddress and moved it to the consumer method sheet.addMergedRegion. This way the grid limits can be gracefully handled without subclassing.\n\nRegards,\nYegor", "id": 126022, "time": "2009-04-06T08:14:34Z", "bug_id": 46832, "creation_time": "2009-04-06T08:14:34Z", "attachment_id": null}]