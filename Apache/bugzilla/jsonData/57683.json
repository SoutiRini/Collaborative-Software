[{"count": 0, "tags": [], "text": "I mentioned this issue in \"Time for 7.0.60\" thread on dev@.\n\nIt is a bug with error handling in example webapp. It is not a regression from recent changes. It is reproducible with 7.0.59.\n\nSteps to reproduce:\nUsing Tomcat 7.0.59, JDK 6u45.\n\n1. Start Tomcat\n\n2. Visit stockicker example,\nhttp://localhost:8080/examples/async/stockticker\n\n3. Abort the request while the page is being loaded (Press \"Esc\" key on keyboard)\n\n4. Re-visit the example\nhttp://localhost:8080/examples/async/stockticker\n\nExpected: Working stockicker example.\n\nActual:\n1) Browser waits for a response. After several seconds the progress indicator stops. A blank page is displayed.\n\n2) Access log shows response status 200, but byte counter is zero (\"-\").\n\n127.0.0.1 - - [10/Mar/2015:17:45:31 +0300] \"GET /examples/async/stockticker HTTP/1.1\" 200 -\n\n3) Looking into catalina.2015-03-10.log, there is the following exception:\n[[[\n10.03.2015 17:36:58 org.apache.coyote.AbstractProcessor setErrorState\nINFO: An error occurred in processing while on a non-container thread. The connection will be closed immediately\njava.net.SocketException: Software caused connection abort: socket write error\n\tat java.net.SocketOutputStream.socketWrite0(Native Method)\n\tat java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)\n\tat java.net.SocketOutputStream.write(SocketOutputStream.java:136)\n\tat org.apache.coyote.http11.InternalOutputBuffer.realWriteBytes(InternalOutputBuffer.java:215)\n\tat org.apache.tomcat.util.buf.ByteChunk.flushBuffer(ByteChunk.java:480)\n\tat org.apache.coyote.http11.InternalOutputBuffer.flush(InternalOutputBuffer.java:119)\n\tat org.apache.coyote.http11.AbstractHttp11Processor.action(AbstractHttp11Processor.java:800)\n\tat org.apache.coyote.Response.action(Response.java:172)\n\tat org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:363)\n\tat org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:331)\n\tat org.apache.catalina.connector.CoyoteWriter.flush(CoyoteWriter.java:98)\n\tat async.AsyncStockServlet.writeStock(AsyncStockServlet.java:98)\n\tat async.AsyncStockServlet.tick(AsyncStockServlet.java:81)\n\tat async.Stockticker.run(Stockticker.java:84)\n\tat java.lang.Thread.run(Thread.java:662)\n]]]\n\n4) Looking at console,\nThere is the same exception as in \"3)\",\nfollowed by the following exception:\n[[[\njava.lang.IllegalStateException: The request associated with the AsyncContext has already completed processing.\n        at org.apache.catalina.core.AsyncContextImpl.check(AsyncContextImpl.java\n:553)\n        at org.apache.catalina.core.AsyncContextImpl.getResponse(AsyncContextImp\nl.java:265)\n        at async.AsyncStockServlet.writeStock(AsyncStockServlet.java:86)\n        at async.AsyncStockServlet.tick(AsyncStockServlet.java:81)\n        at async.Stockticker.run(Stockticker.java:84)\n        at java.lang.Thread.run(Thread.java:662)\n]]]\n\nEssentially, the async.Stockticker thread crashed due to a non handled ISE. This explains the behaviour.\n\n5) The exception in \"4)\" is logged to the console only. It is not logged into Tomcat log files.", "is_private": false, "bug_id": 57683, "id": 181631, "time": "2015-03-10T14:54:40Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-03-10T14:54:40Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "markt@apache.org", "is_private": false, "id": 181690, "attachment_id": null, "bug_id": 57683, "creation_time": "2015-03-11T22:19:18Z", "time": "2015-03-11T22:19:18Z", "text": "Fixed in trunk 8.0.x (for 8.0.21 onwards) and 7.0.x (for 7.0.60 onwards)."}]