[{"count": 0, "tags": [], "creator": "nahor.j+tomcat@gmail.com", "attachment_id": null, "text": "Context:\n- I want my webapp to use \"nice\" URL for a user's homepage (e.g.\n\"http://server/user\") which is then redirected server side to the real URL (e.g.\n\"http://server/servlet/home?user=user\"). This requires to use \"emptySessionPath\".\n- I'm using a load-balancer with two Tomcat servers (say T1 and T2) with sticky\nsessions (xxx.t1, yyy.t2, ...).\n- Because some http client don't support cookies or are started by another http\nclient (e.g. progressive video download in Media Player started by clicking in\nlink in Firefox), some links have the session id in the URL (e.g.\nhttp://server/servlet/stream/yyy.t2/music.mp3).\n\nBroken case:\n- The user navigates to the website and get the session \"yyy.t2\"from T2.\n- He then bookmarks a URL with session id in it like the one above.\n- The next day, he navigates to the website again and get the session \"xxx.t1\"\nfrom T1.\n- He then selects bookmarked URL.\n=> The request is redirected to T2. The session is invalid so a new one is\ncreated. But because of the cookie, the session id is \"xxx.t1\".\n\nSo now we have a session created on T2 with a jvmRoute t1. So the following\nrequests will be send to T1 instead of T2 with an inconsistent (or even expired)\nsession.\n\nThere should be two independent options:\n- emptySessionPath which only change the path of the session cookie but nothing else\n- reuseSessionID which will reuse the session id from the cookie if available", "id": 112778, "time": "2008-01-11T17:43:22Z", "bug_id": 44216, "creation_time": "2008-01-11T17:43:22Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "This Tomcat 5 enhancement request has been moved to Tomcat 7 (the latest version) since Tomcat 5 development is limited and focussed on bugs and security issues whereas Tomcat 7 is still seeing new feature development.", "id": 152339, "time": "2011-12-20T20:36:23Z", "bug_id": 44216, "creation_time": "2011-12-20T20:36:23Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 44216, "text": "Coming back to this after far too long.\n\nIf this request were implemented I don't believe the problem would be solved or, at lease, a new one would be created. Reviewing the borken case assuming the requested option was avaialable and enabled:\n- The user navigates to the website and get the session \"yyy.t2\"from T2.\n- He then bookmarks a URL with session id in it like the one above.\n- The next day, he navigates to the website again and get the session \"xxx.t1\"\nfrom T1.\n- He then selects bookmarked URL.\n=> The request is redirected to T2. The session is invalid so a new one is\ncreated zzz.t2. This overwrites yyy.t2 created at step 1. Any information associated with session yyy.t2 is now lost.\n\nThe way to fix this would be to fix the load-balancer so that the node information from the cookie session ID takes precedence over the node information in the URL session ID.", "id": 180780, "time": "2015-02-05T10:04:25Z", "creator": "markt@apache.org", "creation_time": "2015-02-05T10:04:25Z", "is_private": false, "attachment_id": null}]