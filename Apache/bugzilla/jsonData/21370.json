[{"attachment_id": null, "tags": [], "creator": "hartmut.keil@gmx.ch", "is_private": false, "count": 0, "id": 40063, "time": "2003-07-07T13:26:50Z", "bug_id": 21370, "creation_time": "2003-07-07T13:26:50Z", "text": "Description: \nIf 'SSLVerifyClient' is configured for some location, mod_ssl is starting a\nre-negotiation of the SSLconnection in the function 'ssl_io_filter_connect(..)'\nA MSIE Internet Explorer is handling that kind of re-negotiation in \nthe following way:\na) he is finishing the current handshake (see logfile)\nb) afterwards he is starting a new handshake, now presenting a \n   client certificate\n\nSo the whole situation is handeld by mod_ssl in the following way:\n1) mod_ssl is starting a re-negotiation\n2) the client does not finish the handshake (see a) )\n3) mod_ssl is freeing the SSL struct using 'SSLfree(..)'\n   (By that also the allocated BIO's will be freed)\n4) the browser is starting a new handshake (see b) ), using the same\n   TCP connection (Keep-Alive is enabled) and so the already \n   freed SSL struct and BIO's will be used by mod_ssl\n   (Due to the fact that it is bound to the conn_rec struct)\n\nI.e. mod_ssl is reading already freed memory. \nWe have proven is using a (purify Version 2002a.06.00 an Solaris 2.8)\n\n\nFix:\nIf the handshake is failing in 'ssl_io_filter_connect(..)' the connection \nwill be aborted. \nDue to stability the pointer's to the BIOS will be reset in \nin 'ssl_filter_io_shutdown(..)' and check in 'ssl_filter_write(..)'\nWe have tested the fix again with the same memory access checker.\n\n\nLog-Message:\n[Wed Jul 02 19:07:21 2003] [info] Requesting connection re-negotiation\n[Wed Jul 02 19:07:21 2003] [info] Awaiting re-negotiation handshake\n[Wed Jul 02 19:07:21 2003] [error] Re-negotiation handshake failed: Not accepted\nby client!?\n\nDiff:\ndiff -c -r1.2 -r1.3\n*** ssl_engine_io.c     2003/04/16 14:14:39     1.2\n--- ssl_engine_io.c     2003/07/03 11:36:24     1.3\n***************\n*** 780,789 ****\n                                       apr_size_t len)\n  {\n      ssl_filter_ctx_t *filter_ctx = f->ctx;\n!     bio_filter_out_ctx_t *outctx = \n!            (bio_filter_out_ctx_t *)(filter_ctx->pbioWrite->ptr);\n!     int res;\n  \n      /* write SSL */\n      if (filter_ctx->pssl == NULL) {\n          return APR_EGENERAL;\n--- 780,795 ----\n                                       apr_size_t len)\n  {\n      ssl_filter_ctx_t *filter_ctx = f->ctx;\n!       bio_filter_out_ctx_t *outctx = NULL;\n!       int res;\n  \n+       /* 2.7.2003/hk,mv: BIOS has been freed*/\n+       if (filter_ctx->pbioWrite == NULL) {\n+               return APR_EGENERAL;\n+       }\n+ \n+     outctx = (bio_filter_out_ctx_t *)(filter_ctx->pbioWrite->ptr);\n+ \n      /* write SSL */\n      if (filter_ctx->pssl == NULL) {\n          return APR_EGENERAL;\n***************\n*** 999,1004 ****\n--- 1005,1014 ----\n      sslconn->ssl = NULL;\n      filter_ctx->pssl = NULL; /* so filters know we've been shutdown */\n  \n+       /* 2.7.2003/hk,mv: BIOS is freed reset the pointers*/\n+       filter_ctx->pbioRead = NULL;\n+       filter_ctx->pbioWrite = NULL;\n+ \n      return APR_SUCCESS;\n  }\n  \n***************\n*** 1112,1117 ****\n--- 1122,1129 ----\n              inctx->rc = APR_EGENERAL;\n          }\n  \n+               /* 2.7.2003/hk,mv: handshake failed, close the connection */\n+               c->aborted=1;\n          return ssl_filter_io_shutdown(filter_ctx, c, 1);\n      }\n  \n***************\n*** 1153,1158 ****\n--- 1165,1172 ----\n                           error ? error : \"unknown\");\n              ssl_log_ssl_error(APLOG_MARK, APLOG_INFO, c->base_server);\n  \n+                       /* 2.7.2003/hk,mv: no client cert, close the connection\n*/\n+                       c->aborted=1;\n              return ssl_filter_io_shutdown(filter_ctx, c, 1);\n          }\n      }"}, {"count": 1, "tags": [], "bug_id": 21370, "text": "Created attachment 7121\nmemory access checker output", "id": 40065, "time": "2003-07-07T13:29:34Z", "creator": "hartmut.keil@gmx.ch", "creation_time": "2003-07-07T13:29:34Z", "is_private": false, "attachment_id": 7121}, {"count": 2, "tags": [], "bug_id": 21370, "text": "Thanks very much for the report and patch; a variant of the patch has been\ncommitted to CVS.", "id": 41059, "time": "2003-07-21T12:11:43Z", "creator": "jorton@redhat.com", "creation_time": "2003-07-21T12:11:43Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 21370, "text": "*** Bug 22832 has been marked as a duplicate of this bug. ***", "id": 52918, "time": "2004-02-25T12:13:37Z", "creator": "jorton@redhat.com", "creation_time": "2004-02-25T12:13:37Z", "is_private": false, "attachment_id": null}]