[{"count": 0, "tags": [], "text": "Is there any particular reason for SVGTranscoder not using xerces XMLSerializer ?\nBecause xerces XMLSerializer also support pretty print :)\nIf not then here is the patch for using xerces XMLSerializer.\n\nBasicly it only change few line on cvs\norg.apache.batik.transcoder.svg2svg.SVGTranscoder\n\nadd import\nimport org.apache.batik.util.SVGConstants;\nimport org.apache.xerces.dom.DOMImplementationImpl;\nimport org.apache.xml.serialize.*;\n\non method\npublic void transcode(TranscoderInput input, TranscoderOutput output) {\n...\n    // StringWriter sw = new StringWriter(); // comment this line\n    try {\n        //DOMUtilities.writeDocument(d, sw); // comment this line, use xerces\nXMLSerializer\n        OutputFormat of = prettyPrint();\n        XMLSerializer serializer = new XMLSerializer(w,of);\n        serializer.serialize(d);\n    } catch (IOException e) {\n        throw new Error(\"IO\");\n    }\n...\n}\n\nremove method\nprotected void prettyPrint(Reader in, Writer out) throws TranscoderException\n\nadd method\nprotected OutputFormat prettyPrint() {\n        OutputFormat of = new OutputFormat();\n        // set all default value first\n        of.setVersion(\"1.0\");\n        of.setStandalone(false);\n        of.setLineSeparator(VALUE_NEWLINE_CR.getValue());\n        of.setIndenting(true);\n        of.setIndent(4);\n        of.setLineWidth(80);\n        of.setPreserveEmptyAttributes(false);\n        of.setPreserveSpace(false);\n\n        NewlineValue nlv = (NewlineValue)hints.get(KEY_NEWLINE);\n        if (nlv != null) {\n            of.setLineSeparator(nlv.getValue());\n        }\n        \n        Integer i = (Integer)hints.get(KEY_TABULATION_WIDTH);\n        if (i != null) {\n            of.setIndent(i.intValue());\n        }\n\n        i = (Integer)hints.get(KEY_DOCUMENT_WIDTH);\n        if (i != null) {\n            of.setLineWidth(i.intValue());\n        }\n\n        // set docType\n        String publicId = (String)hints.get(KEY_PUBLIC_ID);\n        if (publicId == null) {\n            publicId = SVGConstants.SVG_PUBLIC_ID;\n        }\n        String systemId = (String)hints.get(KEY_SYSTEM_ID);\n        if (systemId == null) {\n            systemId = SVGConstants.SVG_SYSTEM_ID;\n        }\n        of.setDoctype(publicId, systemId);\n\n        return of;\n    }", "attachment_id": null, "id": 44269, "creator": "tonny@kiyut.com", "time": "2003-09-17T15:33:45Z", "bug_id": 23216, "creation_time": "2003-09-17T15:33:45Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 23216, "is_private": false, "id": 44270, "attachment_id": 8255, "creator": "tonny@kiyut.com", "creation_time": "2003-09-17T15:36:04Z", "time": "2003-09-17T15:36:04Z", "text": "Created attachment 8255\nhere is the complete file"}, {"count": 2, "tags": [], "bug_id": 23216, "is_private": false, "id": 47504, "attachment_id": null, "creator": "deweese@apache.org", "creation_time": "2003-11-17T17:20:44Z", "time": "2003-11-17T17:20:44Z", "text": "Hi,\n   Thanks for the patch, but right now Batik has no hard\ndependencies on the XML parser (it can work with Xerces \ncrimson, etc - any SAX2 parser really).\n\n    I would be reluctant to add such a dependency.\n"}, {"count": 3, "tags": [], "bug_id": 23216, "is_private": false, "id": 47639, "attachment_id": null, "creator": "tonny@kiyut.com", "creation_time": "2003-11-19T17:55:01Z", "time": "2003-11-19T17:55:01Z", "text": "Yup that's correct, It is my mistake :)\nBatik is better if independent from any xml parser."}]