[{"count": 0, "tags": [], "creator": "jeff.bohanek@mni.com", "text": "The SQL task is dropping Result Sets and error messages if a script has \nmultiple statements and there is an UpdateCount value between the Result Sets.  \nFor example, if the following batch is executed:\n\nSELECT * FROM TableA\nUPDATE TableA SET  ColumnA = 'NoValue' WHERE ColumnB = 'No Match'\nINSERT INTO TableA (ColumnA, ColumnB) VALUES (NULL, NULL)\nSELECT * FROM TableA\ngo\n\nIf we assume that ColumnA and ColumnB are NOT NULLABLE then the INSERT in the \nmiddle should fail and I would expect to get Results similar to the following:\n\n{Result Set from Select *}\n0 rows affected\nFailed to execute ... SQLException ... ColumnA does not allow nulls...\n\nBUILD FAILED ...\n\nInstead what I get is something similar to the following:\n\n{Result Set from Select *}\n      [sql] 1 of 1 SQL statements executed successfully\n\nBUILD SUCCESSFUL\n\nIn this case I don't see that there was an error at all and the subsequent \nresult sets are lost.\n\nI can get the proper response if I put 'go' (my delimiter) in between each \nstatement but the case where I had this show up was actually in the execution \nof a stored procedure that had many many statements in it and the failure was \nburied pretty deep.\n\nI was able to fix this for my purposes by updating the logic in the execSQL and \nprintResults methods to better handle the boolean values from statement.execute\n() and statement.getMoreResults(). I will try to post the changes that I made - \nI need to clean it up a little.", "id": 40674, "attachment_id": null, "bug_id": 21594, "creation_time": "2003-07-14T22:38:58Z", "time": "2003-07-14T22:38:58Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 21594, "attachment_id": 7294, "text": "Created attachment 7294\nUpdated SQLExec", "id": 40675, "time": "2003-07-14T22:44:17Z", "creator": "jeff.bohanek@mni.com", "creation_time": "2003-07-14T22:44:17Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 21594, "text": "There seem to have been some changes between the version you used and current\nCVS HEAD - at least I can identify a change where your code reads\n                sql.append(\"\\r\\n\" + line);\nand the current code doesn't contain a \\r (line 490) - I'm not sure that this\nis intentional.  Could you please provide a diff against CVS HEAD, this will be\na lot easier to review?\n\n", "id": 40741, "attachment_id": null, "creator": "bodewig@apache.org", "creation_time": "2003-07-15T15:32:15Z", "time": "2003-07-15T15:32:15Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 21594, "text": "Created attachment 7312\nSQLExec.java with changes applied to head", "id": 40763, "attachment_id": 7312, "creator": "jeff.bohanek@mni.com", "creation_time": "2003-07-15T20:06:50Z", "time": "2003-07-15T20:06:50Z", "is_private": false}, {"count": 4, "tags": [], "text": "Created attachment 7313\ncvs diff -u of last SQLExec.java against CVS Head", "attachment_id": 7313, "id": 40764, "creator": "jeff.bohanek@mni.com", "time": "2003-07-15T20:07:28Z", "bug_id": 21594, "creation_time": "2003-07-15T20:07:28Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 21594, "text": "I applied the changes I made to the CVS Head revision and attached the updated \nSQLExec.java as well as the results of the cvs diff -u which is what I think \nyou were looking for.  Let me know if there is anything else that you would \nlike.", "id": 40765, "time": "2003-07-15T20:08:53Z", "creator": "jeff.bohanek@mni.com", "creation_time": "2003-07-15T20:08:53Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "I have done a test to try to reproduce your issue with ant 1.6alpha and MS SQL \nServer and I am not seeing the behavior that you mentioned (execution continuing \nand ant silently ignoring the problem).\n\nHere are my build file and my output :\n\n$ ant -f sql.xml\nBuildfile: sql.xml\n\n\n\nsql:\n\n      [sql] Executing commands\n\n      [sql] columna,columnb\n\n      [sql] bonjour,Guten Tag\n\n\n\n      [sql] Failed to execute: \n\n      [sql] INSERT INTO TableA (columna, columnb) VALUES (NULL, NULL)\n\n\n\nBUILD FAILED\n\nC:\\dev\\testant\\sql.xml:10: java.sql.SQLException: [DJ0X820J]Cannot insert the \nvalue NULL into column 'columna', table 'test.test.TableA'; column does not \nallow nulls. INSERT fails.\n\n\n\nTotal time: 1 second\n\nantoine@DJ0X820J /cygdrive/c/dev/testant \n$ cat sql.xml\n<project name=\"sql\" default=\"sql\">\n   <target name=\"sql\">\n       <sql\n    print=\"true\"\n    keepformat=\"true\"\n    driver=\"com.inet.tds.TdsDriver\"\n    url=\"jdbc:inetdae:localhost:1433\"\n    userid=\"test\"\n    password=\"test\"\n    classpath=\"c:/dev/testant/lib/Opta2000.jar\">\n \nSELECT * FROM TableA;\nUPDATE TableA SET  columna = 'NoValue' WHERE columnb = 'No Match';\nINSERT INTO TableA (columna, columnb) VALUES (NULL, NULL);\nSELECT * FROM TableA;\ngo\n       </sql>\n<!-- \n-->\n   </target>\n</project>antoine@DJ0X820J /cygdrive/c/dev/testant \n", "attachment_id": null, "id": 40810, "creator": "antoine@apache.org", "time": "2003-07-16T11:31:05Z", "bug_id": 21594, "creation_time": "2003-07-16T11:31:05Z", "is_private": false}, {"count": 7, "attachment_id": null, "creator": "jeff.bohanek@mni.com", "text": "Antoine,\n\nThe reason you are not getting the same behavior is that you have a delimiter \n(';') between each of your statements - in my example I specifically do not.  \nIn the scripts that I am trying to run I am using a cursor to execute many \nstatements in one batch with no delimiter.  Take out the ';' and give it a try.\n\nThanks!\nJeff.", "id": 40819, "time": "2003-07-16T12:55:59Z", "bug_id": 21594, "creation_time": "2003-07-16T12:55:59Z", "tags": [], "is_private": false}, {"count": 8, "text": "without ; the output is like that :\n$ ant -f sql.xml\nBuildfile: sql.xml\n\nsql:\n      [sql] Executing commands\n      [sql] Failed to execute: \n      [sql] SELECT * FROM TableA\n      [sql] UPDATE TableA SET  ColumnA = 'NoValue' WHERE Columnb = 'No Match'\n      [sql] INSERT INTO TableA (ColumnA, ColumnB) VALUES (NULL, NULL)\n      [sql] SELECT * FROM TableA\n      [sql] go\n\nBUILD FAILED\n\nC:\\dev\\testant\\sql.xml:10: java.sql.SQLException: [DJ0X820J]Cannot insert the \nvalue NULL into column 'ColumnA', table 'test.dbo.TableA'; column does not allow \nnulls. INSERT fails.\n\nTotal time: 1 second\n", "bug_id": 21594, "attachment_id": null, "id": 40824, "time": "2003-07-16T13:11:51Z", "creator": "antoine@apache.org", "creation_time": "2003-07-16T13:11:51Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 21594, "attachment_id": null, "text": "Ok - the only difference I see is in the jdbc driver.  I am using the Microsoft \nSQL Server jdbc driver which may be causing the errors to get masked - maybe it \nonly throws the SQLException on processing the Result Set where the driver you \nuse throws the SQLException right away.  What driver are you using and where \ncan I get it?\n\nHowever, there is one thing I would like for you to try - if you fix the Insert \nstatement so that it does not fail, do you get the second result set?  I would \nimagine that the BUILD should be SUCCESSFUL, but the second result set will not \ndisplay.\n\n", "id": 40836, "time": "2003-07-16T14:53:10Z", "creator": "jeff.bohanek@mni.com", "creation_time": "2003-07-16T14:53:10Z", "is_private": false}, {"count": 10, "attachment_id": null, "bug_id": 21594, "text": "You are right, if I suppress the offending INSERT, I do not see the second \nresultset", "id": 40841, "time": "2003-07-16T15:47:50Z", "creator": "antoine@apache.org", "creation_time": "2003-07-16T15:47:50Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 21594, "text": "Patch submitted - thanks", "id": 40851, "attachment_id": null, "creator": "antoine@apache.org", "creation_time": "2003-07-16T17:36:28Z", "time": "2003-07-16T17:36:28Z", "is_private": false}]