[{"count": 0, "tags": [], "text": "My Java code\n  ...\n  fs = new POIFSFileSystem( new FileInputStream( sPath ) );\n  m_workbook = new HSSFWorkbook(fs);\n\nthrows exception while creating new HSSFWorkbook instance:\n\norg.apache.poi.hssf.record.RecordFormatException: Unable to construct record\ninstance\n\tat org.apache.poi.hssf.record.RecordFactory.createRecord(RecordFactory.java:191)\n\tat org.apache.poi.hssf.record.RecordFactory.createRecords(RecordFactory.java:115)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:205)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:153)\n\tat ...\nCaused by: java.lang.reflect.InvocationTargetException\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\n\tat java.lang.reflect.Constructor.newInstance(Unknown Source)\n\tat org.apache.poi.hssf.record.RecordFactory.createRecord(RecordFactory.java:179)\n\t... 12 more\nCaused by: java.lang.ArrayIndexOutOfBoundsException\n\tat\norg.apache.poi.hssf.record.RecordInputStream.checkRecordPosition(RecordInputStream.java:132)\n\tat org.apache.poi.hssf.record.RecordInputStream.readInt(RecordInputStream.java:155)\n\tat org.apache.poi.hssf.record.BOFRecord.fillFields(BOFRecord.java:118)\n\tat org.apache.poi.hssf.record.Record.<init>(Record.java:56)\n\tat org.apache.poi.hssf.record.BOFRecord.<init>(BOFRecord.java:99)\n\t... 17 more\n\nException is raised within org.apache.poi.hssf.record.BOFRecord.fillFields() at\nthese statements:\n...\nfield_5_history  = in.readInt();\nfield_6_rversion = in.readInt();\n\nI cannot attach example of excelsheet producing this error since it contains my\ncustomer's private data. However, it seems the XLS format is quite old because\nBOFRecord member \"field_4_year\" is \"1995\".\n\nI guess that this XLS file doesn't have fields \"history\" and \"rversion\" in the\nBOFRecord.\n\nChanging the Java code to\ntry {\n  field_5_history  = in.readInt();\n  field_6_rversion = in.readInt();\n}\ncatch (ArrayIndexOutOfBoundsException aioobe ) {} \n\nhelped me to get rid of the problem and my XLS file was opened well afterwards.\nPlease, investigate possibility to add this fix to official POI package.", "is_private": false, "id": 108274, "creator": "easy@atlas.cz", "time": "2007-09-17T08:18:51Z", "bug_id": 43408, "creation_time": "2007-09-17T08:18:51Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "text": "Do you happen to know what version of excel (and even if it was excel) produced\nthe file?\n\nBefore adding in patches to skip records, it'd be good to know how common it's\nlikely to be. Also, we normally like to add unit tests, so ideally we'll want an\nexample of a problem file. Any chance you could edit out the sensitive data, and\nupload?", "id": 108280, "time": "2007-09-17T09:50:32Z", "bug_id": 43408, "creation_time": "2007-09-17T09:50:32Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 43408, "attachment_id": null, "id": 108447, "time": "2007-09-20T08:00:10Z", "creator": "easy@atlas.cz", "creation_time": "2007-09-20T08:00:10Z", "is_private": false, "text": "The file was produced by other external tool (not by Excel itself).\nUnfortunately, I cannot cut-out sensitive data because once I open and save the\ndocument in MS Excel then the BOF record inside the document is changed (fixed)\nand document can be opened by POI.\nBOF record of the problematic document looks like this:\nRecord identifier: 0809h ==> BIFF5-8\nOffset (Length) Value: 0 (2) 0600h ==> BIFF8\nOffset (Length) Value: 2 (2) 0005h ==> Workbook globals\nOffset (Length) Value: 4 (2) 09D7h\nOffset (Length) Value: 6 (2) 07CBh\n\nIt's obvious that this is non-Excel record but record written by external tool.\nSee for example Excel File Format description\nhttp://sc.openoffice.org/excelfileformat.pdf\n(chapters 5.8.1 and 5.8.2). If POI is supposed to accept not only Excel XLS\nfiles but XLS files written by external tools as well, then it should be able to\nallow (but ignore) optional fields in BOF record.\nSome kind of solution for non standard BOF record is mentioned here\nhttp://mail-archives.apache.org/mod_mbox/poi-dev/200706.mbox/%3C466DA1B3.5050006@admadic.de%3E\n\n...\nprotected void fillFields(RecordInputStream in)\n    {\n        field_1_version  = in.readShort();\n        field_2_type     = in.readShort();\n        if (in.getRecordOffset()<in.getLength())\n           field_3_build    = in.readShort();\n        if (in.getRecordOffset()<in.getLength())\n           field_4_year     = in.readShort();\n        if (in.getRecordOffset()<in.getLength())\n           field_5_history  = in.readInt();\n        if (in.getRecordOffset()<in.getLength())\n           field_6_rversion = in.readInt();\n    }\n...\n\n"}, {"count": 3, "attachment_id": null, "creator": "apache@gagravarr.org", "is_private": false, "id": 110453, "time": "2007-11-12T13:53:10Z", "bug_id": 43408, "creation_time": "2007-11-12T13:53:10Z", "tags": [], "text": "\n\n*** This bug has been marked as a duplicate of 42794 ***"}]