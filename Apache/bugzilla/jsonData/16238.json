[{"count": 0, "tags": [], "bug_id": 16238, "text": "My application continues to run even if the permission to folder or the log \nfile inside that folder is denied.\n\nIt says \" log4j:ERROR setFile(null,true) call failed\"\nand the following stack trace is printed only to the console(it's not thrown \nback as exception).\n...................................\n\njava.io.FileNotFoundException: load_reset.log.err.20030119 (Permission denied)\n        at java.io.FileOutputStream.openAppend(Native Method)\n        at java.io.FileOutputStream.<init>(FileOutputStream.java:100)\n        at org.apache.log4j.FileAppender.setFile(FileAppender.java:272)\n        at org.apache.log4j.FileAppender.activateOptions(FileAppender.java:151)\n        at org.apache.log4j.config.PropertySetter.activate\n(PropertySetter.java:247)\n        at org.apache.log4j.config.PropertySetter.setProperties\n(PropertySetter.java:123)\n        at org.apache.log4j.config.PropertySetter.setProperties\n(PropertySetter.java:87)\n        at org.apache.log4j.PropertyConfigurator.parseAppender\n(PropertyConfigurator.java:645)\n        at org.apache.log4j.PropertyConfigurator.parseCategory\n(PropertyConfigurator.java:603)\n        at org.apache.log4j.PropertyConfigurator.parseCatsAndRenderers\n(PropertyConfigurator.java\n:524)\n        at org.apache.log4j.PropertyConfigurator.doConfigure\n(PropertyConfigurator.java:408)\n        at org.apache.log4j.PropertyConfigurator.configure\n(PropertyConfigurator.java:340)\n.........................................\n\nBut, i need the exception to be thrown back to my calling program to terminate \nmy application.\n\nIs this a bug or is there any valid reason for this behaviour?\nIf there's any valid reason for this behaviour, can you suggest what work \naround has to be done to handle this problem?\nCan you please help me out in this regard?\n\nThanks,\nSathya.", "id": 29681, "time": "2003-01-19T13:53:28Z", "creator": "esathya@chn.cognizant.com", "creation_time": "2003-01-19T13:53:28Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "yoavs@computer.org", "text": "It's not a bug, as log4j will never cause your appliction to crash by design.  \nWith log4j 1.3, the JoranConfigurator keeps an error list, which you can check \nto see if there were any errors during configuration. ", "id": 68345, "time": "2004-12-13T15:48:57Z", "bug_id": 16238, "creation_time": "2004-12-13T15:48:57Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "jaspreet_inc@hotmail.com", "attachment_id": null, "is_private": false, "id": 73041, "time": "2005-03-30T06:02:30Z", "bug_id": 16238, "creation_time": "2005-03-30T06:02:30Z", "text": "(In reply to comment #1)\n> It's not a bug, as log4j will never cause your appliction to crash by \ndesign.  \n> With log4j 1.3, the JoranConfigurator keeps an error list, which you can \ncheck \n> to see if there were any errors during configuration. \n\nAny backbone API functions should be designed to throw the error on to the \nconsumer application so that the application can decide what to do upon an \nerror. If theres a FileNotFoundException, the application should be able to \ncatch it, and take corrective action. It's fatal if the function is consuming \nthis exception, the developrs using this API have no way to take corrective \naction. This should be resolved to throw a FileNotFoundException on.\n\nAlso, DOMConfigurator.configure throws the FileNotFoundException exception, \nconsumes it and never throws it on ! So the developer has no way to take \ncorrective action.\n\nPlease update this function top throw the exception on too.\n\nJaspreet"}, {"count": 3, "tags": [], "creator": "hoju@visi.com", "attachment_id": null, "text": "You need to re-read what Yoav said.  Log4j will never cause you application to\ncrash.  If you are performing configuration via auto-configuration, not manual\nconfiguration and you specified a path that did not exist to your log file,\nwould you want your entire application to crash becuse of a typo in the config\nfile?  Or an entire appserver to be taken down if the appserver is using Log4j?\n Your want for exceptions to bubble up is a, normally, valid request.  However,\nthis is one of those cases where it doesn't make sense, which is why a much less\nfatal scheme for finding errors is provided.\n\nJake", "id": 73047, "time": "2005-03-30T07:26:51Z", "bug_id": 16238, "creation_time": "2005-03-30T07:26:51Z", "is_private": false}]