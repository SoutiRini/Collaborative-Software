[{"count": 0, "tags": [], "bug_id": 29391, "text": "We run our server as a service in the system and the execution of a javac Ant\ntask results in a file not found exception.  It is a temporary file and the name\nend up being /fileNNNN\n\nThis call to System.getProperty(\"user.dir\") is returning \"/\" (not sure why as\nthe user under which the server is run has HOME=/usr/share/jonas).\n\nI don't know why it uses a System.getProperty(\"user.dir\") and not a\nSystem.getProperty(\"java.io.tmpdir\").  It looks wrong to me... \n\nIndependently of what cause the 'user.dir' to return the wrong value I believe\nit should be changed to the 'java.io.tmpdir' one.  There may be cases where the\nuserid under which the server is run has no home directory assigned or it is not\nwritable.  And tem files should go to /tmp.\n\n\nHere it is from Ant 1.6.1 DefaultCompilerAdapter.java:\n\n    protected int executeExternalCompile(String[] args, int firstFileName,\n                                         boolean quoteFiles) {\n        String[] commandArray = null;\n        File tmpFile = null;\n\n\n        try {\n            /*\n             * Many system have been reported to get into trouble with\n             * long command lines - no, not only Windows .\n             *\n             * POSIX seems to define a lower limit of 4k, so use a temporary\n             * file if the total length of the command line exceeds this limit.\n             */\n            if (Commandline.toString(args).length() > 4096\n                && firstFileName >= 0) {\n                PrintWriter out = null;\n                try {\n                    File userDir = getJavac().getTempdir();\n                    if (userDir == null) {\n                        String userDirName = System.getProperty(\"user.dir\");\n                        userDir = new File(userDirName);\n                    }\n                    tmpFile = fileUtils.createTempFile(\"files\", \"\", userDir);\n                    tmpFile.deleteOnExit();\n                    out = new PrintWriter(new FileWriter(tmpFile));\n                    for (int i = firstFileName; i < args.length; i++) {\n                        if (quoteFiles && args[i].indexOf(\" \") > -1) {\n                            args[i] = args[i].replace('\\\\', '/');\n                            out.println(\"\\\"\" + args[i] + \"\\\"\");\n                        } else {\n                            out.println(args[i]);\n                        }\n                    }\n                    out.flush();\n                    commandArray = new String[firstFileName + 1];\n                    System.arraycopy(args, 0, commandArray, 0, firstFileName);\n                    commandArray[firstFileName] = \"@\" + tmpFile;\n                } catch (IOException e) {\n                    throw new BuildException(\"Error creating temporary file\",  \n   <========= EXCEPTION THROWN HERE\n                                             e, location);", "id": 58751, "time": "2004-06-04T13:06:57Z", "creator": "fnasser@redhat.com", "creation_time": "2004-06-04T13:06:57Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "fnasser@redhat.com", "text": "Old Subject: javac task uses user.dir for temporary file instead of java.io.tmpdir\n\nAdjusted subject.\n\nI know understand that this was the intended default for javac 'tempdir'. \nHowever, servers may be running this to, for instance, compile some code (like\nin JSP pages etc.).  The current directory can be some system directory for\ninstance.  It is quite unpredictable when you will get a command line > 4k, so\nthis causes a problem in some places, not in others.\n\njava.io.tmpdir will always work (or lots of other things will not work as well),\nso that should be the default.", "id": 58775, "time": "2004-06-04T17:52:51Z", "bug_id": 29391, "creation_time": "2004-06-04T17:52:51Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 29391, "attachment_id": null, "id": 58776, "time": "2004-06-04T17:59:17Z", "creator": "mbenson@apache.org", "creation_time": "2004-06-04T17:59:17Z", "is_private": false, "text": "In fact the temp file, AFAICT, originally was created in java.io.tmpdir, but \nwas changed to user.dir .  See bug 4590.  I think the solution was not effected \nby creating the file in user.dir, but by specifying the location of the file \nexplicitly.  I am inclined to change this to java.io.tmpdir, because I agree \nthat's where it belongs, but I don't know that it is actually the source of \nyour distress...\n\nuser.dir is not = HOME or ~, it is equivalent to $PWD .  So given the fact that \njavac creates the temp file in the current directory, if your user does not \nhave permission to create files at the root, that would probably be your \nproblem.  The easiest workaround for you now is to use javac \ntmpdir=\"${java.io.tmpdir}\".\n\nAs to the java.io.tmpdir issue... I have made the change and committed it to \nCVS HEAD.  I do NOT plan to merge this for 1.6.2 .  I'd rather let it sit in \nthe main branch for awhile to make sure there are no issues.\n\nThanks"}, {"count": 3, "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "id": 58777, "time": "2004-06-04T18:01:13Z", "bug_id": 29391, "creation_time": "2004-06-04T18:01:13Z", "is_private": false, "text": "And of course that should have been <javac tempdir=\"${java.io.tmpdir}\" />.  I \nleft the 'e' out of the attribute name."}, {"count": 4, "tags": [], "bug_id": 29391, "text": "Oh, and it wasn't originally created in java.io.tmpdir... I wrote that when I \nfirst started researching the issue.  Looks like it was originally created in \nthe JVM startup directory which is usually but might not be = user.dir .\n\n\nANYWAY...", "id": 58778, "time": "2004-06-04T18:08:37Z", "creator": "mbenson@apache.org", "creation_time": "2004-06-04T18:08:37Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "fnasser@redhat.com", "attachment_id": null, "is_private": false, "id": 58782, "time": "2004-06-04T19:45:00Z", "bug_id": 29391, "creation_time": "2004-06-04T19:45:00Z", "text": "Yes, you are right.  It happens that this is being called from withing Jasper,\nwhich I have no way to modify to add the tempdir.  I can go and ask tomcat folks\nto make this change -- it will be a race of who releases first though :-)  And\nwhen your change is out their change would not be needed anymore.\n\nMy preference for the change you just made is that it will always work, what is\nsome desirable quality for a default.\n\nW.r.t. how we were affected:  Our server JOnAS is started as a system service. \nI would have guessed that the PWD would be /etc/init.d or /usr/share/jonas or\nsome other system directory -- I have no idea why I got \"/\".  I've printed from\nthe javac task:\n\n   [javac] userDir=\"null\"\n   [javac] userDirName=\"/\"\n   [javac] userDir2=\"/\" \n\nIn any case we would be in trouble as most of these directories are not writable\nor should not be writen to anyway (even if the permissions allowed writing by\nthe 'jonas' user).\n\nSomeone wrote a test program to verify the JVM (IBM 1.4.1 and BEA 1.4.2 yeld the\nsame results):\n\n    | $ cat /tmp/Main.java\n    | public class Main {\n    |     public static void main(String[] s) {\n    |         System.out.println(\"user.dir=\" + System.getProperty(\"user.dir\"));\n    |         System.out.println(\"user.home=\" + System.getProperty(\"user.home\"));\n    |     }\n    | }\n    | $ cd /var; java -cp /tmp Main\n    | user.dir=/var\n    | user.home=/home/vadim\n    | $ cd /usr/share/; java -cp /tmp Main\n    | user.dir=/usr/share\n    | user.home=/home/vadim\n\n\nI am happy with your solution.  I had hopes it would be in 1.6.2 though.\n\nWe here will have to distribute a modified version of Ant 1.6.1, or a modified\nversion of Jasper (with the tempdir) --  or find a way to have the PWD be\nsomething like /tmp.  :-(\n\nThanks for the prompt response."}, {"count": 6, "tags": [], "bug_id": 29391, "is_private": false, "text": "Was responsible for a major bug affecting NetBeans users:\n\nhttp://www.netbeans.org/issues/show_bug.cgi?id=51482\n\nWorkaround was same as Matt's, tempdir=\"${java.io.tmpdir}\". Would recommend for\na merge into 1.6.3, if no unpleasant side effects have surfaced.", "id": 67824, "time": "2004-12-02T22:25:55Z", "creator": "jglick@apache.org", "creation_time": "2004-12-02T22:25:55Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 29391, "attachment_id": null, "id": 67833, "time": "2004-12-02T23:30:59Z", "creator": "mbenson@apache.org", "creation_time": "2004-12-02T23:30:59Z", "is_private": false, "text": "Jesse:  I can merge this from HEAD for 1.6.3 as I have heard of no issues but if\nyou make your tempfile changes from your other bugrep the point will be moot. \nIncidentally I am +0 to those changes..."}, {"count": 8, "tags": [], "bug_id": 29391, "text": "The tempfile changes (bug #32501) were intended for HEAD only, to be on the safe\nside, unless someone sees a need for them in ANT_16_BRANCH. (Is there some\nspecific published policy about what gets merged??) Anyway the patch in #32501\ndoes not include this patch - it presupposes it. So this #29391 should be\nconsidered independently.", "id": 67841, "time": "2004-12-03T00:11:57Z", "creator": "jglick@apache.org", "creation_time": "2004-12-03T00:11:57Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 29391, "attachment_id": null, "id": 67842, "time": "2004-12-03T00:14:43Z", "creator": "mbenson@apache.org", "creation_time": "2004-12-03T00:14:43Z", "is_private": false, "text": "I realize the patch is against HEAD and thus presupposes the\nFileUtils.createTempFile from my original change... it doesn't matter to me, I\nwas just trying to get out of some work.  ;)"}, {"count": 10, "tags": [], "bug_id": 29391, "text": "Please, incorporate this in 1.6.3.\n\nAll Ant packages distributed by JPackages.org and Red Hat (and all other\ncompanies who distribute or build based on JPackages rely on this fix).  Some\nJava packages have worked around this but many did not.  And break!\n\nWe are patching it as we build Ant but we prefer to use pristine upstream tar balls.\n\nWe do appreciate you help on this.\n\n\nRegards to all,\nFernando\n", "id": 67882, "time": "2004-12-03T16:12:59Z", "creator": "fnasser@redhat.com", "creation_time": "2004-12-03T16:12:59Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 29391, "attachment_id": null, "id": 70207, "time": "2005-01-27T22:14:09Z", "creator": "jglick@apache.org", "creation_time": "2005-01-27T22:14:09Z", "is_private": false, "text": "I believe this is now merged for 1.6.3, correct?"}, {"count": 12, "tags": [], "bug_id": 29391, "text": "Right-o.  I did so many merges yesterday I forgot all about stuff like this. \nThanks!", "id": 70208, "time": "2005-01-27T22:29:14Z", "creator": "mbenson@apache.org", "creation_time": "2005-01-27T22:29:14Z", "is_private": false, "attachment_id": null}]