[{"count": 0, "tags": [], "creator": "javadeveloper@netscape.net", "attachment_id": null, "text": "I get an error when trying to create an element that uses a pattern fill with \nBatik 1.1.5.  I have included the stack trace, sample code and a svg file and \nto reproduce the problem.  Sorry this report is so long but there is no way to \nmake attachments so I had to add the source directly in.\n\nRegards\n\nBrian\njavadeveloper@netscape.net\n\n\njava.lang.NullPointerException\n\n\tat \norg.apache.batik.bridge.SVGPatternElementBridge.extractLocalPatternContent\n(Unknown Source)\n\n\tat org.apache.batik.bridge.SVGPatternElementBridge.extractPatternContent\n(Unknown Source)\n\n\tat org.apache.batik.bridge.SVGPatternElementBridge.createPaint(Unknown \nSource)\n\n\tat org.apache.batik.bridge.PaintServer.convertURIPaint(Unknown Source)\n\n\tat org.apache.batik.bridge.PaintServer.convertPaint(Unknown Source)\n\n\tat org.apache.batik.bridge.PaintServer.convertFillPaint(Unknown Source)\n\n\tat org.apache.batik.bridge.PaintServer.convertFillAndStroke(Unknown \nSource)\n\n\tat org.apache.batik.bridge.SVGShapeElementBridge.createShapePainter\n(Unknown Source)\n\n\tat org.apache.batik.bridge.SVGShapeElementBridge.buildGraphicsNode\n(Unknown Source)\n\n\tat org.apache.batik.bridge.GVTBuilder.buildGraphicsNode(Unknown Source)\n\n\tat org.apache.batik.bridge.GVTBuilder.buildComposite(Unknown Source)\n\n\tat org.apache.batik.bridge.GVTBuilder.build(Unknown Source)\n\n\tat com.cc.plaf.svg.SVGTest.loadFile(SVGTest.java:114)\n\n\tat com.cc.plaf.svg.SVGTest.<init>(SVGTest.java:55)\n\n\tat com.cc.plaf.svg.SVGTest.main(SVGTest.java:126)\n\n#######################################\n\nimport java.awt.*;\nimport java.io.*;\n\nimport javax.swing.*;\n\nimport org.apache.batik.bridge.*;\nimport org.apache.batik.dom.svg.SVGDOMImplementation;\nimport org.apache.batik.dom.svg.SAXSVGDocumentFactory;\nimport org.apache.batik.dom.util.SAXDocumentFactory;\nimport org.apache.batik.gvt.*;\nimport org.apache.batik.swing.gvt.JGVTComponent;\n\nimport org.apache.batik.util.XMLResourceDescriptor;\n\nimport org.w3c.dom.*;\n\n/**\n * Displays an element in an SVG tree.\n */\npublic class SVGTest {\n\n    GraphicsNode gnode = null;\n\n    public SVGTest() {\n        JFrame frame = new JFrame();\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.setSize(200,200);\n        loadFile();\n        JGVTComponent c = new JGVTComponent();\n        c.setGraphicsNode(gnode);\n        frame.getContentPane().add(c, BorderLayout.CENTER);\n        frame.setVisible(true);\n    }\n\n    private void loadFile() {\n        try {\n            String parser = XMLResourceDescriptor.getXMLParserClassName();\n            SAXSVGDocumentFactory sdf = new SAXSVGDocumentFactory(parser);\n            File file = new File(\"patterns.svg\");\n            if(!file.exists()) {\n                System.out.println(\"file does not exist\");\n            }\n            String uri = file.toURL().toString();\n            Document doc = sdf.createDocument(uri);\n\n            // gets an SVG element by name\n\n            Element element = null;\n            element = doc.getElementById(\"title\");\n//#### uncomment to button to see work for a node\n            //element = doc.getElementById(\"button\");\n            if(element == null) {\n                System.out.println(\"element not found\");\n                return;\n            }\n\n            UserAgent userAgent = new UserAgentAdapter();\n            DocumentLoader loader = new DocumentLoader(userAgent);\n            loader.loadDocument(uri);\n            BridgeContext bctx = new BridgeContext(userAgent, loader);\n            GVTBuilder builder = new GVTBuilder();\n            //gnode = builder.build(bctx, doc);  // this works but is not what \nI need\n            gnode = builder.build(bctx, element);  // this fails\n            gnode.setPointerEventType(GraphicsNode.VISIBLE_PAINTED);\n            System.out.println(\"completed\");\n        }\n        catch (IOException ioe) {\n            ioe.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        new SVGTest();\n    }\n\n}\n\n##############################\n\n\n<?xml version=\"1.0\" standalone=\"no\"?>\n\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.0//EN\"\n  \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" \nxmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"400\" height=\"400\" viewBox=\"0 \n0 400 400\">\n\n\n  <g id=\"content\">\n    <defs>\n      <pattern id=\"metalRidges\"\n         x=\"0\" y=\"0\" width=\"2\" height=\"2\" viewBox=\"0 0 1 2\"\n         patternContentUnits=\"userSpaceOnUse\" patternUnits=\"userSpaceOnUse\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" style=\"fill:#ccccff\" />\n        <rect x=\"0\" y=\"1\" width=\"1\" height=\"1\" style=\"fill:#222255\" />\n      </pattern>\n\n    <pattern id=\"metalBumps\"\n         x=\"0\" y=\"0\" width=\"4\" height=\"4\" viewBox=\"0 0 4 4\"\n         patternContentUnits=\"userSpaceOnUse\" patternUnits=\"userSpaceOnUse\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" style=\"fill:#ccccff\" />\n        <rect x=\"1\" y=\"1\" width=\"1\" height=\"1\" style=\"fill:#222255\" />\n        <rect x=\"2\" y=\"2\" width=\"1\" height=\"1\" style=\"fill:#ccccff\" />\n        <rect x=\"3\" y=\"3\" width=\"1\" height=\"1\" style=\"fill:#222255\" />\n    </pattern>\n\n      <!-- Gradients -->\n      <radialGradient id=\"specularPaint\" gradientUnits=\"objectBoundingBox\"\n          fx=\".5\" fy=\".2\" r=\".9\">\n        <stop offset=\"0%\" style=\"stop-color:white\"/>\n        <stop offset=\"20%\" style=\"stop-color:#ccccff\"/>\n        <stop offset=\"100%\" style=\"stop-color:#222255\"/>\n      </radialGradient>\n    </defs>\n\n\n    <g id=\"button\">\n        <rect id=\"button-background\" x=\"0\" y=\"0\" width=\"69\" height=\"20\"\n              style=\"fill:url(#specularPaint)\"\n              onmousedown=\"button_click(evt)\"\n              onmouseup=\"button_default(evt)\" />\n        <text id=\"button-text\" x=\"15\" y=\"15\" text-anchor=\"start\" \nfill=\"black\"></text>\n    </g>\n\n    <g id=\"title\" transform=\"translate(0, 200)\">\n      <rect id=\"iframe-header\" x=\"0\" y=\"0\" width=\"150\" height=\"22\" \nstyle=\"fill:url(#specularPaint)\"/>\n      <rect id=\"iframe-filler\" x=\"0\" y=\"3\" width=\"150\" height=\"16\" \nstyle=\"fill:url(#metalRidges); fill-opacity:.25\"/>\n    </g>\n\n  </g>\n</svg>", "id": 13847, "time": "2002-04-17T12:35:41Z", "bug_id": 8203, "creation_time": "2002-04-17T12:35:41Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 8203, "is_private": false, "id": 16816, "attachment_id": null, "creator": "tkormann@apache.org", "creation_time": "2002-05-28T15:25:13Z", "time": "2002-05-28T15:25:13Z", "text": "There is no bug at least with the current cvs codebase (and I guess \nBatik1.5beta2). patterns.svg is displayed properly in the browser.\n\nThe code is 'wrong' because the build(ctx, element) method should not be used \ndirectly. Because of viewport definition or units, the only public method which \nwork in that case is build(ctx, document).\n\nIf you replace gnode = build(ctx, element) by \ngnode = build(ctx, document), that works.\n\nPlease let me know if you still think there is a bug...\nThierry.\n\n"}]