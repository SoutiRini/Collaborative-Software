[{"count": 0, "tags": [], "bug_id": 31162, "attachment_id": null, "id": 63349, "time": "2004-09-10T13:41:07Z", "creator": "bckfnn@worldonline.dk", "creation_time": "2004-09-10T13:41:07Z", "is_private": false, "text": "This patch implements Jeremias proposal.\n\nhttp://nagoya.apache.org/eyebrowse/ReadMsg?listName=fop-dev@xml.apache.org&msgNo=9469\n\nby added a CommandLineLogger that is used as the default logger in\nCommandLineOptions."}, {"count": 1, "tags": [], "text": "Created attachment 12692\nUnified patch against HEAD.", "attachment_id": 12692, "id": 63350, "creator": "bckfnn@worldonline.dk", "time": "2004-09-10T13:42:14Z", "bug_id": 31162, "creation_time": "2004-09-10T13:42:14Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 31162, "text": "Oh, so this is what Jeremias meant.  ;)  Nice implementation, but would like two\nchanges to your patch:\n\n1.) I would like CommandLineLogger to be in the apps package, because I prefer\nthe packages to be more standalone and separable from each other.  CLL is only\nused by CommandLineOptions, so apps IMO is best.\n\n2.) Having the constructor for CommandLineOptions take the args[] parameter\nagain.  I don't like the ability to create objects in an invalid state--in this\ncase, having a CommandLineOptions object alive without having a command-line\noptions string.  So I tend to prefer constructors that require what is needed\nup-front--it saves validation code later.\n\nOtherwise, all looks good.  +1.\n\nGlen\n", "id": 63397, "time": "2004-09-11T16:43:31Z", "creator": "glenmazza@yahoo.com", "creation_time": "2004-09-11T16:43:31Z", "is_private": false, "attachment_id": null}, {"text": "Thanks, Finn. Exactly what I meant.\n\nGlen, would you mind leaving CommandLineLogger in the util package? It's \nbecause we've got at least two other command line applications (PFMReader and \nTTFReader) which could use this class. But I agree with your other point.\n\nJust FYI, I've applied Finn's patch locally and have also made a few trivial \nmodifications (mostly style and javadocs, only the \"\\n\" should have been \nwithin the \"if\"). I will also do the necessary changes for PFMReader and \nTTFReader. I can commit the whole thing quickly.", "tags": [], "creator": "jeremias@apache.org", "attachment_id": null, "count": 3, "id": 63398, "time": "2004-09-11T17:08:25Z", "bug_id": 31162, "creation_time": "2004-09-11T17:08:25Z", "is_private": false}, {"count": 4, "text": "<Q>\nGlen, would you mind leaving CommandLineLogger in the util package? It's \nbecause we've got at least two other command line applications (PFMReader and \nTTFReader) which could use this class. But I agree with your other point.\n</Q>\n\nOK.\n", "creator": "glenmazza@yahoo.com", "is_private": false, "id": 63402, "time": "2004-09-11T18:22:23Z", "bug_id": 31162, "creation_time": "2004-09-11T18:22:23Z", "tags": [], "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 31162, "attachment_id": null, "id": 63404, "time": "2004-09-11T18:59:27Z", "creator": "jeremias@apache.org", "creation_time": "2004-09-11T18:59:27Z", "is_private": false, "text": "Applied."}, {"count": 6, "tags": [], "bug_id": 31162, "attachment_id": null, "id": 63417, "time": "2004-09-12T18:22:04Z", "creator": "bckfnn@worldonline.dk", "creation_time": "2004-09-12T18:22:04Z", "is_private": false, "text": "<Q>\n2.) Having the constructor for CommandLineOptions take the args[] parameter\nagain.  I don't like the ability to create objects in an invalid state--in this\ncase, having a CommandLineOptions object alive without having a command-line\noptions string.  So I tend to prefer constructors that require what is needed\nup-front--it saves validation code later.\n</Q>\n\nSure, but then we need some other way of logging the exceptions thrown during\ncommand argument parsing. Right now we get can get an exception during the\nCommandLineOptions ctor. As a result the \"options\" vrbl is null in Fop.main()\nand we are not able to output the exception to the logger which was created but\nlost during the exception.\n\nTry f.ex:\n\n   fop -fo -pdf out\n\nto see that no information about the exception is printed.\n\nregards,\nfinn"}, {"count": 7, "tags": [], "text": "OK, please fix it then.\n\nXalan [1] doesn't bother with throwing exceptions during command line\nprocessing, they just System.err the message and then call System.exit().  I'd\nlike us to move in that direction, it would also sharply reduce the number of\nFOPExceptions we have. WDYT? (Another pet project of mine, to reduce\nFOPException in favor of what the actual exception is.  BTW, anyone would object\nto us eventually getting rid of FOPException entirely?  I think it breeds bad\ncoding habits, because the developer doesn't stop to think what the actual\nexception type is.)\n\n[1]\nhttp://cvs.apache.org/viewcvs.cgi/xml-xalan/java/src/org/apache/xalan/xslt/Process.java?rev=1.62&view=auto\n\nThanks,\nGlen", "is_private": false, "id": 63440, "creator": "glenmazza@yahoo.com", "time": "2004-09-13T03:22:52Z", "bug_id": 31162, "creation_time": "2004-09-13T03:22:52Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 31162, "attachment_id": null, "id": 155753, "time": "2012-04-01T06:39:10Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:39:10Z", "is_private": false, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed"}]