[{"id": 87310, "tags": [], "bug_id": 39114, "attachment_id": null, "count": 0, "text": "Batik Squigle (SVG Browser) could not handle Wingdings fonts, where as Adobe SVG\nViewer could show text in Windings font.\n\nSee the attachment sample", "time": "2006-03-27T11:34:11Z", "creator": "tonny@kiyut.com", "creation_time": "2006-03-27T11:34:11Z", "is_private": false}, {"count": 1, "tags": [], "creator": "tonny@kiyut.com", "attachment_id": 17994, "id": 87311, "time": "2006-03-27T11:37:40Z", "bug_id": 39114, "creation_time": "2006-03-27T11:37:40Z", "is_private": false, "text": "Created attachment 17994\ntest font wingdings"}, {"count": 2, "tags": [], "creator": "deweese@apache.org", "attachment_id": null, "id": 87381, "time": "2006-03-29T12:10:07Z", "bug_id": 39114, "creation_time": "2006-03-29T12:10:07Z", "is_private": false, "text": "So the problem appears to be that the windgding and symbol fonts \nalways report that they can't display chars.  I can't find an\ninterface on Font that might indicate that that it will behave this\nway.\n\n  I think the only way to solve this will be to special \ncase these fonts."}, {"count": 3, "tags": [], "creator": "eric_suen_cn@hotmail.com", "attachment_id": null, "id": 87384, "time": "2006-03-29T13:16:22Z", "bug_id": 39114, "creation_time": "2006-03-29T13:16:22Z", "is_private": false, "text": "You can find Font2DTest in JDK demo folder, for font like windgding\nyou can't use drawString to display, in that demo, only when you\nchoose \"All Glyphs\", these font will display correctly...\n"}, {"count": 4, "tags": [], "bug_id": 39114, "attachment_id": null, "id": 87391, "creation_time": "2006-03-29T14:02:13Z", "time": "2006-03-29T14:02:13Z", "creator": "deweese@apache.org", "text": "(In reply to comment #3)\n> You can find Font2DTest in JDK demo folder, for font like windgding\n> you can't use drawString to display, in that demo, only when you\n> choose \"All Glyphs\", these font will display correctly...\n\n  Sure, the question is given that I have an java.awt.Font object\nhow can I know that canDisplay can't be trusted?  So if I ask\nwingdings.canDisplay('a') it returns false even though it has a\nglyph for 'a'.  It is important to use canDisplay so that we have\nproper behaviour for foreign languages like Chinese and Japaneese\nthat are often not covered by most fonts.\n\n  Right now the only way I think to test this is to look at the \nfont name, which is fine for the 'well known' example but a poor\ngeneral solution.", "is_private": false}, {"count": 5, "tags": [], "bug_id": 39114, "is_private": false, "id": 87459, "creation_time": "2006-03-31T06:49:52Z", "time": "2006-03-31T06:49:52Z", "creator": "tonny@kiyut.com", "text": "how about using font.canDisplay(int codePoint) instead of font.canDisplay(char c)", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 39114, "attachment_id": null, "id": 87477, "creation_time": "2006-03-31T15:39:24Z", "time": "2006-03-31T15:39:24Z", "creator": "tonny@kiyut.com", "text": "the font.canDisplay(int codePoint)\nOops after check the Javadoc, the above is only available for Java 1.5 or above\nonly. Is batik still maintain Java 1.3 compability ?\n\nProbably below will work since it is availabe for 1.2 as well\n- font.canDisplayUpTo(String str)\n- font.canDisplayUpTo(CharacterIterator iter, int start, int limit)", "is_private": false}, {"count": 7, "tags": [], "creator": "Peter@matrixlink.com", "attachment_id": null, "id": 90313, "time": "2006-06-16T23:22:28Z", "bug_id": 39114, "creation_time": "2006-06-16T23:22:28Z", "is_private": false, "text": "(In reply to comment #2)\n> I think the only way to solve this will be to special\n> case these fonts.\n\nPlease try to find a generic solution - we are seeing the same issue with some\nbarcode fonts.\n\n"}]