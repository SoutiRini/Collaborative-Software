[{"count": 0, "tags": [], "bug_id": 46340, "attachment_id": 22992, "text": "Created attachment 22992\nScript with dependencies that reproduces the error\n\nI'm using <trycatch> task from ant-contrib-1.0b3 library to handle the command failure in my script:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<project name=\"ssh\" basedir=\".\" default=\"ssh\">\n\t<taskdef resource=\"net/sf/antcontrib/antlib.xml\" />\n\n\t<target name=\"ssh\">\n\t\t<trycatch>\n\t\t\t<try>\n\t\t\t\t<sshexec host=\"nevada\"\n\t\t\t\t\tusername=\"resin\"\n\t\t\t\t\tpassword=\"resin\"\n\t\t\t\t\tcommand=\"mkdir /home\" \n\t\t\t\t\ttrust=\"true\" \n\t\t\t\t\toutputproperty=\"tmp.output\" />\n\t\t\t</try>\n\t\t\t<catch>\n\t\t\t\t<echo>tmp.output: ${tmp.output}</echo>\n\t\t\t</catch>\n\t\t</trycatch>\n\t</target>\n</project>\n\nWith Ant 1.7.1 I get this output:\n[echo] tmp.output: ${tmp.output}\n\nBut Ant 1.7.0 gives what I'm expecting:\n[echo] tmp.output: mkdir: cannot create directory `/home': File exists\n\n====================================================================\nSource code examination\n====================================================================\nSSHExec from Ant 1.7.1 uses this code to set outputproperty:\n\nString output = \"\";\nwhile ((cmd = br.readLine()) != null) {\n    log(\"cmd : \" + cmd, Project.MSG_INFO);\n    ByteArrayOutputStream out = executeCommand(session, cmd);\n    output += cmd + \" : \" + out + \"\\n\";\n}\nif (outputProperty != null) {\n    //#bugzilla 43437\n    getProject().setNewProperty(outputProperty, output);\n}\n\nThe problem is that when command return code is not 0 executeCommand throws BuildException and hence outputproperty is not sent because BuildException is thrown BEFORE it.\n\nIn Ant 1.7.0 BuildException (because of non 0 return code) is thrown AFTER setting of outputproperty:\n\nByteArrayOutputStream out = new ByteArrayOutputStream();\n\nif (outputProperty != null) {\n    getProject().setProperty(outputProperty, out.toString());\n}\nif (outputFile != null) {\n    writeToFile(out.toString(), append, outputFile);\n}\n\n// this is the wrong test if the remote OS is OpenVMS,\n// but there doesn't seem to be a way to detect it.\nint ec = channel.getExitStatus();\nif (ec != 0) {\n    String msg = \"Remote command failed with exit status \" + ec;\n    if (getFailonerror()) {\n        throw new BuildException(msg);\n    } else {\n        log(msg, Project.MSG_ERR);\n    }\n}", "id": 123084, "time": "2008-12-04T08:14:10Z", "creator": "wheleph@gmail.com", "creation_time": "2008-12-04T08:14:10Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 46340, "is_private": false, "text": "fixed in svn revision 723422", "id": 123093, "time": "2008-12-04T12:19:08Z", "creator": "bodewig@apache.org", "creation_time": "2008-12-04T12:19:08Z", "attachment_id": null}]