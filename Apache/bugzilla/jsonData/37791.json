[{"count": 0, "tags": [], "bug_id": 37791, "is_private": false, "text": "Consider the following configuration:\n\n\nErrorDocument 400 /server_error.html\n\nListen  some.server.com:443 \n<VirtualHost some.server.com:443>\n\nServerName   some.server.com:443\n\nSSLEngine               On\nSSLProtocol             +TLSv1 +SSLv3\nSSLCipherSuite          !EXPORT56:RC4-MD5:DES-CBC3-SHA:EXP-RC4-MD5\nSSLOptions              +OptRenegotiate +StdEnvVars\nSSLCertificateFile      server-cert.pem\n\n<Location / >\nSSLCipherSuite DES-CBC3-SHA\n</Location>\n\n</VirtualHost>  \n\nIf a client is connection plain to the SSL port, the server cores with the\nfollowing stack: (debug build on solaris)\n\ndummy_worker(opaque = 0x156088)\nworker_thread(thd = 0x156088, dummy = 0x22b020)\nprocess_socket(p = 0x23a4a8, sock = 0x23a4e0, my_child_num = 0, my_thread_num =\n9, bucket_alloc = 0x23c4b0)\nap_process_connection(c = 0x23a5d0, csd = 0x23a4e0)\nap_run_process_connection(0x23a5d0, 0x23a4e0, 0x23a4e0, 0x9, 0x23a5c8, 0x23c4b0)\nap_process_http_connection(c = 0x23a5d0)\nap_read_request(conn = 0x23a5d0)\nap_die(type = 400, r = 0x244500)\nap_internal_redirect(new_uri = 0x150410 \"/server_error.html\", r = 0x244500)\nap_process_request_internal(r = 0x245388)\nap_run_access_checker(0x245388, 0xfee9630c, 0x245c92, 0xffffffff, 0xfffffff8,\n0x245510)\nssl_hook_Access(r = 0x245388)\nSSL_get_current_cipher(s = (nil))\n\nThe problems is that by ap_internal_redirect the ssl_hook_Access(..)\nwill now be called, and that method does not handle the case ssl == NULL.\n\nFix:\ndo not run the access-checker-hooks for the error handling\n\nConfig workaround:\nConfigure also 'SSSLRequire' if you configure 'SSLSLCipherSuite'\nfor any location.\n\nWe tested the described behaviour with apache/2.0.53 and apache/2.1.9", "id": 83237, "time": "2005-12-05T17:04:52Z", "creator": "hartmut.keil@gmx.ch", "creation_time": "2005-12-05T17:04:52Z", "attachment_id": null}, {"count": 1, "text": "Thanks for the report, this has been fixed on the trunk:\n\nhttp://svn.apache.org/viewcvs.cgi?rev=354394&view=rev", "bug_id": 37791, "is_private": false, "id": 83324, "time": "2005-12-06T17:57:32Z", "creator": "jorton@redhat.com", "creation_time": "2005-12-06T17:57:32Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 37791, "attachment_id": 17393, "id": 84495, "time": "2006-01-11T23:28:08Z", "creator": "rpluem@apache.org", "creation_time": "2006-01-11T23:28:08Z", "is_private": false, "text": "Created attachment 17393\nPatch against 2.0.x"}, {"count": 3, "tags": [], "bug_id": 37791, "attachment_id": null, "id": 84498, "time": "2006-01-11T23:39:35Z", "creator": "rpluem@apache.org", "creation_time": "2006-01-11T23:39:35Z", "is_private": false, "text": "Proposed for backport to 2.2.x as r355720\n(http://svn.apache.org/viewcvs.cgi?rev=355720&view=rev) and proposed for\nbackport to 2.0.x as r368152\n(http://svn.apache.org/viewcvs.cgi?rev=368152&view=rev).\nThere is also a CVEID for this bug: CAN-2005-3357"}, {"count": 4, "tags": [], "bug_id": 37791, "attachment_id": null, "id": 85110, "time": "2006-01-27T15:14:58Z", "creator": "marc.stern@approach.be", "creation_time": "2006-01-27T15:14:58Z", "is_private": false, "text": "Doesn't the same problem also appear at the very beginning of in ssl_hook_Fixup() ?\n\nif (!(sc->enabled && sslconn && (ssl = sslconn->ssl)))\n   should become\nif ( !sc->enabled || !sslconn || (ssl != sslconn->ssl) )\n\nRight ?"}, {"count": 5, "tags": [], "bug_id": 37791, "attachment_id": null, "id": 85146, "time": "2006-01-28T01:17:36Z", "creator": "rpluem@apache.org", "creation_time": "2006-01-28T01:17:36Z", "is_private": false, "text": "(In reply to comment #4)\n> \n> if (!(sc->enabled && sslconn && (ssl = sslconn->ssl)))\n>    should become\n> if ( !sc->enabled || !sslconn || (ssl != sslconn->ssl) )\n> \n> Right ?\n\nNo.\n\n1. Your version is nearly the same as above because\n\n!(sc->enabled && sslconn && (ssl = sslconn->ssl))  is equal to\n\n!sc->enabled || !sslconn || !(ssl == sslconn->ssl)\n\nkeep in mind that \n\nssl = sslconn->ssl\n\nand\n\nssl == sslconn->ssl\n\nare different things. So the original condition becomes true if sslconn->ssl is\nequal to NULL which is only checked if sslconn is different from NULL.\nBut I need to check on the trunk where the current condition is somewhat\ndifferent and maybe also wrong. So thanks for the pointer.\n"}, {"text": "Meanwhile I checked the slightly different condition on trunk and 2.2.x and they\nare also correct.", "tags": [], "creator": "rpluem@apache.org", "is_private": false, "count": 6, "id": 85170, "time": "2006-01-29T12:12:19Z", "bug_id": 37791, "creation_time": "2006-01-29T12:12:19Z", "attachment_id": null}, {"count": 7, "text": "I read too fast, sorry :-(", "bug_id": 37791, "is_private": false, "id": 85187, "time": "2006-01-30T09:25:36Z", "creator": "marc.stern@approach.be", "creation_time": "2006-01-30T09:25:36Z", "tags": [], "attachment_id": null}]