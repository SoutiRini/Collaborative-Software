[{"count": 0, "tags": [], "bug_id": 42049, "attachment_id": null, "id": 101430, "time": "2007-04-04T10:50:04Z", "creator": "vschappert@bloomberg.net", "creation_time": "2007-04-04T10:50:04Z", "is_private": false, "text": "RTF rendering of tables inside a block with a positive \"margin-left\" property \nis exhibiting different behaviour than rendering of AWT/PS/&c.  In particular, \nin the RTF render, tables always seem to be left-aligned even if their parent \nhas a positive margin-left.  However, the same tables are indented as one would \nexpect in the other render modes.\n\nConsider this stylesheet (it will work with any XML file if you run fop -xml \nany_file -xsl file_provided_below -rtf output_file.rtf\n\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n\n<!-- desc: reproduce problem where RTF table is rendered with incorrect -->\n<!--       margin but PS/AWT versions rendered with correct margin.     -->\n\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n                              xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n    <xsl:template match=\"/\">\n        <fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n            <fo:layout-master-set>\n                <fo:simple-page-master master-name=\"A4\">\n                    <fo:region-body margin-left=\"0.26in\" margin-right=\"0.25in\" \nmargin-top=\"0.17in\" margin-bottom=\"0.17in\"/>\n                </fo:simple-page-master>\n            </fo:layout-master-set>\n\n            <fo:page-sequence master-reference=\"A4\">\n                <fo:flow flow-name=\"xsl-region-body\">\n                    <fo:block margin-left=\"0.8in\" padding-left=\"0in\" font-\nfamily=\"arial\" font-size=\"8pt\">\n\n                        <!-- a block indented by the margin, correctly. -->\n                        <fo:block padding-bottom=\"10pt\">Some correctly indented \ntext.</fo:block>\n\n                        <!-- a table incorrectly indented. -->\n                        <fo:table table-layout=\"fixed\" padding-bottom=\"2.7pt\">\n                            <fo:table-column column-width=\"2in\"/>\n                            <fo:table-column column-width=\"2in\"/>\n                            <fo:table-body>\n                                <fo:table-row>\n                                    <fo:table-cell margin-left=\"0in\">\n                                        <fo:block>Should align with</fo:block>\n                                    </fo:table-cell>\n                                    <fo:table-cell margin-left=\"0in\">\n                                        <fo:block>Text above</fo:block>\n                                    </fo:table-cell>\n                                </fo:table-row>\n                            </fo:table-body>\n                        </fo:table>\n                    </fo:block>\n                </fo:flow>\n            </fo:page-sequence>\n        </fo:root>\n    </xsl:template>\n</xsl:stylesheet>"}, {"count": 1, "tags": [], "bug_id": 42049, "attachment_id": null, "is_private": false, "id": 101431, "time": "2007-04-04T10:52:06Z", "creator": "vschappert@bloomberg.net", "creation_time": "2007-04-04T10:52:06Z", "text": "RTF rendering of tables inside a block with a positive \"margin-left\" property \nis exhibiting different behaviour than rendering of AWT/PS/&c.  In particular, \nin the RTF render, tables always seem to be left-aligned even if their parent \nhas a positive margin-left.  However, the same tables are indented as one would \nexpect in the other render modes.\n\nConsider this stylesheet (it will work with any XML file if you run fop -xml \nany_file -xsl file_provided_below -rtf output_file.rtf\n\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n\n<!-- desc: reproduce problem where RTF table is rendered with incorrect -->\n<!--       margin but PS/AWT versions rendered with correct margin.     -->\n\n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n                              xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n    <xsl:template match=\"/\">\n        <fo:root xmlns:fo=\"http://www.w3.org/1999/XSL/Format\">\n            <fo:layout-master-set>\n                <fo:simple-page-master master-name=\"A4\">\n                    <fo:region-body margin-left=\"0.26in\" margin-right=\"0.25in\" \nmargin-top=\"0.17in\" margin-bottom=\"0.17in\"/>\n                </fo:simple-page-master>\n            </fo:layout-master-set>\n\n            <fo:page-sequence master-reference=\"A4\">\n                <fo:flow flow-name=\"xsl-region-body\">\n                    <fo:block margin-left=\"0.8in\" padding-left=\"0in\" font-\nfamily=\"arial\" font-size=\"8pt\">\n\n                        <!-- a block indented by the margin, correctly. -->\n                        <fo:block padding-bottom=\"10pt\">Some correctly indented \ntext.</fo:block>\n\n                        <!-- a table incorrectly indented. -->\n                        <fo:table table-layout=\"fixed\" padding-bottom=\"2.7pt\">\n                            <fo:table-column column-width=\"2in\"/>\n                            <fo:table-column column-width=\"2in\"/>\n                            <fo:table-body>\n                                <fo:table-row>\n                                    <fo:table-cell margin-left=\"0in\">\n                                        <fo:block>Should align with</fo:block>\n                                    </fo:table-cell>\n                                    <fo:table-cell margin-left=\"0in\">\n                                        <fo:block>Text above</fo:block>\n                                    </fo:table-cell>\n                                </fo:table-row>\n                            </fo:table-body>\n                        </fo:table>\n                    </fo:block>\n                </fo:flow>\n            </fo:page-sequence>\n        </fo:root>\n    </xsl:template>\n</xsl:stylesheet>"}, {"count": 2, "tags": [], "text": "An additional point: there is a general bug in the entire FOP processor in which\nindent properties are being passed to the children of tables.  In PDF, this\nmanifests itself by a rightward shifting of the table cells out of the content\narea of the table itself.  In RTF, this means that even though the table is\nincorrectly NOT indented by its start-indent figure, the cells inside it ARE\nindented!  This is the opposite of what should happen.  Try the following fo\nsnippet under RTF and PDF.  Using Altsoft's free XSL-FO Debugger, you can see\nhow things should be.\n\n<fo:table table-layout=\"fixed\" width=\"50%\">\n    <fo:table-column width=\"50%\"/>\n    <fo:table-column width=\"50%\"/>\n    <fo:table-body>\n        <fo:table-row>\n            <fo:table-cell><fo:block>XXX</fo:block></fo:table-cell>\n            <fo:table-cell><fo:block>YYY</fo:block></fo:table-cell>\n        </fo:table-row>\n    </fo:table-body>\n</fo:table>\n", "attachment_id": null, "bug_id": 42049, "id": 106836, "time": "2007-08-16T15:24:26Z", "creator": "vschappert@bloomberg.net", "creation_time": "2007-08-16T15:24:26Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 42049, "is_private": false, "id": 106837, "time": "2007-08-16T15:26:13Z", "creator": "vschappert@bloomberg.net", "creation_time": "2007-08-16T15:26:13Z", "tags": [], "text": "Pardon me.  In above example, I forgot to add a 'start-indent=\"2in\"' onto the\ntable.  The opening table node should read:\n\n<fo:table table-layout=\"fixed\" width=\"50%\" start-indent=\"2in\">"}, {"count": 4, "tags": [], "text": "V Schappert;\n\nFOP does not have a bug wrt Indent inheritence. FOP implements indent \ninheritence according to the XSL-FO specification. Other implementations are \nnot compliant. Although perhaps they are more along the lines of what Users \nwould expect. See the following Wiki for a detailed explanation of indent \ninheritence:\n\nhttp://wiki.apache.org/xmlgraphics-fop/IndentInheritance", "is_private": false, "id": 106854, "creator": "bowditch_chris@hotmail.com", "time": "2007-08-17T07:25:07Z", "bug_id": 42049, "creation_time": "2007-08-17T07:25:07Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "Hi,\n\nIf FOP has no bugs for indent inheritance, I suggest running this snippet:\n\n    <fo:table\n        space-before=\"1in\"\n        margin-left=\"2in\"\n        border-width=\"10%\"\n        border-color=\"black\"\n        border-style=\"solid\"\n        background-color=\"lightblue\"\n        padding=\"0.5in\"\n        table-layout=\"fixed\" width=\"60%\">\n        <fo:table-column column-width=\"1in\"/>\n        <fo:table-column column-width=\"1in\"/>\n        <fo:table-body>\n        <fo:table-row>\n             <fo:table-cell background-color=\"blue\">\n                 <fo:block>XXXX</fo:block></fo:table-cell>\n             <fo:table-cell background-color=\"gray\">\n                 <fo:block>YYYY</fo:block>\n             </fo:table-cell>\n        </fo:table-row>\n        </fo:table-body>\n    </fo:table>\n\nI'm curious why the cell backgrounds are painted where they are expected, and\nthen the cell TEXT is painted outside and to the right of the cell backgrounds.\n Surely this must be a bug.\n\nSecondly, if margin-left isn't inherited, then while you are correct that the\noriginal behaviour in RTF I mentioned is wrong, the table snippet causes FOP to\ngenerate incorrect RTF, b/c the \\par paragraph elements (e.g. blocks) are\ninheriting the margin-left, causing the text \"XXXX\" and \"YYYY\" to be indented so\nfar into the cell that it is invisible...\n\nInterested in your comments.\n\nBest,\n\nV", "attachment_id": null, "bug_id": 42049, "id": 106855, "time": "2007-08-17T07:48:32Z", "creator": "vschappert@bloomberg.net", "creation_time": "2007-08-17T07:48:32Z", "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 42049, "is_private": false, "id": 106856, "time": "2007-08-17T07:49:42Z", "creator": "vschappert@bloomberg.net", "creation_time": "2007-08-17T07:49:42Z", "tags": [], "text": "Hi,\n\nIf FOP has no bugs for indent inheritance, I suggest running this snippet:\n\n    <fo:table\n        space-before=\"1in\"\n        margin-left=\"2in\"\n        border-width=\"10%\"\n        border-color=\"black\"\n        border-style=\"solid\"\n        background-color=\"lightblue\"\n        padding=\"0.5in\"\n        table-layout=\"fixed\" width=\"60%\">\n        <fo:table-column column-width=\"1in\"/>\n        <fo:table-column column-width=\"1in\"/>\n        <fo:table-body>\n        <fo:table-row>\n             <fo:table-cell background-color=\"blue\">\n                 <fo:block>XXXX</fo:block></fo:table-cell>\n             <fo:table-cell background-color=\"gray\">\n                 <fo:block>YYYY</fo:block>\n             </fo:table-cell>\n        </fo:table-row>\n        </fo:table-body>\n    </fo:table>\n\nI'm curious why the cell backgrounds are painted where they are expected, and\nthen the cell TEXT is painted outside and to the right of the cell backgrounds.\n Surely this must be a bug.\n\nSecondly, if margin-left isn't inherited, then while you are correct that the\noriginal behaviour in RTF I mentioned is wrong, the table snippet causes FOP to\ngenerate incorrect RTF, b/c the \\par paragraph elements (e.g. blocks) are\ninheriting the margin-left, causing the text \"XXXX\" and \"YYYY\" to be indented so\nfar into the cell that it is invisible...\n\nInterested in your comments.\n\nBest,\n\nV"}, {"count": 7, "tags": [], "creator": "vschappert@bloomberg.net", "is_private": false, "text": "Well, I'm not a huge fan of Bugzilla, that's for sure!\n\nIn the above post, I mention: \"Secondly, if margin-left isn't inherited, then\nwhile you are correct that the original behaviour in RTF I mentioned is\nwrong...\".  My meaning isn't very clear.  What I mean to say is that you are\ncorrect that the original behaviour I mentioned about RTF is **correct\nbehaviour**...  However, the other issues still stand!", "id": 106857, "time": "2007-08-17T07:52:12Z", "bug_id": 42049, "creation_time": "2007-08-17T07:52:12Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "Created attachment 20775\nIndent inheritance test - PDF generated by fop 0.20.5", "is_private": false, "id": 107743, "creator": "johannes.midgren@labs2.com", "time": "2007-09-05T07:31:14Z", "bug_id": 42049, "creation_time": "2007-09-05T07:31:14Z", "attachment_id": 20775}, {"count": 9, "tags": [], "bug_id": 42049, "attachment_id": 20776, "is_private": false, "id": 107744, "time": "2007-09-05T07:31:42Z", "creator": "johannes.midgren@labs2.com", "creation_time": "2007-09-05T07:31:42Z", "text": "Created attachment 20776\nIndent inheritance test - PDF generated by fop 0.94"}, {"count": 10, "tags": [], "bug_id": 42049, "attachment_id": null, "id": 107745, "time": "2007-09-05T07:36:47Z", "creator": "johannes.midgren@labs2.com", "creation_time": "2007-09-05T07:36:47Z", "is_private": false, "text": "(In reply to comment #4)\n> V Schappert;\n> \n> FOP does not have a bug wrt Indent inheritence. FOP implements indent \n> inheritence according to the XSL-FO specification. Other implementations are \n> not compliant. Although perhaps they are more along the lines of what Users \n> would expect. See the following Wiki for a detailed explanation of indent \n> inheritence:\n> \n> http://wiki.apache.org/xmlgraphics-fop/IndentInheritance\n\nIt's not clear what version of fop (any of you) are referring to. I tried to\ngenerate the examples\n(http://people.apache.org/~jeremias/fop/indent-inheritance2.fo) found on the\nWiki mentioned above and got different results for the versions I tried. The\nversions I tried were 0.20.5 and 0.94.\n\nI'm not sure which one is correct, but I assume fop 0.20.5 got it right (0.94\nseems to give nested blocks where start-indent has been reset a negative indent\nrelative its containing block - or did I miss something :-)."}, {"count": 11, "tags": [], "bug_id": 42049, "attachment_id": null, "id": 107753, "time": "2007-09-05T12:09:06Z", "creator": "adelmelle@apache.org", "creation_time": "2007-09-05T12:09:06Z", "is_private": false, "text": "(In reply to comment #10)\n> It's not clear what version of fop (any of you) are referring to. I tried to\n> generate the examples\n> (http://people.apache.org/~jeremias/fop/indent-inheritance2.fo) found on the\n> Wiki mentioned above and got different results for the versions I tried. The\n> versions I tried were 0.20.5 and 0.94.\n> \n> I'm not sure which one is correct, but I assume fop 0.20.5 got it right (0.94\n> seems to give nested blocks where start-indent has been reset a negative indent\n> relative its containing block - or did I miss something :-).\n\nYes, you seem to have missed the point on the Wiki :-) \nIndent-inheritance precisely means that a descendant block of another block with start-indent > 0 will \ninherit the indent from its ancestor. Since this ancestor is already 'displaced', the nested block will in \nfact appear to have *twice* the indent of the ancestor. Jeremias verified this with the XSL-FO editors, \nand they agreed that that unexpected behavior is in fact correct. To achieve the effect that seems to be \ngenerally expected, an author would always need to reset the indent on the block in question. Its \ndescendants then inherit the zero indent etc.\n\nSo, the real problem seems to be limited to the RTF renderer here, which currently behaves non-\ncompliant.\n\nThere is a configuration option you can use to make FOP behave as expected, but I would only really \nuse it if it's too much trouble to reset the start-indents.\n\nHope it makes sense now.\n\nCheers\n\nAndreas"}, {"count": 12, "tags": [], "creator": "johannes.midgren@labs2.com", "attachment_id": null, "is_private": false, "id": 107765, "time": "2007-09-06T00:22:00Z", "bug_id": 42049, "creation_time": "2007-09-06T00:22:00Z", "text": "(In reply to comment #11)\n\nThanks for your reply, Andreas! I can see that the example generated by fop 0.94\nis correct when it comes to inheriting start-indent.\n\nThe concern I had was with the second table of the example. The code looks like\nthis:\n\n      <fo:block space-before=\"10pt\" font-style=\"italic\">start-indent specified\non outer block, table inside (start-indent reset on fo:table)</fo:block>\n      <fo:block background-color=\"#FFFFCC\">unindented block</fo:block>\n      <fo:block background-color=\"yellow\" start-indent=\"10pt\">fo:block\n        <fo:table table-layout=\"fixed\" start-indent=\"0pt\">\n          <fo:table-column number-columns-repeated=\"2\"/>\n          <fo:table-body>\n            <fo:table-row>\n              <fo:table-cell>\n                <fo:block background-color=\"orange\">cell 1</fo:block>\n              </fo:table-cell>\n              <fo:table-cell>\n                <fo:block background-color=\"red\">cell 2</fo:block>\n              </fo:table-cell>\n            </fo:table-row>\n          </fo:table-body>\n        </fo:table>\n      </fo:block>\n\nand the result is like this:\n\nunindented block\n  fo:block\ncell 1 cell 2\n\nI expected the result to be like this:\n\nunindented block\n  fo:block\n  cell 1 cell 2\n\nI now realize that it may have to do with \"viewport/reference pair\" (as\nmentioned in the Wiki, referenced to 6.5.3 of the spec.). What I like to do is\nto achieve my expect result above. I have now learned this can be accomplished\nwith the following construction:\n\n<fo:block>unindented block</fo:block>\n<fo:block-container margin-left=\"10mm\">\n  <fo:table start-indent=\"0mm\" table-layout=\"fixed\">\n    <fo:table-column number-columns-repeated=\"2\"/>\n    <fo:table-body>\n      <fo:table-row>\n        <fo:table-cell>\n          <fo:block background-color=\"orange\">cell 1</fo:block>\n        </fo:table-cell>\n        <fo:table-cell>\n          <fo:block background-color=\"red\">cell 2</fo:block>\n        </fo:table-cell>\n      </fo:table-row>\n    </fo:table-body>\n  </fo:table>\n</fo:block-container>\n\nI would be grateful if someone could verify that I got it right, so my style\nsheet will still be working as expected with coming versions of fop :-)\n\nThank you!"}, {"count": 13, "tags": [], "text": "(In reply to comment #12)\n<snip /> \n> and the result is like this:\n> \n> unindented block\n>   fo:block\n> cell 1 cell 2\n\nYep, because the block does not establish its own reference area, the indent of 0pt on the table is \nrelative to the ancestor reference area of the block.\n\n> \n> I expected the result to be like this:\n> \n> unindented block\n>   fo:block\n>   cell 1 cell 2\n\n... and a lot of users/authors with you, I think. That's precisely why Jeremias dedicated a Wiki page to \nthe issue.\n\n> I now realize that it may have to do with \"viewport/reference pair\" (as\n> mentioned in the Wiki, referenced to 6.5.3 of the spec.). What I like to do is\n> to achieve my expect result above. I have now learned this can be accomplished\n> with the following construction:\n> \n> <fo:block>unindented block</fo:block>\n> <fo:block-container margin-left=\"10mm\">\n>   <fo:table start-indent=\"0mm\" table-layout=\"fixed\">\n\nCorrect. The block-container establishes a new reference area, that will serve as a basis for computing \nthe offset of the enclosed table. \nOne small remark: using 'start-indent' instead of 'margin-left' is considered slightly better style, since \nstart-indent is a 'native' XSL-FO property. \nmargin-left is defined to preserve compatibility with CSS; it is translated into start-indent behind the \nscenes anyway... margin-left is not inherited, but the computed start-indent is, so it really makes no \ndifference.\n\nCheers\n\nAndreas", "is_private": false, "id": 107782, "creator": "adelmelle@apache.org", "time": "2007-09-06T10:33:44Z", "bug_id": 42049, "creation_time": "2007-09-06T10:33:44Z", "attachment_id": null}, {"count": 14, "tags": [], "creator": "adelmelle@apache.org", "is_private": false, "text": "(In reply to comment #13)\n\nBTW, forgot to mention, another way of achieving the result you seek is specifying the start-indent directly \non the fo:table. In that case, one does need to reset the indent on the fo:table-body, -header and -footer \nto prevent it from being inherited by the table-cells and their content.", "id": 107783, "time": "2007-09-06T10:48:37Z", "bug_id": 42049, "creation_time": "2007-09-06T10:48:37Z", "attachment_id": null}, {"count": 15, "tags": [], "text": "resetting P2 open bugs to P3 pending further review", "attachment_id": null, "bug_id": 42049, "id": 157396, "time": "2012-04-07T01:42:24Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:42:24Z", "is_private": false}]