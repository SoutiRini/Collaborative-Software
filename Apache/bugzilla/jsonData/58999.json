[{"count": 0, "tags": [], "creator": "svella@technologist.com", "attachment_id": null, "text": "This appears to be caused by the recent change listed in the changelog as:\n\n\"Fix class loader decision on the delegation for class loading and resource lookup and make it faster too. (rjung)\"\n\norg.apache.catalina.loader.WebAppClassLoaderBase.filter() is testing if name starts with \"javax\" or \"org\", and then tries to get the next character using name.charAt(). But if name is just \"javax\" or \"org\", then name.charAt() for the next character will throw StringIndexOutOfBoundsException.\n\nthe following jsp demonstrates the issue:\n\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n<html>\n<head>\n    <title>$Title$</title>\n</head>\n<body>\n<%\n    Class.forName(\"org\");\n%>\n</body>\n</html>\n\nWhich results in rather than the expected ClassNotFoundException, causes instead:\n\njava.lang.StringIndexOutOfBoundsException: String index out of range: 3\n\tjava.lang.String.charAt(String.java:658)\n\torg.apache.catalina.loader.WebappClassLoaderBase.filter(WebappClassLoaderBase.java:2780)\n\torg.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1253)\n\torg.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1142)\n\torg.apache.jasper.servlet.JasperLoader.loadClass(JasperLoader.java:125)\n\torg.apache.jasper.servlet.JasperLoader.loadClass(JasperLoader.java:62)\n\tjava.lang.Class.forName0(Native Method)\n\tjava.lang.Class.forName(Class.java:264)\n\torg.apache.jsp.index_jsp._jspService(index_jsp.java:116)\n\torg.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:729)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:438)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:396)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:340)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:729)\n\torg.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n\nWhile this example is contrived, it causes real world problems for Mozilla Rhino which is testing \"java\", \"javax\", \"org\", \"com\", \"edu\", \"net\", to make sure that they are indeed top-level packages and do not resolve to a class and can deal with the expected ClassNotFoundException but can't deal with the unexpected StringIndexOutOfBoundsException.", "id": 188376, "time": "2016-02-11T21:05:03Z", "bug_id": 58999, "creation_time": "2016-02-11T21:05:03Z", "is_private": false}, {"count": 1, "text": "Created attachment 33549\npatch\n\nHi,\n\nI'm attaching here a patch proposal so that others can comment.\n\nI found one more problem:\n\nPackages \norg.apache.tomcat.jdbc \njavax.servlet.jsp.jstl \n\nshould be permitted, but the current implementation allows only sub packages for these packages.\n\nRegards,\nVioleta", "bug_id": 58999, "attachment_id": 33549, "id": 188385, "time": "2016-02-12T08:25:17Z", "creator": "violetagg@apache.org", "creation_time": "2016-02-12T08:25:17Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "text": "Looked over the patch and I think the changes for org.apache.tomcat.jdbc \njavax.servlet.jsp.jstl will now incorrectly detect things like org.apache.tomcat.jdbcx and javax.servlet.jsp.jstly - Not very likely to happen in the wild I know, but I wouldn't have thought org and javax would have been very likely either.", "is_private": false, "bug_id": 58999, "id": 188387, "time": "2016-02-12T15:34:09Z", "creator": "svella@technologist.com", "creation_time": "2016-02-12T15:34:09Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 58999, "is_private": false, "count": 3, "id": 188388, "time": "2016-02-12T16:49:45Z", "creator": "violetagg@apache.org", "creation_time": "2016-02-12T16:49:45Z", "text": "(In reply to Shon Vella from comment #2)\n> Looked over the patch and I think the changes for org.apache.tomcat.jdbc \n> javax.servlet.jsp.jstl will now incorrectly detect things like\n> org.apache.tomcat.jdbcx and javax.servlet.jsp.jstly - Not very likely to\n> happen in the wild I know, but I wouldn't have thought org and javax would\n> have been very likely either.\n\nIf you read again the code you will see that the check for these packages (org.apache.tomcat.jdbc, javax.servlet.jsp.jstl) is introduced in order to permit them not to deny them.\nSo if there are packages in the client code that are like those that you described above then they will be permitted.\n\nRegards,\nVioleta"}, {"count": 4, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 188393, "time": "2016-02-12T20:48:20Z", "bug_id": 58999, "creation_time": "2016-02-12T20:48:20Z", "is_private": false, "text": "Thanks to the OP for analysing the problem and to Violeta for the patch.\n\nPlease have a look at r1730101, which fixes the StringIndexOutOfBoundsException.\n\nThe onyl problem I saw was the charAt(), because indeed the index could have been to big. For the startsWith(), this can not happen, because the given index is always equals to the known minimal length of the string (one more than the last index of the string). Javadoc tells us this is allowed, even an index bigger than the string length is allowed here: \"The result is false if toffset is negative or greater than the length of this String object\".\n\nConcerning the filtering, when the name parameter is exactly equals to one of the denied package names (package names to filter), IMHO it is OK to permit them unless they are followed by a sub package, class or resource name. I see no harm in permitting the package names without anything after them.\n\nIf you agree, I'll backport."}, {"count": 5, "tags": [], "text": "(In reply to Rainer Jung from comment #4)\n> Thanks to the OP for analysing the problem and to Violeta for the patch.\n> \n> Please have a look at r1730101, which fixes the\n> StringIndexOutOfBoundsException.\n> \n> The onyl problem I saw was the charAt(), because indeed the index could have\n> been to big. For the startsWith(), this can not happen, because the given\n> index is always equals to the known minimal length of the string (one more\n> than the last index of the string). Javadoc tells us this is allowed, even\n> an index bigger than the string length is allowed here: \"The result is false\n> if toffset is negative or greater than the length of this String object\".\n> \n> Concerning the filtering, when the name parameter is exactly equals to one\n> of the denied package names (package names to filter), IMHO it is OK to\n> permit them unless they are followed by a sub package, class or resource\n> name. I see no harm in permitting the package names without anything after\n> them.\n> \n> If you agree, I'll backport.\n\nThanks,\nVioleta", "attachment_id": null, "bug_id": 58999, "id": 188394, "time": "2016-02-13T07:51:12Z", "creator": "violetagg@apache.org", "creation_time": "2016-02-13T07:51:12Z", "is_private": false}, {"count": 6, "tags": [], "text": "Backported to TC 8 in r1730178.", "attachment_id": null, "bug_id": 58999, "id": 188395, "time": "2016-02-13T11:00:51Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2016-02-13T11:00:51Z", "is_private": false}, {"count": 7, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 188396, "time": "2016-02-13T11:02:02Z", "bug_id": 58999, "creation_time": "2016-02-13T11:02:02Z", "is_private": false, "text": "The fix will be part of the next releases 9.0.0.M4 and 8.0.33."}, {"count": 8, "tags": [], "text": "I got the same exception if I use a script engine in a servlet. I created a test case and attached it to the ticket. If you would like to check if this corner case is also fixed run \"mvn clean verify\" in the folder contained in the attached zip.", "attachment_id": null, "bug_id": 58999, "id": 188444, "time": "2016-02-15T15:59:56Z", "creator": "sebastian.staack@zuehlke.com", "creation_time": "2016-02-15T15:59:56Z", "is_private": false}, {"count": 9, "tags": [], "text": "Created attachment 33559\nTest case to reproduce the bug when using a script engine in a servlet", "attachment_id": 33559, "bug_id": 58999, "id": 188445, "time": "2016-02-15T16:01:51Z", "creator": "sebastian.staack@zuehlke.com", "creation_time": "2016-02-15T16:01:51Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 58999, "is_private": false, "count": 10, "id": 188449, "time": "2016-02-15T19:25:08Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2016-02-15T19:25:08Z", "text": "Your test case shows the same problem, trying to load a class named \"org\". I added logging to the filter method to track what calls it gets.\n\nI replaced the catalina.jar from 8.0.32 with one from the current tc8.0.x HEAD, and the test case then succeeds. So the fix we have already applied for the next release also fixes your test.\n\nYou can apply the following patch/fix on top of TC 8.0.32 if you like.\n\nRegards,\n\nRainer"}, {"count": 11, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 188450, "time": "2016-02-15T19:25:23Z", "bug_id": 58999, "creation_time": "2016-02-15T19:25:23Z", "is_private": false, "text": "Oups, the following:\n\nhttp://svn.apache.org/viewvc/tomcat/tc8.0.x/trunk/java/org/apache/catalina/loader/WebappClassLoaderBase.java?r1=1726672&r2=1730178&diff_format=h"}, {"count": 12, "text": "*** Bug 59013 has been marked as a duplicate of this bug. ***", "bug_id": 58999, "is_private": false, "id": 188478, "time": "2016-02-16T16:13:47Z", "creator": "violetagg@apache.org", "creation_time": "2016-02-16T16:13:47Z", "tags": [], "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 58999, "is_private": false, "count": 13, "id": 189060, "time": "2016-03-03T15:08:14Z", "creator": "violetagg@apache.org", "creation_time": "2016-03-03T15:08:14Z", "text": "*** Bug 59110 has been marked as a duplicate of this bug. ***"}, {"count": 14, "tags": [], "text": "*** Bug 59282 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 58999, "id": 190026, "time": "2016-04-06T18:40:03Z", "creator": "violetagg@apache.org", "creation_time": "2016-04-06T18:40:03Z", "attachment_id": null}]