[{"count": 0, "tags": [], "creator": "marco.roduit@tinext.com", "attachment_id": null, "id": 26466, "time": "2002-11-18T13:15:52Z", "bug_id": 14637, "creation_time": "2002-11-18T13:15:52Z", "is_private": false, "text": "Overview Description:\n  Consider a dictionary-like report with 2 columns and a header mentioning the \n  first and the last entry for one given page.\n  To obtain the first item you'd call \n  \n  <fo:retrieve-marker \n    retrieve-position=\"first-starting-within-page\" \n    retrieve-class-name=\"runningHeader\" \n    retrieve-boundary=\"page\"/>\n    \n  while to obtain the last you'd call\n  \n  <fo:retrieve-marker \n    retrieve-position=\"last-starting-within-page\" \n    retrieve-class-name=\"runningHeader\" \n    retrieve-boundary=\"page\"/>\n    \n  somewhere in your header.\n  The marker \"runningHeader\" is set as the first block when processing a given \n  dictionary entry.\n  \n  What happens is that the last entry mentioned in the header of a given\n  page is actually the first entry of the following page.\n  \n  The enclosed test case shows this misbehavior.  \n  This bug is always reproducible."}, {"count": 1, "tags": [], "bug_id": 14637, "is_private": false, "id": 26467, "creation_time": "2002-11-18T13:19:06Z", "time": "2002-11-18T13:19:06Z", "creator": "marco.roduit@tinext.com", "text": "Created attachment 3875\nTest case", "attachment_id": 3875}, {"count": 2, "tags": [], "bug_id": 14637, "attachment_id": null, "id": 26514, "time": "2002-11-18T22:30:51Z", "creator": "oleg@tkachenko.com", "creation_time": "2002-11-18T22:30:51Z", "is_private": false, "text": "fo:marker should be the first child of an object you want to mark, so in the\nfollowing snippet you are marking dummy inner block, not outer one, which\nactually starts new entry.\n<fo:block space-before=\"5mm\">\n  <fo:block>\n    <fo:marker marker-class-name=\"runningHeader\">\n      <fo:wrapper font-weight=\"bold\" font-size=\"8pt\">Entry 37</fo:wrapper>\n    </fo:marker>\n  </fo:block>\n\nTherefore solution is just to get rid of your dummy block.\n<fo:block space-before=\"5mm\">\n  <fo:marker marker-class-name=\"runningHeader\">\n    <fo:wrapper font-weight=\"bold\" font-size=\"8pt\">Entry 37</fo:wrapper>\n  </fo:marker>  \n\nThis works fine for me using fop-0.20.5cvs.\n  "}, {"count": 3, "attachment_id": null, "bug_id": 14637, "is_private": false, "id": 26541, "time": "2002-11-19T08:11:40Z", "creator": "marco.roduit@tinext.com", "creation_time": "2002-11-19T08:11:40Z", "tags": [], "text": "Dear Oleg, thanks for your suggestion. \nIt doesn't work as of version 0.20.4 and haven't tried version 0.20.5-cvs, yet\n(something I'll do in the near future).\nMarco\n"}, {"count": 4, "tags": [], "bug_id": 14637, "attachment_id": null, "id": 26544, "time": "2002-11-19T08:17:32Z", "creator": "oleg@tkachenko.com", "creation_time": "2002-11-19T08:17:32Z", "is_private": false, "text": "Ok, it's rather subtle bug, just wait for 0.20.5 (it's a matter of days now) and\ncheck it out. Feel free to reopen the bug then."}, {"count": 5, "tags": [], "bug_id": 14637, "is_private": false, "text": "Oleg,\n\nI just downloaded and built version 0.20.5-cvs and found that this\nbug is still present, with and without your fix applied (BTW, the\ninner block is there because I actually need two markers, one\nfor the header and another for a sidebar that wasn't present in\nmy first test case).\n\nI will upload a second test case that shows a more real-world\nexample, closer to what I'm struggling to obtain. This new test\ncase (that contains both the header and a sidebar) exhibit \nanother bug: the header and footer are misplaced by the presence\nof the sidebar, something that doesn't happen with version 0.20.4.\n\nI upload this second test case in the form of a couple of XML/XSL\nfiles because I think they're easier to read than the resulting\nFO file.\n\nMarco", "id": 26922, "time": "2002-11-25T09:38:28Z", "creator": "marco.roduit@tinext.com", "creation_time": "2002-11-25T09:38:28Z", "attachment_id": null}, {"attachment_id": 3942, "tags": [], "creator": "marco.roduit@tinext.com", "is_private": false, "count": 6, "id": 26925, "time": "2002-11-25T09:42:20Z", "bug_id": 14637, "creation_time": "2002-11-25T09:42:20Z", "text": "Created attachment 3942\nXML file for markers test case"}, {"count": 7, "tags": [], "bug_id": 14637, "attachment_id": 3943, "id": 26926, "time": "2002-11-25T09:42:48Z", "creator": "marco.roduit@tinext.com", "creation_time": "2002-11-25T09:42:48Z", "is_private": false, "text": "Created attachment 3943\nXSL file for markers test case"}, {"count": 8, "attachment_id": null, "bug_id": 14637, "is_private": false, "id": 43229, "time": "2003-08-25T06:11:28Z", "creator": "lizzy@soggytrousers.net", "creation_time": "2003-08-25T06:11:28Z", "tags": [], "text": "I'm having a somewhat related problem in that the retrieve-marker attribute is\nnot correctly working with the \"first-including-carryover\" in a two-column\ndocument. The result is behaving as though the attribute's value is\n\"first-starting-within-page\". I'm using FOP 0.20.5."}, {"count": 9, "tags": [], "bug_id": 14637, "attachment_id": null, "id": 109625, "time": "2007-10-23T07:44:57Z", "creator": "pascal.sancho@takoma.fr", "creation_time": "2007-10-23T07:44:57Z", "is_private": false, "text": "Bug fixed in latest Trunk (rev 584703), and probably in FOP 0.94"}, {"count": 10, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 155858, "creation_time": "2012-04-01T06:45:10Z", "time": "2012-04-01T06:45:10Z", "bug_id": 14637, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "is_private": false}]