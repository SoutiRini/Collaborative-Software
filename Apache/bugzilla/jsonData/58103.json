[{"count": 0, "attachment_id": null, "creator": "ognjen.d.blagojevic@gmail.com", "text": "While smoke testing NIO2 connector with following config:\n             \n    <Connector port=\"84\" protocol=\"org.apache.coyote.http11.Http11Nio2Protocol\"\n               connectionTimeout=\"20000\"\n               redirectPort=\"8443\" />\n\nI get a number of warnings in my log files:\n\n05-Jul-2015 22:48:07.685 WARNING [http-nio2-449-exec-3] org.apache.tomcat.util.net.AbstractEndpoint.countDownConnection Incorrect connection count, multiple socket.close called on the same socket.\n\nI don't find anything suspicious in my tests or configuration.", "id": 183892, "time": "2015-07-05T20:59:19Z", "bug_id": 58103, "creation_time": "2015-07-05T20:59:19Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 58103, "is_private": false, "text": "It happens both with HTTP (TCP port 84 in my tests) and HTTPS (TCP port 449):\n\n05-Jul-2015 22:46:45.671 WARNING [http-nio2-449-exec-4] org.apache.tomcat.util.net.AbstractEndpoint.countDownConnection Incorrect connection count, multiple socket.close called on the same socket.\n05-Jul-2015 22:46:46.667 WARNING [http-nio2-84-exec-3] org.apache.tomcat.util.net.AbstractEndpoint.countDownConnection Incorrect connection count, multiple socket.close called on the same socket.\n\n-Ognjen", "id": 183893, "time": "2015-07-05T21:07:49Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2015-07-05T21:07:49Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "remm@apache.org", "text": "This would happen occasionally for me. Now this doesn't but it still does rarely in the CI runs.\n\nI cannot figure out why it still fails after my fixes. Since it doesn't look like a very useful feature for NIO2 which should scale efficiently, I disabled maxConnections in that endpoint in trunk (forced to -1). Feel free to look into it if you think a fix would be useful.", "id": 184106, "time": "2015-07-21T14:18:37Z", "bug_id": 58103, "creation_time": "2015-07-21T14:18:37Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 58103, "is_private": false, "text": "Can I help somehow to get to the root cause of the problem?\n\nFor instance, to print stack trace and connection count every time AbstractEndpoint.countUpOrAwaitConnection and .countDownConnection is executed?\n\nIt seems to me that the problem easily reproducible on my environment.", "id": 184109, "time": "2015-07-21T14:56:43Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2015-07-21T14:56:43Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 58103, "is_private": false, "count": 4, "id": 184110, "time": "2015-07-21T15:22:33Z", "creator": "remm@apache.org", "creation_time": "2015-07-21T15:22:33Z", "text": "Feel free to debug it, but as far I am concerned I am probably done with this feature at the moment."}, {"count": 5, "tags": [], "bug_id": 58103, "attachment_id": null, "is_private": false, "id": 184134, "time": "2015-07-23T00:05:29Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2015-07-23T00:05:29Z", "text": "I narrowed the problem to one single problematic example: /examples/servlets/nonblocking/numberwriter. It is example to demonstrate Servlet 3.1 Non-blocking IO. Crawling that single URL from Java using java.net.URL / URLConnection classes causes reported log messages."}, {"count": 6, "tags": [], "bug_id": 58103, "is_private": false, "text": "(In reply to Ognjen Blagojevic from comment #5)\n> Crawling that single URL from Java using\n> java.net.URL / URLConnection classes causes reported log messages.\n\ns/Crawling/Reading/g", "id": 184135, "time": "2015-07-23T00:09:43Z", "creator": "ognjen.d.blagojevic@gmail.com", "creation_time": "2015-07-23T00:09:43Z", "attachment_id": null}, {"count": 7, "tags": [], "creator": "ognjen.d.blagojevic@gmail.com", "text": "Here is a minimal test case:\n\n    public static void main(String[] argv) throws Exception {\n        URL url = new URL(\"http://localhost:84/examples/servlets/nonblocking/numberwriter\");\n        InputStream urlStream = url.openStream();\n        byte b[] = new byte[1000];\n        int numRead = urlStream.read(b);\n        while (numRead != -1) {\n            numRead = urlStream.read(b);\n        }\n        urlStream.close();\n    }\n\nLog messages start to appear some 20-30s, after I execute this test.", "id": 184137, "time": "2015-07-23T07:20:26Z", "bug_id": 58103, "creation_time": "2015-07-23T07:20:26Z", "is_private": false, "attachment_id": null}, {"count": 8, "attachment_id": null, "creator": "markt@apache.org", "text": "I'll take a look at this.\n\nI think we do need to restore maxConnections support for NIO2 (probably with the limit disabled by default). While I am confident that NIO2 can scale to as many connections as the server can handle, applications may not be able to and in this case the ability to limit connections is useful.\n\nThanks for the work to narrow this down to a simple test case.", "id": 184187, "time": "2015-07-27T15:35:40Z", "bug_id": 58103, "creation_time": "2015-07-27T15:35:40Z", "tags": [], "is_private": false}, {"count": 9, "tags": [], "bug_id": 58103, "is_private": false, "text": "Quick question. Do you see this on trunk or just 8.0.x?", "id": 184188, "time": "2015-07-27T18:26:13Z", "creator": "markt@apache.org", "creation_time": "2015-07-27T18:26:13Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 58103, "is_private": false, "count": 10, "id": 184189, "time": "2015-07-27T18:30:58Z", "creator": "markt@apache.org", "creation_time": "2015-07-27T18:30:58Z", "text": "I've just answered my own question. Running this test case once on Windows triggers the warning message once a second (roughly). Given how easy it is to reproduce, a fix should be (fairly) easy to track down."}, {"count": 11, "tags": [], "creator": "markt@apache.org", "text": "Fixed in trunk, 8.0.x (for 8.0.25 onwards) and 7.0.x (for 7.0.64 onwards) for all connectors although the issue is only likely to be visible with NIO2 HTTP in 8.0.x.\n\nI also added the general protection to NIO2 in 8.0.x that was masking this issue in trunk.", "id": 184201, "time": "2015-07-28T13:49:43Z", "bug_id": 58103, "creation_time": "2015-07-28T13:49:43Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "creator": "markt@apache.org", "text": "*** Bug 58104 has been marked as a duplicate of this bug. ***", "id": 184203, "time": "2015-07-28T13:55:34Z", "bug_id": 58103, "creation_time": "2015-07-28T13:55:34Z", "is_private": false, "attachment_id": null}, {"count": 13, "attachment_id": null, "creator": "markt@apache.org", "text": "*** Bug 58105 has been marked as a duplicate of this bug. ***", "id": 184205, "time": "2015-07-28T13:57:01Z", "bug_id": 58103, "creation_time": "2015-07-28T13:57:01Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "bug_id": 58103, "is_private": false, "text": "Thanks for the fix, and +1 for restoring maxConnections now that it works properly.\n\nI was way too certain this was a NIO2 issue only I guess.", "id": 184220, "time": "2015-07-29T14:01:12Z", "creator": "remm@apache.org", "creation_time": "2015-07-29T14:01:12Z", "attachment_id": null}]