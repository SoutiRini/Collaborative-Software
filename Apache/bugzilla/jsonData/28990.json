[{"count": 0, "tags": [], "bug_id": 28990, "text": "This is similar in spirit to bug 8559, but instead of extending <arg>, it would\nbe really nice if <java> itself provided <apply>-like features, like supporting\nsource and dest directories, filesets, selectors and mappers, and being able to\npass the arguments that are selected to the java argument list as arguments.\n\nIt would greatly reduce the need to write tasks in Java for each java program I\nwant to invoke in this way (much of which is boilerplate).", "id": 57444, "time": "2004-05-14T21:16:08Z", "creator": "shankarunni@netscape.net", "creation_time": "2004-05-14T21:16:08Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 28990, "attachment_id": null, "is_private": false, "id": 57445, "time": "2004-05-14T21:17:40Z", "creator": "alexeys@inventigo.com", "creation_time": "2004-05-14T21:17:40Z", "text": "I also would like to have it, but maybe it is better to be able to use <java> inside <apply>."}, {"count": 2, "tags": [], "text": "> maybe it is better to be able to use <java> inside <apply>.\n\nYes, that's what I'm doing now, using executable=\"${java.home}/bin/java\".\nHowever, this basically forces you to fork, and is not entirely obvious. And\nthings like defining the classpath for it are a bit tedious.\n\n<java> has the advantage that the java-specific options are nicely structured\ninto the task already, so we're mainly talking about grafting <apply>'s\nargument-handling features onto <java>.", "is_private": false, "id": 57451, "creator": "shankarunni@netscape.net", "time": "2004-05-14T22:07:52Z", "bug_id": 28990, "creation_time": "2004-05-14T22:07:52Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "It is a matter of taste, but I think it is better to have tasks orthogonal. \nIt would also help to avoid copy/paste code reuse. I think something like \nthat would be better:\n\n<apply>\n  <java/>\n<apply>\n", "is_private": false, "id": 57452, "creator": "alexeys@inventigo.com", "time": "2004-05-14T22:13:49Z", "bug_id": 28990, "creation_time": "2004-05-14T22:13:49Z", "attachment_id": null}]