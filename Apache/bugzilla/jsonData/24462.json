[{"count": 0, "tags": [], "creator": "srevilak@g88.net", "attachment_id": null, "text": "I'm would like to report a file descriptor leak that occurs with\nApache-1.3.28 and mod_jk-1.2.5 on Solaris 7 and Solaris 8.  Both\nApache and mod_jk were compiled from sources.  mod_jk is being used as\nDSO (not statically linked).\n\nThe problem appears when apache is restarted via SIGHUP (aka\n\"apachectl restart\") SIGUSR1 (\"apachectl graceful\").\n\nEach time the server is signaled, the parent server process will have\nopen one additional file descriptor for each file given in a JkLogFile\ndirective.\n\nBelow is a short series of annotated lsof output that shows the\nbehavior.  For this, two JkLogFile directives are use; each in a\ndifferent VirtualHost container element.  (However, the same behavior\nalso exists when JkLogFile is used at the server config level, outside\nof any container elements).\n\n##\n## lsof output after a cold start of Apache, filtered to include only\n## files matching \"_jk\". \"/etc/httpd.pid\" is the file named by the\n## servers PidFile directive.\n##\n## logs/localhost/one_mod_jk_log and logs/localhost/two_mod_jk_log\n## are the files named by JkLogFile.  JkLogFile appears twice in \n## the server configuration.  No requests have been made to the server.\n##\n  $ lsof -p `cat /etc/httpd.pid ` | grep _jk\n  COMMAND     PID     USER   FD   TYPE        DEVICE  SIZE/OFF     NODE NAME\n  httpd   21307 root  txt   VREG         136,0   834728 \n958215 /l/apache/libexec/mod_jk.so\n  httpd   21307 root    4u  VREG         136,0     3023 \n848146 /l/apache/logs/localhost/two_mod_jk_log\n  httpd   21307 root    5u  VREG         136,0     3023 \n848147 /l/apache/logs/localhost/one_mod_jk_log\n  httpd   21307 root    6u  VREG         136,0     3023 \n848146 /l/apache/logs/localhost/two_mod_jk_log\n  httpd   21307 root    7u  VREG         136,0     3023 \n848147 /l/apache/logs/localhost/one_mod_jk_log\n\n##\n## SIGHUP server; then another snapshot of files containing \"_jk\".\n## Below, where two descriptors were open to \"one_mod_jk_log\", there\n## are now three.  Likewise, where there were two descriptors open\n## to \"two_mod_jk_log\" there are also three.\n##\n  $ kill -HUP `cat /etc/httpd.pid `\n  $ lsof -p `cat /etc/httpd.pid ` | grep _jk\n  httpd   21307 root  txt   VREG         136,0   834728 \n958215 /l/apache/libexec/mod_jk.so\n  httpd   21307 root    4u  VREG         136,0     5028 \n848146 /l/apache/logs/localhost/two_mod_jk_log\n  httpd   21307 root    5u  VREG         136,0     5029 \n848147 /l/apache/logs/localhost/one_mod_jk_log\n  httpd   21307 root    6u  VREG         136,0     5028 \n848146 /l/apache/logs/localhost/two_mod_jk_log\n  httpd   21307 root    7u  VREG         136,0     5029 \n848147 /l/apache/logs/localhost/one_mod_jk_log\n  httpd   21307 root    8u  VREG         136,0     5028 \n848146 /l/apache/logs/localhost/two_mod_jk_log\n  httpd   21307 root    9u  VREG         136,0     5029 \n848147 /l/apache/logs/localhost/one_mod_jk_log\n\nA subsequence SIGHUP (or SIGUSR1) will result in allocation of one\nmore file descriptor per each file named by JkLogFile.  (i.e. - the\nmore times JkLogFile is used, the faster it leaks).\n\nEventually, successive SIGHUPs will exhaust the number of descriptors\navailable to the server, causing it to crash.  In my particular case,\nthis would occur during nightly log rotations.\n\nA few days ago, I brought this issue up on the tomcat-users mailing\nlist:\n\n  http://marc.theaimsgroup.com/?t=106797123900012&r=1&w=2\n\nHowever, none of the respondents indicated whether they had, or had\nnot observed this behavior in their own installations.\n\nFinally, mod_jk-1.2.3 also exhibits the same behavior.\n\nIf there's additional information needed, I would be happy to provide\nit.  Likewise, if I could assist the maintainers by performing some\nadditional testing, I would be more than happy to do so.", "id": 46924, "time": "2003-11-06T12:34:11Z", "bug_id": 24462, "creation_time": "2003-11-06T12:34:11Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 24462, "attachment_id": null, "text": "How are your logs config'ed?  You have 3 log files, correct?  Are all 3 of them\nseeing output?  Crank up your debug level and verify that all 3 are actually active.", "id": 46967, "time": "2003-11-07T00:50:22Z", "creator": "kylev@yaga.com", "creation_time": "2003-11-07T00:50:22Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 24462, "attachment_id": 8971, "is_private": false, "id": 46968, "time": "2003-11-07T03:00:25Z", "creator": "srevilak@g88.net", "creation_time": "2003-11-07T03:00:25Z", "text": "Created attachment 8971\nJkLogFile excerpts showing file opens/closes"}, {"count": 3, "text": "\n>>> How are your logs config'ed?\n\nBelow are the log configuration directives for one vhost:\n\n<VirtualHost 172.19.30.41>\n    JkLogFile logs/localhost/one_mod_jk_log\n    JkLogLevel debug\n  ....\n</VirtualHost>\n\nBelow is the log configuration for the second virtual host:\n\n<VirtualHost 172.19.30.41>\n    JkLogFile logs/localhost/two_mod_jk_log\n    JkLogLevel debug\n  ....\n</VirtualHost>\n\n(172.19.30.41 is a NameVirtualHost).  These are the only JkLogFile directives.\n\n\n>>> You have 3 log files, correct?\n\nJust two logfiles; but after sending apache successive SIGHUPs to apache, there are multiple\nfile descriptors open to each logfile.  (More SIGHUPs = more open descriptors to each file).\n\n\n>>> Are all 3 of them seeing output?\n\nBoth log files are seeing output.  The output appears to be normal.\n\n\n>>> Crank up your debug level and verify that all 3 are actually active.\n\nBoth logfile are active -- looking at the logs themselves, they appear normal.\n\nI've done this as an experiment.  Hopefully it will help.\n\n  - raise log level to info (otherwise, same as shown above)\n\n  - added a few calls to jk_log in jk_util.c; one in\n    jk_open_file_logger(), immediately after the log file is opened,\n    another in jk_close_file_logger, immediately before the file is\n    closed.  (Both log the logger's address, and fileno of it's FILE).  \n    Both of these lines contain the string \"SREVILAK\".\n\n  - stop Apache, delete logfiles.\n\n  - Start apache, send a series of 5 sighups\n\n  - Stop apache\n\n  - Attached the contents of both JkLogFiles.  Appended to that is\n    a diff of jk_util.c, in case you want to see where the log\n    statements are.\n\nThis is the puzzling thing.  Immediately after starting the server,\nfile desriptors 5 & 7 were open to \"one_mod_jk_log\".  Immediately\nbefore stopping the server, file descriptors 5, 7, 9, 11, 13, 15 and\n20.  The logging I added seems to show each of the files getting an\nfclose(), but the descriptor is never released. :(\n", "creator": "srevilak@g88.net", "attachment_id": null, "id": 46969, "time": "2003-11-07T03:02:44Z", "bug_id": 24462, "creation_time": "2003-11-07T03:02:44Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 24462, "attachment_id": null, "is_private": false, "id": 47011, "time": "2003-11-07T18:41:49Z", "creator": "kylev@yaga.com", "creation_time": "2003-11-07T18:41:49Z", "text": "Can you patch to check the return values of the fflush and fclose calls?  They\nshould be 0."}, {"count": 5, "tags": [], "bug_id": 24462, "attachment_id": null, "is_private": false, "id": 47029, "time": "2003-11-08T01:36:03Z", "creator": "srevilak@g88.net", "creation_time": "2003-11-08T01:36:03Z", "text": "I added a few syslog calls to record the fflush() and fclose() return values.  \nBoth calls return 0 consistently.  \n\nI also tried replace fclose(p->logfile) with close(fileno(p->logfile)).\nLikewise, close() returned 0 consistenly.\n\nUnfortunately, in both situations above, none of the file descriptors where \nclose()/fclose() succeeded were actually closed.  Both lsof and /proc/PID/fd \nstill show them as being used by the parent httpd process."}, {"count": 6, "tags": [], "bug_id": 24462, "attachment_id": null, "is_private": false, "id": 47561, "time": "2003-11-18T18:04:20Z", "creator": "srevilak@g88.net", "creation_time": "2003-11-18T18:04:20Z", "text": "Today, I wanted to make a fresh start at investigating this problem.\nIn doing so, started with a clean set of mod_jk 1.2.5 sources, then\nadded in a few extra logging statements, similar to the ones that\ngenerated http://nagoya.apache.org/bugzilla/showattachment.cgi?attach_id=8971\n\nHowever, this time, I used syslog(2) for all of the additional\nlogging.  Now I see where the leak is:\n\nNov 18 12:42:14 yacht httpd[23079]: \njk_open_file_logger:../common/jk_util.c:201: opened logger=ba3c8 to \nfile=/d/apache-1.3.28-200308/logs/localhost/two_mod_jk_log with FILE=ad4d8 and \nfileno=9\nNov 18 12:42:14 yacht httpd[23079]: \njk_open_file_logger:../common/jk_util.c:201: opened logger=ec900 to \nfile=/d/apache-1.3.28-200308/logs/localhost/one_mod_jk_log with FILE=ad4e8 and \nfileno=10\nNov 18 12:42:19 yacht httpd[23090]: \njk_close_file_logger../common/jk_util.c:224: closing logger=ba3c8 with \nFILE=ad4d8 and fileno=9\nNov 18 12:42:19 yacht httpd[23090]: \njk_close_file_logger../common/jk_util.c:224: closing logger=ec900 with \nFILE=ad4e8 and fileno=10\n\n\nThe bracketed number after httpd is the process PID.  The logs are\nopened by PID 23079, which is the parent apache process.  That's where\nthe fopens() happen.\n\nThe fcloses() on the other hand, are happening in the the _child_\nhttpd processes (!= 23079); they're balanced, but opens and closes are\ntaking place in different processes.\n\nI will attach a larger excerpt where the following takes place:\n\n  - start httpd\n  - send a series of SIGHUPs, several seconds apart\n\nWith each HUP, two files are opened by 23079, and two files are closed\nby a child process (!= 23079).\n\nI'm not sure what the best way to fix this would be.  Perhaps opening\nthe logfiles in a child init function?  Or maybe ap_register_cleanup?\n"}, {"count": 7, "tags": [], "bug_id": 24462, "attachment_id": 9175, "is_private": false, "id": 47562, "time": "2003-11-18T18:16:08Z", "creator": "srevilak@g88.net", "creation_time": "2003-11-18T18:16:08Z", "text": "Created attachment 9175\nSyslog excerpt showing JKLogFile open/close by different httpd processes"}, {"count": 8, "tags": [], "text": "Created attachment 9185\n[PATCH] enclosed is a patch for the apache-1.3 mod_jk.c that appears to fix the fd leak.", "is_private": false, "id": 47585, "creator": "srevilak@g88.net", "time": "2003-11-18T22:43:46Z", "bug_id": 24462, "creation_time": "2003-11-18T22:43:46Z", "attachment_id": 9185}, {"count": 9, "tags": [], "creator": "srevilak@g88.net", "text": "Notes for http://nagoya.apache.org/bugzilla/showattachment.cgi?attach_id=9185\n[PATCH for mod_jk.c]\n\nMy test case for the patch was as follows:\n\n  - stop httpd server\n  - JkLogLevel debug\n  - start server\n  - examine list of file descriptors (via lsof -p PID) where\n    PID is the pid from Apache's PidFile.  (could also look at\n    contents /proc/PID/fd).\n  - send a series of 300 SIGHUPs to pid named in PidFile, pausing 3\n    seconds between each.\n  - afterwards, examine list of open file descriptors of httpd process\n    named by PidFile.  Verify that multiple descriptors were not open\n    to files named by JkLogFile\n  - verify that data was written to files named by JkLogFile during \n    the series of SIGHUPs\n\nI hope that you'll consider incorporating this patch into the next release of \nmod_jk.\n\nThanks.\n", "id": 47587, "time": "2003-11-18T22:52:46Z", "bug_id": 24462, "creation_time": "2003-11-18T22:52:46Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 24462, "text": "Thanks a lot for this patch !\n\nWe had the same problem on Production (eating up filehandles).\nWe gracefully restart our Apaches every 10 mins with a script\nto modify loadbalancing weights. You can imagine how often we ran out of \nfilehandles.\n\nApplied the Patch and it works great!\nWe use mod_jk-1.2.5/Apache 1.3.28 together with Tomcat 3.3.1a\nOn a cluster of several Solaris 9 boxes.\n\nA big +1 for this patch now in Production \n(800 simultanous users on 3 Apaches serving 12 Tomcats)\n\nHans", "id": 47628, "time": "2003-11-19T16:05:25Z", "creator": "hans.schmid@einsurance.de", "creation_time": "2003-11-19T16:05:25Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "william.barker@wilshire.com", "text": "Patch applied.\n\nThanks much!", "id": 47748, "time": "2003-11-21T06:52:34Z", "bug_id": 24462, "creation_time": "2003-11-21T06:52:34Z", "is_private": false, "attachment_id": null}]