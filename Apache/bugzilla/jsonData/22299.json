[{"count": 0, "tags": [], "bug_id": 22299, "attachment_id": null, "id": 42540, "time": "2003-08-11T13:20:58Z", "creator": "geoff@apache.org", "creation_time": "2003-08-11T13:20:58Z", "is_private": false, "text": "this bug was first reported to httpd-dev\n\nhttp://marc.theaimsgroup.com/?l=apache-httpd-dev&m=106011202900899&w=2\n\ncurrently, using DECLINE_CMD to override config directives has a limitation -\nyou can't override ITERATE or ITERATE2 prototypes properly. what ends up\nhappening is that DECLINE_CMD is returned for the first argument, but then\nApache skips over your module for all subsequent arguments.  the only way around\nthis (that I was able to figure out, that is) is to use RAW_ARGS when overriding\nthese prototypes and do the parsing yourself.\n\n  attached is a patch that fixes this, keeping ITERATE and ITERATE2 focused on\nthe current module until the argument list is exhausted.\n\n--Geoff\n\n\n\nIndex: server/config.c\n===================================================================\nRCS file: /home/cvspublic/httpd-2.0/server/config.c,v\nretrieving revision 1.164\ndiff -u -r1.164 config.c\n--- server/config.c\t17 Feb 2003 07:04:50 -0000\t1.164\n+++ server/config.c\t5 Aug 2003 19:26:59 -0000\n@@ -697,7 +697,7 @@\n                               void *mconfig, const char *args)\n {\n     char *w, *w2, *w3;\n-    const char *errmsg;\n+    const char *errmsg = NULL;\n \n     if ((parms->override & cmd->req_override) == 0)\n         return apr_pstrcat(parms->pool, cmd->name, \" not allowed here\", NULL);\n@@ -797,11 +797,14 @@\n \n     case ITERATE:\n         while (*(w = ap_getword_conf(parms->pool, &args)) != '\\0') {\n-            if ((errmsg = cmd->AP_TAKE1(parms, mconfig, w)))\n+\n+            errmsg = cmd->AP_TAKE1(parms, mconfig, w);\n+\n+            if (errmsg && strcmp(errmsg, DECLINE_CMD) != 0)\n                 return errmsg;\n         }\n \n-        return NULL;\n+        return errmsg;\n \n     case ITERATE2:\n         w = ap_getword_conf(parms->pool, &args);\n@@ -812,11 +815,14 @@\n                                cmd->errmsg ? \", \" : NULL, cmd->errmsg, NULL);\n \n         while (*(w2 = ap_getword_conf(parms->pool, &args)) != '\\0') {\n-            if ((errmsg = cmd->AP_TAKE2(parms, mconfig, w, w2)))\n+\n+            errmsg = cmd->AP_TAKE2(parms, mconfig, w, w2);\n+\n+            if (errmsg && strcmp(errmsg, DECLINE_CMD) != 0)\n                 return errmsg;\n         }\n \n-        return NULL;\n+        return errmsg;\n \n     case FLAG:\n         w = ap_getword_conf(parms->pool, &args);"}, {"count": 1, "tags": [], "creator": "geoff@apache.org", "attachment_id": null, "text": "added PatchAvailable keyword\n\n--Geoff", "id": 48012, "time": "2003-11-24T15:11:33Z", "bug_id": 22299, "creation_time": "2003-11-24T15:11:33Z", "is_private": false}, {"count": 2, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "text": "ouch, I didn't search for any UNCONFIRMED reports when attempting to enable the\nPatchAvailable keyword as appropriate :(", "id": 48014, "time": "2003-11-24T15:18:18Z", "bug_id": 22299, "creation_time": "2003-11-24T15:18:18Z", "is_private": false}, {"count": 3, "text": "sorry, I assumed that non-core people were supposed to enter bugs as UNCONFIRMED\nuntil some core developer confirmed it.  of course, I confirmed it, but I have\ninsufficient karma ;)", "bug_id": 22299, "attachment_id": null, "id": 48590, "time": "2003-12-05T19:36:34Z", "creator": "geoff@apache.org", "creation_time": "2003-12-05T19:36:34Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 22299, "attachment_id": null, "id": 51502, "time": "2004-01-30T19:45:44Z", "creator": "geoff@apache.org", "creation_time": "2004-01-30T19:45:44Z", "is_private": false, "text": "fixed in 2.1\n\nhttp://cvs.apache.org/viewcvs.cgi/httpd-2.0/server/config.c?r1=1.168&r2=1.169"}]