[{"count": 0, "tags": [], "creator": "s.tabacchiera@gmail.com", "is_private": false, "text": "apache 2.4.17 on RHEL 6.3 64bit\n\nSCENARIO: \nClient -> apache/mod_proxy_wstunnel -> tomcat\n\nUnder high load (multiple busy threads), with many slow clients (expeciallu mobile users during roaming, who often go offline), we experience most threads are waiting for clients to read() from their side, netstat showing a large Send-Q, when clients abort or apache Timeout expires, httpd core dumps with segfault.\n\ngdb bt:\n#0  0x00007f69ec6abe17 in apr_brigade_cleanup (data=0x7f692646ffb8) at buckets/apr_brigade.c:44\n#1  0x00007f69ec265b1e in run_cleanups (pool=0x7f692646e028) at memory/unix/apr_pools.c:2352\n#2  apr_pool_destroy (pool=0x7f692646e028) at memory/unix/apr_pools.c:814\n#3  0x00007f69ec6abe2c in apr_brigade_cleanup (data=0x7f6926489860) at buckets/apr_brigade.c:44\n#4  0x0000000000448dda in ap_core_output_filter (f=0x7f6926489690, new_bb=0x7f6926489860) at core_filters.c:385\n#5  0x0000000000463fa3 in ap_process_request_after_handler (r=<value optimized out>) at http_request.c:267\n#6  0x00000000004645af in ap_process_request (r=0x7f692646e0a0) at http_request.c:373\n#7  0x00000000004608ee in ap_process_http_sync_connection (c=0x7f69264892b8) at http_core.c:210\n#8  ap_process_http_connection (c=0x7f69264892b8) at http_core.c:251\n#9  0x0000000000457fc0 in ap_run_process_connection (c=0x7f69264892b8) at connection.c:41\n#10 0x000000000046b468 in process_socket (thd=0x7f69e6963f28, dummy=<value optimized out>) at worker.c:631\n#11 worker_thread (thd=0x7f69e6963f28, dummy=<value optimized out>) at worker.c:990\n#12 0x0000003f3a807a51 in start_thread () from /lib64/libpthread.so.0\n#13 0x0000003f3a0e893d in clone () from /lib64/libc.so.6\n\nENVIRONMENT:\nRHEL 6.3 64bit on vmware\nApache 2.4.17 worker, with apr-1.5.2, apr-util-1.5.4, openssl 1.0.1p.\n\nSame issue occurring with 2.4.16, 2.2.31, 2.2.29, with and w/o ssl.\nSame issue occurring with event mpm.\nIssue NOT OCCURRING with prefork mpm.\n\nIt seems a thread-synchronization issue.\n\nHOW TO REPRODUCE:\nJust start a number of clients who, after the initial websocket request, read very slowly. Let the Send-Q fills to ~128KB, with high thread-per-child concurrency. Then let all clients abort simultaneously, or let the Timeout expires. Apache child exit with signal (11) and core dumps.", "id": 185772, "time": "2015-10-16T20:23:09Z", "bug_id": 58503, "creation_time": "2015-10-16T20:23:09Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "s.tabacchiera@gmail.com", "is_private": false, "text": "*** Bug 58502 has been marked as a duplicate of this bug. ***", "id": 185774, "time": "2015-10-16T20:29:30Z", "bug_id": 58503, "creation_time": "2015-10-16T20:29:30Z", "attachment_id": null}, {"count": 2, "attachment_id": 33184, "bug_id": 58503, "text": "Created attachment 33184\ncleanup mod_proxy_wstunnel's backend brigades\n\nCan you please try this patch?", "id": 185775, "time": "2015-10-16T21:21:20Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-10-16T21:21:20Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "Created attachment 33185\nCleanup mod_proxy_wstunnel's backend brigades\n\nAlso cleans up EPIPE case.", "id": 185776, "time": "2015-10-16T21:31:04Z", "bug_id": 58503, "creation_time": "2015-10-16T21:31:04Z", "is_private": false, "attachment_id": 33185}, {"count": 4, "attachment_id": null, "bug_id": 58503, "text": "Hi and thanks for your quick feedback, Yann!\n\nI applied your patch and did some quick load tests and all seems to work smoothly.\n\nNext, I'm trying it in the real scenario and let you know.\nFinger crossed, for now.\n\nST", "id": 185782, "time": "2015-10-17T12:49:12Z", "creator": "s.tabacchiera@gmail.com", "creation_time": "2015-10-17T12:49:12Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 58503, "attachment_id": null, "is_private": false, "id": 185790, "time": "2015-10-19T09:44:04Z", "creator": "s.tabacchiera@gmail.com", "creation_time": "2015-10-19T09:44:04Z", "text": "After 2 days, no more segfaults.\nStil heavily testing, but I'm pretty confident the issue has gone.\n\nST"}, {"count": 6, "tags": [], "creator": "rpluem@apache.org", "text": "While it is nice that the patch works for you I suspect that it hides something else. Can you please do a \n\nprint e\nprint *e\n\nin gdb in the thread that causes the segfault?", "id": 185800, "time": "2015-10-19T20:00:17Z", "bug_id": 58503, "creation_time": "2015-10-19T20:00:17Z", "is_private": false, "attachment_id": null}, {"count": 7, "attachment_id": null, "bug_id": 58503, "text": "Actually I think mod_proxy_wstunnel falls into the same pitfall mod_proxy_http was in and it needs to do the same / something similar then mod_proxy_http.c with\n\nproxy_buckets_lifetime_transform\n\nJust have no further time investigating right now.", "id": 185801, "time": "2015-10-19T20:04:30Z", "creator": "rpluem@apache.org", "creation_time": "2015-10-19T20:04:30Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "(In reply to Ruediger Pluem from comment #7)\n> Actually I think mod_proxy_wstunnel falls into the same pitfall\n> mod_proxy_http was in and it needs to do the same / something similar then\n> mod_proxy_http.c with\n> \n> proxy_buckets_lifetime_transform\n\nYes I agree, just proposed a quick patch to determine whether it came from mod_proxy_wstunnel or some failure in the core deferred/pipelined write logic...\n\nWe need to either use lifetime_transform like in proxy_http, or I was thinking of modifying all the input filters that create their buckets on f->r/c's pool/bucket_alloc so that they now use their given bb->p and bb->bucket_alloc.\n\nBy doing the latter, we wouldn't have to transform the lifetime, it would be determined by the caller...", "id": 185802, "time": "2015-10-19T20:18:59Z", "bug_id": 58503, "creation_time": "2015-10-19T20:18:59Z", "is_private": false, "attachment_id": null}, {"count": 9, "attachment_id": null, "bug_id": 58503, "text": "Discussion moved to the dev@ mailing-list, will report here afterward.", "id": 185803, "time": "2015-10-19T20:32:58Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-10-19T20:32:58Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "creator": "s.tabacchiera@gmail.com", "is_private": false, "text": "(In reply to Ruediger Pluem from comment #6)\n> While it is nice that the patch works for you I suspect that it hides\n> something else. Can you please do a \n> \n> print e\n> print *e\n> \n> in gdb in the thread that causes the segfault?\n\nSorry, I've deleted the old core.\n\nConsider this new one, with ssl enabled:\n#0  0x00007eff54952e17 in apr_brigade_cleanup (data=0x7eff2c01c2c8) at buckets/apr_brigade.c:44\n#1  0x00007eff5450caee in run_cleanups (pool=0x7eff2c01a2b8) at memory/unix/apr_pools.c:2352\n#2  apr_pool_destroy (pool=0x7eff2c01a2b8) at memory/unix/apr_pools.c:814\n#3  0x00007eff54952e2c in apr_brigade_cleanup (data=0x7eff2c0062a8) at buckets/apr_brigade.c:44\n#4  0x00007eff5165db0e in ssl_io_filter_output (f=0x7eff480567f8, bb=0x7eff2c0062a8) at ssl_engine_io.c:1612\n#5  0x00007eff5165e125 in ssl_io_filter_coalesce (f=0x7eff480567d0, bb=0x7eff2c0062a8) at ssl_engine_io.c:1599\n#6  0x0000000000463fa3 in ap_process_request_after_handler (r=<value optimized out>) at http_request.c:267\n#7  0x00000000004645af in ap_process_request (r=0x7eff2c01a330) at http_request.c:373\n#8  0x00000000004608ee in ap_process_http_sync_connection (c=0x7eff48056388) at http_core.c:210\n#9  ap_process_http_connection (c=0x7eff48056388) at http_core.c:251\n#10 0x0000000000457fc0 in ap_run_process_connection (c=0x7eff48056388) at connection.c:41\n#11 0x000000000046b468 in process_socket (thd=0xfa9928, dummy=<value optimized out>) at worker.c:631\n#12 worker_thread (thd=0xfa9928, dummy=<value optimized out>) at worker.c:990\n#13 0x0000003f3a807a51 in start_thread () from /lib64/libpthread.so.0\n#14 0x0000003f3a0e893d in clone () from /lib64/libc.so.6\n\n(gdb) p e\n$1 = (apr_bucket *) 0x7efee4018348\n\n(gdb) p *e\n$2 = {link = {next = 0x2c6c6c756e3a226e, prev = 0x4974616d726f6622}, type = 0x4f444e49223a2264, length = 3180190329187026254, start = 6229711307259471394, \n  data = 0x2d223a2265756c61, free = 0x7b2c7d2235322e31, list = 0x6e6f697372657622}", "id": 185809, "time": "2015-10-20T10:23:54Z", "bug_id": 58503, "creation_time": "2015-10-20T10:23:54Z", "attachment_id": null}, {"count": 11, "tags": [], "creator": "rpluem@apache.org", "is_private": false, "text": "(In reply to Tabby from comment #10)\n> (In reply to Ruediger Pluem from comment #6)\n> > While it is nice that the patch works for you I suspect that it hides\n> > something else. Can you please do a \n> > \n> > print e\n> > print *e\n> > \n> > in gdb in the thread that causes the segfault?\n> \n> Sorry, I've deleted the old core.\n> \n\n> \n> (gdb) p e\n> $1 = (apr_bucket *) 0x7efee4018348\n> \n> (gdb) p *e\n> $2 = {link = {next = 0x2c6c6c756e3a226e, prev = 0x4974616d726f6622}, type =\n> 0x4f444e49223a2264, length = 3180190329187026254, start =\n> 6229711307259471394, \n>   data = 0x2d223a2265756c61, free = 0x7b2c7d2235322e31, list =\n> 0x6e6f697372657622}\n\nThanks. What does\n\nprint *(e->type)\nx/10x 0x2c6c6c756e3a226e,\nx/10x 0x4974616d726f6622\nx/10x 0x7b2c7d2235322e31\ndump_brigade b\ndump_bucket e\n\ndeliver?\nKeep in mind that you need to have the macros .gdbinit (top level of source directory) loaded for the dump_* commands to work.", "id": 185811, "time": "2015-10-20T11:59:23Z", "bug_id": 58503, "creation_time": "2015-10-20T11:59:23Z", "attachment_id": null}, {"count": 12, "attachment_id": null, "bug_id": 58503, "text": "(gdb) p *(e->type)\nCannot access memory at address 0x4f444e49223a2264\n\n(gdb) x/10x 0x2c6c6c756e3a226e\n0x2c6c6c756e3a226e:     Cannot access memory at address 0x2c6c6c756e3a226e\n\n(gdb) x/10x 0x4974616d726f6622\n0x4974616d726f6622:     Cannot access memory at address 0x4974616d726f6622\n\n(gdb) x/10x 0x7b2c7d2235322e31\n0x7b2c7d2235322e31:     Cannot access memory at address 0x7b2c7d2235322e31\n\n(gdb) dump_brigade b\ndump of brigade 0x7eff2c01c2c8\n   | type     (address)    | length | data addr  | contents               | rc\n--------------------------------------------------------------------------------\n 0 | Cannot access memory at address 0x4f444e49223a2264\n\n(gdb) dump_bucket e\n bucket=Cannot access memory at address 0x4f444e49223a2264", "id": 185812, "time": "2015-10-20T12:16:42Z", "creator": "s.tabacchiera@gmail.com", "creation_time": "2015-10-20T12:16:42Z", "tags": [], "is_private": false}, {"count": 13, "attachment_id": null, "bug_id": 58503, "text": "After 1 month I can confirm the issue is gone.\nWill this patch be included in the upcoming release?\n\nThanks\nST", "id": 186656, "time": "2015-11-30T09:50:35Z", "creator": "s.tabacchiera@gmail.com", "creation_time": "2015-11-30T09:50:35Z", "tags": [], "is_private": false}, {"count": 14, "tags": [], "creator": "s.tabacchiera@gmail.com", "text": "Hi there,\nany news about this patch? It was not included in 2.4.18, so I'm wondering if/when will it ever be.\n\nThanks!\nST", "id": 189508, "time": "2016-03-16T13:55:36Z", "bug_id": 58503, "creation_time": "2016-03-16T13:55:36Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "creator": "ylavic.dev@gmail.com", "is_private": false, "text": "Thanks ST for this report and follow up, a different fix was backported to upcoming 2.4.19 in r1732266, so I'm closing here.\n\nIf you manage to test the final fix in your enviroment and have any issue with it, please reopen.", "id": 189511, "time": "2016-03-16T16:53:18Z", "bug_id": 58503, "creation_time": "2016-03-16T16:53:18Z", "attachment_id": null}, {"count": 16, "attachment_id": null, "bug_id": 58503, "text": "(In reply to Yann Ylavic from comment #15)\n> Thanks ST for this report and follow up, a different fix was backported to\n> upcoming 2.4.19 in r1732266, so I'm closing here.\n> \n> If you manage to test the final fix in your enviroment and have any issue\n> with it, please reopen.\n\nHere is the link of the patch (all in one) which was backported (and hence could be applied to 2.4.18): http://home.apache.org/~rpluem/patches/proxy_correctlifetime.diff", "id": 189512, "time": "2016-03-16T16:59:51Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2016-03-16T16:59:51Z", "tags": [], "is_private": false}]