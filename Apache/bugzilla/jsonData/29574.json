[{"count": 0, "tags": [], "text": "This filter allows a simple filter on MDC elements. It provide a simpler syntax\nthan ExpressionFilter for those who only want to log based on a MDC value. \n\nHere is the code and a XML configuration sample:\n\n---------------------------------\n/*\n * Created on 2004-06-09\n * Author: Michel Rondeau\n */\npackage org.apache.log4j.spi;\n\nimport org.apache.log4j.spi.Filter;\nimport org.apache.log4j.spi.LoggingEvent;\n\n/**\n * @author rondmic\n *\n * only keep request wich values were passed by param tag ID in\nconfig file.\n * Multiple values may be passed separating them with whatever\ncharacter not used in values.\n */\npublic class MDCGenericFilter extends Filter {\n\n\tString values = null;\n\tString MDC = null;\n\t\n\t/* (non-Javadoc)\n\t * @see\norg.apache.log4j.spi.Filter#decide(org.apache.log4j.spi.LoggingEvent)\n\t */\n\tpublic int decide(LoggingEvent event) {\n\t\tint result=NEUTRAL;\n\t\t// obtain the field to filter passed through Logger\n\t\tString eventValue = (String)event.getMDC(MDC);\n\t\t// is value in filtered values\n\t\tif((values != null) && (eventValue != null) && (values.indexOf(\neventValue)>=0)) \n\t\t\tresult = DENY;\n\t\treturn result;\n\t}\n\n\t/**\n\t * @return Returns the values filtered.\n\t */\n\tpublic String getValues() {\n\t\treturn values;\n\t}\n\t/**\n\t * @param values The values to filtered\n\t */\n\tpublic void setValues(String values) {\n\t\tthis.values = values;\n\t}\n\t/**\n\t * @return Returns the mDC key.\n\t */\n\tpublic String getMDC() {\n\t\treturn MDC;\n\t}\n\t/**\n\t * @param mdc The mDC key to set.\n\t */\n\tpublic void setMDC(String mdc) {\n\t\tMDC = mdc;\n\t}\n}\n---------------------------------\n\nIt is then easily configurable in log4j.xml:\n---------------------------------\n...\n\t<appender name=\"CONSOLE\" class=\"org.apache.log4j.ConsoleAppender\">\n\t\t<!--param name=\"threshold\" value=\"ALL\"/-->\n\t\t<layout class=\"org.apache.log4j.PatternLayout\">\n\t\t\t<param name=\"ConversionPattern\" value=\"%4.4r %d %-5.5p\n[%-20.20t][%-50.50c] stack:[%100.100x] RqstID:[%-10.10X{requestID}]\nAppID:[%-3.3X{applicationID}] src:[%-12.12X{source}]\nRqstID:[%-20.20X{user}] [%-200.200m]%n\"/>\n\t\t</layout>\n\t\t<filter class=\"org.apache.log4j.spi.MDCGenericFilter\">\n\t\t\t<param name=\"values\" value=\"00000,00051\"/>\n\t\t\t<param name=\"MDC\" value=\"requestID\"/>\n\t\t</filter>\n\t\t<filter class=\"org.apache.log4j.spi.MDCGenericFilter\">\n\t\t\t<param name=\"values\" value=\"333;444;555\"/>\n\t\t\t<param name=\"MDC\" value=\"applicationID\"/>\n\t\t</filter>\n\t</appender>\n\n...\n---------------------------------", "is_private": false, "bug_id": 29574, "id": 59224, "time": "2004-06-15T13:58:07Z", "creator": "michel.rondeau@bigfoot.com", "creation_time": "2004-06-15T13:58:07Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 29574, "text": "Thanks for the contibution, but I'm marking this WONTFIX.  As you mention, ExpressionFilter does cover \nthe same functionality.  The contribution has a couple of issues:\n\n1. The header doesn't conform with the Source Header policy at http://www.apache.org/legal (wasn't in \nforce at the time of your contribution, but would be an issue now).\n\n2. The name MDCGenericFilter is poor, what does Generic mean anyway.\n\n3. The use of indexOf().  It doesn't provide any mechanism to filter based on the entire value.  Havin value \nbe a regex would make it more general purpose, but then you get close to ExpressionFilter.", "id": 106987, "time": "2007-08-21T14:30:53Z", "creator": "carnold@apache.org", "creation_time": "2007-08-21T14:30:53Z", "is_private": false, "attachment_id": null}]