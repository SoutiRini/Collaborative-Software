[{"count": 0, "tags": [], "bug_id": 25867, "attachment_id": null, "is_private": false, "id": 49955, "time": "2004-01-02T19:17:34Z", "creator": "rob@bigdis.com", "creation_time": "2004-01-02T19:17:34Z", "text": "Installing httpd-2.0.48 on solaris, with SSL support (openSSL 0.9.7c) led me to\nthe following error:\n\n[Fri Jan 02 10:18:39 2004] [warn] Init: PRNG still contains insufficient entropy!\n[Fri Jan 02 10:18:39 2004] [error] Init: Failed to generate temporary 512 bit\nRSA private key\nConfiguration Failed\n\nThe SSLRandomSeed directive was set to builtin though, which according to the\ndocs should always be available. Trying values to point it at my egd socket also\nhad no effect. A truss of the process showed it trying to open /dev/random,\n/dev/srandom, and /dev/urandom anyway. A pretty exhaustive search turned up lots\nof people with this problem, but no real definitive answers.\n\nFinally, I figured it out, and I'm guessing the situation is similar for a lot\nof people. I had just installed the server, without generating any certificates\nyet, so I was using \"apachectl start\" to make sure the server started up without\nSSL support. This of course doesn't define \"SSL\" on the command line, and the\nentire ssl.conf is wrapped in an <IFdefined SSL>. So therefore, the\nSSLRandomSeed directive was never getting read, and apache was asking openssl\nfor the default /dev/random.\n\nSo \"apachectl start\" seems to be broken if the server is compiled with mod_ssl\nand the platform does not have a /dev/random. The most obvious fix is to move\nthe SSLRandomSeed directives outside of the IFdefine SSL, making them execute\nregardless of the SSL setting (but still only included if mod_ssl is present). A\npatch to do just that for ssl-std.conf.in is included. \n\nIf this isn't an appropriate solution, or \"apachectl start\" is not supported for\nssl-enabled installations, then this should be at least mentioned in the docs or\nFAQ, probably where the mention of this exact error message occurs (in the\n\"About installation\" section), as it seems to be pretty commonly encountered\n(sometimes with a different root cause, but I'd imagine this one is pretty\ncommon judging by the number of identical questions out there on the web with no\ndefinitive answer)."}, {"count": 1, "tags": [], "creator": "rob@bigdis.com", "is_private": false, "id": 49956, "creation_time": "2004-01-02T19:18:31Z", "time": "2004-01-02T19:18:31Z", "bug_id": 25867, "text": "Created attachment 9772\nPatch for ssl-std.conf.in to make seeding configuration always valid", "attachment_id": 9772}, {"count": 2, "tags": [], "bug_id": 25867, "attachment_id": null, "id": 49984, "time": "2004-01-03T11:02:41Z", "creator": "mads@apache.org", "creation_time": "2004-01-03T11:02:41Z", "is_private": false, "text": "There is already some mention of this in the FAQ:\nhttp://httpd.apache.org/docs-2.0/ssl/ssl_faq.html#entropy\n\nMaybe it is too early for me to read patches, but your patch\nappears to move the SSLRandomSeed outside <IfDefine SSL> which\nwould generally be a bad thing since the loading of mod_ssl in\na dso default config has:\n<IfDefine SSL>\nLoadModule ssl_module modules/mod_ssl.so\n</IfDefine>\nSo you'd run into startup errors whenever starting without -DSSL"}, {"count": 3, "tags": [], "bug_id": 25867, "is_private": false, "text": "Whoops. I've got a static mod_ssl, and the only place IFDefine appeared in the\ndefault config files was in ssl-std.conf wrapping the whole thing. Didn't\nrealize it was used in shared mod_ssl configurations, and that is definitely\ngoing to cause a problem. Looks like this only applies to static mod_ssl\ncompliations, and that a different fix is needed.\n\nI'm not very familiar with the apache codebase, but it would seem that the real\nfix is to not initialize mod_ssl at all if SSL is not defined at runtime. That\nwould solve the problem and would make the most sense. If you're not asking for\nssl to be turned on, then it probably should not get initialized (which then\nrequires the directives that get explicitly excluded when you run the server\nwithout -DSSL, leading to this little catch 22). Maybe I'll poke around and see\nif this possible (probably take me a while though).\n\nAs for the FAQ, right now, when someone asks this question, they get told to\nlook at the FAQ, and even if they read and understand this item completely,\nthere is still more to it. Currently in the affected configuration, you can\nchange SSLRandomSeed all you like; it never gets read out of the config file.\nYou either need to move it out of the IFdefine, or recompile the server with a\ndifferent default random socket.\n\nSo the quickest interim solution would just be to tack this on in the FAQ right\nin the section you mention:\n\n\"When mod_ssl is compiled into your httpd statically, you must start it with the\n-DSSL flag (or use \"apachectl startssl\"), otherwise the SSLRandomSeed directive\nwill be ignored, and the compiled-in default will be used.\"\n\nI do think that just a plain start command without -DSSL should work to start\nhttpd without SSL support, since starting with SSL support may not always be\ndesireable (or possible if the person starting the server doesn't know the\npassphrase for the key).", "id": 49991, "time": "2004-01-03T17:20:35Z", "creator": "rob@bigdis.com", "creation_time": "2004-01-03T17:20:35Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "mads@apache.org", "text": "Using IfDefine SSL doesn't make sense in the same way \nfor a static module as it does for the dso version.\nMy suggested fix would be to wrap everyting that is\nnow wrapped in IfDefine SSL in an IfModule instead \n(except the LoadModule and possibly the example https\nvhost).", "id": 49992, "time": "2004-01-03T17:27:43Z", "bug_id": 25867, "creation_time": "2004-01-03T17:27:43Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "rob@bigdis.com", "attachment_id": null, "id": 49993, "creation_time": "2004-01-03T17:41:03Z", "time": "2004-01-03T17:41:03Z", "bug_id": 25867, "text": "Everything is wrapped in an Ifmodule:\n\n<IfModule mod_ssl.c>\n    conf/ssl.conf\n</IfModule>\n\nBut that's alaways included since mod_ssl is static. But then since SSL is not\ndefined, everything in ssl.conf is ignored, leaving out the Seed config, causing\nit to revert to the compiled-in default. So what we need is for the\nSSLRandomSeed directives to always get loaded when mod_ssl is static, but not\nwhen it's dynamic...\n\n...Wait, shouldn't my first patch be okay then? Because in a dynamic situation\nif the mod_ssl module isn't loaded the bit I changed is already wrapped in an\nIFModule, so it should get loaded at all. If the modules not loaded, none of the\nssl config gets run...\n\n", "is_private": false}, {"count": 6, "tags": [], "bug_id": 25867, "attachment_id": null, "text": "Well, that's what I get for relying on my memory ;)\nYour patch shouldn't do any harm in the dso case.\nI'm +1 on the change.", "id": 49995, "time": "2004-01-03T18:55:52Z", "creator": "mads@apache.org", "creation_time": "2004-01-03T18:55:52Z", "is_private": false}, {"count": 7, "attachment_id": null, "creator": "erik@codefaktor.de", "text": "Yep, this logic looks correct to me. I've committed a slightly changed version of your patch to the \n2.1 tree and proposed it for backport to the 2.0 tree.\n\nSee http://cvs.apache.org/viewcvs.cgi/httpd-2.0/docs/conf/ssl-std.conf.in?r1=1.4&r2=1.5", "id": 50007, "time": "2004-01-04T15:12:03Z", "bug_id": 25867, "creation_time": "2004-01-04T15:12:03Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "bug_id": 25867, "attachment_id": null, "text": "Finally backported to 2.0 and thus in the next release. Thanks!", "id": 50754, "time": "2004-01-19T18:09:27Z", "creator": "erik@codefaktor.de", "creation_time": "2004-01-19T18:09:27Z", "is_private": false}]