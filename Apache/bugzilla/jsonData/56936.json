[{"count": 0, "tags": [], "bug_id": 56936, "attachment_id": 31978, "is_private": false, "id": 177675, "time": "2014-09-09T15:39:12Z", "creator": "Dmitry.Velichkevich@synesis.ru", "creation_time": "2014-09-09T15:39:12Z", "text": "Created attachment 31978\nThe patch for the POI OOXML library (tar.gz archive, created via the 'ant -f patch.xml' command)\n\nHi.\n\nWe experience high memory consumption during analysis certain PPTX documents by POI 3.9-beta1. Unfortunately, it is not easy to create such a problematic document. And we cannot attach our problematic documents, because they contain valuable information. Also we don\u2019t know the version of MS Office where these documents were created.\n\nAnalysis has shown that the problem is mainly in the slides with the formula element. Elements of formula contain symbols in \u2018UTF-16LE\u2019 encoding such as \u2018"}, {"count": 1, "tags": [], "creator": "Dmitry.Velichkevich@synesis.ru", "text": "Created attachment 31979\nThread stack trace dumps of problematic PPTX analyzing (plain text file)", "id": 177676, "time": "2014-09-09T15:43:19Z", "bug_id": 56936, "creation_time": "2014-09-09T15:43:19Z", "is_private": false, "attachment_id": 31979}, {"count": 2, "tags": [], "creator": "Dmitry.Velichkevich@synesis.ru", "text": "Created attachment 31980\nScreenshot of profile metrics of problematic PPTX analyzing before patching", "id": 177677, "time": "2014-09-09T15:45:40Z", "bug_id": 56936, "creation_time": "2014-09-09T15:45:40Z", "is_private": false, "attachment_id": 31980}, {"count": 3, "tags": [], "creator": "Dmitry.Velichkevich@synesis.ru", "text": "Created attachment 31981\nScreenshot of profile metrics of problematic PPTX analyzing after patching", "id": 177678, "time": "2014-09-09T15:46:08Z", "bug_id": 56936, "creation_time": "2014-09-09T15:46:08Z", "is_private": false, "attachment_id": 31981}, {"attachment_id": null, "tags": [], "bug_id": 56936, "text": "(In reply to Dmitry from comment #0)\n> Created attachment 31978 [details]\n> The patch for the POI OOXML library (tar.gz archive, created via the 'ant -f\n> patch.xml' command)\n> \n> Hi.\n> \n> We experience high memory consumption during analysis certain PPTX documents\n> by POI 3.9-beta1. Unfortunately, it is not easy to create such a problematic\n> document. And we cannot attach our problematic documents, because they\n> contain valuable information. Also we don\u2019t know the version of MS Office\n> where these documents were created.\n> \n> Analysis has shown that the problem is mainly in the slides with the formula\n> element. Elements of formula contain symbols in \u2018UTF-16LE\u2019 encoding such as \u2018\n\n", "count": 4, "id": 177679, "time": "2014-09-09T15:51:55Z", "creator": "Dmitry.Velichkevich@synesis.ru", "creation_time": "2014-09-09T15:51:55Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 56936, "attachment_id": null, "text": "", "id": 177680, "time": "2014-09-09T15:53:02Z", "creator": "Dmitry.Velichkevich@synesis.ru", "creation_time": "2014-09-09T15:53:02Z", "is_private": false}, {"count": 6, "tags": [], "creator": "Dmitry.Velichkevich@synesis.ru", "is_private": false, "text": "", "id": 177681, "time": "2014-09-09T15:54:20Z", "bug_id": 56936, "creation_time": "2014-09-09T15:54:20Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 56936, "attachment_id": null, "text": "I apologize for the incomplete description and empty comments. I tried to send sample characters in the \u2018UTF-16LE\u2019 encoding, but all the text beginning with those characters was cut.\n\nHi.\n\nWe experience high memory consumption during analysis certain PPTX documents by POI 3.9-beta1. Unfortunately, it is not easy to create such a problematic document. And we cannot attach our problematic documents, because they contain valuable information. Also we don\u2019t know the version of MS Office where these documents were created.\n\nAnalysis has shown that the problem is mainly in the slides with the formula element. Elements of formula contain symbols in \u2018UTF-16LE\u2019 encoding. The presentation may have several slides with the formula, but only some specific slide causes high memory consumption.\n\nThe cause of this problem is SAX parser called Piccolo which is used by \u2018XmlBeans\u2019 by default. 'CharUtil' at Piccolo incorrectly processes text of the problematic slides and allocating more and more memory until OOM is reached. We did not perform in-depth investigation of this problem. Thread stack trace dumps are attached to a ticket as 'pptx-analysis-stack-trace.txt' (plain text file).\n\nWe tried to figure out how to set up another XML reader for POI, but we stumbled upon the following limitation in the POI source code (org.apache.poi.xslf.usermodel.XSLFSlide):\n\n    /**\n     * Construct a SpreadsheetML slide from a package part\n     *\n     * @param part the package part holding the slide data,\n     * the content type must be <code>application/vnd.openxmlformats-officedocument.slide+xml</code>\n     * @param rel  the package relationship holding this slide,\n     * the relationship type must be http://schemas.openxmlformats.org/officeDocument/2006/relationships/slide\n     */\n    XSLFSlide(PackagePart part, PackageRelationship rel) throws IOException, XmlException {\n        super(part, rel);\n\n        SldDocument doc =\n            SldDocument.Factory.parse(getPackagePart().getInputStream());\n        _slide = doc.getSld();\n        setCommonSlideData(_slide.getCSld());\n    }\n\nExecution is delegated to the \u2018XmlBeans\u2019 implementation in this constructor. And this implementation uses \u2018XmlOptions\u2019 to get configuration of XML API (\u2018SAXParserFactory\u2019 and \u2018XMLReader\u2019 implementions and so on). But \u2018XSLFSlide\u2019 does not put \u2018XmlOptions\u2019 parameter to \u2018SldDocument.Factory.parse()\u2019 method. Hence, \u2018XmlBeans\u2019 always selects Piccolo parser.\n\nWe have performed some tests and have come up with a patch to \u2018poi-ooxml\u2019 lib (specifically the \u2018XSLFSlide\u2019 class), where the Xerces SAX parser is used instead of the Piccolo SAX parser in the class. This change dramatically effects the system resources and no spike is seen in memory at all (compare \u2018pptx-analysis-before-patching.jpg\u2019 with \u2018pptx-analysis-after-patching.jpg\u2019 profiling metrics screenshots attached to the ticket).\n\nWe have attached the patch as TAR.GZ archive called \u2018patch.tar.gz\u2019 (created using \u2018ant -f patch.xml\u2019 command). We hope very much that this patch will be applied in future versions of POI, because POI 3.10-FINAL also does not allow set up XML API.\n\nBut the best option is the ability to customize XML API implementation for POI in accordance with the following documentation (including SAXParserFactory, XMLReader and so on):\n\nhttp://docs.oracle.com/javase/7/docs/api/javax/xml/parsers/SAXParserFactory.html#newInstance%28%29\n\nPlease, let me know if I should report this kind of improvement as a separate ticket.\n\nLooking forward for your input.\n\nRegards,\n\nDmitry", "id": 177682, "time": "2014-09-09T16:04:52Z", "creator": "Dmitry.Velichkevich@synesis.ru", "creation_time": "2014-09-09T16:04:52Z", "is_private": false}, {"count": 8, "tags": [], "text": "Created attachment 32141\ncustom xml options patch\n\nHow about not hard coding the xmlreader inside the xslfslide instead providing a mechanism to generally override the used xmloption for all classes?\n(see TestXSLFBugs.bug56936())\n\nPlease give it a try and see if it works for you.", "is_private": false, "id": 178712, "creator": "kiwiwings@apache.org", "time": "2014-10-23T23:19:38Z", "bug_id": 56936, "creation_time": "2014-10-23T23:19:38Z", "attachment_id": 32141}, {"count": 9, "tags": [], "text": "Although I've provided a patch over a year ago - there was no feedback.\nAs I'm not convinced of neither of the patches, I'm closing this now as wont \nfix ...\n\nAndi", "attachment_id": null, "id": 186408, "creator": "kiwiwings@apache.org", "time": "2015-11-16T23:12:13Z", "bug_id": 56936, "creation_time": "2015-11-16T23:12:13Z", "is_private": false}]