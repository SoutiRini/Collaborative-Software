[{"count": 0, "tags": [], "creator": "tomcat_dev@sage.ne.jp", "text": "Version : tomcat 4.1.30\nTomcat component : org.apache.catalina.util.RequestUtil\nPlatform : Sparc\nOS : Solaris 8\nJVM - JDK 1.4.2_04\nWeb Server : Apache 2.0.49\n\nrequest(GET)  http[s]://hostname/context/servlet?test%\n\n[Exception]\njava.lang.ArrayIndexOutOfBoundsException: 8\n        at org.apache.catalina.util.RequestUtil.parseParameters(RequestUtil.\njava:539)\n        at org.apache.catalina.util.RequestUtil.parseParameters(RequestUtil.\njava:348)\n        at org.apache.catalina.connector.HttpRequestBase.\nparseParameters(HttpRequestBase.java:632)\n        at org.apache.catalina.connector.HttpRequestBase.\ngetParameterNames(HttpRequestBase.java:748)\n        at org.apache.catalina.connector.RequestFacade.\ngetParameterNames(RequestFacade.java:176)\n        at javax.servlet.ServletRequestWrapper.\ngetParameterNames(ServletRequestWrapper.java:223)\n        at jp.co.test.testServlet.doGet(testServlet.java:38)\n\n\n[patch]\n\n# diff -u RequestUtil.java.orig RequestUtil.java\n--- RequestUtil.java.orig       2004-06-24 13:11:11.363180000 +0900\n+++ RequestUtil.java    2004-06-24 13:11:10.653172000 +0900\n@@ -432,8 +432,17 @@\n             if (b == '+') {\n                 b = (byte)' ';\n             } else if (b == '%') {\n-                b = (byte) ((convertHexDigit(bytes[ix++]) << 4)\n-                            + convertHexDigit(bytes[ix++]));\n+                switch(len - ix) {\n+                case 0:\n+                    b = (byte) 0;\n+                    break;\n+                case 1:\n+                    b = (byte) convertHexDigit(bytes[ix++]);\n+                    break;\n+                default:\n+                    b = (byte) ((convertHexDigit(bytes[ix++]) << 4)\n+                                + convertHexDigit(bytes[ix++]));\n+                };\n             }\n             bytes[ox++] = b;\n         }\n@@ -536,8 +545,17 @@\n                     data[ox++] = (byte)' ';\n                     break;\n                 case '%':\n-                    data[ox++] = (byte)((convertHexDigit(data[ix++]) << 4)\n-                                    + convertHexDigit(data[ix++]));\n+                    switch(data.length - ix) {\n+                    case 0:\n+                        data[ox++] = (byte)0;\n+                        break;\n+                    case 1:\n+                        data[ox++] = (byte)convertHexDigit(data[ix++]);\n+                        break;\n+                    default:\n+                        data[ox++] = (byte)((convertHexDigit(data[ix++]) << 4)\n+                                        + convertHexDigit(data[ix++]));\n+                    };\n                     break;\n                 default:\n                     data[ox++] = c;\n#", "id": 59818, "time": "2004-06-24T05:02:48Z", "bug_id": 29777, "creation_time": "2004-06-24T05:02:48Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 29777, "is_private": false, "id": 59955, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2004-06-27T18:53:05Z", "time": "2004-06-27T18:53:05Z", "text": "I have tested this with the latest version of the tomcat 4 source (from CVS) \nand I do not see the exception. The invalid parameter name is ignored."}, {"count": 2, "tags": [], "bug_id": 29777, "text": "I have not tested this with the latest version of the Tomcat4 source (from \nCVS) yet.\nBut this problem is Solaris only?\nIt did not occur in Windows (same version as Solaris).\n\n\n[test servlet]\npublic class testServlet extends HttpServlet {\n\n\tprotected void doGet(HttpServletRequest request, HttpServletResponse \nresponse) throws ServletException, IOException {\n\t\tprintOutput(response, \"test\" + \"<BR>\");\n\t\tEnumeration enum = request.getParameterNames();\n\t\tif(enum != null) {\n\t\t\tObject obj = null;\n\t\t\twhile(enum.hasMoreElements()) {\n\t\t\t\tobj = enum.nextElement();\n\t\t\t\tprintOutput(response, obj.toString() + \"<BR>\");\n\t\t\t}\n\t\t};\n\t\tprintOutput(response, \"test2\" + \"<BR>\");\n\t}\n\tprotected void printOutput(HttpServletResponse response, String str) {\n\t\ttry {\n\t\t\tPrintWriter out = response.getWriter();\n\t\t\tout.print(str);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t};\n\t}\n}\n\n[web.xml]\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n\n<!DOCTYPE web-app\n    PUBLIC \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n    \"http://java.sun.com/dtd/web-app_2_3.dtd\">\n\n<web-app>\n <servlet>\n    <servlet-name>test</servlet-name>\n    <servlet-class>test.testServlet</servlet-class>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>test</servlet-name>\n    <url-pattern>/test</url-pattern>\n  </servlet-mapping>\n</web-app>", "id": 59966, "time": "2004-06-28T06:19:36Z", "creator": "tomcat_dev@sage.ne.jp", "creation_time": "2004-06-28T06:19:36Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 29777, "attachment_id": null, "id": 69375, "time": "2005-01-07T18:27:55Z", "creator": "markt@apache.org", "creation_time": "2005-01-07T18:27:55Z", "is_private": false, "text": "Just looked at this again and it is related to the JK connector between Apache\nand Tomact.\n\nI'll change the component.\n\n"}, {"count": 4, "tags": [], "creator": "karlliu@yahoo.com", "text": "Created attachment 14418\nI had exact same code and same problem. But I got around by using for loop as displayed", "id": 71885, "time": "2005-03-06T22:08:02Z", "bug_id": 29777, "creation_time": "2005-03-06T22:08:02Z", "is_private": false, "attachment_id": 14418}, {"count": 5, "tags": [], "creator": "karlliu@yahoo.com", "is_private": false, "text": "Created attachment 14419\nBut meanwhile I have same problem with loop of enumeration.hasMoreElements() from request.getAllAttributes()\n\nand I can see that enumeration.hasMoreElements() still true when there is no\nmore.", "id": 71886, "time": "2005-03-06T22:14:00Z", "bug_id": 29777, "creation_time": "2005-03-06T22:14:00Z", "attachment_id": 14419}, {"count": 6, "attachment_id": null, "bug_id": 29777, "text": "If you have a new issue, please open a new bug report.", "id": 71922, "time": "2005-03-07T20:33:13Z", "creator": "markt@apache.org", "creation_time": "2005-03-07T20:33:13Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "creator": "markt@apache.org", "text": "I have done some testing and I can repeat this on both Linux and Win32.\n\nThe bug is in the parameter handling of the\norg.apache.ajp.tomcat4.Ajp13Connector connector, as you correctly point out. The\nfix is to use the newer org.apache.coyote.tomcat4.CoyoteConnector connector with\nthe org.apache.jk.server.JkCoyoteHandler\n\nThe connector documentation is not as clear about which connectors are\ndeprecated and which are not and as a result I have re-written large chunks of\nthe documentation as a result.\n\nI will update the website soon, but I need to filter out changes in the docs\nthat relate to features implemented post 4.1.31 first.\n\nSince the connector with the bug is deprecated, this bug is WONTFIX.", "id": 75447, "time": "2005-05-26T21:50:31Z", "bug_id": 29777, "creation_time": "2005-05-26T21:50:31Z", "is_private": false, "attachment_id": null}]