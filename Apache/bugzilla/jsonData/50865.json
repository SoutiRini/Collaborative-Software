[{"count": 0, "tags": [], "bug_id": 50865, "is_private": false, "text": "Hi,\n\nI have a docbook document in 2 languages: The document itself is in English, but there are many parts in Russian. I can have hyphenation for the English language but not with the Russian parts (the languages may be mixed in some paragraphs.)\n\nI use oXygen (the latest), and xmlmind (the latest) on Linux.\n\nI tried many ways to get what I wanted: the Russian parts are taggued as foreignphrases and lang=ru. I tried to only set the lang attribute, but with no result.\n\nIs there a way to have the hyphenation working with 2 languages?\n\nThanks for your help,\n\nEric", "id": 144706, "time": "2011-03-03T12:02:17Z", "creator": "eric@yojik.eu", "creation_time": "2011-03-03T12:02:17Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 50865, "text": "The problem is most likely caused by the FO specification, which makes hyphenation\nproperties, including the language relevant for hyphenation, only effective on\nfo:block, which corresponds to DocBook paragraph level elements (ignoring\nfo:character here). The ForeignPhrase DocBook element appears to be an inline\nelement, therefore changing the language here is ignored. You can check for\nyourself by generating and examining the FO output for your DocBook source.\nFor further reference, see http://www.w3.org/TR/xsl/\n\nI'll leave this report open because honoring the language on fo:inline,\nfo:wrapper and perhaps other inline flow elements would make an useful\nextension.", "id": 144715, "time": "2011-03-03T15:12:25Z", "creator": "j3322ptm@yahoo.de", "creation_time": "2011-03-03T15:12:25Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 50865, "attachment_id": null, "id": 144716, "creation_time": "2011-03-03T15:27:44Z", "time": "2011-03-03T15:27:44Z", "creator": "gadams@apache.org", "text": "I believe this is an interpretation (and thus implementation) error, rather than a spec error.\n\nEvery #PCDATA character in FO is modeled as an anonymous, individual fo:character, whether explicitly wrapped in fo:character or not (see 1.1.2):\n\n\"As part of the step of objectifying, the characters that occur in the result tree are replaced by fo:character nodes.\"\n\nSince the \"language\" property applies to fo:character (along with the other common hyphenation properties), and since it is inherited, then during property refinement, the appearance of the language property on an ancestor, e.g., fo:wrapper, fo:inline, etc., applies for the purpose of determining the language of these anonymous fo:character FOs.\n\nSo, in fact, \"ignoring fo:character\" is the fundamental error here. You can't ignore fo:character for hyphenation properties that might be specified on inline, wrapper, etc.\n\nG.\n\n(In reply to comment #1)\n> The problem is most likely caused by the FO specification, which makes\n> hyphenation\n> properties, including the language relevant for hyphenation, only effective on\n> fo:block, which corresponds to DocBook paragraph level elements (ignoring\n> fo:character here). The ForeignPhrase DocBook element appears to be an inline\n> element, therefore changing the language here is ignored. You can check for\n> yourself by generating and examining the FO output for your DocBook source.\n> For further reference, see http://www.w3.org/TR/xsl/\n> \n> I'll leave this report open because honoring the language on fo:inline,\n> fo:wrapper and perhaps other inline flow elements would make an useful\n> extension.", "is_private": false}, {"count": 3, "tags": [], "bug_id": 50865, "attachment_id": null, "id": 144718, "creation_time": "2011-03-03T16:10:56Z", "time": "2011-03-03T16:10:56Z", "creator": "adelmelle@apache.org", "text": "(In reply to comment #2)\n> I believe this is an interpretation (and thus implementation) error, rather\n> than a spec error.\n> \n> Every #PCDATA character in FO is modeled as an anonymous, individual\n> fo:character, whether explicitly wrapped in fo:character or not (see 1.1.2):\n> \n> \"As part of the step of objectifying, the characters that occur in the result\n> tree are replaced by fo:character nodes.\"\n\nYep, that sounds about right.\n\norg.apache.fop.fo.FOText is already bound to the correct Common Hyphenation properties. Since they are inherited, regardless of whether they /apply/ to a parent fo:inline or fo:wrapper, those specified values are available to the layout engine through FOText.getCommonHyphenation(). \nThe real defect seems to be that they are simply not taken into account when hyphenation is triggered in LineLayoutManager. Its hyphenationProperties member is only set once, in initialize(), and taken from the Block associated to its parent BlockLayoutManager...", "is_private": false}, {"count": 4, "tags": [], "creator": "gadams@apache.org", "is_private": false, "id": 157496, "creation_time": "2012-04-07T01:43:54Z", "time": "2012-04-07T01:43:54Z", "bug_id": 50865, "text": "resetting P2 open bugs to P3 pending further review", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 50865, "is_private": false, "text": "please provide minimal input FO file, output PDF file(s), and all console output demonstrating problem", "id": 157663, "time": "2012-04-08T05:05:39Z", "creator": "gadams@apache.org", "creation_time": "2012-04-08T05:05:39Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "(In reply to comment #5)\n> please provide minimal input FO file, output PDF file(s), and all console\n> output demonstrating problem\n\nStreit, I am still awaiting your input as requested above. if I see no further input by April 30, I will close this bug due to lack of requested information. Regards, Glenn", "id": 158339, "time": "2012-04-24T05:34:21Z", "bug_id": 50865, "creation_time": "2012-04-24T05:34:21Z", "is_private": false}]