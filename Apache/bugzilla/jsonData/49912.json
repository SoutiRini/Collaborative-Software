[{"count": 0, "attachment_id": null, "bug_id": 49912, "is_private": false, "id": 139808, "time": "2010-09-10T08:16:27Z", "creator": "noelgrandin@gmail.com", "creation_time": "2010-09-10T08:16:27Z", "tags": [], "text": "If I run an ANT build file with something like this in it, and turn on verbose logging:\n\n<filelist dir=\"//IFSCONFIG/\" id=\"peralex.libs1\">\n  <file name=\"temp1\\one.jar\" />\n</filelist>\n\n<javac debug=\"on\" destdir=\"${BuildClassDir}\">\n  <src path=\"${BuildSrcDir}\" />\n  <classpath>\n    <filelist refid=\"peralex.libs1\" />\n  </classpath>\n</javac>\n\nI will get output like this:\n\n    [javac] Using modern compiler\ndropping Z:\\IFSCONFIG\\temp1\\one.jar from path as it doesn't exist\n\nand my build fails because the javac compiler cannot find the library jar file."}, {"count": 1, "tags": [], "bug_id": 49912, "text": "Installed ANT 1.8.0 and confirmed that the bug still exists there.\n\nAlso confirmed that it makes no difference if I do this:\n\n <filelist dir=\"//IFSCONFIG/\" >\n\nor this:\n\n <filelist dir=\"\\\\IFSCONFIG\\\" >", "id": 139812, "time": "2010-09-10T09:31:48Z", "creator": "noelgrandin@gmail.com", "creation_time": "2010-09-10T09:31:48Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 49912, "is_private": false, "id": 139819, "attachment_id": null, "creator": "mbenson@apache.org", "creation_time": "2010-09-10T10:32:56Z", "time": "2010-09-10T10:32:56Z", "text": "On Windows, \\\\foo is not a directory; only \\\\foo\\bar is.  Ant's filename normalization code reflects this.  I am thinking that's what's not working with your example."}, {"count": 3, "tags": [], "creator": "noelgrandin@gmail.com", "attachment_id": null, "id": 139820, "time": "2010-09-10T10:41:56Z", "bug_id": 49912, "creation_time": "2010-09-10T10:41:56Z", "is_private": false, "text": "Confirmed that changing it to\n\n<filelist dir=\"//IFSCONFIG/temp\" id=\"peralex.libs1\">\n  <file name=\"one.jar\" />\n</filelist>\n\nmakes it work. \n\nSurely it should be concatenating the dir attribute and the name attribute before it does any normalisation?"}, {"count": 4, "tags": [], "bug_id": 49912, "attachment_id": null, "id": 152932, "creation_time": "2012-01-19T14:50:10Z", "time": "2012-01-19T14:50:10Z", "creator": "jglick@apache.org", "text": "A dir attribute to a task or type like <fileset> needs to refer to an actual directory, not a string which could represent a directory when some text is appended to it.", "is_private": false}, {"count": 5, "attachment_id": null, "bug_id": 49912, "is_private": false, "id": 152937, "time": "2012-01-19T15:30:35Z", "creator": "noelgrandin@gmail.com", "creation_time": "2012-01-19T15:30:35Z", "tags": [], "text": "That might be so at the level of the operating system API, but from a developers  perspective, \"\\\\IFSCONFIG\" is very a real path - it represents the server IFSCONFIG.\n\nAnd, in fact I can even browse there by typing \"\\\\IFSCONFIG\" into the start menu, so from the point of view of someone running windows, it is also a \"real path\".\n\nWhat matters more, the purity of obeying the file-system level API, or providing a good developer experience?"}, {"count": 6, "tags": [], "creator": "jglick@apache.org", "attachment_id": null, "id": 152952, "time": "2012-01-19T21:06:41Z", "bug_id": 49912, "creation_time": "2012-01-19T21:06:41Z", "is_private": false, "text": "(In reply to comment #5)\n> I can even browse there by typing \"\\\\IFSCONFIG\" into the start menu\n\nProbably this is special-cased in the Windows shell to do a lookup on exported volumes, rather than an actual directory listing."}, {"count": 7, "tags": [], "bug_id": 49912, "attachment_id": null, "id": 152965, "time": "2012-01-20T07:32:39Z", "creator": "noelgrandin@gmail.com", "creation_time": "2012-01-20T07:32:39Z", "is_private": false, "text": "Perhaps ANT can special case path components that start with \"\\\\\" and only have one token?\n\nWould a patch implementing such logic be acceptable?\n\nAnd if so, could you point me at the most likely part of the source tree to start looking in?"}, {"count": 8, "attachment_id": null, "bug_id": 49912, "is_private": false, "id": 153058, "time": "2012-01-23T16:03:50Z", "creator": "jglick@apache.org", "creation_time": "2012-01-23T16:03:50Z", "tags": [], "text": "(In reply to comment #7)\n> Perhaps ANT can special case path components that start with \"\\\\\" and only have\n> one token?\n\nNot sure if that is possible. FileList itself cannot special-case this because its 'dir' attribute is of type java.io.File. If new File(new File(\"\\\\\\\\server\"), \"path\")) works correctly, then file normalization code somewhere in Ant core could specifically exempt paths matching \"\\\\\\\\\\\\\\\\[^\\\\\\\\]+\" or something."}, {"count": 9, "tags": [], "bug_id": 49912, "is_private": false, "id": 153063, "creation_time": "2012-01-23T16:35:05Z", "time": "2012-01-23T16:35:05Z", "creator": "mbenson@apache.org", "text": "I wouldn't say this was impossible, but the current amount of manpower being expended towards Ant development, the number of code points that would need to be touched, the resulting tremendous risks to backward-compatibility, and the resulting incompatibilities among custom filesystem-based tasks are the concerns that immediately present themselves as seriously detracting from the value of such an endeavor.", "attachment_id": null}]