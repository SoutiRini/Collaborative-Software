[{"count": 0, "tags": [], "creator": "william.barker@wilshire.com", "text": "I have configuared tomcat to use the NIO impl over AJP, here are the lines in\nserver.xml \n    <Connector address=\"127.0.0.1\" port=\"0\" \n\n               channelNioSocket.port=\"8009\" \n               channelNioSocket.soTimeout=\"600000\" \n               channelNioSocket.bufferSize=\"16384\" \n               channelNioSocket.maxThreads=\"125\" \n               channelNioSocket.minSpareThreads=\"10\" \n               channelNioSocket.maxSpareThreads=\"50\" \n\n               redirectPort=\"8443\" protocol=\"AJP/1.3\" \n               useBodyEncodingForURI=\"true\" \n               /> \n\n(TC version 5.5.17) \nI had setted the soTimeout with 10 minutes, cause I notice such stages in\nserver status \n\nStage Time B Sent B Recv Client VHost Request \nS 33280840 ms 359 KB 0 KB x.x.x.x 127.0.0.1 GET ... \n\nThat shows several requests were blocking on reading request bodies for\nhours. \n\nBut unfortunately it dosen't worked for me, I am expecting a request should\nonly blocking mostly 10 minutes on read, after that a SocketTimeoutException\nshould raised. \n\nAfter digest the source code of ChannelNioSocket.java, I found that\nChannelNioSocket.SocketInputStream just wait infinitly if no data comes\nwhile socket could not be detected closing \n\n        private void block(int len) throws IOException { \n            ... ... \n            if(!dataAvailable) { \n                blocking = true; \n                if(log.isDebugEnabled()) \n                    log.debug(\"Waiting for \"+len+\" bytes to be available\"); \n                try{ \n                    wait(socketTimeout); \n                }catch(InterruptedException iex) { \n                    log.debug(\"Interrupted\",iex); \n                } \n                blocking = false; \n            } \n            if(dataAvailable) { \n                dataAvailable = false; \n                if(fill(len) < 0) { \n                    isClosed = true; \n                } \n            } \n        } \n\nThe socketTimeout parameter is not used to throw SocketTimeoutException,\nactually it has no meaning. \n\nI even read the source for TC 6.0.13, the same as above. \n\nShould it be more precisely that throwing SocketTimeoutException on later\ncondiction test for (dataAvailable) is not true? \n\nIn ChannelSocket implement, the problem is not exists,  it uses blocking\nSocket.getInputStream, and it would throws SocketTimeoutException for socket\ntimeout while Socket.setSoTimeout was called\n\n-- \nView this message in context: http://www.nabble.com/soTimeout-not-worked-on-\nchannelNioSocket-tf4586319.html#a13091614\nSent from the Tomcat - Dev mailing list archive at Nabble.com.", "id": 109336, "time": "2007-10-14T17:14:51Z", "bug_id": 43621, "creation_time": "2007-10-14T17:14:51Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 43621, "text": "Actually, it is a more general problem where the NIO/AJP Connector doesn't \nhandle Apache dropping the connection well at all.  Fortunately, this module \nis still marked as \"Experimental\".", "count": 1, "id": 109337, "time": "2007-10-14T17:16:43Z", "creator": "william.barker@wilshire.com", "creation_time": "2007-10-14T17:16:43Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 43621, "attachment_id": 20976, "id": 109338, "time": "2007-10-14T17:19:57Z", "creator": "william.barker@wilshire.com", "creation_time": "2007-10-14T17:19:57Z", "is_private": false, "text": "Created attachment 20976\nPatch to fix this problem\n\nThis should fix the Apache close, when TC can detect it.  In addition it also\nhandles the case of non-default connectionTimeouts (which really isn't\nrecommended for this Connector)."}, {"count": 3, "tags": [], "creator": "william.barker@wilshire.com", "text": "Patch applied to TC 5.5, so changing version to 6.0 to apply the patch there \nas well.", "id": 109518, "time": "2007-10-21T01:37:32Z", "bug_id": 43621, "creation_time": "2007-10-21T01:37:32Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "william.barker@wilshire.com", "text": "Created attachment 21047\nTC6 version of the patch\n\nNo functional change, but fixes packaging from 5.5 (which I forgot about)", "id": 109763, "time": "2007-10-25T20:08:11Z", "bug_id": 43621, "creation_time": "2007-10-25T20:08:11Z", "is_private": false, "attachment_id": 21047}, {"count": 5, "tags": [], "creator": "william.barker@wilshire.com", "text": "This is now fixed in TC 5.5 and 6.0 with the patches attached.", "id": 109764, "time": "2007-10-25T20:08:54Z", "bug_id": 43621, "creation_time": "2007-10-25T20:08:54Z", "is_private": false, "attachment_id": null}]