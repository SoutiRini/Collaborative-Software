[{"count": 0, "tags": [], "bug_id": 60695, "attachment_id": null, "text": "[Mon Feb 06 13:49:21.307457 2017] [mpm_prefork:notice] [pid 25042] AH00163: Apache/2.4.25 (Unix) OpenSSL/1.0.2h configured -- resuming normal operations\n...\n[Mon Feb 06 13:49:39.717207 2017] [core:debug] [pid 25047] protocol.c(1273): [client 127.0.0.1:40144] AH00566: request failed: malformed request line\n\n\nAny httpd version prior 2.4.25 did work. I tried combo 2.4.23/1.0.2k without problems.\n\nhttpd 2.4.25 / openssl 1.0.2k same problem\n\ndisabling mod_ssl mitigates the problem, but is no option.\n\nIs there interference between the new \"Enforce HTTP request grammar corresponding to RFC7230\" extension and mod_ssl request handling?", "id": 196752, "time": "2017-02-06T12:58:26Z", "creator": "gunnar.lukas@att.com", "creation_time": "2017-02-06T12:58:26Z", "is_private": false}, {"count": 1, "tags": [], "text": "Hi Gunnar,\n\ncan you try https://httpd.apache.org/docs/2.4/mod/core.html#httpprotocoloptions to see if it resolves your problem? There shouldn't be any relationship with mod_ssl, so it might probably be a red herring.\n\nHave you found the HTTP request that causes the problem? If so, can you paste it in here so we can review it?\n\nThanks,\n\nLuca", "attachment_id": null, "bug_id": 60695, "id": 196753, "time": "2017-02-06T13:03:52Z", "creator": "toscano.luca@gmail.com", "creation_time": "2017-02-06T13:03:52Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 60695, "text": "different behaviour with and without SSL:\n\n\nSSLEngine               on\n\n---\nGET /hello.txt HTTP/1.1\nUser-Agent: curl/7.16.3\nHost: www.example.com\nAccept-Language: en, mi\n\nHTTP/1.1 400 Bad Request\nDate: Mon, 06 Feb 2017 13:09:24 GMT\nServer: Apache\nContent-Length: 587\nConnection: close\nContent-Type: text/html; charset=iso-8859-1\n\n-----------------------------------------------\n\nSSLEngine               off\n\n\nConnected to 0.0.0.0.\nEscape character is '^]'.\nGET /hello.txt HTTP/1.1\nUser-Agent: curl/7.16.3\nHost: www.example.com\nAccept-Language: en, mi\n\nHTTP/1.1 403 Forbidden\nDate: Mon, 06 Feb 2017 13:10:11 GMT\nServer: Apache\nContent-Length: 583\nContent-Type: text/html; charset=iso-8859-1", "id": 196755, "attachment_id": null, "creator": "gunnar.lukas@att.com", "creation_time": "2017-02-06T13:13:11Z", "time": "2017-02-06T13:13:11Z", "is_private": false}, {"count": 3, "tags": [], "text": "Hi Luca,\nthx for quick response. Yes \"HttpProtocolOptions Allow0.9 Unsafe\" does help here, but would be good to understand what exactly is the new 2.4.45 behaviour before updating our prod servers. Had to add this config option to all configurations otherwise.\nThx Gunnar", "attachment_id": null, "bug_id": 60695, "id": 196756, "time": "2017-02-06T13:17:25Z", "creator": "gunnar.lukas@att.com", "creation_time": "2017-02-06T13:17:25Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 60695, "attachment_id": null, "text": "Hi,\n\nfound out that commenting out the snipplet\n\n    if (crlf && (last_char <= *s || last_char[-1] != APR_ASCII_CR)) {\n        *last_char = '\\0';\n        bytes_handled = last_char - *s;\n        *read = bytes_handled;\n        return APR_EINVAL;\n    }\n\nwhich went into protocol.c with revision 1772678 does help to make it work for me with ssl again. This turns the request to error code 400 while the request is a valid one. Is it possible, that there is now a difference between using \"openssl s_client\" and telnet while talking to apache?", "id": 196777, "time": "2017-02-06T18:31:34Z", "creator": "gunnar.lukas@att.com", "creation_time": "2017-02-06T18:31:34Z", "is_private": false}, {"count": 5, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 196778, "time": "2017-02-06T18:58:32Z", "bug_id": 60695, "creation_time": "2017-02-06T18:58:32Z", "is_private": false, "text": "(In reply to Gunnar Lukas from comment #4)\n> Hi,\n> \n> found out that commenting out the snipplet\n> \n>     if (crlf && (last_char <= *s || last_char[-1] != APR_ASCII_CR)) {\n>         *last_char = '\\0';\n>         bytes_handled = last_char - *s;\n>         *read = bytes_handled;\n>         return APR_EINVAL;\n>     }\n> \n> which went into protocol.c with revision 1772678 does help to make it work\n> for me with ssl again. This turns the request to error code 400 while the\n> request is a valid one. Is it possible, that there is now a difference\n> between using \"openssl s_client\" and telnet while talking to apache?\n\nA security fix rejects non CR LF line endings.\n\n     status-line = HTTP-version SP status-code SP reason-phrase CRLF\n\nIt's not a valid request when typed into s_client because the line ending is not CRLF."}, {"count": 6, "tags": [], "bug_id": 60695, "attachment_id": null, "text": "See the -crlf option of s_client", "id": 196779, "time": "2017-02-06T19:00:26Z", "creator": "covener@gmail.com", "creation_time": "2017-02-06T19:00:26Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 60695, "attachment_id": null, "text": "solved so far:\n\nopenssl s_client -crlf\n\nmakes it work agin. But that Apache is not happy without crlf anymore will  probably confuse some guys like me using command line tools since years. Not to forget all low level monitoring tools ...", "id": 196780, "time": "2017-02-06T19:00:53Z", "creator": "gunnar.lukas@att.com", "creation_time": "2017-02-06T19:00:53Z", "is_private": false}, {"count": 8, "tags": [], "creator": "toscano.luca@gmail.com", "attachment_id": null, "id": 196847, "time": "2017-02-08T10:36:36Z", "bug_id": 60695, "creation_time": "2017-02-08T10:36:36Z", "is_private": false, "text": "Hi Gunnar,\n\nI added some info to https://httpd.apache.org/docs/trunk/mod/core.html#httpprotocoloptions (will backport them to the 2.4 docs too) that should help other people in the future.\n\nLet me know if it would have helped in your case.\n\nThanks!\n\nLuca"}, {"count": 9, "tags": [], "bug_id": 60695, "text": "Hi Luca,\nyep that would had helped and will help others as well. Perhaps a little note in the release notes as you did for response headers a la\n...Validate HTTP request header grammar defined by RFC7230, resulting in a 400 error...\nwill make it round. Most check this first.\nMany Thx! \nGunnar", "id": 196854, "attachment_id": null, "creator": "gunnar.lukas@att.com", "creation_time": "2017-02-08T13:02:01Z", "time": "2017-02-08T13:02:01Z", "is_private": false}]