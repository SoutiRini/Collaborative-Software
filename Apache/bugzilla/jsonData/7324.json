[{"count": 0, "tags": [], "creator": "craiglaurent@yahoo.com", "attachment_id": null, "id": 12129, "time": "2002-03-21T13:54:45Z", "bug_id": 7324, "creation_time": "2002-03-21T13:54:45Z", "is_private": false, "text": "I would like to suggest an enhancement to the Uptodate task (and\nCondition/uptodate).  Maybe even more generally to the Fileset task.\n\nI tried to include multiple srcfiles filesets, but the task only seemed to use\nthe first one.  It didn't complain about the others, but it also didn't seem to\nuse them.  While it would be nice if it errored out when finding more, it would\nbe much more useful if it used all filesets specified.\n\nA better generalization would be to allow multiple filesets to be combined into\na single fileset.  Or allow a fileset to contain at least one level of filesets.\nThis would be useful if I wanted to exclude **test.java, but wanted to include\nRetest.java  (ok, this example is a bit contrived).  Another example would be\nwanting to exclude server/**, but wanting to include server/Locator.java.\nSure, every include file could be specified, but that seems likely to make an\nuglier build file.\n\nHere is how it has to be done now:\n      <fileset dir=\"${classes.dir}\">\n        <patternset refid=\"production.classes.patternset\"/>\n        <exclude name=\"**/server/**\"/>\n      </fileset>\n      <fileset dir=\"${classes.dir}\">\n        <include name=\"**/server/Locator.class\"/>\n      </fileset>\nBut, this doesn't work in places like the uptodate task which only take one fileset.\n\n\nHere is an example of what would be nice to check with the uptodate check:\n  <property name=\"build.dir\" value=\"./build\" />\n  <property name=\"classes.dir\" value=\"${build.dir}/classes\" />\n  <property name=\"config.dir\" value=\"./config\" />\n<uptodate property=\"jar.required\"  >\n  <srcfiles dir= \"${classes.dir}\" includes=\"**/*.java\"/>\n  <srcfiles dir= \"${config.dir}\" includes=\"Manifest.txt\"/>\n  <mapper type=\"merge\" to=\"${build.dir}/application.jar\"/>\n</uptodate>"}, {"count": 1, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "is_private": false, "id": 12738, "time": "2002-04-03T12:07:06Z", "bug_id": 7324, "creation_time": "2002-04-03T12:07:06Z", "text": "<uptodate> will use all <srcfiles> you have specified, something else must\nbe wrong on your end if it doesn't seem to do so.\n\nYou should probably add in some <echo>s to make sure the properties are set\nto what you think they should be - and use <property>'s location attribute if\nyou want to put together files from relative filenames."}, {"attachment_id": null, "tags": [], "bug_id": 7324, "is_private": false, "count": 2, "id": 38915, "time": "2003-06-16T10:37:54Z", "creator": "peter.reilly@corvil.com", "creation_time": "2003-06-16T10:37:54Z", "text": "The example provided has an error - it should\nread   <srcfiles dir= \"${src.dir}\" includes=\"**/*.java\"/>\nAlso the name of the property should be \"jar.not.required\" as\nthe property will get set if there is no need to update the\njar.\n\nA generalization of the uptodate task is provided\nby the ant-contrib task \"outofdate\" which allows multiple\nmappers, and works on paths instead of filesets.\n\n\n"}]