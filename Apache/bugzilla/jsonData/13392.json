[{"count": 0, "tags": [], "creator": "Juan.Oropeza@oracle.com", "is_private": false, "id": 24106, "attachment_id": null, "bug_id": 13392, "creation_time": "2002-10-07T23:29:54Z", "time": "2002-10-07T23:29:54Z", "text": "In Tomcat 4.1.12, the tag pooling functionality is enabled by default. This is \nfine except that the   public void release()method is not called on the tag \ninstances when they get re-used. This causes problems with our application \nruntime since the instance variables end up having the values from the first \nusage."}, {"count": 1, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 24122, "time": "2002-10-08T09:12:17Z", "bug_id": 13392, "creation_time": "2002-10-08T09:12:17Z", "is_private": false, "text": "This is completely normal, and your tag is not spec compliant (see the lifecycle\ndiagram). Release is only called when the instance will be marked for GCing.\nYou can either disable tag pooling or fix your tag."}, {"count": 2, "tags": [], "bug_id": 13392, "attachment_id": null, "id": 24157, "time": "2002-10-08T20:32:16Z", "creator": "Juan.Oropeza@oracle.com", "creation_time": "2002-10-08T20:32:16Z", "is_private": false, "text": "I dont agree, you are re-using the tag instance and the variables are not \nstarting at a known state. The spec does say that you have to guarantee that \nrelease() is called during garbage collection, but the tag pooling feature \nalso should reset the tag instance prior to re-use. This is a very practical \npart of the functionality. It is also a backward compatibility problem becuase \ntag pooling is on by default and existing applications will not run without \nturning it off."}, {"count": 3, "tags": [], "creator": "jan.luehe@sun.com", "is_private": false, "id": 24241, "attachment_id": null, "bug_id": 13392, "creation_time": "2002-10-09T22:21:47Z", "time": "2002-10-09T22:21:47Z", "text": "Not a bug.\n\nSee description of release() method in JSP.10.1.1.2 (JSP 1.2):\n \n  Called on a Tag handler to release state. The page compiler guarantees\n  that JSP page implementation objects will invoke this method on all\n  tag handlers, but there may be multiple invocations on doStartTag()\n  and doEndTag() in between.\n\nAlso, see\n\n  http://jakarta.apache.org/taglibs/guidelines.html\n\nItem 2:\n\n  Private, invocation-specific state must be managed manually. Implications\n  include that: \n\n    release() is not necessarily called between invocations, which means\n    that tag logic should not count on private invocation- specific state\n    being reset by release() \n\n"}, {"count": 4, "tags": [], "bug_id": 13392, "attachment_id": null, "id": 24283, "time": "2002-10-10T15:56:07Z", "creator": "Juan.Oropeza@oracle.com", "creation_time": "2002-10-10T15:56:07Z", "is_private": false, "text": "Referencing the spec for this functionality is not applicable since it doesn't \ncover the lifecycle with respect to tag pooling. I consider it 'practical' to \nreset a tag prior to re-using it in the tag pooling feature."}, {"count": 5, "text": "I suggest you patch Jasper to implement the behavior you'd like, then ;-)", "bug_id": 13392, "attachment_id": null, "id": 24287, "time": "2002-10-10T16:08:12Z", "creator": "remm@apache.org", "creation_time": "2002-10-10T16:08:12Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "creator": "Juan.Oropeza@oracle.com", "attachment_id": null, "id": 24291, "time": "2002-10-10T16:32:23Z", "bug_id": 13392, "creation_time": "2002-10-10T16:32:23Z", "is_private": false, "text": "My preference is to have this fixed in the base release and to tell our \ncustomers that Tomcat works fine and that the tag pooling functionality works \nwell with their applications without diabling this key feature. Why are you \nagainst such a practical change? "}, {"id": 24292, "tags": [], "creator": "remm@apache.org", "is_private": false, "count": 7, "text": "This will not be fixed, as the specification allows the kind of pooling we are\ndoing. You should fix your tags instead (note that you are not alone: some tags\nfrom the examples and admin webapp had to be fixed also). Please do not reopen\nthe bug.", "time": "2002-10-10T16:51:16Z", "bug_id": 13392, "creation_time": "2002-10-10T16:51:16Z", "attachment_id": null}, {"count": 8, "text": "Juan wrote:\n\n> Referencing the spec for this functionality is not applicable since it\n> doesn't cover the lifecycle with respect to tag pooling.\n\nSure it does!\n\nWhen the spec mentions that \"there may be multiple invocations on doStartTag()\nand doEndTag() in between\" [calling release()], it does consider tag pooling.\nHow else could doStartTag() and doEndTag() be called multiple times on the same\ntag handler, if the tag handler were not reused?\n", "bug_id": 13392, "is_private": false, "id": 24312, "time": "2002-10-10T19:16:34Z", "creator": "jan.luehe@sun.com", "creation_time": "2002-10-10T19:16:34Z", "tags": [], "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 13392, "attachment_id": null, "text": "*** Bug 13570 has been marked as a duplicate of this bug. ***", "id": 24451, "time": "2002-10-14T08:13:23Z", "creator": "remm@apache.org", "creation_time": "2002-10-14T08:13:23Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 13392, "attachment_id": null, "id": 24453, "time": "2002-10-14T08:14:23Z", "creator": "remm@apache.org", "creation_time": "2002-10-14T08:14:23Z", "is_private": false, "text": "*** Bug 13194 has been marked as a duplicate of this bug. ***"}, {"count": 11, "tags": [], "bug_id": 13392, "is_private": false, "id": 24807, "attachment_id": null, "creator": "remm@apache.org", "creation_time": "2002-10-17T16:55:05Z", "time": "2002-10-17T16:55:05Z", "text": "*** Bug 13741 has been marked as a duplicate of this bug. ***"}, {"id": 24836, "tags": [], "creator": "weejim@ecquaria.com", "attachment_id": null, "count": 12, "text": "I would think that this is certainly a bug:\n\n1. judging by the number of duplicate bugs reports targeting it. \n2. The behaviour is a gotcha for developers.\n3. Other major appservers are handling the behaviour as expected. \n4. Why should there be any differences in behaviour when tag pooling is turned\non or off. Developers should be transparent to it. System Admin perhaps will be\nmore interested, since it is system-tuning related.\n5. It is normal to save tag attribute values in tag instance variables. If\nrelease() is not called, there is no way to reset them right. I hope no one is\ngoing to suggest saving the tag attribute value in the request's attribute, if\nso where should the code to remove these attributes be? in release()???\n\nMaucherat,\nif this is a bug for the Jasper, could you just forward it to the person in\ncharge? Or maybe we should clarify this issue with SUN or the tomcat community\nat large regarding \nhttp://jakarta.apache.org/taglibs/guidelines.html\nthanks.", "time": "2002-10-18T02:09:14Z", "bug_id": 13392, "creation_time": "2002-10-18T02:09:14Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 13392, "is_private": false, "text": "If other containers call release() in between re-uses of the same tag, those\ncontainers are broken -- they violate the tag handler instance lifecycle as\ndescribed in the JSP specification.  Misbehavior by other implementations is NOT\na valid reason to make Tomcat broken as well.\n\nPlease do not bother to reopen this bug again.\n\nCraig McClanahan\nJ2EE Web Layer Architect\n", "id": 24838, "time": "2002-10-18T02:26:14Z", "creator": "craig.mcclanahan@sun.com", "creation_time": "2002-10-18T02:26:14Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 13392, "attachment_id": null, "id": 24851, "time": "2002-10-18T09:13:53Z", "creator": "pr@webapp.de", "creation_time": "2002-10-18T09:13:53Z", "is_private": false, "text": "OK! The Tomcat handling is correct but:\n\na) at second TagHandler call at same page can changed the sematic with tag \npooling is on. Strange!\nb) the class javax.servlet.jsp.tagext.TagSupport must clear all instance \nvariable at release() called (s. my bug report 13742)\n\n"}, {"count": 15, "text": "It's interesting that such a practical adjustment is not made. We could change \nTomcat and support many tag libraries unchanged. The choice is made to have \nALL the tag developers release new versions of their tag libraries.", "bug_id": 13392, "attachment_id": null, "id": 24865, "time": "2002-10-18T15:55:26Z", "creator": "Juan.Oropeza@oracle.com", "creation_time": "2002-10-18T15:55:26Z", "tags": [], "is_private": false}, {"count": 16, "tags": [], "creator": "remm@apache.org", "text": "If this is not compliant with the spec, it could have been broken at random by\nany particular implementation, unless all other implementors consider Jasper's\nbehavior as the example to follow.\nIt should be noted that unless there's heavy tag usage (such as in the admin\nwebapp), tag pooling brings only a small performance increase, so it's fine to\ndisable it.", "id": 24870, "attachment_id": null, "bug_id": 13392, "creation_time": "2002-10-18T17:31:42Z", "time": "2002-10-18T17:31:42Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 13392, "attachment_id": null, "text": "Can we disable it by default?", "id": 24885, "time": "2002-10-18T20:47:43Z", "creator": "Juan.Oropeza@oracle.com", "creation_time": "2002-10-18T20:47:43Z", "is_private": false}, {"count": 18, "text": "*** Bug 15281 has been marked as a duplicate of this bug. ***", "creator": "remm@apache.org", "is_private": false, "id": 27705, "time": "2002-12-12T07:51:42Z", "bug_id": 13392, "creation_time": "2002-12-12T07:51:42Z", "tags": [], "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 13392, "is_private": false, "id": 45852, "attachment_id": null, "creator": "sgabriel@brainfuse.com", "creation_time": "2003-10-17T16:35:55Z", "time": "2003-10-17T16:35:55Z", "text": "According to the specification the release method should be called before the \ntag is garbage collected. But the truth is when a programmer writes the code \nfor a tag, he/she is expecting that it will be garbage collected at the end of \nthe page. The tag pooling disable this behaviour which puts everybody in a \ntight spot. Still all tag handlers including the JSTL doesn't release the \nresources after they are done with them. I reviewed the guidlines posted on \njakarta for creating tag library. But here is an example for your Remy, I have \na page that uploads a file and creates a huge number of objects to be inserted \ninto the database, it is like Access mapping of fields feature. At the end of \nthe page with TagLibraries I am left with 20 MB of ram held in memory because \nboth Struts Iterator tag and JSTL ForEachTag doesn't set the items collection \nto null until the release. Now i have to wait for the next iteration for this \npage to be called and still I will end up with 20 MB in memory. According to \nthe guidelines these 20MB will never be released or garbage collected because \nthe initial state of the tag will only be reinitialized in the doStartTag. \n\nI think there were too much discussion about this issue and I think \npractically every tag developer expects the release to be called at the end of \nthe page. Disabling Tag Pooling is not an option for precompiled pages because \nJSPC Ant Task implementation returns a hardcoded true for the isPooling \nmethod. So now where can somebody go to fix this issue.\n"}, {"text": "Please refer to Craig's comments.", "tags": [], "creator": "funkman@joedog.org", "is_private": false, "count": 20, "id": 45853, "time": "2003-10-17T16:44:09Z", "bug_id": 13392, "creation_time": "2003-10-17T16:44:09Z", "attachment_id": null}]