[{"count": 0, "tags": [], "bug_id": 21245, "text": "Hello, \n   I ran across a weird bug in jar. (It may be in unzip et al as well.)\nHere's my jar command:\n\n   <jar jarfile=\"lib/ppm-server.jar\">\n     <fileset dir=\"test\"/>\n     <fileset dir=\"testx\"/>\n   </jar>\n\nHere's the directory structure:\n  test/test1/a\n  testx/test1/b\n\ntestx/test1 has a new timestamp than test/test1.  Basically, it rebuilds the jar\nevery time with that timestamp.  If I switch the order of the filesets, it acts\nas I expect.  \n\n\nHere's the end of the debug output the first time I run ant with that target:\n\nppm-server.jar:\nfileset: Setup scanner in dir\n/home/stefie10/dev/lifeharbor/ppm20/ppm/server/test with patternSet{ includes:\n[] excludes: [] }\nfileset: Setup scanner in dir\n/home/stefie10/dev/lifeharbor/ppm20/ppm/server/testx with patternSet{ includes:\n[] excludes: [] }\n      [jar] Building jar:\n/home/stefie10/dev/lifeharbor/ppm20/ppm/server/lib/ppm-server.jar\n      [jar] adding directory META-INF/\n      [jar] adding entry META-INF/MANIFEST.MF\n      [jar] adding directory test1/\n      [jar] adding entry test1/a\n      [jar] adding entry test1/b\n\n\nHere's the output the second time: \n\nppm-server.jar:\nfileset: Setup scanner in dir\n/home/stefie10/dev/lifeharbor/ppm20/ppm/server/test with patternSet{ includes:\n[] excludes: [] }\nfileset: Setup scanner in dir\n/home/stefie10/dev/lifeharbor/ppm20/ppm/server/testx with patternSet{ includes:\n[] excludes: [] }\n      [jar]  omitted as  is up to date.\n      [jar] test1 omitted as test1/ is up to date.\n      [jar] test1/a omitted as test1/a is up to date.\n      [jar]  omitted as  is up to date.\n      [jar] test1 added as test1/ is outdated.\n      [jar] test1/b omitted as test1/b is up to date.\n      [jar] Building jar:\n/home/stefie10/dev/lifeharbor/ppm20/ppm/server/lib/ppm-server.jar\n      [jar] adding directory META-INF/\n      [jar] adding entry META-INF/MANIFEST.MF\n      [jar] adding directory test1/\n      [jar] adding entry test1/a\n      [jar] adding entry test1/b\n\nThe weirdness is that the \"test1\" is outdated the second time it encounters it.", "id": 39797, "time": "2003-07-01T21:47:13Z", "creator": "stellex@lifeharbor.com", "creation_time": "2003-07-01T21:47:13Z", "is_private": false, "attachment_id": null}, {"count": 1, "text": "This is the explanation for what is going on.\n\nSince both filesets include a test1 directory, the resulting jar structure is\n    0 Sun Jul 06 21:40:18 EST 2003 META-INF/\n   110 Sun Jul 06 21:40:16 EST 2003 META-INF/MANIFEST.MF\n     0 Sun Jul 06 20:52:26 EST 2003 test1/\n     0 Sun Jul 06 20:52:26 EST 2003 test1/a\n     0 Sun Jul 06 20:52:38 EST 2003 test1/b\n\nThat is, two physical test1 dirs map to a single test1 dir in the jar. The\nmodification time of the test1 directory within the jar is based on only one of\nthe actual test1 directories. If the test1 that is in the first fileset\nprocessed was created earlier, the test1 from the other fileset will be\nconsidered out of date with respect to the one in the Jar. So in the above\nexample the second test1, being newer than the test1 in the jar (by time)\ntriggers the rebuild.\n\nSwapping the filesets around, causes the test1 in the jar to have a modification\ntime <= both physical test1 dirs. So, it is like this\n\n     0 Sun Jul 06 21:52:42 EST 2003 META-INF/\n   110 Sun Jul 06 21:52:40 EST 2003 META-INF/MANIFEST.MF\n     0 Sun Jul 06 20:52:38 EST 2003 test1/\n     0 Sun Jul 06 20:52:38 EST 2003 test1/b\n     0 Sun Jul 06 20:52:26 EST 2003 test1/a\n\nSee how the modification time of test1 is now the later of the two. The jar is\nnot rebuilt.\n\nI'm not sure if it is a bug. The way to fix this would be to select the newest\ntime for any overlapping resources in the jar, or to ignore dirs in the time\ncomparisons.\n", "bug_id": 21245, "attachment_id": null, "id": 40020, "time": "2003-07-06T12:35:01Z", "creator": "conor@apache.org", "creation_time": "2003-07-06T12:35:01Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 21245, "is_private": false, "text": "Removed the out of date check for directories based on timestamps. A directory\ncan't be out of date since it has no real content. i.e. its content is expressed\nin file entries anyway which have their own time checks.", "id": 40022, "time": "2003-07-06T15:37:36Z", "creator": "conor@apache.org", "creation_time": "2003-07-06T15:37:36Z", "attachment_id": null}]