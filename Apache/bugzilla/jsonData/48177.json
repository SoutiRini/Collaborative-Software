[{"count": 0, "tags": [], "creator": "sebb@apache.org", "text": "org.apache.naming.java.javaURLContextFactory.getInitialContext() is not thread-safe.\n\nIt attempts to share the initialContext between threads, but does not use synch. to prevent multiple instances, so if two different threads call the method in sequence, then they can be returned different objects, but at least it will be the object that the thread created.\n\nIf two different threads access the method concurrently, then a thread can return a different object from the one it created.\n\nHowever, even if the cache was synch. correctly, there seems to be a problem with the method, as the environment parameter is ignored once the context has been created.", "id": 131885, "time": "2009-11-11T10:09:33Z", "bug_id": 48177, "creation_time": "2009-11-11T10:09:33Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 132116, "time": "2009-11-18T15:56:29Z", "bug_id": 48177, "creation_time": "2009-11-18T15:56:29Z", "is_private": false, "text": "I can't see this ever being a problem. As far as I can tell, one of isThreadBound() and isClassLoaderBound() will always return true. To be safe, I have fixed the sync issue anyway.\n\nYes the environment is ignored on subsequent calls. Given the lack of use, that doesn't concern me. If anyone ever has an actual issue with this, then we can look into fixing it"}]