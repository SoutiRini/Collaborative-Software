[{"count": 0, "attachment_id": null, "bug_id": 27056, "is_private": false, "id": 52522, "time": "2004-02-19T02:11:42Z", "creator": "gogogirl@263.net", "creation_time": "2004-02-19T02:11:42Z", "tags": [], "text": "When I write the snippet code in jsp file like below, the compile error will be \noccured(TestClassName is Interface or abstract class):\n------------------\n...\n<jsp:useBean id=\"beanId\" scope=\"request\" class=\"TestClassName\"/>\n...\n------------------\n\nSo I view the java source code, and find the corresponding snippet code:\n------------------\n...\nTestClassName beanId= null;\nsynchronized (request) {\n    id= (TestClassName) pageContext.getAttribute(\"beanId\", \nPageContext.REQUEST_SCOPE);\n    if (beanId== null){\n        beanId= new TestClassName();\n        pageContext.setAttribute(\"beanId\", beanId, PageContext.REQUEST_SCOPE);\n    }\n}\n...\n------------------\n\nIt is easy to know that the statement \"beanId= new TestClassName();\" is wrong \nwhen TestClassName is Interface or abstract class.\n\nPlease fig it !!"}, {"count": 1, "text": "Set the new \"errorOnUseBeanInvalidClassAttribute\" compiler option to FALSE if\nyou want your spec-violating <jsp:useBean> to continue to work.\n\nNotice that according to the JSP spec, a class specified using the \"class\"\nattribute of <jsp:useBean> must have a public no-arg constructor. I bet you\nyours doesn't.\n\n\n*** This bug has been marked as a duplicate of 26507 ***", "bug_id": 27056, "is_private": false, "id": 52523, "time": "2004-02-19T02:37:46Z", "creator": "jan.luehe@sun.com", "creation_time": "2004-02-19T02:37:46Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 27056, "attachment_id": null, "id": 61016, "time": "2004-07-22T23:03:21Z", "creator": "bugzilla.e.wuuza@xoxy.net", "creation_time": "2004-07-22T23:03:21Z", "is_private": false, "text": "I have a class with a public no-arg constructor, and I get this error.\n\nWith a useBean like this:\n<jsp:useBean id=\"errors\" class=\"...Errors\" scope=\"request\"/>\n\nIf the class is defined thusly, there is an error:\npublic class Errors {\n    private Set _errors;\n\n    public Errors() {\n        _errors = new LinkedHashSet(); //preserve original order\n    }\n}\n\nHowever, this version does not produce the error:\npublic class Errors {\n    private Set _errors;\n\n//    public Errors() {\n//        _errors = new LinkedHashSet(); //preserve original order\n//    }\n}\n\n\nBoth have a public no-arg constructor, but only one version works.  What is\nweird is that this only happens in Ant - the page compiles fine within Tomcat. \nIs there something I'm not seeing here?  \n\nThis is 5.0.25 I'm using."}]