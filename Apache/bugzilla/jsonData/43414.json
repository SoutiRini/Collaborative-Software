[{"count": 0, "tags": [], "bug_id": 43414, "is_private": false, "text": "There's a 'bug' on the CertificateFactory class of the Sun JCE Provider\nintegrated in the Sun Java 1.4.2, which supports cryptography for certificates\nwith key size no longer than 2048 bytes.\n\nIn the org.apache.xml.security.keys.content.x509.XMLX509Certificate, the\n\"getX509Certificate\" method only use the CertificateFactory supplied by the Sun\nJCE Provider of the JRE.\n\n---------------------------\n\nTo fix this bug, developer should be specify another JCE provider (for example\nBouncyCastle).\n\nString provider = JCEMapper.getProviderId();\nCertificateFactory certFact;\nif (provider == null)\n{\n    certFact = CertificateFactory.getInstance(XMLX509Certificate.JCA_CERT_ID);\n}\nelse\n{\n    certFact = CertificateFactory.getInstance(XMLX509Certificate.JCA_CERT_ID,\nprovider);\n}\n...", "id": 108307, "time": "2007-09-18T00:40:34Z", "creator": "julien.pasquier@wanadoo.fr", "creation_time": "2007-09-18T00:40:34Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 43414, "text": "There are a couple of problems with the proposed solution.\n\nFirst, there are plenty of other places in the code in which other JCE/JCA\nengine classes are instantiated without specifying a specific provider. Second,\n one provider may not be the right provider for all of them (for example, they\nmay not support all of the algorithms you need).\n\nA better solution, in my opinion, is to call the standard\njava.security.Security.insertProviderAt API from your application which will\ninsert your preferred provider(s) at the preference you would like, ex:\n\n\n    Security.insertProvider(new BouncyCastleProvider(), 1);\n\nThis will allow the JRE to fallback and try other installed \nproviders if the provider above does not support a requested algorithm or\nparameters, etc.\n\nLet me know if this works for you.", "id": 108371, "time": "2007-09-19T06:51:43Z", "creator": "sean.mullan@oracle.com", "creation_time": "2007-09-19T06:51:43Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 43414, "text": "It works for me !\n\nIt should be implemented this solution in all java XML Security project.", "id": 108372, "time": "2007-09-19T07:35:06Z", "creator": "julien.pasquier@wanadoo.fr", "creation_time": "2007-09-19T07:35:06Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 43414, "is_private": false, "text": "(In reply to comment #2)\n> It works for me !\n\nGreat.\n\n> It should be implemented this solution in all java XML Security project.\n\nI'm not so sure about that, since I think the application knows best about which\nproviders it needs. Since you have a good solution now, I am closing this bug as\n\"works for me\".\n\n", "id": 108374, "time": "2007-09-19T08:15:31Z", "creator": "sean.mullan@oracle.com", "creation_time": "2007-09-19T08:15:31Z", "attachment_id": null}]