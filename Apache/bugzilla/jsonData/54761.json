[{"count": 0, "tags": [], "creator": "jburgess1024@gmail.com", "attachment_id": null, "text": "If you are using the jar task to create a jar that contains two implementations of a service the two classes are concatenated.\n\nSo\n\n<macrodef name=\"build-checker\" >\n<attribute name=\"scname\" />\n<attribute name=\"extra1\" default=\"\"/>\n<sequential xmlns:ac=\"antlib:net.sf.antcontrib\">\n<jar jarfile=\"${dist.dir}/@{scname}.jar\" >\n   <fileset dir=\"build/@{scname}\"/>\n   <service type=\"com.riskdecisions.sanitycheck.SanityCheck\">\n      <provider classname=\"com.riskdecisions.sanitycheck.providers.@{scname}\" />\n      <provider classname=\"com.riskdecisions.sanitycheck.providers.@{extra1}\" />\n   </service>\n</jar>\n</sequential>\n</macrodef>\n\nwhen called as \n        <build-checker scname=\"BergChecker\" extra1=\"CheckCluster\"/>\nresults in a file com.riskdecisions.sanitycheck.SanityCheck in the services folder containing\ncom.riskdecisions.sanitycheck.providers.BergCheckercom.riskdecisions.sanitycheck.providers.CheckCluster\n\nThere should be a new line between the two providers.", "id": 166207, "time": "2013-03-28T17:39:07Z", "bug_id": 54761, "creation_time": "2013-03-28T17:39:07Z", "is_private": false}, {"count": 1, "tags": [], "text": "The work around I have found is to use the zip task to add a new version of com.riskdecisions.sanitycheck.SanityCheck to the jar.\n\nAfter the jar command I added:\n\n<mkdir dir=\"META-INF/services\"/>\n<echo file=\"META-INF/services/com.riskdecisions.sanitycheck.SanityCheck\" append=\"false\">\ncom.riskdecisions.sanitycheck.providers.@{scname}\n${line.separator}\ncom.riskdecisions.sanitycheck.providers.@{extra1}\n</echo>\n<zip destfile=\"${dist.dir}/@{scname}.jar\" update=\"true\">\n     <fileset dir=\"${basedir}\" includes=\"META-INF/services/*\"/>\n</zip>   \n<delete dir=\"META-INF\"/>\n\nThis solves the problem, but I don't think it should be difficult to fix and would be much more convenient.", "is_private": false, "id": 166209, "creator": "jburgess1024@gmail.com", "time": "2013-03-28T17:43:42Z", "bug_id": 54761, "creation_time": "2013-03-28T17:43:42Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Hello John,\n\nI disagree that the classes are concatenated in the service file.\nThe names of the 2 provider classes will be separated by a newline character (\\n).\nThe jar file specification http://docs.oracle.com/javase/7/docs/technotes/guides/jar/jar.html#Service_Provider says that \"The file should contain a newline-separated list of unique concrete provider-class names. \"\nSo Ant is creating service provider files where classnames are separated by new lines. New lines only are not visible in some Windows editors such as notepad.\n\nIf the service provider classes are only recognized when the class names are separated by \\r\\n instead of just \\n, that would mean that the service provider paragraph in the jar file documentation is not specific enough.", "is_private": false, "id": 166279, "creator": "antoine@apache.org", "time": "2013-03-31T20:58:56Z", "bug_id": 54761, "creation_time": "2013-03-31T20:58:56Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "maybe I'm jut repeating what Antoine says, but it seems to work as expected:\n\nstefanb@brick:/tmp$ cat foo.xml\n<project>\n  <property name=\"dist.dir\" location=\".\"/>\n  <mkdir dir=\"build/BergChecker\"/>\n  <macrodef name=\"build-checker\" >\n    <attribute name=\"scname\" />\n    <attribute name=\"extra1\" default=\"\"/>\n    <sequential>\n      <jar jarfile=\"${dist.dir}/@{scname}.jar\" >\n        <fileset dir=\"build/@{scname}\"/>\n        <service type=\"com.riskdecisions.sanitycheck.SanityCheck\">\n          <provider classname=\"com.riskdecisions.sanitycheck.providers.@{scname}\" />\n          <provider classname=\"com.riskdecisions.sanitycheck.providers.@{extra1}\" />\n        </service>\n      </jar>\n    </sequential>\n  </macrodef>\n  <build-checker scname=\"BergChecker\" extra1=\"CheckCluster\"/>\n</project>\nstefanb@brick:/tmp$ ant -f foo.xml \nBuildfile: /tmp/foo.xml\n    [mkdir] Created dir: /tmp/build/BergChecker\n      [jar] Building MANIFEST-only jar: /tmp/BergChecker.jar\n\nBUILD SUCCESSFUL\nTotal time: 0 seconds\nstefanb@brick:/tmp$ unzip BergChecker.jar \nArchive:  BergChecker.jar\n   creating: META-INF/\n  inflating: META-INF/MANIFEST.MF    \n  inflating: META-INF/services/com.riskdecisions.sanitycheck.SanityCheck  \nstefanb@brick:/tmp$ cat META-INF/services/com.riskdecisions.sanitycheck.SanityCheck \ncom.riskdecisions.sanitycheck.providers.BergChecker\ncom.riskdecisions.sanitycheck.providers.CheckCluster\n\nthere even is an AntUnit test for that in http://svn.apache.org/repos/asf/ant/core/trunk/src/tests/antunit/taskdefs/jar-spi-test.xml (test-providers)", "is_private": false, "bug_id": 54761, "id": 171992, "time": "2014-01-01T14:12:20Z", "creator": "bodewig@apache.org", "creation_time": "2014-01-01T14:12:20Z", "attachment_id": null}]