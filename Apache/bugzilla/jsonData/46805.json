[{"count": 0, "tags": [], "text": "the following ANT code always hangs on Windows XP:\n\n<target name=\"start\">\n  <echo message=\"asadmin start-domain\" />\n  <exec dir=\".\" executable=\"${asadmin}\">\n  <arg value=\"start-domain\"/>\n  <arg value=\"${glassfish.domain}\"/>\n  </exec>\n  <echo message=\"asadmin start-domain done\" />\n</target>\n\n\nMy workaround:\n\n1. PumpStreamHandler.stop()\n\nadd a time out to the join() methods:\n\n        try {\n            outputThread.join(1000);\n        } catch (InterruptedException e) {\n            // ignore\n        }\n        try {\n            errorThread.join(1000);\n        } catch (InterruptedException e) {\n            // ignore\n        } \n\n2. Execute.java\n\na) fix the bogus method\n\n    public static void closeStreams(Process process) {\n    \tprocess.destroy(); // this is sufficient to cleanup all resources.\n    \t/** WTF: never close streams maintained elsewhere!\n        FileUtils.close(process.getInputStream());\n        FileUtils.close(process.getOutputStream());\n        FileUtils.close(process.getErrorStream());\n        */\n    }\n \nb) reorder the invokations\n\n    public int execute() throws IOException { \n...\n//            streamHandler.stop(); \n            closeStreams(process); // FIRST DESTROY THE PROCESS\n            streamHandler.stop();  // THEN STOP THREADS\n\n\n\n... works for me, maybe for you too.", "is_private": false, "bug_id": 46805, "id": 125341, "time": "2009-03-05T11:07:58Z", "creator": "s.franke@bebbosoft.de", "creation_time": "2009-03-05T11:07:58Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "bodewig@apache.org", "text": "\n\n*** This bug has been marked as a duplicate of bug 5003 ***", "id": 126840, "time": "2009-05-07T02:27:31Z", "bug_id": 46805, "creation_time": "2009-05-07T02:27:31Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "id": 126936, "time": "2009-05-11T06:39:26Z", "bug_id": 46805, "creation_time": "2009-05-11T06:39:26Z", "is_private": false, "text": "if there really is an issue caused by closing the streams than bug 46805 is no duplicate of bug 5003\n\nStefan, is this \"just\" a cosmetic issue like \"you are not doing it correctly\" or does it cause real problems?"}, {"count": 3, "tags": [], "bug_id": 46805, "attachment_id": null, "is_private": false, "id": 126944, "time": "2009-05-11T09:34:06Z", "creator": "s.franke@bebbosoft.de", "creation_time": "2009-05-11T09:34:06Z", "text": "It is a real an unresolved problem in ANT 1.7.1.\n\nReproduced using Windows XP or Windows Vista(32/64). (You can easily find posts regarding this issue, just search \"ant asadmin hang\")\n\nSo I fixed it locally and submitted my experience here."}, {"count": 4, "tags": [], "bug_id": 46805, "attachment_id": null, "id": 127017, "time": "2009-05-14T05:52:29Z", "creator": "bodewig@apache.org", "creation_time": "2009-05-14T05:52:29Z", "is_private": false, "text": "I don't doubt that there is a bug in Ant 1.7.1, my question is whether Ant's trunk still exhibits the bug or whether not closing the streams is necessary to fix it."}, {"count": 5, "tags": [], "bug_id": 46805, "attachment_id": null, "text": "This is definitely still a problem and the nightly build hasn't passed on Windows in months so there are no easily available downloads to test of trunk.\n\nBug #5003 does seem similar but the closing of the streams is the issue here not the child processes leaving them open.", "id": 131317, "time": "2009-10-22T21:23:51Z", "creator": "cory@prowse.com", "creation_time": "2009-10-22T21:23:51Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 46805, "attachment_id": null, "id": 131318, "time": "2009-10-22T22:40:26Z", "creator": "s.franke@bebbosoft.de", "creation_time": "2009-10-22T22:40:26Z", "is_private": false, "text": "The real bug is to close streams which you never opened!\n\nfoo = new XyzStream() --> foo.close();\n\nfoo = something.getStream() -->  // nada\n\nWell, one could avoid problems by giving out proxied streams which ignore the close(), but obviously this is not the case.\n\nWhy don't you simply add the suggested fix? Or fix it yourself?"}, {"attachment_id": null, "tags": [], "bug_id": 46805, "is_private": false, "count": 7, "id": 131432, "time": "2009-10-27T10:47:49Z", "creator": "bodewig@apache.org", "creation_time": "2009-10-27T10:47:49Z", "text": "(In reply to comment #5)\n> This is definitely still a problem and the nightly build hasn't passed on\n> Windows in months so there are no easily available downloads to test of trunk.\n\nAnt's nightly builds are platform independent, so you could try a different one."}, {"count": 8, "tags": [], "text": "the code in Ant's trunk is different enough from Ant 1.7.1 that I'd really like to have confirmation that not closing the streams is really fixing anything that has been broken before just to avoid adding yet another variable.\n\nThe \"don't close what you haven't created\" argument doesn't really convince me.  There are situations where you can't create a stream but are the only one who knows when to close it - in this situation you are the only one who can close the stream and should better do it.  The Java class library has many such cases, see ZipFile.getInputStream or URLConnection.getInputStream.  In some cases there is a hint of documentation of what is expected from the API user (ResultSet.get*Stream) but in most cases - including the Process.get*Stream methods - there is none.\n\nThere simply doesn't seem to be a simple testcase that would allow us to test the current code base against anything that still exhibits problems and if you can't test trunk, we'll have to wait until the first release candidate for 1.8.0 is out.", "is_private": false, "bug_id": 46805, "id": 131433, "time": "2009-10-27T10:59:32Z", "creator": "bodewig@apache.org", "creation_time": "2009-10-27T10:59:32Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 46805, "is_private": false, "text": "Maybe I'm looking in the wrong place for a build, but\n  http://ant.apache.org/nightlies.html \nhas no \"last successful\" builds on Linux, Windows or Mac.\n\nI'm testing a build that runs on all three of these platforms, and only Windows has the problem described in this bug report.  I'm currently resorting to coding my own ant task to handle asadmin execution properly.\n\nI'm happy to test another build of Ant though, I just need to know where to get it from (unless you mean build my own from SCM?)", "id": 131441, "time": "2009-10-27T16:01:32Z", "creator": "cory@prowse.com", "creation_time": "2009-10-27T16:01:32Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 46805, "is_private": false, "count": 10, "id": 131444, "time": "2009-10-27T17:11:07Z", "creator": "cory@prowse.com", "creation_time": "2009-10-27T17:11:07Z", "text": "I just checked out the latest trunk and built it locally and it still exhibits this bug."}, {"count": 11, "tags": [], "text": "Cory,  have you ever tried 1.8.0 or 1.8.1?", "attachment_id": null, "bug_id": 46805, "id": 137611, "time": "2010-06-14T06:18:47Z", "creator": "bodewig@apache.org", "creation_time": "2010-06-14T06:18:47Z", "is_private": false}, {"count": 12, "tags": [], "text": "The file src/tests/antunit/taskdefs/exec/exec-test.xml in Ant's svn contains\nan AntUnit test that demonstrates bug 5003 - it forks a process which in turn\nfrokes a child process and exits after writing \"finished\".\n\nAnt has already incorporated the joint timeout and some other changes that\nensure Ant doesn't wait for the forked child process (which sleeps for 20\nseconds).  The test is called testDoesntWaitForChildren\n\nIf I apply the third part of Stefan's suggested patch we don't see the\n\"finished\" output anymore, that is we lose output.\n\nSo far I hadn't seen that Stefan's second part called process.destroy - this\nseems to be not necessary since either process.waitFor has succeeded\nor process.destroy has been called in Execute#waitFor's exception handler.\n\nIf I remove the closeStreams call completely I do get the \"finished\" line\n- or at least I seem to be getting it in repeated tests, there could still be\na race condition.  I'll run the full testsuite on Windows and Linux to see\nany ill effects show up.", "is_private": false, "id": 137614, "creator": "bodewig@apache.org", "time": "2010-06-14T06:57:49Z", "bug_id": 46805, "creation_time": "2010-06-14T06:57:49Z", "attachment_id": null}, {"count": 13, "tags": [], "text": "Created attachment 25591\nDon't close process' streams\n\nI'm adding the trivial patch just for completeness.\n\nI can't confirm that it works for the bug we are talking about, but unfortunately\nit seems to cause problems at least on Linux - I'll have to investigate this\nfurther once I come to a physical rather than virtual test system.", "is_private": false, "bug_id": 46805, "id": 137615, "time": "2010-06-14T08:17:23Z", "creator": "bodewig@apache.org", "creation_time": "2010-06-14T08:17:23Z", "attachment_id": 25591}, {"count": 14, "tags": [], "bug_id": 46805, "attachment_id": null, "text": "> If I apply the third part of Stefan's suggested patch we don't see the\n> \"finished\" output anymore, that is we lose output.\n\nLosing the last output line might be a different bug, at least it often happens if ant is invoked via maven that the last output line gets suppressed.\n\nMy workaround is to end every ant task with two identical echo messages.\n\n(I did not file a bug for this, since my exprience with submitting bugs is not so good and for now I prefer to avoid using ant and maven)", "id": 137644, "time": "2010-06-15T03:16:37Z", "creator": "s.franke@bebbosoft.de", "creation_time": "2010-06-15T03:16:37Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 46805, "is_private": false, "text": "(In reply to comment #14)\n\nprocess.destroy really is going to add a race-condition where output may be\nsitting in a buffer we throw away with destroy before it has been read.\n\nI'm sorry that your patch experience has been unpleasant and understand that\nyou don't want to try Ant anymore if you have found a different solution.", "id": 137659, "time": "2010-06-15T08:50:22Z", "creator": "bodewig@apache.org", "creation_time": "2010-06-15T08:50:22Z", "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 46805, "is_private": false, "text": "(In reply to comment #13)\n\n> unfortunately it seems to cause problems at least on Linux\n\nNo, it doesn't seem to do that. I don't see any difference between test run\nwith or without closing the streams anymore.\n\nIf anybody can confirm that Ant 1.8.1's <exec> task hangs and it doesn't hang\nif we apply the patch attached here, please do.  Of course it would be great\nif we had any reproducible testcase.", "id": 137660, "time": "2010-06-15T08:53:25Z", "creator": "bodewig@apache.org", "creation_time": "2010-06-15T08:53:25Z", "attachment_id": null}, {"count": 17, "tags": [], "creator": "cory@prowse.com", "attachment_id": null, "id": 137928, "time": "2010-06-26T23:13:37Z", "bug_id": 46805, "creation_time": "2010-06-26T23:13:37Z", "is_private": false, "text": "I've tested my build on Mac, Windows and Linux and all three work fine now using the Ant exec task!\n\nThank you, it has greatly simplified things for me."}, {"count": 18, "tags": [], "text": "(In reply to comment #17)\n> I've tested my build on Mac, Windows and Linux and all three work fine now\n> using the Ant exec task!\n\nIs this stock Ant 1.8.x (and which one?) or a home-brewed version including\nmy patch?\n\nThanks for testing, BTW.", "attachment_id": null, "id": 137942, "creator": "bodewig@apache.org", "time": "2010-06-28T05:23:02Z", "bug_id": 46805, "creation_time": "2010-06-28T05:23:02Z", "is_private": false}, {"count": 19, "tags": [], "bug_id": 46805, "is_private": false, "text": "This was the stock standard 1.8.1", "id": 137943, "time": "2010-06-28T06:24:19Z", "creator": "cory@prowse.com", "creation_time": "2010-06-28T06:24:19Z", "attachment_id": null}, {"count": 20, "tags": [], "text": "Great, thanks!", "is_private": false, "id": 137944, "creator": "bodewig@apache.org", "time": "2010-06-28T06:35:24Z", "bug_id": 46805, "creation_time": "2010-06-28T06:35:24Z", "attachment_id": null}]