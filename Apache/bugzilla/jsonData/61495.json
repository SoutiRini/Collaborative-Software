[{"count": 0, "text": "Created attachment 35300\nText Excel File\n\nI am reading an excel file with lots of huge formulas. \nThe Problem occurs, with the folowing Formula:\n\nOrginal: =WENN(TEST!A2=\"\";\"\";VERKETTEN(\"D\";\" \";TEXT(TEST!A2;\"00,00\")))\nTranslated: =IF(TEST!A2=\"\";\"\";CONCAT(\"D\";\" \";TEXT(TEST!A2;\"00,00\")))\n\nThe issue is that the excel file in my Office Excel does show up in a correct manner since it's localization is GERMAN. However reading it in with, Apache POI and using the FormulaEvaluator does mess up the results. However using the format \"0.00\" does indeed result in a correct manner, so I do assume it's an localization issue. I also used a org.apache.poi.ss.usermodel.DataFormatter with the hope to tell it my Locale. However both methods do fail. I did recreate a minimal test.xlsm and i tested this issue with the following apache poi releases: LATEST 3.17 Beta - \"poi-bin-3.17-beta1-20170701\", LATEST 3.16 - \"poi-bin-3.16-20170419\", 3.15 Beta2 - \"poi-3.15-beta2\".\n\nI did create also a Test Class:\n\n####TEST CLASS START####\n\n\nimport java.io.FileInputStream;\nimport java.util.Locale;\nimport java.util.stream.IntStream;\n\nimport org.apache.poi.ss.usermodel.DataFormatter;\nimport org.apache.poi.ss.usermodel.FormulaEvaluator;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.ss.usermodel.WorkbookFactory;\n\npublic class POITester_3_17 {\n\n\tprivate static final String WORKBOOK_PATH = \"C:\\\\Users\\\\l.dag\\\\Desktop\\\\test.xlsm\";\n\tprivate static final String SHEET_NAME = \"TEST\";\n\n\tpublic static void main(String[] args) throws Exception {\n\t\t//Read in Workbook as usual\n\t\tfinal FileInputStream fis;\n\t\tfinal Workbook wb = WorkbookFactory.create(fis = new FileInputStream(POITester_3_17.WORKBOOK_PATH));\n\t\tfis.close();\n\t\t//Read end ...\n\t\t\n\t\t//Load Sheet + FormulaEvaluator\n\t\tfinal Sheet sheet = wb.getSheet(POITester_3_17.SHEET_NAME);\n\t\t\n\t\t\n\t\tfinal FormulaEvaluator fe = wb.getCreationHelper().createFormulaEvaluator();\n\t\tfinal DataFormatter df = new DataFormatter(Locale.getDefault());\n\t\t//Load end\n\t\t\n\t\t//Evaluate and Print out the cells to test [Hardcoded location, for test case]\n\t\tIntStream.range(0,2).mapToObj(sheet::getRow).map(r -> r.getCell(1)).forEach(c -> {\t\t\t\n\t\t\tSystem.out.println(fe.evaluate(c));\n\t\t\tSystem.out.println(df.formatCellValue(c, fe));\n\t\t});\n\t}\n\t\n}\n\n####TEST CLASS END####\n\nResulting Output using test.xlsm:\n\n####OUTPUT START####\norg.apache.poi.ss.usermodel.CellValue [\"D 67,10\"]\nD 67,10\norg.apache.poi.ss.usermodel.CellValue [\"D 00.68\"]\nD 00.68\n####OUTPUT END####\n\n####WHAT MY EXCEL SHOWS START####\n67,10\tD 0.067\n68,20\tD 68,20\n####WHAT MY EXCEL SHOWS END####", "bug_id": 61495, "is_private": false, "id": 200698, "time": "2017-09-06T11:33:53Z", "creator": "l.dag@outlook.de", "creation_time": "2017-09-06T11:33:53Z", "tags": [], "attachment_id": 35300}, {"count": 1, "tags": [], "bug_id": 61495, "text": "From my experience, localized Numberformats in Excel, such as \"0,00\" will be stored as \"0.00\" internally. All number formats seem to be stored according to US locale conventions with a dot ('.') separating the fraftional part. The comma (',') is used as a grouping character. In german locale, it is reversed.\n\nExcel automatically translates dots and commas when used as a number format, but I doubt it also does so when using a formula. I think that should be checked first before deciding how POI should handle this.\n\nA fun fact is that even the Excel help at least for german Excel 2010 is completely useless here because it seems to have been translated without trying out the examples given (it says that '=TEXT(A1,\"$0.00\") & \" per hour\"' will result in '23,50 \u20ac pro Stunde', magically translating not only the number, but also the text in quotes).", "id": 201588, "time": "2017-10-23T12:04:00Z", "creator": "axel@dua3.com", "creation_time": "2017-10-23T12:04:00Z", "is_private": false, "attachment_id": null}]