[{"count": 0, "text": "workbook.createSheet(name) with a name of > 30 characters throws an exception for XSSF workbooks (e.g. \"sheetName 'A very very very very very very very very long name' is invalid - must be 1-30 characters long\") while for HSSF workbooks createSheet just seems to truncate sheet names to 31 characters.\n\nI would expect both XSSF and HSSF to throw an exception stating the correct number of maximum allowed characters (31 ???).\n\n\nPOI: 3.7-build2\nOS: Windows 7 64-bit\nJava: 1.6.0_20 64-bit", "creator": "martin.studer@mirai-solutions.com", "attachment_id": null, "id": 139723, "time": "2010-09-06T14:51:40Z", "bug_id": 49887, "creation_time": "2010-09-06T14:51:40Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "yegor@dinom.ru", "attachment_id": null, "id": 139728, "time": "2010-09-07T03:11:33Z", "bug_id": 49887, "creation_time": "2010-09-07T03:11:33Z", "is_private": false, "text": "The rule is more complex. \n\nNon Excel clients such as OpenOffice allow opening / editing of worksheets with names longer than 31 characters. \nExcel (2007) opens files with long sheet names without error or warning. However, long sheet names are silently truncated to 31 chars.  This means that sheet name uniqueness is enforced on only the first 31 chars.\n\nExample:\n\n workbook.createSheet(\"POI allows creating sheets with names longer than 31 characters - 1\"); // OK\n workbook.createSheet(\"POI allows creating sheets with names longer than 31 characters - 2\"); // fail, substring(0, 31) is the same as sheet0\n\nI changed XSSF to behave as HSSF, i.e. removed the 31 chars restriction and enforced name uniqueness on the first 31 chars. \n\nThe fix was committed in r993246\n\nRegards,\nYegor"}]