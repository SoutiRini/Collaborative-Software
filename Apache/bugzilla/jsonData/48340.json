[{"count": 0, "tags": [], "creator": "drotiro@tiscali.it", "attachment_id": 24671, "id": 132622, "time": "2009-12-04T08:17:48Z", "bug_id": 48340, "creation_time": "2009-12-04T08:17:48Z", "is_private": false, "text": "Created attachment 24671\nthe proposed patch\n\nI'm proposing a patch to use the username and password entered by the user in the compare phase.\nIt does something similar to #43792, but differently:\n - it uses the dn retreived from server, instead of appending a suffix to username\n - it saves the password in authn_ldap_request_t, as long as needed then wipes it\n\nIt adds a new configuration flag: AuthLDAPBindAsUser\nThe flag defaults to off, when set to 'on' enable the bind as user behaviour\n\n\nThe patch is against 2.2.14."}, {"count": 1, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 132623, "time": "2009-12-04T11:50:00Z", "bug_id": 48340, "creation_time": "2009-12-04T11:50:00Z", "is_private": false, "text": "Out of curiousity, what do your basic auth usernames look like and what LDAP backends do they authenticate with? I think some kind of munging is necessary in the common case to be able to have something you can bind with."}, {"attachment_id": null, "tags": [], "bug_id": 48340, "text": "We use uid as usernames for the authentication (search phase).\nThen I use the user dn fetched this way - and not the username - for authorization (compare phase).\n\nThis is very similar to setting the directive 'AuthLDAPBindDN', but dinamically, so no munging is necessary.\n\nBtw, we use lotus notes' ldap.\n\n\n\n(In reply to comment #1)", "count": 2, "id": 132638, "time": "2009-12-07T01:05:44Z", "creator": "drotiro@tiscali.it", "creation_time": "2009-12-07T01:05:44Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 48340, "attachment_id": null, "text": "(In reply to comment #0)\n> Created an attachment (id=24671) [details]\n> the proposed patch\n> I'm proposing a patch to use the username and password entered by the user in\n> the compare phase.\n> It does something similar to #43792, but differently:\n>  - it uses the dn retreived from server, instead of appending a suffix to\n> username\n>  - it saves the password in authn_ldap_request_t, as long as needed then wipes\n> it\n> It adds a new configuration flag: AuthLDAPBindAsUser\n> The flag defaults to off, when set to 'on' enable the bind as user behaviour\n> The patch is against 2.2.14.\n\nI'm wondering what we're accomplishing by doing the authorization with the bound user?  We're already using the config-supplied DN and password to bind during the authentication phase, and your patch still requires authentication to be provided by mod_authnz_ldap (to cache the password for the authorization bind), so what are we gaining by binding as the user only in the latter phase?\n\nIt's a bit confusing as at first read, I'd assumed that you were talking about the authentication bind, which would have made more sense, albeit would need to be documented as being as potentially dangerous as HTTP basic auth over the network (although this refers to the backend network), unless a secure connection to the LDAP server was used.", "id": 132671, "time": "2009-12-08T05:17:16Z", "creator": "margol@beamartyr.net", "creation_time": "2009-12-08T05:17:16Z", "is_private": false}, {"count": 4, "tags": [], "text": "> I'm wondering what we're accomplishing by doing the authorization with the\n> bound user?  We're already using the config-supplied DN and password to bind\n> during the authentication phase, and your patch still requires authentication\n> to be provided by mod_authnz_ldap (to cache the password for the authorization\n> bind), so what are we gaining by binding as the user only in the latter phase?\n> \n\nReporter has an LDAP server that allows anonymous searches but does not allow anonymous compares [rather it's configured that way].  So he leaves off the bind dn/password to retrieve the DN, but can't do certain types of authz anonymously.\n\nIf I commit the patch, I will make the directive sound less general and put some time into the doc.", "attachment_id": null, "bug_id": 48340, "id": 132672, "time": "2009-12-08T05:34:19Z", "creator": "covener@gmail.com", "creation_time": "2009-12-08T05:34:19Z", "is_private": false}, {"count": 5, "tags": [], "creator": "margol@beamartyr.net", "attachment_id": null, "id": 132698, "time": "2009-12-09T10:43:16Z", "bug_id": 48340, "creation_time": "2009-12-09T10:43:16Z", "is_private": false, "text": "(In reply to comment #4)\n> Reporter has an LDAP server that allows anonymous searches but does not allow\n> anonymous compares [rather it's configured that way].  So he leaves off the\n> bind dn/password to retrieve the DN, but can't do certain types of authz\n> anonymously.\n> \n> If I commit the patch, I will make the directive sound less general and put\n> some time into the doc.\n\nIf there's a use-case, I'm +1"}, {"count": 6, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 137263, "time": "2010-06-01T17:19:38Z", "bug_id": 48340, "creation_time": "2010-06-01T17:19:38Z", "is_private": false, "text": "committed a variant of your patch to trunk in r950248."}, {"text": "fixed in 2.4.1", "tags": [], "bug_id": 48340, "attachment_id": null, "count": 7, "id": 154223, "time": "2012-02-26T17:00:52Z", "creator": "sf@sfritsch.de", "creation_time": "2012-02-26T17:00:52Z", "is_private": false}]