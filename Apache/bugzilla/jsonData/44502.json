[{"count": 0, "tags": [], "text": "We have a high load environment where we are running tomcat 5.5.15\nsuccessfully. We are interesting in reducing the system CPU load and\nswitching to Tomcat 6 with NIO, but so far have run into a few issues.\nAfter trying out the patch Filip recommended\n\n(http://svn.apache.org/viewvc?view=rev&revision=618420) we did get\nfurther (our CPUs were not pegged any more and exceptions went away),\nbut it appears that about 2/3rds of the requests are being dropped. I\nwas going to file a bug, but I thought I'd post it first to see if\nanyone has any ideas.\n\nWe have many tomcat servers running 5.5.15. I took one of the machines,\nand put 6.0.16 on it, patched it. Each server gets around 3K requests a\nminute during the time window when I saw doing my experiments. Using\n6.0.16 regular HTTP connections, I do get around 3K requests per minute\nthat we process. With NIO, we only see around 1.2K per minute. Here are\nthe two connector configurations.\n\nRegular config\n    <Connector port=\"8000\"\n               maxThreads=\"500\" minSpareThreads=\"25\" maxSpareThreads=\"75\"\n               enableLookups=\"false\" redirectPort=\"443\" acceptCount=\"100\"\n               compression=\"on\" \n               compressionMinSize=\"2048\" \n               noCompressionUserAgents=\"gozilla, traviata\" \n               compressableMimeType=\"text/html,text/xml\"\n               connectionTimeout=\"0\" disableUploadTimeout=\"true\" \n               maxHttpHeaderSize=\"8192\" />\n \nNIO config\n    <Connector port=\"8000\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\" acceptorThreadCount=\"4\"\n               maxThreads=\"500\" minSpareThreads=\"25\" maxSpareThreads=\"75\"\n               enableLookups=\"false\" redirectPort=\"443\" acceptCount=\"100\"\n               compression=\"on\" \n               compressionMinSize=\"2048\" \n               noCompressionUserAgents=\"gozilla, traviata\" \n               compressableMimeType=\"text/html,text/xml\"\n               connectionTimeout=\"0\" disableUploadTimeout=\"true\" \n               maxHttpHeaderSize=\"8192\" />\n \nI tried to tune various NIO parameters and had no luck. I can only\nassume that acceptors turn away some requests for some reason without\npassing them down to the worker threads. Or that I have mis-configured\nsomething.\n\nHere are some interesting threads\n\nA worker thread\nhttp-8000-exec-20                                                                               52   TIMED_WAITING  20000000    \n.....omited....\njavax.servlet.http.HttpServlet.service(690)                                                                                                                   \njavax.servlet.http.HttpServlet.service(803)                                                                                                                   \norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(290)                                                                                         \norg.apache.catalina.core.ApplicationFilterChain.doFilter(206)                                                                                                 \norg.apache.catalina.core.StandardWrapperValve.invoke(233)                                                                                                     \norg.apache.catalina.core.StandardContextValve.invoke(175)                                                                                                     \norg.apache.catalina.authenticator.AuthenticatorBase.invoke(433)                                                                                               \norg.apache.catalina.core.StandardHostValve.invoke(128)                                                                                                        \norg.apache.catalina.valves.ErrorReportValve.invoke(102)                                                                                                       \norg.apache.catalina.valves.AccessLogValve.invoke(568)                                                                                                         \norg.apache.catalina.core.StandardEngineValve.invoke(109)                                                                                                      \norg.apache.catalina.connector.CoyoteAdapter.service(286)                                                                                                      \norg.apache.coyote.http11.Http11NioProcessor.process(879)                                                                                                      \norg.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(719)                                                                               \norg.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(2080)                                                                                              \njava.util.concurrent.ThreadPoolExecutor$Worker.runTask(885)                                                                                                   \njava.util.concurrent.ThreadPoolExecutor$Worker.run(907)                                                                                                       \njava.lang.Thread.run(619)                                                                                                                                     \n\nIdle worker thread\nhttp-8000-exec-1                                                                                21   TIMED_WAITING  50000000    java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@4faa65fe  -1           41            -1           17           -1\nsun.misc.Unsafe.park(-2)                                                                                                                                      \njava.util.concurrent.locks.LockSupport.parkNanos(198)                                                                                                         \njava.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(1963)                                                                        \njava.util.concurrent.LinkedBlockingQueue.poll(395)                                                                                                            \njava.util.concurrent.ThreadPoolExecutor.getTask(944)                                                                                                          \njava.util.concurrent.ThreadPoolExecutor$Worker.run(906)                                                                                                       \njava.lang.Thread.run(619)                                                                                                                                     \n\nNIO endpoint                                                                                                                                                              \nhttp-8000-ClientPoller                                                                          20   RUNNABLE       370000000                                                                                   -1           285           -1           8            -1\nsun.nio.ch.EPollArrayWrapper.epollWait(-2)                                                                                                                    \nsun.nio.ch.EPollArrayWrapper.poll(215)                                                                                                                        \nsun.nio.ch.EPollSelectorImpl.doSelect(65)                                                                                                                     \nsun.nio.ch.SelectorImpl.lockAndDoSelect(69)                                                                                                                   \nsun.nio.ch.SelectorImpl.select(80)                                                                                                                            \norg.apache.tomcat.util.net.NioEndpoint$Poller.run(1473)                                                                                                       \njava.lang.Thread.run(619)                                                                                                                                     \n\nMy 4 acceptors                                                                                                                                                              \nhttp-8000-Acceptor-3                                                                            19   BLOCKED        50000000    java.lang.Object@5302067                                                        16           71            -1           0            -1\nsun.nio.ch.ServerSocketChannelImpl.accept(129)                                                                                                                \norg.apache.tomcat.util.net.NioEndpoint$Acceptor.run(1198)                                                                                                     \njava.lang.Thread.run(619)                                                                                                                                     \n                                                                                                                                                              \nhttp-8000-Acceptor-2                                                                            18   BLOCKED        30000000    java.lang.Object@5302067                                                        16           48            -1           0            -1\nsun.nio.ch.ServerSocketChannelImpl.accept(129)                                                                                                                \norg.apache.tomcat.util.net.NioEndpoint$Acceptor.run(1198)                                                                                                     \njava.lang.Thread.run(619)                                                                                                                                     \n                                                                                                                                                              \nhttp-8000-Acceptor-1                                                                            17   BLOCKED        40000000    java.lang.Object@5302067                                                        16           51            -1           0            -1\nsun.nio.ch.ServerSocketChannelImpl.accept(129)                                                                                                                \norg.apache.tomcat.util.net.NioEndpoint$Acceptor.run(1198)                                                                                                     \njava.lang.Thread.run(619)                                                                                                                                     \n                                                                                                                                                              \nhttp-8000-Acceptor-0                                                                            16   RUNNABLE       80000000                                                                                    -1           59            -1           0            -1\nsun.nio.ch.ServerSocketChannelImpl.accept0(-2)                                                                                                                \nsun.nio.ch.ServerSocketChannelImpl.accept(145)                                                                                                                \norg.apache.tomcat.util.net.NioEndpoint$Acceptor.run(1198)                                                                                                     \njava.lang.Thread.run(619)  \n\nMy workers go up all the way to http-8000-exec-272. It looked like a handful of them were doing work, but must were idle. Our servlet requests are very short lived - 30ms tops.\n\nOur application works with normal HTTP polling socket connector, but we would like to use NIO because it would reduce the load on each tomcat node, and let us scale better. I am very interested in trying any suggestions or patches you might have. We have a unique scalability environment for Tomcat - many unique requests from the internet at a pretty fast pace. If NIO can be made work in our environment, it would be a major milestone of stability and performance for it. It is also possibly a configuration issue. We would be happy to try any patches/config changes.", "attachment_id": null, "bug_id": 44502, "id": 114068, "time": "2008-02-27T10:32:46Z", "creator": "emile.litvak@turn.com", "creation_time": "2008-02-27T10:32:46Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 44502, "attachment_id": null, "id": 114069, "time": "2008-02-27T10:52:58Z", "creator": "fhanik@apache.org", "creation_time": "2008-02-27T10:52:58Z", "is_private": false, "text": "Unless we can have a test case, there is little I  can do about this."}, {"count": 2, "tags": [], "bug_id": 44502, "attachment_id": null, "is_private": false, "id": 114084, "time": "2008-02-27T16:01:11Z", "creator": "cpierret@sparus-software.com", "creation_time": "2008-02-27T16:01:11Z", "text": "NIO connector relies on Java technology that had some bugs until very recent versions of JDK/JRE.\nWe experienced similar behavior using NIO connector with JDK 1.5.0u5.\nWhich version of JDK/JRE do you use ?\nIf not 1.5.0u14+ or 1.6.0u3+, try to upgrade the JDK/JRE to the most recent stable version."}, {"count": 3, "tags": [], "text": "Filip, I complitely understand that this is really hard to do anything about without a repro case. Unfortunately the repro is not possible. I believe it only happens when thousands of uniqie IP addresses bang on tomcat, which you can only simulate with real internet traffic. Our internal stress tests with Grinder fail to produce errors.\n\nWe can however try out any patches that you may develop in the future that you believe may fix this.\n\nChristophe, we realize that NIO is pretty immature in JVM. This is why we did all our tests with jdk1.6.0_04 (latest JVM available from Sun).", "attachment_id": null, "id": 114086, "creator": "emile.litvak@turn.com", "time": "2008-02-27T16:25:15Z", "bug_id": 44502, "creation_time": "2008-02-27T16:25:15Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 44502, "text": "Can you set maxKeepAliveRequests=\"1\"\nthis is essentially what the regular HTTP connector does when it gets more connections than threads\n\nFilip", "id": 114100, "time": "2008-02-28T07:20:42Z", "creator": "fhanik@apache.org", "creation_time": "2008-02-28T07:20:42Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 44502, "is_private": false, "id": 114424, "time": "2008-03-07T11:02:39Z", "creator": "emile.litvak@turn.com", "creation_time": "2008-03-07T11:02:39Z", "tags": [], "text": "Running with\nmaxKeepAliveRequests=\"1\"\nand\nacceptorThreadCount=\"1\"\nindeed made things more stable. We tried it for 10 minutes and it stayed up. Before it would fail right away.\n\nI suspect it was maxKeepAliveRequests=\"1\" that fixed it. Does this make sense to you guys?"}, {"count": 6, "tags": [], "text": "Yes it does make sense, that is how the regular connector works. when it hits max threads, it shuts down its connections to be able to handle other incoming connections. \n\nI suspect that something else is simply dropping connections, and when we close old connections you leave room to handle new ones.", "is_private": false, "bug_id": 44502, "id": 114466, "time": "2008-03-10T09:03:43Z", "creator": "fhanik@apache.org", "creation_time": "2008-03-10T09:03:43Z", "attachment_id": null}]