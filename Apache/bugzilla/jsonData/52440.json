[{"count": 0, "tags": [], "bug_id": 52440, "attachment_id": null, "text": "ValueExpression method getValueReference should return base object and property. But it returns null if ValueExpression is Facelets parameter.\nExample:\n\nsomeVar = #{concreteObject.property}\n\nValueExpression for #{someVar} return null from method getValueReference (guess because it is simple expression #{someVar}), but logicaly it should return parent expressions ValueReference (need hierachical ValueReference lookup).\n\nI made workaround with Java Reflect API in my code and it illustrates problem:\n\nELContext elContext = FacesContext.getCurrentInstance().getELContext();\nValueReference reference = exp.getValueReference(elContext);\n        \nif (reference == null && exp instanceof TagValueExpressionUEL) {\n\tValueExpressionImpl origExp = (ValueExpressionImpl) ((TagValueExpressionUEL) exp).getWrapped();\n            \n\t// TODO: JR: find better way to get base and property. ! Code is not portable because uses Tomcat EL implementation details. ! \n\tField field = ReflectionUtils.findField(origExp.getClass(), EL_IMPL_VAR_PROPERTY);\n\tfield.setAccessible(true);\n\tVariableMapper varMapper = (VariableMapper) ReflectionUtils.getField(field, origExp);\n    field = ReflectionUtils.findField(origExp.getClass(), EL_IMPL_NODE_PROPERTY);\n    field.setAccessible(true);\n    SimpleNode node = (SimpleNode) ReflectionUtils.getField(field, origExp);\n\n    if (varMapper != null && node != null) {\n\t\tValueExpression parentExp = varMapper.resolveVariable(node.getImage());\n        if (parentExp != null) {\n\t\t\ttry {\n\t\t\t\treference = parentExp.getValueReference(elContext);\n\n                if (reference == null) {\n\t\t\t\t\treference = getValueReference(parentExp);\n                }\n            } catch (PropertyNotFoundException e) {\n\t\t\t\tLOG.warn(\"Property not found: \" + e.getMessage());\n            }\n        }\n    }\n}", "id": 152632, "time": "2012-01-09T09:11:20Z", "creator": "justas.ratkevicius@gmail.com", "creation_time": "2012-01-09T09:11:20Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 52440, "text": "Can you provide small simple web application that demonstrates the problem?\n\nThat SimpleNode that you operate on - what is its exact className? (Which one of subclasses of SimpleNode that is?)", "id": 152643, "time": "2012-01-09T18:09:03Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2012-01-09T18:09:03Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 52440, "attachment_id": 28130, "text": "Created attachment 28130\nTest case for ValueReference returning null\n\nI use SystemEventListener event javax.faces.event.PreRenderComponentEvent to intercept component render process ant try to get component ValueExpression and ValueReference from it (class TestSystemEventListener).\n\nI use Facelets custom components with taglib file (not composite component).\n\nReturned ValueReference is always null.\n\nNull is returned from node AstIdentifier (super class SimpleNode)\n\nI print returned ValueReference value to console.", "id": 152651, "time": "2012-01-10T09:39:08Z", "creator": "justas.ratkevicius@gmail.com", "creation_time": "2012-01-10T09:39:08Z", "is_private": false}, {"count": 3, "tags": [], "creator": "markt@apache.org", "text": "I think I have this fixed but I'd like to confirm this with the test case. Please provide some details (the URL being the most important) of how this test case is meant to be used.", "id": 152727, "time": "2012-01-12T18:41:13Z", "bug_id": 52440, "creation_time": "2012-01-12T18:41:13Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 152728, "time": "2012-01-12T19:38:26Z", "bug_id": 52440, "creation_time": "2012-01-12T19:38:26Z", "is_private": false, "text": "Fixed based on the spec language for getValueReference()"}]