[{"count": 0, "tags": [], "bug_id": 59834, "text": "http://central.maven.org/maven2/org/apache/poi/poi-ooxml/3.14/poi-ooxml-3.14.pom includes no reference to the compile and runtime dependency on poi-scratchpad.\n\nhttps://github.com/apache/poi/blob/trunk/src/ooxml/java/org/apache/poi/extractor/ExtractorFactory.java includes imports for classes in poi-scratchpad, eg org.apache.poi.hwpf.OldWordFileFormatException.", "id": 192262, "time": "2016-07-09T13:22:06Z", "creator": "fanningpj@yahoo.com", "creation_time": "2016-07-09T13:22:06Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 59834, "text": "I wonder if we could detect poi-scratchpad uses in poi-main if we clear previously built poi-scratchpad.jar artifacts, compile just poi main and require all imports to be present, then compile poi-scratchpad.\n\nant test probably compiles scratchpad before compiling ooxml, which might be why this went unnoticed. Unfortunately, we would have the opposite problem if we compiled ooxml before scratchpad.\n\nIs there any way we resolve this at compile time rather through a unit test, and avoid throwing away a compilation result?", "id": 192265, "time": "2016-07-09T18:05:25Z", "creator": "onealj@apache.org", "creation_time": "2016-07-09T18:05:25Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 192266, "time": "2016-07-09T18:19:48Z", "bug_id": 59834, "creation_time": "2016-07-09T18:19:48Z", "is_private": false, "text": "There aren't (and shouldn't be) any references to scratchpad from the POI main jar\n\nThere are (and due to a lack of full interfaces for SL and WP, amongst others) a handful of references from OOXML to Scratchpad\n\nHowever, most uses of OOXML don't need Scratchpad. The extractor factory is one of the handful of places that does"}, {"count": 3, "tags": [], "creator": "onealj@apache.org", "attachment_id": null, "id": 192267, "time": "2016-07-09T18:49:11Z", "bug_id": 59834, "creation_time": "2016-07-09T18:49:11Z", "is_private": false, "text": "(In reply to Nick Burch from comment #2)\n> There are (and due to a lack of full interfaces for SL and WP, amongst\n> others) a handful of references from OOXML to Scratchpad\n> The extractor factory is\n> one of the handful of places that [lack full interfaces]\n\nI guess this bug depends on adding extractor to Common SL, WP, DG, etc"}, {"count": 4, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 192295, "time": "2016-07-11T17:10:45Z", "bug_id": 59834, "creation_time": "2016-07-11T17:10:45Z", "is_private": false, "text": "(In reply to Javen O'Neal from comment #3)\n> I guess this bug depends on adding extractor to Common SL, WP, DG, etc\n\nNot sure interfaces would help - the extractor factory needs to create concrete classes.\n\nI don't think we want to add another jar for things like ExtractorFactory, as we get enough confused people already. I'm not sure we want to require the scratchpad jar, as people doing eg just XSSF don't need it.\n\nMaybe we could have ExtractorFactory do some stuff with reflection, and give more helpful errors if the scratchpad jar is missing?\n\nMight also be good to try running all the OOXML unit tests with no scratchpad jar, and check if any bits other than the extractors fail?"}, {"count": 5, "tags": [], "bug_id": 59834, "text": "Yes, I also stumbled over this quite a while ago and in that project I actually copied WorkbookFactory and removed the access to these classes to make it work.\n\nI have now added a test-build at https://builds.apache.org/view/POI/job/POI-no-scratchpad/ which removes the classpath to the scratchpad-classes before running tests. Currently only TestExtractorFactory seems to fail in test-ooxml.", "id": 192304, "time": "2016-07-11T21:03:35Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-07-11T21:03:35Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 59834, "text": "OK, I've had a go at splitting the logic out, so that the OOXML stuff lives in OOXML (and remains the default), the Excel-specific stuff is in main and called from OOXML, and the Scratchpad stuff is in Scratchpad but called from main. Not too much duplication, not too much reflection...\n\nWith all 3 jars, nothing will change\n\nWith core + ooxml, excel and ooxml will work fine. However, if you don't have scratchpad but do give it a scratchpad-related file, it'll give you an exception telling you to add the jar\n\nI think this is probably the best we can do... Further testing and sanity checking requested though!", "id": 192309, "time": "2016-07-11T22:59:52Z", "creator": "apache@gagravarr.org", "creation_time": "2016-07-11T22:59:52Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "text": "Somehow we still link to some of the Scratchpad-Classes, TestExtractorFactory fails with the following exception, see https://builds.apache.org/view/POI/job/POI-no-scratchpad/5/testReport/(root)/%3Cinit%3E/org_apache_poi_extractor_TestExtractorFactory/\n\njava.lang.NoClassDefFoundError: org/apache/poi/hsmf/extractor/OutlookTextExtactor\n\tat java.lang.Class.forName0(Native Method)\n\tat java.lang.Class.forName(Class.java:171)\nCaused by: java.lang.ClassNotFoundException: org.apache.poi.hsmf.extractor.OutlookTextExtactor\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:202)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:190)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:247)", "id": 192326, "time": "2016-07-12T15:42:14Z", "bug_id": 59834, "creation_time": "2016-07-12T15:42:14Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 59834, "text": "I would still expect some parts of ExtractorFactory to fail when the Scratchpad jar is missing. Should compile fine, but fail at runtime with a message that you need scratchpad\n\nThe ExtractorFactory test likely will fail with no scratchpad, not only for the above reason, but also because it checks what extractor classes come back so has references to scratchpad-only classes", "id": 192327, "time": "2016-07-12T15:46:39Z", "creator": "apache@gagravarr.org", "creation_time": "2016-07-12T15:46:39Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "id": 194873, "time": "2016-11-08T15:55:58Z", "bug_id": 59834, "creation_time": "2016-11-08T15:55:58Z", "is_private": false, "text": "BTW, if I exclude TestExtractorFactory in the Jenkins-Job at https://builds.apache.org/job/POI-no-scratchpad/, it fails in some other tests with ClassNotFoundException:\n\njava.lang.NoClassDefFoundError: org/apache/poi/hslf/usermodel/HSLFSlideShow\n\tat org.apache.poi.sl.TestTable.testTextDirection(TestTable.java:108)\nCaused by: java.lang.ClassNotFoundException: org.apache.poi.hslf.usermodel.HSLFSlideShow\n        ...\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n\n\njava.lang.RuntimeException: java.io.IOException: java.lang.ClassNotFoundException: org.apache.poi.hslf.usermodel.HSLFSlideShowFactory\n\tat org.apache.poi.sl.draw.TestDrawPictureShape.openSampleDocument(TestDrawPictureShape.java:49)\n\tat org.apache.poi.sl.draw.TestDrawPictureShape.testResize(TestDrawPictureShape.java:59)\nCaused by: java.io.IOException: java.lang.ClassNotFoundException: org.apache.poi.hslf.usermodel.HSLFSlideShowFactory\n\tat org.apache.poi.sl.usermodel.SlideShowFactory.createSlideShow(SlideShowFactory.java:262)\n\tat org.apache.poi.sl.usermodel.SlideShowFactory.createHSLFSlideShow(SlideShowFactory.java:227)\n\tat org.apache.poi.sl.usermodel.SlideShowFactory.create(SlideShowFactory.java:79)\n\tat org.apache.poi.sl.usermodel.SlideShowFactory.create(SlideShowFactory.java:143)\n\tat org.apache.poi.sl.usermodel.SlideShowFactory.create(SlideShowFactory.java:107)\n\tat org.apache.poi.sl.draw.TestDrawPictureShape.openSampleDocument(TestDrawPictureShape.java:47)\nCaused by: java.lang.ClassNotFoundException: org.apache.poi.hslf.usermodel.HSLFSlideShowFactory\n        ...\n\tat org.apache.poi.sl.usermodel.SlideShowFactory.createSlideShow(SlideShowFactory.java:236)\n\nSo there seem to be a few more places where we unconditionally access these parts, e.g. SlideShowFactory. We should at least throw a better error message there as well."}, {"count": 10, "attachment_id": null, "bug_id": 59834, "text": "Another interesting failure is the following one:\n\njava.lang.NoClassDefFoundError: org/apache/poi/hslf/blip/WMF$NativeHeader\n\tat org.apache.poi.xslf.usermodel.XSLFPictureData.cacheProperties(XSLFPictureData.java:179)\n\tat org.apache.poi.xslf.usermodel.XSLFPictureData.getImageDimension(XSLFPictureData.java:145)\n\tat org.apache.poi.sl.draw.DrawPictureShape.resize(DrawPictureShape.java:100)\n\tat org.apache.poi.xslf.usermodel.XSLFSheet.createPicture(XSLFSheet.java:238)\n\tat org.apache.poi.xslf.TestXSLFBugs.bug59434(TestXSLFBugs.java:466)\nCaused by: java.lang.ClassNotFoundException: org.apache.poi.hslf.blip.WMF$NativeHeader\n\tat java.net.URLClassLoader$1.run(URLClassLoader.java:202)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:190)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:306)\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:247)\n\nSeems WMF classes are in scratchpad, but XSLFPictureData accesses it, should we promote WMF into main?", "id": 194874, "time": "2016-11-08T15:56:59Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-11-08T15:56:59Z", "tags": [], "is_private": false}]