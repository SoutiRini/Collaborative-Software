[{"count": 0, "tags": [], "bug_id": 55275, "attachment_id": null, "text": "hello,\n\nIt seems there is a limitation (approximately 1 000) of the number of 'cell comments' on a sheet with POI-Excel.\n\nBut why ? \nWith OpenOffice, and Excel, we can, manually, more than 1 000. \nSo can we make more, cell comment on a sheet, than 1 000 ? Like 3 000-4 000 :)\n\nRegards", "id": 168637, "time": "2013-07-17T11:15:35Z", "creator": "truciops@gmail.com", "creation_time": "2013-07-17T11:15:35Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 55275, "attachment_id": null, "is_private": false, "id": 168638, "time": "2013-07-17T11:18:38Z", "creator": "apache@gagravarr.org", "creation_time": "2013-07-17T11:18:38Z", "text": "What happens if you try to add more? Does POI object? Office? OpenOffice? Can you write a unit test that shows the issue? Does the limit change from file to file? Does it vary based on the length of text in the comment?\n\nIf you create several thousand comments in Excel or OpenOffice, does it use a different kind of record/records to what POI does? (BiffViewer may help you work that out)"}, {"count": 2, "tags": [], "creator": "truciops@gmail.com", "attachment_id": null, "id": 168642, "time": "2013-07-17T12:34:39Z", "bug_id": 55275, "creation_time": "2013-07-17T12:34:39Z", "is_private": false, "text": "Hello,\n\nIf i try to add more : there is only the last comments on my sheet. :'(\n\nSee below my little test to view that it's not fine :\n\nimport java.awt.Desktop;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.ss.usermodel.Cell;\nimport org.apache.poi.ss.usermodel.ClientAnchor;\nimport org.apache.poi.ss.usermodel.Comment;\nimport org.apache.poi.ss.usermodel.Drawing;\nimport org.apache.poi.ss.usermodel.RichTextString;\nimport org.apache.poi.ss.usermodel.Row;\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\n\npublic class truc {\n\n\tprivate static File FILERESULT;\n\t\n\tprivate Workbook ExcelPlanDeTravail;\n\t//private CreationHelper ExcelPlanDeTravailFactory;\n\tprivate Sheet mafeuille;\n\tprivate Row laligne;\n\tprivate Cell lecellule;\n\tprivate ClientAnchor commentairepanel;\n\tprivate Drawing commentairedessin;\n\t\npublic truc(){\n\ttry{\n\t//============================================\n    ////////////// - \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    //============================================\n\tFILERESULT = File.createTempFile(\"ExtractXLS\",\".xls\");\n \tFILERESULT.deleteOnExit();\n\n \t//============================================\n    ////////////// - \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    //============================================\n\tExcelPlanDeTravail = new HSSFWorkbook();\n\tmafeuille = ExcelPlanDeTravail.createSheet(\"test\");\n\t//ExcelPlanDeTravailFactory = ExcelPlanDeTravail.getCreationHelper();\n\t\n\t\n\tif(commentairedessin==null){\t    \n    \tcommentairedessin = mafeuille.createDrawingPatriarch();\n    }\n\t\n\t\n\tint m = 1;\n\tfor (int i=0;i<30;i++){\n\t\n\t\tlaligne = mafeuille.createRow(i);\n\t\n\t\tfor (int u=0;u<50;u++){\n\t\t\t\n\t\t\tlecellule = laligne.createCell(u);\n     \t\tlecellule.setCellValue(m);\n\t\t\tsetCellComment(lecellule, i+\"=\"+u);\n\t\t\tm++;\n\t\t}\n\t\n\t}\n\t\n\t\n\t\n\t} catch (Exception monerreur) {\n\t\tmonerreur.printStackTrace();\n\t} finally {\n\t\ttry {\n\t\t\tFileOutputStream fichiersorti = new FileOutputStream(FILERESULT.getAbsolutePath());\n\t\t\tExcelPlanDeTravail.write(fichiersorti);\n\t\t\tfichiersorti.close();\n\t\t} catch (Exception monerreur) {\n\t\t\tmonerreur.printStackTrace();\n\t\t} finally {\n\t\t    //============================================\n\t\t    ////////////// OUVERTURE FICHIER \\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\t\t    //============================================\n\t\t    if(FILERESULT.exists()==true){\n\t\t    \tif(Desktop.isDesktopSupported()){\n\t\t    \t\tif(Desktop.getDesktop().isSupported(java.awt.Desktop.Action.OPEN)){\n\t\t    \t\ttry {\n\t\t    \t\t\tDesktop.getDesktop().open(new File(FILERESULT.getAbsoluteFile().toString()));\n\t\t    \t\t \n\t\t    \t\t} catch (IOException monerreur) {\n\t\t    \t\t\t//\n\t\t    \t\t}\n\t\t    \t\t} else {\n\t\t    \t\t\t//\n\t\t    \t\t}\n\t\t    \t}else {\n\t\t    \t\t//\n\t\t\t    \t}\n\t\t    }\n\t\t}\n\t}\n\t\n}\nprotected void setCellComment(Cell cell, String message) {\n\tcommentairepanel = ExcelPlanDeTravail.getCreationHelper().createClientAnchor();\n\tcommentairepanel.setCol1(lecellule.getColumnIndex() + 2);\n\tcommentairepanel.setCol2(lecellule.getColumnIndex() + 9);\n\tcommentairepanel.setRow1(lecellule.getRowIndex() + 2);\n\tcommentairepanel.setRow2(lecellule.getRowIndex() + 9);\n\t\n\tComment comment = commentairedessin.createCellComment(commentairepanel);\n\tRichTextString str = ExcelPlanDeTravail.getCreationHelper().createRichTextString(message);\n\tcomment.setString(str);\n\tcomment.setAuthor(System.getProperty(\"user.name\"));\n\n\tcell.setCellComment(comment);\n}\n\t\n\t\n}\n\nRgds"}, {"count": 3, "attachment_id": null, "creator": "silencon@gmail.com", "is_private": false, "id": 177153, "time": "2014-08-14T06:59:55Z", "bug_id": 55275, "creation_time": "2014-08-14T06:59:55Z", "tags": [], "text": "\nhello,\n\nOur project will need to import the excel for some data init. cell will be added the comment about the reasons of error, so there may be add more than 1024 comments, but will only display the last 1024.\n\nRegards"}, {"count": 4, "tags": [], "text": "There is some news about this limitation?", "is_private": false, "bug_id": 55275, "id": 181676, "time": "2015-03-11T18:30:49Z", "creator": "daniele.renda@gmail.com", "creation_time": "2015-03-11T18:30:49Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "dominik.stadler@gmx.at", "attachment_id": null, "id": 181680, "time": "2015-03-11T20:07:37Z", "bug_id": 55275, "creation_time": "2015-03-11T20:07:37Z", "is_private": false, "text": "*** Bug 56852 has been marked as a duplicate of this bug. ***"}, {"count": 6, "attachment_id": null, "bug_id": 55275, "text": "*** Bug 55025 has been marked as a duplicate of this bug. ***", "id": 181682, "time": "2015-03-11T20:10:43Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-03-11T20:10:43Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "text": "There is actually bug 56380 which reports the same and has some more discussion already together with a unit test, therefore resolving this as duplicate.\n\n*** This bug has been marked as a duplicate of bug 56380 ***", "attachment_id": null, "id": 181683, "creator": "dominik.stadler@gmx.at", "time": "2015-03-11T20:12:35Z", "bug_id": 55275, "creation_time": "2015-03-11T20:12:35Z", "is_private": false}]