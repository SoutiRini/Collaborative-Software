[{"count": 0, "tags": [], "bug_id": 26459, "text": "Hi,\n\nIn the SQL task, using the option \"keepformat\" will prevent SQL statements lines\nfrom having their spaces trimed out.\n\nThis can prevent ANT from seing a ROW delimiter, which is being found only if an\nentire line equals the delimiter.\n\nIn example, if I write the following with the options 'delimiter' set to 'GO',\n'delimitertype' set to 'row', and 'keepformat' set to 'true':\n\nSELECT * ... FROM ...\nGO  \n\nAnd I put one or more spaces after the 'GO' statement, then it will not trigger\nsending of the 'SELECT' statement to the database.\n\nA simple solution would be changing source code of SQLExec class, and replace\nlines from method 'runStatements':\n\n(delimiterType.equals(DelimiterType.ROW)\n&& line.equals(delimiter)))\n\nby\n\n(delimiterType.equals(DelimiterType.ROW)\n&& line.trim().equals(delimiter)))\n\n\nRegards,\n\nMatthieu Recouly", "id": 51234, "time": "2004-01-27T10:39:46Z", "creator": "matthieu.recouly@laposte.net", "creation_time": "2004-01-27T10:39:46Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "creator": "matthieu.recouly@laposte.net", "text": "Additionaly, changing the following line:\n\nexecSQL(sql.substring(0, sql.length() - delimiter.length()),\n\nto:\n\nexecSQL(sql.substring(0, sql.length() -\n(delimiterType.equals(DelimiterType.NORMAL)?delimiter.length():line.length())),\n\nis required to definitely strip the ROW delimiter from SQL string we send to the\ndatabase", "id": 51235, "time": "2004-01-27T10:50:26Z", "bug_id": 26459, "creation_time": "2004-01-27T10:50:26Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 26459, "text": "Also you would prefer using:\n\nline.trim().equalsIgnoreCase(delimiter)\n\nrather than:\n\nline.trim().equals(delimiter)", "id": 51236, "time": "2004-01-27T10:55:11Z", "creator": "matthieu.recouly@laposte.net", "creation_time": "2004-01-27T10:55:11Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 26459, "attachment_id": null, "id": 51276, "time": "2004-01-28T01:04:52Z", "creator": "riznob@hotmail.com", "creation_time": "2004-01-28T01:04:52Z", "is_private": false, "text": "The whole idea of the keepformat option was to allow users to load packages, \ntriggers, types, and functions without losing the format of their code. For \nselect statements, there is no need to use the keepformat option."}, {"count": 4, "tags": [], "bug_id": 26459, "attachment_id": null, "text": "You may be interested to read the discussion that lead to the keepformat option.\n\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=10719\n\nEssentially, the database needs to recognize the delimiter. I will leave it to \nthe committers to comment on whether or not this will get fixed, but personally \nI think it works as expected.", "id": 51277, "time": "2004-01-28T01:18:14Z", "creator": "riznob@hotmail.com", "creation_time": "2004-01-28T01:18:14Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 26459, "attachment_id": null, "text": "Hi Robert,\n\nThe above example is to illustrate description of the problem, in fact I\nencountered three problems when I tried to load several SQL scripts against a\nMS-SQL server database:\n\n1/ In those scripts were written comments like the following:\n\n/* Section title\n-----------------*/\nSome statements\nGO\n\nWithout the 'keepformat' option set to 'true', the second line (several dashes +\n'*/') was ignored since ANT SQL task considers a line starting with '--' is a\ncomment, and must be dropped. This made the first line (where comment starts) to\nbe sent, and an error to occur since end of comment was not received by the\nserver. That's why I was forced to set the 'keepformat' to true.\n\n\n2/ Let's assume we set our 'delimiter' option the value 'GO', and we have the\nfollowing SQL code in a script\n\nPRINT 'YOU SHOULD GO\nTHERE'\n\nThis runs correctly with query analyzers coming with MS-SQL server, but without\nsetting the 'delimiterType' option to 'row' in ANT SQL task, this will cause the\ntext previous to \"GO\" to be sent as a query. That's why setting 'delimiterType'\nto 'row' is needed.\n\n\n3/ In some of the scripts I run, I found the delimiter written using both upper\nand lower case ('GO'/'go'), or with one or more spaces behind, which is the\nproblem I described above...\n\n\nCurrently, I am working in a large company, where people from database\ndepartment are used to MS tools which allow these practices. I wish they were\nable to use ANT instead of MS based tools to run their scripts against a DB,\nthat's why I am suggesting those changes, which look useful to me.\n\nNote that I AM NOT asking that ANT SQL task become more like MS tools, I am just\nquerying for more compatibility on precise points...\nIf this ever comes to break the original mind of the code ANT developers write,\nI will use the ANT way of handling such case and continue using the customized\nANT task I did write for that.\n\n\nCheers !\n\n\nMatthieu Recouly", "id": 51284, "time": "2004-01-28T08:05:25Z", "creator": "matthieu.recouly@laposte.net", "creation_time": "2004-01-28T08:05:25Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 26459, "text": "there's a new strictDelimiterMatching attribute now.\n\nsvn rev 675949 and 675954", "id": 118561, "time": "2008-07-11T06:58:52Z", "creator": "bodewig@apache.org", "creation_time": "2008-07-11T06:58:52Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 26459, "text": "*** Bug 44159 has been marked as a duplicate of this bug. ***", "id": 129888, "time": "2009-08-24T06:39:56Z", "creator": "bodewig@apache.org", "creation_time": "2009-08-24T06:39:56Z", "is_private": false, "attachment_id": null}]