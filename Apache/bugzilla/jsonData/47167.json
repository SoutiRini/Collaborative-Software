[{"count": 0, "tags": [], "creator": "duncan.fletcher@dsto.defence.gov.au", "attachment_id": null, "id": 126868, "time": "2009-05-07T21:56:12Z", "bug_id": 47167, "creation_time": "2009-05-07T21:56:12Z", "is_private": false, "text": "We've got a Subversion server (mod_dav_svn under Apache on Windows Server 2003) set up behind another Apache server configured as a reverse proxy (also on Windows Server 2003).  We recently upgraded the reverse-proxy box from Apache httpd 2.0.54 to httpd 2.2.11 and found that when two users access the Subversion repository at the same time, their usernames (or session tags maybe?) are being switched internally by Apache.  i.e. if the two users are simultaneously each trying to access an area that the other doesn't have access to, they get back 401 Authorization Required errors, with the wrong usernames appearing in the log (further explanation below).  The Subversion server has been running Apache 2.2.11 for months without trouble, its just the reverse-proxy we've changed.  We've isolated this error down to one of either mod_proxy or mod_proxy_http (details below), so even though the problem comes up when we use Subversion (including a custom authorization module), we're pretty sure the bug lies in Apache.\n\nAt the moment we're fine sticking with Apache 2.0.63 (which happens to be a lot faster than 2.2.6 as a reverse proxy, about 2x speed difference), but if anyone can look into this issue that'd be good.  Thanks!\n\n\nExample scenario of problem/symptoms:\n- userA is doing a large (500KB, 30+ files) commit to http://svnserver/repos/sandboxes/userA/private/\n- userB is doing a large (500KB, 30+ files) commit to http://svnserver/repos/sandboxes/userB/private/\n- one user kicks off their commit while the other commit is already running, i.e. in the middle of setting up the transaction & transferring the files - or both are kicked off at the same time - doesn't matter really, as long as both sessions are in progress simultaneously\n- At that point, one OR both users will get a 401 error (there is no particular pattern we've seen, other than that the user who kicks off second is more likely to get the 401 while the other user's transaction runs to completion, but about 1/3 of the time they both die)\n- Looking at the access.log of the subversion server, it shows that (for example) userB was denied access to userA's sandbox (http://svnserver/repos/sandboxes/userA/private/fileXYZ), even though userB was actually operating on their own sandbox at the time.\n- Snippet of access.log pasted in at the bottom. We can reproduce this fairly easily if additional Apache logging is necessary, but unfortunately we can't supply any network-traffic dumps.\n\n\nDetails:\n- Size of commit/transaction doesn't actually matter, its just that longer transactions are more likely to collide in testing.\n- Problem only occurs if accessing the svn repository via the reverse proxy. i.e. Accessing the repository directly has no problems.\n- Provided the commit is large enough that there is proper overlap, this happens every time, its not intermittent. The only thing that changes between tests is how many files the two commits get through before dying, but it always dies in less than a second.\n- No related messages in error.log (just the usual startup and shutdown notices).\n- Tested against different versions of Apache httpd and found some interesting results:\n\tApache 2.0.54\t- okay\n\tApache 2.0.63\t- okay\n\tApache 2.2.2\t- problem\n\tApache 2.2.3\t- problem\n\tApache 2.2.4\t- problem\n\tApache 2.2.6\t- okay!!\n\tApache 2.2.8\t- problem\n\tApache 2.2.9\t- problem\n\tApache 2.2.10\t- problem\n\tApache 2.2.11\t- problem\n\tApache 2.2.11 with mod_proxy.so and mod_proxy_http.so copied in from Apache 2.2.6 - okay!!\n- i.e.the problem is in either mod_proxy.so or mod_proxy_http.so and affects every release of Apache 2.2 except for 2.2.6!\n- Authentication of users is via mod_auth_sspi, i.e. Windows Domain authentication, at the Subversion server.\n- Apache installation is from the binaries downloaded from http://apache.16degrees.com.au/httpd/binaries/win32/ and http://archive.apache.org/dist/httpd/binaries/win32/.\n- Tried with and without the openssl build, no difference.\n- For testing, both the subversion server and the reverse-proxy server were put on the same LAN subnet so that test-clients could access either/both (to confirm the problem only happened when the reverse proxy was in the loop)\n- Just for info completeness, we're running svn 1.5.4 but have also checked svn 1.6.1: no difference in the problem.\n- We'd been running the reverse-proxy with Apache 2.0.54 for over a year with no trouble until the upgrade to 2.2.11; using the same httpd.conf as below (except for the version-specific changes like ServerRoot and mod_access vs mod_authz_host).\n- Reverse-proxy to the svnserver is the only job the problematic Apache installation is doing (I've listed below all of the modules it has loaded).\n\nRelevant conf lines from the reverse-proxy server:\n--vv------<snip>---------vv--\nLoadModule authz_host_module modules/mod_authz_host.so LoadModule dir_module modules/mod_dir.so LoadModule env_module modules/mod_env.so LoadModule headers_module modules/mod_headers.so LoadModule include_module modules/mod_include.so LoadModule log_config_module modules/mod_log_config.so LoadModule proxy_module modules/mod_proxy.so LoadModule proxy_http_module modules/mod_proxy_http.so LoadModule proxy_html_module modules/mod_proxy_html.so LoadModule setenvif_module modules/mod_setenvif.so ProxyRequests off ProxyVia On <Location /repos >\n\tProxyPass http://svnserver.ourdomain/repos\n      ProxyPassReverse /repos/\n      ProxyPassReverse http://svnserver/repos\n      ProxyPassReverse http://svnserver.ourdomain/repos\n      <Limit OPTIONS PROPFIND GET REPORT MKACTIVITY PROPPATCH PUT CHECKOUT MKCOL MOVE COPY DELETE LOCK UNLOCK MERGE>\n        Order Deny,Allow\n        Allow from all\n        Satisfy Any\n      </Limit>\n</Location>\n--^^------<snip>---------^^--\n\n\nRelevant conf lines from subversion server (\"svnserver\") (note these are not the only modules this server has loaded):\n--vv------<snip>---------vv--\nLoadModule sspi_auth_module modules/mod_auth_sspi.so \nLoadModule dav_svn_module modules/mod_dav_svn.so \nLoadModule permissions_svn_module modules/mod_permissions_svn.so \n<Location /repos>\n    DAV svn\n    SVNPath //fileserver/svnrepos/repos\n    AuthType SSPI\n    AuthName \"Subversion repository by OurDomain\"\n    Require valid-user\n    SSPIAuth On\t\t\t\n    SSPIAuthoritative On\t\n    SSPIDomain OurDomain\n    SSPIOfferBasic On\t\t\n    PermissionsSVNAccessFile //fileserver/svnrepos/conf/svs_permissions.conf\n</Location>\n--^^------<snip>---------^^--\n\n\nmod_permissions_svn.so is an in-house simple-ish authorization module based on mod_authz_svn that hooks into httpd core as follows:\n--vv------<snip>---------vv--\nstatic void registerHooks(apr_pool_t *p)\n{\n    ap_hook_access_checker(checkAccess, NULL, NULL, APR_HOOK_LAST);\n    ap_hook_auth_checker(checkAuthorisation, NULL, NULL, APR_HOOK_FIRST); \n}\n\nmodule AP_MODULE_DECLARE_DATA permissions_svn_module = {\n    STANDARD20_MODULE_STUFF,\n    createConfigRecord,              /* config creater per dir */\n    NULL,                            /* dir merger --- default is to override */\n    NULL,                            /* server config */\n    NULL,                            /* merge server config */\n    MODULE_ARGUMENTS,                /* command apr_table_t */\n    registerHooks                    /* register hooks */\n};\n--^^------<snip>---------^^--\nwhere checkAccess(...) and checkAuthorisation(...) implement our custom rules using fields from the request_rec parameter such as user, uri, etc.  I only mention this to help convince anyone reading this that this mod_permissions_svn is not the problem.\n\n\nAnd finally a snippet of the access.log of the subversion server...\n--vv------<snip>---------vv--\nxxx.xxx.xxx.198 - OURDOMAIN\\\\fletched [27/Apr/2009:14:36:02 +1000] \"PROPFIND /repos/sandboxes/fletched/private/tool/test/test_compatibility/TestPlugin.cpp HTTP/1.1\" 207 776\nxxx.xxx.xxx.198 - OURDOMAIN\\\\fletched [27/Apr/2009:14:36:02 +1000] \"PROPFIND /repos/!svn/vcc/default HTTP/1.1\" 207 455\nxxx.xxx.xxx.198 - OURDOMAIN\\\\fletched [27/Apr/2009:14:36:02 +1000] \"PROPFIND /repos/!svn/bc/52575/sandboxes/fletched/private/tool/test/test_compatibility/TestPlugin.cpp HTTP/1.1\" 207 535\nxxx.xxx.xxx.198 - OURDOMAIN\\\\fletched [27/Apr/2009:14:36:02 +1000] \"CHECKOUT /repos/!svn/ver/52575/sandboxes/fletched/private/tool/test/test_compatibility/TestPlugin.cpp HTTP/1.1\" 201 307\nxxx.xxx.xxx.198 - OURDOMAIN\\\\coopern [27/Apr/2009:14:36:02 +1000] \"PUT /repos/!svn/wrk/11125f68-8c91-644c-85a7-b9a056d3b561/sandboxes/coopern/private/testing_commit/tool/test/test_csvfile.cpp HTTP/1.1\" 204 -\nxxx.xxx.xxx.198 - OURDOMAIN\\\\fletched [27/Apr/2009:14:36:02 +1000] \"PUT /repos/!svn/wrk/11125f68-8c91-644c-85a7-b9a056d3b561/sandboxes/coopern/private/testing_commit/tool/tool_marshal_containers.h HTTP/1.1\" 401 401\nxxx.xxx.xxx.198 - OURDOMAIN\\\\coopern [27/Apr/2009:14:36:02 +1000] \"PROPFIND /repos/sandboxes/fletched/private/tool/test/test_compatibility/TestPlugin.h HTTP/1.1\" 401 401\nxxx.xxx.xxx.198 - OURDOMAIN\\\\coopern [27/Apr/2009:14:36:02 +1000] \"DELETE /repos/!svn/act/10089f74-f41f-484e-b1a0-783dafcf2155 HTTP/1.1\" 204 -\nxxx.xxx.xxx.198 - OURDOMAIN\\\\fletched [27/Apr/2009:14:36:02 +1000] \"DELETE /repos/!svn/act/11125f68-8c91-644c-85a7-b9a056d3b561 HTTP/1.1\" 204 -\n--^^------<snip>---------^^--"}, {"count": 1, "tags": [], "text": "Please confirm;\n\n2.0.63 reverse proxy to 2.2.11 dav_svn server is flawless.\n\n2.0.54 reverse proxy to 2.2.11 dav_svn server results in crossed logins.\n\nIf that is correct, this bug would not be addressed; the 2.0.63 version\nis the current 2.0 release and the ASF does not address bugs in previous\nversions, although some vendors will depending on their service agreements.", "attachment_id": null, "id": 126869, "creator": "wrowe@apache.org", "time": "2009-05-07T22:11:22Z", "bug_id": 47167, "creation_time": "2009-05-07T22:11:22Z", "is_private": false}, {"count": 2, "tags": [], "text": "No, the 2.0.54 reverse proxy to 2.2.11 dav_svn server is flawless too.  It's the 2.2 series that has the problem.  i.e:\n\n2.0.X reverse proxy to 2.2.11 dav_svn server is flawless (tested 2.0.54 and 2.0.63)\n\n2.2.X reverse proxy to 2.2.11 dav_svn server results in crossed logins\n  (except for 2.2.6, that one is okay for some reason; tested all released 2.2.X versions)\n\nTo be clear, 2.2.11 has this issue on our setup; it is not an \"old problem with an old release\" issue, its a current-release issue.", "is_private": false, "id": 126870, "creator": "duncan.fletcher@dsto.defence.gov.au", "time": "2009-05-07T23:33:04Z", "bug_id": 47167, "creation_time": "2009-05-07T23:33:04Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "nick@webthing.com", "text": "That's a very precise chronology!\n\nJust checking the change log, 2.2.6 introduced PR 43472 - breaking keep-alive in proxied HTTP backend connections.  This was fixed in 2.2.8.  This looks a likely candidate for your observation that 2.2.6 doesn't exhibit this bug.\n\nCan you try 2.2.11 with that fix reversed?  If this fixes your bug, we can start to think about a fix for both!\n\nPlease try 2.2.11 with the following patch (there may be an offset, since this is actually against svn 2.2 branch):\n\n--- modules/proxy/proxy_util.c  (revision 772881)\n+++ modules/proxy/proxy_util.c  (working copy)\n@@ -2189,7 +2189,7 @@\n         else\n             return 0;\n     }\n-    else if (APR_STATUS_IS_EAGAIN(status) || APR_STATUS_IS_TIMEUP(status)) {\n+    else if (APR_STATUS_IS_EAGAIN(status)) {\n         return 1;\n     }\n     return 0;", "id": 126871, "time": "2009-05-08T01:29:49Z", "bug_id": 47167, "creation_time": "2009-05-08T01:29:49Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 126872, "time": "2009-05-08T02:13:18Z", "bug_id": 47167, "creation_time": "2009-05-08T02:13:18Z", "is_private": false, "text": "I guess this is caused by the fact that your custom authentication module makes wrong assumptions about the HTTP protocol. HTTP is *stateless*. Because of this wrong assumption it is well known that NTLM doesn't work any longer over 2.2.x reverse proxies because it assumes that HTTP is a *statefull* protocol. You have to keep in mind that the reverse proxies eventually maps the same keepalive connection from the client to the reverse proxy to different backend connections for each request."}, {"count": 5, "tags": [], "bug_id": 47167, "text": "Okay, we just ran another test, this time using \"AuthType Basic\" instead of \"AuthType SSPI\" and mod_auth_sspi (we are using v1.0.4 from http://sourceforge.net/projects/mod-auth-sspi).  The problem went away under Apache 2.2.11.\nSo it looks like Ruediger is correct and that the problem is in an assumption that mod_auth_sspi is (incorrectly) making about keep-alives being synonymous with sessions.\n\nWe've been using pre-compiled binaries so although we can break out the compiler to try Nick's suggestion, it'll take time.  i.e. I'd like confirmation that it will (likely) add valuable information before we chase that rabbit.\n\nIn the meantime, we'll look into using mod_authnz_ldap for Windows AD authentication as an alternative to mod_auth_sspi and also track down a copy of the latter's source code to see if its feasible to fix that.", "id": 126925, "time": "2009-05-10T22:01:30Z", "creator": "duncan.fletcher@dsto.defence.gov.au", "creation_time": "2009-05-10T22:01:30Z", "is_private": false, "attachment_id": null}]