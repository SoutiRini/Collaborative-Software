[{"count": 0, "tags": [], "bug_id": 61310, "attachment_id": null, "is_private": false, "id": 199839, "time": "2017-07-16T22:00:19Z", "creator": "apache.bugs@whitewinterwolf.com", "creation_time": "2017-07-16T22:00:19Z", "text": "It seems that `mod_reqtimeout` timeout only starts when the SSL handshake has been fulfilled.\n\nHere is a simple configuration to show the issue:\n\n    # Ensure that accept filters do not interfere\n    AcceptFilter http none\n    AcceptFilter https none\n    # Apache core timeout\n    Timeout 30\n    # mod_reqtimeout timeout\n    RequestReadTimeout header=5 body=5\n\nA connection made with `openssl s_client` correctly times out after 5 seconds as expected:\n\n    user@host:~$ time openssl s_client -quiet -host www.mydomain.test -port 443\n    depth=0 CN = default.invalid\n    verify error:num=18:self signed certificate\n    verify return:1\n    depth=0 CN = default.invalid\n    verify return:1\n    \n    real  0m5.082s\n    user  0m0.006s\n    sys   0m0.016s\n\nHowever a connection made using `telnet` remains during 30 seconds, until Apache core global `Timeout` value expires:\n\n    user@host:~$ time telnet www.mydomain.test 443\n    Trying 192.168.0.1...\n    Connected to mydomain.test.\n    Escape character is '^]'.\n    Connection closed by foreign host.\n    \n    real  0m30.028s\n    user  0m0.003s\n    sys   0m0.012s\n\nThe expected behavior is for this connection to be interrupted after 5 seconds too, as defined in the `RequestReadTimeout` setting.\n\nFor reference, `mod_reqtimeout` documentation[1] seems to imply that its timeout should cover the SSL handshake (\"If a common configuration is used for http and https virtual hosts, the timeouts should not be set too low\") which does not seem to the be case here, hence the bug report.\n\nMoreover, `mod_reqtimeout` is cited by Wikipedia[2] as the \"the official solution supported by the developers\" to mitigate Slowloris class of attacks. The fact that it does not impose any timeout on the SSL handshake strongly limits its effectiveness for such use.\n\n[1]: https://httpd.apache.org/docs/2.4/mod/mod_reqtimeout.html\n[2]: https://en.wikipedia.org/wiki/Slowloris_(computer_security)#Mitigating_the_Slowloris_attack"}]