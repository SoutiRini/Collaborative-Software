[{"count": 0, "tags": [], "bug_id": 37010, "attachment_id": null, "id": 80971, "time": "2005-10-11T00:23:33Z", "creator": "Joe@Germuska.com", "creation_time": "2005-10-11T00:23:33Z", "is_private": false, "text": "I'm not deeply familiar with the Standard taglibs code, but I have a\nreproducible problem.  I had this tag in my code:\n\n<c:set var=\"VENDOR\" value=\"${sessionScope.BROWSE_VENDOR}\" />\n\nand it was causing the \"VENDOR\" attribute to be cleared from the session.  The\nnaming is evolving, so that for now those two attribute names are intended to\nmean different things.  I was puzzled about what was going on, but when I put in\na SessionAttributeListener, I was able to determine that the behavior was\ninstigated by:\n\norg.apache.jasper.runtime.PageContextImpl.removeAttribute(PageContextImpl.java:574)\norg.apache.taglibs.standard.tag.common.core.SetSupport.doEndTag(SetSupport.java:118)\norg.apache.jsp.catalog.Navigation_jsp._jspx_meth_c_set_1(Navigation_jsp.java:175)\n\nif I explicitly set VENDOR into page scope, then the session doesn't get\ntouched.  Or, if I use a different local name instead of VENDOR, the session\ndoesn't get touched.  I haven't quite figured out how this is working in the\ncode, but these changes to the JSP seem to effectively control the behavior.  \n\n(this is actually using standard-1.1.2.jar, but that version isn't in the\nversions...)"}, {"count": 1, "tags": [], "bug_id": 37010, "attachment_id": null, "id": 80973, "time": "2005-10-11T01:13:08Z", "creator": "rahul@apache.org", "creation_time": "2005-10-11T01:13:08Z", "is_private": false, "text": "Thanks for starting to investigate. IMO, line 118 of SetSupport.java has a \nbug, since it calls PageContext/JspContext#removeAttribute(String) instead of \nPageContext#remove(String,int), causing the \"overzealousness\" you refer to. \nYou should see this behavior only if the value attribute of c:set evaluates to \nnull. Is that consistent with what you are seeing?\n"}, {"count": 2, "tags": [], "text": "However, that's exactly what the JSTL 1.1 Spec. declares to be the correct\nbehavior. See \"4.3 <c:set>\" under the \"Null & Error Handling\" subsection.\nBasically, if the value evaluates to null and no scope has been provided,\n\"...the scoped variable is removed according to the semantics of\nPageContext.removeAttribute(varName).\" So, for this case, the proper usage would be:\n\n<c:set var=\"VENDOR\" value=\"${sessionScope.BROWSE_VENDOR}\" scope=\"page\"/>", "attachment_id": null, "id": 80992, "creator": "kschneider@gmail.com", "time": "2005-10-11T14:39:11Z", "bug_id": 37010, "creation_time": "2005-10-11T14:39:11Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 37010, "text": "Kris, thanks for the research; I didn't go straight to the spec.  Some\ndocumentation (like the O'Reilly JavaServer Pages book) describe the \"default\nvalue\" for \"scope\" as \"page\" -- I consider that inaccurate based on what you\npoint out in the spec, but that's not a taglibs bug.  I think it's incorrect to\nsay that there is a default value for \"scope\", but rather that there is a well\ndefined process for handling the absence of a \"scope\" value.  \n\n", "id": 80994, "time": "2005-10-11T15:07:49Z", "creator": "Joe@Germuska.com", "creation_time": "2005-10-11T15:07:49Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 37010, "attachment_id": null, "id": 81077, "time": "2005-10-13T04:44:21Z", "creator": "rahul@apache.org", "creation_time": "2005-10-13T04:44:21Z", "is_private": false, "text": "Thanks a lot Kris! The line I mention is indeed immaculate with respect to the \nspec. As a side effect of this conversation, jstl spec public now has issue # \n20.\n"}]