[{"count": 0, "text": "The usage of an unparsed external entity always causes a NullPointerException.  \nTo reproduce, use the DOMParser to attempt to parse any XML file that contains \nan inline DOCTYPE that contains an unparsed entity.  It makes no difference \nwhether or not the entity is referenced in the DOM.  Here's a simple sample \nthat reproduces the problem:\n\n<!DOCTYPE UnparsedEntityTest [\n\t<!NOTATION xsd SYSTEM \"xsd\">\n\t<!ENTITY xsd1075 PUBLIC \"EntityTest.xsd\" \"1075\" NDATA xsd>\n]>\n<UnparsedEntityTest/>\n\nThe problem is in org.apache.xerces.readers.DefaultEntityHandler.java in the \nreference to a null member variable fSystemId in addExternalEntityDecl, \naddUnparsedEntityDecl, and addNotationDecl. Here's a new version of these \nfunctions that fixes the problem:\n\n    public int addExternalEntityDecl(int name, int publicId, int systemId, \nboolean isExternal) throws Exception {\n\t\tString aname=fStringPool.toString(name);\n\t\tint entityHandle = fEntityPool.addEntityDecl(name, -1, \npublicId, systemId, fStringPool.addSymbol(aname), -1, isExternal);\n        return entityHandle;\n    }\n    public int addUnparsedEntityDecl(int name, int publicId, int systemId, int \nnotationName, boolean isExternal) throws Exception {\n\t\tString aname=fStringPool.toString(name);\n\t\tint entityHandle = fEntityPool.addEntityDecl(name, -1, \npublicId, systemId, fStringPool.addSymbol(aname), notationName, isExternal);\n        if (!fEntityPool.isNotationDeclared(notationName)) {\n            Object[] args = { fStringPool.toString(name),\n                              fStringPool.toString(notationName) };\n            fEntityPool.addRequiredNotation(notationName,\n                                            fErrorReporter.getLocator(),\n                                            \nXMLMessages.MSG_NOTATION_NOT_DECLARED_FOR_UNPARSED_ENTITYDECL,\n                                            XMLMessages.VC_NOTATION_DECLARED,\n                                            args);\n        }\n        return entityHandle;\n    }\n    public int addNotationDecl(int notationName, int publicId, int systemId, \nboolean isExternal) throws Exception {\n\t\tString aname=fStringPool.toString(notationName);\n        int notationHandle = fEntityPool.addNotationDecl(notationName, \npublicId, systemId, fStringPool.addSymbol(aname), isExternal);\n        return notationHandle;\n    }", "bug_id": 4026, "attachment_id": null, "id": 6472, "time": "2001-10-08T12:39:29Z", "creator": "jtaylor@menerva.com", "creation_time": "2001-10-08T12:39:29Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "zongaro@ca.ibm.com", "attachment_id": 693, "is_private": false, "id": 6823, "time": "2001-10-18T05:33:00Z", "bug_id": 4026, "creation_time": "2001-10-18T05:33:00Z", "text": "Created attachment 693\nPatch to xml-xerces/java/src/org/apache/xerces/readers/DefaultEntityHandler.java"}, {"count": 2, "text": "I believe there's a problem with the patch proposed when the bug was reported.  \nThe StringPool.toString and StringPool.addSymbol methods are inverse \noperations, so given the declaration for aname\n\n   String aname = fStringPool.toString(name);\n\nthe result of fStringPool.addSymbol(aname) should be equal to the value of \nname.  I don't think that value makes sense as the base System ID for the \nentity.\n\nI've attached a proposed patch to \norg.apache.xerces.readers.DefaultEntityHandler that I believe solves the \nproblem.  It does this by checking whether fSystemId is null before calling \naddSymbol; if it is null, the patch uses the -1 as the index for the base \nSystem ID.", "bug_id": 4026, "attachment_id": null, "id": 6824, "time": "2001-10-18T05:35:48Z", "creator": "zongaro@ca.ibm.com", "creation_time": "2001-10-18T05:35:48Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "gmarcy@us.ibm.com", "attachment_id": null, "id": 6825, "time": "2001-10-18T05:57:55Z", "bug_id": 4026, "creation_time": "2001-10-18T05:57:55Z", "is_private": false, "text": "It should be noted that fSystemId is only null if the InputSource we are \nprocessing does not contain a system id.  This will make resolving relative \nsystem ids in the entity declarations a bit harder later on if they are actually \nused.  While this change removes this specific NPE, there may be problems for \nthe user later on.  Take the case where the user does all his testing with the \nfiles in the local directory and then upon deployment discovers that the parser \ncannot find the external entities referenced in the document.  This is just a \nsymptom of a larger issue that needs to be resolved."}, {"count": 4, "tags": [], "creator": "zongaro@ca.ibm.com", "attachment_id": null, "is_private": false, "id": 7271, "time": "2001-10-29T10:35:52Z", "bug_id": 4026, "creation_time": "2001-10-29T10:35:52Z", "text": "*** Bug 3982 has been marked as a duplicate of this bug. ***"}, {"count": 5, "tags": [], "creator": "zongaro@ca.ibm.com", "attachment_id": null, "id": 7273, "time": "2001-10-29T10:41:17Z", "bug_id": 4026, "creation_time": "2001-10-29T10:41:17Z", "is_private": false, "text": "*** Bug 3945 has been marked as a duplicate of this bug. ***"}, {"count": 6, "tags": [], "creator": "elena@apache.org", "attachment_id": null, "id": 7406, "time": "2001-10-31T14:54:20Z", "bug_id": 4026, "creation_time": "2001-10-31T14:54:20Z", "is_private": false, "text": "*** Bug 549 has been marked as a duplicate of this bug. ***"}, {"count": 7, "text": "*** Bug 5840 has been marked as a duplicate of this bug. ***", "bug_id": 4026, "attachment_id": null, "id": 9629, "time": "2002-01-14T11:14:48Z", "creator": "zongaro@ca.ibm.com", "creation_time": "2002-01-14T11:14:48Z", "tags": [], "is_private": false}]