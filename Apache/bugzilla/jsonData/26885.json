[{"count": 0, "tags": [], "creator": "petri.suutarinen@pp1.inet.fi", "is_private": false, "text": "Following string does not work when added to response assertin component. \n\n\"<html>.*</html>\"\n\nThis is copied from the documentation so regular expressions does not work on\nresponse assertion component or the documentation is not up to date. I'm using\nJRE1.4.2_3.", "id": 52179, "time": "2004-02-12T12:28:12Z", "bug_id": 26885, "creation_time": "2004-02-12T12:28:12Z", "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 26885, "is_private": false, "id": 52180, "time": "2004-02-12T12:44:30Z", "creator": "sebb@apache.org", "creation_time": "2004-02-12T12:44:30Z", "tags": [], "text": "What options are you using on the Response Assertion - are you using \"matches\" \nor \"contains\"?\n\nPerhaps you could right-click and save the RA test element, and post it as an \nattachment here.\n\nWhat is the exact text you are matching against?\n[Please post as an attachment]\n\nThere's some further information on Regular Expressions in the JMeter FAQ."}, {"count": 2, "tags": [], "bug_id": 26885, "attachment_id": 10334, "id": 52182, "time": "2004-02-12T13:05:43Z", "creator": "petri.suutarinen@pp1.inet.fi", "creation_time": "2004-02-12T13:05:43Z", "is_private": false, "text": "Created attachment 10334\nResponse HTML that response assertion can't parse correctly"}, {"count": 3, "tags": [], "bug_id": 26885, "attachment_id": null, "id": 52187, "time": "2004-02-12T13:49:35Z", "creator": "sebb@apache.org", "creation_time": "2004-02-12T13:49:35Z", "is_private": false, "text": "That won't MATCH against\n\n<html>.*</html>\n\nas there is text before the first <html> tag.\n\nHowever, it should pass a CONTAINS Response Assertion.\n\nIf the actual value in the Response Assertion is\n\n\"<html>.*</html>\"\n\ni.e. with the quotes, neither MATCH nor CONTAINS will succeed."}, {"count": 4, "tags": [], "creator": "petri.suutarinen@pp1.inet.fi", "is_private": false, "text": "I'm using CONTAINS mode. And the string I'm trying to check is really\n\n<html>.*</html>\n\nnot with quotes.", "id": 52189, "time": "2004-02-12T14:00:54Z", "bug_id": 26885, "creation_time": "2004-02-12T14:00:54Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 26885, "is_private": false, "id": 52190, "time": "2004-02-12T14:42:29Z", "creator": "sebb@apache.org", "creation_time": "2004-02-12T14:42:29Z", "tags": [], "text": "Sounds as though it should work...\n\nTried a quick test, and it looks like the response is being treated as multiple \nlines, and so \".\" does not match new-line. Sorry, should have realised this \nearlier...\n\nTry adding (?s) to the start of the line.\n"}, {"count": 6, "tags": [], "text": "I debugged this problem more deeply and it looks like Perl5Compiler problem. If \nyou look at the JMeter1.9.1 code (line 305). I added there MULTILINE_MASK like \nthis (because there was not one).\n\n            Pattern pattern =\n               patternCache.getPattern(\n               stringPattern,\n                 Perl5Compiler.MULTILINE_MASK|Perl5Compiler.READ_ONLY_MASK);\n\nThen I compiled and tried it with a following rexexp:\n<html>(.|\\n)</html>\n\nThe result is that contains(..)-function prints java.lang.StackoverflowError. \nI'm quite poor with regular expressions but I don't think that my example \ncauses infinite loop. I also find discussion about this same problem. Here is \nlink to it.\n\nhttp://www.mail-archive.com/oro-user@jakarta.apache.org/msg00356.html\n\nBtw. What did you mean with adding (?s) to the start of the line?", "attachment_id": null, "id": 52223, "creator": "petri.suutarinen@pp1.inet.fi", "time": "2004-02-13T07:12:59Z", "bug_id": 26885, "creation_time": "2004-02-13T07:12:59Z", "is_private": false}, {"count": 7, "tags": [], "text": "<html>(.|\\n)</html> won't work - you probably meant <html>(.|\\n)*</html>\n\nAlternation - i.e. | - is very expensive as the matcher has to be able to \nbacktrack if one of the alternatives does not work.\n\n<html>[.\\n]*</html> should work\n\n(?s) means treat as single line, i.e. \".\" matches \"\\n\"\n", "attachment_id": null, "id": 52231, "creation_time": "2004-02-13T11:03:03Z", "time": "2004-02-13T11:03:03Z", "creator": "sebb@apache.org", "bug_id": 26885, "is_private": false}, {"count": 8, "tags": [], "text": "I've updated the component documentation to explain how the matching works, so \nclosing this call", "attachment_id": null, "id": 52736, "creation_time": "2004-02-21T16:39:40Z", "time": "2004-02-21T16:39:40Z", "creator": "sebb@apache.org", "bug_id": 26885, "is_private": false}]