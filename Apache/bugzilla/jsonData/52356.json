[{"count": 0, "tags": [], "text": "Even though accesses to \"org.apache.catalina.tribes.transport.bio.util.FastQueue.size\" are synchronized inside \"org.apache.catalina.tribes.transport.bio.util.FastQueue.add(ChannelMessage, Member[], InterceptorPayload)\" and \"org.apache.catalina.tribes.transport.bio.util.FastQueue.remove()\", the read access in \"org.apache.catalina.tribes.transport.bio.util.FastQueue.getSize()\" is not properly synchronized and thus can lead to a race condition. However, \"org.apache.catalina.tribes.transport.bio.util.FastQueue.getSize()\" is not used, so this bug never manifests. Nevertheless, we suggest that Tomcat developers either remove \"org.apache.catalina.tribes.transport.bio.util.FastQueue.getSize()\" or make it access the shared field safely.\n\nField \"org.apache.catalina.tribes.transport.bio.util.FastQueue.size\" is declared at\n<http://svn.apache.org/repos/asf/!svn/bc/1220560/tomcat/trunk/java/org/apache/catalina/tribes/transport/bio/util/FastQueue.java>.", "attachment_id": null, "bug_id": 52356, "id": 152269, "time": "2011-12-18T23:41:25Z", "creator": "reprogrammer@gmail.com", "creation_time": "2011-12-18T23:41:25Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "Write access is protected by the lock. Making it volatile will ensure the latest version is available to the getSize() method.", "id": 152383, "time": "2011-12-23T21:20:11Z", "bug_id": 52356, "creation_time": "2011-12-23T21:20:11Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "markt@apache.org", "text": "Fixed in trunk and 7.0.x and will be included in 7.0.24 onwards.", "id": 152384, "time": "2011-12-23T21:21:50Z", "bug_id": 52356, "creation_time": "2011-12-23T21:21:50Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "reprogrammer@gmail.com", "attachment_id": null, "id": 152388, "time": "2011-12-24T00:08:34Z", "bug_id": 52356, "creation_time": "2011-12-24T00:08:34Z", "is_private": false, "text": "Thanks for resolving this issue. Keshmesh <http://keshmesh.cs.illinois.edu/> detected this problem when we ran it on Tomcat using method \"org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor.run()\" as an entry point."}]