[{"count": 0, "tags": [], "creator": "pravin.balasubramaniam@agile.com", "attachment_id": null, "text": "I have the following configuration\n\nApache - 1.3.26\nmodssl - 2.8.10\nopenssl - 0.9.6d\n\nWebserver is configured to connect to weblogic 5.1 sp10 appserver.\n\nConfig file has,\n\n  LoadModule ssl_module libexec/libssl.so\n  LoadModule weblogic_module libexec/mod_wl_ssl.so\n\n\n  # SETTING UP WEBLOGIC HANDLER\n  <Location /ALD>\n  SetHandler weblogic-handler\n  PathTrim /ALD\n  ErrorPage http://211.210.121.99\n  </Location>\n\n  WeblogicHost 211.210.121.99\n\n  WebLogicPort 7001\n\n  MatchExpression /ALD/*\n\n\nProblem :\n\nWhen I upload a file using a form with\n\n<form action=\"CollectServlet\" enctype=\"multipart/form-data\" name=\"collect\" \nmethod=\"post\">\n\nMy apache web server, get the following request, which I see in access_log\n\n123.213.211.151 - - [25/Feb/2003:06:54:08 -0800] \"-----------------------------\n7d3b0c1cd032e\" 501 -\n\nThere is a corresponding error log like this,\n\n[Tue Feb 25 06:54:08 2003] [error] [client 123.213.211.151] Invalid method in \nrequest -----------------------------7d3b0c1cd032e\n\nAnother important thing to note is, It doesn't happen always. The form works \nfine, I was able to upload files, all of a sudden this appears, and I\ncould not upload files using multipart/form-data after that. The problem gets \nfixed only after I restart the apache web server.", "id": 32054, "time": "2003-02-27T01:08:23Z", "bug_id": 17459, "creation_time": "2003-02-27T01:08:23Z", "is_private": false}, {"count": 1, "tags": [], "creator": "trawick@apache.org", "is_private": false, "id": 32067, "attachment_id": null, "bug_id": 17459, "creation_time": "2003-02-27T11:17:56Z", "time": "2003-02-27T11:17:56Z", "text": "Note that mod_ssl for Apache 1.3 is not supported by this bug\ndatabase.  It is a third-party module.  If you can't recreate \nthe problem without mod_ssl, you'll need to check out the \nresources here: http://www.modssl.org/\n\nIf you can recreate the problem without mod_ssl, we'd need to\nsee the data read by Apache from the client.  You can do that\nwith strace or tcpdump.\n\nPlease update the PR as appropriate.\n\nNote that Apache 2.0 and its version of mod_ssl is supported\nby this bug database."}, {"count": 2, "tags": [], "text": "OK, I have verified this bug in 2.0.40 and Mozilla 1.1.1 on a Red Hat 9 i686\nsystem (virgin install) by building a simple HTML form, a simple CGI program,\nand a C program that generates varying length files.  No SSL.  With no file\nspecified, the browser returns 905 bytes of data.  With a file consisting of\n15,999,100 \"a\" characters, it works.  With a file consisting of 15,999,200 \"a\"\ncharacters, Apache fails with \"Software error: Malformed multipart POST\".  By\nthe way, when the file sent is 15,999,100 characters, the CGI program reports\nthat the response contained *exactly* 16,000,000 characters in the content!\n\nSo, OK, you make me look; it works with a file size of 15,999,144, and fails at\n15,999,146.\n\nAt 15,999,144, the CGI is still reporting a total content of 16,000,000.  Sounds\nunlikely this is a computer number, but oh so likely that it's a human one. \nCould it be there is some pre-LimitRequestBody code lingering around?", "attachment_id": null, "id": 35842, "creator": "satch@satchell.net", "time": "2003-04-23T01:15:08Z", "bug_id": 17459, "creation_time": "2003-04-23T01:15:08Z", "is_private": false}]