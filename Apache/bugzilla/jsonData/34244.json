[{"count": 0, "tags": [], "text": "Currently, if I want to run a junit task within an Ant build file, I must \ndeclare junit.jar in my CLASSPATH variable or I must copy junit.jar into the \nANT_HOME\\lib directory.\n\nI classify this as a design flaw, for the following reason:\n\nThe Ant distribution includes an ant-junit.jar file, which suggests that Ant \nfully supports the execution of JUnit test cases.  I understand that you don't \nwant to include a full JUnit distribution within the Ant distribution, but I \nthink that, just as Ant looks for the \"JAVA_HOME\" environment variable, it \nshould also look for a \"JUNIT_HOME\" variable.  This way, if I decide to \nupgrade my version of JUnit, all I have to do is adjust the contents of \nmy \"JUNIT_HOME\", and I don't have to remember to copy the new version of \njunit.jar into the ANT_HOME\\lib directory (which is absolutely the WRONG thing \nfor me to be doing anyway).  Nor do I have to remember to update a \"CLASSPATH\" \nvariable (which I also believe is the wrong thing for me to be doing).\n\nClearly, there is a way for me to work around this problem, but I'd like to \nsuggest the enhancement of looking for \"JUNIT_HOME\" as part of the execution \nprocess when handling the junit task.\n\nThanks,\n\nDavid McLeod", "is_private": false, "bug_id": 34244, "id": 73107, "time": "2005-03-30T21:16:55Z", "creator": "ddmcleod@yahoo.com", "creation_time": "2005-03-30T21:16:55Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 34244, "attachment_id": null, "is_private": false, "id": 73110, "time": "2005-03-30T21:44:13Z", "creator": "jglick@apache.org", "creation_time": "2005-03-30T21:44:13Z", "text": "I think the root of the problem is alluded to here:\n\nfile:///space/ant162/docs/faq.html#delegating-classloader\n\nAnt ships lib/ant-junit.jar but not junit.jar which it needs. OK in and of\nitself... *but* you can't use\n\n<taskdef name=\"junit\" classname=\"...\">\n    <classpath>\n        <pathelement location=\"${ant-junit.jar}\"/>\n        <pathelement location=\"${my.junit.jar}\"/>\n    </>\n</>\n\nunless you first move ant-junit.jar *out* of ${ant.home}/lib/, i.e. modify the\nAnt distribution! That is, if you wish to preserve the pristine Ant installation\nyou downloaded, which is a pretty natural wish, and you wish to use <junit>, you\nare forced to modify your $CLASSPATH (or the equivalent); you cannot write a\nbuild script which will portably load the task and its library, even if your\nproject is associated with a particular copy of junit.jar.\n\nThis affects e.g. the NetBeans IDE, requiring a special workaround:\n\nhttp://www.netbeans.org/source/browse/~checkout~/ant/src/org/apache/tools/ant/module/spi/AutomaticExtraClasspathProvider.java"}, {"count": 2, "tags": [], "bug_id": 34244, "attachment_id": null, "is_private": false, "id": 73111, "time": "2005-03-30T21:56:46Z", "creator": "ddmcleod@yahoo.com", "creation_time": "2005-03-30T21:56:46Z", "text": "That is not my experience.  I did NOT have to move ant-junit.jar out of the \nANT_HOME\\lib direcory.  I DID have to copy my junit.jar from the \nJUNIT_HOME\\lib directory into the ANT_HOME\\lib directory.  Having done that, \nmy junit task works fine:\n\n<target name=\"test\" depends=\"compile\">\n    <echo message=\"*** Executing JUnit Tests.\" />\n    <junit printsummary=\"false\" haltonfailure=\"true\">\n        <classpath>\n            <pathelement path=\"${classes}\" />\n            <pathelement location=\"${log4j.jar}\" />\n        </classpath>\n        <formatter type=\"brief\" usefile=\"false\" />\n        <test name=\"myPath.AllTests\" />\n    </junit>\n</target>\n\nMy argument is that I should not have to modify the Ant distribution in any \nway, nor should I have to modify my CLASSPATH variable.  There should be some \nway for me to configure Ant so that it knows where to look for my junit.jar \nfile.  It seems to me that one of the easiest ways is to have the Ant \nexecutable look for the \"JUNIT_HOME\" classpath; however, there are certainly \nother options, including having some kind of ant.properties file in which I \ncan declare my dependencies.  In fact, for the general case where there are \nmultiple things that Ant may depend on that aren't part of the Ant \ndistribution, maybe a properties file is the easiest solution."}, {"count": 3, "tags": [], "text": "I dont want to go near another env variable; they are a lot less reliable than\nyou think. First there is the inherent brittleness and complexity of testing\nchanges to all the platform launcher scripts, then the support calls we get when\nJAVA_HOME is set to the JRE, not the JDK, etc etc.\n\nHowever, all is not lost. \n\nAnt1.6 autoloads every JAR in ${user.home}/lib\n\nso stick any personal JAR files in there and you get them, even when you dont\nhave access to the main lib dir.\n\nAlso, there is a new -lib option, which sets up new lib dirs.\n\nThus, if if you go \n    ant -lib $JUNIT_HOME \nor, on windows\n    ant -lib %JUNIT_HOME% \nyou get junit.jar and anything else in the junit home dir included automatically.\n\nPS, I agree, CLASSPATH is the wrong approach. hence the -noclasspath option.\n\n", "is_private": false, "bug_id": 34244, "id": 73144, "time": "2005-03-31T11:38:13Z", "creator": "stevel@apache.org", "creation_time": "2005-03-31T11:38:13Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 34244, "is_private": false, "text": "-noclasspath will be in ant 1.6.3\n\nThere is a good chance that the <classloader> task\nwill be added to ant 1.7, this will be another way\nto solve the junit.jar issue.\n\nsee:\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=28228", "id": 73146, "time": "2005-03-31T11:54:57Z", "creator": "peterreilly@apache.org", "creation_time": "2005-03-31T11:54:57Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 34244, "text": "Also, Steve said:\n\nAnt1.6 autoloads every JAR in ${user.home}/lib\n\n\nwhich should be ${user.home}/.ant/lib\n\n-Matt", "id": 73155, "time": "2005-03-31T17:04:15Z", "creator": "mbenson@apache.org", "creation_time": "2005-03-31T17:04:15Z", "tags": [], "is_private": false}]