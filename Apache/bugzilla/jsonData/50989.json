[{"count": 0, "tags": [], "bug_id": 50989, "attachment_id": 26809, "id": 145369, "time": "2011-03-29T01:25:31Z", "creator": "andyb@deontik.com", "creation_time": "2011-03-29T01:25:31Z", "is_private": false, "text": "Created attachment 26809\nHello World JSP\n\nI've been setting up a scalable test bed for performance and scalability testing of some Java web applications. To establish basic some benchmarks, I've used a simple \"Hello World\" JSP (attached) with no tags or dynamic content. This JSP consistently leaks memory on multiple Java platforms and on different versions of Tomcat, eventually resulting in an OutOfMemory exception. If I use an equivalent Java servlet (also attached), no such exceptions occur. \n\nPlatforms tested:\n\nLinux 2.6.32 32-bit i586 (Ubuntu 10.4) + Java 6u24 + Tomcat 6.0.32\nLinux 2.6.32 32-bit i586 (Ubuntu 10.4) + Java 6u24 + Tomcat 6.0.29\nLinux 2.6.32 32-bit i586 (Ubuntu 10.4) + Java 6u24 + Tomcat 5.5.33\nMac OS X 10.6.7, 64-bit Intel i7 (quad core, iMac) + Java 1.6.0_24 + Tomcat 6.0.24\n\nThe linux tests were done in VMWare with varying memory configurations for both the VM image and the JVM. Most-used config was 768MB VM with -Xmx512MB for the JVM.\n\nThe Mac OS X tests were done on a JVM with -Xmx2GB. \n\nTests were driven by either Grinder or apache bench (ab) using 5-10 active workers. For the -Xmx512MB configuration, a memory error occurs after roughly 250,000 requests.\n\nNote that the JSP starts to \"stutter\" somewhat earlier, I assume due to garbage collection overheads as the memory limit approaches."}, {"count": 1, "attachment_id": 26810, "bug_id": 50989, "text": "Created attachment 26810\nSimple Hello World servlet for comparison with JSP (does not cause memory leaks)", "id": 145370, "time": "2011-03-29T01:27:57Z", "creator": "andyb@deontik.com", "creation_time": "2011-03-29T01:27:57Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 50989, "attachment_id": null, "id": 145375, "time": "2011-03-29T11:40:52Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2011-03-29T11:40:52Z", "is_private": false, "text": "The usual pitfall in the tests like this one is that you forget to add session=\"false\" to your <%@page%> declaration. The result is that you get a ton of session objects eating up memory.\n\nAdditional notes:\n1) Support questions should be sent to the users mailing list. Bugzilla is not a place for them.\n2) If there is a memory leak, you should better take some preliminary steps to analyze it. E.g., start with taking a memory dump and use some tool to look what eats up memory, e.g. Eclipse MAT [1]. More information might be in the Wiki and in the archives of the mailing list. Ask on the list if additional help is needed.\n[1] http://eclipse.org/mat/"}]