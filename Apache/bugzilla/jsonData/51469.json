[{"count": 0, "tags": [], "text": "Created attachment 27249\nextraced xlsxs 'a' & 'b'\n\nfor HSSFRow there is setRowStyle method, XSSFRow lacks this method.\n\nattached you'll find extracted xlsx a & b, the differing files are xl/worksheets/sheet1.xml resp.. in both files there is a '1' in cell A1, which has a certain format (bottom border black thin). in file 'b' the 1st row additionally has the same format set as row format.\n\nthe differing part is:\n\n<row r=\"1\" spans=\"1:1\">\nvs.\n<row r=\"1\" spans=\"1:1\" s=\"1\" customFormat=\"1\">\n\nso i guess the code from XSSFCell should work for XSSFRow (+ customFormat), so it should be something like:\n\n    public void setCellStyle(CellStyle style) {\n        if(style == null) {\n            if(_row.isSetS()) { // + maybe something like: \"|| _row.isSetCustomFormat()\"\n                _row.unsetS();\n                _row.unsetCustomFormat();\n            }\n        } else {\n            XSSFCellStyle xStyle = (XSSFCellStyle)style;\n            xStyle.verifyBelongsToStylesSource(_stylesSource);\n\n            long idx = _stylesSource.putStyle(xStyle);\n            _row.setS(idx);\n            _row.setCustomFormat(true);\n        }\n    }\n\nthe _stylesSource of XSSFRow could be handled exactly like for XSSFCell (as it's only a pointer to row.getSheet().getWorkbook().getStylesSource()).", "is_private": false, "bug_id": 51469, "id": 147718, "time": "2011-07-04T08:53:27Z", "creator": "hoernlein@uni-wuerzburg.de", "creation_time": "2011-07-04T08:53:27Z", "attachment_id": 27249}, {"count": 1, "tags": [], "text": "Thanks for this investigating. I've added support for setting row styles to XSSF and SXSSF in r1144348, along with unit tests. I've also promoted the getter and setter to the Row interface", "is_private": false, "id": 147834, "creator": "apache@gagravarr.org", "time": "2011-07-08T14:58:49Z", "bug_id": 51469, "creation_time": "2011-07-08T14:58:49Z", "attachment_id": null}]