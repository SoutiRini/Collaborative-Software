[{"count": 0, "tags": [], "text": "In my application web.xml I define a servlet-mapping for a new extension:\n\n    <servlet-mapping>\n        <servlet-name>jsp</servlet-name>\n        <url-pattern>*.jss</url-pattern>\n    </servlet-mapping>\n\nI have not modified, in any way, the global web.xml file.\n\nThe application context is loaded just fine, but .jsp files are not handled by the JspServlet (which is declared in global web.xml).  The end result being that the JSP source code is served to a web client instead of HTML generated by a compiled jsp class.\n\n.jsp files are compiled if I add the following to my web.xml:\n\n    <servlet-mapping>\n        <servlet-name>jsp</servlet-name>\n        <url-pattern>*.jsp</url-pattern>\n    </servlet-mapping>\n\nHowever, this seems redundant since that mapping is declared already in the global web.xml file.  My expectation was that the global mappings would be merged with the application mappings at deploy time -- which does not seem to be happening in this case.", "is_private": false, "bug_id": 52138, "id": 151198, "time": "2011-11-04T16:32:54Z", "creator": "james_defelice@elementk.com", "creation_time": "2011-11-04T16:32:54Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 52138, "text": "The current behaviour is by design.\n\nThe Servlet specification doesn't cover global defaults but Tomcat's behaviour is line with the rest of the Servlet specification.\n\nFor example, if mappings are provided for a Servlet in annotations and in the main web.xml they are not additive. Only the ones from the main web.xml are used. The full precedence order is:\nmain web.xml > fragments > annotations > defaults", "id": 151204, "time": "2011-11-04T19:33:10Z", "creator": "markt@apache.org", "creation_time": "2011-11-04T19:33:10Z", "is_private": false, "attachment_id": null}, {"count": 2, "text": "Servlets defined in global web.xml are inherited by webapp web.xml.  New servlets defined in web.xml do not eliminate servlets declared in global web.xml, instead they are merged - this spares the app developer from needing to declare the JspServlet, DefaultServlet, etc. in their webapp web.xml files alongside their proprietary servlet declarations.\n\nMappings defined in global web.xml are also inherited, by default, in the webapp. However, if new mappings are added in web.xml, then global web.xml mappings are dropped. Web developers that want to add new mappings for servlets declared in global web.xml are forced to re-declare the mappings in their webapp web.xml because they are not automatically inherited.\n\nWhy would the design of servlet declaration inheritance be out of sync with the design of servlet mapping inheritance?  Especially since servlet and servlet mapping declarations have such a close relationship?\n\nThis behavior seems inconsistent at best.  I'd like to understand the rationale behind this design decision, and how this does not constitute a design bug.", "bug_id": 52138, "attachment_id": null, "id": 151240, "time": "2011-11-06T21:29:43Z", "creator": "james_defelice@elementk.com", "creation_time": "2011-11-06T21:29:43Z", "tags": [], "is_private": false}, {"count": 3, "attachment_id": null, "creator": "knst.kolinko@gmail.com", "is_private": false, "id": 151241, "time": "2011-11-06T21:35:05Z", "bug_id": 52138, "creation_time": "2011-11-06T21:35:05Z", "tags": [], "text": "WONTFIX\n\nThere is nothing wrong with redeclaring standard servlets and mappings when you need to customize them. (That was always the case as far as I remember since 5.5)."}, {"count": 4, "tags": [], "bug_id": 52138, "is_private": false, "text": "To expand on my previous comment...\n\nWhen servlet mappings are overridden (e.g. fragment overrides annotations, or application overrides global) all servlet mappings from the overridden source are dropped. The reason for this is simple. If annotations are used to map a servlet to *.foo but the developer wants to change that to *.bar, there is no way to explicitly remove one or more mappings. Therefore, all overridden mappings are removed. The price that is paid for this is that if a developer wants to add a mapping, they have to specify all the overridden mappings as well.\n\nThis behaviour has been confirmed as required and correct with the Servlet EG for fragments, annotations and main web.xml. The global defaults just follow this pattern.", "id": 151308, "time": "2011-11-08T23:41:16Z", "creator": "markt@apache.org", "creation_time": "2011-11-08T23:41:16Z", "attachment_id": null}]