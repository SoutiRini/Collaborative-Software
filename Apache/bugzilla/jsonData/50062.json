[{"count": 0, "tags": [], "bug_id": 50062, "text": "java thinks that fop is a GUI application, so it creates a dock icon for it and gives it focus when it is launched.  This is highly annoying as it can happen in rapid succession during an automated build process using fop.\n\norg.apache.fop.cli.Main is the name of the class that is used as the application name in the OS X Menu Bar.", "id": 140604, "time": "2010-10-08T16:31:28Z", "creator": "jeremyhu@freedesktop.org", "creation_time": "2010-10-08T16:31:28Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 50062, "is_private": false, "text": "0.95 and 1.0 have this problem.", "id": 140607, "time": "2010-10-08T19:32:53Z", "creator": "jeremyhu@freedesktop.org", "creation_time": "2010-10-08T19:32:53Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "The fix is trivial... just edit the fop script to have:\n\nfop_exec_args=\"-Djava.awt.headless=true\"", "is_private": false, "bug_id": 50062, "id": 141983, "time": "2010-11-24T23:11:26Z", "creator": "jeremyhu@freedesktop.org", "creation_time": "2010-11-24T23:11:26Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "jeremyhu@freedesktop.org", "attachment_id": null, "id": 141984, "time": "2010-11-24T23:29:44Z", "bug_id": 50062, "creation_time": "2010-11-24T23:29:44Z", "is_private": false, "text": "Actually, that won't work... this will:\n\n--- fop.orig\t2010-11-24 23:25:55.000000000 -0500\n+++ fop\t2010-11-24 23:26:29.000000000 -0500\n@@ -19,6 +19,7 @@\n \n rpm_mode=true\n fop_exec_args=\n+java_exec_args=\"-Djava.awt.headless=true\"\n no_config=false\n fop_exec_debug=false\n show_help=false\n@@ -247,7 +248,7 @@ fi\n \n # Execute FOP using eval/exec to preserve spaces in paths,\n # java options, and FOP args\n-fop_exec_command=\"exec \\\"$JAVACMD\\\" $LOGCHOICE $LOGLEVEL -classpath \\\"$LOCALCLASSPATH\\\" $FOP_OPTS org.apache.fop.cli.Main $fop_exec_args\"\n+fop_exec_command=\"exec \\\"$JAVACMD\\\" $java_exec_args $LOGCHOICE $LOGLEVEL -classpath \\\"$LOCALCLASSPATH\\\" $FOP_OPTS org.apache.fop.cli.Main $fop_exec_args\"\n if $fop_exec_debug ; then\n     echo $fop_exec_command\n fi"}, {"count": 4, "tags": [], "bug_id": 50062, "attachment_id": null, "is_private": false, "id": 157432, "time": "2012-04-07T01:42:53Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:42:53Z", "text": "resetting P2 open bugs to P3 pending further review"}, {"count": 5, "attachment_id": null, "bug_id": 50062, "text": "not a bug; certain functions of FOP require resolving relative dimensions, such as pixel, which can only be determined by accessing headed features", "id": 157700, "time": "2012-04-08T09:26:25Z", "creator": "gadams@apache.org", "creation_time": "2012-04-08T09:26:25Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 50062, "is_private": false, "id": 157950, "attachment_id": null, "creator": "jeremyhu@freedesktop.org", "creation_time": "2012-04-11T17:45:21Z", "time": "2012-04-11T17:45:21Z", "text": "If that is true, then fop is misdesigned, and that IS a bug.  There's no reason that you should need to access a physical head in order to do anything since you don't actually USE the head.\n\nTake a look at the patch that I provided you with back in 2010.  We've been using it in Macports for almost 2 years now.  I suggest you take the fix."}, {"count": 7, "tags": [], "bug_id": 50062, "is_private": false, "text": "The suggested change only affects the script to call Java not any internal code. Folks you want to run FOP on a headless environment can easily add -Djava.awt.headless=true to their Java startup script; Just as you have done. Therefore we don't need to do anything to FOP's code or distribution.", "id": 157982, "time": "2012-04-12T12:50:33Z", "creator": "bowditch_chris@hotmail.com", "creation_time": "2012-04-12T12:50:33Z", "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 50062, "attachment_id": null, "is_private": false, "id": 157984, "time": "2012-04-12T13:47:21Z", "creator": "gadams@apache.org", "creation_time": "2012-04-12T13:47:21Z", "text": "(In reply to comment #6)\n> If that is true, then fop is misdesigned, and that IS a bug.  There's no reason\n> that you should need to access a physical head in order to do anything since\n> you don't actually USE the head.\n> \n> Take a look at the patch that I provided you with back in 2010.  We've been\n> using it in Macports for almost 2 years now.  I suggest you take the fix.\n\nIt is a reasonable question as to whether there are in fact any dependencies on running headed. If not, then we could add the headless param to the command line start-ups. If there is, then we could consider removing those dependencies (if feasible).\n\nI do note there is a FAQ item on headless at [1], which answer refers to [2].\n\n[1] http://xmlgraphics.apache.org/fop/faq.html#svg-headless\n[2] http://xmlgraphics.apache.org/fop/1.0/graphics.html#batik"}, {"count": 9, "tags": [], "bug_id": 50062, "text": "I agree that any dependencies on being attached to a head should be removed, but the fact that fop works just fine with -Djava.awt.headless=true seems to indicate that there are no such real dependencies.\n\nFurthermore, this is not about wanting to run without a head.  This bug is about fop making my head totally useless while it is running.  If I don't add -Djava.awt.headless=true, then fop steals focus from real applications every time it runs.  This means that if I kick off a build of X11 in the background and switch to do email or whatnot, fop will steal focus away from my email application when the build starts to produce its documentation.  Since fop is exec'd about once every 5 seconds during that time, it can make life quite annoying.\n\nThis is a real issue and needs to be addressed.  If you don't like the -Djava.awt.headless=true patch that we've been shipping for the past ~2 years, then by all means, find a better solution and remove whatever dependencies exist inside fop.", "id": 157994, "time": "2012-04-12T17:52:41Z", "creator": "jeremyhu@freedesktop.org", "creation_time": "2012-04-12T17:52:41Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 50062, "attachment_id": null, "text": "(In reply to comment #9)\n> I agree that any dependencies on being attached to a head should be removed,\n> but the fact that fop works just fine with -Djava.awt.headless=true seems to\n> indicate that there are no such real dependencies.\n\nI recall running into a dependency last year when running junit tests. Some of them failed if headless was set for all of them. But I need to re-check to see if that dependency still exists. If it doesn't, I'll apply the suggested change.", "id": 157996, "time": "2012-04-12T18:04:51Z", "creator": "gadams@apache.org", "creation_time": "2012-04-12T18:04:51Z", "is_private": false}, {"count": 11, "tags": [], "text": "http://svn.apache.org/viewvc?view=revision&revision=1325624\n\nchecking on junit shows that all tests are invoked in headless mode; so  i've applied the suggested fix to {fop, fop.bat, and fop.js}; however, since I do not personally make use of these shells/scripts, i would appreciate it if anyone who does use them report any new problems that arise due to this change;\n\nif it turns out that some special usages do require non-headless mode, then i'll further tweak the shells/scripts to provide a command option to remove the headless define", "is_private": false, "bug_id": 50062, "id": 158007, "time": "2012-04-13T06:31:58Z", "creator": "gadams@apache.org", "creation_time": "2012-04-13T06:31:58Z", "attachment_id": null}, {"count": 12, "attachment_id": null, "bug_id": 50062, "text": "As discussed, this commit has been reverted as the user can set the headless or any other JVM argument if they wish to do so. These arguments, however, should not be set by default.\n\nGlenn, should I set the status of this to invalid since it's not actually a bug? Or wontfix? Or should I just leave it be?", "id": 162397, "time": "2012-09-26T08:53:40Z", "creator": "med1985@gmail.com", "creation_time": "2012-09-26T08:53:40Z", "tags": [], "is_private": false}, {"count": 13, "tags": [], "text": "(In reply to comment #12)\n> As discussed, this commit has been reverted as the user can set the headless\n> or any other JVM argument if they wish to do so. These arguments, however,\n> should not be set by default.\n> \n> Glenn, should I set the status of this to invalid since it's not actually a\n> bug? Or wontfix? Or should I just leave it be?\n\nI would like to  have a better understanding if most usage of FOP requires headed than headless. Since the FOP tests apparently work with headless mode, I have to wonder if headless is the more typical usage.\n\nA better fix would be to keep this original fix, and then change to headed if AWT output is used if the user did not explicitly set headed or headless.\n\nIn other words, I think that switching to headed by default in order to fix AWT usage is the wrong approach. I think we should use headless by default.", "attachment_id": null, "id": 162398, "creator": "gadams@apache.org", "time": "2012-09-26T09:43:05Z", "bug_id": 50062, "creation_time": "2012-09-26T09:43:05Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 50062, "text": "(In reply to comment #13)\n> (In reply to comment #12)\n> > As discussed, this commit has been reverted as the user can set the headless\n> > or any other JVM argument if they wish to do so. These arguments, however,\n> > should not be set by default.\n> > \n> > Glenn, should I set the status of this to invalid since it's not actually a\n> > bug? Or wontfix? Or should I just leave it be?\n> \n> I would like to  have a better understanding if most usage of FOP requires\n> headed than headless. Since the FOP tests apparently work with headless\n> mode, I have to wonder if headless is the more typical usage.\n\nThe junit tests don't run in a headless environment, a HeadlessException. So I'm not sure what is meant by \"typical usage\".\n\n> \n> A better fix would be to keep this original fix, and then change to headed\n> if AWT output is used if the user did not explicitly set headed or headless.\n> \n> In other words, I think that switching to headed by default in order to fix\n> AWT usage is the wrong approach. I think we should use headless by default.\n\nThe problem with that patch is that it forces a headless environment, where as previously the user had the option of a headless environment (with the -Djava.awt.headless=true). No code change is needed in for a headless environment. However with this patch applied a code change is needed, and in several places.\n\nAside from that, a graphical head is needed for use of the AWT renderer but also for SVG as Batik's reliance on the AWT system hasn't been addressed. The use of SVG in the user base is vast, so I'm not sure it's fair to say \"typical usage\" doesn't require a headless environment. Fixing Batik is not a small task and not one that it seems anyone is in any rush to fix.", "id": 162399, "time": "2012-09-26T10:13:30Z", "creator": "med1985@gmail.com", "creation_time": "2012-09-26T10:13:30Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 50062, "is_private": false, "text": "Sorry, turns out I can't type. I didn't mean to suggest that the unit tests represent typical use-cases, though they do, they should test a lot more. My point was merely we have to be careful since FOP is used in so many different ways by so many different people; a typical use-case isn't easy to define.", "id": 162400, "time": "2012-09-26T10:18:18Z", "creator": "med1985@gmail.com", "creation_time": "2012-09-26T10:18:18Z", "attachment_id": null}]