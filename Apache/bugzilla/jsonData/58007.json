[{"count": 0, "tags": [], "bug_id": 58007, "attachment_id": null, "id": 183339, "time": "2015-06-06T19:05:18Z", "creator": "consulting@m3047.net", "creation_time": "2015-06-06T19:05:18Z", "is_private": false, "text": "Very simple to reproduce:\n\n1) Visit https://apache.org. or https://apache.org./foo\n\nMIND THE DOT! That makes it really fully qualified. It's a DNS thing.\n\n2) Click through the cert invalid warning (maybe you want to fix that too).\n\n3) See 400 error."}, {"count": 1, "tags": [], "creator": "consulting@m3047.net", "attachment_id": null, "is_private": false, "id": 183340, "time": "2015-06-06T19:06:40Z", "bug_id": 58007, "creation_time": "2015-06-06T19:06:40Z", "text": "I'll observe that yeap, BZ helpfully rewrote my first URL so that it doesn't work."}, {"count": 2, "tags": [], "bug_id": 58007, "attachment_id": null, "text": "Apache rewrite rules to mitigate the bug: https://lists.dns-oarc.net/pipermail/dns-operations/2015-June/013321.html", "id": 183341, "time": "2015-06-06T22:50:14Z", "creator": "consulting@m3047.net", "creation_time": "2015-06-06T22:50:14Z", "is_private": false}, {"count": 3, "tags": [], "creator": "consulting@m3047.net", "attachment_id": null, "is_private": false, "id": 183345, "time": "2015-06-07T16:35:59Z", "bug_id": 58007, "creation_time": "2015-06-07T16:35:59Z", "text": "Actual code in ssl_engine_kernel.c:\n\n            if (strcasecmp(host, servername)) {\n                ap_log_error(APLOG_MARK, APLOG_ERR, 0, r->server, APLOGNO(02032)\n                            \"Hostname %s provided via SNI and hostname %s provided\"\n                            \" via HTTP are different\", servername, host);\n                return HTTP_BAD_REQUEST;\n\n\nSpecifically the hostname provided via SNI has the trailing dot, the hostname provided via HTTP does not."}, {"count": 4, "tags": [], "bug_id": 58007, "text": "RFC 6066 says:\n\n   \"HostName\" contains the fully qualified DNS hostname of the server,\n   as understood by the client.  The hostname is represented as a byte\n   string using ASCII encoding without a trailing dot.  This allows the\n   support of internationalized domain names through the use of A-labels\n   defined in [RFC5890].  DNS hostnames are case-insensitive.  The\n   algorithm to compare hostnames is described in [RFC5890], Section\n   2.3.2.4.\n\nHowever, clients are not doing this. I've tried Firefox (Linux & Mac), Safari. Some versions of curl work, some don't.", "id": 183346, "time": "2015-06-07T17:37:53Z", "creator": "consulting@m3047.net", "creation_time": "2015-06-07T17:37:53Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 58007, "attachment_id": null, "is_private": false, "id": 183347, "time": "2015-06-07T19:16:29Z", "creator": "consulting@m3047.net", "creation_time": "2015-06-07T19:16:29Z", "text": "I don't think you can fix the invalid cert warning in the browser. ;-) However, I question the logic behind the 400 error.\n\nA cert has been returned, the handshake has completed (or not). The SNI hostname is now compared with the hostname from inside the request, the SNI hostname in question containing an invalid dot at the end. If the invalid dot were removed they would compare equal."}, {"count": 6, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "text": "I fail to see the bug here...\n\nApache httpd does not really mind about FQDN or not, its only requirement is that the SNI, the Host header and the ServerName/ServerAlias are consistent.\n\nIMHO, if the browser sends differents SNI and Host header, that's its bug.", "id": 183348, "time": "2015-06-07T19:46:01Z", "bug_id": 58007, "creation_time": "2015-06-07T19:46:01Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 58007, "attachment_id": null, "text": "(In reply to Yann Ylavic from comment #6)\n> [...]\n> IMHO, if the browser sends differents SNI and Host header, that's its bug.\n\nGood point. From what I can see, Apache logs the Host: header with the dot if you use %{Host}i.\n\nSo Firefox is broken, but it's consistent AFAICT. OTOH Apache is logging the host with the dot in the request log, and complaining that it doesn't have a dot in the error log.", "id": 183349, "time": "2015-06-07T23:24:53Z", "creator": "consulting@m3047.net", "creation_time": "2015-06-07T23:24:53Z", "is_private": false}, {"count": 8, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "is_private": false, "id": 183357, "time": "2015-06-08T11:47:39Z", "bug_id": 58007, "creation_time": "2015-06-08T11:47:39Z", "text": "The SNI is compared against r->hostname, which is a parsed value of the original Host header (without the port, the trailing dots), supposedly SNI compatible...\n\nSo I wonder if:\n1) we should fix this, since clients are not supposed to dot FQDNs in SNI,\n2) the SNI should be matched against the Host header instead of r->hostname (i.e. the fix belongs in mod_ssl only),\n3) server/vhost.c::fix_hostname() should stop stripping the trailing dot.\n\nMy personnal preference would be 3) since two hosts w/ and w/o the trailing dot (FQDN or not) are possibly not the same ones (and hence the same VirtualHosts).\nhttpd could (theorically) be asked to handle them separately (or not), by using differents ServerNames (or one as ServerName, the other as ServerAlias).\nThere is possibly a compatibility issue though by changing this at the vhost level, and this is beyond the SSL only scope.\n\nSo we should probably go for 2) since browsers don't play \"game\" 1).\nI don't think we can be lenient and therefore ignore the trailing dot from SNIs, let's be consistent in a strict way."}, {"count": 9, "tags": [], "bug_id": 58007, "attachment_id": null, "id": 183358, "time": "2015-06-08T12:30:39Z", "creator": "stefan@eissing.org", "creation_time": "2015-06-08T12:30:39Z", "is_private": false, "text": "It cannot be considered a bug when SNI and Host header differ. You cannot expect all requests on the same connection to have the same Host header either.\n\nBrowsers will reuse TLS connections, if hostnames resolve to the same IP address and wildcard certs or matching alternate names in the certificate to match.\n\nIt is really a client decision to reuse an existing connection for other hostnames.\n\nAnd if the server wants the client to use another connection for such a request, 421 is the proper status code. See http://httpwg.github.io/specs/rfc7540.html#HttpExtra Section 9.1.2 Additionally, the Alt-Svc http extensions https://httpwg.github.io/http-extensions/alt-svc.html#alt-svc explicitly encourages clients to use a connection for \"foreign\" URLs."}, {"count": 10, "tags": [], "creator": "ylavic.dev@gmail.com", "attachment_id": null, "is_private": false, "id": 183359, "time": "2015-06-08T13:04:29Z", "bug_id": 58007, "creation_time": "2015-06-08T13:04:29Z", "text": "Hmm, so how are we supposed to handle a subsequent request on the same connection but for a different vhost with differents SSL parameters (eg. SSLProtocol, CipherSuite, ...), renegotiate?\n\nWhere is the win with SNI here?\nHow does the client side know about that?"}, {"count": 11, "tags": [], "bug_id": 58007, "attachment_id": null, "text": "Discussion about SNIed connections reuse moved to dev@.", "id": 183360, "time": "2015-06-08T13:45:10Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-06-08T13:45:10Z", "is_private": false}, {"count": 12, "tags": [], "creator": "consulting@m3047.net", "attachment_id": null, "text": "Wow. Well, there's a lot more to this than I reckoned... for the most part this discussion is beyond me. I do have one comment: any final dot should be ignored for comparison purposes.\n\n> 3) server/vhost.c::fix_hostname() should stop stripping the trailing dot.\n\nwww.example.com and www.example.com. are the same thing; at least they're supposed to be, at least that's consistent with the principle of least surprise. Actually, the former is supposed to be the latter. Because nobody really wants to go to www.example.com.ru. or www.example.com.example.com. Right? But that's what would potentially happen with a search list. The search list will not be applied to the second one, because it ends in dot.\n\nSo: DNS says they're equivalent, but with a footnote regarding resolvers and search lists.\n\nApache logs them differently (with %{Host}i so I presume this comes from the Host: header): without and with the dot. I don't know if the client should be sending them differently... However I expect them to refer to the same (virtual) host, I would be very surprised if they didn't. Servers which don't treat them the same are as far as I'm concerned broken. (Apache does treat them the same, which is to say if you set up a NameVirtualHost with separate logging, both the no dot (logging 200) and dot (logging 400) get directed to that VirtualHost, which is defined without the dot.)\n\n\nNow that I'm paying attention, I don't see any ServerName examples with the trailing dot in the Apache manual.\n\nI just looked through RFC 2616. I didn't find anything about the dot (somebody else should check, in case I missed it). The examples all show without the dot though. For the SNI header, the relevant specification says that the hostname should be sent without the dot and it's very specific and clear about that. On that basis we can conclude that Firefox is broken (and it's hardly the only broken client out there); but it is consistent between the SNI hostname and the Host: header.\n\n\nNow I want to offer a different example: jira and jira. (It's a better example for these purposes than mail and mail., although you can ask the guy who owns mail.com about the impact of search lists if you don't see the importance.)\n\njira. (with the dot) isn't going to resolve anywhere.. unless I have a private vanity TLD of jira. But if I have example.com in my search list, the resolver library tacks it onto jira and attempts to resolve jira.example.com.\n\nWhat gets logged is jira without the dot; and apparently that's consistent with SNI because the page gets served.\n\nWhat do we expect the browser to send in this case? In spite of Firefox's (misguided IMO) attempts to manage its own DNS resolution I don't think we can expect clients to have visibility into what the resolver is doing, I think we just have to expect this; and consequently (and unfortunately) we can't expect the server to magically apply the same search list and come up with jira.example.com. But nonetheless jira and jira. should be the same vhost as far as the server is concerned.", "id": 183368, "time": "2015-06-08T18:18:18Z", "bug_id": 58007, "creation_time": "2015-06-08T18:18:18Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 58007, "attachment_id": null, "is_private": false, "id": 183371, "time": "2015-06-09T01:12:29Z", "creator": "consulting@m3047.net", "creation_time": "2015-06-09T01:12:29Z", "text": "See also: bug 57810"}, {"count": 14, "tags": [], "bug_id": 58007, "text": "Interesting: bug 56718", "id": 183373, "time": "2015-06-09T01:46:09Z", "creator": "consulting@m3047.net", "creation_time": "2015-06-09T01:46:09Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 58007, "attachment_id": null, "id": 183374, "time": "2015-06-09T02:07:57Z", "creator": "consulting@m3047.net", "creation_time": "2015-06-09T02:07:57Z", "is_private": false, "text": "It's not like compatibility with broken clients isn't a consideration: bug 56241"}, {"count": 16, "tags": [], "creator": "consulting@m3047.net", "text": "When I tried this just now, apache.org served up a certificate for openoffice.org.", "id": 193935, "time": "2016-09-22T16:42:34Z", "bug_id": 58007, "creation_time": "2016-09-22T16:42:34Z", "is_private": false, "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 58007, "attachment_id": null, "id": 193940, "time": "2016-09-22T20:47:29Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2016-09-22T20:47:29Z", "is_private": false, "text": "Is it still reproducible with latest 2.4 (2.4.23)?\n\nThe SNI string is not compared directly with the Host header anymore, and the decision to block the request (now with status 421) is solely based on the compatibility (TLS configuration/parameters wise) of the vhost selected from the handshake (based on the SNI) and the one finally selected from the request (based on the Host header).\n\nBoth selections compare with the ServerName/ServerAlias(es) declared in the configuration, so it's up to admin to use a FQDN, or not, or both (one as Servername, the other as ServerAlias)."}, {"count": 18, "tags": [], "creator": "ylavic.dev@gmail.com", "text": "*** Bug 57810 has been marked as a duplicate of this bug. ***", "id": 193942, "time": "2016-09-22T20:47:42Z", "bug_id": 58007, "creation_time": "2016-09-22T20:47:42Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 58007, "attachment_id": null, "text": "(In reply to Yann Ylavic from comment #17)\n> Is it still reproducible with latest 2.4 (2.4.23)?\n\nSorry, did not see this when the comment was posted. It's still reproducible today at apache.org which is running Apache/2.4.7 (Ubuntu)\n\nI'll see if I can find the time to set up a test with latest.", "id": 196877, "time": "2017-02-09T17:03:51Z", "creator": "consulting@m3047.net", "creation_time": "2017-02-09T17:03:51Z", "is_private": false}]