[{"count": 0, "tags": [], "bug_id": 41837, "attachment_id": null, "id": 100382, "time": "2007-03-14T07:24:03Z", "creator": "olivier.schmitt@agriculture.gouv.fr", "creation_time": "2007-03-14T07:24:03Z", "is_private": false, "text": "I try to record a test plan with the proxy server.\nMy web app uses JSF 1.1.\nThe view state is saved in HTML in hidden input control.\nA view state is a tree of JSF component state saved as a gzipped base64 string :\n\nExcerpt from ResponseStateManagerImpl of jsf-impl-1.1.jar\n...\n    ByteArrayOutputStream bos = new ByteArrayOutputStream();\n        if (compress) {\n            zos = new GZIPOutputStream(bos);\n            oos = new ObjectOutputStream(zos);\n        } else {\n            oos = new ObjectOutputStream(bos);\n        }\n        oos.writeObject(view.getStructure());\n        oos.writeObject(view.getState());\n        oos.close();\n        if (compress) {\n            zos.close();\n        }\n        bos.close();\n\n        hiddenField = \" <input type=\\\"hidden\\\" name=\\\"\"\n            + RIConstants.FACES_VIEW + \"\\\"\" + \" value=\\\"\" +\n            (new String(Base64.encode(bos.toByteArray()), \"ISO-8859-1\")) +\n            \"\\\" />\\n \";\n\n...\n\nsample :\n\nH4sIAAAAAAAAAO19CXgcxZV/ayRZh2UsyZLlS/YQ29gGPDrm0OGQIMuyLVY+sM3...\n\nWhen the current page is submitted by the browser, the proxy update the string\ninto :\n\nH4sIAAAAAAAAAO19CXgcxZV/ayRZh2UsyZLlS/YQ29gGPDrm0OGQIMuyLVY sM3...\n\nthe \"+\" char is missing at the end of the string !!!\n\nJSF can not deserialized the string into objects : it crashes.\n(UTFDataFormatException, ZipException, ...)\n\nI've remotly debugged jmeter to check when the value is altered.\n\nWhen Proxy class record an HTTP request every parameter of the request is \nalways decoded.\n\nThe HTTPArgument class is used to represent a request parameter.\n\n    public HTTPArgument(String name, String value, boolean alreadyEncoded) {\n        setAlwaysEncoded(true);\n        if (alreadyEncoded) {\n            try {\n                name = JOrphanUtils.decode(name, \"UTF-8\");\n                value = JOrphanUtils.decode(value, \"UTF-8\");\n            } catch (UnsupportedEncodingException e) {\n                // UTF-8 unsupported? You must be joking!\n                log.error(\"UTF-8 encoding not supported!\");\n                throw new Error(e.toString());\n            }\n        }\n        setName(name);\n        setValue(value);\n        setMetaData(\"=\");\n    }\n\nAt least every parameter value is decoded with  URLDecoder.decode().\nMy parameter value is corrupted because of this call :\n\nURLDecoder.decode(\"H4sIAAAAAAAAAO19CXgcxZVwz+iWZcuSJdv4HDDGds\", \"UTF-8\")\n\nreturns H4sIAAAAAAAAAO19CXgcxZVwz iWZcuSJdv4HDDGds"}, {"count": 1, "tags": [], "bug_id": 41837, "attachment_id": null, "id": 100409, "time": "2007-03-15T02:06:46Z", "creator": "alf@i100.no", "creation_time": "2007-03-15T02:06:46Z", "is_private": false, "text": "(In reply to comment #0)\n\nAre you using a POST or GET request to the web server ?\n\nFrom you description, it sounds like the problem is somewhere in the data flow\nfrom the web browser via the proxy to the Jmeter test plan. And not in the data\nflow from executing the test plan and sending request to the web server.\nDo you agree with that ?\n\nI've seen from the open bugs that there seems to be multiple problem with the\nproxy and handling of enconding, and I think your problem might be related.\n\n"}, {"count": 2, "tags": [], "bug_id": 41837, "attachment_id": null, "id": 100487, "time": "2007-03-16T09:00:47Z", "creator": "olivier.schmitt@agriculture.gouv.fr", "creation_time": "2007-03-16T09:00:47Z", "is_private": false, "text": "(In reply to comment #1)\n> (In reply to comment #0)\n> \n> Are you using a POST or GET request to the web server ?\n\nPOST.\n\n> From you description, it sounds like the problem is somewhere in the data flow\n> from the web browser via the proxy to the Jmeter test plan. And not in the data\n> flow from executing the test plan and sending request to the web server.\n> Do you agree with that ?\n\nyes.\n\n> \n> I've seen from the open bugs that there seems to be multiple problem with the\n> proxy and handling of enconding, and I think your problem might be related.\n> \n\nI've not found any but some special characters encoding problems (Japanese, ...).\n\nYou can get a more complete description of my problem here :\nhttp://mail-archives.apache.org/mod_mbox/jakarta-jmeter-user/200703.mbox/browser\n(thread is \"Parameter value corruption\" )\n"}, {"count": 3, "tags": [], "creator": "alf@i100.no", "attachment_id": null, "text": "I've looked into this now, but haven't gotten much further.\n\nIf you can point us to a public web server where we can test, that would help a\nlot. Perhaps you know of some public sites which has demos of applications using\nJSF, where you and we could recreate the problem.\n\nIf not, I suggest you try the following :\nUse the proxy to record the test plan. Then execute the test plan, and see which\nsample fails. Then I suggest you fix the value of that Request parameter by hand\nin the GUI, ie change the space to a +, and then re-execute the test to see if\nit works. That should work. If it still does not work, then I'm not sure if it\nis a Proxy decoding problem.\n\nAlternative, you could add a method in the\norg.apache.jmeter.protocol.http.util.TestHTTPArgument (the unit test for\nHTTPArgument), and write a unit test for the encoding and decoding of your\nproblematic values, and supply that code, and we could have a look at it.\nSomething like :\npublic void testDecoding() throws Exception {\n  // Test to try to recreate problem in bug 41837\n  // This is how the MultipartUrlConfig.addEncodedArgument method\n  // creates and HTTPArgument for a parameter value that is \n  // received as part of a POST request\n  HTTPArgument arg = new HTTPArgument(\"test_for_bug_41837\",\n\"H4sIAAAAAAAAAO19CXgcxZV/ayRZh2UsyZLlS/YQ29gGPDrm0OGQIMuyLVY+sM3\", true);\n  if (arg.getName().equals(arg.getEncodedName()) &&\narg.getValue().equals(arg.getEncodedValue())) {\n    arg.setAlwaysEncoded(false);\n}\n  // The value must be encoded before it is sent to web server\n  assertTrue(arg.isAlwaysEncoded());\n}\n\nI've run that test code, and it seems to behave correct to me.\n\nSpaces as encoded as + in an URL, and then when the Proxy gets the value, it\ndecodes the value, and put it into the HTTPSampler that is put into the test\nplan, because we prefer to show unencoded values in the GUI.\n\nWhat is the \"Encode?\" property value for the request parameter in the HTTP\nRequest node that is put into the test plan ?\nIf \"Encode?\" is true, then I don't think it is a problem that the \"+\" is shown\nas a \" \" in the GUI, because when the test is run again, it will be encoded into\n\"+\".\nPerhaps you could attach a test plan created by the proxy, which shows the problem ?\nOr you could attach a screengrab of the problematic HTTP Request in the test plan ?\n\nIt would be good if you could run with the latest nightly build of jmeter.\n\nWhat is the \"content-type\" and \"charset\" for the web pages you are serving ?\nIf you are using UTF-8, perhaps you could try to add \"UTF-8\" as the value of the\n\"Content encoding\" in the HTTP Request, you need the latest nightly build to\nhave that field. I think you should try that first. That functionality was added\nas part of bug 41705. So if your application is expecting UTF8 data, but you\nhave not set the \"UTF-8\" \"Content encoding\" on the HTTP Request, then you might\nget problems.\n\nI'll look more into this issue, if you can provide us with information so we get\na few steps closer to solving this.", "id": 100611, "time": "2007-03-19T11:35:22Z", "bug_id": 41837, "creation_time": "2007-03-19T11:35:22Z", "is_private": false}, {"count": 4, "tags": [], "text": "Created attachment 19750\nContains 2 JSPs for testing purpose\n\ntestviewid.jsp : contains 2 form with 2 different encodings.\nresult.jsp: display the value of the submitted viewid\nWhen recording with JMeter proxy, the value encoded in first form is not\ncorrupted while the same value encoded in second form is.", "attachment_id": 19750, "id": 100651, "creation_time": "2007-03-20T03:06:23Z", "time": "2007-03-20T03:06:23Z", "creator": "olivier.schmitt@agriculture.gouv.fr", "bug_id": 41837, "is_private": false}, {"attachment_id": 19751, "tags": [], "creator": "olivier.schmitt@agriculture.gouv.fr", "text": "Created attachment 19751\nTest plan recorded by the proxy with multipart encoding\n\nThe test plan shows the corrupted value '+'  replaced by ' ' for the\ntest_for_bug_41837 value.", "count": 5, "id": 100652, "time": "2007-03-20T03:08:34Z", "bug_id": 41837, "creation_time": "2007-03-20T03:08:34Z", "is_private": false}, {"count": 6, "tags": [], "creator": "olivier.schmitt@agriculture.gouv.fr", "attachment_id": null, "text": "Thanks for you long analysis.\nI've news !\nThe form encoding seems to be the cause of the corruption.\nYou will find two useful attachments for testing purpose.\nWhen using \"application/x-www-form-urlencoded\" and post method, everything is fine.\n\nWhen using \"multipart/form-data\" and post method, the value is corrupted.\n\nAs you can see with result.jsp, the proxy corrupts the value and then send the\nvalue to tomcat server. ", "id": 100653, "time": "2007-03-20T03:13:04Z", "bug_id": 41837, "creation_time": "2007-03-20T03:13:04Z", "is_private": false}, {"count": 7, "tags": [], "creator": "alf@i100.no", "attachment_id": null, "text": "Thanks for your info, I think we have solved this problem now.\n\nAnalysis :\nYour jsp pages was helpful in analyzing this. I've added a bit of functionality\nto  the results.jps page. I've added use of the commons-io.jar and\ncommons-fileupload.ja, so that I can see what is posted when doing a\n\"multipart/from-data\" post. I'll attach the updated war file.\n\nFirst of all, if you are testing pages which are using multipart/form-data, then\nyou should turn of the \"Capture HTTP Headers\" setting in the Proxy Server. \nSee bug 27780. Bug 27780 also explains that when running the test plan after you\nhave captured it, jmeter will issue a \"application/x-www-form-urlencoded\"\nrequest even though the proxy server received a multipart/form-data.\nBut if you are a bit lucky, that should does not cause problems for you.\n\nI think the bug is in the MultipartUrlConfig class, which is handling the\nparsing of a multipart/form-data post request for the proxy server.\nIf you are in a multipart/form-data post request, then the parameter values\nwhich are part of the multipart is not encoded by the browser.\nBut the MultipartUrlConfig does the following :\n\"\n} else if (parts[i].indexOf(\"name=\") > -1) {\n  int index = parts[i].indexOf(\"name=\\\"\") + 6;\n  String name = parts[i].substring(index, parts[i].indexOf(\"\\\"\", index));\n  index = parts[i].indexOf(\"\\n\", index) + 2;\n  String value = parts[i].substring(index).trim();\n  this.addEncodedArgument(name, value);\n}\n\"\nSo the MultipartUrlConfig assumes that parameter values which are part of a\nmultipart/form-data has been URL encoded. I think that is the wrong assumption.\nI think it should do a \"this.addArgument(name, value);\", to add a parameter\nvalue which has not been URL encoded by the browser.\nI'll attach a patch to fix this.\n\nRead more on http://www.w3.org/TR/html4/interact/forms.html#h-17.13.4\nAnd perhaps read section 6 og http://www.ietf.org/rfc/rfc2045.txt\nSo the multipart/form-data can be encoded by specifying the\n\"Content-Transfer-Encoding\" in the multipart. But let us say that for now, the\nProxy does not support that.\n\nIt has been useful to do this investigation. I was already planning to fix bugs\n27780, 33435, 41518 (which I think is the same as 27780), and 19128.\nI hope to have 27780 fixed within a couple of weeks.\n\nHowever, what I plan to do first, is to reorganize the \"HTTP Request\" GUI\nslightly, because I need to add an \"HTTP POST\" parameters section, so that the\nuser can choose if he wants to do a \"x-www-form-urlencoded\" or a \"multipart\"\npost if only parameters are present. There also needs to be room in the GUI to\nadd more files.\nI'm thinking about using tabs in the lower part of the GUI, one tab names\n\"Options\", one tab named \"Parameters\", one tab named \"File uploads\".\n\nThat was all for now.\nIt would be good if you could test the patch I'll add shortly, and see if things\nworks then. And I guess Sebb will also look at the patch, and apply it if he agrees.\n", "id": 100687, "time": "2007-03-20T11:38:34Z", "bug_id": 41837, "creation_time": "2007-03-20T11:38:34Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 41837, "text": "Created attachment 19758\nSuggested patch\n\nThis patch makes parameter values which are part of a multipart/form-data post\nrequest treated as not url encoded, in fact not encoded at all.\nWe assume the \"default\" \"Content-Transfer-Encoding\" has been used for the\nmultipart/form-data. Support for different \"Content-Transfer-Encoding\" might\ncome in the future.", "id": 100688, "time": "2007-03-20T11:44:15Z", "creator": "alf@i100.no", "creation_time": "2007-03-20T11:44:15Z", "is_private": false, "attachment_id": 19758}, {"count": 9, "tags": [], "text": "Created attachment 19759\nUpdated web app for testing multipart/form-data\n\nAdded a bit more code to the jsp, and included commons-io.jar and\ncommons-fileupload.jar", "attachment_id": 19759, "id": 100689, "creation_time": "2007-03-20T11:47:24Z", "time": "2007-03-20T11:47:24Z", "creator": "alf@i100.no", "bug_id": 41837, "is_private": false}, {"count": 10, "tags": [], "creator": "alf@i100.no", "attachment_id": null, "text": "My updated test app is available at :\nhttp://www.kanonbra.com/testjmeter/testviewid.jsp\n\nat least for a couple of weeks.\n\nI testet recording a test plan using the patched proxy server now. I also\nattached  a \"View Results Tree\" listener to the proxy server.\nI see that the browser/proxy has trouble sending the \"multipart/form-data\".\nI think this is because the \"http headers\" sent to the web server says\n\"Content-Type: multipart/form-data;\", while in fact the proxy is currently\nalways sending HTTP Post  \"Content-Type: application/x-www-form-urlencoded\"\nrequest. I'll look more into this now, because I guess you are not able to\nrecord much of a plan without having that fixed.\n\nBut the recorded test plan is possible to play back correctly.", "id": 100691, "time": "2007-03-20T12:13:06Z", "bug_id": 41837, "creation_time": "2007-03-20T12:13:06Z", "is_private": false}, {"attachment_id": 19760, "tags": [], "creator": "alf@i100.no", "text": "Created attachment 19760\nUpdated patch, which also updates content-type header\n\nThis updated patch also changes the \"Content-Type\" http header receives from\nweb browser to \"application/x-www-form-urlencoded\" in the case where it is a\nmultipart/form-data POST, and no file is being uploaded.\nWith this patch, I'm able to record a test plan, and the browser shows the\ncorrect values.\n\nI'm not sure if this is the nicest patch, but I think it should be sufficient\nfor you to record your plan, and test using jmeter, assuming that you web\napplication allows \"application/x-www-form-urlencoded\".\n\nSo this patch translates a multipart/form-data HTTP Post request into a HTTP\nPost \"application/x-www-form-urlencoded\" request, if no file is uploaded as\npart of the post request.", "count": 11, "id": 100693, "time": "2007-03-20T12:52:42Z", "bug_id": 41837, "creation_time": "2007-03-20T12:52:42Z", "is_private": false}, {"count": 12, "tags": [], "creator": "sebb@apache.org", "attachment_id": null, "text": "Thanks for the patch, which I have applied to SVN.\n\nIt will be in the nightly builds after r521050", "id": 100767, "time": "2007-03-21T16:53:09Z", "bug_id": 41837, "creation_time": "2007-03-21T16:53:09Z", "is_private": false}, {"count": 13, "tags": [], "bug_id": 41837, "text": "I think this bug should be closed as \"Fixed\".\nThe HTTP Proxy server no longer changes values that contains \"+\" or other values\nthat change when URL encoded, when it is a multipart/form-data request.\n\nThe HTTP Proxy server has also been enhanced to support multipart/form-data even\nif files are not being uploaded, so I think all in this bug is fixed.\n", "id": 101867, "time": "2007-04-18T05:26:21Z", "creator": "alf@i100.no", "creation_time": "2007-04-18T05:26:21Z", "is_private": false, "attachment_id": null}]