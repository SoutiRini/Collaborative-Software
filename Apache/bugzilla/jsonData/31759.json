[{"count": 0, "tags": [], "bug_id": 31759, "text": "Hi\n\nI have an apache 2.0.49 in reverse proxy SSL mode and a iis behind .\nLot of errors ( 70007 ) occured when POST request .\nit's a upload script ( ASP ) running on the iis .\n\nsometimes iis generates a 500 error code( timeout of the asp script execution ) \nwhich generates a 500 error ( apache logs )\n\"POST /wp_doc_upload.asp?PID=987665 HTTP/1.1\" 500 490 https://aa.com/test\n.asp\" \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; Hotbar 4.5.1.0)\"\n\nor 70007 error\n\"POST /wp_doc_upload.asp?PID=987665 HTTP/1.1\" 70007 23 \"https://aa.com/tes\nt.asp\" \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; Hotbar 4.5.1.0)\"\n \nAfter reading bugs 22030, 19315, 22030, i can't find similar behaviour between \nthese bugs and mine .", "id": 65281, "time": "2004-10-18T15:34:30Z", "creator": "stephane.quero@prod.steria.fr", "creation_time": "2004-10-18T15:34:30Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 31759, "text": "Add-on\nssl request from the client to  the apache, and no ssl between apache and IIS ", "id": 65282, "time": "2004-10-18T16:54:28Z", "creator": "stephane.quero@prod.steria.fr", "creation_time": "2004-10-18T16:54:28Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 31759, "text": "Firstly, please try upgrading to 2.0.52, there have been quite a few mod_ssl\nchanges since 2.0.49.\n\nSecondly, please include the complete error messages logged to error_log.", "id": 65287, "time": "2004-10-18T19:26:38Z", "creator": "jorton@redhat.com", "creation_time": "2004-10-18T19:26:38Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "stephane.quero@prod.steria.fr", "attachment_id": null, "text": "[Tue Oct 19 14:52:30 2004] [info] (70007)The timeout specified has expired: SSL \ninput filter read failed.\n\n\n", "id": 65306, "time": "2004-10-19T13:00:31Z", "bug_id": 31759, "creation_time": "2004-10-19T13:00:31Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 65309, "time": "2004-10-19T14:05:03Z", "creator": "stephane.quero@prod.steria.fr", "creation_time": "2004-10-19T14:05:03Z", "is_private": false, "text": "without mod_ssl, i have 70007 return code in the access_log, but nothing in the \nerror_log like in the previous post, except a lot of :\n[Tue Oct 19 15:55:14 2004] [info] (32)Broken pipe: core_output_filter: writing \ndata to the network\n\n\n\n"}, {"count": 5, "tags": [], "creator": "stephane.quero@prod.steria.fr", "attachment_id": null, "text": "10.50.8.69 - - [19/Oct/2004:15:31:35 +0200] \"POST /wp_doc_upload.asp?PID=987665 \nHTTP/1.1\" 70007 538", "id": 65310, "time": "2004-10-19T14:06:09Z", "bug_id": 31759, "creation_time": "2004-10-19T14:06:09Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 31759, "text": "I have  same errors with 2.0.50 2.0.52 without mod_ssl .\n\n\"POST /wp_doc_upload.asp?PID=987665 HTTP/1.1\" 70007 538\n\nwhat is the difference between the 70007 return code in the access_log and the \n(70007) return code in the error_log ?\n\n\n\n  ", "id": 65324, "time": "2004-10-19T16:15:29Z", "creator": "stephane.quero@prod.steria.fr", "creation_time": "2004-10-19T16:15:29Z", "is_private": false, "attachment_id": null}, {"count": 7, "attachment_id": null, "creator": "jorton@redhat.com", "text": "There is a bug in mod_ssl somewhere which means that the APR error code 70007 is\nbeing returned in the wrong place, which is why it gets logged in access_log.\n\nBut it's still not clear to me: what actual problems are you seeing other than\nthe oddity in the logging?\n", "id": 66320, "time": "2004-11-02T22:36:22Z", "bug_id": 31759, "creation_time": "2004-11-02T22:36:22Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 68197, "time": "2004-12-09T18:05:30Z", "creator": "stephane.quero@prod.steria.fr", "creation_time": "2004-12-09T18:05:30Z", "is_private": false, "text": "(In reply to comment #7)\n> There is a bug in mod_ssl somewhere which means that the APR error code 70007 \nis\n> being returned in the wrong place, which is why it gets logged in access_log.\n> But it's still not clear to me: what actual problems are you seeing other than\n> the oddity in the logging?\n\n\nIn the error_log , lot of errors like [info] (70007)The timeout specified has \nexpired: SSL input filter read failed.\n\nIn the access_log : some 70007 : POST /wp_doc_upload.asp?PID=987665 HTTP/1.1\" \n70007 23 \"https://aa.com/test.asp\" \"Mozilla/4.0 (compatible; MSIE 6.0; Windows \nNT 5.0; Hotbar 4.5.1.0)\"\n\neach time a 70007 or 500 error occured, ie is out ( blank page ) .\n\nOn version 1.3.31, there are only 500 error code ( asp script time out ), but \nno 70007 error code .\n\n\n"}, {"count": 9, "tags": [], "creator": "markus-apache@anthill.de", "attachment_id": null, "text": "(In reply to comment #8)\n> (In reply to comment #7)\n> > There is a bug in mod_ssl somewhere which means that the APR error code 70007 \n> is\n> > being returned in the wrong place, which is why it gets logged in access_log.\n> > But it's still not clear to me: what actual problems are you seeing other than\n> > the oddity in the logging?\n> \n> \n> In the error_log , lot of errors like [info] (70007)The timeout specified has \n> expired: SSL input filter read failed.\n> \n> In the access_log : some 70007 : POST /wp_doc_upload.asp?PID=987665 HTTP/1.1\" \n> 70007 23 \"https://aa.com/test.asp\" \"Mozilla/4.0 (compatible; MSIE 6.0; Windows \n> NT 5.0; Hotbar 4.5.1.0)\"\n> \n> each time a 70007 or 500 error occured, ie is out ( blank page ) .\n> \n> On version 1.3.31, there are only 500 error code ( asp script time out ), but \n> no 70007 error code .\n\nI have log entries with http error code 70007, too, but I don't have any entries\nin the error_log. mod_ssl isn't used. here the errors come from POST requests\n\napache 2.0.54 / php 4.4.0\nLogLevel warn", "id": 77906, "time": "2005-08-01T14:03:17Z", "bug_id": 31759, "creation_time": "2005-08-01T14:03:17Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 31759, "text": "This is a bug in the default_handler, not in mod_ssl.\n\nThe default_handler itself returns the ap_pass_brigade return value; the handler\nhook is supposed to return an OK/DECLINED/HTTP_* error code, so this is broken.", "id": 80471, "time": "2005-09-26T10:52:29Z", "creator": "jorton@redhat.com", "creation_time": "2005-09-26T10:52:29Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 80514, "time": "2005-09-27T19:52:57Z", "creator": "jorton@redhat.com", "creation_time": "2005-09-27T19:52:57Z", "is_private": false, "text": "*** Bug 36828 has been marked as a duplicate of this bug. ***"}, {"count": 12, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 87453, "time": "2006-03-30T22:55:08Z", "creator": "jrhett@netconsonance.com", "creation_time": "2006-03-30T22:55:08Z", "is_private": false, "text": "Since Joe claims that this is where the logging bug should be followed up, I'm\ncontinuing conversation here.\n\nIf this is the same problem as reported, this problem affects EVERY request, not\njust reverse proxy.  (if not, then Joe referred me incorrectly)\n\nThis is currently affecting roughly 2k log entries per night on my personal colo\nmachine.  It's tens of thousands more on real production websites.  It's a fatal\nflaw in one of Apache's most basic operations -- log the request.\n\nWhat do we need to do to get developers to stop playing with grand new features\nthat aren't crucial to basic operation, and fix the core?"}, {"count": 13, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 87469, "time": "2006-03-31T12:20:35Z", "creator": "trawick@apache.org", "creation_time": "2006-03-31T12:20:35Z", "is_private": false, "text": "Here's a patch to default handler to try:\n\nIndex: server/core.c\n===================================================================\n--- server/core.c       (revision 386843)\n+++ server/core.c       (working copy)\n@@ -3645,7 +3645,17 @@\n         e = apr_bucket_eos_create(c->bucket_alloc);\n         APR_BRIGADE_INSERT_TAIL(bb, e);\n\n-        return ap_pass_brigade(r->output_filters, bb);\n+        status = ap_pass_brigade(r->output_filters, bb);\n+        if (status == APR_SUCCESS\n+            || c->aborted) { /* broken I/O isn't an HTTP issue, so no\n+                              * error status applies\n+                              */\n+            return OK;\n+        }\n+        else {\n+            /* no way to know what type of error occurred */\n+            return HTTP_INTERNAL_SERVER_ERROR;\n+        }\n     }\n     else {              /* unusual method (not GET or POST) */\n         if (r->method_number == M_INVALID) {\n\n\n>What do we need to do to get developers to stop playing \n>with grand new features that aren't crucial to basic \n>operation, and fix the core?\n\nwhat can you do to help?\n\n    * please refrain from complaining or otherwise expressing frustration via\nthe PR database... that sends a signal to those who volunteer their time that\ntheir effort is inadequate... while that may be true for your problem, overall\nthere are many problems diagnosed and solved via the PR database, and there is\nno benefit from airing your grievance...\n    * continue to submit problem reports... every one is looked at even if there\ndoesn't appear to be any activity on it...\n    * help us out as much as possible with your report... this includes\nproviding relevant documentation when you create the report as well as trying to\nrespond quickly to questions we ask or suggestions we make... if you aren't\nwilling to help us work on your issue, why are we wasting our time in the first\nplace?\n    * use the source... you have access to the source code... you (or someone\nyou know or can hire with the proper skills) have the opportunity to find the\ncode that is causing you a problem and fix it, even if the fix is particular to\nyour environment and not suitable for general distribution\n    * if your company depends on Apache httpd, consider sponsoring a skilled\ndeveloper to get involved in the maintenance and ongoing development of Apache httpd\n    * consider paying for support from one of the companies that sells support\nfor Apache httpd (or servers based on Apache httpd) and contributes to the open\nsource development effort of Apache httpd\n\n"}, {"count": 14, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 87470, "time": "2006-03-31T13:03:49Z", "creator": "jorton@redhat.com", "creation_time": "2006-03-31T13:03:49Z", "is_private": false, "text": "Thanks Jeff.\n\nI couldn't really convince myself what the correct behaviour was when I looked\nat this before.  If there is a 404 response which suffers from an SSL-layer\nerror, why is it better to log a 500 than a 404; i.e. is it better to just log\nr->status in the non-success case?  The real response code might be a useful\ndiagnostic."}, {"count": 15, "tags": [], "bug_id": 31759, "text": "Also thanks from me Jeff. I guess it is a good idea to log the original return\ncode in the error log in the INTERNAL_SERVER_ERROR case. I think it should be\nsufficient to log this for DEBUG loglevel only. Thoughts?", "id": 87472, "time": "2006-03-31T13:37:12Z", "creator": "rpluem@apache.org", "creation_time": "2006-03-31T13:37:12Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "text": "(based on Joe's comments)\n>If there is a 404 response which suffers from an SSL-layer\n>error, why is it better to log a 500 than a 404\n\nIt isn't, but that doesn't go through this path.  (default handler will return\nHTTP_NOT_FOUND instead of calling ap_pass_brigade() with a file bucket)\n\nbut a filter could have modified r->status to indicate an error (e.g., invalid\nrange)\n\n>i.e. is it better to just log r->status in the non-success case?\n\nAgreed in general.  I'm still nervous about r->status still OK when we get here.\n So that last issue leaves us with this so far:\n\nIndex: server/core.c\n===================================================================\n--- server/core.c       (revision 386843)\n+++ server/core.c       (working copy)\n@@ -3645,7 +3645,16 @@\n         e = apr_bucket_eos_create(c->bucket_alloc);\n         APR_BRIGADE_INSERT_TAIL(bb, e);\n\n-        return ap_pass_brigade(r->output_filters, bb);\n+        status = ap_pass_brigade(r->output_filters, bb);\n+        if (status == APR_SUCCESS\n+            || r->status != HTTP_OK\n+            || c->aborted) {\n+            return r->status;\n+        }\n+        else {\n+            /* no way to know what type of error occurred */\n+            return HTTP_INTERNAL_SERVER_ERROR;\n+        }\n     }\n     else {              /* unusual method (not GET or POST) */\n         if (r->method_number == M_INVALID) {\n\nIf any kind of client communication error occurred, c->aborted should be set, right?\nIf any kind of HTTP error occurred, r->status should have been modified, right?\n\nPerhaps we should log a message here in the other situations but still return\nOK, to make sure that the processing problem doesn't always go unnoticed?\n\n(example of interest to me at the moment: a filter gets APR_EOF from bucket-read\nbecause a file has been truncated during request processing)\n", "id": 87474, "time": "2006-03-31T14:43:25Z", "bug_id": 31759, "creation_time": "2006-03-31T14:43:25Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 31759, "text": "Ruediger's comments:\n>I guess it is a good idea to log the original return\n>code in the error log in the INTERNAL_SERVER_ERROR case. \n\nAgreed.  Perhaps it is okay not to even return 500 as long as we log something.\n\n>I think it should be sufficient to log this for DEBUG\n>loglevel only. Thoughts?\n\nI think INFO is the appropriate level, just like the expected\n\"core_output_filter: writing data to network\" messages.  Some of these odd cases\nare probably much less expected than a user hitting the stop button.", "id": 87475, "time": "2006-03-31T14:50:46Z", "creator": "trawick@apache.org", "creation_time": "2006-03-31T14:50:46Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 87476, "time": "2006-03-31T15:15:29Z", "creator": "jorton@redhat.com", "creation_time": "2006-03-31T15:15:29Z", "is_private": false, "text": "(In reply to comment #16)\n> (based on Joe's comments)\n> >If there is a 404 response which suffers from an SSL-layer\n> >error, why is it better to log a 500 than a 404\n> \n> It isn't, but that doesn't go through this path.  (default handler will return\n> HTTP_NOT_FOUND instead of calling ap_pass_brigade() with a file bucket)\n\ngood point sir\n\n> If any kind of client communication error occurred, c->aborted should be set,\nright?\n> If any kind of HTTP error occurred, r->status should have been modified, right?\n\nBoth sound right to me.\n\n> Perhaps we should log a message here in the other situations but still return\n> OK, to make sure that the processing problem doesn't always go unnoticed?\n> \n> (example of interest to me at the moment: a filter gets APR_EOF from bucket-read\n> because a file has been truncated during request processing)\n\nI'm not sure about this.  It would be better to avoid having such errors logged\nN times by all N filters in the output chain, that kind of thing creates confusion.\n"}, {"count": 19, "tags": [], "bug_id": 31759, "text": "moving discussion to dev@httpd for the time being...\n", "id": 87486, "time": "2006-03-31T17:54:24Z", "creator": "trawick@apache.org", "creation_time": "2006-03-31T17:54:24Z", "is_private": false, "attachment_id": null}, {"count": 20, "tags": [], "creator": "jrhett@netconsonance.com", "attachment_id": null, "text": "The latest patch fails.  Every third or fourth request of plain ol' html files\nin normal HTTP mode generates 500 errors and garbage in the HTTP header.  I\nnever even got to testing SSL or CGI responses.  Plain, simple HTTP fails.\n\nAny chance to get a tested and working patch?", "id": 87503, "time": "2006-04-01T20:15:19Z", "bug_id": 31759, "creation_time": "2006-04-01T20:15:19Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 87504, "time": "2006-04-01T20:29:04Z", "creator": "jrhett@netconsonance.com", "creation_time": "2006-04-01T20:29:04Z", "is_private": false, "text": "FYI I see no discussion in the dev mailing list of this topic."}, {"count": 22, "tags": [], "bug_id": 31759, "text": "(In reply to comment #21)\n> FYI I see no discussion in the dev mailing list of this topic.\n\nhttp://mail-archives.apache.org/mod_mbox/httpd-dev/200603.mbox/%3ccc67648e0603310853m2e05c13cn9f883821a88aa3e1@mail.gmail.com%3e", "id": 87507, "time": "2006-04-01T22:53:07Z", "creator": "rpluem@apache.org", "creation_time": "2006-04-01T22:53:07Z", "is_private": false, "attachment_id": null}, {"count": 23, "tags": [], "bug_id": 31759, "text": "(In reply to comment #20)\n> The latest patch fails.  Every third or fourth request of plain ol' html files\n> in normal HTTP mode generates 500 errors and garbage in the HTTP header.  I\n> never even got to testing SSL or CGI responses.  Plain, simple HTTP fails.\n> \n> Any chance to get a tested and working patch?\n\nPlease use the following patch instead and set the LogLevel to debug:\n\nIndex: server/core.c\n===================================================================\n--- server/core.c       (Revision 390677)\n+++ server/core.c       (Arbeitskopie)\n@@ -3646,6 +3646,20 @@\n         APR_BRIGADE_INSERT_TAIL(bb, e);\n\n         return ap_pass_brigade(r->output_filters, bb);\n+        status = ap_pass_brigade(r->output_filters, bb);\n+        if (status == APR_SUCCESS\n+            || r->status != HTTP_OK\n+            || c->aborted) {\n+            return r->status;\n+        }\n+        else {\n+            /* no way to know what type of error occurred */\n+            ap_log_rerror(APLOG_MARK, APLOG_DEBUG, status, r,\n+                          \"default_handler: ap_pass_brigade returned %i\",\n+                          status);\n+            return HTTP_INTERNAL_SERVER_ERROR;\n+        }\n+\n     }\n     else {              /* unusual method (not GET or POST) */\n         if (r->method_number == M_INVALID) {\n\nFurthermore please post the garbled HTTP header.\n\n\n\n", "id": 87508, "time": "2006-04-01T23:00:51Z", "creator": "rpluem@apache.org", "creation_time": "2006-04-01T23:00:51Z", "is_private": false, "attachment_id": null}, {"count": 24, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "text": "About the patch:\n\nIt needs to return OK instead of r->status.  Otherwise, an error is triggered. \nOK will allow r->status to be respected when appropriate.\n\n        if (status == APR_SUCCESS\n            || r->status != HTTP_OK\n            || c->aborted) {\n            return OK; /* r->status will be respected */\n\nWhen returning r->status, you can get a complete 200 response then a 500 error\ndocument ;)\n", "id": 87509, "time": "2006-04-01T23:25:26Z", "bug_id": 31759, "creation_time": "2006-04-01T23:25:26Z", "is_private": false}, {"count": 25, "tags": [], "creator": "jrhett@netconsonance.com", "attachment_id": null, "text": "Confirmed -- that's exactly what we were seeing.  200 return code, with the text\nof the 500 error message at the top or bottom of pages, or in random frame windows.", "id": 87510, "time": "2006-04-01T23:58:22Z", "bug_id": 31759, "creation_time": "2006-04-01T23:58:22Z", "is_private": false}, {"count": 26, "tags": [], "bug_id": 31759, "text": "Here's the patch committed to trunk (as before with the change to return OK\ninstead of r->status):\n\nhttp://svn.apache.org/viewcvs.cgi?rev=390922&view=rev\n", "id": 87518, "time": "2006-04-03T00:45:08Z", "creator": "trawick@apache.org", "creation_time": "2006-04-03T00:45:08Z", "is_private": false, "attachment_id": null}, {"count": 27, "attachment_id": null, "creator": "rpluem@apache.org", "text": "(In reply to comment #26)\n> \n> http://svn.apache.org/viewcvs.cgi?rev=390922&view=rev\n> \n\nPlease also apply http://svn.apache.org/viewcvs?rev=391025&view=rev as the\nprevious one has a small bug that is fixed by r391025.", "id": 87530, "time": "2006-04-03T13:37:07Z", "bug_id": 31759, "creation_time": "2006-04-03T13:37:07Z", "tags": [], "is_private": false}, {"count": 28, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 87710, "time": "2006-04-09T11:36:11Z", "creator": "rpluem@apache.org", "creation_time": "2006-04-09T11:36:11Z", "is_private": false, "text": "Proposed for backport to 2.2.x as r392700\n(http://svn.apache.org/viewcvs?rev=392700&view=rev) and to 2.0.x as r392701\n(http://svn.apache.org/viewcvs?rev=392701&view=rev)"}, {"count": 29, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 88384, "time": "2006-04-22T15:33:58Z", "creator": "rpluem@apache.org", "creation_time": "2006-04-22T15:33:58Z", "is_private": false, "text": "Backported to 2.2.x as r393005 (http://svn.apache.org/viewcvs?rev=393005&view=rev)."}, {"count": 30, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 88481, "time": "2006-04-25T20:24:04Z", "creator": "rpluem@apache.org", "creation_time": "2006-04-25T20:24:04Z", "is_private": false, "text": "*** Bug 39405 has been marked as a duplicate of this bug. ***"}, {"count": 31, "tags": [], "creator": "ceri@submonkey.net", "attachment_id": null, "text": "Will this get backported to 2.0.x?", "id": 93382, "time": "2006-09-12T10:45:38Z", "bug_id": 31759, "creation_time": "2006-09-12T10:45:38Z", "is_private": false}, {"count": 32, "tags": [], "bug_id": 31759, "text": "This has been backported. It is part of 2.0.56 and later.", "id": 93383, "time": "2006-09-12T11:27:04Z", "creator": "rpluem@apache.org", "creation_time": "2006-09-12T11:27:04Z", "is_private": false, "attachment_id": null}, {"count": 33, "attachment_id": null, "creator": "jrhett@netconsonance.com", "text": "I thought that this was fixed in 2.2.2 but testing with a PUT handler today\ndemonstrates that it's not fixed everywhere -- result code 70007 has been logged\nhere.\n\n64.13.135.30 - - [12/Sep/2006:11:28:40 -0700] \"PUT\n/polycom/extensions/0004f204217c-app.log HTTP/1.1\" 70007 - \"-\"\n\"Polycom-FileManager/1.0 (libcurl/7.12.1 OpenSSL/0.9.7d)\n(SIP-1.6.5:0043;SPIPPolycomSoundPointIP-SPIP_501)\" arran.svcolo.com\n\n64.13.135.30 - - [12/Sep/2006:11:30:43 -0700] \"PUT\n/polycom/extensions/0004f204217c-app.log HTTP/1.1\" 70007 - \"-\"\n\"Polycom-FileManager/1.0 (libcurl/7.12.1 OpenSSL/0.9.7d)\n(SIP-1.6.5:0043;SPIPPolycomSoundPointIP-SPIP_501)\" arran.svcolo.com\n", "id": 93458, "time": "2006-09-12T20:17:04Z", "bug_id": 31759, "creation_time": "2006-09-12T20:17:04Z", "tags": [], "is_private": false}, {"count": 34, "tags": [], "bug_id": 31759, "text": "It is fixed in the default handler. It is up to each handler to return the\ncorrect value. Simply returning the return value from ap_pass_brigade is wrong\nand leads to this errors. Please fix your PUT handler.", "id": 93462, "time": "2006-09-12T21:19:05Z", "creator": "rpluem@apache.org", "creation_time": "2006-09-12T21:19:05Z", "is_private": false, "attachment_id": null}, {"count": 35, "tags": [], "bug_id": 31759, "text": "The PUT handler is a small 10 line script.  It absolutely doesn't return a code\n70007 or anything other than 0 no matter how it finishes.\n\nThis is not resolved nor fixed.", "id": 93464, "time": "2006-09-12T21:27:17Z", "creator": "jrhett@netconsonance.com", "creation_time": "2006-09-12T21:27:17Z", "is_private": false, "attachment_id": null}, {"count": 36, "tags": [], "text": "(In reply to comment #35)\n> The PUT handler is a small 10 line script.  It absolutely doesn't return a code\n> 70007 or anything other than 0 no matter how it finishes.\n\nYour script isn't the issue.  It's the apache or third-party handler it's running under that wants fixing.\n\nIf it's apache's mod_cgi or mod_cgid, it's an apache bug.  Otherwise you need to look elsewhere.", "attachment_id": null, "id": 93465, "creator": "nick@webthing.com", "time": "2006-09-12T21:34:39Z", "bug_id": 31759, "creation_time": "2006-09-12T21:34:39Z", "is_private": false}, {"count": 37, "tags": [], "text": "I'm sorry, but I'm confused.  You are saying this isn't an Apache bug... but it\nmight be an Apache bug, report it to them?  Huh?\n\n(yes I'm being a little dense on purpose, but it is honestly confusing)\n\nThis is a bone stock apache configuration.  No external modules.\n\nThis is an Apache bug one way or the other, and reported in the apache\nbugzilla... how is it that you are claiming \"not your bug?\"", "attachment_id": null, "id": 93478, "creator": "jrhett@netconsonance.com", "time": "2006-09-12T22:51:17Z", "bug_id": 31759, "creation_time": "2006-09-12T22:51:17Z", "is_private": false}, {"count": 38, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 93480, "time": "2006-09-12T23:03:24Z", "creator": "nick@webthing.com", "creation_time": "2006-09-12T23:03:24Z", "is_private": false, "text": "(In reply to comment #37)\n> I'm sorry, but I'm confused.  You are saying this isn't an Apache bug... but it\n> might be an Apache bug, report it to them?  Huh?\n\nThe default handler (which *this* bug report references) doesn't handle PUT.  So what you're describing is \neither a different bug or a notabug.  It absolutely cannot be *this* bug, though it could be the same thing \nin another handler.\n\n> This is a bone stock apache configuration.  No external modules.\n\nYou need to tell us what your script is running under.  Is it mod_cgi or mod_cgid?"}, {"count": 39, "tags": [], "creator": "jrhett@netconsonance.com", "attachment_id": null, "text": "Not cgid.  I assume it's part of mod_cgi.  It's really just\n\nScript  PUT   /path/to/put-handler.pl\n\nTo what extent is this changed if *.pl is handled by \n\nAddHandler cgiwrapper *.cgi *.pl\nAction cgiwrapper /path/to/wrapper\n\nAnd again, it still seems like the it's using the return code (which is very\nOS-dependent) instead of a result code returned by the application.", "id": 93483, "time": "2006-09-12T23:22:43Z", "bug_id": 31759, "creation_time": "2006-09-12T23:22:43Z", "is_private": false}, {"count": 40, "tags": [], "text": "(In reply to comment #32)\n> This has been backported. It is part of 2.0.56 and later.\n\nThanks for the reply.  The reason I asked is that I am seeing the following with\n2.0.59:\n\n68.174.9.93 - - [13/Sep/2006:16:57:24 +0100] \"POST /articles/comment/66\nHTTP/1.1\" 70007 607\n\"http://typo.submonkey.net/articles/2006/03/09/setting-interface-link-settings-in-suns-openboot\"\n\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; MRA 4.3 (build 01218))\"\n\nThe target URL of the post is proxied by mod_proxy to a lighttpd backend (which\nis probably not working properly).", "attachment_id": null, "id": 93535, "creator": "ceri@submonkey.net", "time": "2006-09-13T18:49:10Z", "bug_id": 31759, "creation_time": "2006-09-13T18:49:10Z", "is_private": false}, {"count": 41, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 93537, "time": "2006-09-13T19:19:15Z", "creator": "nick@webthing.com", "creation_time": "2006-09-13T19:19:15Z", "is_private": false, "text": "This bug has been fixed.\n\nBut after yesterday's exchange with Jo Rhett, I looked at mod_cgi and \nmod_cgid, and found what appears to be a similar problem in both of them, when \nthey return an error status from the *input* filters if they fail to read a \nrequest body (as in a POST/PUT request).\n\nI've fixed that similar bug - which I think you're both describing - in\nhttp://svn.apache.org/viewvc?view=rev&revision=442758"}, {"count": 42, "tags": [], "bug_id": 31759, "text": "You jumped right to the chase -- I was busy building a test case to prove that\neffect to you.  Looks good!\n\nObviously update this when it hits a release...", "id": 93540, "time": "2006-09-13T19:27:23Z", "creator": "jrhett@netconsonance.com", "creation_time": "2006-09-13T19:27:23Z", "is_private": false, "attachment_id": null}, {"count": 43, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 93615, "time": "2006-09-15T07:52:35Z", "creator": "ceri@submonkey.net", "creation_time": "2006-09-15T07:52:35Z", "is_private": false, "text": "(In reply to comment #41)\n\n> I've fixed that similar bug - which I think you're both describing - in\n> http://svn.apache.org/viewvc?view=rev&revision=442758\n\nThanks.  I've applied those patches but still see the issue as per the access\nlog extract above.\n"}, {"count": 44, "tags": [], "bug_id": 31759, "attachment_id": null, "id": 93619, "time": "2006-09-15T09:23:04Z", "creator": "nick@webthing.com", "creation_time": "2006-09-15T09:23:04Z", "is_private": false, "text": "(In reply to comment #43)\n> (In reply to comment #41)\n> \n> > I've fixed that similar bug - which I think you're both describing - in\n> > http://svn.apache.org/viewvc?view=rev&revision=442758\n> \n> Thanks.  I've applied those patches but still see the issue as per the \naccess\n> log extract above.\n\nAh.  I read your mention of POST as meaning you were using CGI.  But looking \nup at comment #40, it was the proxy, so patching mod_cgi has no effect on you.\n\nI've just looked at mod_proxy in 2.0, and there is indeed the same bug there \nyet again (though it's deeper - in the mod_proxy_http provider).  It's also \nrather more complex, but always (AFAICT) comes from ap_proxy_http_request, \nwhich in fact returns apr_status_t values.  So you can fix it by applying the \nsame fix at line 1899 of proxy_http.c."}, {"count": 45, "tags": [], "creator": "ceri@submonkey.net", "attachment_id": null, "text": "(In reply to comment #44)\n> (In reply to comment #43)\n> > (In reply to comment #41)\n> > \n> > > I've fixed that similar bug - which I think you're both describing - in\n> > > http://svn.apache.org/viewvc?view=rev&revision=442758\n> > \n> > Thanks.  I've applied those patches but still see the issue as per the \n> access\n> > log extract above.\n> \n> Ah.  I read your mention of POST as meaning you were using CGI.  But looking \n> up at comment #40, it was the proxy, so patching mod_cgi has no effect on you.\n\nI did wonder :)\n> \n> I've just looked at mod_proxy in 2.0, and there is indeed the same bug there \n> yet again (though it's deeper - in the mod_proxy_http provider).  It's also \n> rather more complex, but always (AFAICT) comes from ap_proxy_http_request, \n> which in fact returns apr_status_t values.  So you can fix it by applying the \n> same fix at line 1899 of proxy_http.c.\n\nOK, that seems to have got it, thanks.", "id": 93689, "time": "2006-09-17T14:22:41Z", "bug_id": 31759, "creation_time": "2006-09-17T14:22:41Z", "is_private": false}, {"count": 46, "attachment_id": null, "creator": "nick@webthing.com", "text": "FWIW, I've implemented a higher-level fix, so that if this bug turns up in yet \nmore handlers, apache will handle it internally rather than send a bogus \nresponse to the client.  See\nhttp://svn.apache.org/viewvc?view=rev&revision=448711\nhttp://svn.apache.org/viewvc?view=rev&revision=450808", "id": 94222, "time": "2006-09-28T11:18:57Z", "bug_id": 31759, "creation_time": "2006-09-28T11:18:57Z", "tags": [], "is_private": false}, {"count": 47, "tags": [], "creator": "ceri@submonkey.net", "attachment_id": null, "text": "Thanks Nick, that looks like the most sensible fix.", "id": 94224, "time": "2006-09-28T11:57:18Z", "bug_id": 31759, "creation_time": "2006-09-28T11:57:18Z", "is_private": false}]