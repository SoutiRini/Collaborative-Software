[{"count": 0, "tags": [], "creator": "ducrot@poupinou.org", "attachment_id": null, "is_private": false, "id": 68489, "time": "2004-12-14T18:30:47Z", "bug_id": 32699, "creation_time": "2004-12-14T18:30:47Z", "text": "With apache 2.0.52 and mod_ssl, when trying to make a cgi which\nwill constantly output something, f.e.\n\n#!/usr/bin/perl\n\n$!=1;\n\nprint\"HTTPS/1.0 200 OK\\n\";\nprint\"Content-type: text/plain;\\n\\n\";\n\nmy $i = 0;\nwhile (1) {\nprint \"something $i\\n\";\n        $i++;\n        sleep(1);\n}\n\nthen the script is still running even though the client is\ndisconnected.\n\nThis happens only if SSL is in use.  Also, I checked that the\nsame kind of behaviour happens if a plain file is requested (something\nlike lynx https://sever/a_big_file will result for server to still try to\nsend the file even though lynx is killed).\n\nI think the problem is in\nhttpd-2.0.52/modules/ssl/ssl_engine_io.c::bio_filter_out_write()\n\n220         if (bio_filter_out_flush(bio) < 0) {\n221             return -1;\n222         }\n\nso that actually httpd will try to flush ad eternam the same buffer.\n\nI guess that in fact bio_filter_out_flush() should verify if the\nconnection to the client have been aborted."}, {"count": 1, "text": "Created attachment 13752\nfix ssl flush output\n\nmake sure bio_filter_out_flush() return an error if the connection have been\naborted.", "creator": "ducrot@poupinou.org", "attachment_id": 13752, "id": 68490, "time": "2004-12-14T18:33:46Z", "bug_id": 32699, "creation_time": "2004-12-14T18:33:46Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 32699, "attachment_id": null, "id": 68522, "time": "2004-12-14T22:02:17Z", "creator": "jorton@redhat.com", "creation_time": "2004-12-14T22:02:17Z", "is_private": false, "text": "Good work, thanks for the patch.  It's always annoying that core_output_filter\nhides these EPIPE errors :("}, {"count": 3, "tags": [], "bug_id": 32699, "attachment_id": null, "is_private": false, "id": 69683, "time": "2005-01-14T15:18:38Z", "creator": "jorton@redhat.com", "creation_time": "2005-01-14T15:18:38Z", "text": "I committed a different fix, to set outctx->rc = ECONNRESET rather than just\nfail here, so that an error is logged properly.  Thanks again for tracking this\ndown.\n\nhttp://svn.apache.org/viewcvs?view=rev&rev=125166 [viewsvn currently disabled]\n"}, {"count": 4, "tags": [], "bug_id": 32699, "attachment_id": null, "is_private": false, "id": 79114, "time": "2005-08-28T05:02:07Z", "creator": "jbrady@sbccd.cc.ca.us", "creation_time": "2005-08-28T05:02:07Z", "text": "Since this specific fix, I occasionally get 104 http error codes in my access\nlog. I have tracked it to aborted SSL connections. The patch for this bug\nreturns an APR_ECONNRESET which resolves to 104 on my linux system (Redhat 9 and\nFedora4). It shouldn't be returning invalid http error codes when trying to log\naborted http connections."}, {"count": 5, "tags": [], "bug_id": 32699, "attachment_id": null, "id": 79288, "time": "2005-09-01T15:15:42Z", "creator": "jorton@redhat.com", "creation_time": "2005-09-01T15:15:42Z", "is_private": false, "text": "Jason could you please file a new bug for that issue?  I don't think it's\nmod_ssl specific, mod_ssl appears to be doing the right thing here."}]