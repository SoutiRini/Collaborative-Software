[{"count": 0, "attachment_id": null, "bug_id": 16308, "is_private": false, "id": 29814, "time": "2003-01-21T20:46:18Z", "creator": "kuchhal@yahoo.com", "creation_time": "2003-01-21T20:46:18Z", "tags": [], "text": "Hi\n\nI have web application in which I have a logout page where I call \nsession.invalidate().  This does not seem to work and session count just keeps \nrising as more users access the application and even if they logout the count \ndoes not go down.  The session count does go down after session timeout time is \nreached.  But still tomcat never releases memory though, it just keeps growing \nand ultimately crash with out of memory error.\n\nI monitored this uing tomcats manager application's manager/list call\n\nThe problem here is \n1.  Tomcat does not release sessions that are invalidated.\n2.  Tomcat does not release memory after the sessions that are released after \nsession timeouts.\n3.  Tomcat persists the sessions from previous run too.\n\nPlease help"}, {"count": 1, "tags": [], "creator": "kuchhal@yahoo.com", "attachment_id": null, "id": 30411, "time": "2003-01-31T14:23:39Z", "bug_id": 16308, "creation_time": "2003-01-31T14:23:39Z", "is_private": false, "text": "we have found out the problem in the code. It seems after doing \nsession.invalidate() the code was sending a redirect to a Jsp file. We found \nthat it creates a new empty session. Invalidating the session in Jsp file \ninstead solve the problem."}]