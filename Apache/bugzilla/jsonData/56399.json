[{"count": 0, "tags": [], "bug_id": 56399, "attachment_id": null, "is_private": false, "id": 174501, "time": "2014-04-11T20:01:25Z", "creator": "chris@christopherschultz.net", "creation_time": "2014-04-11T20:01:25Z", "text": "It probably makes sense to create a new Recyclable interface in Coyote and then use it in both, to avoid circular-dependencies between Coyote and Catalina."}, {"count": 1, "tags": [], "bug_id": 56399, "attachment_id": null, "is_private": false, "id": 175190, "time": "2014-05-14T01:40:29Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-05-14T01:40:29Z", "text": "The feature (but not the refactoring it implied) was implemented in Tomcat 8 with r1594436 and will be in 8.0.6."}, {"count": 2, "tags": [], "text": "No it will not. The commit for this was explicitly excluded from the 8.0.6 tag. Additionally, the commit has been vetoed so it is unlikely that the fix will remain in its current form.", "attachment_id": null, "id": 175203, "creator": "markt@apache.org", "time": "2014-05-14T13:07:34Z", "bug_id": 56399, "creation_time": "2014-05-14T13:07:34Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 56399, "text": "After testing some more, I don't see any problems besides the one TestAbstractHttp11Processor test (as seen on buildbot), but it's still best to only include it in the next version.\n\nThe commit could be improved (besides trying to identify the problem with the test):\n- no apparent benefit of logging a stacktrace since it does not give any additional info; if this is done for visibility in logs then I disagree with that trick\n- checking the request should be enough (although I would like to get info if this is meant to try to detect bad async access too, in which case checking the response commit state is a good idea)\n\nAnother related topic: the amount of WebappClassLoader.clearReferencesThreads logging that happens running the testsuite. This feature is a good idea, but with a lot of noise.", "id": 175205, "time": "2014-05-14T14:05:02Z", "creator": "remm@apache.org", "creation_time": "2014-05-14T14:05:02Z", "is_private": false, "attachment_id": null}, {"text": "(In reply to Remy Maucherat from comment #3)\n> The commit could be improved (besides trying to identify the problem with\n> the test):\n> - no apparent benefit of logging a stacktrace since it does not give any\n> additional info; if this is done for visibility in logs then I disagree with\n> that trick\n\nThe goal here is to protect against unexpected bugs in request handling, as leaking unrecycled request or response has rather bad consequences.\nThe stack trace is needed for us to identify problem code, as there are a dozen of ways in how processor recycling can be triggered. I expect such bugs to be rare and hard to reproduce, thus a stack trace is helpful.\n\nAs the original cause of the problem is not some condition under administrator's control, but rather some problem in Tomcat code, I agree that using \"warning\" log level here is a nuisance. That is my fault.\n\nI will reduce the logging level to \"info\".\nIt can be further reduced by help of UserDataHelper, but that strikes me as premature optimization.\n\n> - checking the request should be enough (although I would like to get info\n> if this is meant to try to detect bad async access too, in which case\n> checking the response commit state is a good idea)\n\nThe request check can be simplified to check getHost() only. It essentially means that request line has been read and request has been run through Mapper.\n\nThe response check essentially means that response.outputbuffer has not been recycled. The call returns a sum of two counters.\n\nIn general request check should be enough.\nIf request check was OK but response one fails, then maybe\n\na) mapping failed (host==null), but some response was written.\nb) some broken webapp is still holding a reference to response object and is writing some data.\n\nAs b) is more likely, maybe the response check fail should be treated differently, as it is likely a problem in web application code, not in Tomcat.", "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "count": 4, "id": 175247, "time": "2014-05-15T14:00:25Z", "bug_id": 56399, "creation_time": "2014-05-15T14:00:25Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 56399, "text": "In reply to Mark's e-mail on \"Re: r1594436\"\n2014-05-14 12:02 GMT+04:00 Mark Thomas:\n\n> Why is an exception being used for flow control? Surely a boolean flag\n> would be better here especially as this is being called on every\n> request.\n\nAck.\nIn some sense those are remnants of older code that I had before simplifying the bits. I do not think those slow down things (as throwing the exceptions is an unexpected use case).\n\nI still think that exceptions are needed for the log statements, but we can generate the exceptions only when the log messages are actually written out.\n\nAs I mentioned in comment 4, it would be better with separate message texts for unrecycled request vs. unrecycled response.\n\n(BTW, The mailing list still fails as a place for discussions. This particular message was delayed by 48 hours).\n\n2014-05-14 12:02 GMT+04:00 Mark Thomas:\n\n> I remain of the view that a better solution would be to recycle both\n> pairs of request and response objects at the same time.\n\nThe idea of \"to create a new Recyclable interface in Coyote\" (from Comment 0) is not doable. The \"notes\" in coyote request are opaque. The CoyoteAdapter.ADAPTER_NOTES constant is defined in Catalina only.\n(In coyote it is mentioned in javadoc for coyote.Request#setNote()).\n\nThus a better solutions looks to introduce some method into Adapter interface.\n(Or rename and adapt the \"checkRecycled()\" or \"log()\" one).\n\nWill the recycling driven by Coyote or by Catalina? Will some code from Catalina be removed or simplified?\n\nWill the need to recycle accompanied by some action?\n\nWill it be possible to backport the changes to earlier versions?", "id": 175268, "time": "2014-05-16T10:10:23Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-05-16T10:10:23Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "Created attachment 31633\nDo not use exception for flow control (2014-05-16_tc8_CoyoteAdapter.patch)\n\n(In reply to comment #5)\n\nPatch that changes the implementation to do not use an exception for flow control.\n\nI did not manage to commit it before 8.0.8 tag. I will wait awhile (a day or two) before proceeding with it.", "is_private": false, "id": 175288, "creator": "knst.kolinko@gmail.com", "time": "2014-05-16T20:37:55Z", "bug_id": 56399, "creation_time": "2014-05-16T20:37:55Z", "attachment_id": 31633}, {"count": 7, "tags": [], "bug_id": 56399, "attachment_id": null, "id": 175318, "time": "2014-05-19T13:41:46Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-05-19T13:41:46Z", "is_private": false, "text": "Improvements from the above comments were committed to trunk in r1595887 and will be in 8.0.9.\n\nBackported to Tomcat 7 in r1595900 to be in 7.0.54."}, {"count": 8, "tags": [], "bug_id": 56399, "attachment_id": null, "id": 175335, "time": "2014-05-19T22:45:48Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2014-05-19T22:45:48Z", "is_private": false, "text": "(In reply to Remy Maucherat from comment #3)\n>\n> Another related topic: the amount of\n> WebappClassLoader.clearReferencesThreads logging that happens running the\n> testsuite. This feature is a good idea, but with a lot of noise.\n\nI filed that as a separate issue:\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=56546"}]