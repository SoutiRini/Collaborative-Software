[{"count": 0, "tags": [], "creator": "junang@in.tum.de", "attachment_id": null, "id": 22027, "time": "2002-08-30T13:10:07Z", "bug_id": 12189, "creation_time": "2002-08-30T13:10:07Z", "is_private": false, "text": "Hi!\nI have read the code for the implementation of the Checkbox tag and found out \nthat the defaults attibute is only considered if the request has some \nparameters. \n\nSee: if (!req.getParameterNames().hasMoreElements()) in the code.\nIt means that if the request has any parameters, the defaults attribute of the \ntag will not be considered, although the name attribute of the tag is not in \nthe request.\n\nI' would rather propose to consider the defaults attribute of the tag if there \nis no param in the request with the name of the tag, and not if the request has \nno params.\n\ni.e with the following code: \n\nString[] checked = req.getParameterValues(name);\nif (checked==null){\n  // The request does not contains a param with the name of the tag\n  / Consider the default(s) attribute of the tag\n  ...\n}\nelse{\n  // The request has a param with the name of the tag\n  // Ignore the default(s) attribute of the tag\n  ...\n}\n\nActually the code looks like this:\n\nString[] checked = req.getParameterValues(name);\n          if (!req.getParameterNames().hasMoreElements()) {\n\n\nHope this helps...\nThanx..."}, {"count": 1, "tags": [], "bug_id": 12189, "is_private": false, "text": "Created attachment 3083\npatch for Checkbox.java", "id": 22921, "time": "2002-09-16T15:59:59Z", "creator": "curt.wilhelm@sun.com", "creation_time": "2002-09-16T15:59:59Z", "attachment_id": 3083}, {"count": 2, "attachment_id": null, "bug_id": 12189, "text": "This implementation is because when a checkbox is unchecked, nothing is \nincluded in the request with the name of the checkbox. Therefore it is \nimpossible to tell whether a request.getParameter( \"checkboxname\" ) == null \nwhether the checkbox should use its default value or whether we're previously \nchosen to uncheck it.\n\nI'm considering a method whereby another field in the form (a non-checkbox \nfield that doesn't suffer from this problem) can be tested to see if it is \nnull or not null, so that we can determine whether to use default or not in a \ncheckbox. This field could be a hidden field that we generate automatically or \njust another nominated field on the form. It seems like a bit of a hack... \ndoes anyone want to discuss this?\n\nAlternatively, use the JavaBean support and then you can manage checkbox \ndefault values etc in the bean.", "id": 34116, "time": "2003-03-29T23:09:24Z", "creator": "karl@xk72.com", "creation_time": "2003-03-29T23:09:24Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 12189, "is_private": false, "text": "Solution for default value could be:\n\nDefine a inputfield with the same name right after the checkbox. If checkbox \nis checked then the value of checkbox will be read, otherwise the value of the \nhidden field.\n\n<input type=\"checkbox\" name=\"testchk\" value=\"true\"/>\n<input name=\"testchk\" type=\"hidden\" value=\"false\" />\n\nfor the struts development i would suggest to extend the checkboxtag to have \nan property uncheckedValue and if this property is set, automatically add the \nhiddenfield.\n\nGreetings,\n\nmichael.weigand@michaelweigand.de", "id": 81462, "time": "2005-10-20T14:32:10Z", "creator": "michael.weigand@michaelweigand.de", "creation_time": "2005-10-20T14:32:10Z", "attachment_id": null}, {"count": 4, "tags": [], "creator": "karl@xk72.com", "attachment_id": null, "id": 81482, "time": "2005-10-20T21:53:51Z", "bug_id": 12189, "creation_time": "2005-10-20T21:53:51Z", "is_private": false, "text": "That could work, however adding another field to the form changes the nature \nof what's generated in the HTML, and I think the input taglib has always been \na 1-1 type of library. It could cause difficulty for people iterating over a \nform at runtime (eg Javascript); it would post either a single (the hidden) or \nmultiple values depending upon the check state, which might be misinterpreted \non the server; finally in a situation where there are multiple checkboxes with \nthe same name it would cause all of the off values to be sent with any on \nvalues which would require special treatment on the server side.\n\nI've had long enough to think about this! I think the real issue is knowing \nwhether this is a redisplay of the form or the initial display. In the case of \na redisplay we want to use the information in the request, in the case of an \ninitial display we want to use the default.\n\nIn comment 2 I suggested using another field in the form (a non checkbox) to \nindicate whether this was a redisplay or not. The only problem with that is \nthat some fields will possibly be on multiple pages in a sequence of forms so \nwe could be steered wrong.\n\nHow about this for a solution? We add an \"indicator\" (or better name) \nattribute to the form tag, if the request parameter with the name given in \nindicator is set then we assume this is a redisplay, and use the appropriate \ndefault logic on checkboxes in the form. Also we add an indicator attribute to \nthe checkbox tag so that it can be controlled at a closer level (say different \nparts of the same form appear each time you submit so there is no one \nindicator to say if the whole form is a redisplay).\n\nI think this could work quite nicely; it will be 100% backwards compatible (no \nchanges in generated code) and I think should work for all situations (except \nwhere there are only checkboxes in a form in which case you would need to \nartificially introduce a hidden indicator field).\n\nWhat are your thoughts?"}, {"id": 102005, "tags": [], "bug_id": 12189, "is_private": false, "count": 5, "text": "This bug is resolved in my latest commit. Checkboxes can now detect whether to use default values, or \nnot, based on whether any other fields in the form (before the checkboxes) have matching parameters in \nthe request. If there are no other such fields to do the detection with then the Checkbox reverts to its \noriginal behaviour.", "time": "2007-04-21T23:20:51Z", "creator": "karl@xk72.com", "creation_time": "2007-04-21T23:20:51Z", "attachment_id": null}]