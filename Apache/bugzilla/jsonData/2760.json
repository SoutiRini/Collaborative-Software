[{"count": 0, "tags": [], "creator": "dragzhb@163.net", "text": "request.setCharacterEncoding(strEncode) is also  incorrectly.when I set \nstrEncode to GBK or gb2312 ,String strParamter = request.getParameter(\"ID\") is \nincorrectly . I must translate ISO8859-1 to GBK manual.\nThis is the source code\n\n<% request.setCharacterEncoding(\"GBK\"); //It is not correctly\n\t    \n\t    \tString strParamter = request.getParameter(\"ID\");\n                  // I must use those code to getting strParamter encoding \ncorrectly\n\t    \tif (strParamter != null) {\n\t    \t\tbyte[] bit = strParamter.getBytes(\"ISO8859-1\");\n\t    \t\t\n\t\t\t\tstrParamter = new String(bit);\n\t\t}  // The end of translating \n\n                 \n             if (strParamter == null) {\n\t\t\t\tstrParamter = \"\";\n\t\t\t} \n\t\t\t\n           %>", "id": 3946, "attachment_id": null, "bug_id": 2760, "creation_time": "2001-07-24T00:53:06Z", "time": "2001-07-24T00:53:06Z", "is_private": false}, {"count": 1, "tags": [], "creator": "craig.mcclanahan@sun.com", "text": "Converting this to an Enhancement request.  See below for more details.\n\nThere is a restriction on the request.setCharacterEncoding() method, that it\nmust be called *before* any of the request.getParameter() family of methods are\ncalled, because any of those methods cause all the request parameters to be\nread.  Currently, Jasper is calling request.getParameter(\"jsp_precompile\"), in\norder to implement the precompilation protocol as defined in JSP 1.3 PFD3,\nSection 8.4.  This means that the parameters have already been processed by the\ntime your scriptlet executes, so your call to setCharacterEncoding() has no\neffect.\n\nThis issue has been captured as an issue for the next version of JSP after 1.2\n(it's too late in the cycle for 1.2 to make large substantive changes).  It's\nalso being recorded as an enhancement request for Tomcat, to use a different\nmechanism to implement the precompilation protocol.\n\nHowever, there are also two fairly straightforward workarounds for you:\n\n* Implement your web application architecture, such that requests pass\n  through a controller servlet before being forwarded to the JSP page.\n  In this scenario, your controller servlet can call\n  request.setCharacterEncoding() reliably, because it *knows* that no\n  request parameters have been processed.\n\n* Implement a filter, using the new javax.servlet.Filter API, that does\n  the request.setCharacterEncoding() call for you, without having to\n  modify the application architecture.\n\nTo make the latter workaround easier, beginning with the 20010724 nightly build\nof Tomcat 4.0, a new example filter (filters.SetCharacterEncodingFilter) has\nbeen included in the \"/examples\" web application.  You can use this filter as is\nin your own apps, if you just want to unconditionally set the character\nencoding, or use it as a base class for more sophisticated processing.\n", "id": 3983, "attachment_id": null, "bug_id": 2760, "creation_time": "2001-07-24T17:06:40Z", "time": "2001-07-24T17:06:40Z", "is_private": false}, {"count": 2, "tags": [], "creator": "Larry.Isaacs@sas.com", "attachment_id": null, "id": 46862, "time": "2003-11-05T14:30:55Z", "bug_id": 2760, "creation_time": "2003-11-05T14:30:55Z", "is_private": false, "text": "Reopen to update resolution."}, {"count": 3, "tags": [], "bug_id": 2760, "attachment_id": null, "is_private": false, "id": 46863, "time": "2003-11-05T14:39:25Z", "creator": "Larry.Isaacs@sas.com", "creation_time": "2003-11-05T14:39:25Z", "text": "Craig actually implemented the \"enhancement\" later that night.  The fix appears \nin the original Tomcat 4.0 release and later versions of Tomcat 4.\n\nIt would seem to me to be a bug for the JSP handling to always call\ngetParameter() before the JSP could call setCharacterEncoding().\nWith Craig's change, the \"jsp_precompile\" parameter is now detected by scanning \nthe query string directly."}]