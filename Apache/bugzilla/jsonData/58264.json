[{"count": 0, "tags": [], "bug_id": 58264, "attachment_id": null, "id": 184668, "time": "2015-08-20T14:58:07Z", "creator": "apache@clacke.user.lysator.liu.se", "creation_time": "2015-08-20T14:58:07Z", "is_private": false, "text": "When compiling APR 1.5.3 I get the following test output:\n\ntestuser            :  Line 73: apr_gid_compare failed (70024): passwords do not match\n\nI am doing this on a SLES 11.3 machine, but I'm doing it inside the guix package manager, running as unprivileged with --disable-chroot, so I have a pretty exotic context for this error. I will try running it as a manual build too, to see if the results are different.\n\nBut I'm reading the APR source code, specifically user/unix/groupinfo.c, and I cannot find where the string \"passwords do not match\" would even come from. Doesn't the code finally boil down to (left == right)?"}, {"count": 1, "tags": [], "bug_id": 58264, "attachment_id": null, "id": 184742, "time": "2015-08-25T12:26:44Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2015-08-25T12:26:44Z", "is_private": false, "text": "\"passwords do not match\" comes from misc/unix/errorcodes.c. In apr_error_string():\n\n    case APR_EMISMATCH:\n        return \"passwords do not match\";\n\nand then in include/apr_user.h:\n\n#define apr_gid_compare(left,right) (((left) == (right)) ? APR_SUCCESS : APR_EMISMATCH)\n\nThe test fails in test/testuser.c line 73:\n\n 32 static void username(abts_case *tc, void *data)\n 33 {\n 34     apr_uid_t uid;\n 35     apr_gid_t gid;\n 36     apr_uid_t retreived_uid;\n 37     apr_gid_t retreived_gid;\n 38     char *uname = NULL;\n 39\n 40     APR_ASSERT_SUCCESS(tc, \"apr_uid_current failed\",\n 41                        apr_uid_current(&uid, &gid, p));\n 42\n 43     APR_ASSERT_SUCCESS(tc, \"apr_uid_name_get failed\",\n 44                        apr_uid_name_get(&uname, uid, p));\n...\n 49\n 50     APR_ASSERT_SUCCESS(tc, \"apr_uid_get failed\",\n 51                        apr_uid_get(&retreived_uid, &retreived_gid, uname, p));\n 52\n...\n 72         APR_ASSERT_SUCCESS(tc, \"apr_gid_compare failed\",\n 73                            apr_gid_compare(gid, retreived_gid));\n...\n 77 }\n\nSo the name associated with the current uid returns another primary guid, then the one for used the current process. You might add some debug output to see the actual values.\n\nRegards,\n\nRainer"}, {"count": 2, "tags": [], "creator": "apache@clacke.user.lysator.liu.se", "attachment_id": null, "id": 184743, "time": "2015-08-25T12:39:31Z", "bug_id": 58264, "creation_time": "2015-08-25T12:39:31Z", "is_private": false, "text": "Oh!\n\nYes, I was running it under newgrp for reasons.\n\nI think this is something normal to do and probably shouldn't trigger an error in tests, but now at least I know enough to be able to work around it. Thanks for the analysis!"}, {"count": 3, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "text": "Closing as WONTFIX due to somewhat exotic test conditions.", "id": 184746, "time": "2015-08-25T14:41:58Z", "bug_id": 58264, "creation_time": "2015-08-25T14:41:58Z", "is_private": false}]