[{"count": 0, "tags": [], "bug_id": 9027, "attachment_id": null, "text": "The Tomcat Servlet Container use the identity specified in a servlet with the \nelement <run-as> for every web component.\nThis identity should only be used for calls in the specified servlet and not \nfor calls in other web components. In my opinion this is a fatal error.\n\nThe following test szenario could be used to detect the error (I use the J2EE \nReference Implementation from Sun).\n\n1.) create an EJB archive with the session bean TestEJB\n2.) insert the JSP test.jsp and testRunAs.jsp in an web-archive\n3.) modify the security for the JSP shown in the deployment descriptor web.xml \n4.) modify the caller-id of the JSP testRunAs.jsp to the role 'eng' and the \nuser 'scott'\n5.) deploy the application\n6.) request the test.jsp and testRunAs.jsp with the username j2ee/j2ee. The \ncaller of the EJB is always the one, who is specified for testRunAs.jsp, that \nmeans 'scott'. A request to test.jsp should use the authenticated user (j2ee).\n\n-----------------------------------------------------------------\nJSP Testfile: 'test.jsp'\n-----------------------------------------------------------------\n<html>\n  <head>\n    <title>test</title>\n    <%@ page import=\"de.j2eeguru.example.Test\" %>\n    <%@ page import=\"de.j2eeguru.example.TestHome\" %>\n    <%@ page import=\"javax.naming.InitialContext\" %>\n    <%@ page import=\"javax.rmi.PortableRemoteObject\" %>\n  </head>\n  <body>\n    <p>Identity of the user in test.jsp: <%= request.getRemoteUser() %></p>\n    <p>\n      Identity of the EJB caller:\n    <%\n      String callerID=\"???\";\n\n      try\n      {\n        // JNDI-Kontext ermitteln\n        InitialContext ctx = new InitialContext();\n\n        // JNDI-Namen nachschlagen\n        Object ref = ctx.lookup(\"de/ejbguru/test\");\n\n        // in Home-Interface umwandeln\n        TestHome testHome = (TestHome)\n           PortableRemoteObject.narrow(ref, TestHome.class);\n\n        // EJB erzeugen und Referenz auf Remote-Interface ermitteln\n        Test test = testHome.create();\n\n        // Business-Methode vom EJB ausf\u00fchren\n        callerID = test.getUserName();\n\n        // Remote-Interface wird nicht mehr ben\u00f6tigt\n        test.remove();\n      }\n      catch(Exception ex)\n      {\n        ex.printStackTrace();\n        callerID = \"Fehler aufgetreten:\" + ex.getMessage();\n      }\n    %>\n\n    <%= callerID %>\n    </p>\n  </body>\n</html>\n\n-----------------------------------------------------------------\nJSP Testfile: 'testRunAs.jsp'  (in fact the same as test.jsp)\n-----------------------------------------------------------------\n<html>\n  <head>\n    <title>test</title>\n    <%@ page import=\"de.j2eeguru.example.Test\" %>\n    <%@ page import=\"de.j2eeguru.example.TestHome\" %>\n    <%@ page import=\"javax.naming.InitialContext\" %>\n    <%@ page import=\"javax.rmi.PortableRemoteObject\" %>\n  </head>\n  <body>\n    <p>Identity of the user in testRunAs.jsp: <%= request.getRemoteUser() %></p>\n    <p>\n      Identity of the EJB caller:\n    <%\n      String callerID=\"???\";\n\n      try\n      {\n        // JNDI-Kontext ermitteln\n        InitialContext ctx = new InitialContext();\n\n        // JNDI-Namen nachschlagen\n        Object ref = ctx.lookup(\"de/ejbguru/test\");\n\n        // in Home-Interface umwandeln\n        TestHome testHome = (TestHome)\n           PortableRemoteObject.narrow(ref, TestHome.class);\n\n        // EJB erzeugen und Referenz auf Remote-Interface ermitteln\n        Test test = testHome.create();\n\n        // Business-Methode vom EJB ausf\u00fchren\n        callerID = test.getUserName();\n\n        // Remote-Interface wird nicht mehr ben\u00f6tigt\n        test.remove();\n      }\n      catch(Exception ex)\n      {\n        ex.printStackTrace();\n        callerID = \"Fehler aufgetreten:\" + ex.getMessage();\n      }\n    %>\n\n    <%= callerID %>\n    </p>\n  </body>\n</html>\n\n-----------------------------------------------------------------\nWEB.XML:\n-----------------------------------------------------------------\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<!DOCTYPE web-app PUBLIC '-//Sun Microsystems, Inc.//DTD Web Application \n2.3//EN' 'http://java.sun.com/dtd/web-app_2_3.dtd'>\n\n<web-app>\n  <display-name>RunAsWebApp</display-name>\n  <servlet>\n    <servlet-name>test</servlet-name>\n    <display-name>test</display-name>\n    <jsp-file>/test.jsp</jsp-file>\n  </servlet>\n  <servlet>\n    <servlet-name>testRunAs</servlet-name>\n    <display-name>testRunAs</display-name>\n    <jsp-file>/testRunAs.jsp</jsp-file>\n    <run-as>\n      <role-name>eng</role-name>\n    </run-as>\n  </servlet>\n  <session-config>\n    <session-timeout>30</session-timeout>\n  </session-config>\n  <security-constraint>\n    <web-resource-collection>\n      <web-resource-name>WRCollection</web-resource-name>\n      <url-pattern>/test.jsp</url-pattern>\n      <url-pattern>/testRunAs.jsp</url-pattern>\n    </web-resource-collection>\n    <auth-constraint>\n      <role-name>mgr</role-name>\n    </auth-constraint>\n    <user-data-constraint>\n      <transport-guarantee>NONE</transport-guarantee>\n    </user-data-constraint>\n  </security-constraint>\n  <login-config>\n    <auth-method>BASIC</auth-method>\n    <realm-name>Default</realm-name>\n  </login-config>\n  <security-role>\n    <role-name>eng</role-name>\n  </security-role>\n  <security-role>\n    <role-name>mgr</role-name>\n  </security-role>\n</web-app>\n\n-----------------------------------------------------------------\nTestEJB.java\n-----------------------------------------------------------------\npackage de.j2eeguru.example;\n\nimport javax.ejb.SessionBean;\nimport javax.ejb.EJBException;\nimport javax.ejb.CreateException;\nimport javax.ejb.SessionContext;\n\n/*\n * Stateless-Session-Bean 'TestEJB'\n */\npublic class TestEJB implements SessionBean\n{\n  private SessionContext sctx = null;\n\n  //------------------------------------------------------------\n  //          Implementierung der Business-Methoden\n  //------------------------------------------------------------\n  public String getUserName()\n  {\n    return sctx.getCallerPrincipal().getName();\n  }\n\n  //------------------------------------------------------------\n  //          Implementierung der create-Methode\n  //------------------------------------------------------------\n  public void ejbCreate() throws CreateException  {  }\n\n  //------------------------------------------------------------\n  //   Implementierung des Interface 'javax.ejb.SessionBean'\n  //------------------------------------------------------------\n  public void setSessionContext( SessionContext sctx )  { this.sctx = sctx; }\n  public void ejbRemove()     {  }\n  public void ejbActivate()   {  }\n  public void ejbPassivate()  {  }\n}\n\n-----------------------------------------------------------------\nTestEJB.java\n-----------------------------------------------------------------\npackage de.j2eeguru.example;\n\nimport java.rmi.RemoteException;\nimport javax.ejb.EJBObject;\n\n/*\n * Remote-Interface f\u00fcr das Session-Bean 'TestEJB'\n */\npublic interface Test extends EJBObject\n{\n  public String getUserName() throws RemoteException;\n}\n\n-----------------------------------------------------------------\nTestHomeEJB.java\n-----------------------------------------------------------------\npackage de.j2eeguru.example;\n\nimport java.rmi.RemoteException;\n\nimport javax.ejb.EJBHome;\nimport javax.ejb.CreateException;\n\n/**\n * Home-Interface f\u00fcr das Session-Bean 'TestEJB'.\n */\npublic interface TestHome extends EJBHome\n{\n  public Test create() throws CreateException, RemoteException;\n}", "id": 15997, "time": "2002-05-13T11:49:12Z", "creator": "markus.ide@ejbguru.de", "creation_time": "2002-05-13T11:49:12Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 9027, "attachment_id": null, "id": 16047, "time": "2002-05-14T01:04:05Z", "creator": "remm@apache.org", "creation_time": "2002-05-14T01:04:05Z", "is_private": false, "text": "\n\n*** This bug has been marked as a duplicate of 9023 ***"}, {"count": 2, "tags": [], "bug_id": 9027, "attachment_id": null, "text": "This bug is not a duplicate of bug #9023. The problem exists already with \nservlet-mapping (use the following web.xml).\n\n\n-----------------------------------------------------------------------------\nOutput for the URL 'http://localhost:8000/runas/testRunAs' with the user j2ee:\n--> The ID of the EJB caller is ok\n-----------------------------------------------------------------------------\nIdentity of the user in testRunAs.jsp: j2ee\n\nIdentity of the EJB caller: scott \n\n\n-----------------------------------------------------------------------------\nOutput for the URL 'http://localhost:8000/runas/test' with the user j2ee\n--> The ID of the EJB caller is not ok, the servlet should use the caller-id\n-----------------------------------------------------------------------------\nIdentity of the user in test.jsp: j2ee\n\nIdentity of the EJB caller: scott \n\n\n\n-----------------------------------------------------------------------------\nWEB.XML:\n-----------------------------------------------------------------------------\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<!DOCTYPE web-app PUBLIC '-//Sun Microsystems, Inc.//DTD Web Application \n2.3//EN' 'http://java.sun.com/dtd/web-app_2_3.dtd'>\n\n<web-app>\n  <display-name>RunAsWebApp</display-name>\n  <servlet>\n    <servlet-name>testRunAs</servlet-name>\n    <display-name>testRunAs</display-name>\n    <jsp-file>/testRunAs.jsp</jsp-file>\n    <run-as>\n      <role-name>eng</role-name>\n    </run-as>\n  </servlet>\n  <servlet>\n    <servlet-name>test</servlet-name>\n    <display-name>test</display-name>\n    <jsp-file>/test.jsp</jsp-file>\n  </servlet>\n  <servlet-mapping>\n    <servlet-name>testRunAs</servlet-name>\n    <url-pattern>/testRunAs</url-pattern>\n  </servlet-mapping>\n  <servlet-mapping>\n    <servlet-name>test</servlet-name>\n    <url-pattern>/test</url-pattern>\n  </servlet-mapping>\n  <session-config>\n    <session-timeout>30</session-timeout>\n  </session-config>\n  <security-constraint>\n    <web-resource-collection>\n      <web-resource-name>WRCollection</web-resource-name>\n      <url-pattern>/testRunAs</url-pattern>\n      <url-pattern>/test</url-pattern>\n    </web-resource-collection>\n    <auth-constraint>\n      <role-name>mgr</role-name>\n    </auth-constraint>\n    <user-data-constraint>\n      <transport-guarantee>NONE</transport-guarantee>\n    </user-data-constraint>\n  </security-constraint>\n  <login-config>\n    <auth-method>BASIC</auth-method>\n    <realm-name>Default</realm-name>\n  </login-config>\n  <security-role>\n    <role-name>eng</role-name>\n  </security-role>\n  <security-role>\n    <role-name>mgr</role-name>\n  </security-role>\n</web-app>", "id": 16064, "time": "2002-05-14T11:45:27Z", "creator": "markus.ide@ejbguru.de", "creation_time": "2002-05-14T11:45:27Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 9027, "attachment_id": null, "id": 84351, "time": "2006-01-09T00:49:44Z", "creator": "markt@apache.org", "creation_time": "2006-01-09T00:49:44Z", "is_private": false, "text": "When integrated with an EJB container, the EJB container is responsible for\ncalling the internal Tomcat method Wrapper.getRunAS(). For example, the\nJBoss-Tomcat integration code does this.\n\nAs far as I can tell, Tomcat correctly saves the runAs information on a per\nservlet basis and also correctly sets it in the case of JSPs as per the test\ncase provided. Therefore, this looks like a bug with the Sun Reference\nimplementation."}]