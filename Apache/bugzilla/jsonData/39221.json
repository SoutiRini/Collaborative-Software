[{"count": 0, "tags": [], "text": "I have setup Apache 2.0.55 with mod_jk 1.2.15 talking to a tomcat 5.5.16.\n\nEverything works nice except one thing. I have the following httpd config entry:\n\nErrorDocument 404 /servlet/SnoopServlet\n\n(i use a home made snoop servlet for easy testing)\n\nWhen i request a document that apache can not find (/somefile) the servlet is\ncalled as expected, but /somefile is not passed to tomcat, the only thing i can\nget from the request object is that /servlet/SnoopServlet was called.\n\nWith resin i have a bit more luck, since mod_caucho sets the http header\nREDIRECT_URL: /somefile\nBut i would rather use tomcat.\n\nWould it not be correct to set javax.servlet.error.request_uri request attribute\nto /somefile (or some other javax.servlet.* parameter, don't remember the spec.)\nand if that is not possible then set some request header like resin does?\n\nWhat i want to do it match /somefile against a 'redirect' database and if a\nmatch is found then send a redirect, if not send an error page.\n\nI'm not sure where the error is located, but my guess would be mod_jk, i have\ntried with several combinations of mod_jk and tomcat versions.", "is_private": false, "bug_id": 39221, "id": 87628, "time": "2006-04-06T11:57:18Z", "creator": "jtm@mostlyharmless.dk", "creation_time": "2006-04-06T11:57:18Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "mod_jk is a proxy to the backend server.\nTrying to give some rewrite logic to it will never pass my +1.\nSince you are using Apache Httpd you have a thing like mod_rewrite\nand mod_headers.", "is_private": false, "bug_id": 39221, "id": 87629, "time": "2006-04-06T12:13:22Z", "creator": "mturk@apache.org", "creation_time": "2006-04-06T12:13:22Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "jtm@mostlyharmless.dk", "attachment_id": null, "text": "I never proposed any rewrite logic, i only proposed to pass the original request\nurl/uri to tomcat, when invoked as an ErrorDocument.\n\nWhy should i have to obscufate my apache configuration to do some basic error\nhandling?", "id": 87631, "time": "2006-04-06T12:51:32Z", "bug_id": 39221, "creation_time": "2006-04-06T12:51:32Z", "is_private": false}, {"count": 3, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 112524, "time": "2008-01-05T10:18:58Z", "bug_id": 39221, "creation_time": "2008-01-05T10:18:58Z", "is_private": false, "text": "This functionality already exists. Apache 1.3/2.0/2.2 automatically set this\ninformation as internal environment variables when an ErrorDocument gets called.\nAll httpd environment variables can be forwarded to the backend with JkEnvVar.\n\nFor the variables see\n\nhttp://httpd.apache.org/docs/2.2/custom-error.html\nhttp://httpd.apache.org/docs/2.0/custom-error.html\nhttp://httpd.apache.org/docs/1.3/custom-error.html\n\nespecially REDIRECT_URL and REDIRECT_QUERY_STRING.\n\nTo forward those variables to a backend generated error page use\n\nJkEnvVar REDIRECT_URL\nJkEnvVar REDIRECT_QUERY_STRING\n\nFor JkEnvVar see also \n\nhttp://tomcat.apache.org/connectors-doc/reference/apache.html\n\nTo retrieve the value on the backend you can use\n\nrequest.getAttribute(\"REDIRECT_URL\") etc."}]