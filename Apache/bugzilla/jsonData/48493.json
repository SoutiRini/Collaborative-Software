[{"count": 0, "tags": [], "text": "Created attachment 24802\nThe java class ExcelObj.java that is referenced in the bug text\n\nI have a web application that uses our ExcelObj.java (code attached) to write an Excel file.  When it reaches the line\n    wb.write(fOut);\nit stops with this exception:\njava.lang.NullPointerException\n\tat org.apache.xmlbeans.impl.store.Xobj.array_setter(Xobj.java:2401)\n\tat org.apache.xmlbeans.impl.values.XmlComplexContentImpl.arraySetterHelper(XmlComplexContentImpl.java:1055)\n\tat org.openxmlformats.schemas.spreadsheetml.x2006.main.impl.CTWorksheetImpl.setColsArray(Unknown Source)\n\tat org.apache.poi.xssf.usermodel.XSSFSheet.write(XSSFSheet.java:2297)\n\tat org.apache.poi.xssf.usermodel.XSSFSheet.commit(XSSFSheet.java:2287)\n\tat org.apache.poi.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:177)\n\tat org.apache.poi.POIXMLDocumentPart.onSave(POIXMLDocumentPart.java:181)\n\tat org.apache.poi.POIXMLDocument.write(POIXMLDocument.java:214)\n\tat gov.bls.dbes.sled.util.ExcelObj.close(ExcelObj.java:110)\n\tat gov.bls.dbes.sled.util.ExcelWriter.writeExcelFile(ExcelWriter.java:296)\n\tat gov.bls.dbes.sled.util.ExcelWriter.writeExcelFile(ExcelWriter.java:352)\n\tat gov.bls.dbes.sled.action.ProcessNewExcelAction.outputExcel(ProcessNewExcelAction.java:231)\n\tat gov.bls.dbes.sled.action.ProcessNewExcelAction.writeOutExcel(ProcessNewExcelAction.java:125)\n\tat gov.bls.dbes.sled.action.ProcessNewExcelAction.execute(ProcessNewExcelAction.java:80)\n\tat org.apache.struts.action.RequestProcessor.processActionPerform(RequestProcessor.java:484)\n\tat org.apache.struts.action.RequestProcessor.process(RequestProcessor.java:274)\n\tat org.apache.struts.action.ActionServlet.process(ActionServlet.java:1482)\n\tat org.apache.struts.action.ActionServlet.doPost(ActionServlet.java:525)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:763)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:856)\n\tat weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:227)\n\tat weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:125)\n\tat weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:283)\n\tat weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:175)\n\tat weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3241)\n\tat weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)\n\tat weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)\n\tat weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2010)\n\tat weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1916)\n\tat weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1366)\n\tat weblogic.work.ExecuteThread.execute(ExecuteThread.java:209)\n\tat weblogic.work.ExecuteThread.run(ExecuteThread.java:181)\n\nHOWEVER when I alter the single line\n    \t   wb = new XSSFWorkbook();\nto be\n    \t   wb = new HSSFFWorkbook();\n(in other words, to use HSSF rather than XSSF) the execution finishes normally.", "is_private": false, "id": 133387, "creator": "solomon.eugene@bls.gov", "time": "2010-01-06T09:33:20Z", "bug_id": 48493, "creation_time": "2010-01-06T09:33:20Z", "attachment_id": 24802}, {"count": 1, "tags": [], "bug_id": 48493, "attachment_id": null, "text": "Can you submit a unit test reproducing the problem? The test code should use ExcelObj and throw exception as described. The following simple code works fine with the latest POI-3.6:\n\n ExcelObj obj = new ExcelObj();\n obj.open(\"First Argument\", \"Header String\", \"Footer String\");\n obj.startRow(2);\n obj.setCell(\"test\");\n obj.close();\n\nI guess the problem happens only with a certain combination of input arguments and method calls. So, we need more information to help you.\n\nAlso, which version of POI are you using? The lines in the stack trace differ from current code. Please try the latest POI-3.6 or the latest build from trunk. Nightly builds can be downloaded from http://encore.torchbox.com/poi-svn-build/\n\nYegor", "id": 133480, "time": "2010-01-10T05:49:56Z", "creator": "yegor@dinom.ru", "creation_time": "2010-01-10T05:49:56Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 48493, "attachment_id": null, "is_private": false, "id": 133585, "time": "2010-01-13T11:30:26Z", "creator": "solomon.eugene@bls.gov", "creation_time": "2010-01-13T11:30:26Z", "text": "This bug turned out *not* to be a problem with POI, but with a feature of running the web application using WebLogic Server.  The XSSF POI api uses classes contained in the xmlbeans jar file.  I *did* have a reference to the (correct) xmlbeans jar file as an \u201cexternal jar file\u201d referenced in my Weblogic project.  But behind the scenes Weblogic Server uses some Weblogic-specific jar files that it searches first during execution.  One of those WebLogic-specific jar files includes the same packages that are in the xmlbeans jar file.  This produced the reported error results when the application was run.\nOnce I was aware of that problem I achieved error-free execution by adding the correct xmlbeans jar file to the very beginning of the classpath used to run WebLogic Server.  For me that jar file is xmlbeans-2.3.0.jar."}]