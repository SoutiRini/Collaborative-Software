[{"count": 0, "tags": [], "bug_id": 42934, "attachment_id": null, "text": "I'm using Seam and a Seam app depends upon the Seam application being\ninitialized before you can do much of anything in Seam.\n\nThat said Seam puts some hooks into the sessionDidActivate() and\nsessionDidPassivate() events.  Because of that when I start up my app\nI'm getting a Seam IllegalStateException because the\ncontextInitialized() event is fired after sessionDidActivate() so Seam\nis not yet initialized it's Session hooks are being fired.\n\nWhat makes me think this is a bug is that sessionWillPassivate() is being\ncorrectly called before contextDestroyed() so it would seem that\nsessionDidActivate() being called before contextInitialized() would be\ninconsistent behavior.\n\nSo to sum up I think tomcat should fire context and session events in the\nfollowing order:\n\ncontextInitialized\nsessionDidActivate\nsessionWillPassivate\ncontextDestroyed\n\n\nAs a side note Tomcat 5 follows what I think is the completely wrong but\nconsistent order by firing events in this order:\n\nsessionDidActivate\ncontextInitialized\ncontextDestroyed\nsessionWillPassivate", "id": 105762, "time": "2007-07-18T14:40:10Z", "creator": "youngm@gmail.com", "creation_time": "2007-07-18T14:40:10Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 42934, "attachment_id": null, "text": "Here is a link to the Seam Issue:\n\nhttp://jira.jboss.com/jira/browse/JBSEAM-1681", "id": 105763, "time": "2007-07-18T14:45:02Z", "creator": "youngm@gmail.com", "creation_time": "2007-07-18T14:45:02Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 42934, "attachment_id": null, "is_private": false, "id": 106141, "time": "2007-08-01T07:21:28Z", "creator": "len.popp@gmail.com", "creation_time": "2007-08-01T07:21:28Z", "text": "According to the servlet spec, the listeners are supposed to be called in the\norder that they're declared in web.xml. Except at shutdown the session listeners\nare supposed to be called before the context listeners.\n\nSo the question is, how are the listeners declared in web.xml?\n\n(I don't know anything about how Seam integrates with Tomcat, but I guess there\nmust be a deployment descriptor somewhere with the <listener> declarations.)"}, {"count": 3, "tags": [], "bug_id": 42934, "attachment_id": null, "id": 106146, "time": "2007-08-01T08:05:20Z", "creator": "youngm@gmail.com", "creation_time": "2007-08-01T08:05:20Z", "is_private": false, "text": "> According to the servlet spec, the listeners are supposed to be called in the\n> order that they're declared in web.xml. Except at shutdown the session listeners\n> are supposed to be called before the context listeners.\n> \n> So the question is, how are the listeners declared in web.xml?\n> \n> (I don't know anything about how Seam integrates with Tomcat, but I guess there\n> must be a deployment descriptor somewhere with the <listener> declarations.)\n\nYes, Seam has a listener.  And at shutdown in Tomcat 6 the Session Listeners are\ncorrectly called before the Servlet Listeners.  The problem is that at server\n'startup' the session listeners are also called before the Servlet Listeners\nwhich is causing trouble for Seam since Seam needs contextInitialized() to be\ncalled before sessionDidActivate().\n\nMike\n\n"}, {"count": 4, "tags": [], "creator": "len.popp@gmail.com", "attachment_id": null, "id": 106149, "time": "2007-08-01T08:27:14Z", "bug_id": 42934, "creation_time": "2007-08-01T08:27:14Z", "is_private": false, "text": "You missed my point. The order in which the listeners are called depends (in\npart) on the order in which they are declared. The behaviour that you describe\ncould be perfectly correct according to the servlet spec, *depending on how the\nlisteners are declared*. For more details, see section 10.3.3 and 10.3.4 of the\nservlet specification.\n\nHere is a concrete example. Suppose web.xml contains these declarations:\n\n    <listener>\n        <listener-class>com.example.MySessionListener</listener-class>\n    </listener>\n    <listener>\n        <listener-class>com.example.MyContextListener</listener-class>\n    </listener>\n\nIn this example, on startup the session listener will be called before the\ncontext listener (according to section 10.3.3 of the servlet spec). On shutdown,\nthe session listener will again be called before the context listener (according\nto section 10.3.4).\n\nAnother possibility is that a single listener class implements two listener\ninterfaces. In that case, the spec doesn't say what order they should be called\non startup. I guess if the listeners need to be called in a certain order, they\nneed to be implemented in separate classes so that you can specify the order.\n\nSo, how are the listeners declared in your case?\nPlease post the contents of web.xml, or just the part with the <listener>\ndeclarations.\n"}, {"count": 5, "tags": [], "creator": "youngm@gmail.com", "attachment_id": null, "id": 106150, "time": "2007-08-01T08:41:28Z", "bug_id": 42934, "creation_time": "2007-08-01T08:41:28Z", "is_private": false, "text": "I see the confusion.  When I say Session Listener I was talking about a class\nthat implements HttpSessionActivationListener where you were thinking I meant an\nHttpSessionListener.  When HttpSessionActivationListeners are not declared in\nthe web.xml but are automatically called by the container when the instance\npassivates and activates instances stored in the Session.\n\nSo what I'm saying is that I would expect the\nServletContextListener.contextInitialized() to be called before\nHttpSessionActivationListener.sessionDidActivate().\n\nWhen shutting down ServletContextListener.contextDestroyed() is currently\ncorrectly called after HttpSessionActivationListener.sessionWillPassivate().\n\nDoes that clear things up?"}, {"count": 6, "tags": [], "text": "Sorry, you're right, I forgot about HttpSessionActivationListener objects being\nstored in the session itself.\n\nAs far as I can see, the spec doesn't say what order these events are fired\nrelative to the other types of events. Your idea that contextInitialized should\ncome before sessionDidActivate sounds reasonable, but you may be stuck in the\ntrap of \"Tomcat follows the spec so it doesn't need to be fixed.\"\n", "is_private": false, "id": 106156, "creation_time": "2007-08-01T10:29:05Z", "time": "2007-08-01T10:29:05Z", "creator": "len.popp@gmail.com", "bug_id": 42934, "attachment_id": null}, {"count": 7, "tags": [], "text": "Ya, that's the trap I'm afraid of. :)  I'm hoping that because it is a Seam\nproblem perhaps Jboss might be able to assert some of their influence over\ntomcat to get them to fix it....but I guess we'll see.  Thanks for looking at\nthe issue.", "attachment_id": null, "id": 106157, "creator": "youngm@gmail.com", "time": "2007-08-01T10:31:45Z", "bug_id": 42934, "creation_time": "2007-08-01T10:31:45Z", "is_private": false}, {"count": 8, "tags": [], "creator": "alexanderkiel@gmx.net", "attachment_id": null, "id": 110260, "time": "2007-11-06T04:37:11Z", "bug_id": 42934, "creation_time": "2007-11-06T04:37:11Z", "is_private": false, "text": "I really vote for this. \n\nMy own web application needs the same functionality. I use a spring\nWebApplicationContext and some of my Session Vales need beans from this context.\nSo I store them transient in the session values and fetch them at\nsessionDidActivate. But I can not do this if my context is not up and running."}, {"count": 9, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 116390, "time": "2008-05-08T15:18:40Z", "bug_id": 42934, "creation_time": "2008-05-08T15:18:40Z", "is_private": false, "text": "Looking at this now...\n\nEven with the latest spec things are not explicit and could be read either way. However, 1) I agree with the assessment that logically you would expect the context to be present before the sessions are activated 2) and the last paragraph SRV.16.1.7 hints in this direction as well.\n\nI'll see how easy it is to make the change."}, {"count": 10, "tags": [], "bug_id": 42934, "attachment_id": null, "is_private": false, "id": 116391, "time": "2008-05-08T15:19:11Z", "creator": "markt@apache.org", "creation_time": "2008-05-08T15:19:11Z", "text": "See also bug 30344."}, {"count": 11, "tags": [], "text": "I have committed a fix to trunk. Initial testing looks OK but I will eave it a few weeks to see if any issues arise before proposing it for 6.0.x", "attachment_id": null, "id": 116434, "creator": "markt@apache.org", "time": "2008-05-09T13:21:57Z", "bug_id": 42934, "creation_time": "2008-05-09T13:21:57Z", "is_private": false}, {"count": 12, "tags": [], "creator": "youngm@gmail.com", "attachment_id": null, "id": 116467, "time": "2008-05-10T20:21:33Z", "bug_id": 42934, "creation_time": "2008-05-10T20:21:33Z", "is_private": false, "text": "Thanks tons for taking this on Mark.\n\nMike"}, {"count": 13, "tags": [], "text": "This is now proposed for 6.0.x", "is_private": false, "id": 117159, "creator": "markt@apache.org", "time": "2008-05-29T15:05:08Z", "bug_id": 42934, "creation_time": "2008-05-29T15:05:08Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 42934, "is_private": false, "id": 117480, "attachment_id": null, "creator": "markt@apache.org", "creation_time": "2008-06-08T05:51:14Z", "time": "2008-06-08T05:51:14Z", "text": "This has been committed to 6.0.x and will be in 6.0.17 onwards."}]