[{"count": 0, "tags": [], "bug_id": 42558, "text": "Make it possible to use lenya.properties.xml per publication, in addition to the\nexisting places (Lenya, modules). The precedence order is:\n\n1. Publication\n2. Lenya local\n3. Modules\n4. Lenya", "id": 103885, "time": "2007-05-31T08:43:53Z", "creator": "mangst@inventec.ch", "creation_time": "2007-05-31T08:43:53Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 42558, "attachment_id": 20301, "id": 103886, "time": "2007-05-31T08:46:04Z", "creator": "mangst@inventec.ch", "creation_time": "2007-05-31T08:46:04Z", "is_private": false, "text": "Created attachment 20301\nPatch for enhancement described below"}, {"count": 2, "tags": [], "bug_id": 42558, "text": "Renaming Lenya 1.4 to 2.0", "id": 105500, "time": "2007-07-16T01:58:54Z", "creator": "thorsten@apache.org", "creation_time": "2007-07-16T01:58:54Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": 20569, "creator": "mangst@inventec.ch", "is_private": false, "id": 106072, "time": "2007-07-30T13:41:49Z", "bug_id": 42558, "creation_time": "2007-07-30T13:41:49Z", "tags": [], "text": "Created attachment 20569\nPatch for enhancement described below, second version\n\nJust tried another one. I don't know if in loadPublicationPropertiesIfNotDone\n\n- the avalon stuff is handled correctly (does the publication have to be\nreleased?)\n\n- there could be synchronization issues or if the ThreadSafe implementation of\nPropertiesModule takes already care of this"}, {"count": 4, "tags": [], "bug_id": 42558, "attachment_id": null, "id": 106076, "time": "2007-07-30T14:05:13Z", "creator": "mangst@inventec.ch", "creation_time": "2007-07-30T14:05:13Z", "is_private": false, "text": "In initialize() the properties of all modules are collected during the Cocoon\ncomponents initialization phase regardless of the publications referencing them.\nThese references are probably unknown at this point, but I think this should be\ndocumented because it can lead to property name conflicts between modules. The\nsame holds true for the publication properties. The way I implemented them a\npublication should not use properties of another publication, is not even\nguaranteed to see them and name conflicts could occur as well (not to mention\npublication templating). \n\nI see two solutions:\n\n- modules and publications have to use name prefixes\n\n- properties have to be saved (and may only be read) together with an \"owner id\"\n"}, {"count": 5, "tags": [], "bug_id": 42558, "attachment_id": null, "text": "(In reply to comment #4)\n> I see two solutions:\n> \n> - modules and publications have to use name prefixes\n> \n> - properties have to be saved (and may only be read) together with an \"owner id\"\n\ni think we should make prefixes mandatory: for modules, it should be\n<module-name>.your.property. for publications, it could be\n<pub-id>.your.property, but i guess we should leave the choice to the admin.\nusers may also want to overload global properties...\n\nplus we need to find out and document really well in which order properties are\nloaded and how to override them.", "id": 106085, "time": "2007-07-30T22:50:48Z", "creator": "nettings@apache.org", "creation_time": "2007-07-30T22:50:48Z", "is_private": false}, {"count": 6, "attachment_id": null, "creator": "nettings@apache.org", "is_private": false, "id": 106086, "time": "2007-07-30T23:01:52Z", "bug_id": 42558, "creation_time": "2007-07-30T23:01:52Z", "tags": [], "text": "(In reply to comment #3)\n> Created an attachment (id=20569) [edit]\n> Patch for enhancement described below, second version\n> \n> Just tried another one. I don't know if in loadPublicationPropertiesIfNotDone\n> \n> - the avalon stuff is handled correctly (does the publication have to be\n> released?)\n\niiuc, you're not dealing with avalon components directly (PublicationUtil does\nit for you). so you should be fine.\n \n> - there could be synchronization issues or if the ThreadSafe implementation of\n> PropertiesModule takes already care of this\n \nnot sure about this. someone else should look at it. anyone?\n\nanyway, i think this is a very useful addition, and i'm +1 for adding it.\n\n"}, {"count": 7, "tags": [], "creator": "thorsten@apache.org", "attachment_id": null, "text": "(In reply to comment #3)\n> Created an attachment (id=20569) [edit]\n> Patch for enhancement described below, second version\n> \n> Just tried another one. I don't know if in loadPublicationPropertiesIfNotDone\n> \n> - the avalon stuff is handled correctly (does the publication have to be\n> released?)\n\nNo, you need to release all components that you looked up with\nmanager.lookup(...) AFAIR. So it is good as gold.\n\n> \n> - there could be synchronization issues or if the ThreadSafe implementation of\n> PropertiesModule takes already care of this\n\nWhy do you think of synchronization issues? > \n\n", "id": 106213, "time": "2007-08-02T13:54:56Z", "bug_id": 42558, "creation_time": "2007-08-02T13:54:56Z", "is_private": false}, {"count": 8, "tags": [], "creator": "thorsten@apache.org", "attachment_id": null, "id": 106219, "creation_time": "2007-08-02T14:08:06Z", "time": "2007-08-02T14:08:06Z", "bug_id": 42558, "text": "(In reply to comment #5)\n> (In reply to comment #4)\n> > I see two solutions:\n> > \n> > - modules and publications have to use name prefixes\n> > \n> > - properties have to be saved (and may only be read) together with an \"owner id\"\n> \n> i think we should make prefixes mandatory: for modules, it should be\n> <module-name>.your.property. for publications, it could be\n> <pub-id>.your.property, but i guess we should leave the choice to the admin.\n> users may also want to overload global properties...\n> \n\nI am as well for prefixing, additional a check/record of double named properties.\n\n> plus we need to find out and document really well in which order properties are\n> loaded and how to override them.\n\nThe case of double properties is very common because we implement a fallback\nmechanism aka ant properties files. \n\nAnt properties work the following order:\n1. cli (e.g. -Dmodule=a)\n2. build files - normally more then one (local.)build.properties. First in wins.\n\nFor us it is (before the patch)\na) SystemProperties\nb) local.lenya.properties.xml\nc) modules\nd) lenya.properties.xml\n\nI thought I wrote some documentation about it but cannot find it. ", "is_private": false}, {"count": 9, "tags": [], "text": "One thing that I do not like too much is the \nloadPublicationPropertiesIfNotDone\nnot been done in initialize().\n\nATM I am unsure how to do it myself maybe Andreas has an idea. \n\nIf not I will apply the patch within the next 72 hours.", "is_private": false, "id": 106223, "creator": "thorsten@apache.org", "time": "2007-08-02T15:05:11Z", "bug_id": 42558, "creation_time": "2007-08-02T15:05:11Z", "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 42558, "attachment_id": null, "id": 106233, "time": "2007-08-03T01:09:32Z", "creator": "andreas@apache.org", "creation_time": "2007-08-03T01:09:32Z", "is_private": false, "text": "(In reply to comment #7)\n\n>> \n>> - there could be synchronization issues or if the ThreadSafe implementation of\n>> PropertiesModule takes already care of this\n> \n> Why do you think of synchronization issues?\n\nBecause on should always think about synchronization issues :)\nBut at a first glance the module doesn't change its state (or the state of\nanother object) after the initialization, so this should be fine.\n"}, {"count": 11, "tags": [], "bug_id": 42558, "attachment_id": null, "text": "(In reply to comment #10)\n\n> Because on should\n\nThat should read \"one\", sorry.\n\n", "id": 106234, "time": "2007-08-03T01:10:05Z", "creator": "andreas@apache.org", "creation_time": "2007-08-03T01:10:05Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 42558, "attachment_id": null, "id": 106247, "time": "2007-08-03T03:45:06Z", "creator": "thorsten@apache.org", "creation_time": "2007-08-03T03:45:06Z", "is_private": false, "text": "(In reply to comment #10)\n> (In reply to comment #7)\n> >> - there could be synchronization issues or if the ThreadSafe implementation of\n> >> PropertiesModule takes already care of this\n> > \n> > Why do you think of synchronization issues?\n> \n> Because on should always think about synchronization issues :)\n> But at a first glance the module doesn't change its state (or the state of\n> another object) after the initialization, so this should be fine.\n> \n\n(see comment #9)\n> One thing that I do not like too much is the \n> loadPublicationPropertiesIfNotDone\n> not been done in initialize().\n\nNow I understand the synchronization issues. The module changes state with the\ngetAtribute!"}, {"count": 13, "tags": [], "bug_id": 42558, "attachment_id": null, "text": "thorsten, markus: what's the state of this issue? i think it would be nice to\nhave it in 2.0, since it seems to address a real user need.\nmarkus, if you've got some time: can you describe what you're using this for?\nthen we can add some documentation once it's in.", "id": 106667, "time": "2007-08-12T14:34:26Z", "creator": "nettings@apache.org", "creation_time": "2007-08-12T14:34:26Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 42558, "text": "Just realized that I made a really stupid mistake: I replied to some of the\nabove posts on the dev mailing list instead of bugzilla. Really silly. I\napologize for this.\n\nThe state of this issue is as follows:\n\n1.0\n\nThe publication properties cannot be read in the initialization phase. At least\nI don't know how. The approach with\n\nRequest request = contextUtility.getRequest();\nDocumentFactory factory = DocumentUtil.getDocumentFactory(serviceManager, request);\nPublication[] pubs = publicationManager.getPublications(factory);\n\ncannot be used in the initialization phase. You get \"Unable to get the request\nobject from the context\" when you try it. Being able to call\npublicationManager.getPublications() without the factory parameter could maybe\nhelp, but this doesn't seem to be possible unless some of the recent changes of\nAndreas have changed this.\n\n1.1\n\nThis leads to the workaround with loadPublicationPropertiesIfNotDone, called\nfrom all get* methods which circumvents the problem by lazy loading the\npublication properties.\n\n1.2\n\nThis in turn led to the question if this could cause synchronization problems. I\ndon't think calling loadPublicationPropertiesIfNotDone twice in parallel would\nbe very dangerous but I am not fit enough to judge this.\n\n2.0\n\nJ\u00f6rn suggested to (re-)use aggregating fallback for properties of templated\npublications.\n\n2.1\n\nI found AggregatingFallbackSourceFactory which provides the protocol called\n\"aggregate-fallback://\". I think to be able to reuse it some of the code of\ngetSource would have to be refactored. I am not able to do this myself without\nhelp. If anybody with a better understanding of the big picture could have a\nlook at it and tell me if this is the right way to go i would give it a try.\n(There are some similarities in code with FallbackSourceFactory.getSource, so\nmaybe this would have to be taken into account as well.)", "id": 106980, "time": "2007-08-21T13:20:54Z", "creator": "mangst@inventec.ch", "creation_time": "2007-08-21T13:20:54Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 42558, "text": "Committed revision 568857.\n\nI as well added a sample to the default pub in revision 568859.\n\nThere are still some issues to solve regarding the documentation (we do not have\nany).", "id": 107131, "time": "2007-08-23T00:17:53Z", "creator": "thorsten@apache.org", "creation_time": "2007-08-23T00:17:53Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "text": "(In reply to comment #14)\n> ...\n> 2.0\n> \n> J\u00f6rn suggested to (re-)use aggregating fallback for properties of templated\n> publications.\n> \n> 2.1\n> \n> I found AggregatingFallbackSourceFactory which provides the protocol called\n> \"aggregate-fallback://\". I think to be able to reuse it some of the code of\n> getSource would have to be refactored. I am not able to do this myself without\n> help. If anybody with a better understanding of the big picture could have a\n> look at it and tell me if this is the right way to go i would give it a try.\n> (There are some similarities in code with FallbackSourceFactory.getSource, so\n> maybe this would have to be taken into account as well.)\n\nActually in loadXMLPropertiesFromURI we use a Source to resolve the uri meaning \nyou can use loadXMLPropertiesFromURI(filteringProperties,\n\"aggregate-fallback://\"+PROPERTY_NAME, true);\n\n", "is_private": false, "id": 107133, "creator": "thorsten@apache.org", "time": "2007-08-23T00:22:32Z", "bug_id": 42558, "creation_time": "2007-08-23T00:22:32Z", "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 42558, "text": "> Actually in loadXMLPropertiesFromURI we use a Source to resolve the uri meaning \n> you can use loadXMLPropertiesFromURI(filteringProperties,\n> \"aggregate-fallback://\"+PROPERTY_NAME, true);\n\nI made an attempt to do that. It works for me so far, but there is the function\nPropertiesModule.getAttributeValues which i don't fully understand. I put some\ncode there but commented it out. Maybe somebody can review it and enlighten\nme... Thanks!\n\nWill draft a short doc and put it in the wiki.\n", "id": 109739, "time": "2007-10-25T09:35:13Z", "creator": "mangst@inventec.ch", "creation_time": "2007-10-25T09:35:13Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 42558, "attachment_id": 21044, "id": 109740, "time": "2007-10-25T09:38:40Z", "creator": "mangst@inventec.ch", "creation_time": "2007-10-25T09:38:40Z", "is_private": false, "text": "Created attachment 21044\nPatch for aggregate-fallback, requires older patch (which is already applied)."}, {"count": 19, "tags": [], "bug_id": 42558, "attachment_id": null, "id": 109744, "time": "2007-10-25T12:02:35Z", "creator": "mangst@inventec.ch", "creation_time": "2007-10-25T12:02:35Z", "is_private": false, "text": "I put a documentation draft on the wiki:\nhttp://wiki.apache.org/lenya/LenyaProperties?action=show. It is open for\ndiscussion. Comments and edits welcome.\n"}, {"count": 20, "tags": [], "bug_id": 42558, "attachment_id": null, "text": "Any news here ? \nStill required ?", "id": 138554, "time": "2010-07-20T09:04:41Z", "creator": "florent.andre-dev@4sengines.com", "creation_time": "2010-07-20T09:04:41Z", "is_private": false}]