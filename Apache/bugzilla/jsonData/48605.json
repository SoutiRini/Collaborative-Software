[{"count": 0, "tags": [], "creator": "grahamtriggs@gmail.com", "attachment_id": null, "text": "When deploying applications, new file resources (operating system level) are being consumed faster than they are released.\n\nIn some cases (ie. starting Tomcat when there are many applications in the webapps folder), this can lead to the maximum open file limits being breached - resulting in class not found exceptions and 'incomplete' deployments.\n\nSubsequently reloading an incompletely loaded application may or may not work - file handles consumed during loading are being released, but it appears that you can also run into the situation where the failure to load a class is cached, and so it doesn't check again - but undeploying and redeploying the application will cause it to be loaded correctly.\n\nThis can be worked around by increasing the maximum number of concurrently open files in the operating system. But ideally, the container should be better at gracefully recovering from an failure to load a class and trying again.\n\nThis also applies to Tomcat 5.5", "id": 133877, "time": "2010-01-25T03:58:35Z", "bug_id": 48605, "creation_time": "2010-01-25T03:58:35Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 48605, "attachment_id": null, "is_private": false, "id": 134115, "time": "2010-02-01T16:47:04Z", "creator": "markt@apache.org", "creation_time": "2010-02-01T16:47:04Z", "text": "The webapp class loader caches both found and not found resources for performance reasons. If you have a large number of web applicatoins then it is expected that you'll need to increase the maximum number of open file descriptors."}]