[{"count": 0, "tags": [], "creator": "BergerT@aol.com", "attachment_id": null, "text": "I had the pleasure to install new hardware and thus installed the latest version \nof Tomcat on the new Windows 2000 server (the old NT had 4.1.x). When I logoff, \nthe \"Apache Tomcat 5.0.2\" service is stoppped.\n\nNOTE: this problem did not exist in v4 on Win/NT.\nI am running Tomcat 5.0.2, j2sdk1.4.1_02, j2re1.4.1_02.", "id": 37845, "time": "2003-05-27T14:34:18Z", "bug_id": 20263, "creation_time": "2003-05-27T14:34:18Z", "is_private": false}, {"count": 1, "tags": [], "creator": "remm@apache.org", "text": "Tomcat 5.0.x is right now alpha status, and has a brand new Windows wrapper.\nI can reproduce your problem on my XP Pro with the latest binary from\ncommons-daemon. The service is \"correctly\" started using the \"RS\" option, so I\ndon't know what is failing. Mladen, any ideas ?", "id": 37849, "time": "2003-05-27T15:21:06Z", "bug_id": 20263, "creation_time": "2003-05-27T15:21:06Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 20263, "attachment_id": null, "id": 37857, "time": "2003-05-27T17:55:17Z", "creator": "mturk@apache.org", "creation_time": "2003-05-27T17:55:17Z", "is_private": false, "text": "\nThe problem is with the console handler.\nI'll fix that ASAP.\n"}, {"attachment_id": null, "tags": [], "creator": "mturk@apache.org", "is_private": false, "count": 3, "id": 37861, "time": "2003-05-27T18:57:59Z", "bug_id": 20263, "creation_time": "2003-05-27T18:57:59Z", "text": "\nThe problem is with detached java.exe or javaw.exe.\nThe solution is to add the '-Xrs' (to startp JVM options.\nReducing signals doesnt installs java.exe's own console control handler,\nreather inherits one from parent process (procrun).\n\nDo not use tomcatw for //ES from 5.0.2, cause it is broken.\nUse the current binaries from CVS.\n\nHere is the explanation from MSDEV.\n\nFor example, if you install a SIGBREAK handler via the C run-time function \nsignal(), the function installs a handler which overrides the default handler. \nThis causes the application to exit when receiving a CTRL_LOGOFF event even \nthough it was launched from a service. \n\nThe only solution for java.exe to survive the CTRL_LOGOFF signal is to use the \nmentioned '-Xrs' option.\n\nThe Java Docs says:\n\nThere are two consequences of specifying -Xrs: \nSIGQUIT thread dumps are not available. \nUser code is responsible for causing shutdown hooks to run, for example by \ncalling System.exit() when the JVM is to be terminated. \n\nRemmy does that bother us?\nIf not consider adding '#-Xrs#' to --JavaOptions during install.\n \n\n\n"}, {"text": "I will do a quick test and apply the change if successful. I also had a problem\nthat the service set as automatic wasn't started on startup.\n\nBTW, does it mean that a Tomcat run in \"GUI mode\" with the systray icon will\nalso survive a logoff ? Otherwise, there won't been any way to kill it :-(", "tags": [], "bug_id": 20263, "is_private": false, "count": 4, "id": 38369, "time": "2003-06-04T16:43:27Z", "creator": "remm@apache.org", "creation_time": "2003-06-04T16:43:27Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 38556, "time": "2003-06-08T11:02:00Z", "bug_id": 20263, "creation_time": "2003-06-08T11:02:00Z", "is_private": false, "text": "I've added the change to the installer code, so this shouldn't be an issue with\n5.0.3."}]