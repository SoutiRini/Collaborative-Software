[{"count": 0, "tags": [], "text": "The 'else if (cr.isUnderflow() & !last)' looks suspicious like it should be logical &&, not a bitwise &.\n\n\n        // Frame is fully received\n        // Convert bytes to UTF-8\n        while (true) {\n            CoderResult cr = utf8DecoderMessage.decode(messageBufferBinary,\n                    messageBufferText, last);\n            if (cr.isError()) {\n                throw new WsIOException(new CloseReason(\n                        CloseCodes.NOT_CONSISTENT,\n                        sm.getString(\"wsFrame.invalidUtf8\")));\n            } else if (cr.isOverflow()) {\n                // Ran out of space in text buffer - flush it\n                if (usePartial()) {\n                    messageBufferText.flip();\n                    sendMessageText(false);\n                    messageBufferText.clear();\n                } else {\n                    throw new WsIOException(new CloseReason(\n                            CloseCodes.TOO_BIG,\n                            sm.getString(\"wsFrame.textMessageTooBig\")));\n                }\n            } else if (cr.isUnderflow() & !last) {\n                // End of frame and possible message as well.\n\n                if (continuationExpected) {\n                    // If partial messages are supported, send what we have\n                    // managed to decode\n                    if (usePartial()) {\n                        messageBufferText.flip();\n                        sendMessageText(false);\n                        messageBufferText.clear();\n                    }\n                    messageBufferBinary.compact();\n                    newFrame();\n                    // Process next frame\n                    return true;\n                } else {\n                    // Make sure coder has flushed all output\n                    last = true;\n                }\n            } else {\n                // End of message\n                messageBufferText.flip();\n                sendMessageText(true);\n\n                newMessage();\n                return true;\n            }\n        }", "is_private": false, "id": 185946, "creator": "anthony@whitford.com", "time": "2015-10-25T22:08:50Z", "bug_id": 58539, "creation_time": "2015-10-25T22:08:50Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "In contrast to bug #58538, this one does not require non-short-circuiting evaluation semantics. I think in this case, it was probably intended to be a logical && operation.", "is_private": false, "id": 186019, "creator": "chris@christopherschultz.net", "time": "2015-10-27T15:36:56Z", "bug_id": 58539, "creation_time": "2015-10-27T15:36:56Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Fixed in trunk, 8.0.x (for 8.0.29 onwards) and 7.0.x (for 7.0.66 onwards).", "is_private": false, "id": 186219, "creator": "markt@apache.org", "time": "2015-11-03T09:25:17Z", "bug_id": 58539, "creation_time": "2015-11-03T09:25:17Z", "attachment_id": null}]