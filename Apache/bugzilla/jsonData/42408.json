[{"count": 0, "tags": [], "creator": "programvaruverkstad@yahoo.se", "attachment_id": null, "is_private": false, "id": 103185, "time": "2007-05-14T08:40:52Z", "bug_id": 42408, "creation_time": "2007-05-14T08:40:52Z", "text": "Transcoders have a problem with headless mode. The reason is they invoke\nToolkit.getDefaultToolkit().getScreenResolution() that throws\njava.awt.HeadlessException (a RuntimeException) which then trips up the application.\n\nCalls to the above method must catch the exception and assign a default screen\nresolution, 100 DPI, for instance. I guess a serious solution would take a\nparameter. \n\nThe following code contains such calls:\ntranscoder/ToSVGAbstractTranscoder.java\ntranscoder/wmf/tosvg/AbstractWMFReader.java\ntranscoder/wmf/tosvg/WMFPainter.java\n\nRunning transcoders in headless mode is very common."}, {"count": 1, "tags": [], "bug_id": 42408, "attachment_id": null, "id": 103213, "time": "2007-05-15T00:47:48Z", "creator": "info@dvholten.de", "creation_time": "2007-05-15T00:47:48Z", "is_private": false, "text": "i work on a fix for the transcoder-functionality that takes care of headless\nenvironments and accepts a user-provided resolution.\n"}, {"count": 2, "tags": [], "bug_id": 42408, "attachment_id": null, "id": 107145, "time": "2007-08-23T02:44:15Z", "creator": "herve.girod@club-internet.fr", "creation_time": "2007-08-23T02:44:15Z", "is_private": false, "text": "(In reply to comment #1)\n> i work on a fix for the transcoder-functionality that takes care of headless\n> environments and accepts a user-provided resolution.\n> \n\nI have a patch available, if you are interested. Should be able to send it\nbefore end of Week-end."}, {"count": 3, "tags": [], "creator": "herve.girod@club-internet.fr", "attachment_id": null, "is_private": false, "id": 107147, "time": "2007-08-23T02:45:11Z", "bug_id": 42408, "creation_time": "2007-08-23T02:45:11Z", "text": "*** Bug 43022 has been marked as a duplicate of this bug. ***"}, {"count": 4, "tags": [], "bug_id": 42408, "attachment_id": 21029, "id": 109674, "time": "2007-10-23T15:49:36Z", "creator": "herve.girod@club-internet.fr", "creation_time": "2007-10-23T15:49:36Z", "is_private": false, "text": "Created attachment 21029\nfix the problem in WMF transcoders"}, {"count": 5, "tags": [], "creator": "herve.girod@club-internet.fr", "attachment_id": null, "is_private": false, "id": 109675, "time": "2007-10-23T15:49:57Z", "bug_id": 42408, "creation_time": "2007-10-23T15:49:57Z", "text": "(In reply to comment #4)\n> Created an attachment (id=21029) [edit]\n> fix the problem in WMF transcoders\n> \nThis should be fixed now\n"}, {"count": 6, "tags": [], "bug_id": 42408, "attachment_id": null, "id": 109749, "time": "2007-10-25T13:35:50Z", "creator": "herve.girod@club-internet.fr", "creation_time": "2007-10-25T13:35:50Z", "is_private": false, "text": "(In reply to comment #5)\n> (In reply to comment #4)\n> > Created an attachment (id=21029) [edit] [edit]\n> > fix the problem in WMF transcoders\n> > \n> This should be fixed now\n> \n\nIt also accepts a new hint for user-provided resolution. If environment is\nheadless, a fixed default resolution is assumed, else the default resolution is\nthe screen resolution. "}, {"count": 7, "tags": [], "bug_id": 42408, "attachment_id": null, "text": "Hakan, can you confirm this solves the issue?", "id": 112361, "time": "2007-12-31T14:55:20Z", "creator": "cam@apache.org", "creation_time": "2007-12-31T14:55:20Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 42408, "attachment_id": null, "id": 112799, "time": "2008-01-14T02:55:39Z", "creator": "programvaruverkstad@yahoo.se", "creation_time": "2008-01-14T02:55:39Z", "is_private": false, "text": "(In reply to comment #7)\n> Hakan, can you confirm this solves the issue?\n\nCrazy, but I'm swamped by another project, can't do a proper verification now.\nReally sorry about this unhelpful attitude. I've read the patch though, it seems\ntotally relevant and to solve the issue with a margin.\n\n"}, {"count": 9, "tags": [], "text": "I can at least confirm that this patch works for me, and it's nice to have a way\nto override the resolution (my original code to work around this had the DPI\nhard-coded to 100dpi, so I will probably use this functionality to keep it at\n100dpi.)\n", "attachment_id": null, "bug_id": 42408, "id": 112935, "time": "2008-01-16T17:02:44Z", "creator": "trejkaz@trypticon.org", "creation_time": "2008-01-16T17:02:44Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 42408, "attachment_id": null, "id": 132383, "time": "2009-11-29T03:31:54Z", "creator": "helder.magalhaes@gmail.com", "creation_time": "2009-11-29T03:31:54Z", "is_private": false, "text": "*** Bug 47277 has been marked as a duplicate of this bug. ***"}, {"count": 11, "tags": [], "text": "Created attachment 24629\nPatch v1.1\n\nI guess the original patch also solves a (somehow unrelated) bug in \"getViewportHeightInch\" (\"AbstractWMFReader.java\"): resolution was missing there. The updated patch also fixes an issue in \"getViewportWidthInch\" (same file), as the resolution was missing there (incoherency with \"getViewportHeightInch\" above). Or perhaps I'm missing something... ;-)\n\nThe patch was updated to the latest trunk revision (820114, as of this writing). I've also included a bunch of whitespace fixes in the modified source files, which makes the patch slightly harder to read -- sorry...", "is_private": false, "id": 132384, "creator": "helder.magalhaes@gmail.com", "time": "2009-11-29T04:03:16Z", "bug_id": 42408, "creation_time": "2009-11-29T04:03:16Z", "attachment_id": 24629}, {"count": 12, "tags": [], "text": "Fixed bug properties to reflect patch being updated to trunk and also added the usual flags to highlight the fact that a patch is available. :-)", "attachment_id": null, "bug_id": 42408, "id": 132385, "time": "2009-11-29T04:05:50Z", "creator": "helder.magalhaes@gmail.com", "creation_time": "2009-11-29T04:05:50Z", "is_private": false}, {"count": 13, "tags": [], "text": "It would be nice if someone could commit this patch or otherwise fix this problem, which causes the testWMF() test cases in FOP's org.apache.fop.image.loader.batik.Image*TestCase to fail when java.awt.headless is true.\n\nThe problem code is found in AbstractWMFReader as follows:\n\npublic abstract class AbstractWMFReader {\n\n    // todo should be able to run in headless environment - as is written, will throw exception during init                                                                                               \n    public static final float PIXEL_PER_INCH = Toolkit.getDefaultToolkit().getScreenResolution();\n    public static final float MM_PER_PIXEL = 25.4f / Toolkit.getDefaultToolkit().getScreenResolution();\n\n    ...\n}\n\nThe calls to getScreenResolution() throw a HeadlessException.\n\nRegards,\nGlenn", "attachment_id": null, "bug_id": 42408, "id": 139729, "time": "2010-09-07T05:39:01Z", "creator": "gadams@apache.org", "creation_time": "2010-09-07T05:39:01Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 42408, "attachment_id": null, "id": 139749, "time": "2010-09-08T01:49:50Z", "creator": "helder.magalhaes@gmail.com", "creation_time": "2010-09-08T01:49:50Z", "is_private": false, "text": "(In reply to comment #13)\n> It would be nice if someone could commit this patch or otherwise fix this\n> problem, which causes the testWMF() test cases in FOP's\n> org.apache.fop.image.loader.batik.Image*TestCase to fail when java.awt.headless\n> is true.\n\nGlen, are you able to confirm the attached patch fixes the bug in your current test environment? It does touch that code portion and should fix it, in addition to allow configuration of resolution.\n\n\n> Regards,\n> Glenn\n\nThanks,\n Helder"}, {"count": 15, "tags": [], "bug_id": 42408, "attachment_id": null, "id": 140510, "time": "2010-10-06T09:10:44Z", "creator": "helder.magalhaes@gmail.com", "creation_time": "2010-10-06T09:10:44Z", "is_private": false, "text": "I guess we should get this into 1.8 release (see bug 50045). The feature is quite interesting for server-side processing, and a patch is already available: a help request is underway in order to confirm everything is fine (if anyone is able to, please provide the needed information or the steps required in order to confirm this)."}, {"count": 16, "tags": [], "text": "(In reply to comment #14)\n> Glen, are you able to confirm the attached patch fixes the bug in your current\n> test environment?\n\nPing!\n\n\nThis can be \"easily\" tested locally (in a system with graphics adapted using a command line switch \"java -Djava.awt.headless=true [...]\" [1].\n\nHelp, anyone?\n\n\n[1] http://java.sun.com/developer/technicalArticles/J2SE/Desktop/headless/", "attachment_id": null, "bug_id": 42408, "id": 141256, "time": "2010-10-30T04:40:23Z", "creator": "helder.magalhaes@gmail.com", "creation_time": "2010-10-30T04:40:23Z", "is_private": false}, {"count": 17, "tags": [], "bug_id": 42408, "attachment_id": null, "text": "I applied the patch, built batik-all.jar, inserted it into the fop lib\ndirectory, and ran fop's junit tests in a graphics environment. I got\nno errors. Then I ran fop's junit tests in headless mode. I got one\nerror, which is the same error I get without the patch. This indicates\nthe patch did not correct the piece of code that uses a display in\nfop's junit tests.\n\nThe offending method that calls\nHeadlessGraphicsEnvironment.getDefaultScreenDevice is a method in\nxmlgraphics-commons, java2d.ps.PSGraphics2D.getDeviceConfiguration.\nMaybe fop's headless junit test problem is not a batik problem, but a\nXGC problem.\n\n    [junit] No X11 DISPLAY variable was set, but this program performed an operation which requires it.\n    [junit] java.awt.HeadlessException: \n    [junit] No X11 DISPLAY variable was set, but this program performed an operation which requires it.\n    [junit] \tat sun.java2d.HeadlessGraphicsEnvironment.getDefaultScreenDevice(HeadlessGraphicsEnvironment.java:82)\n    [junit] \tat org.apache.xmlgraphics.java2d.ps.PSGraphics2D.getDeviceConfiguration(PSGraphics2D.java:824)\n    [junit] \tat org.apache.batik.ext.awt.image.GraphicsUtil.getDestination(Unknown Source)\n    [junit] \tat org.apache.batik.ext.awt.image.GraphicsUtil.getDestinationColorModel(Unknown Source)\n    [junit] \tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(Unknown Source)\n    [junit] \tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(Unknown Source)\n    [junit] \tat org.apache.batik.ext.awt.image.renderable.PadRable8Bit.paintRable(Unknown Source)\n    [junit] \tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(Unknown Source)\n    [junit] \tat org.apache.batik.ext.awt.image.renderable.PadRable8Bit.paintRable(Unknown Source)\n    [junit] \tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(Unknown Source)\n    [junit] \tat org.apache.batik.ext.awt.image.renderable.FilterChainRable8Bit.paintRable(Unknown Source)\n    [junit] \tat org.apache.batik.ext.awt.image.GraphicsUtil.drawImage(Unknown Source)\n    [junit] \tat org.apache.batik.gvt.AbstractGraphicsNode.paint(Unknown Source)\n    [junit] \tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(Unknown Source)\n    [junit] \tat org.apache.batik.gvt.AbstractGraphicsNode.paint(Unknown Source)\n    [junit] \tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(Unknown Source)\n    [junit] \tat org.apache.batik.gvt.AbstractGraphicsNode.paint(Unknown Source)\n    [junit] \tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(Unknown Source)\n    [junit] \tat org.apache.batik.gvt.CanvasGraphicsNode.primitivePaint(Unknown Source)\n    [junit] \tat org.apache.batik.gvt.AbstractGraphicsNode.paint(Unknown Source)\n    [junit] \tat org.apache.batik.gvt.CompositeGraphicsNode.primitivePaint(Unknown Source)\n    [junit] \tat org.apache.batik.gvt.AbstractGraphicsNode.paint(Unknown Source)\n    [junit] \tat org.apache.fop.render.ps.AbstractPSTranscoder.transcode(AbstractPSTranscoder.java:154)\n    [junit] \tat org.apache.batik.transcoder.XMLAbstractTranscoder.transcode(Unknown Source)\n    [junit] \tat org.apache.batik.transcoder.SVGAbstractTranscoder.transcode(Unknown Source)\n    [junit] \tat org.apache.fop.AbstractBasicTranscoderTestCase.testGenericPDFTranscoder(AbstractBasicTranscoderTestCase.java:70)", "id": 141600, "time": "2010-11-10T10:08:17Z", "creator": "spepping@apache.org", "creation_time": "2010-11-10T10:08:17Z", "is_private": false}, {"count": 18, "tags": [], "text": "I made an error in the above comment. The patch does remove 5 errors in fop's junit tests in headless mode. All 5 errors occur with both batik-all-1.7.jar and batik-all-1.8pre.jar in fop's lib directory.", "attachment_id": null, "bug_id": 42408, "id": 141760, "time": "2010-11-17T07:34:36Z", "creator": "spepping@apache.org", "creation_time": "2010-11-17T07:34:36Z", "is_private": false}, {"count": 19, "tags": [], "creator": "helder.magalhaes@gmail.com", "attachment_id": null, "id": 141879, "time": "2010-11-20T19:06:10Z", "bug_id": 42408, "creation_time": "2010-11-20T19:06:10Z", "is_private": false, "text": "(In reply to comment #18)\n> I made an error in the above comment. The patch does remove 5 errors in fop's\n> junit tests in headless mode. All 5 errors occur with both batik-all-1.7.jar\n> and batik-all-1.8pre.jar in fop's lib directory.\n\nGreat! :-) Does apparently mean that the patch should definitely be applied. Could you please just confirm that there are no more known errors related with Batik with the patch applied? (I was mostly curious to known whether the patch could even be further improved.) Thanks! ;-)"}, {"count": 20, "tags": [], "creator": "jeremias@apache.org", "attachment_id": null, "id": 145186, "time": "2011-03-22T10:24:43Z", "bug_id": 42408, "creation_time": "2011-03-22T10:24:43Z", "is_private": false, "text": "Whoops, apparently I've recently fixed this problem with revision http://svn.apache.org/viewvc?rev=1076146&view=rev without noticing the open Bugzilla ticket. I seem to have solved this in a slightly different way than suggested.\n\nPlease reopen if you find that my solution is suboptimal."}]