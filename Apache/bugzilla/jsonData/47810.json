[{"count": 0, "attachment_id": null, "bug_id": 47810, "text": "Hi,\n\nThis was recently reported in launchpad:\n\nBinary package hint: apache2\n\nIf I send a request containing the header \"Expect: 100-continue\" to a location that is directed to a backend HTTP server using mod_proxy_http, then the following happens:\n\nThe client sends the request:\n\n   PUT /some/path/somewhere HTTP/1.1\n   Expect: 100-continue\n   ...\n\nThen apache will respond with 100 Continue even though it hasn't even contacted the backend server yet.\n\n   100 Continue\n\nFine, the client will start sending the body now, because apache asked it to.\nMeanwhile, apache will start contacting the backend server, using the Expect header:\n\n   PUT /some/path HTTP/1.1\n   Expect: 100-continue\n   ...\n   X-Forwarded-For: and so on\n\nOkay, the server now assumes there will be no body yet because of the Expect-header, and starts processing the request.\n\nThen, unexpectedly, apache will continue sending the body, even though the server hasn't done anything yet. Now, if the server doesn't respond with \"100 Continue\", but, for example, with \"401 Unauthorized\", then the body will be interpreted as the next request. Apache however ignores any response from the server until it's done sending the body, at which point the server has been sending \"400 Bad request\" messages so fast that now both sides of the conversation are thoroughly confused and apache doesn't even bother to send a meaningful response to the client; all connections are eventually closed.\n\nArguably the confused state is partly caused by the backend server not closing the request after the \"400\" errors, but it *is* caused by apache misunderstanding the meaning of \"Expect: 100-continue\".\n\nThis is the apache configuration snipped used in this experiment:\n\n <Location /some/path/>\n  ProxyPass http://localhost:1234/path/\n  ProxyPassReverse http://localhost:1234/path/\n  Order allow,deny\n  Allow from all\n  Deny from none\n  SetEnv proxy-interim-response RFC\n  SetEnv proxy-sendchunked 1\n </Location>\n\nAnd FYI, this is the start of the actual, captured request from the client:\n\n    PUT /kmx/pavis2.3/upload/ecc022ad63f16b27bff57bfc9cfa3f7bd2085dba HTTP/1.1\n    Host: localhost\n    Accept-Encoding: identity\n    User-Agent: Treparel KMX Patent Analytics suite/2.2.90\n    Content-Type: application/ms-excel; filename=\"%2Fhome%2Fivo%2Fsvn.etc.xls\"\n    Transfer-Encoding: chunked\n    Expect: 100-continue\n\nResponse from apache:\n\n    HTTP/1.1 100 Continue\n\nBody sent by the client:\n\n    19000\n    (and so on, using chunked encoding).\n\nProblemType: Bug\nArchitecture: amd64\nDistroRelease: Ubuntu 9.04\nPackage: apache2.2-common 2.2.11-2ubuntu2.2\nProcEnviron:\n SHELL=/bin/zsh\n PATH=(custom, user)\n LC_COLLATE=C\n LANG=nl_NL.UTF-8\n LC_CTYPE=nl_NL.UTF-8\nSourcePackage: apache2\nUname: Linux 2.6.28-14-generic x86_64", "id": 130240, "time": "2009-09-09T06:06:26Z", "creator": "zulcss@ubuntu.com", "creation_time": "2009-09-09T06:06:26Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 47810, "text": "I think you're wrong here.  Please reopen if you can convince me otherwise!\n\nThe 100-Continue is sent *after* the backend has been contacted.  A quick and simple demonstration of this is to give it a nonexistent backend: then it returns 503 with no intermediate 100.\n\nThe argument that the proxy should listen for a response before sending 100-continue is a fine one, and is problematic because it introduces a high latency into regular requests (a round trip to the backend before replying 100).  Bear in mind that clients will typically have very short timeouts on waiting for 100-continue before they continue anyway (as they should do, in the absence of an error response).\n\nYou write:\n> Then, unexpectedly, apache will continue sending the body, even though the\n> server hasn't done anything yet. Now, if the server doesn't respond with \"100\n> Continue\", but, for example, with \"401 Unauthorized\", then the body will be\n> interpreted as the next request.\n\nThis is a bug in your backend.  We've very recently tackled it in Apache HTTPD: see Bug 47087 (which also details the relevant points of the protocol).", "id": 134713, "time": "2010-02-20T00:43:23Z", "creator": "nick@webthing.com", "creation_time": "2010-02-20T00:43:23Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 47810, "is_private": false, "text": "The report seems correct to me.  It would only make sense for the proxy to be forwarding 100-continue if it were ever going to wait for an interim response before forwarding the request body.  But that's not the case unless I'm missing something: it is always forwarding the request body, then reading the response.", "id": 134738, "time": "2010-02-21T10:33:49Z", "creator": "jorton@redhat.com", "creation_time": "2010-02-21T10:33:49Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 47810, "is_private": false, "text": "Hmmm, but 2616 actually requires a proxy to forward the Expect condition in this case, which seems non-sensical.", "id": 134739, "time": "2010-02-21T10:49:06Z", "creator": "jorton@redhat.com", "creation_time": "2010-02-21T10:49:06Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 47810, "text": "(In reply to comment #2)\n> The report seems correct to me.  It would only make sense for the proxy to be\n> forwarding 100-continue\n\nTo be clear: I mean \"forwarding the Expect header in the request\" here.", "id": 134740, "time": "2010-02-21T10:54:42Z", "creator": "jorton@redhat.com", "creation_time": "2010-02-21T10:54:42Z", "is_private": false, "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 47810, "text": "(In reply to comment #1)\n> I think you're wrong here.  Please reopen if you can convince me otherwise!\n> \n> The 100-Continue is sent *after* the backend has been contacted.  A quick and\n> simple demonstration of this is to give it a nonexistent backend: then it\n> returns 503 with no intermediate 100.\n\nSure.  But if the backend normally works fine, which it does in my case, the 100-continue will only show up later when the situation occurs.\n\n> You write:\n> > Then, unexpectedly, apache will continue sending the body, even though the\n> > server hasn't done anything yet. Now, if the server doesn't respond with \"100\n> > Continue\", but, for example, with \"401 Unauthorized\", then the body will be\n> > interpreted as the next request.\n> \n> This is a bug in your backend.  We've very recently tackled it in Apache HTTPD:\n> see Bug 47087 (which also details the relevant points of the protocol).\n\nAgreed on this one.\n\nI'll close this bug since the behavior in svn trunk appears to be what I'd expect: the 400 error response from the backend server is properly handled by apache and it will send a 502 Bad gateway to the client.", "id": 136262, "time": "2010-04-20T11:23:51Z", "creator": "ivo@lychnis.net", "creation_time": "2010-04-20T11:23:51Z", "tags": [], "is_private": false}]