[{"count": 0, "tags": [], "creator": "michel.jung89@gmail.com", "is_private": false, "id": 131731, "creation_time": "2009-11-05T08:42:56Z", "time": "2009-11-05T08:42:56Z", "bug_id": 48140, "text": "Created attachment 24490\nThe file I try to read\n\nI have a column with a lot of numbers (for instance 1253323, 275527, ... ) and\ntry to get them using getNumericCellValue(). It throws an exception for each\nrow:\n\njava.lang.IllegalStateException: Cannot get a numeric value from a text cell\n\nOf course I already checked for the correct value:\n\nCould not convert \"2844922\" from row 575: java.lang.IllegalStateException:\nCannot get a numeric value from a text cell\n\n\nThere is no problem with getNumericCellValue() in other two rows where I have\nvalues like 0.50625, 0.75, 50 .\n\nI've already tried to set the cell's format to \"numeric\" (or however it's\ncalled in the english excel). No success.\n\nI hope it's not my fault...", "attachment_id": 24490}, {"count": 1, "tags": [], "bug_id": 48140, "attachment_id": null, "is_private": false, "id": 131732, "time": "2009-11-05T08:46:02Z", "creator": "michel.jung89@gmail.com", "creation_time": "2009-11-05T08:46:02Z", "text": "Here comes the stack trace:\n\njava.lang.IllegalStateException: Cannot get a numeric value from a text cell\n\tat org.apache.poi.xssf.usermodel.XSSFCell.typeMismatch(XSSFCell.java:768)\n\tat org.apache.poi.xssf.usermodel.XSSFCell.getNumericCellValue(XSSFCell.java:191)\n\tat xxx.readInstrumentLines(Converter.java:347)\n\tat xxx.run(Converter.java:412)"}, {"count": 2, "tags": [], "creator": "apache@gagravarr.org", "is_private": false, "text": "You need to check the type of the cell. If it's of type numeric, then call getNumericCellValue(). If it's of type string, call getRichStringCellValue(). The type tells you which one you can call.\n\nSometimes, excel decides to store a number in a cell of type string. For those cases, fetch the string value and parse it to a number in java. See the documentation on the site and/or javadocs for more details", "id": 131739, "time": "2009-11-05T11:01:53Z", "bug_id": 48140, "creation_time": "2009-11-05T11:01:53Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "himanshu.goyal@rs-components.com", "is_private": false, "id": 132278, "creation_time": "2009-11-24T08:25:34Z", "time": "2009-11-24T08:25:34Z", "bug_id": 48140, "text": "I am having difficulties in reading an excel file which contains data of mix type.\n\nFor ex: If a cell contains value as \"444444\" with cell type as \"General\" then why Apache POI is returning the value as \"444444.0\" and no way to get the original value which is displayed when we open the document in MS Excel.\n\nWe cannot expect the customer to provide the data with correct cell data type, Apache POI should return the same data value which is displayed when opening the document and should additionally provide the string equivalent for numeric data even. There is no place in your library classes where I see the returned data consider the settings (2 decimal digits of precision) in Excel document being taken care while returning the cell value.\n\nI previously used jexcel-Api and recently planned to shift to use Apache POI to support Excel 2007 files. But even in the initial bit it is a bit disappointing looking at the data returned and available from your library.\n\nCould you suggest me If there is a way possible to get the data in the required format present and displayed by MS-Excel.\n\nHoping for an early response.\n\nThanks,\nHimanshu", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 48140, "attachment_id": null, "id": 132279, "time": "2009-11-24T08:38:05Z", "creator": "apache@gagravarr.org", "creation_time": "2009-11-24T08:38:05Z", "is_private": false, "text": "Please do not ask basic usage questions by re-opening old bugs relating to something else!\n\nCheck the list archives, yours is a common misconception about excel, and all the answers you seek have come up on the list many times."}]