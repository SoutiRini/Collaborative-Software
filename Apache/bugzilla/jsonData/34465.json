[{"count": 0, "tags": [], "bug_id": 34465, "attachment_id": null, "is_private": false, "id": 73673, "time": "2005-04-15T06:50:23Z", "creator": "Yoichi.Hirose@fujixerox.co.jp", "creation_time": "2005-04-15T06:50:23Z", "text": "When running jasper2 from ant, and there is no web.xml under root/WEB-INF,\njasper2 fails with a FileNotFoundException. Since, this worked correctly under\n5.5.7, it seems to be a bug.\n\nThe actual place which causes the problem is in\norg.apache.jasper.compiler.JspConfig#processWebDotXml(). The code in 5.5.7 was\n            is = ctxt.getResourceAsStream(WEB_XML);\n            if (is == null) {\n                // no web.xml\n                return;\n            }\nand in 5.5.9,\n            URL uri = ctxt.getResource(WEB_XML);\n            if (uri == null) {\n                // no web.xml\n                return;\n            }\nctxt.getResource(WEB_XML) returns a non-null value even if there is no web.xml\nexisting, so ths next uri.openStream() raises a FileNotFoundException."}, {"count": 1, "tags": [], "bug_id": 34465, "attachment_id": null, "text": "\"ctxt.getResource(WEB_XML) returns a non-null value even if there is no web.xml\nexisting, so ths next uri.openStream() raises a FileNotFoundException.\"\n\nThis is incorrect.", "id": 73679, "time": "2005-04-15T10:14:14Z", "creator": "remm@apache.org", "creation_time": "2005-04-15T10:14:14Z", "is_private": false}, {"count": 2, "tags": [], "creator": "Yoichi.Hirose@fujixerox.co.jp", "attachment_id": null, "text": "I'm sorry, maybe my guess of the reason was wrong. But jasper2 actually raises \na FileNotFoundException somewhere, where it did not in 5.5.7. Please check it \nby yourself. I will show you the stack trace. Some parts are modified, since \nit includes Japanese messages.\n\n  [jasper2] java.io.FileNotFoundException: C:\\work\\harp\\web\\portal\\root\\WEB-\nINF\\web.xml (Japanese error message comes here)\n  [jasper2]     at java.io.FileInputStream.open(Native Method)\n  [jasper2]     at java.io.FileInputStream.<init>(FileInputStream.java:106)\n  [jasper2]     at java.io.FileInputStream.<init>(FileInputStream.java:66)\n  [jasper2]     at sun.net.www.protocol.file.FileURLConnection.connect\n(FileURLConnection.java:70)\n  [jasper2]     at sun.net.www.protocol.file.FileURLConnection.getInputStream\n(FileURLConnection.java:161)\n  [jasper2]     at java.net.URL.openStream(URL.java:1007)\n  [jasper2]     at org.apache.jasper.compiler.JspConfig.processWebDotXml\n(JspConfig.java:71)\n  [jasper2]     at org.apache.jasper.compiler.JspConfig.init\n(JspConfig.java:197)\n  [jasper2]     at org.apache.jasper.compiler.JspConfig.isJspPage\n(JspConfig.java:361)\n  [jasper2]     at org.apache.jasper.JspC.scanFiles(JspC.java:919)\n  [jasper2]     at org.apache.jasper.JspC.execute(JspC.java:958)\n  [jasper2]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  [jasper2]     at sun.reflect.NativeMethodAccessorImpl.invoke\n(NativeMethodAccessorImpl.java:39)\n  [jasper2]     at sun.reflect.DelegatingMethodAccessorImpl.invoke\n(DelegatingMethodAccessorImpl.java:25)\n  [jasper2]     at java.lang.reflect.Method.invoke(Method.java:585)\n  [jasper2]     at org.apache.tools.ant.TaskAdapter.execute\n(TaskAdapter.java:123)\n  [jasper2]     at org.apache.tools.ant.UnknownElement.execute\n(UnknownElement.java:275)\n  [jasper2]     at org.apache.tools.ant.Task.perform(Task.java:364)\n  [jasper2]     at org.apache.tools.ant.Target.execute(Target.java:341)\n  [jasper2]     at org.apache.tools.ant.Target.performTasks(Target.java:369)\n  [jasper2]     at org.apache.tools.ant.Project.executeTarget\n(Project.java:1214)\n  [jasper2]     at org.apache.tools.ant.Project.executeTargets\n(Project.java:1062)\n  [jasper2]     at org.apache.tools.ant.Main.runBuild(Main.java:673)\n  [jasper2]     at org.apache.tools.ant.Main.startAnt(Main.java:188)\n  [jasper2]     at org.apache.tools.ant.launch.Launcher.run(Launcher.java:196)\n  [jasper2]     at org.apache.tools.ant.launch.Launcher.main(Launcher.java:55)", "id": 73682, "time": "2005-04-15T10:36:32Z", "bug_id": 34465, "creation_time": "2005-04-15T10:36:32Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 34465, "attachment_id": null, "text": "As I said, this works for me, and I explicitely tested it.\nctxt.getResource(WEB_XML) returns null.\n\nSince you insist, I'll leave your bug open, but will ignore it. I recommend you\nlook into this \"bug\" yourself.", "id": 73684, "time": "2005-04-15T10:42:11Z", "creator": "remm@apache.org", "creation_time": "2005-04-15T10:42:11Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 34465, "attachment_id": null, "text": "Acrually, no, I didn't test it properly, because you forgot to tell that you\nwere precompiling JSPs (something I just saw by looking at the end of the stack\ntrace right after posting my last reply).\n\nIf you precompile with jspc, you need to have a web.xml, as all the new servlet\ndeclarations will be put there. Otherwise, your precompilation will be useless\nanyway.", "id": 73685, "time": "2005-04-15T10:48:44Z", "creator": "remm@apache.org", "creation_time": "2005-04-15T10:48:44Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 34465, "attachment_id": null, "text": "I'm sorry for forgetting to tell you that I was trying to precompile the JSP's.\nI wrote that I was using ant, so I thought that was enough.\n\n> If you precompile with jspc, you need to have a web.xml, as all the new servlet\n> declarations will be put there. Otherwise, your precompilation will be useless\n> anyway\n\nThis is not true. jasper2 has an option called webXmlFragment, which creates\npart of web.xml, and what we are doing, is joining these webXmlFragments. It\nworked fine on 5.5.7.\n\nWell, I'm working on the code myself now, so I will tell you when I have found a\nway to fix the problem.", "id": 73686, "time": "2005-04-15T11:01:49Z", "creator": "Yoichi.Hirose@fujixerox.co.jp", "creation_time": "2005-04-15T11:01:49Z", "is_private": false}, {"count": 6, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 73687, "time": "2005-04-15T11:07:07Z", "bug_id": 34465, "creation_time": "2005-04-15T11:07:07Z", "is_private": false, "text": "Using jspc means using jspc. Using ant means using ant to compile JSP source.\n\nAnyway, look in org.apache.jasper.servlet.JspCServletContext."}, {"count": 7, "tags": [], "bug_id": 34465, "attachment_id": null, "is_private": false, "id": 73689, "time": "2005-04-15T11:22:29Z", "creator": "hgomez@apache.org", "creation_time": "2005-04-15T11:22:29Z", "text": "Well jasper2 could put jsp directive outside web.xml when pre-compiling :\n\nsee this ant example: \n\n\t    <jasper2 \n\t             validateXml=\"false\" \n\t             uriroot=\"${build.dir}/jspc/myapp\" \n\t             webXmlFragment=\"${build.dir}/dst/$myapp/WEB-INF/jsp.xml\" \n\t             outputDir=\"${build.dir}/${wnamei}-src\" \n\t  \t         javaEncoding=\"ISO-8859-1\"\n\t\t   \t\t trimSpaces=\"true\" /> \n\n\njasper2 jspc will put the jsp URI in jsp.xml, you could at a later time include\nin web.xml using <!ENTITY jsp SYSTEM  \"jsp.xml\"> and &jsp.xml;\n\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE web-app\n    PUBLIC \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n    \"http://java.sun.com/dtd/web-app_2_3.dtd\" [ \n\n<!ENTITY jsp SYSTEM  \"jsp.xml\">\n\n]>\n\n<web-app>\n\n....\n\n&jsp;\n\n</web-app>\n\n\nBe carefull &jsp; should be in the servlet-mapping area of your web.xml"}, {"count": 8, "tags": [], "bug_id": 34465, "attachment_id": null, "text": "(In reply to comment #6)\n> Anyway, look in org.apache.jasper.servlet.JspCServletContext.\n\nAs you said, I looked at JspCServletContext#getRealPath and\nJspCServletContext#getResource. They just generates a new URL, and does not\ncheck the existents of the actual file.\n\nIn 5.5.7, getResourceAsStream was used insted of getResource, and the\nimplementation of getResourceAsStream is as below.\n\n    public InputStream getResourceAsStream(String path) {\n\n        try {\n            return (getResource(path).openStream());\n        } catch (Throwable t) {\n            return (null);\n        }\n\n    }\n\nSince Throwable is caught, FileNotFoundException will not be raised to\nprocessWebDotXml.\n\nWell the easiest way to fix this problem, is modifiy\n\t    is = uri.openStream();\nto\n\t    try {\n\t\tis = uri.openStream();\n\t    } catch (java.io.FileNotFoundException ex) {\n\t\treturn;\n\t    }\nor maybe catch a Throwable, as it does in getResourceAsStream.\n\nI modified JspConfig.java on my local machine as above, and it correctly worked\nas I wanted.\n", "id": 73690, "time": "2005-04-15T11:28:07Z", "creator": "Yoichi.Hirose@fujixerox.co.jp", "creation_time": "2005-04-15T11:28:07Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 34465, "attachment_id": 14728, "text": "Created attachment 14728\nA patch to catch the Exception raised from uri.openStream()\n\nThis is a propsed patch for this bug. Just catch Throwable as\nJspCServletContext#getResourceAsStream does so.", "id": 73694, "time": "2005-04-15T12:32:05Z", "creator": "Yoichi.Hirose@fujixerox.co.jp", "creation_time": "2005-04-15T12:32:05Z", "is_private": false}, {"count": 10, "tags": [], "creator": "Yoichi.Hirose@fujixerox.co.jp", "attachment_id": 14788, "id": 73952, "time": "2005-04-22T10:41:55Z", "bug_id": 34465, "creation_time": "2005-04-22T10:41:55Z", "is_private": false, "text": "Created attachment 14788\nA patch for JspCServletContext#getResource\n\nMaybe a better patch. JspCServletContext#getResource returns null if the file\nis not found."}]