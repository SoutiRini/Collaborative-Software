[{"count": 0, "tags": [], "bug_id": 61568, "attachment_id": null, "text": "I am running two webapps with two servlets on my server with security manager enabled. When manually testing the servlets, they respond just fine to HTTP post and get requests. When stress testing (e.g. multiple simultaneous requests) some requests fail (<1%) and raise the exception pasted below. When adding the permission java.security.AllPermission to the webapps, the exception still occurs. Therefore, I assume, this is a bug directly related to the security manager.\n\nWithout the security manager enabled, all requests are handled fine, even when stress testing.\n\n\nException:\n\nException in thread \"anInnocuousThread\" java.lang.SecurityException: setContextClassLoader\nat sun.misc.InnocuousThread.setContextClassLoader(InnocuousThread.java:64)\nat org.apache.tomcat.util.security.PrivilegedSetTccl.run(PrivilegedSetTccl.java:31)\nat org.apache.tomcat.util.security.PrivilegedSetTccl.run(PrivilegedSetTccl.java:21)\nat java.security.AccessController.doPrivileged(Native Method)\nat org.apache.tomcat.util.threads.TaskThreadFactory.newThread(TaskThreadFactory.java:66)\nat java.util.concurrent.ThreadPoolExecutor$Worker.<init>(ThreadPoolExecutor.java:610)\nat java.util.concurrent.ThreadPoolExecutor.addWorker(ThreadPoolExecutor.java:924)\nat java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1371)\n\nat org.apache.tomcat.util.threads.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:167)\nat org.apache.tomcat.util.threads.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:145)\nat sun.nio.ch.AsynchronousChannelGroupImpl.executeOnPooledThread(AsynchronousChannelGroupImpl.java:188)\nat sun.nio.ch.Invoker.invokeIndirectly(Invoker.java:212)\nat sun.nio.ch.UnixAsynchronousSocketChannelImpl.finishRead(UnixAsynchronousSocketChannelImpl.java:432)\nat sun.nio.ch.UnixAsynchronousSocketChannelImpl.finish(UnixAsynchronousSocketChannelImpl.java:191)\nat sun.nio.ch.UnixAsynchronousSocketChannelImpl.onEvent(UnixAsynchronousSocketChannelImpl.java:213)\nat sun.nio.ch.EPollPort$EventHandlerTask.run(EPollPort.java:293)\nat java.lang.Thread.run(Thread.java:745)\nat sun.misc.InnocuousThread.run(InnocuousThread.java:74)\n\n\nEnvironment:\n\n# uname -a\nLinux 3.16.0-4-amd64 #1 SMP Debian 3.16.43-2+deb8u1 (2017-06-18) x86_64 GNU/Linux\n\n# java -version\njava version \"1.7.0_131\"\nOpenJDK Runtime Environment (IcedTea 2.6.9) (7u131-2.6.9-2~deb8u1)\nOpenJDK 64-Bit Server VM (build 24.131-b00, mixed mode)", "id": 201160, "time": "2017-09-27T14:56:00Z", "creator": "1ax@gmx.net", "creation_time": "2017-09-27T14:56:00Z", "is_private": false}, {"count": 1, "tags": [], "text": "InnocuousThread is hard-coded to throw a SecurityException if you try and set the context class loader.\n\nI can reproduce this with a clean 8.5.x build configured to use NIO2, a SecurityManager and JMeter running 100 threads POSTing data to one of the example servlets.\n\nLooking at fix options now...", "is_private": false, "id": 201322, "creator": "markt@apache.org", "time": "2017-10-06T12:37:17Z", "bug_id": 61568, "creation_time": "2017-10-06T12:37:17Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "I had no idea about that weird behavior ... Catch the exception and ignore maybe, or get the thread name and avoid calling it for that \"Innocuous\" ? You moved the code there for performance reasons originally.", "is_private": false, "id": 201323, "creator": "remm@apache.org", "time": "2017-10-06T12:55:14Z", "bug_id": 61568, "creation_time": "2017-10-06T12:55:14Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "The ultimate aim of the code is to make sure that any thread doesn't end up with the web application class loader as its context class loader. Rather than setting the class loader for the current thread that is then picked up by the new thread, I went for setting it on the new thread. That should meet the overall objective and avoid the issue with InnocuousThread.\n\nFixed in:\n- trunk for 9.0.2 onwards\n- 8.5.x for 8.5.24 onwards\n- 8.0.x for 8.0.48 onwards", "is_private": false, "id": 201325, "creator": "markt@apache.org", "time": "2017-10-06T13:37:38Z", "bug_id": 61568, "creation_time": "2017-10-06T13:37:38Z", "attachment_id": null}]