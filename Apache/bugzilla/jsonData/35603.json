[{"count": 0, "tags": [], "creator": "jojada@speedlegal.com", "attachment_id": null, "id": 76986, "time": "2005-07-05T06:33:28Z", "bug_id": 35603, "creation_time": "2005-07-05T06:33:28Z", "is_private": false, "text": "In the JNDIPrincipalStore's getRevisionDescriptior(URI) method there is a line \nthat checks an attribute name against 'groupMemberSet' field:\nboolean isGms = attribute.getID().equals(groupMemberSet);\nShouldn't this call equalsIgnoreCase() instead ?"}, {"count": 1, "tags": [], "text": "Since the value of groupMemberSet is configurable, this shouldn't be a problem.\nDo you have a situation where the casing of the attribute name varies between\nobjects? I don't believe that's possible, but I could be wrong.", "attachment_id": null, "bug_id": 35603, "id": 77082, "time": "2005-07-07T19:45:51Z", "creator": "masonjm@apache.org", "creation_time": "2005-07-07T19:45:51Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 35603, "attachment_id": null, "id": 77170, "time": "2005-07-11T02:33:35Z", "creator": "jojada@speedlegal.com", "creation_time": "2005-07-11T02:33:35Z", "is_private": false, "text": "No, that's not the situation I have or am looking at. I came across this issue \nafter spending hours in configuring JNDIPrincipalStore and trying to find out \nwhy the configuration was not working. I could have saved my time if \nthe 'groupMemberSet' attribute value was case-insensitive as other attributes. \nBesides, I think it's been a common practice if not a requirement that an LDAP \nattribute name is case-insensitive. By the way, thanks for the \nJNDIPrincipalStore code, it is great! "}, {"count": 3, "tags": [], "creator": "masonjm@apache.org", "attachment_id": null, "id": 77172, "time": "2005-07-11T05:57:08Z", "bug_id": 35603, "creation_time": "2005-07-11T05:57:08Z", "is_private": false, "text": "Thanks for the compliment :).\n\nI'm a little wary of hard-coding case-insensitivity, since I don't know enough\nabout the LDAP specs to know what problems that could lead to. Since this was\nprompted by problems you had getting a configuration working, maybe there's a\ndifferent solution that would help others pinpoint the problem?\n\nCould the documentation be improved, or maybe some changes to the logging to\nwarn about possible problems?"}, {"count": 4, "tags": [], "text": "If I remember correctly, the way attributes are compared within an LDAP server \nis defined by the LDAP schema (type) of the object. There are case insensitive \ntypes like names but also case sensitive and ways to compare binary strings. A \nsolution would be to read this information from the LDAP server itself, which \nis possible. Another solution would be to add a configuration option to \nindicate case sensitivity of the attributes.", "attachment_id": null, "bug_id": 35603, "id": 77173, "time": "2005-07-11T06:29:56Z", "creator": "cvillegas@apache.org", "creation_time": "2005-07-11T06:29:56Z", "is_private": false}, {"count": 5, "tags": [], "creator": "jojada@speedlegal.com", "attachment_id": null, "id": 77174, "time": "2005-07-11T07:31:55Z", "bug_id": 35603, "creation_time": "2005-07-11T07:31:55Z", "is_private": false, "text": "When we compare the *value* of an attribute then we pay attention to \ndescription defined in the schema. There are caseIgnoreMatch, octetStringMatch, \netc. However, the jndi.attributes.groupmemberset parameter defines an attribute \n*name/type* and an LDAP attribute name/type is case-insensitive as mentioned in \nthe following refereces:\n1. http://java.sun.com/products/jndi/tutorial/ldap/misc/attrs.html.\n2. LDAP Programming with Java, p.31, by R.Weltman and T.Dahbura, Addison Wesley \nLongman Inc., 2000.\n3. RFC2252 p.13.\n\n\n"}]