[{"count": 0, "tags": [], "text": "The module is actually using gzip no matter what client request, so the documentation should warn at the top of documentation, state clearly that this module only output \"gzip\", no actual deflate is ever supported.\n\ne.g.\n\nAdded in config: \n\nAddOutputFilterByType DEFLATE text/html text/plain text/xml\n\n\nTest:\n\ncurl -I -H  'Accept-Encoding: gzip' http://www.example.com\nContent-Encoding: gzip\n\n\ncurl -I -H  'Accept-Encoding: deflate' http://www.example.com\nContent-Encoding: gzip\n\n\nSo, no actual deflate is ever supported.", "attachment_id": null, "id": 158268, "creator": "ryanchan404@gmail.com", "time": "2012-04-22T05:30:54Z", "bug_id": 53121, "creation_time": "2012-04-22T05:30:54Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 53121, "is_private": false, "text": "some background:\n\nhttp://www.gzip.org/zlib/zlib_faq.html#faq38\n\n What's the difference between the \"gzip\" and \"deflate\" HTTP 1.1 encodings?\n\"gzip\" is the gzip format, and \"deflate\" is the zlib format. They should probably have called the second one \"zlib\" instead to avoid confusion with the raw deflate compressed data format. While the HTTP 1.1 RFC 2616 correctly points to the zlib specification in RFC 1950 for the \"deflate\" transfer encoding, there have been reports of servers and browsers that incorrectly produce or expect raw deflate data per the deflate specficiation in RFC 1951, most notably Microsoft. So even though the \"deflate\" transfer encoding using the zlib format would be the more efficient approach (and in fact exactly what the zlib format was designed for), using the \"gzip\" transfer encoding is probably more reliable due to an unfortunate choice of name on the part of the HTTP 1.1 authors.\nBottom line: use the gzip format for HTTP 1.1 encoding.", "id": 158271, "time": "2012-04-22T11:29:19Z", "creator": "covener@gmail.com", "creation_time": "2012-04-22T11:29:19Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Can confirm that mod_deflate in Apache 2.4 never uses the deflate encoding, only the gzip encoding.\n\n(As Eric Covener says they use the same actual algorithm, also called \"deflate\", but the \"gzip\" and \"deflate\" content-encodings have slightly different headers.)", "is_private": false, "id": 174087, "creator": "wiml@omnigroup.com", "time": "2014-03-25T21:42:27Z", "bug_id": 53121, "creation_time": "2014-03-25T21:42:27Z", "attachment_id": null}, {"count": 3, "attachment_id": 33380, "creator": "toscano.luca@gmail.com", "text": "Created attachment 33380\nmod_deflate doc patch", "id": 187177, "time": "2015-12-28T14:08:14Z", "bug_id": 53121, "creation_time": "2015-12-28T14:08:14Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 53121, "attachment_id": 33393, "text": "Created attachment 33393\nAmended explanation about gzip vs deflate\n\nAfter a chat with Humbedooh on #httpd-dev I revised my last patch with something more formal.", "id": 187319, "time": "2016-01-02T10:32:26Z", "creator": "toscano.luca@gmail.com", "creation_time": "2016-01-02T10:32:26Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 53121, "is_private": false, "text": "Interesting note from Humbedooh: \n\nhttps://pony-poc.apache.org/thread.html/Zbw7u00bnri2c9k\n\nThe discussion about gzip vs deflate was done a while ago, it might be good to re-think about it since it is 2016 and super old browsers should not be a problem anymore.", "id": 187320, "time": "2016-01-02T10:35:12Z", "creator": "toscano.luca@gmail.com", "creation_time": "2016-01-02T10:35:12Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "The patch is helpful. +1", "is_private": false, "bug_id": 53121, "id": 187526, "time": "2016-01-10T07:17:30Z", "creator": "takashi.asfbugzilla@tks.st", "creation_time": "2016-01-10T07:17:30Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 53121, "attachment_id": null, "is_private": false, "id": 187569, "time": "2016-01-12T16:17:20Z", "creator": "rbowen@apache.org", "creation_time": "2016-01-12T16:17:20Z", "text": "Thanks.\n\nApplied to trunk in r1724273.\nApplied to 2.4 in r1724274."}]