[{"count": 0, "tags": [], "bug_id": 52002, "attachment_id": 27751, "text": "Created attachment 27751\nPatch to create new test case and fix to make it work\n\nClosing a connection returns the connection to the pool but does not clear its handler (the JDBC interceptor chain).  As a result, the next request for a connection may re-open and return the old handler.\n\nThis behavior breaks multi-threaded code which closes a connection twice.  The exact behavior being that thread 1 closes a connection, thread 2 opens a new connection and gets the exact same connection object as thread 1, thread 1 then closes is connection a second time thereby breaking thread 2.\n\nI'm attaching a patch with a new test case which fails against the current revision as well as a fix for ConnectionPool.", "id": 150415, "time": "2011-10-10T13:42:25Z", "creator": "kevin.greiner@compsol.cc", "creation_time": "2011-10-10T13:42:25Z", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 27879\nPatch to create new test case and fix.\n\nThis patch directly addresses the defect in the ConnectionPool's setupConnection method.  This method creates a new proxy instance each time it is called.  However, unlike an ordinary object where each instance is unique, proxy objects store their state in their InvocationHandler object. In the original implementation, calls to getConnection() returned a new proxy instance and, as a side effect, returned all previous proxies to the same PooledConnection to an open state.\n\nIn this patch, I've created a new interceptor (ProxyCutOffConnection) to act as a unique, and disposable, head to a shared interceptor chain.  Each proxy instance created by setConnection uses its own unique ProxyCutOffConnection as its handler.  When 'close' is called for the first time, ProxyCutOffConnection first passes it to the next interceptor to perform all normal close logic then it severs its connection with that interceptor.  As a result, all future calls using this proxy object irrevocably fail with a connection closed error.", "is_private": false, "id": 151091, "creator": "kevin.greiner@compsol.cc", "time": "2011-11-01T00:02:55Z", "bug_id": 52002, "creation_time": "2011-11-01T00:02:55Z", "attachment_id": 27879}, {"count": 2, "tags": [], "bug_id": 52002, "attachment_id": null, "is_private": false, "id": 152060, "time": "2011-12-07T19:35:18Z", "creator": "rob.moore+apache@gmail.com", "creation_time": "2011-12-07T19:35:18Z", "text": "We're seeing behavior in a production application that seems likely to be a result of this issue. Any chance it might be included in the next release?"}, {"attachment_id": null, "tags": [], "bug_id": 52002, "text": "(In reply to comment #2)\n> We're seeing behavior in a production application that seems likely to be a\n> result of this issue. Any chance it might be included in the next release?\n\nI'll be adding the patch, but not enabled by default. Performance is at cost if new objects are created each time an object is used from the pool. This goes against the very idea that started this pool. So I will put in a flag to throttle the behavior", "count": 3, "id": 155113, "time": "2012-03-20T14:19:48Z", "creator": "fhanik@apache.org", "creation_time": "2012-03-20T14:19:48Z", "is_private": false}, {"count": 4, "tags": [], "creator": "fhanik@apache.org", "text": "Fixed in r1302948", "id": 155120, "time": "2012-03-20T15:47:53Z", "bug_id": 52002, "creation_time": "2012-03-20T15:47:53Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "text": "(In reply to comment #3)\n> (In reply to comment #2)\n> > We're seeing behavior in a production application that seems likely to be a\n> > result of this issue. Any chance it might be included in the next release?\n> \n> I'll be adding the patch, but not enabled by default. Performance is at cost if\n> new objects are created each time an object is used from the pool. This goes\n> against the very idea that started this pool. So I will put in a flag to\n> throttle the behavior\n\nI'm not trying to suggest that the you should compromise your design goals by introducing this change. Is there an alternative to address the scenario outlined in the first comment by Kevin?", "is_private": false, "id": 155158, "creator": "rob.moore+apache@gmail.com", "time": "2012-03-20T22:58:32Z", "bug_id": 52002, "creation_time": "2012-03-20T22:58:32Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 52002, "is_private": false, "count": 6, "id": 155160, "time": "2012-03-20T23:45:38Z", "creator": "kevin.greiner@compsol.cc", "creation_time": "2012-03-20T23:45:38Z", "text": "(In reply to comment #3)\n> I'll be adding the patch, but not enabled by default.\n\nI would recommend enabling by default with your flag's documentation clearly stating what a program must do, or not do, to safely disable.  Most users will expect the connection pool's default configuration to be absolutely reliable.  If it isn't, they'll simply discard it for another solution.  It is only after they have gained confidence in using it that they will look at the fine print on how to customize it."}, {"count": 7, "tags": [], "text": "(In reply to comment #6)\n> (In reply to comment #3)\n> > I'll be adding the patch, but not enabled by default.\n> \n> I would recommend enabling by default with your flag's documentation clearly\n> stating what a program must do, or not do, to safely disable.  Most users will\n> expect the connection pool's default configuration to be absolutely reliable. \n> If it isn't, they'll simply discard it for another solution.  It is only after\n> they have gained confidence in using it that they will look at the fine print\n> on how to customize it.\n\nlet me run some performance tests with and without it, if it performs well with it enabled, I see no issue with it. If performance is worse, then it breaks the main goal of the component, that is performance.", "is_private": false, "id": 155189, "creator": "fhanik@apache.org", "time": "2012-03-21T18:28:34Z", "bug_id": 52002, "creation_time": "2012-03-21T18:28:34Z", "attachment_id": null}, {"count": 8, "tags": [], "text": "The Facade is now enabled by default\n\nFixed in \n r1305861 \n r1305862 \n r1305866", "is_private": false, "id": 155313, "creator": "fhanik@apache.org", "time": "2012-03-27T15:12:25Z", "bug_id": 52002, "creation_time": "2012-03-27T15:12:25Z", "attachment_id": null}]