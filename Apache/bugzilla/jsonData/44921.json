[{"attachment_id": 21901, "tags": [], "creator": "ggolub@csc.com", "text": "Created attachment 21901\nSpreadsheet generated with poi-3.0-rc4-20070503.jar\n\nI used POI to generate a spreadsheet with data from Oracle.  The end users add data, including formulas, to the initial version which is intended for use as part of a data migration.  Prior to the migration I regenerate the spreadsheet and use another script to parse out differences between the original/modified one and the newly generated one.  The script worked reasonably well with 3.0rc4 but fails with 3.0.2 and 3.1beta.  The errors are as follows:\n\nScript threw exception: Sourced file: compareDocReports.bsh : Method Invocation oldBook.write : at Line: 241 : in file: compareDocReports.bsh : oldBook .write ( fos )\nCalled from method: modSpreadsheet : at Line: 250 : in file: compareDocReports.bsh : modSpreadsheet ( oldBook , newBook )\nCalled from method: run : at Line: 253 : in file: compareDocReports.bsh : run ( bsh .args [ 0 ] , bsh .args [ 1 ] )\nTarget exception: java.lang.RuntimeException: Coding Error: This method should never be called. This ptg should be converted\n\nMy guess is that the spreadsheet contains an invalid formula (not evident when I open it in Excel) but I don't know anything about ptg.  Furthermore, the unchanged script worked fine with the older POI release which indicates that this problem must be with the newer software.\n\nCan you provide any guidance?", "count": 0, "id": 116130, "time": "2008-05-02T06:12:05Z", "bug_id": 44921, "creation_time": "2008-05-02T06:12:05Z", "is_private": false}, {"count": 1, "tags": [], "creator": "ggolub@csc.com", "text": "Created attachment 21902\nOriginal spreadsheet\n\nThis is the original spreadsheet, stripped down to a few lines to demonstrate the issue.", "id": 116131, "time": "2008-05-02T06:13:16Z", "bug_id": 44921, "creation_time": "2008-05-02T06:13:16Z", "is_private": false, "attachment_id": 21902}, {"count": 2, "tags": [], "creator": "ggolub@csc.com", "text": "Created attachment 21903\nRegenerated spreadsheet\n\nThis is the second generation of the spreadsheet, stripped down to a few lines to demonstrate the issue.", "id": 116132, "time": "2008-05-02T06:13:54Z", "bug_id": 44921, "creation_time": "2008-05-02T06:13:54Z", "is_private": false, "attachment_id": 21903}, {"count": 3, "tags": [], "text": "Created attachment 21904\nUtility functions used by the main script", "is_private": false, "bug_id": 44921, "id": 116133, "time": "2008-05-02T06:14:59Z", "creator": "ggolub@csc.com", "creation_time": "2008-05-02T06:14:59Z", "attachment_id": 21904}, {"count": 4, "tags": [], "text": "Created attachment 21905\nBeanshell script that causes the error.\n\nScript runs fine with 3.0rc4 but not with 3.0.2 or 3.1beta", "is_private": false, "bug_id": 44921, "id": 116134, "time": "2008-05-02T06:15:38Z", "creator": "ggolub@csc.com", "creation_time": "2008-05-02T06:15:38Z", "attachment_id": 21905}, {"count": 5, "tags": [], "text": "Fix applied in svn r652934\n\nThe fix involves allowing all relative ref Ptgs (RefN*.java and AreaN*.java) to be written out (/serialized).\n\nThis bug was probably not visible before, because conditional formats and data validation are recent additions to POI.  These use relative-reference Ptgs (similar to those of shared formulas).  In earlier versions of POI a strategy was adopted to convert these Ptgs to absolute references (I assume) to make the formula evaluation stuff easier.  Hence relative reference Ptgs were never expected to be serialized.  For the new conditional format and data validation stuff, the conversion does not take place (and probably shouldn't) so that's why the error occurred.\n\nSeems like Andy hit a very similar problem before (see svn r513604).  I can't find a bugzilla record though. \n\nThere are significant problems with how relative references are handled by POI (see bug 44636).  This bug was also fixed with a small change, but a more correct solution will probably involve skipping the shared formula conversion stuff.\n\n\nFor interest, here are the two stack trace fragments showing how the conditional format and data validation stuff is relevant to this bug:\n\nRefNVPtg.writeBytes(byte[], int) line: 51\t\nPtg.serializePtgStack(Stack, byte[], int) line: 394\t\nCFRuleRecord.serialize(int, byte[]) line: 567\t\nCFRecordsAggregate.serialize(int, byte[]) line: 168\t\nSheet.serialize(int, byte[]) line: 830\t\n\n\nRefNVPtg.writeBytes(byte[], int) line: 51\t\nDVRecord.serialize(int, byte[]) line: 462\t\nSheet.serialize(int, byte[]) line: 830\t\n\n\n\nBTW - when supplying sample code, please try to use plain java (1.4 or 1.5).  Also try to cut out as much unneeded stuff as possible.  This bug can actually be re-produced with the following code:\n\nHSSFWorkbook wb = new HSSFWorkbook(new FileInputStream(\"ex44921-21902.xls\"));\nByteArrayOutputStream baos = new ByteArrayOutputStream();\noriginal.write(baos);\n", "is_private": false, "bug_id": 44921, "id": 116183, "time": "2008-05-02T15:35:54Z", "creator": "josh@apache.org", "creation_time": "2008-05-02T15:35:54Z", "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 44921, "attachment_id": null, "is_private": false, "id": 116184, "time": "2008-05-02T15:51:51Z", "creator": "josh@apache.org", "creation_time": "2008-05-02T15:51:51Z", "text": "(In reply to comment #5)\n> Fix applied in svn r652934\n\nOne more file (RefNVPtg.java). The most important file too. Having problems with my TortoiseSVN.\n\nApplied in svn r652936"}]