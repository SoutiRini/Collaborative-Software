[{"count": 0, "tags": [], "creator": "kirk@radik.com", "text": "Assume a task description roughly like this:\n<java classname=\"MyClass\">\n  <classpath>\n    <pathelement location=\"./jaxp.jar\"/>\n    <pathelement location=\"./crimson.jar\"/>\n  </classpath>\n</java>\n\nwhere the JAXP and Crimson jars are NOT the same ones as distributed with ant.\n\nWhat will happen here is that unless you fork the JVM, there is no way to\noverride a javax.* class. This leads to some of the classes in this case being\nloaded by the AntClassLoader, and some of the classes being loaded by the system\nclass loader. This isn't a problem unless you're using different versions.\n\nThe problem is most severe with JAXP, since it's the only thing which is part of\nthe ant distribution's system javax.* namespace, but the same general problem\ntakes place.\n\nThe core statement concerned is AntClassLoader.java:139 and its interaction with\nthings which are part of the javax namespace, but NOT part of the default JVM\ninstallation (JavaMail, JAXP, etc.). Everything has a workaround (don't put that\nin your CLASSPATH) except for JAXP, since it needs to be bootstrapped in the\nCLASSPATH environment variable (and is specifically done in ant.sh).\n\nOne potential solution is to put in another bootstrap class loader just to load\nup from a property (like ant.class.path) the files which are part of ANT itself,\ninstead of putting those in the CLASSPATH on startup.\n\nAnother potential solution is to eliminate the ability for a system class to not\nbe loaded from a custom classpath, even if it's just for the javax.* namespace.\n\nFinally, since javax.xml is the only thing for now for which there is no\nreasonable workaround (aside from forking), javax.xml could be special-cased\ninside the AntClassLoader.", "id": 1637, "time": "2001-03-28T18:50:00Z", "bug_id": 1146, "creation_time": "2001-03-28T18:50:00Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "vadim.tkachenko@silverline.com", "is_private": false, "text": "Actually, this applies not only to JAXP, but to all the classes that Ant uses\nfor itself. My particular problem is Xerces - it puts the org.w3c classes early\nin the classpath, and the project that requires (don't ask why) XML4J which\ndepends on earlier version of org.w3c classes fails.", "id": 3651, "time": "2001-07-11T11:45:08Z", "bug_id": 1146, "creation_time": "2001-07-11T11:45:08Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "I have created a new front end launcher for Ant which avoids this problem. This \nis currently experimental but please try it out. It hides the classes used by \nAnt itself, except the ant.jar files. (It would be possible to come up with a \nsmaller subset).\n\nSo, either use the new front-end or use the fork attribute, which is the best \nworkaround.", "is_private": false, "bug_id": 1146, "id": 3801, "time": "2001-07-18T06:38:36Z", "creator": "conor@apache.org", "creation_time": "2001-07-18T06:38:36Z", "attachment_id": null}]