[{"count": 0, "tags": [], "bug_id": 60854, "attachment_id": null, "id": 197624, "time": "2017-03-13T17:31:24Z", "creator": "smurf667@gmail.com", "creation_time": "2017-03-13T17:31:24Z", "is_private": false, "text": "Hello,\n\nwe're observing a JSESSIONID value change on a second request in a scenario where the first request both authenticated AND created a session. We expect the JSESSIONID created in the response to the first request to remain constant in subsequent requests.\n\nIt appears that the configuration for \"cache\" and \"changeSessionIdOnAuthentication\" behave in an unintended way, creating new session IDs where none are needed. Apologies if we misunderstand this, but it looks like a bug, and not a feature.\n\nWe've detailed the situation and observations at https://github.com/smurf667/test-tomcat-session which includes a simple, reproducible self-contained test (Maven, Java).\n\nKind regards,\nJan Engehausen"}, {"count": 1, "tags": [], "bug_id": 60854, "attachment_id": null, "id": 197625, "time": "2017-03-13T17:55:22Z", "creator": "remm@apache.org", "creation_time": "2017-03-13T17:55:22Z", "is_private": false, "text": "My opinion is that it's a feature. If you don't like it, you should cause the creation of a session before authentication. Will leave it open for further comments before closing, though."}, {"count": 2, "tags": [], "creator": "smurf667@gmail.com", "attachment_id": null, "text": "Hello Remy,\n\nas far as I understand, session fixation prevention is there to change the session ID when a session becomes authenticated. That's good.\n\nBut without a session to begin with, then being authenticated right away, why change the session ID on the next response? There is no need for this - what does this protect against? This is appears unneccessary.\n\nFurthermore, turning principal caching off (cache=false and changeSessionIdOnAuthentication=true) causes ANY response to set a new session ID cookie. Is that really intended?\n\nThanks,\nJan", "id": 197626, "time": "2017-03-13T18:02:42Z", "bug_id": 60854, "creation_time": "2017-03-13T18:02:42Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 60854, "attachment_id": null, "id": 197627, "time": "2017-03-13T18:11:07Z", "creator": "remm@apache.org", "creation_time": "2017-03-13T18:11:07Z", "is_private": false, "text": "If you don't cache authentication occurs on every request."}, {"count": 4, "tags": [], "bug_id": 60854, "text": "I see. I need to run this by my colleagues, hope it is okay to keep open until tomorrow.\n\nI would argue that in the case where authentication and session creation occur in the same request it would not be right to change the session ID on the second request (where no authentication occurs).", "id": 197628, "time": "2017-03-13T18:15:11Z", "creator": "smurf667@gmail.com", "creation_time": "2017-03-13T18:15:11Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 60854, "attachment_id": null, "id": 197692, "time": "2017-03-15T17:31:41Z", "creator": "smurf667@gmail.com", "creation_time": "2017-03-15T17:31:41Z", "is_private": false, "text": "So, we discussed this and still think that in the particular scenario described (authentication and session creation in the same request), a subsequent request should not get a new session ID, as authentication already happened in the previous request. Maybe a \"second opinion\" can be collected."}, {"count": 6, "tags": [], "bug_id": 60854, "text": "Your example does not show it; are you using cache=\"false\" in your basic authenticator valve? You'd have to go through some hoops to effect that change.", "id": 197695, "time": "2017-03-15T21:36:45Z", "creator": "chris@christopherschultz.net", "creation_time": "2017-03-15T21:36:45Z", "is_private": false, "attachment_id": null}, {"count": 7, "attachment_id": null, "creator": "smurf667@gmail.com", "text": "I am using org.apache.catalina.authenticator.BasicAuthenticator directly with default settings (cache=\"true\" and changeSessionIdOnAuthentication=\"true\").\n\ncom.example.SessionBehaviorIT.testDemonstrateProtectedServlet() shows the issue.\n\nRunning \"mvn verify\" is enough. You could also start Tomcat via \"mvn tomcat7:run\" and then execute testDemonstrateProtectedServlet() in some IDE.\n\nhttps://github.com/smurf667/test-tomcat-session/blob/master/src/test/java/com/example/SessionBehaviorIT.java#L52-L55\n\nhttps://github.com/smurf667/test-tomcat-session/blob/master/src/test/tomcat7/server.xml#L23-L24\n\n\nI have understood that cache=\"false\" will cause each request to get a new session ID cookie, this case can be safely ignored.", "id": 197698, "time": "2017-03-16T05:55:05Z", "bug_id": 60854, "creation_time": "2017-03-16T05:55:05Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "bug_id": 60854, "attachment_id": null, "id": 197949, "time": "2017-03-23T20:27:13Z", "creator": "markt@apache.org", "creation_time": "2017-03-23T20:27:13Z", "is_private": false, "text": "It is worth keeping in mind the change in session ID is relatively cheap. The session object remains the same, it is just the ID field that is updated.\n\nUsing alwaysUseSession=\"true\" on the Authenticator appears, on the face of it, to be a simple solution to this problem.\n\nI haven't tried coding it, but it looks like a fix triggered by session creation would be possible. It would require some refactoring of AuthenticatorBase.register to avoid duplication of code.\n\nOverall, I do wonder if the additional complexity of the session creation triggered fix is truly necessary."}, {"count": 9, "tags": [], "bug_id": 60854, "text": "Hi Mark,\n\nI can confirm that alwaysUseSession=\"true\" does make all tests of the test project pass. In our real life setup we do have a custom authenticator and can implement the workaround as described.\n\nI leave it up to you guys to decide if you change anything. As I said, I find the current behviour \"unexpected\" and think that if it did not happen like that there would be less confusion with other parties in the future.\n\nThanks, and kind regards,\nJan", "id": 197963, "time": "2017-03-24T09:48:36Z", "creator": "smurf667@gmail.com", "creation_time": "2017-03-24T09:48:36Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "I think, given the options available, I am going to resolve this as WONTFIX.\n\nIf a use case was presented where alwaysUseSession=\"true\" could not be used then that might justify the additional complexity required to handle session creation after authentication but, at the moment, such a use case seems pretty unlikely.", "id": 198004, "time": "2017-03-27T10:33:22Z", "bug_id": 60854, "creation_time": "2017-03-27T10:33:22Z", "is_private": false}]