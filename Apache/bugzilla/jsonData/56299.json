[{"count": 0, "tags": [], "text": "We're currently using Apache 2.4.9 on Win64 which seems to solve the \"infinite loop on websocket connection loss\" (https://issues.apache.org/bugzilla/show_bug.cgi?id=56145) problem for us. However, what we are seeing now is entries like\n\n[Fri Mar 21 08:00:10.405224 2014] [proxy_wstunnel:notice] [pid 19932:tid 836] [client 172.29.184.113:53972] AH02447: err/hup on backconn\n[Fri Mar 21 08:00:42.229688 2014] [proxy_wstunnel:notice] [pid 19932:tid 788] [client 172.29.184.113:53982] AH02447: err/hup on backconn\n[Fri Mar 21 08:05:08.604172 2014] [proxy_wstunnel:notice] [pid 19932:tid 840] [client 172.29.184.113:54199] AH02447: err/hup on backconn\n[Fri Mar 21 08:05:16.780267 2014] [proxy_wstunnel:notice] [pid 19932:tid 772] [client 172.29.184.113:54210] AH02447: err/hup on backconn\n[Fri Mar 21 08:05:21.724793 2014] [proxy_wstunnel:notice] [pid 19932:tid 768] [client 172.29.184.113:54216] AH02447: err/hup on backconn\n[Fri Mar 21 08:18:26.592849 2014] [proxy_wstunnel:notice] [pid 19932:tid 788] [client 172.29.184.113:54414] AH02447: err/hup on backconn\n[Fri Mar 21 08:18:26.595779 2014] [proxy_wstunnel:notice] [pid 19932:tid 764] [client 172.29.184.113:54413] AH02447: err/hup on backconn\n[Fri Mar 21 08:26:53.173822 2014] [proxy_wstunnel:notice] [pid 19932:tid 764] [client 172.29.184.113:54463] AH02447: err/hup on backconn\n[Fri Mar 21 08:40:58.011922 2014] [proxy_wstunnel:notice] [pid 19932:tid 840] [client 172.29.184.113:60997] AH02447: err/hup on backconn\n[Fri Mar 21 08:40:58.011922 2014] [proxy_wstunnel:notice] [pid 19932:tid 772] [client 172.29.184.113:60998] AH02447: err/hup on backconn\n\nWe can't find any indication so far that there would be a problem with the websocket server (Play/Netty). So it looks like this might be an issue with mod_proxy_ws_tunnel?", "is_private": false, "id": 173999, "creator": "martin.studer@mirai-solutions.com", "time": "2014-03-21T16:46:40Z", "bug_id": 56299, "creation_time": "2014-03-21T16:46:40Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 56299, "attachment_id": null, "is_private": false, "id": 174011, "time": "2014-03-22T17:56:28Z", "creator": "covener@gmail.com", "creation_time": "2014-03-22T17:56:28Z", "text": "Weird, the 2.4.9 change here did not introduce this error or increase its severity. I actually noticed that it seemed to be at an unnecesarrily high level, and the corresponding msg for the client side is TRACE1 instead of NOTICE.\n\nWas 2.4.8 just unusable for you so you never saw it?  Just trying to make sure this is simply \"is NOTICE too high?\" vs. \"broke in 2.4.9\""}, {"count": 2, "tags": [], "bug_id": 56299, "text": "Created attachment 31428\nread POLLHUPs\n\nShouldn't POLLUP be handled the like POLLIN, I mean let the proxy read the socket (see attached 2.4.x patch)?\n\nOn some systems, EOF triggers POLLHUP, IMHO it's safe to let apr_socket_recv() detect the error vs EOF.", "id": 174014, "time": "2014-03-22T19:33:38Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-03-22T19:33:38Z", "is_private": false, "attachment_id": 31428}, {"count": 3, "tags": [], "bug_id": 56299, "attachment_id": null, "text": "works here, probably need to tidy up the existing NOTICE msg", "id": 174015, "time": "2014-03-22T19:42:03Z", "creator": "covener@gmail.com", "creation_time": "2014-03-22T19:42:03Z", "is_private": false}, {"count": 4, "attachment_id": null, "creator": "ylavic.dev@gmail.com", "text": "That would also hide real (network/system) errors (often good to know).\nFor others proxy modules (but proxy_connect where the same code is used), the level is error for socket failures. TRACE1 is surely enough for EOF, but real errors deverse more IMHO (maybe not ERR because it's just streaming, but at least a warning).", "id": 174017, "time": "2014-03-22T20:40:13Z", "bug_id": 56299, "creation_time": "2014-03-22T20:40:13Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 56299, "text": "We were using 2.4.7 before and ran into the \"infinite loop\" issue https://issues.apache.org/bugzilla/show_bug.cgi?id=56145 which led us to upgrade to 2.4.9 (without trying 2.4.8 first).\n\nThe behavior we are observing is that websocket connections initially work, however that reopening the connection after a while leads to a \"AH02447: err/hup on backconn\". This leads to the following error on the client side (Google Chrome):\n\nWebSocket connection to 'wss://...' failed: Connection closed before receiving a handshake response\n\n\n\n(In reply to Eric Covener from comment #1)\n> Weird, the 2.4.9 change here did not introduce this error or increase its\n> severity. I actually noticed that it seemed to be at an unnecesarrily high\n> level, and the corresponding msg for the client side is TRACE1 instead of\n> NOTICE.\n> \n> Was 2.4.8 just unusable for you so you never saw it?  Just trying to make\n> sure this is simply \"is NOTICE too high?\" vs. \"broke in 2.4.9\"", "id": 174047, "time": "2014-03-24T07:21:05Z", "creator": "martin.studer@mirai-solutions.com", "creation_time": "2014-03-24T07:21:05Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "text": "Forgot to mention that after having received that error, retrying to connect generally seems to work\n\n(In reply to Martin Studer from comment #5)\n> We were using 2.4.7 before and ran into the \"infinite loop\" issue\n> https://issues.apache.org/bugzilla/show_bug.cgi?id=56145 which led us to\n> upgrade to 2.4.9 (without trying 2.4.8 first).\n> \n> The behavior we are observing is that websocket connections initially work,\n> however that reopening the connection after a while leads to a \"AH02447:\n> err/hup on backconn\". This leads to the following error on the client side\n> (Google Chrome):\n> \n> WebSocket connection to 'wss://...' failed: Connection closed before\n> receiving a handshake response\n> \n> \n> \n> (In reply to Eric Covener from comment #1)\n> > Weird, the 2.4.9 change here did not introduce this error or increase its\n> > severity. I actually noticed that it seemed to be at an unnecesarrily high\n> > level, and the corresponding msg for the client side is TRACE1 instead of\n> > NOTICE.\n> > \n> > Was 2.4.8 just unusable for you so you never saw it?  Just trying to make\n> > sure this is simply \"is NOTICE too high?\" vs. \"broke in 2.4.9\"", "is_private": false, "bug_id": 56299, "id": 174048, "time": "2014-03-24T07:25:17Z", "creator": "martin.studer@mirai-solutions.com", "creation_time": "2014-03-24T07:25:17Z", "attachment_id": null}, {"count": 7, "tags": [], "text": "Created attachment 31444\nReturn correct HTTP codes\n\nThis patch fixes something I noticed that might be contributing to the problem. It's based on and includes Yann's patch (I couldn't figure out a good way to create a patch to be applied on top of his).\n\nThe problem I noticed was that 500 was returned any time any closure of the WebSocket server occured. When reading from the server in ap_proxy_wstunnel_request(), anything except for a SUCCESS is considered an internal error, including a legitimate EOF. 500 is also returned if POLLERR is received when polling the server; this is a little suspect, since we're not the one having the issue, the WebSocket server is. That's not even considering the fact that the flag doing all this is named client_error, and that it's set in the section where we read from the server. It seemed like a good idea to just remove the client_error flag.\n\nHowever, doing so triggers another problem. Since ap_proxy_wstunnel_request() now returns OK, ap_discard_request_body() is run as part of the connection cleanup. On a normal Websocket close, this is fine, but something causes ap_discard_request_body() to block indefinitely on ap_get_brigade() when the connection is killed abormally (e.g. by SIGKILL on the server). I think it's something to do with either all the filters that get removed, or because the client's still hanging onto the request - I wasn't able to determine conclusively. The request's thread does eventually get killed by mod_reqtimeout.\n\nThe client_error flag \"solved\" this problem, but in an obviously unsatisfactory way. I've removed it and instead set c->keepalive = AP_CONN_CLOSE, which tells the server that it doesn't need to run the additional processing after the handler returns.", "is_private": false, "bug_id": 56299, "id": 174113, "time": "2014-03-26T18:36:06Z", "creator": "Chaosed0@gmail.com", "creation_time": "2014-03-26T18:36:06Z", "attachment_id": 31444}, {"count": 8, "tags": [], "creator": "covener@gmail.com", "text": "Committed Edwards patch, which included Yann's.  Thanks for the report.", "id": 174535, "time": "2014-04-13T17:26:57Z", "bug_id": 56299, "creation_time": "2014-04-13T17:26:57Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 56299, "attachment_id": null, "is_private": false, "id": 177230, "time": "2014-08-18T07:53:29Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2014-08-18T07:53:29Z", "text": "Fixed and released in 2.4.10"}, {"count": 10, "attachment_id": null, "creator": "matthauck@gmail.com", "text": "I'm seeing some similar behavior in mod_proxy_connect with error AH01026. Looking at the code in mod_proxy_connect, it looks very similar to the unpatched code that was addressed here for mod_proxy_wstunnel. \n\nDoes this patch need to be ported there as well? Or does the underlying issue that was fixed here not apply there? (and thus I have something else wrong I need to figure out)", "id": 178840, "time": "2014-10-30T00:12:55Z", "bug_id": 56299, "creation_time": "2014-10-30T00:12:55Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 56299, "text": "(In reply to Matt Hauck from comment #10)\n> I'm seeing some similar behavior in mod_proxy_connect with error AH01026.\n\nSince this PR about mod_proxy_wstunnel is resolved, please create a new one with mod_proxy_connect as component, so that the fix/changelog can reference it.", "id": 178843, "time": "2014-10-30T09:30:18Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2014-10-30T09:30:18Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 56299, "attachment_id": null, "text": "(In reply to Yann Ylavic from comment #11)\n> Since this PR about mod_proxy_wstunnel is resolved, please create a new one\n> with mod_proxy_connect as component, so that the fix/changelog can reference\n> it.\n\nRoger. Filed #57168", "id": 178854, "time": "2014-10-30T20:48:30Z", "creator": "matthauck@gmail.com", "creation_time": "2014-10-30T20:48:30Z", "is_private": false}]