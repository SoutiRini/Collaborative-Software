[{"count": 0, "attachment_id": null, "bug_id": 55633, "text": "As reported on Re: 8.0.x / 7.0.x progress thread [1]:\n\nFor NIO and APR connector:\nIt seems that when a client establishes a Websocket connection and then stops to read data from it (but doesn't close the connection, so that at Tomcat's side writing data to the underlying TCP connection will be blocked), and then after some time the client continues to read data from the Websocket connection, then Tomcat seems not to be able to read data from that client any more (and doesn't notice when the connection has been closed), but it can still write data to the client.\n\nTo reproduce:\n\nUpdate trunk to r1529443.\n\nThen apply the following patch locally to make the issue easier to reproduce (by blowing the amount of data that Tomcat sends to the client):\n\n\nIndex: webapps/examples/WEB-INF/classes/websocket/snake/SnakeTimer.java\n===================================================================\n--- webapps/examples/WEB-INF/classes/websocket/snake/SnakeTimer.java\t(revision 1529443)\n+++ webapps/examples/WEB-INF/classes/websocket/snake/SnakeTimer.java\t(working copy)\n@@ -73,8 +73,10 @@\n                 sb.append(',');\n             }\n         }\n-        broadcast(String.format(\"{\\\"type\\\": \\\"update\\\", \\\"data\\\" : [%s]}\",\n-                sb.toString()));\n+        char[] random = new char[8192];\n+        java.util.Arrays.fill(random, 'x');\n+        broadcast(String.format(\"{\\\"type\\\": \\\"update\\\", \\\"data\\\" : [%s], \\\"randomData\\\": \\\"[%s]\\\"}\",\n+                sb.toString(), new String(random)));\n     }\n \n     protected static void broadcast(String message) {\n\n\n\n1) Start Tomcat (current trunk) on Windows 64-bit with Java7 64-bit and either NIO or APR connector.\n2) Start IE (10+) and Firefox and with both browsers open the snake example. On both browsers, press up or down key so that both snakes begin moving.\n3) Suspend the Firefox processes. This can be done with \"Process Explorer\" [2] tool by right-clicking on the firefox.exe entry and select \"Suspend\". You can see that Firefox does not respond any more, but on IE the snakes continue to move.\n4) After some seconds, you can see that on IE the snakes suddenly stop moving. This is correct because the current code uses RemoteEndpoint.Basic that may block on write() methods.\n5) Now resume Firefox with Process Explorer. You can see that on both browsers the snakes will continue to move. This means that both browsers are able to receive data from the Websocket connection.\n6) When you try to change the direction of the snake in IE, everything works. However on Firefox, the snake will not change its direction. This means that while Tomcat continues to send data to this Websocket connection, it cannot receive from it any more.\n7) If you close Firefox, then the corresponding snake will not disappear (so it seems Tomcat doesn't notice that the connection closed).\n\n\nNote: This only applies to the NIO and APR connectors - with BIO, the problem doesn't occur.\n\n\nWith Wireshark you can see that FF still sends the direction data correctly and Tomcat ACKs the packets, but does not seem to be able to process them.\n\n\n[1] http://markmail.org/message/z6qklqiceyftapfx\n[2] http://technet.microsoft.com/en-us/sysinternals/bb896653.aspx", "id": 170445, "time": "2013-10-06T01:41:23Z", "creator": "kpreisser@apache.org", "creation_time": "2013-10-06T01:41:23Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "This has been fixed in 8.0.x for APR/native and for NIO.\n\nStill TODO:\n- backport to 7.0.x\n- Investigate client side WebSocket closes that don't appear to make it to the server. This is most easily observed with APR.", "id": 170477, "time": "2013-10-07T21:46:12Z", "bug_id": 55633, "creation_time": "2013-10-07T21:46:12Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "The back-port to 7.0.x has been completed.\n\nThe closing issue was caused by ignoring write errors on the server. That has also been fixed.", "count": 2, "id": 170481, "time": "2013-10-08T08:19:38Z", "bug_id": 55633, "creation_time": "2013-10-08T08:19:38Z", "is_private": false}]