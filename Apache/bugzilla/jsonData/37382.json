[{"count": 0, "tags": [], "bug_id": 37382, "text": "Hi,\n\nI am using ORO Regex API version 2.0.7 and my objective is to extract some \ntagged data from html source. For example i am interested in getting the source \ncode for all the forms found in a html page. So i made my regex like this:\n\nRegex formReg = new Regex(\"(?i)(<form(.|\\\\s)*?>(.|\\\\s)*?</form>)\");\n\nbecause following one didn't work,\n\nRegex formReg = new Regex(\"(?i)(<form.*?>.*?</form>)\");\n\nbecause . is taken as any character but not newline.\n\nSo my first regex worked well and i was able to get complete form data starting \nfrom <form..... to </form>\n\nBUT\n\nwhen the form was big say like it had around 400 lines and 30K bytes then it \nfailed and resulted in Stack Overflow. I am pasting below the stack overflow \nerror:\n\nMatched <form name=\"param\" action=\"http://www/parametric/ProductParametric\" \nmethod=\"post\">\n<input name=\"sterm\" type=\"hidden\">\n</form>\nmatcher.getMatch().endOffset(1) 4480\nMatched <form name=\"cross\" action=\"http://www/crossref/search.jsp\" \nmethod=\"post\">\n<input name=\"partNumber\" type=\"hidden\">\n</form>\nmatcher.getMatch().endOffset(1) 127\njava.lang.StackOverflowError\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\tat org.apache.oro.text.regex.Perl5Matcher.__match(Unknown Source)\n\n\nAlso i am pasting my code(method) which i wrote for extraction and it can be \nsimply called from main method and run,\n\n----------------------------------------------------------------------------\n\npublic static void testRegOro() {\n\t\ttry {\n\t\t\tString html = IoUtils.readFile(\"file.txt\");\n//\t\t\tString html = \"all work and no play makes jack a dull \nboy\"; //IoUtils.readFile(\"file.txt\");\n\t\t\tPerl5Compiler compiler=new Perl5Compiler();\n\t\t\tPerl5Pattern pattern = (Perl5Pattern) compiler.compile\n(\"(<form(.|\\\\s)*?>(.|\\\\s)*?</form>)\",\n\t\t\t          Perl5Compiler.CASE_INSENSITIVE_MASK | \nPerl5Compiler.READ_ONLY_MASK);\n\t\t\tPatternMatcher matcher = new Perl5Matcher();\n\t\t\tint i=0;\n\t\t\twhile(matcher.contains(html,pattern) && i++<3) {\n\t\t        System.out.println(\"Matched \" + matcher.getMatch().group\n(1));\n\t\t        System.out.println(\"matcher.getMatch().endOffset(1) \" + \nmatcher.getMatch().endOffset(1));\n\t\t        html = html.substring(matcher.getMatch().endOffset(1));\n\t\t        //System.out.println(\"html \" + html);\n\t\t      }\n\t\t} catch (Throwable e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n------------------------------------------------------------------------------\n\nAs my code shows i am reading a file.txt file i am attaching that file also in \nthe bug.\n\nI will really appreciate if you can look into this and throw some light on this \nand if it can be improved?\n\nThanks in Advance!\nRegards,\nPushpesh Kr. Rajwanshi", "id": 82179, "time": "2005-11-07T14:11:08Z", "creator": "hi_pkr@yahoo.com", "creation_time": "2005-11-07T14:11:08Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "hi_pkr@yahoo.com", "attachment_id": 16891, "id": 82180, "time": "2005-11-07T14:12:25Z", "bug_id": 37382, "creation_time": "2005-11-07T14:12:25Z", "is_private": false, "text": "Created attachment 16891\nfile used in code\n\nthis is the file i used which is read from code."}, {"count": 2, "tags": [], "text": "This is a duplicate of Bug #3561 (summary: rewrite the regular expression).\n\n>because following one didn't work,\n>\n>Regex formReg = new Regex(\"(?i)(<form.*?>.*?</form>)\");\n>\n>because . is taken as any character but not newline.\n\nIf you want . to match newlines, then use the SINGLELINE_MASK\noption when compiling the expression.\n\nYou should upgrade to version 2.0.8 as it fixed a couple of\nproblems.\n\n\n*** This bug has been marked as a duplicate of 3561 ***", "is_private": false, "bug_id": 37382, "id": 82241, "time": "2005-11-08T20:14:08Z", "creator": "dfs@apache.org", "creation_time": "2005-11-08T20:14:08Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 37382, "text": "Thanks Dan... I guessed something like this must be there but didn't knew so \nthanks for this also is javadoc the only way to get familier with this regex \napi or u have some tutorial too?\n\nThanks again for early response\nPushpesh", "id": 82248, "time": "2005-11-08T20:42:20Z", "creator": "hi_pkr@yahoo.com", "creation_time": "2005-11-08T20:42:20Z", "is_private": false, "attachment_id": null}, {"count": 4, "text": "(In reply to comment #3)\n> thanks for this also is javadoc the only way to get familier with this regex \n> api or u have some tutorial too?\n\nOnly the javadoc :(  There used to be a user's guide of sorts for OROMatcher,\nbut it was never updated and expanded for Jakarta ORO.", "bug_id": 37382, "is_private": false, "id": 82309, "time": "2005-11-09T17:01:09Z", "creator": "dfs@apache.org", "creation_time": "2005-11-09T17:01:09Z", "tags": [], "attachment_id": null}, {"count": 5, "tags": [], "creator": "hi_pkr@yahoo.com", "attachment_id": null, "id": 82316, "time": "2005-11-09T21:10:54Z", "bug_id": 37382, "creation_time": "2005-11-09T21:10:54Z", "is_private": false, "text": "hmmm... no problem i've gone through it and looks more or less simple to \nunderstand and kind of similar to other regex apis i learnt... anyways thanks \nfor the quicker reply...\n\nRegards\nPushpesh"}]