[{"count": 0, "tags": [], "creator": "nicolas.lehuen@thecrmcompany.com", "text": "Hi,\n\nIn my Ant file I define a few <path>s with ids that I reuse in all my tasks\n(compile, unit tests, javadoc, etc.). In the \"dist\" target, which build a\ndistribution zip, I'd like to copy all jars referenced in the <path>s I defined\nin a \"lib\" directory (the jars are initially stored in a \"3rdparty\" directory\nholding the full distribution directory of each 3rd party project I use).\n\nThe problem is that the copy task can handle filesets and dirsets, but won't\nhandle path-like structures, so I have to duplicate all my path entries with\nfileset entries.\n\nAnother solution would have been to be able to define global filesets with ids,\nand reuse it in javac as well as in copy, but it seems that filesets cannot be\ndefined on the project level, unlike path-like structures. I once defined\npatternsets with an id in a \"init\" target, but patternset have the disadvantage\nof not being standalone, i.e. they must be included later on in a fileset that\ngives them a root directory...\n\nSo could it be possible to add support for path-like structures as a source\nspecification in the copy task ?\n\nAnd I don't know if this is planned for version 2.0, but would it be possible to\nreduce the number of kinds of file/path/directory specification types ? The\n\"Concept and Types\" document presents 7 different ways of handling files and\npaths... And core or optional tasks don't always use the same types, so it's\nvery difficult to globally define one set of files and reuse it in many tasks.\n\nBest Regards,\nNicolas Lehuen", "id": 38649, "time": "2003-06-10T08:35:23Z", "bug_id": 20635, "creation_time": "2003-06-10T08:35:23Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 20635, "attachment_id": null, "text": "\n\n*** This bug has been marked as a duplicate of 18128 ***", "id": 75659, "time": "2005-05-31T17:35:38Z", "creator": "mbenson@apache.org", "creation_time": "2005-05-31T17:35:38Z", "is_private": false}]