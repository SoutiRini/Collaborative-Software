[{"count": 0, "tags": [], "bug_id": 61556, "attachment_id": 35346, "id": 201025, "time": "2017-09-21T11:15:56Z", "creator": "be_strew@yahoo.co.uk", "creation_time": "2017-09-21T11:15:56Z", "is_private": false, "text": "Created attachment 35346\nGroovy condition evaluation jmx\n\nThere appears to be a regression in performance with the move from 3.1 to 3.2 in the evaluation of IfController in JS.  This appears to be a slow memory leak and only was noticeable in running tests with 500 tps over a period of 4 hours.\n\nJexl evaluation appears to be the same as before.  Groovy evaluation can also lead to a OOM in metaspace, although this is not limited by default in Jmeter! Which it should be.\n\nI attached some examples tests, which execute a debug controller with a delay, then evaluates a condition before executing another debug controller with the same delay.  Metaspace limited to 256mb.  The condition is of the form: \"${SOME_VALUE}\" != \"DEFAULT\"\n\nSummary of results (test files attached)\n\nJmeter 3.2\n\nGroovy evaluation = failed after 3 mins with out of memory in metaspace.\nJS evaluation = 1808 transactions/s\nJexl evaluation = 1980 transactions/s\n\nJmeter 3.1\n\nGroovy evaluation = 223 transactions/s\nJS evaluation = 1963 transactions/s\nJexl evaluation = 1982 transactions/s\n\nI have attached the results as well as screen shots of the metaspace and cpu through jvisualvm.\n\nSo here are two issues really:\n\n1.  Performance degradation (possible slow metaspace leak) on JS evaluation in IfController.\n2.  Documentation needs to be clearer on not using variable replacement in Groovy scripts either in JSR233 components or in Groovy functions such as in the IfController.\n\n${__groovy( \"${SOME_VAR}\" != \"DEFAULT\" )}\n\nis going to be much slower than\n\n${__groovy(vars.get(\"SOME_VAR\") != \"NULL\" )}\n\nI assume the later is cached and re-used while the former involve more classes being created each time and eventually leads to a leak.  What I don't understand is why the space is not freed up in the metaspace, I would expect it to be slower but not to cause a OOM and that is the behaviour that differs from 3.1 to 3.2 but I've not run the tests for longer than 5 mins.\n\nWe first noticed the issue on longer tests (4 hr) were the throughput was trending downward towards the end of the test and noticed that the metaspace was growing throughout the test execution.  This test makes use of quite a few IfController evaluations in the form:\n\n\"${SOME_VAR}\" != \"DEFAULT\"\n\nThese are with Interpret Condition as Variable expression = false.\n\nOn reverting back to Jmeter 3.1 we did not see the degradation in throughput as the test continued."}, {"count": 1, "tags": [], "creator": "be_strew@yahoo.co.uk", "attachment_id": 35347, "text": "Created attachment 35347\nJexl condition evaluation jmx", "id": 201026, "time": "2017-09-21T11:16:20Z", "bug_id": 61556, "creation_time": "2017-09-21T11:16:20Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 61556, "text": "Created attachment 35348\nJS condition evaluation jmx", "id": 201027, "time": "2017-09-21T11:16:44Z", "creator": "be_strew@yahoo.co.uk", "creation_time": "2017-09-21T11:16:44Z", "is_private": false, "attachment_id": 35348}, {"count": 3, "tags": [], "bug_id": 61556, "attachment_id": 35349, "text": "Created attachment 35349\nJmeter 3.1 summary results", "id": 201028, "time": "2017-09-21T11:17:02Z", "creator": "be_strew@yahoo.co.uk", "creation_time": "2017-09-21T11:17:02Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 61556, "text": "Created attachment 35350\nJmeter 3.2 summary results", "id": 201029, "time": "2017-09-21T11:17:27Z", "creator": "be_strew@yahoo.co.uk", "creation_time": "2017-09-21T11:17:27Z", "is_private": false, "attachment_id": 35350}, {"count": 5, "tags": [], "bug_id": 61556, "attachment_id": 35351, "id": 201030, "time": "2017-09-21T11:18:22Z", "creator": "be_strew@yahoo.co.uk", "creation_time": "2017-09-21T11:18:22Z", "is_private": false, "text": "Created attachment 35351\nMem Jmeter 3.1 Groovy evaluation"}, {"count": 6, "tags": [], "bug_id": 61556, "attachment_id": 35352, "id": 201031, "time": "2017-09-21T11:18:40Z", "creator": "be_strew@yahoo.co.uk", "creation_time": "2017-09-21T11:18:40Z", "is_private": false, "text": "Created attachment 35352\nMem Jmeter 3.1 Jexl evaluation"}, {"count": 7, "tags": [], "bug_id": 61556, "text": "Created attachment 35353\nMem Jmeter 3.1 JS evaluation", "id": 201032, "time": "2017-09-21T11:19:31Z", "creator": "be_strew@yahoo.co.uk", "creation_time": "2017-09-21T11:19:31Z", "is_private": false, "attachment_id": 35353}, {"attachment_id": 35354, "tags": [], "creator": "be_strew@yahoo.co.uk", "text": "Created attachment 35354\nMem Jmeter 3.2 Groovy evaluation", "count": 8, "id": 201033, "time": "2017-09-21T11:20:19Z", "bug_id": 61556, "creation_time": "2017-09-21T11:20:19Z", "is_private": false}, {"count": 9, "tags": [], "text": "Created attachment 35355\nMem Jmeter 3.2 Jexl evaluation", "attachment_id": 35355, "id": 201034, "creator": "be_strew@yahoo.co.uk", "time": "2017-09-21T11:20:39Z", "bug_id": 61556, "creation_time": "2017-09-21T11:20:39Z", "is_private": false}, {"count": 10, "attachment_id": 35356, "creator": "be_strew@yahoo.co.uk", "is_private": false, "id": 201035, "time": "2017-09-21T11:21:02Z", "bug_id": 61556, "creation_time": "2017-09-21T11:21:02Z", "tags": [], "text": "Created attachment 35356\nMem Jmeter 3.2 JS evaluation"}, {"attachment_id": null, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "Hello,\nThanks for report.\nCould you try JMeter 3.2 with groovy version used in 3.1 ?\n\nThanks", "count": 11, "id": 201037, "time": "2017-09-21T11:24:19Z", "bug_id": 61556, "creation_time": "2017-09-21T11:24:19Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 61556, "attachment_id": null, "id": 201072, "time": "2017-09-22T08:45:21Z", "creator": "be_strew@yahoo.co.uk", "creation_time": "2017-09-22T08:45:21Z", "is_private": false, "text": "Hi Philippe,\n\nI tested again with Groovy evaluations using the 3.2 Jmeter with the Groovy lib from 3.1 (labelled groovy-all-2.4.7.jar).\n\nI still see the OOM metaspace at ~3mins.\n\nSo there didn't seem to be much difference there.\n\nJustin"}, {"count": 13, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "text": "Hello,\nAre you running JMeter 3.1 and 3.2 with same Java version ?\n\nThanks", "id": 201073, "time": "2017-09-22T08:49:18Z", "bug_id": 61556, "creation_time": "2017-09-22T08:49:18Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 61556, "attachment_id": null, "text": "Hi,\n\nyes all tests were executed with the same Java version no matter what version of Jmeter.\n\n> java -version\njava version \"1.8.0_144\"\nJava(TM) SE Runtime Environment (build 1.8.0_144-b01)\nJava HotSpot(TM) 64-Bit Server VM (build 25.144-b01, mixed mode)", "id": 201076, "time": "2017-09-22T09:50:19Z", "creator": "be_strew@yahoo.co.uk", "creation_time": "2017-09-22T09:50:19Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "text": "Hello,\nThanks for your feedback.\nFew notes:\n\n- 3.2 switched from Rhino to Nashorn. If you diagnose a leak, it would be a Java leak IMO\n- Regarding Groovy, the memory leak you see is due to Groovy, it disappears if you add this -Dgroovy.use.classvalue=true. See http://jmeter.apache.org/usermanual/component_reference.html#JSR223_Sampler. I don't reproduce OOM with this setting but throughput is negatively affected.\n- I agree with your note on Metaspace, we should indeed add -XX:MaxMetaspaceSize=256m\n\nNow what I don't understand is the difference in behaviour between 3.1 and 3.2 when using same groovy version. Are you sure you removed the new groovy jar in 3.2 when testing old one ?\n\nThe second strange thing, is performance regression in JS between 3.1 and 3.2, in the tests I made, Nashorn was outperforming Rhino.\n\nWould it be possible to attach your log file and ensure you're using fresh versions of 3.1 and 3.2 without any plugin and using same exact settings if not already done ?\n\n\nThank you", "count": 15, "id": 201102, "time": "2017-09-23T19:29:38Z", "bug_id": 61556, "creation_time": "2017-09-23T19:29:38Z", "is_private": false}, {"count": 16, "attachment_id": null, "creator": "be_strew@yahoo.co.uk", "is_private": false, "id": 201154, "time": "2017-09-27T13:05:29Z", "bug_id": 61556, "creation_time": "2017-09-27T13:05:29Z", "tags": [], "text": "Hi Philippe,\n\nGroovy\n\nI verified again and the (3.2 default included) groovy jar is definitely removed.  The only Groovy jar on the class path is groovy-all-2.4.7.jar.  I re-executed the test with 3.2 and received the same result, OOM metaspace.\n\nI see that your Jmeter docs you linked to do actually mention not to be use variable replacement for Groovy scripts which is good.  However, I think this should be added to the IfController docs as it should be clearer there that using variable replacement will have a negative impact on performance.  Also some examples could be provided to give clarity on the correct syntax to use.\n\nThe function help for __groovy could also do with this information.\n\nThere seem to be other metaspace bugs against later versions of Groovy, e.g.: https://issues.apache.org/jira/browse/GROOVY-8189\n\nJavascript\n\nI currently haven't got a simple test that shows the problems we encountered with our long running load tests in 3.2 vs earlier Jmeter.  I will try and re-execute the tests, but I might not get a slot to execute the tests until early next week.  I would ignore anything related to JS until then."}, {"count": 17, "tags": [], "bug_id": 61556, "text": "(In reply to Justin McCartney from comment #16)\n> Hi Philippe,\n> \n> Groovy\n> \n> I verified again and the (3.2 default included) groovy jar is definitely\n> removed.  The only Groovy jar on the class path is groovy-all-2.4.7.jar.  I\n> re-executed the test with 3.2 and received the same result, OOM metaspace.\n> \n> I see that your Jmeter docs you linked to do actually mention not to be use\n> variable replacement for Groovy scripts which is good.  However, I think\n> this should be added to the IfController docs as it should be clearer there\n> that using variable replacement will have a negative impact on performance. \n> Also some examples could be provided to give clarity on the correct syntax\n> to use.\n> \n> The function help for __groovy could also do with this information.\n> \n> There seem to be other metaspace bugs against later versions of Groovy,\n> e.g.: https://issues.apache.org/jira/browse/GROOVY-8189\n> \n> Javascript\n> \n> I currently haven't got a simple test that shows the problems we encountered\n> with our long running load tests in 3.2 vs earlier Jmeter.  I will try and\n> re-execute the tests, but I might not get a slot to execute the tests until\n> early next week.  I would ignore anything related to JS until then.\n\nHello Justin,\nWould you be ready to contribute a PR for documentation improvements ?\n\n- http://jmeter.apache.org/building.html\n\nI'll be happy to merge it.\nThanks\nRegards", "id": 201168, "time": "2017-09-27T18:44:00Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-09-27T18:44:00Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "bug_id": 61556, "text": "Hi Justin,\nAny feedback on this issue ?\n\nThanks\nRegards", "id": 201287, "time": "2017-10-03T19:37:12Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-10-03T19:37:12Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 61556, "attachment_id": null, "id": 201294, "time": "2017-10-04T08:18:26Z", "creator": "be_strew@yahoo.co.uk", "creation_time": "2017-10-04T08:18:26Z", "is_private": false, "text": "(In reply to Philippe Mouawad from comment #18)\n> Hi Justin,\n> Any feedback on this issue ?\n> \n> Thanks\n> Regards\n\nHi Philippe,\n\nsorry I have been busy on other tasks but I am currently adding to the docs and should hopefully have a pull request for the doc update today.\n\nI still need to get time to re-execute the long duration tests in relation to the JS change from 3.1 to 3.2, but I might not get a slot for that until late next week.\n\nThanks,\n\nJustin"}, {"count": 20, "tags": [], "bug_id": 61556, "text": "Added pull request for documentation changes: \n\nhttps://github.com/apache/jmeter/pull/314", "id": 201295, "time": "2017-10-04T09:09:10Z", "creator": "be_strew@yahoo.co.uk", "creation_time": "2017-10-04T09:09:10Z", "is_private": false, "attachment_id": null}, {"count": 21, "tags": [], "bug_id": 61556, "text": "Author: pmouawad\nDate: Thu Oct  5 20:28:05 2017\nNew Revision: 1811257\n\nURL: http://svn.apache.org/viewvc?rev=1811257&view=rev\nLog:\nBug 61556 - Clarify in documentation performance impacts of ${} var usage in IfController and groovy\nContributed by  Justin McCartney\nThis closes #314\nBugzilla Id: 61556\n\nModified:\n    jmeter/trunk/xdocs/changes.xml\n    jmeter/trunk/xdocs/usermanual/component_reference.xml\n    jmeter/trunk/xdocs/usermanual/functions.xml", "id": 201312, "time": "2017-10-05T20:28:30Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-10-05T20:28:30Z", "is_private": false, "attachment_id": null}, {"count": 22, "tags": [], "bug_id": 61556, "text": "Thanks a lot for your PR.", "id": 201313, "time": "2017-10-05T20:28:53Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2017-10-05T20:28:53Z", "is_private": false, "attachment_id": null}]