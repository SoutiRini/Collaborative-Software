[{"count": 0, "tags": [], "creator": "richard.cross@uk.wanadoo.com", "text": "Could there be an extra property to the input task that masks the entries as you\ntype them (with asterisks for example)?\n\nMy ant script checks files outt of StarTeam before a build, so I need the following:\n<input message=\"StarTeam login: \" addproperty=\"st.user\"/>\n<input message=\"StarTeam password: \" addproperty=\"st.password\"/>\n\nHowever when you run this:\n\ninit:\n    [input] StarTeam login:\nrcross\n    [input] StarTeam password:\nmypasswordforalltosee\n\nwhich is extremely insecure if someone happens to be standing behind you.", "id": 70357, "time": "2005-02-02T12:12:44Z", "bug_id": 33354, "creation_time": "2005-02-02T12:12:44Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 33354, "text": "This is a CANTFIX, not unless/until sun open up their JVM so that console input\ncan be made non echoing. I think there is a bugrep in java.sun.com about that\nvery problem.\n\nYou could write a new input handler, one that brings up an AWT window and asks\nfor input; something like that could be a valuable addition to the codebase. But\nconsole input works the way we are given. ", "id": 70362, "time": "2005-02-02T12:35:57Z", "creator": "stevel@apache.org", "creation_time": "2005-02-02T12:35:57Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "I'd like to look into this anyway as I've been messing with JAAS and I have my\nsecurity head on right now - You think an AWT based input handler would be a\ngood addition?\n\nKev", "is_private": false, "id": 70364, "creator": "kevin.jackson@it.fts-vn.com", "time": "2005-02-02T12:39:39Z", "bug_id": 33354, "creation_time": "2005-02-02T12:39:39Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "richard.cross@uk.wanadoo.com", "text": "Forgive my naivety here but can't you simply call the getpass() C library\n(stdlib.h in Unix, msvcrt.dll in windows)?", "id": 70366, "time": "2005-02-02T12:59:14Z", "bug_id": 33354, "creation_time": "2005-02-02T12:59:14Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "(In reply to comment #3)\n> Forgive my naivety here but can't you simply call the getpass() C library\n> (stdlib.h in Unix, msvcrt.dll in windows)?\n\nThere meay be a way around this in Java 1.4+ with JAAS, there's a standard\nPasswordCallback and you can set echo off, this may do the trick, but would\nprobably break BC", "is_private": false, "id": 70367, "creator": "kevin.jackson@it.fts-vn.com", "time": "2005-02-02T13:11:10Z", "bug_id": 33354, "creation_time": "2005-02-02T13:11:10Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "stevel@apache.org", "text": "Richard,\n\nTo call getpass() we'd need a JNI implementation for every platform that ant\nruns on. \n\nKev,\n\nA special password input handler could be written (and made optional for\njava1.4+/JASS) which people would then have to ask for at the command line with\n-inputhandler)\n\n", "id": 70372, "time": "2005-02-02T14:31:26Z", "bug_id": 33354, "creation_time": "2005-02-02T14:31:26Z", "is_private": false, "attachment_id": null}, {"count": 6, "attachment_id": null, "bug_id": 33354, "text": "Maybe we should also provide a \"handler\" attribute for <input/>\nso that people can put this in their buildfiles.\n\nSo people can decide what to use in a case by case basis.\n\nI personally hate to have to pass long global options in the invocation of ANT.\n", "id": 70382, "time": "2005-02-02T16:42:03Z", "creator": "j_a_fernandez@yahoo.com", "creation_time": "2005-02-02T16:42:03Z", "tags": [], "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 33354, "text": "The reason for the -inputhandler option is to let containers (like guis handle\nthis), so that you can have IDEs with input dialogs. I dont want to break this.\n\nA password flag that looked for a handler that implemented a new extended\nhandler and used its inputNoEcho() call if present, fell back to the existing\ninterface would work.", "id": 70385, "time": "2005-02-02T16:53:05Z", "creator": "stevel@apache.org", "creation_time": "2005-02-02T16:53:05Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "kevin.jackson@it.fts-vn.com", "text": "OK, after writing a password handler based on JAAS, I discovered that the\nPasswordCallback set to display = false, still displays the password on the\ncommand line.  I think it's reasonable to assume that this has already been\nreported as a bug to Sun, so...\n\nMy next avenue was to write a simple Swing GUI inputhandler.  It works rather\nnicely although I'm not sure exactly how I can write a unit test for it...\n\nJust call with the -inputhandler org.apache.tools.ant.input.GUIInputHandler.  It\nlooks for a \"pass\" within the prompt and if found masks the input, otherwise it\nbehaves like the console version, echoing back the input.\n\nI'll attach the patch in a moment.  Very simple and I don't claim to be a UI\nprogrammer so please forgive the clunkiness.\n\nkev", "id": 70446, "time": "2005-02-03T09:55:01Z", "bug_id": 33354, "creation_time": "2005-02-03T09:55:01Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 33354, "text": "Created attachment 14167\nGUIInputHandler\n\nI've tested this manually, but I couldn't work out how to write a JUnit test\nthat would be effective, sorry 'bout that.\n\nKev", "id": 70447, "time": "2005-02-03T09:56:36Z", "creator": "kevin.jackson@it.fts-vn.com", "creation_time": "2005-02-03T09:56:36Z", "is_private": false, "attachment_id": 14167}, {"count": 10, "tags": [], "creator": "j_a_fernandez@yahoo.com", "text": "(In reply to comment #7)\n> The reason for the -inputhandler option is to let containers (like guis \nhandle\n> this), so that you can have IDEs with input dialogs. I dont want to break \nthis.\n\nThis is fine, and I do not want to break it either. But, it would be nice to\nallow buildfile writers to decide how they want their input managed on an \ninput by input basis. For example, I may want to run ANT using the \nPropertyFileInputHandler during the build, but still being able to enforce \nthat sensitive passwords have to be provided thru a GUI no matter what.\n\nI think both should be able to coexist nicely, don't you think so?\n", "id": 70453, "time": "2005-02-03T11:17:51Z", "bug_id": 33354, "creation_time": "2005-02-03T11:17:51Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 33354, "attachment_id": null, "is_private": false, "id": 70493, "time": "2005-02-04T09:39:19Z", "creator": "shalmaneser@ePost.de", "creation_time": "2005-02-04T09:39:19Z", "text": "As an afterthought, and in reply to\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=33354#c5:\n\nWe don't necessarily need JNI, nor sacrifice backward compatibility:\nSee here: http://java.sun.com/developer/technicalArticles/Security/pwordmask/\n\nBecause this might be interesting for more than one project: how about placing a\nclass for this into commons io?\n\nBut as Stefan pointed out in\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=6687#c3, this might be\nproblemantic, because ant redirects System.out through it's internal logging.\n\nBut I think, this can be fixed, by simply suspending the ANT Logging and\nreinstalling the original System.out during password input under the assumption,\nthat we are basically singlethreaded during that time...\n\nUnfortunately, this means that we need to retain a copy of the original\nSystem.out somewhere.\n\nAnyway, all of this is idle thinking, as long as the password will get exposed\nanyway, when echoed by debug output."}, {"count": 12, "attachment_id": null, "bug_id": 33354, "text": "*** Bug 33464 has been marked as a duplicate of this bug. ***", "id": 70700, "time": "2005-02-09T13:28:14Z", "creator": "jan@materne.de", "creation_time": "2005-02-09T13:28:14Z", "tags": [], "is_private": false}]