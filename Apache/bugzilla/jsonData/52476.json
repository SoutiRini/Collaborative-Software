[{"count": 0, "tags": [], "text": "When setting \"AcceptFilter https none\" on an SSL installation, some resources are served incomplete or empty.\n\nA simple test instance was configured to duplicate this problem. When testing, openssl s_client to the 127.0.0.1:443 always failed (as did LWP tests). Firefox 8.0.1 and IE 8 did not consistently fail but were able to be duplicated.\n\nThe following log entry on trace8 is common across all failures:\n[Tue Jan 17 09:03:18.268556 2012] [ssl:trace3] [pid 1088:tid 1232] ssl_engine_kernel.c(1869): [client 127.0.0.1:55354] OpenSSL: Exit: error in SSLv2/v3 read client hello A\n\nIt would appear the ClientHello message is malformatted when it reaches mod_ssl.\n\nLogs can be found here:\nhttp://people.apache.org/~druggeri/logs/WinSSL/\n\nThe test instance with the dummy configuration is here:\nhttp://people.apache.org/~druggeri/logs/WinSSL/testInstance.zip\n\n\nA simple perl script in the root of the test instance zip file called testMe.pl is provided.", "attachment_id": null, "bug_id": 52476, "id": 152847, "time": "2012-01-17T15:31:08Z", "creator": "DRuggeri@primary.net", "creation_time": "2012-01-17T15:31:08Z", "is_private": false}, {"count": 1, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "text": "Daniel,\n\nthanks for that. Most files have permissions 000 so can not be viewed. Could you please fix the perms?\n\nThanks!\n\nRainer", "id": 152852, "time": "2012-01-17T18:47:26Z", "bug_id": 52476, "creation_time": "2012-01-17T18:47:26Z", "is_private": false}, {"count": 2, "tags": [], "creator": "DRuggeri@primary.net", "attachment_id": null, "text": "Sorry about that - I had corrected logs.zip but forgot to make the individual files 755. Should be good now.", "id": 152854, "time": "2012-01-17T19:49:39Z", "bug_id": 52476, "creation_time": "2012-01-17T19:49:39Z", "is_private": false}, {"count": 3, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 152861, "time": "2012-01-17T21:57:24Z", "bug_id": 52476, "creation_time": "2012-01-17T21:57:24Z", "is_private": false, "text": "Thanks, using OpenSSL as a client I can now reproduce as well.\n\nI tried to debug into it. As soon as I add some additional debugging statements to our debug callback function ssl_io_data_dump() I can no longer reproduce the problem. The smallest change that makes it no longer reproducible with OpenSSL as a client is adding \"Sleep(1);\" at the beginning of ssl_io_data_dump().\n\nAny chance you can check, whether that is true for you as well?\n\nIf so it seems that there is a timing issue between BIO and the lower input filter.\n\nRegards,\n\nRainer"}, {"count": 4, "tags": [], "bug_id": 52476, "attachment_id": null, "is_private": false, "id": 152865, "time": "2012-01-18T01:53:11Z", "creator": "DRuggeri@primary.net", "creation_time": "2012-01-18T01:53:11Z", "text": "Sounds like a race condition. I can try that, but I don't have a build environment. Can you share the mod_ssl.so file (or maybe the whole build)? I'll be able to verify tomorrow."}, {"count": 5, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "text": "Perhaps we are misconstruing a WSA_EAGAIN type of error, and the delay gives\njust enough time for browsers to transmit that first data packet?", "id": 152866, "time": "2012-01-18T03:35:13Z", "bug_id": 52476, "creation_time": "2012-01-18T03:35:13Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 52476, "attachment_id": null, "is_private": false, "id": 152867, "time": "2012-01-18T07:24:38Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2012-01-18T07:24:38Z", "text": "(In reply to comment #4)\n> Sounds like a race condition. I can try that, but I don't have a build\n> environment. Can you share the mod_ssl.so file (or maybe the whole build)? I'll\n> be able to verify tomorrow.\n\nI could, but I would much prefer a more independent verification. My build was done with VC 10. Where did you get your binary from, is it apachelounge? I guess Steffen could provide a special build with the Sleep(1) included for reproduction tests.\n\nSteffen, do you follow this ticket?"}, {"count": 7, "text": "(In reply to comment #5)\n> Perhaps we are misconstruing a WSA_EAGAIN type of error, and the delay gives\n> just enough time for browsers to transmit that first data packet?\n\nWhere in the code would that be, any idea?", "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 152868, "time": "2012-01-18T07:25:09Z", "bug_id": 52476, "creation_time": "2012-01-18T07:25:09Z", "tags": [], "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 52476, "attachment_id": null, "id": 152870, "time": "2012-01-18T07:47:54Z", "creator": "asfbugz@velox.ch", "creation_time": "2012-01-18T07:47:54Z", "is_private": false, "text": "I'm not really familiar with the I/O layer in mod_ssl, unfortunately, but from examining the logs provided by Daniel (thanks a lot), there seems to be a pattern which is common to the failure cases.\n\nIn opensslRequest\\error.log, we have:\n\n[Tue Jan 17 09:01:00.276626 2012] [ssl:info] [pid 10672:tid 1256] [client 127.0.0.1:55343] AH01964: Connection to child 63 established (server www.example.com:443)\n[Tue Jan 17 09:01:00.276626 2012] [ssl:trace2] [pid 10672:tid 1256] ssl_engine_rand.c(123): Seeding PRNG with 144 bytes of entropy\n[Tue Jan 17 09:01:00.276626 2012] [ssl:trace3] [pid 10672:tid 1256] ssl_engine_kernel.c(1832): [client 127.0.0.1:55343] OpenSSL: Handshake: start\n[Tue Jan 17 09:01:00.276626 2012] [ssl:trace3] [pid 10672:tid 1256] ssl_engine_kernel.c(1840): [client 127.0.0.1:55343] OpenSSL: Loop: before/accept initialization\n[Tue Jan 17 09:01:00.276626 2012] [core:trace6] [pid 10672:tid 1256] core_filters.c(502): [client 127.0.0.1:55343] core_output_filter: flushing because of FLUSH bucket\n[Tue Jan 17 09:01:00.276626 2012] [ssl:trace4] [pid 10672:tid 1256] ssl_engine_io.c(2000): [client 127.0.0.1:55343] OpenSSL: I/O error, 11 bytes expected to read on BIO#2856280 [mem: 28e0888]\n[Tue Jan 17 09:01:00.276626 2012] [ssl:trace3] [pid 10672:tid 1256] ssl_engine_kernel.c(1869): [client 127.0.0.1:55343] OpenSSL: Exit: error in SSLv2/v3 read client hello A\n[Tue Jan 17 09:01:00.276626 2012] [core:trace6] [pid 10672:tid 1256] core_filters.c(502): [client 127.0.0.1:55343] core_output_filter: flushing because of FLUSH bucket\n[Tue Jan 17 09:01:00.276626 2012] [ssl:trace4] [pid 10672:tid 1256] ssl_engine_io.c(2000): [client 127.0.0.1:55343] OpenSSL: I/O error, 11 bytes expected to read on BIO#2856280 [mem: 28e0888]\n[Tue Jan 17 09:01:00.276626 2012] [ssl:trace3] [pid 10672:tid 1256] ssl_engine_kernel.c(1869): [client 127.0.0.1:55343] OpenSSL: Exit: error in SSLv2/v3 read client hello A\n\nI'm not sure if there's some artifact in the logging infrastructure (all these have the same \u00b5sec timestamp), but what is peculiar is that whenever the request fails, there are two occurrences of \"OpenSSL: I/O error, 11 bytes expected\" - i.e., it looks like the same thread (tid 1256, in the above case) is trying to read the client hello, but apparently doesn't get anything.\n\nFor successful requests, the 11-byte read succeeds in the first attempt (see goodRequest\\error.log). Finally, in the firefox8.0.1Request\\error.log, there's this \"interesting\" combination of events:\n\n[Tue Jan 17 09:03:18.268556 2012] [ssl:info] [pid 1088:tid 1232] [client 127.0.0.1:55354] AH01964: Connection to child 43 established (server www.example.com:443)\n[Tue Jan 17 09:03:18.268556 2012] [ssl:trace2] [pid 1088:tid 1232] ssl_engine_rand.c(123): Seeding PRNG with 144 bytes of entropy\n[Tue Jan 17 09:03:18.268556 2012] [ssl:trace3] [pid 1088:tid 1232] ssl_engine_kernel.c(1832): [client 127.0.0.1:55354] OpenSSL: Handshake: start\n[Tue Jan 17 09:03:18.268556 2012] [ssl:trace3] [pid 1088:tid 1232] ssl_engine_kernel.c(1840): [client 127.0.0.1:55354] OpenSSL: Loop: before/accept initialization\n[Tue Jan 17 09:03:18.268556 2012] [core:trace6] [pid 1088:tid 1232] core_filters.c(502): [client 127.0.0.1:55354] core_output_filter: flushing because of FLUSH bucket\n[Tue Jan 17 09:03:18.268556 2012] [ssl:trace4] [pid 1088:tid 1232] ssl_engine_io.c(2000): [client 127.0.0.1:55354] OpenSSL: I/O error, 11 bytes expected to read on BIO#2756a80 [mem: 27e0890]\n[Tue Jan 17 09:03:18.268556 2012] [ssl:trace3] [pid 1088:tid 1232] ssl_engine_kernel.c(1869): [client 127.0.0.1:55354] OpenSSL: Exit: error in SSLv2/v3 read client hello A\n[Tue Jan 17 09:03:18.268556 2012] [core:trace6] [pid 1088:tid 1232] core_filters.c(502): [client 127.0.0.1:55354] core_output_filter: flushing because of FLUSH bucket\n[Tue Jan 17 09:03:18.268556 2012] [ssl:trace4] [pid 1088:tid 1232] ssl_engine_io.c(1989): [client 127.0.0.1:55354] OpenSSL: read 11/11 bytes from BIO#2756a80 [mem: 27e0890] (BIO dump follows)\n\nI.e., the first read fails, but the second one succeeds (and again, the timestamps are identical, but it's unclear if this reflects reality)."}, {"count": 9, "tags": [], "bug_id": 52476, "attachment_id": null, "id": 152901, "time": "2012-01-18T22:00:43Z", "creator": "gls@gknw.net", "creation_time": "2012-01-18T22:00:43Z", "is_private": false, "text": "Regarding Comment #3\n\nAdding Sleep(1); to the beginning of ssl_io_data_dump() seems to help, but then not. I used Daniels testme.pl script and that build of 2.3.16 to test. It is Apache Lounge, I can tell by the files in the bin & modules folders. \n\nMy results were as erratic as the behavior is to begin with. Running testme.pl 3 times each, here is what I saw;\n\n####### Unmodified mod_ssl #######\n161 attempts.\n0  SSL negotiation failed:\n33 attempts.\n0  SSL negotiation failed:\n179 attempts.\n0  SSL negotiation failed:\n\n####### mod_ssl w/ Sleep(1) #######\n22 attempts.\n0  SSL negotiation failed:\n3793 attempts.\n0  Server closed connection without sending any data back\n55 attempts.\n0  SSL negotiation failed:\n\nI was also asked off list to try OpenSSL 0.9.8 by someone, to see how it behaved. It did not do much better.\n\n758 attempts.\n0  SSL negotiation failed:\n291 attempts.\n0  SSL negotiation failed:\n106 attempts.\n0  SSL negotiation failed:\n\nVC9 mod_ssl/OpenSSL 1.0.0e w/ Sleep(1) in ssl_io_data_dump() \n\nhttp://people.apache.org/~gsmith/httpd/PR52476/mod_ssl_io_sleep.zip"}, {"count": 10, "tags": [], "text": "I'll add that my testing was on Vista x86", "is_private": false, "bug_id": 52476, "id": 152902, "time": "2012-01-18T22:03:04Z", "creator": "gls@gknw.net", "creation_time": "2012-01-18T22:03:04Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 52476, "attachment_id": null, "id": 152909, "time": "2012-01-18T23:55:40Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2012-01-18T23:55:40Z", "is_private": false, "text": "Gregg,\n\nthanks a lot for testing. I must explain, that Sleep(1) was a bit to simple as an explanation. The ssl_io_data_dump() function is registered as a callback with the OpenSSL BIO layer, which does the low level I/O. The callback is normally only used to log data read when debug logging is on. But is is called before and after each BIO operation by OpenSSL.\n\nThe first call is before the first read. The first read expects 11 bytes, but when actually trying to read them we get an error code. Bill's expectation is, that the first read happens to early and the error code is not a fatal one, but instead an error code that tells us to try again.\n\nBy adding the Sleep(), we give the client a little more time to actually deliver the first bytes. This is obviously not a fix, but an interesting way to harden Bill's EAGAIN explanation.\n\nNow I was choosing Sleep(1) and it helped here, but the \"1\" would depend on how long we expect the client needs to send the first handshake bytes. The observation, that a \"1\" helps a bit but some requests are still broken is somewhat expected. If you increase the \"1\", say to \"10\" and then \"50\", the number of broken requests should drop to a very small percentage.\n\nI hope Bill will give us hints, where we do have to look for the missing handling of EAGAIN.\n\nThanks!\n\nRainer"}, {"count": 12, "tags": [], "text": "Created attachment 28175\ndebug SSL I/O reads\n\nWhen mod_ssl tries to read the client handshake from the input filter stack, it should be a blocking read (APR_BLOCK_READ), so if an EAGAIN or empty brigade is propagating up, that is a bug somewhere else.\n\nCan you try with the attached patch to see what mod_ssl is receiving from the filter stack?", "attachment_id": 28175, "id": 152920, "creator": "jorton@redhat.com", "time": "2012-01-19T11:39:20Z", "bug_id": 52476, "creation_time": "2012-01-19T11:39:20Z", "is_private": false}, {"count": 13, "tags": [], "text": "It looks like an empty brigade/s\n\n[Thu Jan 19 15:22:52.389200 2012] [ssl:debug] [pid 4816:tid 1028] ssl_engine_kernel.c(1881): [client 127.0.0.1:50778] AH02041: Connection: Client IP: , Protocol: TLSv1, Cipher: ECDHE-RSA-AES256-SHA (256/256 bits)\n[Thu Jan 19 15:22:52.389200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(475): [client 127.0.0.1:50778] read of 5 bytes => 0, mode = blocking, brigade is non-empty\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace4] [pid 4816:tid 1028] ssl_engine_io.c(1994): [client 127.0.0.1:50778] OpenSSL: read 5/5 bytes from BIO#1d08eb0 [mem: 1d97663] (BIO dump follows)\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1927): +-------------------------------------------------------------------------+\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 0000: 17 03 01 00 b0                                   .....            |\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1972): +-------------------------------------------------------------------------+\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(475): [client 127.0.0.1:50778] read of 176 bytes => 0, mode = blocking, brigade is non-empty\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace4] [pid 4816:tid 1028] ssl_engine_io.c(1994): [client 127.0.0.1:50778] OpenSSL: read 176/176 bytes from BIO#1d08eb0 [mem: 1d97668] (BIO dump follows)\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1927): +-------------------------------------------------------------------------+\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 0000: 2f 7c ee 2e 4f fc 7d 19-ad dc e2 9f 50 a2 87 b5  /|..O.}.....P... |\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 0010: 43 49 80 84 da aa 75 0f-c6 b6 3f aa 25 36 d8 96  CI....u...?.%6.. |\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 0020: 8f 91 0e 45 cb 69 cb f9-e5 dd 40 72 67 1e b4 fb  ...E.i....@rg... |\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 0030: a0 e2 93 5a 03 e5 43 1c-d7 30 c7 49 58 3f dc b8  ...Z..C..0.IX?.. |\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 0040: 7c f1 22 1b 83 5e 03 ab-dc 95 a9 6b 23 a9 d1 30  |.\"..^.....k#..0 |\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 0050: 9e c5 82 ca 7d d0 ae ea-05 2b 72 4a 16 a1 a4 f7  ....}....+rJ.... |\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 0060: d2 43 bf ea ee f7 d7 6e-57 94 cf 8f 67 2b 70 52  .C.....nW...g+pR |\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 0070: b5 bb bc fc 18 23 d6 85-bc 7a 1e 10 a6 ca 2d 98  .....#...z....-. |\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 0080: 06 5f 3f 25 f9 da 81 b1-27 90 70 1b e1 d1 4f 7d  ._?%....'.p...O} |\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 0090: 7a 93 d7 dc c0 6a bd 10-09 50 f3 b0 31 40 80 2b  z....j...P..1@.+ |\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 00a0: 13 28 fc 13 ef 70 08 d3-bf 87 80 1f ed 88 ac 57  .(...p.........W |\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1972): +-------------------------------------------------------------------------+\n[Thu Jan 19 15:22:52.390200 2012] [ssl:debug] [pid 4816:tid 1028] ssl_engine_kernel.c(236): [client 127.0.0.1:50778] AH02034: Initial (No.1) HTTPS request received for child 62 (server www.example.com:443)\n[Thu Jan 19 15:22:52.390200 2012] [ssl:trace4] [pid 4816:tid 1028] ssl_engine_io.c(1444): [client 127.0.0.1:50778] coalesce: have 0 bytes, adding 265 more\n[Thu Jan 19 15:22:52.391200 2012] [ssl:trace3] [pid 4816:tid 1028] ssl_engine_kernel.c(1850): [client 127.0.0.1:50778] OpenSSL: Write: SSL negotiation finished successfully\n[Thu Jan 19 15:22:52.391200 2012] [ssl:debug] [pid 4816:tid 1028] ssl_engine_io.c(989): [client 127.0.0.1:50778] AH02001: Connection closed to child 62 with standard shutdown (server www.example.com:443)\n[Thu Jan 19 15:22:52.397200 2012] [ssl:info] [pid 4816:tid 1028] [client 127.0.0.1:50779] AH01964: Connection to child 62 established (server www.example.com:443)\n[Thu Jan 19 15:22:52.397200 2012] [ssl:trace2] [pid 4816:tid 1028] ssl_engine_rand.c(123): Seeding PRNG with 144 bytes of entropy\n[Thu Jan 19 15:22:52.397200 2012] [ssl:trace3] [pid 4816:tid 1028] ssl_engine_kernel.c(1832): [client 127.0.0.1:50779] OpenSSL: Handshake: start\n[Thu Jan 19 15:22:52.397200 2012] [ssl:trace3] [pid 4816:tid 1028] ssl_engine_kernel.c(1840): [client 127.0.0.1:50779] OpenSSL: Loop: before/accept initialization\n[Thu Jan 19 15:22:52.397200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(475): [client 127.0.0.1:50779] read of 11 bytes => 0, mode = blocking, brigade is empty\n[Thu Jan 19 15:22:52.397200 2012] [ssl:trace4] [pid 4816:tid 1028] ssl_engine_io.c(2005): [client 127.0.0.1:50779] OpenSSL: I/O error, 11 bytes expected to read on BIO#1d08eb0 [mem: 1d97660]\n[Thu Jan 19 15:22:52.397200 2012] [ssl:trace3] [pid 4816:tid 1028] ssl_engine_kernel.c(1869): [client 127.0.0.1:50779] OpenSSL: Exit: error in SSLv2/v3 read client hello A\n[Thu Jan 19 15:22:52.397200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(475): [client 127.0.0.1:50779] read of 11 bytes => 0, mode = blocking, brigade is empty\n[Thu Jan 19 15:22:52.397200 2012] [ssl:trace4] [pid 4816:tid 1028] ssl_engine_io.c(2005): [client 127.0.0.1:50779] OpenSSL: I/O error, 11 bytes expected to read on BIO#1d08eb0 [mem: 1d97660]\n[Thu Jan 19 15:22:52.397200 2012] [ssl:trace3] [pid 4816:tid 1028] ssl_engine_kernel.c(1869): [client 127.0.0.1:50779] OpenSSL: Exit: error in SSLv2/v3 read client hello A\n[Thu Jan 19 15:22:52.400200 2012] [ssl:info] [pid 4816:tid 1028] [client 127.0.0.1:50780] AH01964: Connection to child 62 established (server www.example.com:443)\n[Thu Jan 19 15:22:52.400200 2012] [ssl:trace2] [pid 4816:tid 1028] ssl_engine_rand.c(123): Seeding PRNG with 144 bytes of entropy\n[Thu Jan 19 15:22:52.400200 2012] [ssl:trace3] [pid 4816:tid 1028] ssl_engine_kernel.c(1832): [client 127.0.0.1:50780] OpenSSL: Handshake: start\n[Thu Jan 19 15:22:52.400200 2012] [ssl:trace3] [pid 4816:tid 1028] ssl_engine_kernel.c(1840): [client 127.0.0.1:50780] OpenSSL: Loop: before/accept initialization\n[Thu Jan 19 15:22:52.400200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(475): [client 127.0.0.1:50780] read of 11 bytes => 0, mode = blocking, brigade is empty\n[Thu Jan 19 15:22:52.401200 2012] [ssl:trace4] [pid 4816:tid 1028] ssl_engine_io.c(2005): [client 127.0.0.1:50780] OpenSSL: I/O error, 11 bytes expected to read on BIO#1d09060 [mem: 1d97660]\n[Thu Jan 19 15:22:52.401200 2012] [ssl:trace3] [pid 4816:tid 1028] ssl_engine_kernel.c(1869): [client 127.0.0.1:50780] OpenSSL: Exit: error in SSLv2/v3 read client hello A\n[Thu Jan 19 15:22:52.401200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(475): [client 127.0.0.1:50780] read of 11 bytes => 0, mode = blocking, brigade is empty\n[Thu Jan 19 15:22:52.401200 2012] [ssl:trace4] [pid 4816:tid 1028] ssl_engine_io.c(2005): [client 127.0.0.1:50780] OpenSSL: I/O error, 11 bytes expected to read on BIO#1d09060 [mem: 1d97660]\n[Thu Jan 19 15:22:52.401200 2012] [ssl:trace3] [pid 4816:tid 1028] ssl_engine_kernel.c(1869): [client 127.0.0.1:50780] OpenSSL: Exit: error in SSLv2/v3 read client hello A\n[Thu Jan 19 15:22:52.426200 2012] [ssl:info] [pid 4816:tid 1028] [client 127.0.0.1:50781] AH01964: Connection to child 62 established (server www.example.com:443)\n[Thu Jan 19 15:22:52.426200 2012] [ssl:trace2] [pid 4816:tid 1028] ssl_engine_rand.c(123): Seeding PRNG with 144 bytes of entropy\n[Thu Jan 19 15:22:52.426200 2012] [ssl:trace3] [pid 4816:tid 1028] ssl_engine_kernel.c(1832): [client 127.0.0.1:50781] OpenSSL: Handshake: start\n[Thu Jan 19 15:22:52.426200 2012] [ssl:trace3] [pid 4816:tid 1028] ssl_engine_kernel.c(1840): [client 127.0.0.1:50781] OpenSSL: Loop: before/accept initialization\n[Thu Jan 19 15:22:52.426200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(475): [client 127.0.0.1:50781] read of 11 bytes => 0, mode = blocking, brigade is non-empty\n[Thu Jan 19 15:22:52.426200 2012] [ssl:trace4] [pid 4816:tid 1028] ssl_engine_io.c(1994): [client 127.0.0.1:50781] OpenSSL: read 11/11 bytes from BIO#1d08d90 [mem: 1d97660] (BIO dump follows)\n[Thu Jan 19 15:22:52.426200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1927): +-------------------------------------------------------------------------+\n[Thu Jan 19 15:22:52.426200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1966): | 0000: 80 2e 01 00 02 00 15 00-00 00 10                 ...........      |\n[Thu Jan 19 15:22:52.426200 2012] [ssl:trace7] [pid 4816:tid 1028] ssl_engine_io.c(1972): +-------------------------------------------------------------------------+\n[Thu Jan 19 15:22:52.426200 2012] [ssl:trace3] [pid 4816:tid 1028] ssl_engine_kernel.c(1869): [client 127.0.0.1:50781] OpenSSL: Exit: error in SSLv2/v3 read client hello A\n[Thu Jan 19 15:22:52.426200 2012] [ssl:info] [pid 4816:tid 1028] [client 127.0.0.1:50781] AH02008: SSL library error 1 in handshake (server www.example.com:443)\n[Thu Jan 19 15:22:52.426200 2012] [ssl:info] [pid 4816:tid 1028] SSL Library Error: error:140760FC:SSL routines:SSL23_GET_CLIENT_HELLO:unknown protocol -- speaking not SSL to HTTPS port!?\n[Thu Jan 19 15:22:52.426200 2012] [ssl:info] [pid 4816:tid 1028] [client 127.0.0.1:50781] AH01998: Connection closed to child 62 with abortive shutdown (server www.example.com:443)", "is_private": false, "bug_id": 52476, "id": 152961, "time": "2012-01-19T23:40:58Z", "creator": "gls@gknw.net", "creation_time": "2012-01-19T23:40:58Z", "attachment_id": null}, {"count": 14, "tags": [], "text": "[Thu Jan 19 15:22:52.397200 2012] [ssl:trace7] [pid 4816:tid 1028]\nssl_engine_io.c(475): [client 127.0.0.1:50779] read of 11 bytes => 0, mode =\nblocking, brigade is empty\n\nThanks, Gregg.  This would suggest Bill's intuition about an EAGAIN is correct, but specifically, the only way this could happen is if apr_bucket_read() is returning EAGAIN for a blocking read.  The core input filter should really treat that as an error, because it should never happen.\n\nThe obvious step on Unix would be to get \"strace\" output to see what the system calls are doing, but somebody with Windows domain expertise will have to suggest what to do.", "is_private": false, "bug_id": 52476, "id": 152969, "time": "2012-01-20T10:24:32Z", "creator": "jorton@redhat.com", "creation_time": "2012-01-20T10:24:32Z", "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 52476, "attachment_id": null, "is_private": false, "id": 152979, "time": "2012-01-20T18:26:22Z", "creator": "wrowe@apache.org", "creation_time": "2012-01-20T18:26:22Z", "text": "I suspect I now know the origin of the bug... give me through this evening (CST) to wrangle it.  We have a 'special case' filter where the first bytes of an AcceptEx + data is handed up the brigade.  Since there are no first bytes, and we don't read, and we aren't blocking (as mod_ssl expects) - this is a very likely possibility."}, {"count": 16, "tags": [], "bug_id": 52476, "attachment_id": null, "is_private": false, "id": 152980, "time": "2012-01-20T19:02:02Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2012-01-20T19:02:02Z", "text": "Bill: did you notice http://svn.apache.org/viewvc?rev=1233882&view=rev ?"}, {"count": 17, "tags": [], "text": "Re: comment #16, yes but its irrelevant.  We don't want to hit that errored state.", "attachment_id": null, "id": 152981, "creator": "wrowe@apache.org", "time": "2012-01-20T19:25:09Z", "bug_id": 52476, "creation_time": "2012-01-20T19:25:09Z", "is_private": false}, {"count": 18, "tags": [], "bug_id": 52476, "attachment_id": null, "id": 153033, "time": "2012-01-23T04:29:19Z", "creator": "wrowe@apache.org", "creation_time": "2012-01-23T04:29:19Z", "is_private": false, "text": "So, there is no special-case filter... I had modified the logic that was\nunusable within the 'public', simple-yet-insufficient ap_process_connection,\nwhich would otherwise do;\n\n    ap_update_vhost_given_ip(c);\n\n    rc = ap_run_pre_connection(c, csd);\n    if (rc != OK && rc != DONE) {\n        c->aborted = 1;\n    }\n\n    if (!c->aborted) {\n        ap_run_process_connection(c);\n    }\n\nNote that the event, simple and winnt mpm's all have custom implementations\nof that not-altogether useful sequence of instructions.\n\nSo mpm/winnt/child.c worker_main() reimplements this logic for those cases\nwhere we must inject an initial bucket of data, pulled from the accepted\nsocket by AcceptEx.  Really there is little special about Acceptfilter none;\nit bypasses that magic, the initial brigade is empty and obtains one socket\nbucket.\n\nNow the only idea I have left is that somewhere in the code path\n        else /* (accf = 0)  e.g. 'none' */\nwhere we handle accept(), play some setsockopt games, and call apr_os_sock_make\napr and mpm_winnt disagree on the default state of that new apr_socket_t.\n\nThat is about the last explanation which would address these interesting\ntiming observations, that apr is not blocking, but httpd assumes that it is."}, {"count": 19, "tags": [], "text": "That stuff in winnt/child.c w.r.t. handling the data bucket insertion looks pretty fragile, faking up the internals of the core_input_filter's context structure!\n\nCouldn't we replace the core input filter's call to:\n\n        e = apr_bucket_socket_create(net->client_socket, f->c->bucket_alloc);\n\nwith a call out to the MPM, so the winNT MPM can insert its data bucket there?", "attachment_id": null, "bug_id": 52476, "id": 153041, "time": "2012-01-23T10:49:44Z", "creator": "jorton@redhat.com", "creation_time": "2012-01-23T10:49:44Z", "is_private": false}, {"count": 20, "tags": [], "bug_id": 52476, "attachment_id": null, "is_private": false, "id": 153078, "time": "2012-01-23T20:06:29Z", "creator": "wrowe@apache.org", "creation_time": "2012-01-23T20:06:29Z", "text": "Joe, if you can fix up event.c with a sufficiently generic framework, then\nI would guess windows would plug right in.\n\nI had always assumed that the MPM was in part owner of the network mechanics\nand core filter, as evidenced by event.mpm, and the additional changes which\nwill be needed if httpd ever becomes fully async."}, {"count": 21, "tags": [], "text": "Created attachment 29206\n\"MSG_PEEK\" workaround for PR 52476\n\nDerived from a patch posted to dev@httpd by Claudio Caldato", "is_private": false, "bug_id": 52476, "id": 161216, "time": "2012-08-09T22:45:12Z", "creator": "trawick@apache.org", "creation_time": "2012-08-09T22:45:12Z", "attachment_id": 29206}, {"count": 22, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "id": 161217, "time": "2012-08-09T22:48:00Z", "bug_id": 52476, "creation_time": "2012-08-09T22:48:00Z", "is_private": false, "text": "Is anyone able to try this MSG_PEEK workaround?  It works for me, but you know how that goes..."}, {"count": 23, "tags": [], "text": "Fixed in trunk with\n\nhttp://svn.apache.org/viewvc?view=revision&revision=1371801\n\nThe patch I posted yesterday is obsolete, as this is the real fix.\n\nI'll propose this fix for 2.4.next shortly.", "is_private": false, "id": 161242, "creator": "trawick@apache.org", "time": "2012-08-10T18:22:27Z", "bug_id": 52476, "creation_time": "2012-08-10T18:22:27Z", "attachment_id": null}, {"count": 24, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "id": 161406, "time": "2012-08-14T23:44:14Z", "bug_id": 52476, "creation_time": "2012-08-14T23:44:14Z", "is_private": false, "text": "The real fix is in 2.4.x and will be released with 2.4.3 \"soon\"."}]