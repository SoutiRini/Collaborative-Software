[{"count": 0, "tags": [], "bug_id": 21991, "attachment_id": null, "text": "I was writing a WebMail system based on JSTL, and wanted to display the contents \nof a message with JSTL/EL.\n\nI used ${message.subject} which worked fine, but ${message.content} resulted in \nthe exception \n\n[30/07/03 14:22:58:965 BST] 22eeff03 WebGroup      E SRVE0026E: [Servlet Error]\n-[An error occurred while evaluating custom action attribute &quot;value&quot; \nwith value &quot;${message[&#39;from&#39;]}&quot;: Unable to find a value for \n&quot;from&quot; in object of class &quot;com.sun.mail.pop3.POP3Message&quot; \nusing operator &quot;[]&quot;]: javax.servlet.jsp.JspException: An error \noccurred while evaluating custom action attribute \"value\" with value \n\"${message['from']}\": Unable to find a value for \"from\" in object of class \"com.\nsun.mail.pop3.POP3Message\" using operator \"[]\"\n\tat org.apache.taglibs.standard.lang.jstl.Evaluator.evaluate(Evaluator.java:\n140)\n\tat org.apache.taglibs.standard.lang.support.ExpressionEvaluatorManager.\nevaluate(ExpressionEvaluatorManager.java:112)\n\tat org.apache.taglibs.standard.tag.el.core.ExpressionUtil.\nevalNotNull(ExpressionUtil.java:85)\n\tat org.apache.taglibs.standard.tag.el.core.OutTag.\nevaluateExpressions(OutTag.java:137)\n\tat org.apache.taglibs.standard.tag.el.core.OutTag.doStartTag(OutTag.java:\n95)\n\tat org.apache.jsp._message._jspService(_message.java:115)\n\tat com.ibm.ws.webcontainer.jsp.runtime.HttpJspBase.service(HttpJspBase.\njava:89)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\tat com.ibm.ws.webcontainer.jsp.servlet.JspServlet$JspServletWrapper.\nservice(JspServlet.java:344)\n\tat com.ibm.ws.webcontainer.jsp.servlet.JspServlet.\nserviceJspFile(JspServlet.java:598)\n\tat com.ibm.ws.webcontainer.jsp.servlet.JspServlet.service(JspServlet.java:\n696)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n\n\nThis uses JavaMail 1.3.1, which /does/ have a message.getContent() method (doing \nso by code works fine, it's just EL that cannot resolve it).\n\nI suspect this may be due to the fact that the method getContent() throws an \nIOException.\n\nThe specs are ambiguous on this point:\n\nOtherwise (a JavaBeans object), coerce value-b[property name] to String\n> If value-b[property name] is a readable property of value-a[bean]\n> > if getter throws an exception: error\n> > otherwise: return result of getter call\n> otherwise: error\n\nI believe this is meant to convey that if an exception is thrown during the \nexecution of this method, throw an error, as opposed to if the method declares \nan exception.\n\nI'm not sure if the code is filtering out all methods that declares an \nexception; that would certainly explain the behaviour I'm seeing. If this is the \ncase, then IMHO the restriction should be removed since if the property access \nworks there is no reason to stop the method from behaving.\n\nIn any case, if a non-checked exception occurs during the evaluation of an EL \nexpression, the current behaviour is to raise that error; IMHO it shouldn't be \nany different for the checked exceptions.\n\nNote that the only workaround is to dump back into code to specifically extract \nall the individual properties that may have an exception which is certainly \nundesirable. Also, the addition of declared exceptions to existing beans will \nrender current EL expressions invalid which may be very undesirable in other \napplications.\n\nIf there is any other reason why it's not resolving ${message.content} (when \n${message.subject}, ${message.content} work then please let me know ...", "id": 41772, "time": "2003-07-30T13:36:12Z", "creator": "alex_blewitt@yahoo.com", "creation_time": "2003-07-30T13:36:12Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 21991, "attachment_id": null, "text": "I also forgot to note that the property 'content' is declared in a super-class (javax.mail.\ninternet.MimeMessage) and not in the base class com.sun....POP3Message\n", "id": 41780, "time": "2003-07-30T14:25:59Z", "creator": "alex_blewitt@yahoo.com", "creation_time": "2003-07-30T14:25:59Z", "is_private": false}, {"count": 2, "tags": [], "creator": "alex_blewitt@yahoo.com", "attachment_id": null, "id": 41791, "time": "2003-07-30T15:49:44Z", "bug_id": 21991, "creation_time": "2003-07-30T15:49:44Z", "is_private": false, "text": "This may be a bug in the way that the MimeMessage is written, rather than the EL \n(and/or the Introspector).\n\nDoing a Introspector.getBeanInfo() on the javax.mail.internet.MimeMessage \nresults in a PropertyDescriptor 'content' that has a write method (public void \nsetContent(Multipart)) but the read method is not present (should be public \nObject getContent()).\n\nSince the introspector isn't reporting it, there's not a lot that we can do here \nin order to find it from EL. As for why the introspector isn't reporting it, \nthat's another question. It could be to do with the fact that the return type \nand set type of the method are different, and as such they're not considered to \nbe the same type.\n\nI'd close this INVALID and just put it down to a badly written MimeMessage \nclass."}, {"count": 3, "tags": [], "text": "Last comment by Alex says it all.\n[Self resolving bugs... I like that :-)]", "attachment_id": null, "bug_id": 21991, "id": 41989, "time": "2003-08-02T01:47:51Z", "creator": "pierre.delisle@sun.com", "creation_time": "2003-08-02T01:47:51Z", "is_private": false}]