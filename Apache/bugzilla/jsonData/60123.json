[{"count": 0, "text": "We have an application that periodically monitors JMX \"Catalina:type=RequestProcessor,worker=*,name=*\" and looks at each entry returned from that wildcard, getting requestProcessingTime.  e.g., code with lines like this:\n\n    ObjectName requestProcessorWildcard = new ObjectName(\"Catalina:type=RequestProcessor,worker=*,name=*\");\n    Set<ObjectName> mbeans = mbs.queryNames(requestProcessorWildcard, null);\n    for (ObjectName name : mbeans) {\n        // Get \"processing time\" for the current request, if any\n        long currentReqProcTime = getLongValue(mbs, name, \"requestProcessingTime\") / 60000;\n\nWe sometimes see requestProcessingTime returning a value suggesting the request started on 1-1-1970, currently 46+ years ago.  Looking at Tomcat 7.0.57 source code (as what I have available to look at), I see this method in java/org/apache/coyote/RequestInfo.java:\n\n    public long getRequestProcessingTime() {\n        if ( getStage() == org.apache.coyote.Constants.STAGE_ENDED ) return 0;\n        else return (System.currentTimeMillis() - req.getStartTime());\n    }\n\nClearly, if req.getStartTime() == 0, this method will return a nonsensical request processing time.  This method ought to make sure the start time isn't zero before doing the subtraction.  When we see this, the request processor reports itself to be in stage 3 ... aka \"STAGE_SERVICE\".  Clearly the requests weren't started in 1970.  We don't know how the request is in the stage \"service\" but has its start time zeroed.\n\nNote that the person in this thread http://osdir.com/ml/users-tomcat.apache.org/2016-06/msg00204.html was probably experiencing the same flaw.  If you do the math 1466499689496 msec corresponds to the time span from 1-1-70 to Tue, 21 Jun 2016 09:01:29.496 GMT ... and the EMail was posted on 21 June 2016!  I haven't followed the code through to see what can cause this to occur.", "bug_id": 60123, "is_private": false, "id": 193666, "time": "2016-09-13T01:02:16Z", "creator": "eddie.kuns@gmail.com", "creation_time": "2016-09-13T01:02:16Z", "tags": [], "attachment_id": null}, {"count": 1, "tags": [], "text": "I can see a few ways this can happen. I'll look at making that code more robust.", "attachment_id": null, "bug_id": 60123, "id": 193855, "time": "2016-09-20T19:31:58Z", "creator": "markt@apache.org", "creation_time": "2016-09-20T19:31:58Z", "is_private": false}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "is_private": false, "id": 193856, "time": "2016-09-20T19:42:08Z", "bug_id": 60123, "creation_time": "2016-09-20T19:42:08Z", "text": "This has been fixed in the following branches:\n- 9.0.x for 9.0.0.M11 onwards\n- 8.5.x for 8.5.6 onwards\n- 8.0.x for 8.0.38 onwards\n- 7.0.x for 7.0.73 onwards\n- 6.0.x for 6.0.46 onwards"}]