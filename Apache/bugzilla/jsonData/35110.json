[{"count": 0, "tags": [], "bug_id": 35110, "attachment_id": null, "text": "When I try to open a .xls file on the IFS of my company's AS/400, I always get\nan exception thrown...when I call this job, I set the CLASSPATH variable to the\nfolder on the IFS where the poi-2.5.1-final-20040804.jar file is...this is what\nthe job log says in regards to the failure:\n\nMessage . . . . :   Java exception received when calling Java method.         \nCause . . . . . :   RPG procedure HSSF_OPEN in program ASCLIB/HSSFR4 received \n  Java exception \"java.io.IOException:\" when calling method \"<init>\" with     \n  signature \"(Ljava.io.InputStream;)V\" in class                               \n  \"org.apache.poi.poifs.filesystem.POIFSFileSystem\". Recovery  . . . :        \n  Contact the person responsible for program maintenance to determine the     \n  cause of the problem. Technical description . . . . . . . . :   If the      \n  exception indicates that the Java class was not found, ensure the class for \n  the method is in the class path. If the exception indicates that the Java   \n  method was not found, check the method name and signature. If the signature \n  is not correct, change the RPG prototype for the method, or change the Java \n  method, so that the return type and parameter types match. You can determine\n  the signatures for all the methods in class XYZ using command QSH CMD('javap\n  -s XYZ').                                                                   \n\nthis is the routine that's failing...\n\n *++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n *  hssf_open():  Open an existing HSSF Workbook                  \n *                                                                \n *     peFilename = IFS path/filename of workbook to open         \n *                                                                \n *  Returns the HSSFWorkbook object opened                        \n *++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nP hssf_open       B                   EXPORT                      \nD hssf_open       PI                  like(HSSFWorkbook)          \nD   peFilename                1024A   const varying               \n                                                                  \nD jFileInputStream...                                             \nD                 S               O   CLASS(*JAVA                 \nD                                     : 'java.io.FileInputStream')\n                                                                  \nD jInputStream...                                                 \nD                 S               O   CLASS(*JAVA                 \nD                                     : 'java.io.InputStream')     \n                                                                   \nD POIFSFilesystem...                                               \nD                 S               O   CLASS(*JAVA                  \nD                                     : 'org.apache.poi.poifs-     \nD                                     .filesystem.POIFSFileSystem')\n                                                                   \nD new_FileInputStream...                                           \nD                 pr              O   extproc(*JAVA                \nD                                     :'java.io.FileInputStream'   \nD                                     : *CONSTRUCTOR)              \nD                                     CLASS(*JAVA:                 \nD                                     'java.io.FileInputStream')   \nD  filename                           like(jString) const          \n                                                                   \nD new_POIFSFileSystem...                                           \nD                 pr              O   extproc(*JAVA                  \nD                                     :'org.apache.poi.poifs-        \nD                                     .filesystem.POIFSFileSystem'   \nD                                     : *CONSTRUCTOR)                \nD                                     CLASS(*JAVA:                   \nD                                     'org.apache.poi.poifs-         \nD                                     .filesystem.POIFSFileSystem')  \nD  stream                             like(jInputStream)             \n                                                                     \nD new_HSSFWorkbookFromPOIFS...                                       \nD                 PR                  like(HSSFWorkbook)             \nD                                     ExtProc(*JAVA:                 \nD                                     'org.apache.poi.hssf.usermodel-\nD                                     .HSSFWorkbook':                \nD                                     *CONSTRUCTOR)                  \nD  poifs                              like(POIFSFileSystem)          \n                                                                \nD closeFile       PR                  EXTPROC(*JAVA             \nD                                     :'java.io.FileInputStream'\nD                                     :'close')                 \n                                                                \nD wwStr           s                   like(jString)             \nD wwFile          s                   like(jFileInputStream)    \nD wwPOIFS         s                   like(POIFSFileSystem)     \nD wwBook          s                   like(HSSFWorkbook)        \n                                                                \n /free                                                          \n    wwStr   = new_String(peFilename);                           \n    wwFile  = new_FileInputStream(wwStr);                       \n    wwPOIFS = new_POIFSFileSystem(wwFile);                      \n    wwBook  = new_HSSFWorkbookFromPOIFS(wwPOIFS);               \n    closeFile(wwFile);         \n                               \n    hssf_freeLocalRef(wwPOIFS);\n    hssf_freeLocalRef(wwFile); \n    hssf_freeLocalRef(wwStr);  \n                               \n    return wwBook;             \n /end-free                     \nP                 E            \n\nif you guys can give me any insight to what might be going wrong, I'd appreciate\nit...if you need more info or whatever, feel free to shoot me an email...\n\nThanks.\n\nShane", "id": 75539, "time": "2005-05-27T21:19:35Z", "creator": "shane_cessna@nal.com", "creation_time": "2005-05-27T21:19:35Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 35110, "attachment_id": null, "text": "Well, you will not find too many people here willing to debug an AS/400 :). I\ncan only provide some pointers to troubleshooting\n\n1. First see if the file in question is being opened by POI correctly in a\nstandalone java program. If yes, its an issue in your environment, and we cant\nhelp you much. If not, please reopen this bug with the erroneous file attached. \n\n2. See if you can increase log levels to find out the java stack trace. Most\nlikely, the IO exception is coz the file cannot be found?\n\n3. Has the file been corrupted on transferring to an AS/400? Has it been re-encoded?", "id": 75586, "time": "2005-05-30T11:59:18Z", "creator": "avik@apache.org", "creation_time": "2005-05-30T11:59:18Z", "is_private": false}]