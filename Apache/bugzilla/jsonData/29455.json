[{"count": 0, "tags": [], "text": "Code inspection shows strtol being used to convert \"Content-Length\"\nfrom ASCII to a long which is then assigned to a apr_off_t variable.\nThis appears questionable since on some platforms (i.e. FreeBSD)\napr_off_t is larger than a long (which implies that \"Content-Length\"\nmay contain values which exceed a long).  This patch uses strtoll\nin place of strtol.  It's been tested on FreeBSD 4.10 x86.\n\n------------------8<------------------------8<------------------------\n*** modules/http/http_protocol.c.ORIGINAL       Mon Feb  9 15:53:18 2004\n--- modules/http/http_protocol.c        Tue Jun  8 03:30:07 2004\n*************** apr_status_t ap_http_filter(ap_filter_t \n*** 769,775 ****\n  \n              ctx->state = BODY_LENGTH;\n              errno = 0;\n!             ctx->remaining = strtol(lenp, &endstr, 10);       /* we depend on \nANSI */\n  \n              /* This protects us from over/underflow (the errno check),\n               * non-digit chars in the string (excluding leading space)\n--- 769,775 ----\n  \n              ctx->state = BODY_LENGTH;\n              errno = 0;\n!             ctx->remaining = (apr_off_t)strtoll(lenp, &endstr, 10); /* we depe\nnd on ANSI */\n  \n              /* This protects us from over/underflow (the errno check),\n               * non-digit chars in the string (excluding leading space)\n*************** AP_DECLARE(int) ap_setup_client_block(re\n*** 1756,1762 ****\n          char *endstr;\n  \n          errno = 0;\n!         r->remaining = strtol(lenp, &endstr, 10); /* depend on ANSI */\n  \n          /* See comments in ap_http_filter() */\n          if (errno || (endstr && *endstr) || (r->remaining < 0)) {\n--- 1756,1762 ----\n          char *endstr;\n  \n          errno = 0;\n!         r->remaining = (apr_off_t)strtoll(lenp, &endstr, 10); /* depend on ANS\nI */\n  \n          /* See comments in ap_http_filter() */\n          if (errno || (endstr && *endstr) || (r->remaining < 0)) {", "attachment_id": null, "id": 58906, "creator": "john@feith.com", "time": "2004-06-09T04:32:47Z", "bug_id": 29455, "creation_time": "2004-06-09T04:32:47Z", "is_private": false}, {"count": 1, "tags": [], "text": "That way it's not ready for common use, because apr_off_t is not always 64 bit.\nIn  2.1 there's a APR function for this (apr_strtoff), we might need to backport\nor (perhaps better) implement the detection in httpd 2.0.", "attachment_id": null, "id": 58912, "creator": "nd@perlig.de", "time": "2004-06-09T08:39:01Z", "bug_id": 29455, "creation_time": "2004-06-09T08:39:01Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 29455, "attachment_id": null, "id": 58922, "time": "2004-06-09T12:13:26Z", "creator": "jorton@redhat.com", "creation_time": "2004-06-09T12:13:26Z", "is_private": false, "text": "Yeah, backporting apr_strtoff to APR 0.9 would work only if it were used inside\n#if APR_PATCH_VERSION > 4 or something, a little ugly but probably worth it."}, {"count": 3, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "id": 58925, "time": "2004-06-09T12:22:01Z", "bug_id": 29455, "creation_time": "2004-06-09T12:22:01Z", "is_private": false, "text": "Alternatively we could build in a runtime check or the like...?"}, {"count": 4, "tags": [], "text": "Not sure what could be done at run-time.  If apr_strtoff is used but not defined\nin libapr, that'll cause link failures.  A compile-time check, e.g.\n\nif (sizeof(apr_off_t) == sizeof(long))\n   foo = strtol(...);\nelse\n   foo = apr_strtoi64(...)\n\nworks pretty much the same.", "is_private": false, "id": 58926, "creator": "jorton@redhat.com", "time": "2004-06-09T12:32:30Z", "bug_id": 29455, "creation_time": "2004-06-09T12:32:30Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "creator": "nd@perlig.de", "is_private": false, "id": 58927, "time": "2004-06-09T12:36:12Z", "bug_id": 29455, "creation_time": "2004-06-09T12:36:12Z", "tags": [], "text": "Ok, that's what I've meant as runtime check. Actually it's a mix out of compile\ntime (sizeof) and runtime stuff (if). Probably the optimizer does the rest ;)"}, {"count": 6, "tags": [], "text": "Leaving as fixed for 2.1.x, there would be quite a bit to backport to get this\nworking for 2.0...", "is_private": false, "id": 69772, "creator": "jorton@redhat.com", "time": "2005-01-17T16:15:46Z", "bug_id": 29455, "creation_time": "2005-01-17T16:15:46Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 29455, "is_private": false, "text": "*** Bug 33599 has been marked as a duplicate of this bug. ***", "id": 71069, "time": "2005-02-16T10:13:46Z", "creator": "jorton@redhat.com", "creation_time": "2005-02-16T10:13:46Z", "attachment_id": null}]