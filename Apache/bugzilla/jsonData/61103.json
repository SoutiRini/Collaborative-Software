[{"count": 0, "tags": [], "bug_id": 61103, "text": "See <https://issues.apache.org/jira/browse/OAK-6237>.\n\nIt seems that StatementCache under certain circumstances returns an incorrect statement, causing setString on index 1 to fail with:\n\ncom.ibm.db2.jcc.am.SqlSyntaxErrorException: [jcc][10145][10844][4.16.53] Invalid parameter 1: Parameter index is out of range. ERRORCODE=-4461, SQLSTATE=42815\n\nNote:\n\n- currently cleanly reproducible with jackrabbit oak trunk (and release branches)\n- happens only for DB2 it seems\n- disabling the StatementCache interceptor fixes the problem\n- Oak currently uses 7.0.75, but the same problem happens with 7.0.77", "id": 198814, "time": "2017-05-18T11:36:06Z", "creator": "julian.reschke@gmx.de", "creation_time": "2017-05-18T11:36:06Z", "is_private": false, "attachment_id": null}, {"count": 1, "text": "and it happens with 8.5.15 as well...", "bug_id": 61103, "attachment_id": null, "id": 198847, "time": "2017-05-22T09:09:04Z", "creator": "julian.reschke@gmx.de", "creation_time": "2017-05-22T09:09:04Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "bug_id": 61103, "attachment_id": null, "text": "Still present in 7.0.81.", "id": 201042, "time": "2017-09-21T14:04:31Z", "creator": "julian.reschke@gmx.de", "creation_time": "2017-09-21T14:04:31Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 61103, "attachment_id": null, "text": "It seems I found the issue: s statement was indeed re-used, but on the first invocation the table wasn't present; with DB2, that state apparently is stored with the statement object. Will close this ticket once I fixed my code.", "id": 201142, "time": "2017-09-26T16:11:45Z", "creator": "julian.reschke@gmx.de", "creation_time": "2017-09-26T16:11:45Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 61103, "attachment_id": null, "text": "Found in <https://blog.bertvanlangen.com/software-development/jdbc-statement-cache/>:\n\n\"The IBM Data Server Driver for JDBC and SQLJ does not check whether the definitions of target objects of statements in the internal statement cache have changed. If you execute SQL data definition language statements in an application, you need to disable internal statement caching for that application\"\n\nSo caching PreparedStatements for DB2 is dangerous if it's a DDL statement, or if actually the state of the table changes between invocations (such as a transition from \"does not exist\" to \"exist\").\n\nNow code can of course workaround this, but wouldn't it be better if the StatementCache would evict statements that have causes a non transient exception?", "id": 201148, "time": "2017-09-27T11:44:27Z", "creator": "julian.reschke@gmx.de", "creation_time": "2017-09-27T11:44:27Z", "is_private": false}]