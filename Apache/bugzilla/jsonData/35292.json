[{"count": 0, "tags": [], "text": "ap_lingering_close is supposed to read any leftover data in the connection until\nthere's no more data or until MAX_SEC_TO_LINGER (30) seconds elapsed.\n\nBut turns out that it only performs up to 15 reads of (at most) 512 bytes.", "attachment_id": null, "id": 76219, "creator": "gonzalo@ximian.com", "time": "2005-06-09T17:40:24Z", "bug_id": 35292, "creation_time": "2005-06-09T17:40:24Z", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 15353\nPatch that fixes the problem.\n\nThis patch fixes the issue and 2 warnings I got with -Wall on apr_shutdown and\napr_recv not being declared.", "is_private": false, "bug_id": 35292, "id": 76220, "time": "2005-06-09T17:42:28Z", "creator": "gonzalo@ximian.com", "creation_time": "2005-06-09T17:42:28Z", "attachment_id": 15353}, {"count": 2, "tags": [], "text": "apr_shutdown should be part of apr_compat.h.  The submitted patch is against the\n2.0.x branch, not trunk.", "attachment_id": null, "bug_id": 35292, "id": 76222, "time": "2005-06-09T18:20:46Z", "creator": "chip@force-elite.com", "creation_time": "2005-06-09T18:20:46Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 35292, "text": "This was mentioned on http-wg a while ago, indeed.\n\nDoes the current behaviour actually cause practical problems?  The change\nintroduces an extra gettimeofday() call into the normal processing of every\nrequest so it needs good justification.", "count": 3, "id": 76265, "time": "2005-06-10T16:27:10Z", "creator": "jorton@redhat.com", "creation_time": "2005-06-10T16:27:10Z", "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 35292, "is_private": false, "id": 76272, "time": "2005-06-10T18:06:54Z", "creator": "gonzalo@ximian.com", "creation_time": "2005-06-10T18:06:54Z", "tags": [], "text": "I found this out because I was sending a POST of a few MB to a web service, but\nI got the url wrong and saw that there were 15 small reads when closing before i\ngot the RST when trying to read from the socket."}, {"count": 5, "tags": [], "text": "OK, there are a few alternatives here:\n\n- take the hit on the uncommon path where the read() doesn't get EOF first time\nthrough, and keep calling read()/apr_time_now() until 30 seconds have *really*\npassed\n\npro: equally as safe as 1.3 code\ncon: more overhead\n\n- bump the tmp buffer size to 8K and lower the read() timeout to 1 second.  this\nway the server could eat 30*8K=245K bytes without additional overhead, giving a\nsignificantly better chance of getting the response to the client than just\n15*512=~7K\n\npro: little more overhead than current 2.0 code\ncon: still less safe than 1.3", "attachment_id": null, "bug_id": 35292, "id": 76277, "time": "2005-06-10T19:52:06Z", "creator": "jorton@redhat.com", "creation_time": "2005-06-10T19:52:06Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 35292, "attachment_id": null, "is_private": false, "id": 76279, "time": "2005-06-10T20:32:23Z", "creator": "gonzalo@ximian.com", "creation_time": "2005-06-10T20:32:23Z", "text": "If there's anything I can say, I'd go for the first alternative and linger for\nat most ~32s, while not incurring in any additional penalty for the common path."}, {"count": 7, "tags": [], "bug_id": 35292, "attachment_id": null, "id": 76304, "time": "2005-06-11T19:38:30Z", "creator": "trawick@apache.org", "creation_time": "2005-06-11T19:38:30Z", "is_private": false, "text": "The reason that such code isn't in there now is to avoid all the syscalls\n(retrieving the time).  Some cleverness may allow an implementation that is\nwilling to wait longer (close to MAX_SECS_TO_LINGER) without retrieving the time\nso much."}, {"count": 8, "tags": [], "text": "Created attachment 15375\nSecond attempt. Patch against http-2.0.x\n\nHow about this? There are no calls to time() involved. The first read polls for\nup to 30s and subsequent ones only for 0.5s, with a limit on the maximum number\nof reads that doubles the maximum read length existing now.", "is_private": false, "bug_id": 35292, "id": 76305, "time": "2005-06-11T20:37:13Z", "creator": "gonzalo@ximian.com", "creation_time": "2005-06-11T20:37:13Z", "attachment_id": 15375}, {"count": 9, "tags": [], "text": "Oops. Forgot to increment nread_ops in the loop.", "is_private": false, "id": 76306, "creator": "gonzalo@ximian.com", "time": "2005-06-11T20:38:15Z", "bug_id": 35292, "creation_time": "2005-06-11T20:38:15Z", "attachment_id": null}, {"count": 10, "tags": [], "text": "I don't see how that implementation actually fixes the problem.  Or am I missing\nsomething fundamental?\n\nThe *problem* is that the server is not reading enough bytes from the socket to\neat up the TCP window and prevent an RST from allowing the client to see the\nresponse.  Just changing the timeouts makes no difference, the solution needs to\nactually increase the number of read() calls made (and/or increase the buffer\nsize passed to read).\n\nIn the situation which lingering close is helping, the first read call is *not*\ngoing to time out; the TCP receive buffer for this socket on the server will\nalready be non-empty so it will necessarily return data immediately.\n\nChanging that first timeout just introduces a new problem; if the client\ndisappears completely after reading the response, the server will now hang\naround for thirty seconds waiting for a FIN that will never arrive, rather than\njust for two seconds.\n", "attachment_id": null, "bug_id": 35292, "id": 76323, "time": "2005-06-12T13:46:56Z", "creator": "jorton@redhat.com", "creation_time": "2005-06-12T13:46:56Z", "is_private": false}, {"count": 11, "tags": [], "text": "Fixed on trunk and back-ported for 2.1.8 and later.\n\nhttp://svn.apache.org/viewcvs?rev=291452&view=rev", "attachment_id": null, "bug_id": 35292, "id": 80455, "time": "2005-09-25T22:16:45Z", "creator": "jorton@redhat.com", "creation_time": "2005-09-25T22:16:45Z", "is_private": false}, {"count": 12, "tags": [], "text": "*** Bug 17722 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 35292, "id": 80458, "time": "2005-09-25T22:23:56Z", "creator": "jorton@redhat.com", "creation_time": "2005-09-25T22:23:56Z", "attachment_id": null}]