[{"count": 0, "tags": [], "bug_id": 42028, "is_private": false, "text": "Attached zip file contains an example with a single GIF, which exhibits two\nproblems:\n  1. the GIF is scaled in a strange fashion, and \n  2. the black lines are lost.", "id": 101353, "time": "2007-04-02T22:22:22Z", "creator": "trejkaz@trypticon.org", "creation_time": "2007-04-02T22:22:22Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 42028, "is_private": false, "text": "Created attachment 19896\ngif-scaling-bug.zip", "id": 101354, "time": "2007-04-02T22:22:48Z", "creator": "trejkaz@trypticon.org", "creation_time": "2007-04-02T22:22:48Z", "attachment_id": 19896}, {"count": 2, "tags": [], "bug_id": 42028, "text": "I may have a fix for #1 -- ImageIOImage was using the image data array to\ndetermine the image size, which isn't necessarily the case for GIF.\n", "id": 101355, "time": "2007-04-02T22:23:50Z", "creator": "trejkaz@trypticon.org", "creation_time": "2007-04-02T22:23:50Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 42028, "text": "Created attachment 19897\nProposed patch\n\nAttached patch uses the ImageIO metadata DOM to obtain the width and height, as\nwell as the horizontal and vertical pixel offset.  When building the bitmap\narray, offsets the stored image pixels.\n\nI'm not sure how to solve problem #2 though.", "id": 101356, "time": "2007-04-02T22:39:26Z", "creator": "trejkaz@trypticon.org", "creation_time": "2007-04-02T22:39:26Z", "is_private": false, "attachment_id": 19897}, {"attachment_id": null, "tags": [], "creator": "trejkaz@trypticon.org", "is_private": false, "count": 4, "id": 101358, "time": "2007-04-03T00:06:43Z", "bug_id": 42028, "creation_time": "2007-04-03T00:06:43Z", "text": "Some investigation of #2, inside ImageIOImage#loadBitmap:\n\nalphas = { 0, 255, 255, 255 }\nreds   = { 0,   0, 187,   1 }\ngreens = { 0,   0, 224,   2 }\nblues  = { 0,   0, 227,   3 }\n\nThe first palette colour is the transparent colour, which is black.  The second\ncolour, which is *not* transparent, also happens to be black.\n\nFOP assumes that the transparent colour doesn't occur anywhere in the image, yet\nin this situation it does.\n\nMaybe it would be possible to pick an RGB combo which doesn't exist in the\nimage, recolour all the transparent pixels to that colour and then set that as\nthe transparentColor field.  That way it wouldn't clash with real drawn pixels\nwhich happened to have the same colour.\n"}, {"count": 5, "text": "resetting P2 open bugs to P3 pending further review", "bug_id": 42028, "is_private": false, "id": 157346, "time": "2012-04-07T01:41:43Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:41:43Z", "tags": [], "attachment_id": null}]