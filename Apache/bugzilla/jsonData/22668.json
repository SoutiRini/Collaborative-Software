[{"count": 0, "tags": [], "creator": "daniel.merchant@fanucrobotics.com", "attachment_id": null, "text": "If I use the following command:\njava -jar batik-rasterizer.jar -d myDir -m image/tiff samples/*.svg\nseveral of the tiff files are wrong:  the white background are rendered black.\nI have two technical illustrations are rendered unacceptable when viewed with \nirfanview.  If I send the images to windows image composer, V1.5, they are \nviewable but of somewhat low quality. Black and White are rendered as Grey and \nWhite, but the resolution is not so good  (similar image quality is found \nin .png files).  GSView is not able to open the files at all.\n\nI got similar results using the squiggle viewer.  And I fact I use this to \nmake .png and .jpg files.  The best quality came from the .jpg files, although \nartifacts rendered them unusable as technical illustrations (not unexpected).\n\nIf I were to dig deeper into the properties and methods used in the raster \nobject, would I be able to produce better .tif files?  Is this problem inherent \nin the JAVA SDK I got from SUN?", "id": 43185, "time": "2003-08-22T18:23:17Z", "bug_id": 22668, "creation_time": "2003-08-22T18:23:17Z", "is_private": false}, {"count": 1, "tags": [], "creator": "deweese@apache.org", "attachment_id": null, "is_private": false, "id": 43193, "time": "2003-08-23T13:35:44Z", "bug_id": 22668, "creation_time": "2003-08-23T13:35:44Z", "text": "I strongly suspect the problem is that Batik generates a four channel TIFF\n(Red, Green, Blue, Alpha).  Your viewer probably is ignoring the alpha channel\nand just displaying the RGB channels.  Since the default background for SVG\nis 100% transparent Black you see black in the BG.  You can mostly fix this\nby providing a background color.  This should prevent you from seeing the black\nhowever we will still write a four channel image (which it sounds like GSView,\nwhat ever that is, doesn't support).\n\nAs far as the 'grey' that is most likely anti-aliasing there are \n'rendering hints' in SVG (like shape-rendering=\"crispEdge\" - from memory) \nthat you can use to turn this off (anti-aliasing is generally considered \nsuperior as it is a more accurate representation of the geometry).\n\nThe resolution (as in DPI) is user controlable so set it to what you want.\n\nIf you still consider there to be bugs please reopen the bug report and\nattach an example SVG and the generated tiff file."}]