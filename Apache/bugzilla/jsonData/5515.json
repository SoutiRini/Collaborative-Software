[{"count": 0, "tags": [], "text": "The problem:\n\nI have a replace task, defined like this in my build.xml file:\n    <replace file=\"${work-dir}/WEB-INF/web.xml\" summary=\"true\">\n      <replacetoken><![CDATA[<param-name>mail-enabled</param-name>\n      <param-value>false</param-value>]]></replacetoken>\n      <replacevalue><![CDATA[<param-name>mail-enabled</param-name>\n      <param-value>true</param-value>]]></replacevalue>\n    </replace>\nAlthough the replace token exists in my the source file, ant never replaces the \ntoken with my desired value.\n\nI think it has something to do with the following code snippet \n(org.apache.tools.ant.taskdefs.Replace, line 324...):\n\n                String linesep = System.getProperty(\"line.separator\");\n                String val = stringReplace(value.getText(), \"\\n\", linesep);\n                String tok = stringReplace(token.getText(), \"\\n\", linesep);\n\n                // for each found token, replace with value\n                log(\"Replacing in \" + src.getPath() + \": \" + token.getText() \n+ \" --> \" + value.getText(), Project.MSG_VERBOSE);\n                newString = stringReplace(newString, tok, val);\n\n\nAccording to section 2.11 of the XML 1.0 spec, XML processors normalize end-of-\nline characters for you, so the first three lines of this snippet are \nunnecessary. Unfortunately, I don't have a whole lot of time to figure out \nexactly why calling stringReplace with those parameters fails, but I did get it \nto work correctly by changing the last line of that code snippet to this:\n\nnewString = stringReplace(newString, token.getText(), value.getText());", "is_private": false, "bug_id": 5515, "id": 9050, "time": "2001-12-19T09:06:22Z", "creator": "sean@wingateweb.com", "creation_time": "2001-12-19T09:06:22Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "sean@wingateweb.com", "attachment_id": null, "id": 9140, "time": "2001-12-22T06:42:43Z", "bug_id": 5515, "creation_time": "2001-12-22T06:42:43Z", "is_private": false, "text": "My mistake. I realized that while the tokens may not have platform dependant \nline separators, the string you are doing the replacing in will. So of course \nyou would need to replace normalized line separators with the platform \ndependant version."}, {"count": 2, "tags": [], "bug_id": 5515, "attachment_id": null, "text": "The real reason why I had my problem in the first place is that I was using \nmore than one editor on my xml files. JBuilder will edit my file as an XML \nfile, normalizing my line separators. Other editors edit my file as a text \nfile, resulting in platform specific line separators...\n\nAnyway, aside from my somewhat warped use case, there is another scenario where \nthis code won't work as expected: someone writes their text file on one \nplatform (i.e. Win2K), and then moves it to another platform where ant does its \nmagic (i.e. Linux!).\n\nTo really get this to work in all cases, you'd have to do something like this:\n\n\n                // line separators in values and tokens are \"\\n\"\n                // in order to compare with the file contents, replace them\n                // as needed\n                String linesep = System.getProperty(\"line.separator\");\n                String val = stringReplace(value.getText(), \"\\n\", linesep);\n                String tok = stringReplace(token.getText(), \"\\n\", linesep);\n                String newStr = stringReplace(newString, \"\\n\", linesep);\n\n                // for each found token, replace with value\n                log(\"Replacing in \" + src.getPath() + \": \" + token.getText() \n+ \" --> \" + value.getText(), Project.MSG_VERBOSE);\n                newString = stringReplace(newStr, tok, val);\n\nAnyway, sorry about the schizophrenic bug report, but this has been a fun one \nto track down.", "id": 9141, "time": "2001-12-22T07:08:29Z", "creator": "sean@wingateweb.com", "creation_time": "2001-12-22T07:08:29Z", "is_private": false}, {"count": 3, "tags": [], "creator": "holtdl@yahoo.com", "attachment_id": null, "id": 12992, "time": "2002-04-08T07:33:39Z", "bug_id": 5515, "creation_time": "2002-04-08T07:33:39Z", "is_private": false, "text": "The proposed change doesn't work right (puts nasty ctrl-M's at the end of the \nlines, and doesn't replace the text); however, the current code works fine at \nreplacing the text. If you're transporting files from Win* to *nix in some way \nthat doesn't correct the line-endings, recommend you run <fixcrlf> on them \nbefore trying to do anything else with them."}]