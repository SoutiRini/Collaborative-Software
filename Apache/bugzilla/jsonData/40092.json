[{"count": 0, "tags": [], "creator": "dvo@email.sjsu.edu", "is_private": false, "text": "The javadoc task fails to produce javadocs for filesets with somewhere between\n1350 and 1425 files.  I increased the task's maximum memory size to 512megs, but\nno luck.  Besides, there was no complaint about being out of memory.\n\nWhen I execute \"ant doc\" (my target is named \"doc\"), Ant comes back with a\n\"Build Sucessful\" message after about 3 seconds, but no javadoc was generated. \nI had a single fileset for my javadoc task.", "id": 91478, "time": "2006-07-22T03:23:14Z", "bug_id": 40092, "creation_time": "2006-07-22T03:23:14Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "michael.sinz@sinz.org", "is_private": false, "text": "I can verify this.\n\nI know that packageset is preferred but there is no wildcard in the dir element\nof the packageset and thus I can not easily support multiple \"products\" that\nneed to be documented together without actually listing each one with its own\npackage set.\n\nListing each sub-project in a package set works but causes a maintainability\nissue as not all of the sub-projects are checked out on all developer's\nmachines.  (And  new ones can be added at any time)\n\n(I even thought about trying a mapper to play class name tricks but that did not\nwork out so well - or, I should say, at all) ", "id": 101724, "time": "2007-04-15T10:09:24Z", "bug_id": 40092, "creation_time": "2007-04-15T10:09:24Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 40092, "text": "\n> I know that packageset is preferred but there is no wildcard in the dir element\n> of the packageset and thus I can not easily support multiple \"products\" that\n> need to be documented together without actually listing each one with its own\n> package set.\n\nWildcards _ARE_ supported for the includes of the packageset.", "id": 101726, "time": "2007-04-15T10:33:08Z", "creator": "carej@us.ibm.com", "creation_time": "2007-04-15T10:33:08Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 40092, "attachment_id": null, "text": "I know they are supported in the includes attribute but that attribute then ends\nup being the class/package name.\n\nThe layout we have is:\n\n/basedir/\n         build.xml\n         /project1/src/...\n         /project2/src/...\n         /project3/src/...\n\nI would love to just use */src as the \"dir\" attribute and then get all of the\npackages under each of the */src directories.\n\nIf I put a */src/**/*.java then the package names all end up being wrong.\n\nBTW - I think the problem with the number of files is actually a javadoc\nlimitation and not directly an \"ant\" limitation as ant does produce the correct\ncommand but javadoc then just aborts if there are too many files.", "id": 101758, "time": "2007-04-16T05:56:32Z", "creator": "michael.sinz@sinz.org", "creation_time": "2007-04-16T05:56:32Z", "is_private": false}, {"count": 4, "tags": [], "text": "If you know the packages to be documented you can probably use sourcepath to\ninclude files from multiple trees.\n\nAlso, you _could_ copy sources from your multiple trees into a unified tree for\ndocumentation purposes. It's not an optimal solution obviously, but we're in a\nsimilar situation and that's what we do. If you use <sync> instead of <copy>\nthan it's actually not too bad.\n\nIn any case, I'm marking initial report as invalid, as the limitation is with\njavadoc, not Ant.", "is_private": false, "id": 101801, "creator": "carej@us.ibm.com", "time": "2007-04-17T06:23:41Z", "bug_id": 40092, "creation_time": "2007-04-17T06:23:41Z", "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 40092, "is_private": false, "id": 101812, "time": "2007-04-17T08:00:21Z", "creator": "michael.sinz@sinz.org", "creation_time": "2007-04-17T08:00:21Z", "tags": [], "text": "The problem is that this is a large \"legacy\" application (if you can call any\nJava application \"legacy\") and it does not follow traditional conventions -\nThere are over *.java files (a number of those have multiple classes in one file\nand I am not talking inner classes...)\n\nThe files are spread out over a number \"projects\" but the packages are all the\nsame and the whole thing is pulled together (sometimes).  The exact mix at any\ntime is dependent on situations.\n\nAnyway, I have written a little task that finds all of the packages from all of\nthe directories and builds the correct JavaDoc command line.\n\nI agree that the number of files limit is really a javadoc problem (why in the\nworld would that be?) and not an ant problem but I would like to see a way to\nhave multiple directories listed in the packageset dir attribute (wildcarded)\nbut that is a different issue."}]