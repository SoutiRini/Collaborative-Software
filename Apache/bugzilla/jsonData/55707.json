[{"count": 0, "tags": [], "bug_id": 55707, "text": "I have more than one virtualhosts configured over the same IP address and port. The first one has these directives (uses RSA):\n\nSSLProtocol TLSv1.2 +TLSv1.1 +TLSv1\nSSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES256-SHA256:AES256-SHA:DES-CBC3-SHA\n\nThe second one only these (uses EC):\n\nSSLProtocol TLSv1.2\nSSLCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA\nSSLStrictSNIVHostCheck on\n\nNon-SNI clients get 403 properly. But if a client supports SNI, and negotiates with TLSv1.1 or TLSv1, the request will be accepted and the page served. With an SNI client, the SSLCipherSuite list will get used properly, but the SSLProtocol directive is totally ignored. From the ClientHello the SNI-capability can be detected, so does the used protocol version. TLS negotiation should be denied the same way if there is no common protocol version as it would without common ciphers.", "id": 170847, "time": "2013-10-25T19:35:22Z", "creator": "cf0hay@gmail.com", "creation_time": "2013-10-25T19:35:22Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "text": "Confirmed. It's due to a current limitation in OpenSSL, actually - when we use  SSL_set_SSL_CTX() in the SNI callback in ssl_engine_kernel.c, OpenSSL only switches the certificate, but not any of the other settings.\n\nI have filed\n\n  https://rt.openssl.org/Ticket/Display.html?user=guest&pass=guest&id=3183\n\nmeanwhile, and on the mod_ssl side, we are basically stuck with fixing this in a sane way until it's addressed in OpenSSL. If you're compiling against OpenSSL before 1.0.0, you could apply this patch, in theory (but note that this fiddles with OpenSSL internals, and is not the way forward to fix the issue):\n\n--- ssl_engine_kernel.c (revision 1546692)\n+++ ssl_engine_kernel.c (working copy)\n@@ -2014,6 +2014,7 @@ static int ssl_find_vhost(void *servername, conn_r\n             SSL_set_verify(ssl, SSL_CTX_get_verify_mode(ctx),\n                            SSL_CTX_get_verify_callback(ctx));\n         }\n+        SSL_set_ssl_method(ssl, ctx->method);\n\n         /*\n          * Adjust the session id context. ssl_init_ssl_connection()", "attachment_id": null, "bug_id": 55707, "id": 171507, "time": "2013-11-30T08:06:17Z", "creator": "asfbugz@velox.ch", "creation_time": "2013-11-30T08:06:17Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "chuck.t.parker@gmail.com", "is_private": false, "count": 2, "id": 198802, "time": "2017-05-16T12:10:45Z", "bug_id": 55707, "creation_time": "2017-05-16T12:10:45Z", "text": "(In reply to Kaspar Brand from comment #1)\n> Confirmed. It's due to a current limitation in OpenSSL, actually - when we\n> use  SSL_set_SSL_CTX() in the SNI callback in ssl_engine_kernel.c, OpenSSL\n> only switches the certificate, but not any of the other settings.\n> \n> I have filed\n> \n>   https://rt.openssl.org/Ticket/Display.html?user=guest&pass=guest&id=3183\n> \n\nThis OpenSSL bug was marked as resolved on October 13, 2016. I don't see any indication of which version(s) contain the fix, however."}, {"count": 3, "text": "The OpenSSL RT ticket was only closed as part of a mass update of old ticket. From a mail to the OpenSSL dev list:\n\nHere is the list of old RT tickets that we are closing.  We sent email\nto all of the originators, and it included the following text:\n\nIf you still think it is important for us to consider, please open an\nissue on GitHub.  Don't be shy!  We are closing issues based purely\non the date, and the fact that despite several passes through our RT\ntickets, we haven't closed them yet.\n\n...\n\n3183 SSL_set_SSL_CTX() should apply more settings from the SSL_CTX being switched to\n...\n\nSo this wasn't actually fixed, at least not at that time.\n\nRegards,\n\nRainer", "bug_id": 55707, "is_private": false, "id": 198806, "time": "2017-05-16T21:34:31Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2017-05-16T21:34:31Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 55707, "attachment_id": null, "text": "Hey guys,\n\nIt's been a long time that it has been an issue. I am having the same trouble.\n\nI contacted openssl git page and they said it's because how Apache handles openssl.\n\nI tried with both 1.0.2 and 1.1.0 and it's still not working.\n\nIs there any workaround I can apply? It's pretty urgent.\n\nThank you", "id": 200556, "time": "2017-09-01T00:15:32Z", "creator": "abir@abirahmed.com", "creation_time": "2017-09-01T00:15:32Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 55707, "text": "Just for the reference: here is the re-reported issue for OpenSSL on GitHub: https://github.com/openssl/openssl/issues/4302", "count": 5, "id": 200558, "time": "2017-09-01T09:31:14Z", "creator": "apache_bugzilla@valgronda.com", "creation_time": "2017-09-01T09:31:14Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "abir@abirahmed.com", "is_private": false, "count": 6, "id": 200568, "time": "2017-09-01T17:07:27Z", "bug_id": 55707, "creation_time": "2017-09-01T17:07:27Z", "text": "This is the issue where they replied. See their latest response.\n\nLink: https://github.com/openssl/openssl/issues/4301"}]