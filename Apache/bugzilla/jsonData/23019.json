[{"count": 0, "tags": [], "creator": "bojan.kalan@hp.com", "attachment_id": null, "is_private": false, "id": 43880, "time": "2003-09-09T09:04:45Z", "bug_id": 23019, "creation_time": "2003-09-09T09:04:45Z", "text": "Log4j Version: 1.2.2\n\nThe subAppend(...) method in org.apache.log4j.WriterAppender throws in very \nrare cases a NullPointerException when used with an AsyncAppender. This occured \nduring a loadtest with heavy load, only after many hours of opperation and with \nnumber of parallel requests more than 100 (120 simulated users with LoadRunner).\n\nThere seems to be a running condition, where the string array returned by \nloggingEvent.getThrowableStrRep() is not properly filled up when used \nimmediately after above call. The string array was created (check for non-null \nsuccessfull), but the elements of that array was (in rare conditions) null at \none moment and non-null some ms later. Trace output and modified code see below.\n\nThe appender attached to the AsyncAppender is an own implementation deriving \nfrom RollingFileAppender. \n\nTo find out the location where the NullPointerException is thrown, the \nWriterAppender class has been complemented with additional trace statements:\n\n  protected\n  void subAppend(LoggingEvent event) {\n    try {\n    this.qw.write(this.layout.format(event));\n    } catch (NullPointerException e) {\n      System.out.println(\"WriterAppender.subAppend: this.qw.write\n(this.layout.format(event))\");\n      throw e;\n    }\n\n    int len = -1;\n    int i = -1;\n    String[] s = null;\n    String line = null;\n    try {\n      if(layout.ignoresThrowable()) {\n        s = event.getThrowableStrRep();\n        if (s != null) {\n          len = s.length;\n          for(i = 0; i < len; i++) {\n            line = s[i];\n            this.qw.write(line);\n            this.qw.write(Layout.LINE_SEP);\n          }\n        }\n      }\n    } catch (NullPointerException e) {\n      System.out.println(\"WriterAppender.subAppend: len=\"+len+\", i=\"+i);\n      System.out.println(\"  line=\"+line);\n      if ((s != null) && (i>=0))\n        System.out.println(\"  s[i]=\"+s[i]);\n      ThrowableInformation ti = event.getThrowableInformation();\n      if (ti != null)\n        System.out.println(\"  event.throwableInfo.wasCloned=\"+ti.wasCloned());\n      throw e;\n    }\n\n    try {\n      if(this.immediateFlush) {\n        this.qw.flush();\n      }\n    } catch (NullPointerException e) {\n      System.out.println(\"WriterAppender.subAppend: flush\");\n      throw e;\n    }\n  }\n\n\nThis resulted in following trace output:\n\nWriterAppender.subAppend: len=40, i=0\n  line=null\n  s[i]=com.frontwerks.jdf.net.BrokerException: Cannot get a socket connection, \ncannot invoke the request\n  event.throwableInfo.wasCloned=false\n---> TRACE-ERROR: could not append event: \norg.apache.log4j.spi.LoggingEvent@15ae9c\njava.lang.NullPointerException\n\tat java.io.Writer.write(Unknown Source)\n\tat org.apache.log4j.helpers.CountingQuietWriter.write\n(CountingQuietWriter.java:36)\n\tat org.apache.log4j.WriterAppender.subAppend(WriterAppender.java:316)\n\tat org.apache.log4j.RollingFileAppender.subAppend\n(RollingFileAppender.java:225)\n\tat org.apache.log4j.WriterAppender.append(WriterAppender.java:151)\n\tat org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:222)\n\t.....\n\tat org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders\n(AppenderAttachableImpl.java:58)\n\tat org.apache.log4j.Dispatcher.run(AsyncAppender.java:326)"}, {"count": 1, "tags": [], "bug_id": 23019, "attachment_id": null, "text": "The NPE is not from log4j, it's from java.io.Writer, and anyways I can't \nreproduce it.  Perhaps if you posted your testing code, especially if it used a \nfreely available tool like JMeter, we could reproduce this and investigate \nfurther.", "id": 68405, "time": "2004-12-13T18:06:08Z", "creator": "yoavs@computer.org", "creation_time": "2004-12-13T18:06:08Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 23019, "is_private": false, "text": "\n\n*** This bug has been marked as a duplicate of bug 44032 ***", "id": 116883, "time": "2008-05-21T08:00:37Z", "creator": "ulrich.voigt@gmx.de", "creation_time": "2008-05-21T08:00:37Z", "attachment_id": null}]