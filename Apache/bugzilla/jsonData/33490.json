[{"count": 0, "tags": [], "text": "Several small issues prevent APR from compiling with Borland C++.  The attached\npatch was sufficient to allow it to build using the Ant build script for APR\nwithin log4cxx (checkout logging-log4cxx/apr-build.xml).\n\ninclude/arch/win32/apr_private.h:\n\nDefines SIGUSR1 and SIGUSR2 with values that conflict with their definitions in\nthe Borland header files.  Using #if defined(SIGUSR1) was not effective since\napr-private.h is included before the corresponding Borland header at least in\none place.\n\ninclude/apr.hw \n\nIncluding ws2tcpip.h results in compilation errors and is not needed for\nBorland.  Totally removing the include did not prevent apr and the tests from\ncompiling with Visual C++ 6.0.\n\nmisc/win32/internal.c and misc/win32/start.c\n\nThese modules used _malloc_dbd and _realloc_dbg which are Micrsoft specific. \nThe resolution I used was to check if _CRT_BLOCK was defined and if not use the\nstandard malloc and realloc.  Someone with deeper understanding of the code\nmight know why the non-portable allocator was used and if there is an equivalent\nfor other C++ compilers on Windows.", "is_private": false, "bug_id": 33490, "id": 70757, "time": "2005-02-10T15:38:52Z", "creator": "carnold@apache.org", "creation_time": "2005-02-10T15:38:52Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Created attachment 14243\nPatch file for SVN HEAD (10 Feb 2005)", "is_private": false, "bug_id": 33490, "id": 70758, "time": "2005-02-10T15:39:56Z", "creator": "carnold@apache.org", "creation_time": "2005-02-10T15:39:56Z", "attachment_id": 14243}, {"count": 2, "attachment_id": null, "creator": "trawick@apache.org", "text": "I would suggest a couple of changes to limit the amount of code which cares\nabout what compiler is being used.\n\nIn apr_private.h, just define SIGUSR1 if it isn't already defined (I assume this\nis used in apr somewhere); same for SIGUSR2.  If these aren't used in APR on\nWindows, then they don't need to be defined for any compiler.\n\nWith regards to malloc_dbg() vs. malloc(), I suggest making malloc_dbg() a macro\nwhich invokes malloc if we're using a compiler/RTL which doesn't have it (i.e.,\nif _CRT_BLOCK is not defined).  This could be handled inside apr_private.h as well.", "id": 70885, "time": "2005-02-12T16:55:29Z", "bug_id": 33490, "creation_time": "2005-02-12T16:55:29Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "carnold@apache.org", "text": "The only explicit place that SIGUSR1 and SIGUSR2 are used in the code base is in threadproc/unix/\nsignals.c which is not compiled in Windows builds.  Eliminating both those constants from apr_private.h \nshould have no ill effects.  Actually, of all the SIG defines only SIGKILL is needed.  It is used as a \nparameter to apr_proc_kill in memory/unix/apr_pools.c as the return value for the processes killed in \nmemory pool destruction.  SIGTERM is defined in signal.h for both Microsoft and Borland.\n\nElminating the #include <ws2tcpip.h> around line 208 in apr.hw does not obviously affect Microsoft \nbuilds with VC6. however it is not clear what other effects it may have.  Removing it might break WinCE \nor something.  Would have to research why it was put there in the first place.\n\nYou would not be able to fix the _malloc_dbg issue in apr_private.h since _CRT_BLOCK is defined in \ninclusions of crtdbg.h which is included after apr_private.h.  _malloc_dbg is mapped to malloc on non-\ndebug builds.  I assume that its use here is to cause memory allocated here to not be reported as \nmemory leaks in debug builds.  You could introduce some new functions into apr_private (say \napr_win32_invisible_malloc(size_t, const char* file, int line)) whose implementation could call \n_malloc_dbg for VC and just plain malloc for other compilers.\n\n", "id": 70889, "attachment_id": null, "bug_id": 33490, "creation_time": "2005-02-12T21:08:42Z", "time": "2005-02-12T21:08:42Z", "is_private": false}, {"count": 4, "attachment_id": null, "creator": "carnold@apache.org", "text": "I've been able to get log4cxx to compile and run (but fail) the unit tests with Borland C++ 5.6.4.  I've \ncommitted a patch file in the log4cxx CVS (logging-log4cxx/apr-1.1.0.patch) that addresses the \nencountered problems and will keep modifying it as I try other compilers.  \n\nIn addition to the issues previously mentioned, apr-util uses EILSEG which is not defined by the Borland \nheaders, but is specified in the build file.  Also apr.h defines uid_t and gid_t which conflicts if \"types.h\" \nis included in the same file which is problematic. ", "id": 70890, "time": "2005-02-13T07:06:32Z", "bug_id": 33490, "creation_time": "2005-02-13T07:06:32Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "creator": "carnold@houston.rr.com", "is_private": false, "id": 72295, "attachment_id": null, "bug_id": 33490, "creation_time": "2005-03-13T07:29:35Z", "time": "2005-03-13T07:29:35Z", "text": "I've added to the logging-log4cxx/apr-1.1.0.patch that allows apr-1.1.0 to\ncompile using MinGw."}, {"count": 6, "attachment_id": 14909, "creator": "carnold@houston.rr.com", "text": "Created attachment 14909\ntarball of apr and apr-util patches to address bcc/mingw and posix issues\n\nThe tarball contains two subdirectories. bcc_mingw contains patches for all\ncompilation errors with BCC and MinGW.\tposix_only contains a reduced set of\nchanges that only address the pid_t, gid_t and uid_t conflicts reported in\nhttp://marc.theaimsgroup.com/?t=111449584600002&r=1&w=2.  I would encourage the\nfull (bcc_mingw) set of changes to be reviewed and applied.  The bcc_mingw\npatch also addresses the testdate.c subissue in Bug 33491.", "id": 74327, "time": "2005-05-02T18:56:04Z", "bug_id": 33490, "creation_time": "2005-05-02T18:56:04Z", "tags": [], "is_private": false}, {"count": 7, "attachment_id": null, "creator": "jorton@redhat.com", "is_private": false, "id": 76728, "time": "2005-06-27T13:00:51Z", "bug_id": 33490, "creation_time": "2005-06-27T13:00:51Z", "tags": [], "text": "Attaching tarballs of patches is unlikely to get much attention, Curt, can you\njust attach a set of individual patches in diff -u format?"}, {"count": 8, "tags": [], "bug_id": 33490, "text": "Created attachment 15536\nPatch to APR for posix_t, bcc and mingw issues\n\nPatch file extracted from previous tarball", "id": 76738, "time": "2005-06-27T17:10:36Z", "creator": "carnold@apache.org", "creation_time": "2005-06-27T17:10:36Z", "is_private": false, "attachment_id": 15536}, {"count": 9, "tags": [], "bug_id": 33490, "text": "Created attachment 15537\nPatch to apr-util for posix_t, bcc and MinGW issues\n\nExtracted from earlier tarball", "id": 76739, "time": "2005-06-27T17:11:56Z", "creator": "carnold@apache.org", "creation_time": "2005-06-27T17:11:56Z", "is_private": false, "attachment_id": 15537}, {"count": 10, "tags": [], "bug_id": 33490, "text": "\n  Attached as unidiff, no blocker from the reporter.", "id": 85562, "time": "2006-02-07T19:07:55Z", "creator": "wrowe@apache.org", "creation_time": "2006-02-07T19:07:55Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "wrowe@apache.org", "text": "\n  I think I can pause to explain why this hasn't been committed (and wouldn't\n  be in it's present form.)\n\n  A few of the workarounds are a bit too twisted, no offense intended.  The\n  defines used to toggle features could be better handled.\n\n  Perhaps easier, can you clarify if autoconf/libtool are effective for gcc\n  and mingw environments on Win32?  Some of the changes are to .h files that\n  could be deconstructed into .h.in and .hw files for cleaner autodetection.\n  Win32 VC could continue to copy .hw inputs, while autoconf could resolve\n  some of the features.  That doesn't help the borland case, of course.\n\n  But the biggest rule is to keep the patches to one purpose, instead of making\n  the reviewer untangle a set of things that is going on in a large patch.\n\n  For example, I quickly committed the bit about #else APR_... that was a\n  syntax error (it's fixed on the next 0.9, 1.2 and trunk branches.)  If the\n  other parts of this patch were seperated out by function, folks could discuss\n  what the best approach is for each of your desired changes, or apply your\n  recommended patch as-is if there is agreement.\n\n  Thank you for your efforts, and please consider simplifying and breaking the\n  recommended patch up by behavior.  Otherwise I'll try to pull this apart bit\n  by bit, but that's only as my time allows.\n\n\n", "id": 85711, "attachment_id": null, "bug_id": 33490, "creation_time": "2006-02-11T21:10:33Z", "time": "2006-02-11T21:10:33Z", "is_private": false}, {"count": 12, "attachment_id": 18103, "creator": "davi@apache.org", "is_private": false, "id": 88110, "time": "2006-04-14T23:32:25Z", "bug_id": 33490, "creation_time": "2006-04-14T23:32:25Z", "tags": [], "text": "Created attachment 18103\nmingw fixes for apr.hw\n\nMingw specific defines:\n\nULL/LL [unsigned long long] for 64bits types\npid_t is already defined"}, {"count": 13, "tags": [], "text": "Created attachment 18104\nrequired header for UUID\n\nAccording to Microsoft documentation the header RPC.h is required to have UUID.", "is_private": false, "bug_id": 33490, "id": 88111, "time": "2006-04-14T23:34:02Z", "creator": "davi@apache.org", "creation_time": "2006-04-14T23:34:02Z", "attachment_id": 18104}, {"count": 14, "tags": [], "creator": "davi@apache.org", "attachment_id": 18105, "text": "Created attachment 18105\napr_wchar_t redifinition\n\napr_wchar_t is already defined in apr_arch_utf8.h", "id": 88112, "time": "2006-04-14T23:35:11Z", "bug_id": 33490, "creation_time": "2006-04-14T23:35:11Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 33490, "text": "Created attachment 18106\nadd missing winbase.h macro\n\nmingw WinBase.h does not include this required macro.", "id": 88113, "time": "2006-04-14T23:36:01Z", "creator": "davi@apache.org", "creation_time": "2006-04-14T23:36:01Z", "is_private": false, "attachment_id": 18106}, {"count": 16, "attachment_id": null, "creator": "davi@apache.org", "text": "To compile apr with gcc on Windows (mingw):\n\n1. Install Dev-CPP (http://www.bloodshed.net/dev/devcpp.html)\n2. Import the apr Visual C++ project file\n3. Copy crtdbg.h to apr-base\\include\\crtdbg.h\n4. Compile", "id": 88114, "time": "2006-04-14T23:41:58Z", "bug_id": 33490, "creation_time": "2006-04-14T23:41:58Z", "tags": [], "is_private": false}, {"count": 17, "tags": [], "creator": "wrowe@apache.org", "is_private": false, "id": 93835, "attachment_id": null, "bug_id": 33490, "creation_time": "2006-09-19T19:54:37Z", "time": "2006-09-19T19:54:37Z", "text": "Mass reassign the 44 open apr-bugs to apr bug list"}, {"count": 18, "tags": [], "creator": "wrowe@apache.org", "attachment_id": 18103, "is_private": false, "id": 103911, "time": "2007-05-31T15:46:35Z", "bug_id": 33490, "creation_time": "2007-05-31T15:46:35Z", "text": "Comment on attachment 18103\nmingw fixes for apr.hw\n\nObsolete, committed with\n\nhttp://svn.apache.org/viewvc?view=rev&rev=543292"}, {"count": 19, "tags": [], "text": "Comment on attachment 18104\nrequired header for UUID\n\nAIUI\n\nhttp://svn.apache.org/viewvc/apr/apr/trunk/misc/win32/rand.c\n\ncommit 421805 already solves this,\nbackported that patch.", "is_private": false, "bug_id": 33490, "id": 103912, "time": "2007-05-31T15:53:50Z", "creator": "wrowe@apache.org", "creation_time": "2007-05-31T15:53:50Z", "attachment_id": 18104}, {"count": 20, "tags": [], "creator": "wrowe@apache.org", "attachment_id": 18104, "is_private": false, "id": 103913, "time": "2007-05-31T15:54:21Z", "bug_id": 33490, "creation_time": "2007-05-31T15:54:21Z", "text": "Comment on attachment 18104\nrequired header for UUID\n\nobsolete for rev 421805"}, {"count": 21, "attachment_id": 18105, "creator": "wrowe@apache.org", "is_private": false, "id": 103914, "time": "2007-05-31T15:59:00Z", "bug_id": 33490, "creation_time": "2007-05-31T15:59:00Z", "tags": [], "text": "Comment on attachment 18105\napr_wchar_t redifinition\n\nObsoleted by\nhttp://svn.apache.org/viewvc?view=rev&revision=421090\n\nwhich is now backported to 1.2/0.9"}, {"count": 22, "tags": [], "bug_id": 33490, "text": "Comment on attachment 18106\nadd missing winbase.h macro\n\nhttp://svn.apache.org/viewvc?view=rev&rev=543304\n\ncommitted, thanks", "id": 103915, "time": "2007-05-31T16:06:25Z", "creator": "wrowe@apache.org", "creation_time": "2007-05-31T16:06:25Z", "is_private": false, "attachment_id": 18106}, {"count": 23, "tags": [], "bug_id": 33490, "text": "Comment on attachment 15537\nPatch to apr-util for posix_t, bcc and MinGW issues\n\nI've committed the table change from LL to APR_INT64_C(),\nnice catch.  I'm entirely clueless what the rest of\nthis patch is for, so it will need to be refactored\nwith the background noise removed\nand justifications before we would consider committing it.", "id": 103916, "time": "2007-05-31T16:13:07Z", "creator": "wrowe@apache.org", "creation_time": "2007-05-31T16:13:07Z", "is_private": false, "attachment_id": 15537}, {"count": 24, "tags": [], "creator": "wrowe@apache.org", "attachment_id": 15536, "text": "Comment on attachment 15536\nPatch to APR for posix_t, bcc and mingw issues\n\nI'm at a loss.\tThe majority of this patch has\nbeen refactored by Davi, and now is committed.\n\nBefore we evaluate anything further in this patch, \nwe really need the subset that is still applicable,\nand the justifications of the remaining suggestions.", "id": 103917, "time": "2007-05-31T16:18:00Z", "bug_id": 33490, "creation_time": "2007-05-31T16:18:00Z", "is_private": false}, {"count": 25, "tags": [], "bug_id": 33490, "text": "Awaiting clean patches to the next release.", "id": 103918, "time": "2007-05-31T16:18:36Z", "creator": "wrowe@apache.org", "creation_time": "2007-05-31T16:18:36Z", "is_private": false, "attachment_id": null}]