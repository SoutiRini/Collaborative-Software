[{"attachment_id": null, "tags": [], "bug_id": 52456, "is_private": false, "count": 0, "id": 152705, "time": "2012-01-12T05:04:00Z", "creator": "charleybin@gmail.com", "creation_time": "2012-01-12T05:04:00Z", "text": "Environment:\nApache Ant version 1.7.1 compiled on June 27 2008\nantenna-bin-1.2.1-beta.jar\nOS: Ubuntu 1104 amd64\n$locale: zh_CN.GBK\n\n\nDescription:\n1, There are some GBK constants defined in java source code file.\n\n2, bash shell environment been sets to support GBK encoding:\nLANG=zh_CN.GBK\n\n3, Build from shell command line everything is ok. \nfor example, if we run command: ant -buildfile buildkjava.xml deploy\nthe project can be built successful.\n\n\n4, If we run the same command from a tomcat servlet, it's must be failed.\n\nthe source code is:\n\nString cmd = \"ant -buildfile buildkjava.xml deploy\"\nString[] envp = new String[] {\"LANG=zh_CN.GBK\"};\nProcess process = Runtime.getRuntime().exec(cmd, envp);\n\n\nbellowing is the error logs:\n\n\n[wtkobfuscate]   Copying resources from program jar [/home/mic-oem-dev/workspace/code/kjava/mini-baseline/KJAVA_MINI.jar]\n[wtkobfuscate] Updating JAD file /home/mic-oem-dev/workspace/code/kjava/mini-baseline/KJAVA_MINI.jad\n[echo] preverify...\n[wtkpreverify] Preverifying /home/mic-oem-dev/workspace/code/kjava/mini-baseline/KJAVA_MINI.jar\n[wtkpreverify] Executable: /home/mic-oem-dev/workspace/sdk/WTK2.5.2/bin/preverify\n[wtkpreverify] Arguments : -classpath /home/mic-oem-dev/workspace/sdk/WTK2.5.2/lib/cldcapi11.jar:/home/mic-oem-dev/workspace/sdk/WTK2.5.2/lib/mmapi.jar:/home/mic-oem-dev/workspace/sdk/WTK2.5.2/lib/jsr75.jar:/home/mic-oem-dev/workspace/sdk/WTK2.5.2/lib/midpapi20.jar:/home/mic-oem-dev/workspace/code/kjava/mini-baseline/lib/nokia-ui.jar:/home/mic-oem-dev/workspace/code/kjava/mini-baseline/lib/wma.jar -d /home/mic-oem-dev/workspace/code/kjava/mini-baseline/54590625.tmp -target CLDC1.1 /home/mic-oem-dev/workspace/code/oem/bdmobile/kjava/mini-baseline/KJAVA_MINI.jar\n[wtkpreverify] JAR file creation failed with error 32512\n[wtkpreverify] The preverified classes if any are in tmp884869193. See jar log of errors in /home/mic-oem-dev/workspace/code/kjava/mini-baseline/54590625.tmp/jarlog.txt \n[wtkpreverify] sh: sh: not found"}, {"count": 1, "tags": [], "bug_id": 52456, "is_private": false, "text": "I'm pretty sure this issue is not related to Ant at all (you already said it worked from the command line).\n\nI don't have any idea what error 32512 may be, the error message stems from a task wtkpreverify that is not developed by the Ant team.\n\nThe very last line\n\n> [wtkpreverify] sh: sh: not found\n\nmakes me suspect you may need to put a few more variables (like PATH) into your environment.", "id": 152720, "time": "2012-01-12T15:28:33Z", "creator": "bodewig@apache.org", "creation_time": "2012-01-12T15:28:33Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Thanks Stefan, I think you have found a key point to avoid the error 32512. \nI just followed your suggestion to add a 'PATH' to the run-time environment, when I ran the build command, and the error messages has changed. you can see the error from below. I'm very appreciates if you have any idea about how to solve the new error, thanks. \n\n\nmy new code is:\n\nString cmd = \"/home/mic-oem-dev/workspace/tools/apache-ant-1.8.2/bin/ant -buildfile buildkjava.xml deploy\"\n\nString[] envp = new String[] {\"PATH=\" + System.getenv(\"PATH\"), \"LANG=zh_CN.GB2312\"};\nString[] cmds = {\"/bin/sh\", \"-c\", cmd};\t\t\t\nRuntime.getRuntime().exec(cmds, envp);\n\n\nthe log info is.\n[102]->[wtkobfuscate]   Number of vertically merged classes:         0\n[103]->[wtkobfuscate]   Number of horizontally merged classes:       3\n[104]->[wtkobfuscate]   Number of removed write-only fields:         170\n[105]->[wtkobfuscate]   Number of privatized fields:                 347\n[106]->[wtkobfuscate]   Number of inlined constant fields:           83\n[107]->[wtkobfuscate]   Number of privatized methods:                159\n[108]->[wtkobfuscate]   Number of staticized methods:                73\n[109]->[wtkobfuscate]   Number of finalized methods:                 1023\n[110]->[wtkobfuscate]   Number of removed method parameters:         25\n[111]->[wtkobfuscate]   Number of inlined constant parameters:       63\n[112]->[wtkobfuscate]   Number of inlined constant return values:    9\n[113]->[wtkobfuscate]   Number of inlined short method calls:        125\n[114]->[wtkobfuscate]   Number of inlined unique method calls:       206\n[115]->[wtkobfuscate]   Number of inlined tail recursion calls:      3\n[116]->[wtkobfuscate]   Number of merged code blocks:                25\n[117]->[wtkobfuscate]   Number of variable peephole optimizations:   1386\n[118]->[wtkobfuscate]   Number of arithmetic peephole optimizations: 211\n[119]->[wtkobfuscate]   Number of cast peephole optimizations:       35\n[120]->[wtkobfuscate]   Number of field peephole optimizations:      16\n[121]->[wtkobfuscate]   Number of branch peephole optimizations:     868\n[122]->[wtkobfuscate]   Number of simplified instructions:           1104\n[123]->[wtkobfuscate]   Number of removed instructions:              6902\n[124]->[wtkobfuscate]   Number of removed local variables:           233\n[125]->[wtkobfuscate]   Number of removed exception blocks:          57\n[126]->[wtkobfuscate]   Number of optimized local variable frames:   504\n[127]->[wtkobfuscate] Shrinking...\n[128]->[wtkobfuscate] Removing unused program classes and class elements...\n[129]->[wtkobfuscate]   Original number of program classes: 155\n[130]->[wtkobfuscate]   Final number of program classes:    150\n[131]->[wtkobfuscate] Obfuscating...\n[132]->[wtkobfuscate] Preverifying...\n[133]->[wtkobfuscate] Writing output...\n[134]->[wtkobfuscate] Preparing output jar [/home/mic-oem-dev/workspace/code/kjava/mini-baseline/19490792.tmp/output.jar]\n[135]->[wtkobfuscate]   Copying resources from program jar [/home/mic-oem-dev/workspace/code/kjava/mini-baseline/KJAVA_MINI.jar]\n[136]->[wtkobfuscate] Updating JAD file /home/mic-oem-dev/workspace/code/kjava/mini-baseline/KJAVA_MINI.jad\n[137]->     [echo] preverify...\n[138]->[wtkpreverify] Preverifying /home/mic-oem-dev/workspace/code/kjava/mini-baseline/KJAVA_MINI.jar\n[139]->[wtkpreverify] Executable: /home/mic-oem-dev/workspace/sdk/WTK2.5.2/bin/preverify\n[140]->[wtkpreverify] Arguments : -classpath /home/mic-oem-dev/workspace/sdk/WTK2.5.2/lib/cldcapi11.jar:/home/mic-oem-dev/workspace/sdk/WTK2.5.2/lib/mmapi.jar:/home/mic-oem-dev/workspace/sdk/WTK2.5.2/lib/jsr75.jar:/home/mic-oem-dev/workspace/sdk/WTK2.5.2/lib/midpapi20.jar:/home/mic-oem-dev/workspace/code/kjava/mini-baseline/lib/nokia-ui.jar:/home/mic-oem-dev/workspace/code/kjava/mini-baseline/lib/wma.jar -d /home/mic-oem-dev/workspace/code/kjava/mini-baseline/c59edc2a.tmp -target CLDC1.1 /home/mic-oem-dev/workspace/code/kjava/mini-baseline/KJAVA_MINI.jar\n[141]->[wtkpreverify] \n[142]->[wtkpreverify] ERROR: failed to open tmp1945431482/META-INF/MANIFEST.MF\n[143]->[wtkpreverify] Error preferifying, log file not found:  /home/mic-oem-dev/workspace/code/kjava/mini-baseline/c59edc2a.tmp/jarlog.txt\n[144]->\n[145]->BUILD FAILED\n[146]->Preverification failed (result=1)\n[147]->\n[148]->Total time: 22 seconds", "attachment_id": null, "id": 152746, "creator": "charleybin@gmail.com", "time": "2012-01-13T09:59:10Z", "bug_id": 52456, "creation_time": "2012-01-13T09:59:10Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 52456, "attachment_id": null, "id": 152819, "time": "2012-01-16T08:54:23Z", "creator": "charleybin@gmail.com", "creation_time": "2012-01-16T08:54:23Z", "is_private": false, "text": "Hi Stefan, \nI just try to build it again in the morning, it's somehow works ! I can't understand & I can't explain why. the code is completely the same as last week, I have do nothing in the weekend, I just leave it on there and spend my weekend as usual. it's so weird :(\n\nI also removed \"/bin/sh -c\" prefix from the command string, it's works as well. \n\nanyway, let's just simplify to close this bug, and thanks for you support & fix method, it's really a good experience for me. \n\n\nmy conclusion is:\nif we can run ant build from command line, it's should work from another command shell. the most important part is that we should provide a proper environment like add \"PATH\" to the command environment.\n\n\nThanks Sincerely.\n\nBin"}]