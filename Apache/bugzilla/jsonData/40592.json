[{"count": 0, "tags": [], "creator": "slamb@slamb.org", "attachment_id": null, "id": 94037, "creation_time": "2006-09-24T04:10:02Z", "time": "2006-09-24T04:10:02Z", "bug_id": 40592, "text": "Apologies if I'm in the wrong bug reporting area for this. I didn't see anything for flood specifically, but \nhttp://httpd.apache.org/test/flood/ says it's part of the http server project, and I saw ApacheBench \nbugs in this component.\n\nUsing http://svn.apache.org/repos/asf/httpd/test/trunk/flood revision 449338, I'm trying to post-\nprocess <report>relative_times</report> output. But my processor is reporting corruption, and it's \ndefinitely right:\n\n    1159070508122258 122 453 490 547 OK  1094719808 http://localhost/manual/install.html\n    1159070507911233 126 217090 217134 217186 OK  1126189376 http://localhost/manual/\n    anual/install.html\n\n    1159070508367336 358 751 777 831 OK  1168148800 http://localhost/manual/\n    1159070508368204 122 458 496 552 OK  1168148800 http://localhost/manual/install.html\n\nI found a suspicious area of report_relative_times.c:\n\n    /* FIXME: this call may need to be in a critical section */\n#if APR_HAS_THREADS\n    apr_file_printf(local_stdout, \"%s %ld %s\\n\", buf, apr_os_thread_current(), req->uri);\n#else\n    apr_file_printf(local_stdout, \"%s %d %s\\n\", buf, getpid(), req->uri);\n#endif\n\nbut it's eluding my attempts at a fix. I'll attach my awkward patch - mutex, flock within it, flush while \nboth are held - that still doesn't work. Not sure what's going on...", "is_private": false}, {"count": 1, "tags": [], "creator": "slamb@slamb.org", "attachment_id": 18902, "is_private": false, "id": 94038, "time": "2006-09-24T04:10:39Z", "bug_id": 40592, "creation_time": "2006-09-24T04:10:39Z", "text": "Created attachment 18902\nUnsuccessful attempt to fix this"}, {"count": 2, "tags": [], "bug_id": 40592, "is_private": false, "text": "I would tag this as PatchAvailable, but I'm unclear what the attached patch\nseeks to accomplish, if it works as written, and why it's attached to this\nparticular bug.\n\nBut I'm happy to commit if you explain how it improves things ;-/", "id": 115689, "time": "2008-04-17T12:30:44Z", "creator": "wrowe@apache.org", "creation_time": "2008-04-17T12:30:44Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 40592, "text": "This is a patch for diagnosis/discussion of this bug which definitely should *NOT* be committed.\n\nThe bug appears to be that one line appears in the middle of another, so I thought tried out the FIXME that producing that line should be in a critical section. The patch locks as thoroughly as I could imagine doing - mutex, flock, and flush within those - but still doesn't help the problem. If not using threads, it deliberately fails to compile, as I was checking if this was inconsistently defined or something.", "id": 115690, "time": "2008-04-17T12:41:25Z", "creator": "slamb@slamb.org", "creation_time": "2008-04-17T12:41:25Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "text": "Comment on attachment 18902\nUnsuccessful attempt to fix this\n\n>An unsuccessful attempt to fix output corruption in\n>flood's <report>relative_times</report>.\n>\n>Index: flood_report_relative_times.c\n>===================================================================\n>--- flood_report_relative_times.c\t(revision 449338)\n>+++ flood_report_relative_times.c\t(working copy)\n>@@ -27,10 +27,20 @@\n> extern apr_file_t *local_stdout;\n> extern apr_file_t *local_stderr;\n> \n>+struct relative_times {\n>+    apr_thread_mutex_t *mutex;\n>+};\n>+\n> apr_status_t relative_times_report_init(report_t **report, config_t *config, \n>                               const char *profile_name, apr_pool_t *pool)\n> {\n>-    return APR_SUCCESS;\n>+    struct relative_times *me;\n>+    me = apr_palloc(pool, sizeof(struct relative_times));\n>+    if (me == NULL) {\n>+        return APR_ENOMEM;\n>+    }\n>+    *report = me;\n>+    return apr_thread_mutex_create(&me->mutex, APR_THREAD_MUTEX_DEFAULT, pool);\n> }\n> \n> apr_status_t relative_times_process_stats(report_t *report, int verified, request_t *req, response_t *resp, flood_timer_t *timer)\n>@@ -38,6 +48,7 @@\n> #define FLOOD_PRINT_BUF 256\n>     apr_size_t buflen;\n>     char buf[FLOOD_PRINT_BUF];\n>+    struct relative_times *me = report;\n> \n>     buflen = apr_snprintf(buf, FLOOD_PRINT_BUF,\n>                           \"%\" APR_INT64_T_FMT \" %\" APR_INT64_T_FMT\n>@@ -60,10 +71,15 @@\n>         apr_snprintf(buf+buflen, FLOOD_PRINT_BUF-buflen, \" %d \", verified);\n>     }\n> \n>-    /* FIXME: this call may need to be in a critical section */\n> #if APR_HAS_THREADS\n>+    apr_thread_mutex_lock(me->mutex);\n>+    apr_file_lock(local_stdout, APR_FLOCK_EXCLUSIVE);\n>     apr_file_printf(local_stdout, \"%s %ld %s\\n\", buf, apr_os_thread_current(), req->uri);\n>+    apr_file_flush(local_stdout);\n>+    apr_file_unlock(local_stdout);\n>+    apr_thread_mutex_unlock(me->mutex);\n> #else\n>+#error no threads?\n>     apr_file_printf(local_stdout, \"%s %d %s\\n\", buf, getpid(), req->uri);\n> #endif\n> \n>@@ -77,5 +93,7 @@\n> \n> apr_status_t relative_times_destroy_report(report_t *report)\n> {\n>+    struct relative_times *me = report;\n>+    apr_thread_mutex_destroy(me->mutex);\n>     return APR_SUCCESS;\n> }", "attachment_id": 18902, "bug_id": 40592, "id": 165749, "time": "2013-03-11T16:28:14Z", "creator": "kurt_gadon68@yahoo.com", "creation_time": "2013-03-11T16:28:14Z", "is_private": false}]