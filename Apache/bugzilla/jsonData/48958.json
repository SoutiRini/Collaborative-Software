[{"count": 0, "tags": [], "bug_id": 48958, "is_private": false, "id": 135529, "attachment_id": null, "creator": "manuel.vacelet@gmail.com", "creation_time": "2010-03-22T13:35:20Z", "time": "2010-03-22T13:35:20Z", "text": "Hello,\n\nI first tried to get support from httpd-user list but I got no answer so I think bugzilla is the right place to report the following behaviour.\n\nEnvironment:\n- RHEL 5.2\n- Apache 2.2.3\n- Major module used: ssl, ldap, authz_ldap, php, svn_dav + some others\n- SVN repositories available through http & https, users identified with authz_ldap.\n\nEnd user launches large svn checkout (~700MB, 60'000 files), most of the time it works great (~5mn to go) but sometimes it takes hours (up to 15h).\nAfter strace+/proc digging, it appears that very long svn checkout happens because apache requests the LDAP server for each file it has to server (no usage of mod_ldap cache).\nIf I run another svn checkout in parallel of the \"blocking\" one, it works great (strace shows there is no interaction with LDAP server).\nTo sum up, at server side, I can face:\n- 2 httpd processes, one that uses mod_ldap cache and one that doesn't.\n\nLast part of the story: \"graceful restart\".\nI have a process that launch on regular bases a graceful restart in order to let apache known the last created svn repositories.\nIf I stop this process (no longer graceful restart at all), the initial issue (very long checkout) vanish.\n\nI tried the workaround described in https://issues.apache.org/bugzilla/show_bug.cgi?id=46749 aka set LDAPSharedCacheSize to 500000 but it doesn't solve the problem.\n\nAny idea?"}, {"count": 1, "tags": [], "creator": "covener@gmail.com", "text": "Is it checking passwords or authorization info? Are you sure it's doing it 60k times and not just hanging on one?", "id": 135530, "time": "2010-03-22T14:48:28Z", "bug_id": 48958, "creation_time": "2010-03-22T14:48:28Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 48958, "text": "(In reply to comment #1)\n> Is it checking passwords or authorization info? \n\nI don't know how to distinguish the 2 cases.\nWhat I see from strace is a ldap request like:\nwrite(3, \"...eduid=ed1234,dc=example,dc=com...\") \nwhere ed1234 is the id of the user that attempt to checkout so I guess it's a bind.\nHow could i\n\n> Are you sure it's doing it 60k\n> times and not just hanging on one?\n\nI'm pretty sure it's for each file as I can see files, and each time, the trace looks like:\nstat64(\"/usr/share/codendi/src/www/svnroot/testmv1/!svn/ver/1310/branches/gcc/libstdc++-v3/testsuite/performance/25_algorithms/find_istreambuf_iterators.cc\", 0xbfe95c8c) = -1 ENOENT (No such file or directory)\nlstat64(\"/usr\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nlstat64(\"/usr/share\", {st_mode=S_IFDIR|0755, st_size=12288, ...}) = 0\nlstat64(\"/usr/share/codendi\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nlstat64(\"/usr/share/codendi/src\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nlstat64(\"/usr/share/codendi/src/www\", {st_mode=S_IFDIR|0755, st_size=4096, ...}) = 0\nlstat64(\"/usr/share/codendi/src/www/svnroot\", 0xbfe95c8c) = -1 ENOENT (No such file or directory)\nsemop(866156544, 0x17570c, 1)           = -1 EIDRM (Identifier removed)\nsemop(866156544, 0x175712, 1)           = -1 EIDRM (Identifier removed)\nfutex(0x9a33594, FUTEX_WAKE, 1)         = 0\nsemop(866156544, 0x17570c, 1)           = -1 EIDRM (Identifier removed)\nsemop(866156544, 0x175712, 1)           = -1 EIDRM (Identifier removed)\nfutex(0x9a33594, FUTEX_WAKE, 1)         = 0\ntime(NULL)                              = 1269270405\nwrite(3, \"0\\f\\2\\1\\\"`\\7\\2\\1\\3\\4\\0\\200\\0\", 14) = 14\npoll([{fd=3, events=POLLIN|POLLPRI|POLLERR|POLLHUP, revents=POLLIN}], 1, -1) = 1\nread(3, \"0\\f\\2\\1\\\"a\\7\\n\", 8)            = 8\nread(3, \"\\1\\0\\4\\0\\4\\0\", 6)              = 6\ntime(NULL)                              = 1269270405\ntime(NULL)                              = 1269270405\nwrite(3, \"0C\\2\\1#c>\\4\\fdc=example,dc=com\\n\\1\\2\\n\\1\\3\\2\\1\\0\\2\\1\"..., 69) = 69\npoll( <unfinished ...>\nProcess 31960 detached", "id": 135531, "attachment_id": null, "creator": "manuel.vacelet@gmail.com", "creation_time": "2010-03-22T15:09:04Z", "time": "2010-03-22T15:09:04Z", "is_private": false}, {"count": 3, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 135532, "time": "2010-03-22T15:12:29Z", "bug_id": 48958, "creation_time": "2010-03-22T15:12:29Z", "is_private": false, "text": "loglevel debug or look at the LDAP traffic in wireshark (and/or try a recreate with no LDAP authz and see if it still can be hit)"}, {"count": 4, "tags": [], "text": "According to wireshark, it's LDAP bind requests:\n  6.818387 apache -> ldap TCP 46828 > ldap [ACK] Seq=3701 Ack=17989 Win=500 Len=0 TSV=2676945403 TSER=2947384344\n  6.818778 apache -> ldap LDAP bindRequest(8571) \"eduid=ed1234,ou=people,dc=example,dc=com\" simple\n  6.825009 ldap -> apache LDAP bindResponse(8571) success\n  6.834444 apache -> ldap LDAP bindRequest(8572) \"<ROOT>\" simple\n  6.835728 ldap -> apache LDAP bindResponse(8572) success\n  6.835859 apache -> ldap LDAP searchRequest(8573) \"dc=example,dc=com\" wholeSubtree\n  6.876986 ldap -> apache TCP ldap > 46828 [ACK] Seq=18019 Ack=3849 Win=49232 Len=0 TSV=2947384350 TSER=2676945420\n  7.061669 ldap -> apache LDAP searchResEntry(8573) \"eduid=ed1234,ou=people,dc=example,dc=com\"\n  7.061714 ldap -> apache LDAP searchResDone(8573) success\n  7.062165 apache -> ldap TCP 46828 > ldap [ACK] Seq=3849 Ack=18682 Win=500 Len=0 TSV=2676945647 TSER=2947384368\n  7.062300 apache -> ldap LDAP bindRequest(8574) \"eduid=ed1234,ou=people,dc=example,dc=com\" simple\n  7.068504 ldap -> apache LDAP bindResponse(8574) success\n  7.080949 apache -> ldap LDAP bindRequest(8575) \"<ROOT>\" simple\n  7.084970 ldap -> apache LDAP bindResponse(8575) success\n  7.085086 apache -> ldap LDAP searchRequest(8576) \"dc=example,dc=com\" wholeSubtree\n  7.107050 ldap -> apache TCP ldap > 46828 [ACK] Seq=18712 Ack=3997 Win=49232 Len=0 TSV=2947384373 TSER=2676945670\n  7.312568 ldap -> apache LDAP searchResEntry(8576) \"eduid=ed1234,ou=people,dc=example,dc=com\"\n\n\napache loglevel=debug\n\n[Tue Mar 23 12:47:13 2010] [debug] mod_authnz_ldap.c(849): [10864] auth_ldap url parse: `ldap://ldap1.example.com ldap2.example.com/dc=example,dc=com'\n[Tue Mar 23 12:47:13 2010] [debug] mod_authnz_ldap.c(858): [10864] auth_ldap url parse: Host: ldap1.example.com ldap2.example.com\n[Tue Mar 23 12:47:13 2010] [debug] mod_authnz_ldap.c(860): [10864] auth_ldap url parse: Port: 389\n[Tue Mar 23 12:47:13 2010] [debug] mod_authnz_ldap.c(862): [10864] auth_ldap url parse: DN: dc=example,dc=com\n[Tue Mar 23 12:47:13 2010] [debug] mod_authnz_ldap.c(864): [10864] auth_ldap url parse: attrib: (null)\n[Tue Mar 23 12:47:13 2010] [debug] mod_authnz_ldap.c(866): [10864] auth_ldap url parse: scope: base\n[Tue Mar 23 12:47:13 2010] [debug] mod_authnz_ldap.c(871): [10864] auth_ldap url parse: filter: (null)\n[Tue Mar 23 12:47:13 2010] [debug] mod_authnz_ldap.c(951): LDAP: auth_ldap not using SSL connections", "is_private": false, "bug_id": 48958, "id": 135551, "time": "2010-03-23T11:51:48Z", "creator": "manuel.vacelet@gmail.com", "creation_time": "2010-03-23T11:51:48Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "covener@gmail.com", "attachment_id": null, "id": 135553, "time": "2010-03-23T12:29:57Z", "bug_id": 48958, "creation_time": "2010-03-23T12:29:57Z", "is_private": false, "text": "I guess those are DN lookups, which should be cached. But it's unclear if that is what repeats 60k times.  What does your \"ldap-status\" page look like while these are chugging away both w/ and w/o the graceful?"}, {"count": 6, "tags": [], "bug_id": 48958, "text": "(In reply to comment #5)\n> I guess those are DN lookups, which should be cached. But it's unclear if that\n> is what repeats 60k times. What does your \"ldap-status\" page look like while\n> these are chugging away both w/ and w/o the graceful?\n\nI'm not sure what you meant by \"while these are chugging away both w/ and w/o the graceful\".\n\nldap-status tells me there is no data in cache (0 entries) while the checkout is running.\nIf I run another checkout in parallel (normal speed), I can see my entry cached. In the same time, the \"long checkout\" continue without using cache at all (I see strace activity and if I stop the second checkout, the \"Hits\" no longer increase).\n\nRight after, I run a graceful, the ldap-status shows a cleared cache and the long checkout continues, still slow.\n\nI made another test:\n1 Long checkout running since hours\n2 check ldap status: empty cache\n3 Start another checkout\n4 check ldap status: cache with 1 entry, hits are growings quickly)\n5 graceful\n6 check ldap status: cache still in use for checkout started at #3, the hit number is bigger than at step #4\n7 stop svn co started at #3\n8 check ldap status: hits no longer increase (with the first checkout continue to run)\n\nIt's maybe not graceful by itself because it's very difficult to me to reproduce the scenario that lead to this behavior. I tried to run a series of 10 graceful one after another with a \"full speed checkout\" and I didn't manage to reproduce this issue.\nBut, if I let the cron job that does (among other tasks) the regular graceful, I reproduce the issue several time a day.", "id": 135554, "attachment_id": null, "creator": "manuel.vacelet@gmail.com", "creation_time": "2010-03-23T12:57:12Z", "time": "2010-03-23T12:57:12Z", "is_private": false}, {"count": 7, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "id": 135737, "time": "2010-03-28T22:18:20Z", "bug_id": 48958, "creation_time": "2010-03-28T22:18:20Z", "is_private": false, "text": "My guess is that the parent process destroys the shm segment of the ldap cache while the child is still busy processing the checkout. This makes it impossible for the child to use the ldap cache, as the old cache is already destroyed but the child does not have access to the new cache either. In this case, mod_ldap will silently continue without using any cache. With 2.2.15, you would probably get some warning about the cache size being too small. (That warning is wrong in this case.)\n\nThe svn checkout seems to be a single request with lots of subrequests. In this case httpd will not close the connection as it does for a keep-alive connection with lots of requests.\n\nI don't currently have any idea how to solve this problem. Is it possible to somehow defer destroying the old shm segment until all childs have terminated?"}, {"count": 8, "tags": [], "bug_id": 48958, "attachment_id": null, "text": "I'm still running my monitoring jobs and the more I test the more graceful seems involved.\nI made a long (4 days) test with the regular graceful restart off and I get no long checkout (in my previous test I completely stopped crond, for this one I only commented the regular graceful so other cron scripts where running).\n\nBut one thing disturbs me: I cannot reproduce the bad behaviour on demand.\nLet says there is a checkout running fine (with cache & all) and I run several graceful one after another the checkout continues just fine (I tried with ten \"service httpd graceful && service httpd graceful && ...\").\nHowever, if I just let things go on with regular graceful, I reproduce the issue several times a day.\n\nI will try to build latest 2.2.15 to see if I get the error message you mention (but I will first have to find the same build options as RH official pkg).", "id": 135742, "time": "2010-03-29T07:48:04Z", "creator": "manuel.vacelet@gmail.com", "creation_time": "2010-03-29T07:48:04Z", "is_private": false}, {"count": 9, "tags": [], "creator": "manuel.vacelet@gmail.com", "attachment_id": null, "id": 135751, "time": "2010-03-29T13:41:18Z", "bug_id": 48958, "creation_time": "2010-03-29T13:41:18Z", "is_private": false, "text": "I built 2.2.15 and the same problem happens, it's even more easier to reproduce as just running \"apachectl -k graceful\" breaks the cache very easily.\nI have no specific message in error_log (maybe it depends of loglevel?) but ldap cache is empty and httpd servers my svn client with a \"G\" (gracefully finished) process according to server-status."}, {"count": 10, "tags": [], "creator": "sf@sfritsch.de", "text": "(In reply to comment #9)\n> I built 2.2.15 and the same problem happens, it's even more easier to reproduce\n> as just running \"apachectl -k graceful\" breaks the cache very easily.\n> I have no specific message in error_log (maybe it depends of loglevel?) but\n> ldap cache is empty and httpd servers my svn client with a \"G\" (gracefully\n> finished) process according to server-status.\n\nThe messages are at loglevel warning. The may appear in the main server errorlog instead of the per-vhost errorlog (if you use several error logs). If they are not there, my guess about the source of the problem may be wrong.\n\nA possible workaround you could try is disabling SHM caching by setting LDAPSharedCacheSize to 0. This will increase mem usage and lower the cache hit rate, but it may mitigate your problem.", "id": 135772, "time": "2010-03-29T19:19:34Z", "bug_id": 48958, "creation_time": "2010-03-29T19:19:34Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 48958, "is_private": false, "id": 135783, "attachment_id": null, "creator": "manuel.vacelet@gmail.com", "creation_time": "2010-03-30T07:31:44Z", "time": "2010-03-30T07:31:44Z", "text": "You are right, I get the error message:\n[Mon Mar 29 15:43:57 2010] [warn] LDAPSharedCacheSize is too small. Increase it or reduce LDAPCacheEntries/LDAPOpCacheEntries!\n[Mon Mar 29 15:43:57 2010] [error] Could not allocate memory for LDAP cache entry\n\nI will give a try to your workaround.\nIf I set the shared cache to 0, may I reduce the cache size?"}, {"count": 12, "tags": [], "text": "Forget about my last question... too early in the morning.", "is_private": false, "bug_id": 48958, "id": 135784, "time": "2010-03-30T07:34:03Z", "creator": "manuel.vacelet@gmail.com", "creation_time": "2010-03-30T07:34:03Z", "attachment_id": null}, {"text": "Back with latest test results. I finaly get a consistant result: checkout now takes always hours to complete (no cache usage at all).\nI used following configuration:\nLDAPSharedCacheSize 0\nLDAPCacheEntries 1024\nLDAPCacheTTL 600\nLDAPOpCacheEntries 1024\nLDAPOpCacheTTL 600\n\nSo settings shared cache size to 0 fully disable the LDAP caches, not only the shared one.", "tags": [], "bug_id": 48958, "attachment_id": null, "count": 13, "id": 135809, "time": "2010-03-31T07:50:22Z", "creator": "manuel.vacelet@gmail.com", "creation_time": "2010-03-31T07:50:22Z", "is_private": false}, {"count": 14, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": 25221, "id": 135827, "time": "2010-03-31T21:24:41Z", "bug_id": 48958, "creation_time": "2010-03-31T21:24:41Z", "is_private": false, "text": "Created attachment 25221\nHack to allow disabling shm with 'LdapSharedCacheSize 0' but still use caching\n\nIt seems some parts of the code interpret 'LdapSharedCacheSize 0' to disable caching altogether, while most parts just interpret it to disable shared memory. The attached patch makes caching without shm work for me. I have briefly tested it with trunk but not with 2.2.x.\n\nCan you test if it mitigates the slow checkout problem? I wouldn't apply it to a production site without prior testing, though."}, {"count": 15, "tags": [], "creator": "manuel.vacelet@gmail.com", "text": "You patch applies on 2.2.15 with a bit of fuzzing but it does work.\n\nI run a patched 2.2.15 with \"LdapSharedCacheSize 0\" since 5 hours (with a graceful every 10 minutes) and it seems to do the job (LDAP is cached).\n\nMost of the checkout takes 10-12 minutes to complete so httpd process serves client with G state most of the time.\n\nI keep it running.", "id": 135835, "time": "2010-04-01T12:51:51Z", "bug_id": 48958, "creation_time": "2010-04-01T12:51:51Z", "is_private": false, "attachment_id": null}, {"count": 16, "tags": [], "bug_id": 48958, "text": "After one day I'm confident to say that the patch does the job.", "id": 135853, "attachment_id": null, "creator": "manuel.vacelet@gmail.com", "creation_time": "2010-04-02T12:52:39Z", "time": "2010-04-02T12:52:39Z", "is_private": false}, {"count": 17, "tags": [], "creator": "manuel.vacelet@gmail.com", "attachment_id": null, "id": 136304, "time": "2010-04-22T03:37:40Z", "bug_id": 48958, "creation_time": "2010-04-22T03:37:40Z", "is_private": false, "text": "Hi,\n\nDo you think I can safely apply this patch against 2.2.3 (RHEL/Centos5) version ?"}, {"count": 18, "tags": [], "creator": "sf@sfritsch.de", "attachment_id": null, "id": 145987, "time": "2011-04-25T16:04:33Z", "bug_id": 48958, "creation_time": "2011-04-25T16:04:33Z", "is_private": false, "text": "Committed the LDAPSharedCacheSize 0 workaround to trunk as r1096577"}]