[{"count": 0, "tags": [], "bug_id": 40544, "attachment_id": null, "id": 93778, "time": "2006-09-19T13:38:43Z", "creator": "davidcorley@gmail.com", "creation_time": "2006-09-19T13:38:43Z", "is_private": false, "text": "Hey all,\n\nI've been doing a lot of testing with Findbugs recently, and though it's a\nfantastic tool, it's extremely resource intensive, and can take some time on\nlarge codebases.\nYesterday I spotted a video on Google video of a presentation given by Steve\nLoughran and Julio Guijarro about using a grid to test deployment with a tool\nthey're developing within HP called Smartfrog.\nThe thought occurred to me that perhaps it would be possible to implement some\nkind of a grid framework in Ant.\nI'll use the PMD (http://pmd.sourceforge.net) static analysis tool as an example.\n\nPMD accepts a nested fileset to specify the location of the source to be checked.\nThe fileset is of the typical <fileset dir=\"xxx\" includes=\"xxx\" exludes\"xxx\"/> form.\nLets say we then create a new type <gridset> that is the same in all manners as\nfileset (same attributes and elements), with the exception of how ant handles it.\n\nNow lets say we build a new ant task <grid> that contains the attribute\n\"config\", the value for which is an xml file.\nThe xml file would contain locations and configuration information for grid\nelement locations\u2026possibly including network location,connection method,\nlocation of access/authorisation information for the resource, etc.\n\nThe <grid> element would be implemented in much the same way the <parallel> task\nis currently implemented in Ant.\nSo let say we want to Run both PMD and Findbugs on a grid, we might have:\n\n<grid config=\"grid.xml\"/>\n\t<gridset dir=\"xx\" includes\"ddd\" exlcudes=\"ggg\"/>\n\t<pmd>\n\t\t<fileset id=\"gridset\"/>\n\t</pmd>\n</grid>\n\nThe basic idea being that Ant would split the resources being tested between the\ngrid resources, and (assuming PMD is on each grid machine), split the testing\nburden between the machines.\nPart of the grid task would be to ensure that the resources specified in the\nsupplied xml are available before testing begins. My initial thought was around\nthe idea of having Ant parse through gridset objects and split them into smaller\nfileset objects for distribution to grid resources.\n\nOf course the above is a grossly over-simplified explanation of the idea. I've\nat no point mentioned the problems of how ant gets execution access on the\nremote machines, not to mention the fact that each of the remote machines must\nhave the same setup as the originating machine. There's also (though not in\nPMD's case) the issue of Findbugs requiring access to all of the classes being\ntested, (including those on other machines).\n\nSo why don't I just get coding instead of posting this?\nWell for one, I'm a newbie to Java, and sometimes my ideas are well ahead of my\ncapabilities. I just though perhaps some of you may have either tried and failed\nwith this before, or better still, think the above could form the base for a\nworkable solution to grid use of Ant.\n\nAnyway, any feedback is appreciated.\n\n/Dave"}, {"count": 1, "tags": [], "bug_id": 40544, "is_private": false, "text": ":) I didn't read this very closely... are you aware, though, that Steve Loughran\nis one of the longer-standing Ant developers today, who specifically\n-discourages- using Ant for long-lived processes including grid processing?  ;)\n\nFurther, you may be interested in the existing gridant project at\nhttp://www.globus.org/cog/projects/gridant/\n\nbr,\nMatt", "id": 93779, "time": "2006-09-19T14:06:05Z", "creator": "mbenson@apache.org", "creation_time": "2006-09-19T14:06:05Z", "attachment_id": null}, {"count": 2, "tags": [], "creator": "davidcorley@gmail.com", "attachment_id": null, "id": 93781, "time": "2006-09-19T14:23:58Z", "bug_id": 40544, "creation_time": "2006-09-19T14:23:58Z", "is_private": false, "text": "I do know that Steve doesn't like Ant to be used for deployment (hence his \nSmartFrog project), but I hadn't seen anything about him disliking the idea of \nsplitting tasks up for processing.\n\nI could for example see problems with compilation where various classes depend \non one another and are compiled in different locations, etc.\n\nBut certain tasks lend themselves to grid processing, such as those where a \nsingle operation is performed on multiple files one-by-one, and that operation \nis \"state-less\". That is there is no form of dependencies on either other files \nor operations. PMD is such a task. The reports generated from each grid \nresource can be combined with a simple xsl transformation.\n\nOf course if unit tests can be run across a grid \n(http://www.lsd.ufcg.edu.br/~alex/doku.php?id=gridunit), then I'm thinking it \nshould be possible to also run coverage across a grid......(assuming you're not \nusing a modified JVM to capture coverage data.). Most coverage tools offer the \nability to merge coverage data, allowing you to merge the coverage data from \nthe various grid resources.\n\nWhatever we may disagree on, I think we can certainly agree that the \npossibility of spreading your nightly builds across a grid is VERY \nenticing....there's a lot of free computing cycles on the desktops in the \naverage corporate workplace.\n\nAlso, another quick example of possible use for grid infrastructure is where \nyou may have to repeat similar tasks during your build. Lets say you wanted to \nrun findbugs and also Clover coverage on your code. Clover instruments your \nsource right before it compiles, and Findbugs scans bytecode to check for \nerrors. However, findbugs hates clover instrumented code, so you're forced to \nrecompile the code (without Clover) just for Findbugs. Now imagine, you could \nhave one machine handling the Findbugs run, while another runs the Clover \nCoverage report generator. That would be pretty damn neat.\n\n"}, {"count": 3, "tags": [], "bug_id": 40544, "attachment_id": null, "text": "Personally, I abuse Ant in whatever manner strikes me.  I plead guilty to golden\nhammer syndrome.  Therefore I can't justify discouraging others from doing the\nsame.  I just found it ironic that it was an opponent of Ant grid processing\n(Steve) who inspired you to think about the same topic.", "id": 93782, "time": "2006-09-19T14:43:12Z", "creator": "mbenson@apache.org", "creation_time": "2006-09-19T14:43:12Z", "is_private": false}, {"count": 4, "tags": [], "creator": "carej@us.ibm.com", "attachment_id": null, "is_private": false, "id": 93784, "time": "2006-09-19T14:53:37Z", "bug_id": 40544, "creation_time": "2006-09-19T14:53:37Z", "text": "This is an interesting idea, but IMO it's way outside the scope of Ant's core\nuse case (i.e. a build tool) to include something like this in the Ant CORE.\n\nMaybe interesting as an antlib (which I assume SmartFrog is), but I always\ndiscourage people from using Ant as a workflow engine."}, {"count": 5, "tags": [], "bug_id": 40544, "attachment_id": null, "is_private": false, "id": 93880, "time": "2006-09-19T21:59:53Z", "creator": "stevel@apache.org", "creation_time": "2006-09-19T21:59:53Z", "text": "0. I think Ant is wonderful, and if you look closely we start all our demos from\nant using the sf ant tasks (which is an antlib to talk to the distributed\ninfrastructure)\n\n1. I think ant is good for getting stuff onto local machines, especially servers\nthat support deploy by copy.\n\n2. the thing its not so good at is shutdown and liveness; managing long lived\nrunning things rather than a sequence of operations. or its error handling.\nSmartfrog has lots of components to do things like repeat {} or retry {} to\nmanage  iterative development of unreliable stuff.\n\n3. At one of the Grid Forum standards meetings I attended (Hawaii, its a tough\nlife :), I attended a demo of 'gridant'. http://www.globus.org/cog/projects/gridant/\nThis does use ant to start running a grid build. The problem is, what happens if\nthe host PC reboots? What if your laptop moves? Grid ant keels over there.\n\nNow, one thing that is interesting is the idea of speeding up a build by\ndistributing work. For that to be deployed to a big public grid (like the\nourgrid one), you must have a pretty low priority batch job; of which overnight\ntest runs fit in.\n\nA separate problem is parallel builds. Some C++ tools do this with special\nversions of make. That's because CC is so slow. Personally, I wouldnt try\nsplitting up existing builds into separate process. More interesting is to\npartition a multi-project build to run stuff in separate processes/machines,\nwith some shared repository to share artifacts. This is actually something that\nI suspect maven may fit in better with, because it has a clearer model of\ninter-component dependencies."}, {"count": 6, "tags": [], "creator": "carej@us.ibm.com", "attachment_id": null, "id": 93887, "time": "2006-09-19T23:20:15Z", "bug_id": 40544, "creation_time": "2006-09-19T23:20:15Z", "is_private": false, "text": "FWIW, the Mantis system we use at IBM to build WebSphere family (and other)\nproducts handles the kinds of things that Steve talks about in the last paragraph.\n\nMantis exposes two levels of sub-project granularity: one is (or at least can\nbe) intermachine & uses a repository to retrieve artifacts from dependencies &\nstore artifacts for dependants; the other is intramachine & does not require\nsuch a repository.\n\nWe can be parallel at both levels though, which has drastically sped up our builds."}, {"text": "In any event, while this is an interesting discussion, it sounds like a \ndiscussion of a third-party task, and an existing one (gridant) at that.  \nFurther discussion should probably take place on ant-user, all due respect to \neveryone (including myself) conversing via this enhancement request.  ;)", "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "count": 7, "id": 93915, "time": "2006-09-20T12:02:47Z", "bug_id": 40544, "creation_time": "2006-09-20T12:02:47Z", "is_private": false}]