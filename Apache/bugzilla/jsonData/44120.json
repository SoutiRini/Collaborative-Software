[{"count": 0, "tags": [], "creator": "rfrovarp@apache.org", "attachment_id": null, "is_private": false, "id": 111992, "time": "2007-12-21T08:47:55Z", "bug_id": 44120, "creation_time": "2007-12-21T08:47:55Z", "text": "If a user has permissions on a node to create pages (edit), they can create a\nnew page as a sibling of that node, even if they don't have proper permissions\non the parent. The page is then created as a sibling, and they don't have any\npermissions to the page. Since this can be seen as a way around the permission\ntree, they shouldn't be given permission to do so. When the sibling option is\nchosen, the permission check should be done against the parent."}, {"count": 1, "tags": [], "bug_id": 44120, "attachment_id": null, "id": 114020, "time": "2008-02-22T06:38:10Z", "creator": "andreas@apache.org", "creation_time": "2008-02-22T06:38:10Z", "is_private": false, "text": "This bug is based on a fundamental flaw of our access control strategy. We only\ncare for protecting usecases on pages, but there's no protection of the\nrepository itself. "}, {"count": 2, "tags": [], "bug_id": 44120, "attachment_id": null, "id": 114021, "time": "2008-02-22T07:07:09Z", "creator": "rfrovarp@apache.org", "creation_time": "2008-02-22T07:07:09Z", "is_private": false, "text": "I was wondering if we could just run the check that would initially prevent\naccess to the usecase again but with the right parent in the tree. However, I\nhaven't had a chance to investigate how this would be done exactly."}, {"count": 3, "tags": [], "creator": "andreas@apache.org", "is_private": false, "id": 124276, "attachment_id": null, "bug_id": 44120, "creation_time": "2009-01-22T04:17:41Z", "time": "2009-01-22T04:17:41Z", "text": "An easy workaround would be this:\n\nInstead of the radio buttons to choose between \"create child\" and \"create sibling\", we could use a button \"create sibling\" which calls the \"create child\" usecase on the parent URL."}]