[{"count": 0, "tags": [], "text": "Hi, \n\nI am generating a ppt from an existing template ppt file using XSLF. Here, I have a table and I update cells with the content dynamically and add/delete rows accordingly. I was trying to find the height of a cell/row so that I can find out how many rows can be accommodated in the table without overflowing the slide area. So if a row cannot be accommodated, a new slide will be created. But when I was trying to access cell.getTextHeight() or cell.getLineWidth(), I am getting the below exception.\n\njava.lang.IllegalStateException: CTShapeProperties was not found.\n\tat org.apache.poi.xslf.usermodel.XSLFShape.getSpPr(XSLFShape.java:240)\n\tat org.apache.poi.xslf.usermodel.XSLFSimpleShape$1.fetch(XSLFSimpleShape.java:113)\n\tat org.apache.poi.xslf.usermodel.XSLFShape.fetchShapeProperty(XSLFShape.java:320)\n\tat org.apache.poi.xslf.usermodel.XSLFSimpleShape.getXfrm(XSLFSimpleShape.java:121)\n\tat org.apache.poi.xslf.usermodel.XSLFSimpleShape.getAnchor(XSLFSimpleShape.java:128)\n\tat org.apache.poi.sl.draw.DrawShape.getAnchor(DrawShape.java:142)\n\tat org.apache.poi.sl.draw.DrawTextParagraph.getWrappingWidth(DrawTextParagraph.java:399)\n\tat org.apache.poi.sl.draw.DrawTextParagraph.breakText(DrawTextParagraph.java:240)\n\tat org.apache.poi.sl.draw.DrawTextShape.drawParagraphs(DrawTextShape.java:134)\n\tat org.apache.poi.sl.draw.DrawTextShape.getTextHeight(DrawTextShape.java:195)\n\tat org.apache.poi.sl.draw.DrawTextShape.getTextHeight(DrawTextShape.java:177)\n\tat org.apache.poi.xslf.usermodel.XSLFTextShape.getTextHeight(XSLFTextShape.java:536)\n\t......\n\n\nPlease let me know if this is a bug or is implemented like that. And how can we find the dynamic height of a cell/row.\n\nThanks,\nPreetam", "is_private": false, "id": 191506, "creator": "prethaku@cisco.com", "time": "2016-06-09T16:55:20Z", "bug_id": 59686, "creation_time": "2016-06-09T16:55:20Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Thanks for bringing this up - fixed with r1747605\n\nSo getTextHeight() didn't crash on my test, but getLineWidth() did.\nJust recently I've implemented the rendering of xslf tables.\nOne of the methods where were necessary is XSLFTable.updateCellAnchor() which calculates the positions of the cells and their anchors.\nThis method is triggered, when you call XSLFTableCell.getAnchor() the first\ntime ... maybe this info is useful to you.", "attachment_id": null, "bug_id": 59686, "id": 191510, "time": "2016-06-09T23:14:09Z", "creator": "kiwiwings@apache.org", "creation_time": "2016-06-09T23:14:09Z", "is_private": false}, {"count": 2, "tags": [], "text": "(In reply to Andreas Beeker from comment #1)\n> Thanks for bringing this up - fixed with r1747605\n> \n> So getTextHeight() didn't crash on my test, but getLineWidth() did.\n> Just recently I've implemented the rendering of xslf tables.\n> One of the methods where were necessary is XSLFTable.updateCellAnchor()\n> which calculates the positions of the cells and their anchors.\n> This method is triggered, when you call XSLFTableCell.getAnchor() the first\n> time ... maybe this info is useful to you.\n\nThe unit test TestXSLFTable.checkTextHeight() fails when run from the build.xml test target on Windows - the height returned on my system was 91.890625, not 88 as the test expects.  There are many factors that could be at play when calculating rendering measurements, especially on Windows.  For example, I typically use a non-standard system font and scaling factor (I like my default text small).\n\nCould this test instead check that the method returns a value in a reasonable range, or doesn't throw an exception?  This spurious failure makes it hard to test changes before I submit patches.\n\nYes, I'm stuck using Windows.  Talk to my boss if you want about getting me a Mac :)", "is_private": false, "bug_id": 59686, "id": 191528, "time": "2016-06-10T16:22:29Z", "creator": "greg.woolsey@gmail.com", "creation_time": "2016-06-10T16:22:29Z", "attachment_id": null}, {"count": 3, "tags": [], "text": "> Could this test instead check that the method returns a value in a reasonable range, or doesn't throw an exception?  This spurious failure makes it hard to test changes before I submit patches.\n\nI have to admit that I haven't payed attention about the font issue, only that getTextHeight() worked at all and after it ran on my Windows machine and the ubuntu Jenkins instances I didn't care about it ... (well actually this is not completely true, as I did a lot of test while developing the table rendering. It is still not perfect, i.e. the fonts are to big, but I couldn't yet nail the error ...)\n\nSo if you work on XSLFTables handling - patch it and submit your patch.\nIf you work on something else - add @Ignore\nI'll change it to your suggestion soon anyways.\n\nAndi", "is_private": false, "id": 191532, "creation_time": "2016-06-10T16:56:29Z", "time": "2016-06-10T16:56:29Z", "creator": "kiwiwings@apache.org", "bug_id": 59686, "attachment_id": null}, {"count": 4, "tags": [], "text": "> If you work on something else - add @Ignore\n> I'll change it to your suggestion soon anyways.\n> \n> Andi\n\nThanks.  \"Soon\" is good enough for my purposes.  I'm working on XSSF stuff now, I can ignore this test for now.  Every now and then Java isn't completely cross-platorm, and fonts are one of those areas.", "attachment_id": null, "bug_id": 59686, "id": 191556, "time": "2016-06-11T06:34:01Z", "creator": "greg.woolsey@gmail.com", "creation_time": "2016-06-11T06:34:01Z", "is_private": false}, {"count": 5, "tags": [], "text": "fixed font issue via r1747803", "attachment_id": null, "bug_id": 59686, "id": 191774, "time": "2016-06-18T23:56:46Z", "creator": "kiwiwings@apache.org", "creation_time": "2016-06-18T23:56:46Z", "is_private": false}]