[{"count": 0, "tags": [], "bug_id": 45637, "attachment_id": null, "id": 119863, "time": "2008-08-15T12:02:08Z", "creator": "ashundi@tibco.com", "creation_time": "2008-08-15T12:02:08Z", "is_private": false, "text": "ElementProxy initializes unconditionally the following\n> \n>    static ElementChecker checker = new ElementCheckerImpl.InternedNsChecker();\n> \ninstead it should check a configuration option and initialize the appropriate subclass of ElementCheckerImpl.\n\nThe default option should be .equals() though (change!).  Users preferring == should be able to configure it that way.\n\nCorrectness should trump optimization and even backward compatibility."}, {"count": 1, "tags": [], "bug_id": 45637, "attachment_id": null, "is_private": false, "id": 128549, "time": "2009-07-06T04:23:55Z", "creator": "coheigea@apache.org", "creation_time": "2009-07-06T04:23:55Z", "text": "\nI have a fix for this on a local checkout. The problem is that there are many more pointer comparisons in the code-base, e.g. in the Canonicalizer implementations, and I'm not comfortable adding in a configuration option for these until I can test with a DOM implementation that does not intern namespaces.\n\nIs there a DOM implementation available in open-source land that either does not intern namespaces or allows disabling of interning via configuration?\n\nColm."}, {"count": 2, "tags": [], "text": "*** Bug 47833 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 130491, "creator": "sean.mullan@oracle.com", "time": "2009-09-17T12:38:28Z", "bug_id": 45637, "creation_time": "2009-09-17T12:38:28Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "gigerstyle@gmx.ch", "attachment_id": null, "text": "We also hitting this bug. As in the report https://issues.apache.org/bugzilla/show_bug.cgi?id=46888 we are using Weblogic 10.3 but under Linux with IBM JDK.\n\nThis is a bug and should definitively be fixed.\n\nPlease read the following article about interning and xerces:\nhttp://weblogs.java.net/blog/2006/06/26/all-about-intern\n\nAlso when you look at the source code of the sun-jdk then you will notice\nthe following in the String class:\n\n/**\n     * Compares this string to the specified object.  The result is {@code\n     * true} if and only if the argument is not {@code null} and is a {@code\n     * String} object that represents the same sequence of characters as this\n     * object.\n     *\n     * @param  anObject\n     *         The object to compare this {@code String} against\n     *\n     * @return  {@code true} if the given object represents a {@code String}\n     *          equivalent to this string, {@code false} otherwise\n     *\n     * @see  #compareTo(String)\n     * @see  #equalsIgnoreCase(String)\n     */\n    public boolean equals(Object anObject) {\n\tif (this == anObject) {\n\t    return true;\n\t}\n\tif (anObject instanceof String) {\n\t    String anotherString = (String)anObject;\n\t    int n = count;\n\t    if (n == anotherString.count) {\n\t\tchar v1[] = value;\n\t\tchar v2[] = anotherString.value;\n\t\tint i = offset;\n\t\tint j = anotherString.offset;\n\t\twhile (n-- != 0) {\n\t\t    if (v1[i++] != v2[j++])\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t    }\n\t}\n\treturn false;\n    }\n\nso with a sun-jdk the equal call ends in a reference equality check, which will be true for xerces (as it does interning) and the overhead will be just a method call. I think other\nvm's will do the same, and if not then use another vm if you rely on this \"performance gain\".\n\nInteresting is also the documentation of xerces:\nhttp://xerces.apache.org/xerces-j/features.html \nunder \"SAX Features\" they state that interning is disabled by default. I don't know if it's old doc, generally the case for DOM or just for SAX events. If that's true, then this is just a vm optimisation and a reason more to fix this.", "id": 134988, "time": "2010-03-02T10:17:18Z", "bug_id": 45637, "creation_time": "2010-03-02T10:17:18Z", "is_private": false}, {"count": 4, "tags": [], "text": "It was decided to move to only using equals() so no configuration option is needed. See issue 40897.", "attachment_id": null, "id": 140772, "creator": "lajoie@apache.org", "time": "2010-10-16T06:54:46Z", "bug_id": 45637, "creation_time": "2010-10-16T06:54:46Z", "is_private": false}]