[{"count": 0, "attachment_id": null, "bug_id": 59017, "is_private": false, "id": 188500, "time": "2016-02-17T12:51:31Z", "creator": "mikko.tiihonen@iki.fi", "creation_time": "2016-02-17T12:51:31Z", "tags": [], "text": "I want to serve brotli compressed static files from tomcat DefaultServlet if the browser supports it. They are about 15% smaller than the gzip files.\n\nI created a pull request for the feature: https://github.com/apache/tomcat/pull/28\n\nThe feature is quite generic, but it does not yet have any way to configure the list compression formats using DefaultServlet parameters. That can be added later if we want to support other compression formats."}, {"count": 1, "tags": [], "bug_id": 59017, "text": "A few thoughts:\n\n1. This is interesting (Brotli)\n2. This pull request has very little Brotli-specific stuff in it (just a unit test that exercises the generic \"precompressed\" refactoring introduced here)\n3. It is forward-compatible with other compression algorithms with obvious filename extensions\n\nI'm +1 on this pull request. I'd like some other feedback, though, first.", "id": 188521, "time": "2016-02-17T20:27:29Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-02-17T20:27:29Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "chris@christopherschultz.net", "is_private": false, "text": "Oh, another thing: there are no license issues, here, since although Brotli has a (modified?) MIT license (and I'm not clear on its compatibility with AL2), there is no specific support for the algorithm: it's merely detecting the presence of a precompressed file using its filename extension and providing the appropriate Content-Encoding response header.", "id": 188528, "time": "2016-02-17T21:20:43Z", "bug_id": 59017, "creation_time": "2016-02-17T21:20:43Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 59017, "text": "I updated the pull request a week ago based on feedback from markt-asf.\nChanges:\n- possibility to configure the list of precompressed file types for default servlet\n- parsing accept-encoding header according to RFC7231 (the current functionality in tomcat serves gzip even if explicitly disabled with accept-encoding:gzip;q=0)\n\nWhat would be the process for accepting this feature?", "id": 189141, "time": "2016-03-05T18:10:11Z", "creator": "mikko.tiihonen@iki.fi", "creation_time": "2016-03-05T18:10:11Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "markt@apache.org", "text": "Thanks for the updated patch. It looks great.\n\nI've applied it to 9.0.x and it will be included in 9.0.0.M4 onwards.", "id": 189277, "time": "2016-03-08T20:48:59Z", "bug_id": 59017, "creation_time": "2016-03-08T20:48:59Z", "is_private": false, "attachment_id": null}]