[{"count": 0, "tags": [], "bug_id": 51815, "attachment_id": null, "text": "Hi,\n\nI am getting an exception when i am trying to read an excel workbook- 2003(version).Workbook is password protected at workbook level (workbook cant be opened without password)and write protceted(workbook cant be modified without password) as well.\n\nError Details:\n\norg.apache.poi.hssf.record.RecordFormatException: Unable to construct record instance\n\tat org.apache.poi.hssf.record.RecordFactory$ReflectionRecordCreator.create(RecordFactory.java:64)\n\tat org.apache.poi.hssf.record.RecordFactory.createSingleRecord(RecordFactory.java:263)\n\tat org.apache.poi.hssf.record.RecordFactoryInputStream.readNextRecord(RecordFactoryInputStream.java:270)\n\tat org.apache.poi.hssf.record.RecordFactoryInputStream.nextRecord(RecordFactoryInputStream.java:236)\n\tat org.apache.poi.hssf.record.RecordFactory.createRecords(RecordFactory.java:392)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:276)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:201)\n\tat org.apache.poi.hssf.usermodel.HSSFWorkbook.<init>(HSSFWorkbook.java:183)\n\tat test.ExcelReader3.read(ExcelReader3.java:35)\n\tat test.ExcelReader3.main(ExcelReader3.java:85)\nCaused by: java.lang.IllegalArgumentException: Name is too long: \u00fc?Cl5\u2039\u0014\u00b8\u2026s.\"\u2021L^\u00bb\u00f4\u0006\u2019\u2018\u0006?\u02dcy\u00ea\u00e2\u00e2\u00f8\u00fd\u001d\f\u00f9&\u2014J\u00d6\u00f66\u000b\u00b2\u00b8\u00f8\u00c4\u0010\u00f9j\u00ff\u00cbL+?\u00ad\u00ca\u00e4\u00d3'\u203a\u00bfR\u0019V\u00a4?\u00d0q\u00d0\u00aa$E\u000f}\u00bdd\u0003\u00e5\nL~\u00edL\u00a0\u00a3\u00a8\u00ce\u0016*\u20ac=\u201a\u00ff\\\u00cc\u00a0\u00eb\u00bc%\u00e2\f\u00f1\u00f0$yC\u00fc\u02c6\u00e4\u00bf3\u00bfl\u001f4\n\tat org.apache.poi.hssf.record.WriteAccessRecord.setUsername(WriteAccessRecord.java:107)\n\tat org.apache.poi.hssf.record.WriteAccessRecord.<init>(WriteAccessRecord.java:74)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\n\tat java.lang.reflect.Constructor.newInstance(Unknown Source)\n\tat org.apache.poi.hssf.record.RecordFactory$ReflectionRecordCreator.create(RecordFactory.java:56)\n\t... 9 more\nPicked up JAVA_TOOL_OPTIONS: -agentlib:jvmhook\nPicked up _JAVA_OPTIONS: -Xrunjvmhook -Xbootclasspath/a:C:\\PROGRA~1\\HP\\QUICKT~1\\bin\\JAVA_S~1\\classes;C:\\PROGRA~1\\HP\\QUICKT~1\\bin\\JAVA_S~1\\classes\\jasmine.jar\n\n\nMy Java code is ->\n\n\npackage test;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\n\nimport org.apache.poi.hssf.record.crypto.Biff8EncryptionKey;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.poifs.filesystem.POIFSFileSystem;\n\npublic class ExcelReader3 \n{\n\tpublic static final String PATH = \"C:\\\\Monika\\\\2003\\\\\";\n\t//This is Password protected file(it is protceted by both options- i.e., workbook cant be openede without pwd and can't be modified without pwd.) \n\tpublic static final String FILE_NAME = PATH + \"Both.xls\";\n\t\n\tpublic void read(String password) throws Exception\n\t{\n\t\t\n\t\t\n\t\tBiff8EncryptionKey.setCurrentUserPassword(password); \t\t\n\t\t\n\t\tPOIFSFileSystem pois = new POIFSFileSystem(new FileInputStream(FILE_NAME));\t\t\n\t\t\n\t\t//THIS LINE FAILS\n\t\tHSSFWorkbook book = new HSSFWorkbook(pois);\n\t\t\n\t\tHSSFSheet sheet = book.getSheetAt(0);\n\t\t\n\t\tSystem.out.println(sheet.getSheetName());\n\t\t\n\t\t\n\t\tByteArrayOutputStream bos = new ByteArrayOutputStream();\n\t\t\n\t\tbook.write(bos);\t\t\n\t\t\n\t\tFileOutputStream fs=new FileOutputStream(\"C:\\\\testfos.xls\");\n\t\tint count;\n\t\tByteArrayInputStream bis=new ByteArrayInputStream(bos.toByteArray());\n\t\twhile((count = bis.read()) != -1) \n\t\t{\n\t\t\tfs.write(count);\n\t\t}\t\n\t}\n\t\n\tpublic static void main(String[] args) \n\t{\n\t\ttry \n\t\t{\n\t\t\tString password = \"abc\";\n\t\t\t\n\t\t\tExcelReader3 reader = new ExcelReader3();\t\n\t\t\treader.read(password);\n\t\t} \n\t\tcatch (Exception e) \n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n}\n\n\nSame code works fine, if excel is only password protected at workbook level (workbook cant be opened without password)- it gives me an unprotected excel or only write protceted(workbook cant be modified without password) - it gives me the file as is,i.e., write protected.\n\nbut if excel is protceted by both the cases, it fails.\n\ni am using POI version - 3.6 .Have tried with 3.7 also. but not working.\n\nPls help!!! :(\n\nThanks!!!", "id": 149250, "time": "2011-09-15T06:02:11Z", "creator": "m.mongia24@gmail.com", "creation_time": "2011-09-15T06:02:11Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 51815, "text": "Any chance you could share the problem file?\n\nAlso, does the problem file pass the Microsoft validator? See the FAQ http://poi.apache.org/faq.html#faq-N10109 for details", "id": 149257, "time": "2011-09-15T11:08:59Z", "creator": "apache@gagravarr.org", "creation_time": "2011-09-15T11:08:59Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 51815, "attachment_id": 28851, "id": 159439, "time": "2012-05-29T10:18:54Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2012-05-29T10:18:54Z", "is_private": false, "text": "Created attachment 28851\nMS BiffValidator result"}, {"count": 3, "tags": [], "bug_id": 51815, "attachment_id": null, "id": 159440, "time": "2012-05-29T10:29:04Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2012-05-29T10:29:04Z", "is_private": false, "text": "I'm adding this comment because I've found this problem in a number of documents, and I think POI could handle this error a bit better. And I think the same error is showing in the document attached for bug 50833.\n\nThe question seems to be that when the WriteAccessRecord finds a corrupt header tries to reconstruct the data for the last document modification and tries to set the username. But sometimes fail. I've seen the code and found a comment which states that this information is optional:\n// String header looks wrong (probably missing)\n// OOO doc says this is optional anyway.\n// reconstruct data\n\nSo I wonder if it could be possible to catch the exception thrown by the setUsername method and just clear the username in that case. I've been testing with LibreOffice and Excel 2003 and they ignore that information in any document with this problem.\n\nSomething like this could solve the problem:\n\npublic WriteAccessRecord(RecordInputStream in) {\n\t...\n\tif (nChars > DATA_SIZE || (is16BitFlag & 0xFE) != 0) {\n\t\t// String header looks wrong (probably missing)\n\t\t// OOO doc says this is optional anyway.\n\t\t// reconstruct data\n\t\tbyte[] data = new byte[3 + in.remaining()];\n\t\tLittleEndian.putUShort(data, 0, nChars);\n\t\tLittleEndian.putByte(data, 2, is16BitFlag);\n\t\tin.readFully(data, 3, data.length-3);\n\t\tString rawValue = new String(data);\n\t\ttry {\n\t\t\tsetUsername(rawValue.trim());\n\t\t} catch (IllegalArgumentException e) {\n\t\t\tsetUsername(\"\"); // or just log a warning and skip it\n\t\t}\n\t\treturn;\n\t}\n\t...\n}\n\n\nI don't know if there is a better way of handling corrupted data, but if that bit of info is optional, I think no exception should be thrown.\nPlease, let me know what you think.\n\n* I attached results from ms biffvalidator and poi biffviewer, I cannot attach a real document since it contains sensible information and when I try to modify it and save the problem goes away. But let me know if you really need it and I will see what I can do.\n* Just in case, the \"data\" byte array final value is:\n[5, 63, 63, 63, -122, ... (till index 55), 32, ... (till index 111)]"}, {"count": 4, "tags": [], "bug_id": 51815, "text": "Created attachment 28852\nBiffViewer output", "id": 159441, "time": "2012-05-29T10:29:49Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2012-05-29T10:29:49Z", "is_private": false, "attachment_id": 28852}, {"count": 5, "tags": [], "bug_id": 51815, "text": "Dear Team,\n  Was there any solution found for the problem stated above ? Even I am facing the same issue.\n\nThanks!\n\nRegards,\nNaveen", "id": 175365, "attachment_id": null, "creator": "naveenchandravp@gmail.com", "creation_time": "2014-05-21T10:11:01Z", "time": "2014-05-21T10:11:01Z", "is_private": false}, {"count": 6, "tags": [], "creator": "apache@gagravarr.org", "text": "We need a test file which shows the problem\n\nComment 3 suggests it could be triggered with the file from bug #50833, but that one loads fine with the current version of Apache POI. If the problem still remains, we need a file that shows it so we can check, investigate and fix", "id": 175774, "time": "2014-06-11T17:21:28Z", "bug_id": 51815, "creation_time": "2014-06-11T17:21:28Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 51815, "attachment_id": null, "text": "You are right. I don't know if POI handles the file stream a bit better now and this error is not showing anymore or I was wrong when I said the attachment in bug 50833 had this problem too. Maybe I only tested with BiffViewer and didn't try to create a workbook the normal way.\nBut, I would like to know what you think about what I said before about the comments in the code stating that the information is optional, shouldn't we avoid throwing exceptions from that piece of code?\nAlso, in a case like this where a file works with the current version, but the BiffViewer from that same version throws an exception, what should be done? Fix BiffViewer? Since BiffViewer uses the same WriteAccessRecord class, how can this be fixed?\nMoreover, do you think it would be possible to write some tests for BiffViewer in order to validate this bug?\nI really think a try-catch block surrounding setUsername() would be a nice addition, given that in that place the data is already assumed to be corrupted and poi is just trying its best to reconstruct it. Throwing an exception if something fails while doing so seems very strange.", "id": 176804, "time": "2014-07-31T14:53:19Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2014-07-31T14:53:19Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 51815, "attachment_id": null, "id": 176806, "time": "2014-07-31T15:11:04Z", "creator": "apache@gagravarr.org", "creation_time": "2014-07-31T15:11:04Z", "is_private": false, "text": "With a failing test file, we can review exactly what is and isn't option in comparison with the file and the file format docs\n\nWe do have tests which run BiffViewer\n\nSince the supplied file passes just fine with trunk, I'm closing this bug. If you do find another one that does still fail on trunk, please re-open the bug and upload the problematic file"}, {"count": 9, "tags": [], "bug_id": 51815, "text": "Hello Nick,\n  I do have a sample file which would fail the reading by poi. But unfortunately I cannot upload it here as it against our company policies. \n\n  But I felt this would be interesting for you. The sample file is created by some tool and the poi throws error only when it is read directly after the file created. If the created file is opened once by the user manually and fed to poi it reads fine :)\n\n  After debugging I could see that the eronous username which was coming at the first feed to poi was set properly if we open the file once!!\n\nRegards,\nNaveen", "id": 176823, "time": "2014-08-01T07:39:17Z", "creator": "naveenchandravp@gmail.com", "creation_time": "2014-08-01T07:39:17Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 51815, "attachment_id": null, "id": 176824, "time": "2014-08-01T07:56:53Z", "creator": "pedro.t.garcia@gmail.com", "creation_time": "2014-08-01T07:56:53Z", "is_private": false, "text": "Could you create a sample file with fake data? I cannot do it myself because the files I had with this problem were sent to us by some of our customers and I lost track of which ones were sending those (I applied the proposed patch and they are going through without issues).\nThat would get this bug fixed."}]