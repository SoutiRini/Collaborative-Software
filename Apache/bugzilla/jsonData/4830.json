[{"count": 0, "tags": [], "bug_id": 4830, "attachment_id": null, "id": 7840, "time": "2001-11-13T03:37:25Z", "creator": "nicolai.plewinski@siemens.com", "creation_time": "2001-11-13T03:37:25Z", "is_private": false, "text": "Calling the method Class.getResource() with a directory path as parameter \nwithin a Servlet or JSP leeds to the following exception:\n\njava.lang.ClassCastException: org.apache.naming.resources.FileDirContext\n\tat org.apache.catalina.loader.WebappClassLoader.findResourceInternal\n(WebappClassLoader.java:1585)\n\tat org.apache.catalina.loader.WebappClassLoader.findResource\n(WebappClassLoader.java:914)\n\tat org.apache.catalina.loader.WebappClassLoader.getResource\n(WebappClassLoader.java:1041)\n\tat java.lang.ClassLoader.getResource(ClassLoader.java:729)\n\tat java.lang.Class.getResource(Class.java:1249)\n\nThis occures if the requested directory is located in the WEB-INF/classes \ndirectory."}, {"count": 1, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 7876, "time": "2001-11-13T10:51:40Z", "bug_id": 4830, "creation_time": "2001-11-13T10:51:40Z", "is_private": false, "text": "Yes, my mistake. What do you expect it to do ? I think I'll return null."}, {"count": 2, "tags": [], "bug_id": 4830, "is_private": false, "text": "Should be fixed (by returning null) in the 11/14 nightly.", "id": 7897, "time": "2001-11-13T16:36:34Z", "creator": "remm@apache.org", "creation_time": "2001-11-13T16:36:34Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 4830, "attachment_id": null, "id": 7906, "time": "2001-11-13T22:43:50Z", "creator": "nicolai.plewinski@siemens.com", "creation_time": "2001-11-13T22:43:50Z", "is_private": false, "text": "Sorry, but I do not expect to get a null value. Tomcat 3.x returned the \ndirectory URL the same way the standard Java Class Loader does. \n\nThe following class with a classpath relative directory name as parameter \nprints out the absolute path. \n\npublic class Test\n{\n    public Test(){}\n    \n    public static void main(String args[])\n    {\n        Test obj = new Test();\n        System.out.println(obj.getClass().getClassLoader().getSystemResource\n(args[0]));\n    }\n}\n\nI expect the same behaviour from the Catalina Class Loader as the standard Java \nClass Loader."}, {"count": 4, "tags": [], "bug_id": 4830, "text": "Ok, but you'll have to point me to the part in the Java spec that specifies \nthis, otherwise, I won't fix it.\n\nThe CL javadoc says (for the getResource method):\nFinds the resource with the given name. A resource is some data (images, audio, \ntext, etc) that can be accessed by class code in a way that is independent of \nthe location of the code.\n\nIt seems to me that there's an emphasis on the resource being a file (instead \nof a directory).", "id": 7919, "attachment_id": null, "creator": "remm@apache.org", "creation_time": "2001-11-14T10:14:02Z", "time": "2001-11-14T10:14:02Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 4830, "is_private": false, "id": 7930, "attachment_id": null, "creator": "remm@apache.org", "creation_time": "2001-11-14T18:34:00Z", "time": "2001-11-14T18:34:00Z", "text": "After some examination of the code, implementing the behavior you suggest \napparently isn't too hard (although I'm not convinced it is required), so I'm \ncommitting the patch for it to the main branch. The nightly for 11/15 will \ninclude the fix.\nI'm not sure yet if the change will be ported to the 4.0.x branch, as patches \nwhich change the classloading behavior are by definition risky."}, {"count": 6, "tags": [], "bug_id": 4830, "is_private": false, "text": "*** Bug 5869 has been marked as a duplicate of this bug. ***", "id": 9673, "time": "2002-01-15T12:53:51Z", "creator": "remm@apache.org", "creation_time": "2002-01-15T12:53:51Z", "attachment_id": null}]