[{"count": 0, "tags": [], "creator": "adam.morgan@radian6.com", "attachment_id": null, "is_private": false, "id": 159090, "time": "2012-05-16T12:19:38Z", "bug_id": 53241, "creation_time": "2012-05-16T12:19:38Z", "text": "I have looked through the other property substitution bugs but nothing seems to quite fit this situation.  Also, I can't be sure this isn't a bug in ant-contrib, since i found it using ant-contrib, but since it is related to property substitution I assumed ant core.  Perhaps I'm mistaken.  In any case, here's the issue as seen in this example snippet:\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"test\" default=\"\" basedir=\"../\">\n\n\t<path id=\"classpath\">\n\t\t<fileset dir=\"${basedir}/lib\">\n\t\t\t<include name=\"**/*.jar\" />\n\t\t</fileset>\n\t</path>\n\t<taskdef resource=\"net/sf/antcontrib/antlib.xml\" classpathref=\"classpath\" />\n\n\t\t\t\t\n\t<target name=\"test\">\n\t\t<macro1>execute this</macro1>\n\t</target>\n\t<macrodef name=\"macro1\">\n\t\t<text name=\"text\" />\n\t\t<sequential>\n\t\t\t<property name=\"print.this\" value=\"@{text}\"/>\n\t\t\t<echo message=\"print.this: ${print.this}\"/>\n\t\t\t<macro2>${print.this}</macro2>\n\t\t</sequential>\n\t</macrodef>\n\t<macrodef name=\"macro2\">\n\t\t<text name=\"text\" />\n\t\t<sequential>\t\t\t\n\t\t\t<echo message=\"text: @{text}\"/>\n\t\t\t<shellscript shell=\"bash\" dir=\"\" outputproperty=\"output-@{text}\">@{text}</shellscript>\n\t\t\t<echo message=\"output-@{text}: ${output-@{text}}\"/>\t\n\t\t</sequential>\n\t</macrodef>\n</project>\n\n\n\nand the output:\n\ntest:\n     [echo] print.this: execute this\n     [echo] text: execute this\n[shellscript] Result: 127\n     [echo] output-execute this: ${output-${print.this}}\n\nnotice that the 'text' passed in is not substituted properly when echoed the last time.  somehow, the substitution of the macrodef's @{text} ended up with the literal ${print.this} instead of the value of that property 'execute this'."}, {"count": 1, "tags": [], "text": "This is what happens: Everytime you write @text in your macro2 it gets replaced with ${print.this} and them properties get expanded so you see \"execute this\".  In the last case you end up with ${output-${print.this}} before expansion and Ant doesn't do any nested peoperty expansion - so this is the expected behavior.\n\nYou should be able to use the props Antlib for a propertyhelper that supports nested property expansion or rewrite your macro to not nest properties, for example by using a local property as outputproperty.", "is_private": false, "id": 160057, "creator": "bodewig@apache.org", "time": "2012-06-17T05:45:00Z", "bug_id": 53241, "creation_time": "2012-06-17T05:45:00Z", "attachment_id": null}]