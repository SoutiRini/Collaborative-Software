[{"count": 0, "tags": [], "bug_id": 54552, "attachment_id": 29940, "text": "Created attachment 29940\nPatch to apply changes\n\nSee attached diff and provide feedback, please. This should complete HttpServletRequest#changeSessionId(), HttpSessionIdListener.", "id": 165195, "time": "2013-02-12T13:56:32Z", "creator": "nicholas@nicholaswilliams.net", "creation_time": "2013-02-12T13:56:32Z", "is_private": false}, {"count": 1, "tags": [], "text": "Comment on attachment 29940\nPatch to apply changes\n\nFix MIME type", "is_private": false, "id": 165196, "creator": "markt@apache.org", "time": "2013-02-12T13:58:10Z", "bug_id": 54552, "creation_time": "2013-02-12T13:58:10Z", "attachment_id": 29940}, {"count": 2, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "text": "We don't want trailing white space. Could you please remove it?\n\nYou can check for style violations by setting\n\nexecute.validate=true\n\nin build.properties before running \"ant\". It will then run checkstyle before compiling and report andy style violations.", "id": 165197, "time": "2013-02-12T14:16:52Z", "bug_id": 54552, "creation_time": "2013-02-12T14:16:52Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "text": "The patch doesn't compile. At least\n\njavax.servlet.http.HttpSessionIdListener\n\nis missing.", "is_private": false, "id": 165198, "creator": "rainer.jung@kippdata.de", "time": "2013-02-12T14:18:41Z", "bug_id": 54552, "creation_time": "2013-02-12T14:18:41Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 54552, "is_private": false, "text": "I added execute.validate=true to the build.properties file, and it downloaded validate and then validated. However, the build succeeded and I see nothing about any violations reported. The \"validate:\" section of the build is empty. Could you tell me where the trailing white space is? I went through the diff file and didn't find any trailing white space on any lines. I'm always very careful about that...\n\nAlso, I forgot to \"svn add\" the HttpSessionIdListener before \"svn diff.\" My bad. It should compile now. I'll attach the new diff.", "id": 165199, "time": "2013-02-12T14:44:03Z", "creator": "nicholas@nicholaswilliams.net", "creation_time": "2013-02-12T14:44:03Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 54552, "is_private": false, "text": "Created attachment 29941\nRevised diff", "id": 165200, "time": "2013-02-12T14:44:31Z", "creator": "nicholas@nicholaswilliams.net", "creation_time": "2013-02-12T14:44:31Z", "attachment_id": 29941}, {"count": 6, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "id": 165202, "time": "2013-02-12T15:01:33Z", "bug_id": 54552, "creation_time": "2013-02-12T15:01:33Z", "is_private": false, "text": "Are you using Apache Ant 1.8.x? (1.8.4 recommended)"}, {"count": 7, "tags": [], "text": "Yes. I am using Ant 1.8.4.", "is_private": false, "id": 165203, "creator": "nicholas@nicholaswilliams.net", "time": "2013-02-12T15:04:12Z", "bug_id": 54552, "creation_time": "2013-02-12T15:04:12Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "rainer.jung@kippdata.de", "attachment_id": null, "id": 165204, "time": "2013-02-12T15:34:08Z", "bug_id": 54552, "creation_time": "2013-02-12T15:34:08Z", "is_private": false, "text": "Trailing whitespace example:\n\n+++ C:/Tomcat-Build/Source/java/javax/servlet/http/HttpServletRequest.java      (working copy)\n@@ -381,6 +381,15 @@\n      * @see #getSession(boolean)\n      */\n     public HttpSession getSession();\n+\n  ^^^HERE\n+    /**\n\nand several more.\n\nExample validate output:\n\nBuildfile: /shared/build/dev/tomcat/read-write/trunk-clean/build.xml\n\nbuild-prepare:\n   [delete] Deleting directory /shared/build/dev/tomcat/read-write/trunk-clean/output/build/temp\n    [mkdir] Created dir: /shared/build/dev/tomcat/read-write/trunk-clean/output/build/temp\n\ncompile-prepare:\n\ndownload-validate:\n\nproxyflags:\n\nsetproxy:\n\ntestexist:\n     [echo] Testing  for /shared/build/dev/tomcat/deps/tomcat8-deps/checkstyle-5.6/checkstyle-5.6-all.jar\n\ndownloadzip:\n\nvalidate:\n[checkstyle] Running Checkstyle 5.6 on 2503 files\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/javax/servlet/http/HttpServletRequest.java:384: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/javax/servlet/http/HttpServletRequest.java:387: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/javax/servlet/http/HttpServletRequestWrapper.java:240: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/javax/servlet/http/HttpSessionIdListener.java:1: Line does not match expected header line of '^(rem)?\\W*Licensed to the Apache Software Foundation \\(ASF\\) under one or more$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/connector/Request.java:2364: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/connector/Request.java:2367: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/connector/Request.java:2374: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/connector/Request.java:2380: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/connector/Request.java:2382: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/connector/Request.java:2386: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/connector/RequestFacade.java:912: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/connector/RequestFacade.java:915: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/connector/RequestFacade.java:920: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/core/ApplicationContext.java:54: Wrong order for 'javax.servlet.http.HttpSessionIdListener' import.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/core/StandardContext.java:69: Wrong order for 'javax.servlet.http.HttpSessionIdListener' import.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/ha/session/DeltaManager.java:1477: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/ha/session/DeltaManager.java:1482: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/ha/session/DeltaManager.java:1486: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/ha/session/DeltaManager.java:1487: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/session/ManagerBase.java:768: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/session/ManagerBase.java:773: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/session/ManagerBase.java:777: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/session/ManagerBase.java:778: Line matches the illegal pattern '\\s+$'.\n[checkstyle] /shared/build/dev/tomcat/read-write/trunk-clean/java/org/apache/catalina/websocket/WsHttpServletRequestWrapper.java:363: Line matches the illegal pattern '\\s+$'.\n\nBUILD FAILED"}, {"count": 9, "tags": [], "bug_id": 54552, "attachment_id": null, "text": "Overall the patch looks pretty good.\n\nOne minor nit is the white space issues already mentioned.\n\nThe one area where I think some changes are required is listener notification for clusters. If you look at how session destroyed events are handled, the listeners fire on the non-primary nodes based on the value of notifySessionListenersOnReplication. I think the same attribute should be used to determine if the session ID change listeners are fired on the non-primary nodes.", "id": 165205, "time": "2013-02-12T15:36:52Z", "creator": "markt@apache.org", "creation_time": "2013-02-12T15:36:52Z", "is_private": false}, {"count": 10, "tags": [], "creator": "nicholas@nicholaswilliams.net", "attachment_id": 29943, "id": 165208, "time": "2013-02-12T16:52:29Z", "bug_id": 54552, "creation_time": "2013-02-12T16:52:29Z", "is_private": false, "text": "Created attachment 29943\nRevised diff with extra whitespace removed and notifySessionListenersOnReplication considered\n\nI hadn't noticed notifySessionListenersOnReplication. I have revised the DeltaManager to take that into consideration before notifying HttpSessionIdListeners.\n\nI see what my problem was with validation, now. My execute.validate=true was being overridden by an execute.validate=false later in the file. Should have looked for that. I'm kind of surprised that y'all don't allow blank lines between code groups to contain tab-spaces to be in line with the rest of the code. It seems such a trivial thing. Your website says \"Apache Tomcat has very loosely defined coding conventions\" (and doesn't mention anything about blank lines/whites paces), but I would not call that \"loose\" :-P. But, whatever the rules, my diff complies now, as requested.\n\nBy the way, webapps\\docs\\jasper-howto.xml that was just checked in failed the validate test. After fixing all of my code I had to disable validation to get it to completely compile. :-)\n\nI've attached the updated diff with the extra whitespace removed and notifySessionListenersOnReplication taken into consideration."}, {"count": 11, "tags": [], "bug_id": 54552, "attachment_id": null, "id": 165223, "time": "2013-02-13T09:29:01Z", "creator": "markt@apache.org", "creation_time": "2013-02-13T09:29:01Z", "is_private": false, "text": "Patch applied with the following changes:\n- changeSessionId should return the new session ID, not the old one\n- fixed Javadoc warning\n\nMany thanks for this."}, {"count": 12, "attachment_id": null, "creator": "nicholas@nicholaswilliams.net", "is_private": false, "id": 165228, "time": "2013-02-13T13:29:48Z", "bug_id": 54552, "creation_time": "2013-02-13T13:29:48Z", "tags": [], "text": "Mark, this is what the API docs say about changeSessionId():\n\n[quote]\nChange the session id of the current session associated with this request and return the new session id.\n\nReturns: the original session id\n[/quote]\n\nAs you can see, the documentation contradicts itself. My thought was to go with the \"returns\" statement for now and revise if necessary when the final API docs come out and that is corrected. Meanwhile, I was going to ping someone working on the spec and make sure they addressed the ambiguity.\n\nDo you have documentation somewhere that it is, for sure, supposed to be the new session ID?"}, {"count": 13, "tags": [], "text": "(In reply to comment #12)\n> Mark, this is what the API docs say about changeSessionId():\n> \n> [quote]\n> Change the session id of the current session associated with this request\n> and return the new session id.\n> \n> Returns: the original session id\n> [/quote]\n> \n> As you can see, the documentation contradicts itself. My thought was to go\n> with the \"returns\" statement for now and revise if necessary when the final\n> API docs come out and that is corrected. Meanwhile, I was going to ping\n> someone working on the spec and make sure they addressed the ambiguity.\n\nYou mean like me?\nhttp://java.net/jira/browse/SERVLET_SPEC-54\n\n> Do you have documentation somewhere that it is, for sure, supposed to be the\n> new session ID?\n\nThe intention from the EG mailing list is that the new value should be returned.", "attachment_id": null, "id": 165234, "creator": "markt@apache.org", "time": "2013-02-13T16:33:25Z", "bug_id": 54552, "creation_time": "2013-02-13T16:33:25Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 54552, "attachment_id": null, "id": 165237, "time": "2013-02-13T16:38:59Z", "creator": "nicholas@nicholaswilliams.net", "creation_time": "2013-02-13T16:38:59Z", "is_private": false, "text": "Excellent! That works for me. It's hard to find a lot of this information on Google these days, especially since so much of it is password-hidden.\n\nI see what you did, though. You created that bug a few minutes ago. :-P\n\nThanks for clarifying that the EG mailing list indicated that the intention was for the new session ID, not the old, to be returned."}]