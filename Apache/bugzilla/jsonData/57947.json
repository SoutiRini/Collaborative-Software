[{"count": 0, "tags": [], "bug_id": 57947, "attachment_id": null, "text": "After poi-ooxml version upgrade from 3.10-FINAL to 3.12, tests of our software, which are running parallelly, began failing randomly:\n\njava.io.IOException: No such file or directory\n\tat java.io.UnixFileSystem.createFileExclusively(Native Method)\n\tat java.io.File.createNewFile(File.java:1006)\n\tat java.io.File.createTempFile(File.java:1989)\n\tat org.apache.poi.util.TempFile$DefaultTempFileCreationStrategy.createTempFile(TempFile.java:105)\n\tat org.apache.poi.util.TempFile.createTempFile(TempFile.java:60)\n\tat org.apache.poi.openxml4j.opc.ZipPackage.closeImpl(ZipPackage.java:347)\n\tat org.apache.poi.openxml4j.opc.OPCPackage.close(OPCPackage.java:426)\n\n\nWe found changes in ZipPackage.closeImpl():\n\npoi-ooxml 3.10-FINAL:\norg.apache.poi.openxml4j.opc.ZipPackage.closeImpl()\nline 343:  File tempFile = File.createTempFile(generateTempFileName(FileHelper.getDirectory(targetFile)), \".tmp\");\n\no poi-ooxml 3.12:\norg.apache.poi.openxml4j.opc.ZipPackage.closeImpl()\nline 347:   File tempFile = TempFile.createTempFile(generateTempFileName(FileHelper.getDirectory(targetFile)), \".tmp\");\n\nIn TempFile.createTempFile method temp files are creating in 'poifiles' subdirectory, which is marked with \"deleteOnExit\".\n\nWhen multiple applications in same computer are running simultaneously, some of them began failing.\n\nWe tried to set system property \"poi.keep.tmp.files\" values where possible, but we are still getting failures...\n\nOur recommendations:\na) not to try delete poifiles temp files directory that is used by multiple applications with poi integration; or\nb) create random poifilesxxxx temp files subdirectories for each application with poi integration.", "id": 183099, "time": "2015-05-25T08:49:23Z", "creator": "laimutis.ignatavicius@asseco.lt", "creation_time": "2015-05-25T08:49:23Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 57947, "attachment_id": null, "text": "The poi.keep.tmp.files property should prevent POI from cleaning those files completely, so it is strange that it does not solve the problem completely for you. Either some other process is removing this directory on your setup, e.g. temp-file-cleanup scripts or there are still POI-related processes running without that system property being set.\n\nIn addition, according to how the deleteOnExit-hook in the JVM is implemented and the javadoc of File.delete(), it should suffice to put an unrelated file into the poifiles-directory to prevent it from being removed. Can you try if that is a workaround in your case?", "id": 183104, "time": "2015-05-25T19:43:25Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-05-25T19:43:25Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "htung@palantir.com", "is_private": false, "id": 184462, "time": "2015-08-11T06:15:07Z", "bug_id": 57947, "creation_time": "2015-08-11T06:15:07Z", "tags": [], "text": "Should this be fused with #57200 as duplicate?  This bug makes it clear that the problem extends beyond the SXSSF component, but it's almost certainly the same bug."}, {"count": 3, "tags": [], "text": "I am closing this as duplicate of bug 57200, we likely will not remove the poifiles directory in the future to avoid these types of problems when multiple applications are running in parallel.\n\n*** This bug has been marked as a duplicate of bug 57200 ***", "is_private": false, "bug_id": 57947, "id": 189406, "time": "2016-03-12T15:38:38Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-03-12T15:38:38Z", "attachment_id": null}]