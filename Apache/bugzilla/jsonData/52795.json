[{"attachment_id": null, "tags": [], "creator": "flw@fotoware.com", "is_private": false, "count": 0, "id": 154365, "time": "2012-02-29T12:50:53Z", "bug_id": 52795, "creation_time": "2012-02-29T12:50:53Z", "text": "If ScriptAlias contains spaces (such as \"C:\\Program Files\\...\"), then mod_fcgid fails to spawn the process.\n\nIn error.log, I see something similar to:\n\n\"Can't run C:\\Program\"\n\nThe problem seems to be in fcgid_proc_win.c:proc_spawn_process, which seems to tokenize the command-line without distinguishing between spaces in the executable path and spaces between command-line arguments. The following code is responsible:\n\n    /* Build wrapper args */\n    argc = 0;\n    tmp = cmdline;\n    while (1) {\n        word = ap_getword_white(procnode->proc_pool, &tmp);\n        if (word == NULL || *word == '\\0')\n            break;\n        if (argc >= APACHE_ARG_MAX)\n            break;\n        wargv[argc++] = word;\n    }\n    wargv[argc] = NULL;\n\nThe following workaround solves the problem for me. However, it makes it impossible to pass any additional arguments to the FastCGI process (which is probably not an issue for most people):\n\n        // HACK(flw): Strip all command-line arguments and make the CGI path the first.\n\t// This works around a problem of the code above which splits the command name at every whitespace.\n\targc = 1;\n\twargv[0] = procinfo->cgipath;\n\n\nPlease note: I am aware of bug#52436. However, I think that is a different problem, because it occurs on Ubuntu, where fcgid_proc_win.c is not used.\n\nPerhaps, a proper solution is to make it possible to escape spaces or use quotes in ScriptAlias. The documentation does not state that this is possible, and the implementation in fcgid_proc_win.c clearly does not support that."}, {"count": 1, "tags": [], "text": "This is either duplicating 52436 or shares the same root issue as 51194\n\n*** This bug has been marked as a duplicate of bug 51194 ***", "attachment_id": null, "bug_id": 52795, "id": 154376, "time": "2012-02-29T18:22:14Z", "creator": "wrowe@apache.org", "creation_time": "2012-02-29T18:22:14Z", "is_private": false}, {"count": 2, "tags": [], "text": "Verified that this was the same root issue as 51194, see the patch attached to that ticket.  Verified that php script paths and names containing spaces work correctly with that patch applied.", "attachment_id": null, "id": 163037, "creation_time": "2012-10-29T19:15:20Z", "time": "2012-10-29T19:15:20Z", "creator": "wrowe@apache.org", "bug_id": 52795, "is_private": false}, {"count": 3, "tags": [], "bug_id": 52795, "attachment_id": null, "text": "This has not been resolved. After upgrading to Apache 2.4.9 and the latest modules without our own patch applied, the same problem still occurs. \n\nSnippet from httpd.conf:\n\n\tScriptAlias /fcgid-bin/ \"C:/Program Files (x86)/FotoWare/My Application/\"\n\t<Location /fcgid-bin/>\n\t\tSetHandler fcgid-script\n\t</Location>\n\nIs it necessary to use any special syntax so that ScriptAlias respects the spaces?", "id": 175861, "time": "2014-06-18T09:29:13Z", "creator": "flw@fotoware.com", "creation_time": "2014-06-18T09:29:13Z", "is_private": false}, {"count": 4, "tags": [], "creator": "flw@fotoware.com", "attachment_id": null, "id": 175867, "time": "2014-06-18T12:07:25Z", "bug_id": 52795, "creation_time": "2014-06-18T12:07:25Z", "is_private": false, "text": "The problem is still the same. Tokenization of the command-line causes the executable path to be split. This happens in proc_spawn_process in fcgid_proc_win.c, except a different tokenization function is used now.\n\nA workaround (which only works if the FCGI script does not take any arguments) is as follows:\n\n/* Build wrapper args */\n\t// HACK(flw): Whitespace handling is still broken when using ScriptAlias, so skip tokenization of the command-line\n    //apr_tokenize_to_argv(cmdline, (char ***)&wargv, procnode->proc_pool);\n\twargv = apr_palloc(procnode->proc_pool, 2 * sizeof(char*));\n\twargv[0] = cmdline;\n\twargv[1] = NULL;\n\n\nI tried escaping spaces as \"\\ \" in the ScriptAlias and Directory directives in httpd.conf. This only causes requests to fail with 403 Forbidden. Can it be that the paths in Directory and ScriptAlias are parsed differently?\n\nThere is no official documentation anywhere about how paths with spaces must be escaped. I tried to learn about it in the code of apr_tokenize_to_argv, but it is C code cluttered with preprocessor macros and memory allocations, so I gave up (working with strings in C is hard. I guess that's why it's broken.../rant)"}]