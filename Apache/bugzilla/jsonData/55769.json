[{"count": 0, "tags": [], "bug_id": 55769, "attachment_id": null, "id": 171191, "time": "2013-11-12T12:11:07Z", "creator": "ctvipin007@gmail.com", "creation_time": "2013-11-12T12:11:07Z", "is_private": false, "text": "Hi,\n\nI am using Apache POI for reading .xlsx files, using POI 3.9 version jar files.\nWhile reading the excel file I am getting out of memory error, and also it creates some .txt,.phd files in the folder.\nData in Excel file  is only 100 rows. Error is given below.\n\n<<\nJVMDUMP006I Processing dump event \"systhrow\", detail \"java/lang/OutOfMemoryError\" - please wait.\nJVMDUMP032I JVM requested Heap dump using '/dsProjects/Scripts/C_Analysis/heapdump.20131112.064446.57043.0001.phd' in response to an event\nJVMDUMP010I Heap dump written to /dsProjects/Scripts/C_Analysis/heapdump.20131112.064446.57043.0001.phd\n>>\n\nAlso I am using XSSF Workbook. Is there any idea to resolve this issue? \nIs there any function available like Dispose() for resolving this issue?"}, {"count": 1, "tags": [], "bug_id": 55769, "attachment_id": null, "text": "The default JVM heap size is very small. You either need to increase it to a more sensible size, or if you really are constrained to a tiny heap, switch to SAX based parsing (as detailed on the website)", "id": 171192, "time": "2013-11-12T12:40:40Z", "creator": "apache@gagravarr.org", "creation_time": "2013-11-12T12:40:40Z", "is_private": false}, {"count": 2, "attachment_id": null, "creator": "ctvipin007@gmail.com", "text": "But when I use the SAX parser , it can't take null valued cell..", "id": 171193, "time": "2013-11-12T14:39:16Z", "bug_id": 55769, "creation_time": "2013-11-12T14:39:16Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 171194, "time": "2013-11-12T15:16:57Z", "bug_id": 55769, "creation_time": "2013-11-12T15:16:57Z", "is_private": false, "text": "If you're not sure how to use the SAX parser, ask on the user list. If you've found a bug in the SAX parser, please raise a new bugzilla entry for that. As it stands, you just need to either increase your heap size to something sensible, or use SAX"}, {"count": 4, "tags": [], "bug_id": 55769, "attachment_id": null, "text": "Am using this code...But it cannot[Neglect] empty cell... Is there any idea to get null cell in the following code ???\n\n....void parseExcel(File file) throws IOException \n\t{\n\t\t\n  OPCPackage container;\n        try \n\t\t{\n            container = OPCPackage.open(file.getAbsolutePath());\n            ReadOnlySharedStringsTable strings = new ReadOnlySharedStringsTable(container);\n            XSSFReader xssfReader = new XSSFReader(container);\n            StylesTable styles = xssfReader.getStylesTable();\n            XSSFReader.SheetIterator iter = (XSSFReader.SheetIterator) xssfReader.getSheetsData();\n\t\t\t\n            while (iter.hasNext()) \n\t\t\t{\n\t\t\t\t\n                InputStream stream = iter.next();\n\t\t\t\tprocessSheet(styles, strings, stream);\n                stream.close();\n\t\t\t\t\n            }\n\n\n\tprotected static void processSheet(StylesTable styles, ReadOnlySharedStringsTable strings, InputStream sheetInputStream) throws IOException, SAXException \n\t{\n\t\t\t\t\n        InputSource sheetSource = new InputSource(sheetInputStream);\n        SAXParserFactory saxFactory = SAXParserFactory.newInstance();\n        try \n\t\t{\n            SAXParser saxParser = saxFactory.newSAXParser();\n            XMLReader sheetParser = saxParser.getXMLReader();\n            ContentHandler handler = new XSSFSheetXMLHandler(styles, strings, new SheetContentsHandler() \n\t\t\t{\n\t\t\t\t\n\t\t\t\t@Override\n                public void startRow(int rowNum) \n\t\t\t\t{\n\t\t\t\t\t//System.out.println(\"\")\n\t\t\t\t\t\n\t\t\t\t}\n                @Override\n                public void endRow() \n\t\t\t\t{\n                \tstringList.add(\"Row\");\n                }\n                @Override\n                public void cell(String cellReference, String formattedValue) \n\t\t\t\t{\n\t\t\t\t\tSystem.out.println(formattedValue);\n\t\t\t\t}\n                @Override\n                public void headerFooter(String text, boolean isHeader, String tagName) \n\t\t\t\t{\n                \tSystem.out.println(isHeader?\"Header \" +text:\"Footer \"+text );\n                }\n\n            }, \n            false//means result instead of formula\n            );\n            sheetParser.setContentHandler(handler);\n            sheetParser.parse(sheetSource);\n        } \n\t\tcatch \n\t\t{", "id": 171202, "time": "2013-11-13T07:22:38Z", "creator": "ctvipin007@gmail.com", "creation_time": "2013-11-13T07:22:38Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 55769, "attachment_id": null, "text": "My previous comment still stands:\n\nIf you're not sure how to use the SAX parser, ask on the user list. If you've found a bug in the SAX parser, please raise a new bugzilla entry for that.For *this* bug, you just need to either increase your heap size to something sensible, or use SAX properly", "id": 171211, "time": "2013-11-13T22:02:27Z", "creator": "apache@gagravarr.org", "creation_time": "2013-11-13T22:02:27Z", "is_private": false}]