[{"count": 0, "tags": [], "creator": "tim@robbins.dropbear.id.au", "text": "Although it is well documented that mod_deflate does not modify the Content-\nLength header when decoding a gzip-compressed message body, the incorrect value \nseems to confuse mod_dav -- when I try to upload a compressed message body with \nthe PUT method, mod_dav returns a 400 Bad Request error, and this message \nappears in the log:\n\n[Mon Aug 04 19:49:25 2003] [error] [client 192.168.0.144] An error occurred \nwhile reading the request body.  [400, #0]\n\nTo test, I'm PUT'ing the output of \"echo test | gzip -9c\". What happens is that \ndav_method_put()'s first call to ap_get_client_block() returns 5 (strlen\n(\"test\\n\")), but then it calls ap_get_client_block() again, and it returns -1 \nto signal an error. I believe this is because it's expecting more data.\n\nI'm not sure how to solve this problem. It's probably not a great idea to \nbuffer the whole body in memory then fix up the Content-Length header after \ndecompressing it all, so perhaps mod_deflate could fake up a \"chunked\"-encoded \nbody, putting each block of data returned from zlib into a new chunk, and \nsignalling EOF with a 0-length chunk. I'm not familiar with the internals of \nthe Apache httpd, so I'm not sure.\n\nI'm filing this as \"Enhancement\" because although the problem is documented, it \nwould be really nice to be able to use PUT requests w/ gzip-compressed bodies.", "id": 42051, "time": "2003-08-04T10:57:46Z", "bug_id": 22104, "creation_time": "2003-08-04T10:57:46Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 22104, "attachment_id": null, "text": "mod_dav should use bucket brigades when reading PUT data, then all should be fine.\n\nSo changing component to mod_dav and accept this as a bug.\n\nThanks for the report.", "id": 42052, "time": "2003-08-04T11:19:37Z", "creator": "nd@perlig.de", "creation_time": "2003-08-04T11:19:37Z", "is_private": false}, {"attachment_id": 7641, "tags": [], "bug_id": 22104, "text": "Created attachment 7641\nPatch to make mod_dav use bucket brigades when handling PUT requests", "count": 2, "id": 42065, "time": "2003-08-04T13:22:16Z", "creator": "tim@robbins.dropbear.id.au", "creation_time": "2003-08-04T13:22:16Z", "is_private": false}, {"count": 3, "tags": [], "creator": "tim@robbins.dropbear.id.au", "attachment_id": null, "id": 42066, "time": "2003-08-04T13:28:17Z", "bug_id": 22104, "creation_time": "2003-08-04T13:28:17Z", "is_private": false, "text": "Thanks for the suggestion to use bucket brigades -- I've got compressed uploads \nat least partly working now, but it seems to choke on large requests:\n[Mon Aug 04 23:21:13 2003] [error] [client 192.168.0.144] (55)No buffer space \navailable: Could not get brigade.  [500, #0]\n\nThere are other things I'm not quite sure about in the patch, but I thought I'd \nupload it just to get the ball rolling."}, {"count": 4, "tags": [], "creator": "tim@robbins.dropbear.id.au", "attachment_id": 7642, "id": 42067, "time": "2003-08-04T13:39:53Z", "bug_id": 22104, "creation_time": "2003-08-04T13:39:53Z", "is_private": false, "text": "Created attachment 7642\nCall apr_brigade_cleanup() to avoid running out of buffer space"}, {"attachment_id": 7643, "tags": [], "bug_id": 22104, "is_private": false, "count": 5, "id": 42070, "time": "2003-08-04T14:09:48Z", "creator": "nd@perlig.de", "creation_time": "2003-08-04T14:09:48Z", "text": "Created attachment 7643\nclean patch I wrote in the meantime :)"}, {"count": 6, "tags": [], "creator": "nd@perlig.de", "text": "Yeah, it was probably the missing cleanup. Can you try my patch nevertheless?\n\nIf it works, I'm going to commit it in 2.1 and propose it for backport.", "id": 42071, "time": "2003-08-04T14:11:50Z", "bug_id": 22104, "creation_time": "2003-08-04T14:11:50Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "text": "This seems to work, thanks! I haven't performed exhaustive testing; I uploaded \na 15MB file, both with and without gzip compression, and verified that the \nfiles were identical and had the same md5sum as the original file.", "attachment_id": null, "bug_id": 22104, "id": 42141, "time": "2003-08-05T10:04:48Z", "creator": "tim@robbins.dropbear.id.au", "creation_time": "2003-08-05T10:04:48Z", "is_private": false}, {"count": 8, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "id": 42256, "time": "2003-08-06T14:23:19Z", "bug_id": 22104, "creation_time": "2003-08-06T14:23:19Z", "is_private": false, "text": "It's essentially the same patch as yours :)\n\nThanks for testing so far, I'm going to commit now."}, {"count": 9, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "id": 47892, "time": "2003-11-21T22:32:38Z", "bug_id": 22104, "creation_time": "2003-11-21T22:32:38Z", "is_private": false, "text": "fix already committed to Apache 2.1-dev...  sounds like we need to consider it\nfor merge to 2.0.next"}, {"count": 10, "tags": [], "text": "It's considered already, but the review you know ... :-))", "attachment_id": null, "bug_id": 22104, "id": 47895, "time": "2003-11-21T22:36:18Z", "creator": "nd@perlig.de", "creation_time": "2003-11-21T22:36:18Z", "is_private": false}, {"count": 11, "tags": [], "creator": "jorton@redhat.com", "text": "Backport now in 2.0 tree courtesy of Justin...", "id": 50246, "time": "2004-01-08T12:58:49Z", "bug_id": 22104, "creation_time": "2004-01-08T12:58:49Z", "is_private": false, "attachment_id": null}]