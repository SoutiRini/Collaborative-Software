[{"count": 0, "tags": [], "bug_id": 20264, "attachment_id": null, "text": "I've written a small task that run a java program using ExecuteJava during the \nbuild process.  After a clean build this task is calls the ExecuteJava.execute \nmore than 200 times.\n\nWhen ExecuteJava finish each time it is calling the AntClassLoader.cleanup() \nmethod.  Calling the cleanup() method don't remove the instance of \nAntClassLoader from the project using \"project.removeBuildListener(this);\".\nI couldn't find any other method that will properly remove that reference.\n\nMemory leak from AntClassLoader is an old bug that it is currently resolved - \nyou can see it at http://nagoya.apache.org/bugzilla/show_bug.cgi?id=8689\nbut the resolution isn't working for ExecuteJava.", "id": 37847, "time": "2003-05-27T14:40:03Z", "creator": "shaul@comsoft.co.il", "creation_time": "2003-05-27T14:40:03Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 20264, "attachment_id": null, "text": "This doesn't only affect ExecuteJava but almost all classes that create\nAntClassLoader instances.  Raising the severity.", "id": 37899, "time": "2003-05-28T07:28:23Z", "creator": "bodewig@apache.org", "creation_time": "2003-05-28T07:28:23Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 20264, "attachment_id": null, "text": "Shoul dbe fixe din the next nightly build. Thanks", "id": 38677, "time": "2003-06-10T14:04:04Z", "creator": "conor@apache.org", "creation_time": "2003-06-10T14:04:04Z", "is_private": false}]