[{"count": 0, "tags": [], "creator": "eric.taix@gmail.com", "attachment_id": null, "text": "According to JSP 2.0 specification (chapter 1.7 page 72,73)\n\nThis code is illegal:\n<mytags:tag value=\"<%= \"hi!\" %>\" />\n\nInstead the correct sentence would be:\n<mytags:tag value='<%= \"hi!\" %>' />\n<mytags:tag value=\"<%= \\\"hi!\\\" %>\" />\n<mytags:tag value='<%= \\\"name\\\" %>' />\n...\n\nBut Tomcat 5.5 accept the first sentence. It's not a real bug but accepting a wrong sentence allow developpers to write code which does not respect the JSP specification. And when this code is executing in another servlet container (Websphere 6.1 for example) it doesn't work.", "id": 116697, "time": "2008-05-16T04:22:28Z", "bug_id": 45015, "creation_time": "2008-05-16T04:22:28Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 45015, "attachment_id": null, "id": 116718, "time": "2008-05-16T15:31:29Z", "creator": "markt@apache.org", "creation_time": "2008-05-16T15:31:29Z", "is_private": false, "text": "This has been fixed in trunk and proposed for 5.5.x and 6.0.x"}, {"count": 2, "tags": [], "bug_id": 45015, "text": "This has been fixed in 6.0.x and will be in 6.0.17 onwards.", "id": 118025, "time": "2008-06-26T12:54:27Z", "creator": "markt@apache.org", "creation_time": "2008-06-26T12:54:27Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 45015, "attachment_id": null, "id": 119554, "time": "2008-08-07T09:54:16Z", "creator": "cedrik.lime@gmail.com", "creation_time": "2008-08-07T09:54:16Z", "is_private": false, "text": "A quick note to anyone being bitten by this bug fix: you can easily search which of your JSPs (*.jsp*) need to be updated with the following regular expression (take a deep breath):\n\n<\\w+:[^>]+=\"[^<\"]*<%=[^%]*\"|<\\w+:[^>]+='[^<']*<%=[^%]*'\n\nUnfortunately, I haven't found a way to automatically fix JSPs, but at least you (hopefully) won't forget any!"}, {"count": 4, "tags": [], "bug_id": 45015, "text": "This has been fixed in 5.5.x and will be included in 5.5.27 onwards.", "id": 119817, "time": "2008-08-14T02:04:39Z", "creator": "markt@apache.org", "creation_time": "2008-08-14T02:04:39Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 45015, "attachment_id": null, "id": 121109, "time": "2008-10-01T01:30:09Z", "creator": "tapas.adhikary@gmail.com", "creation_time": "2008-10-01T01:30:09Z", "is_private": false, "text": "Mark,\nI am using Tomcat 5.5.27 on Linux but still facing the problem.\nI am using c:ret tld and using following code in my abc.jsp,\n\n<c-rt:set var=\"currUrl\" value=\"<%=request.getAttribute((String)pageContext.getAttribute(\"param\")+\"_Url\")%>\" />\nWhile jsp compilation , I am getting following error,\norg.apache.jasper.JasperException: file:browser/abc.jsp(51,42) Attribute value request.getAttribute((String)pageContext.getAttribute(\"param\")+\"_Url\") is quoted with \" which must be escaped when used within the value.\n\nWhen I modify the code with escape character it works fine.This is my modified code,\n<c-rt:set var=\"currUrl\" value=\"<%=request.getAttribute((String)pageContext.getAttribute(\\\"param\\\")+\\\"_Url\\\")%>\" />\n\nAccording to comment # 4 this issue is resolved. But I am not sure if it is resolved for Linux version of Tomcat 5.5.27 too.\n\nLet me know if you need more info on this.\n\nOne quick question , Do I have to set any Tomcat JVM options to get rid of the issue temporarily??\n\n\n"}, {"count": 6, "tags": [], "text": "I see the same issue for some files having nested quotes and dont see it for some other files having the same kind of nested quoting.\n\nThe kind of quoting giving the problem is mentioned in my previous comment.\nBut the following seam to the working.\nid=\"<%= c.var(\"ActivityBanner.Name\") %><%= c.var(\"ActivityBanner.Index\") %>\"\n\nI don't see any particular standard way in which it fails. Both the cases i have used tomcat 5.5.27", "is_private": false, "id": 121110, "creator": "tapas.adhikary@gmail.com", "time": "2008-10-01T02:16:03Z", "bug_id": 45015, "creation_time": "2008-10-01T02:16:03Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 45015, "attachment_id": null, "id": 121112, "time": "2008-10-01T03:47:06Z", "creator": "markt@apache.org", "creation_time": "2008-10-01T03:47:06Z", "is_private": false, "text": "Re comment 5, what you are seeing is the correct behaviour. The checking can be relaxed. See http://tomcat.apache.org/tomcat-5.5-doc/config/systemprops.html\n\nRe comment 6, that could be a bug. Can you provide the simplest complete JSP that demonstrates the issue please."}, {"count": 8, "tags": [], "bug_id": 45015, "text": "I have done some more testing and I can't repeat the issue reported in comment 6. If you still see it, please re-open this report and add the simplest JSP that demonstrates the issue.", "id": 121178, "time": "2008-10-03T08:39:53Z", "creator": "markt@apache.org", "creation_time": "2008-10-03T08:39:53Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 45015, "attachment_id": null, "id": 121223, "time": "2008-10-06T04:44:46Z", "creator": "subir.sasikumar@wipro.com", "creation_time": "2008-10-06T04:44:46Z", "is_private": false, "text": "Hi,\n\nI use apache-tomcat-6.0.18 with jdk1.5.0_13. Ant version is apache-ant-1.6.2.\n\n[b]While using ant to pre-compile JSPs, i get the error message related to quotes and compilation fails.[/b]\n\nSee user list discussion \nhttp://mail-archives.apache.org/mod_mbox/tomcat-users/200810.mbox/%3C20D88322B9D55444A327FEB661C303900BD408E4@HYD-MDP-MBX01.wipro.com%3E \n\nI have tried all that i could (available in link above), but it seems it does not work without code changes. i.e. the System property is not effective for precompilation\n\nPlease check if this is a bug as this is a blocker for us now?"}, {"count": 10, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 121229, "creation_time": "2008-10-06T06:19:56Z", "time": "2008-10-06T06:19:56Z", "bug_id": 45015, "text": "Comment #9 is a question for the Tomcat users list, or possibly even the Ant users list.", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 45015, "text": "Thanks to Cedric for the helpful regex.  I've modified it a bit so it can actually be used to replace and fix (most) instances of this problem automatically.  If you have an IDE that supports regex replace (I used IDEA), do a replace in path for this regex:\n\n(<\\w+:(?:[^>]|<%=[^%]+%>)+=)\"([^<\"]*<%=[^%]*\"[^%]*%>[^\"]*)\"\n\nFor the replacement text, enter:\n\n$1'$2'\n\nDoing this was a necessity for me as I had to make thousands of changes to over 300 JSP files on the code base I'm working on.  I have to say I think this should have been implemented as an opt-in fix via a config or something, rather than breaking backward compatibility for every tomcat user.  Please be more careful in the future guys.  We rely on you to not do things like this to us.", "count": 11, "id": 129927, "time": "2009-08-25T08:50:53Z", "creator": "sean.r.stephenson@gmail.com", "creation_time": "2009-08-25T08:50:53Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 45015, "text": "Ok.  I guess I should have read this thread a little more carefully before spending hours fixing all this.  So there is an opt-out for the strict parsing.\n\nhttp://tomcat.apache.org/tomcat-5.5-doc/config/systemprops.html\n\nToo late for me.  Maybe it would be helpful to put something like \"or disable strict quote checking\" in the error message?", "id": 129928, "time": "2009-08-25T08:59:35Z", "creator": "sean.r.stephenson@gmail.com", "creation_time": "2009-08-25T08:59:35Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "text": "You can add this config option to the file \"catalina.properties\" which is in the directory of \"%tomcat_home%/conf\",as follows:\norg.apache.jasper.compiler.Parser.STRICT_QUOTE_ESCAPING=false\nAnd the problem will be resolved\n(In reply to comment #3)\n> A quick note to anyone being bitten by this bug fix: you can easily search\n> which of your JSPs (*.jsp*) need to be updated with the following regular\n> expression (take a deep breath):\n> \n> <\\w+:[^>]+=\"[^<\"]*<%=[^%]*\"|<\\w+:[^>]+='[^<']*<%=[^%]*'\n> \n> Unfortunately, I haven't found a way to automatically fix JSPs, but at least\n> you (hopefully) won't forget any!", "is_private": false, "id": 131896, "creator": "fightforjava@gmail.com", "time": "2009-11-12T00:05:07Z", "bug_id": 45015, "creation_time": "2009-11-12T00:05:07Z", "attachment_id": null}, {"count": 14, "tags": [], "bug_id": 45015, "text": "Test in TC 6.0.26, the \"strip quote escaping Parser\" didn't work.\n\n-- JUST use this testing code\n<mytags:tag value=\"<%= \"hi!\" %>\" />\n\n-- I setup a jspc command line to debug the JspC\n-- Then I reaches this stack frames\nmain@1, prio=5, in group 'main', status: 'RUNNING'\n\t  at org.apache.jasper.compiler.AttributeParser.getUnquoted(AttributeParser.java:54)\n\t  at org.apache.jasper.compiler.Parser.parseAttributeValue(Parser.java:249)\n\t  at org.apache.jasper.compiler.Parser.parseAttribute(Parser.java:205)\n\t  at org.apache.jasper.compiler.Parser.parseAttributes(Parser.java:148)\n\t  at org.apache.jasper.compiler.Parser.parseCustomTag(Parser.java:1204)\n\t  at org.apache.jasper.compiler.Parser.parseElementsScriptless(Parser.java:1467)\n\t  at org.apache.jasper.compiler.Parser.parseElements(Parser.java:1385)\n\t  at org.apache.jasper.compiler.Parser.parseBody(Parser.java:1630)\n\t  at org.apache.jasper.compiler.Parser.parseOptionalBody(Parser.java:974)\n\t  at org.apache.jasper.compiler.Parser.parseCustomTag(Parser.java:1242)\n\t  at org.apache.jasper.compiler.Parser.parseElementsScriptless(Parser.java:1467)\n\t  at org.apache.jasper.compiler.Parser.parseElements(Parser.java:1385)\n\t  at org.apache.jasper.compiler.Parser.parseBody(Parser.java:1630)\n\t  at org.apache.jasper.compiler.Parser.parseOptionalBody(Parser.java:974)\n\t  at org.apache.jasper.compiler.Parser.parseCustomTag(Parser.java:1242)\n\t  at org.apache.jasper.compiler.Parser.parseElementsScriptless(Parser.java:1467)\n\t  at org.apache.jasper.compiler.Parser.parseElements(Parser.java:1385)\n\t  at org.apache.jasper.compiler.Parser.parseBody(Parser.java:1630)\n\t  at org.apache.jasper.compiler.Parser.parseOptionalBody(Parser.java:974)\n\t  at org.apache.jasper.compiler.Parser.parseCustomTag(Parser.java:1242)\n\t  at org.apache.jasper.compiler.Parser.parseElementsScriptless(Parser.java:1467)\n\t  at org.apache.jasper.compiler.Parser.parseBody(Parser.java:1633)\n\t  at org.apache.jasper.compiler.Parser.parseJspBody(Parser.java:1584)\n\t  at org.apache.jasper.compiler.Parser.parseJspAttributeAndBody(Parser.java:1001)\n\t  at org.apache.jasper.compiler.Parser.parseOptionalBody(Parser.java:972)\n\t  at org.apache.jasper.compiler.Parser.parseCustomTag(Parser.java:1242)\n\t  at org.apache.jasper.compiler.Parser.parseElements(Parser.java:1418)\n\t  at org.apache.jasper.compiler.Parser.parse(Parser.java:130)\n\t  at org.apache.jasper.compiler.ParserController.doParse(ParserController.java:255)\n\t  at org.apache.jasper.compiler.ParserController.parse(ParserController.java:103)\n\t  at org.apache.jasper.compiler.Compiler.generateJava(Compiler.java:185)\n\t  at org.apache.jasper.compiler.Compiler.compile(Compiler.java:347)\n\t  at org.apache.jasper.JspC.processFile(JspC.java:1182)\n\t  at org.apache.jasper.JspC.execute(JspC.java:1331)\n\t  at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-1)\n\t  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\t  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\t  at java.lang.reflect.Method.invoke(Method.java:597)\n\t  at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)\n\t  at org.apache.tools.ant.TaskAdapter.execute(TaskAdapter.java:134)\n\t  at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:288)\n\t  at sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:-1)\n\t  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\t  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\t  at java.lang.reflect.Method.invoke(Method.java:597)\n\t  at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:105)\n\t  at org.apache.tools.ant.Task.perform(Task.java:348)\n\t  at org.apache.tools.ant.Target.execute(Target.java:357)\n\t  at org.apache.tools.ant.Target.performTasks(Target.java:385)\n\t  at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1329)\n\t  at org.apache.tools.ant.Project.executeTarget(Project.java:1298)\n\t  at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\n\t  at org.apache.tools.ant.Project.executeTargets(Project.java:1181)\n\t  at org.apache.tools.ant.Main.runBuild(Main.java:698)\n\t  at org.apache.tools.ant.Main.startAnt(Main.java:199)\n\t  at org.apache.tools.ant.launch.Launcher.run(Launcher.java:257)\n\t  at org.apache.tools.ant.launch.Launcher.main(Launcher.java:104)\n\n-- In this frame: parseAttributeValue(Parser.java:249) - \n   The method signature is: private String parseAttributeValue(String watch) throws JasperException\n   We can see the parameter (watch)'s value is three characters: '%', '>', '\"' \n   So after this code fragment executed\n   -> 245 \u00a0\u00a0\u00a0\u00a0 char quote = 0;\n   -> 246 \u00a0\u00a0\u00a0\u00a0 if (watch.length() == 1) {\n   -> 247 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 quote = watch.charAt(0);\n   -> 248 \u00a0\u00a0\u00a0\u00a0 }\n   the \"quote\" variable is actually 0\n   so event the system property \"org.apache.jasper.compiler.Parser.STRICT_QUOTE_ESCAPING\" isn't set to \"false\"\n   the strit parser didn't report for this problem \n   ->  (codes in org.apache.jasper.compiler.AttributeParser)\n   -> 307 \u00a0\u00a0\u00a0\u00a0 } else if (ch == quote && strict) {\n   -> 308 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 String msg = Localizer.getMessage(\"jsp.error.attribute.noescape\",\n   -> 309 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 input, \"\"+ quote);\n   -> 310 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 throw new IllegalArgumentException(msg);\n   -> 311 \u00a0\u00a0\u00a0\u00a0 } else {\n   the line 307's condition should never be evaluated to \"true\"", "id": 135547, "time": "2010-03-23T07:17:47Z", "creator": "lwr@21cn.com", "creation_time": "2010-03-23T07:17:47Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 45015, "attachment_id": null, "id": 135552, "time": "2010-03-23T12:09:56Z", "creator": "lwr@21cn.com", "creation_time": "2010-03-23T12:09:56Z", "is_private": false, "text": "Test this issue in 6.0.20, and it works. So there should be a regression between 6.0.21 and 6.0.26"}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "is_private": false, "count": 16, "id": 135646, "time": "2010-03-25T21:41:02Z", "bug_id": 45015, "creation_time": "2010-03-25T21:41:02Z", "text": "Confirmed. I have a failing test case. I'll add that to trunk and then work on a fix."}, {"count": 17, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "This has been re-fixed in trunk and proposed for 6.0.x\n\nMoving to 6.0.x since the regression does not exist in 5.5.x", "id": 135648, "time": "2010-03-25T22:51:23Z", "bug_id": 45015, "creation_time": "2010-03-25T22:51:23Z", "is_private": false}, {"count": 18, "tags": [], "text": "This has been fixed in 6.0.x and will be included in 6.0.27 onwards.", "attachment_id": null, "id": 136870, "creator": "markt@apache.org", "time": "2010-05-14T15:27:43Z", "bug_id": 45015, "creation_time": "2010-05-14T15:27:43Z", "is_private": false}, {"count": 19, "tags": [], "creator": "bjomin@integra.fr", "attachment_id": null, "id": 147642, "creation_time": "2011-06-30T14:54:22Z", "time": "2011-06-30T14:54:22Z", "bug_id": 45015, "text": "adding org.apache.jasper.compiler.Parser.STRICT_QUOTE_ESCAPING=false in catalina.properties worked for me\n\nThanks to (In reply to comment #13)\n> You can add this config option to the file \"catalina.properties\" which is in\n> the directory of \"%tomcat_home%/conf\",as follows:\n> org.apache.jasper.compiler.Parser.STRICT_QUOTE_ESCAPING=false\n> And the problem will be resolved\n> (In reply to comment #3)\n> > A quick note to anyone being bitten by this bug fix: you can easily search\n> > which of your JSPs (*.jsp*) need to be updated with the following regular\n> > expression (take a deep breath):\n> > \n> > <\\w+:[^>]+=\"[^<\"]*<%=[^%]*\"|<\\w+:[^>]+='[^<']*<%=[^%]*'\n> > \n> > Unfortunately, I haven't found a way to automatically fix JSPs, but at least\n> > you (hopefully) won't forget any!\n\nWorked for me, thanks !!", "is_private": false}]