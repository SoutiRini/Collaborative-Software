[{"count": 0, "tags": [], "creator": "drmacdon@hotmail.com", "attachment_id": null, "id": 121293, "time": "2008-10-07T14:41:15Z", "bug_id": 45963, "creation_time": "2008-10-07T14:41:15Z", "is_private": false, "text": "WebappClassLoader.java line 1302 performs a system.loadClass(name) and catches the corresponding ClassNotFoundException. \n\nIf system is able to find a class but not all necessary dependents, the code breaks past the catch with a NoClassDefFoundError during the defineClass() call and fails while my class loader would have resolved everything had it been given the chance.\n\nIgnoring NoClassDefFoundError's would be nice - although cleaning up my layering will help avoid the issue as well. \n\n\n\t// (0.2) Try loading the class with the system class loader, to prevent\n\t//\t the webapp from overriding J2SE classes\n\ttry {\n            clazz = system.loadClass(name);\n            if (clazz != null) {\n                if (resolve)\n                    resolveClass(clazz);\n                return (clazz);\n            }\n\t} catch (ClassNotFoundException e) {\n            // Ignore\n\t}"}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 121328, "time": "2008-10-08T15:56:24Z", "bug_id": 45963, "creation_time": "2008-10-08T15:56:24Z", "is_private": false, "text": "I am not convinced that ignoring NoClassDefFoundError exceptions is a good idea. It is indicative of dependant classes being split between class loaders and that strikes me as asking for trouble.\n\nI am tempted to close this as WONTFIX but I'll leave it open for now as others may have different views."}, {"count": 2, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 122118, "time": "2008-11-01T17:57:03Z", "bug_id": 45963, "creation_time": "2008-11-01T17:57:03Z", "is_private": false, "text": "I am closing this as won't fix since I think it will create more problems than it solves."}]