[{"count": 0, "tags": [], "creator": "naox@yum.pl", "attachment_id": null, "is_private": false, "id": 167696, "time": "2013-06-06T19:03:54Z", "bug_id": 55068, "creation_time": "2013-06-06T19:03:54Z", "text": "When writing to per vhost errorlog apache uses root permissions. To provide errorlog to end user administrator can point this for exampe\n<virtualhost ...>\nerrorlog /home/user/your_apache_log\n\nnow user does this\nrm /home/user/your_apache_log\nln -s /bin/sh /home/user/your_apache_log\nand waits for apache to restart sometimes later\n\nnow nobody can't login to server now since /bin/sh has been modified by apache process. This is security issue.\n\n1) Apache should not write to any logs using root permissions but permissions specified in httpd.conf by User and Group\n2) if there is SuexecUserGroup in vhost then per-dir errorlog should be writen to using these permissions"}, {"count": 1, "tags": [], "bug_id": 55068, "text": "I disagree quite strongly here. Writing the logs as root prevents an attacker whith the ability to inject code into scripts from removing evidence from the log files. Writing the logs as the same user that processes requests is really a bad idea.\n\nAn option to set the user/group for log files would be nice, though, therefore marking this as enhancement bug. I am not sure that this is easy to do in a portable way, though. Changing effective uid for opening the log files may make the parent process vulnerable to attacks with ptrace on some OSs.\n\n\nNote that you can already do this, at the expense of two additional processes per logfile:\n\nCreate a logwrapper script:\n\n#!/bin/sh\nset -u\nexec su \"$1\" -c \"exec cat >> $2\"\n\n\nAnd then use this as a piped logger:\n\nCustomLog \"| /usr/local/sbin/logwrapper loguser /home/loguser/logfile\" combined", "id": 167747, "time": "2013-06-09T08:43:42Z", "creator": "sf@sfritsch.de", "creation_time": "2013-06-09T08:43:42Z", "is_private": false, "attachment_id": null}]