[{"count": 0, "tags": [], "bug_id": 9153, "attachment_id": null, "id": 16220, "time": "2002-05-16T09:12:39Z", "creator": "thomas.letsch@loyaltypartner.com", "creation_time": "2002-05-16T09:12:39Z", "is_private": false, "text": "Hi,\n\nI have found a regular expression and accoording String which hangs the JVM:\nRE: \"^((\\w|\\s){1,50})$\"\nString to match: \"Controlling &Cheques\"\n\nIt will hang when I call\nRE re = new RE(\"^((\\w|\\s){1,50})$\");\nre.match(\"Controlling &Cheques\");\n\nThanks for any help.\n\nRegards,\nThomas"}, {"count": 1, "tags": [], "bug_id": 9153, "attachment_id": null, "id": 16224, "time": "2002-05-16T11:24:03Z", "creator": "thomas.letsch@loyaltypartner.com", "creation_time": "2002-05-16T11:24:03Z", "is_private": false, "text": "Sorry, but it should be \nRE re = new RE(\"^([\\w\\s]{1,50})$\");\nre.match(\"Controlling &Cheques\");\n\n\nBut the problem remains the same.."}, {"count": 2, "attachment_id": null, "creator": "thomas.letsch@loyaltypartner.com", "is_private": false, "id": 16225, "time": "2002-05-16T11:39:42Z", "bug_id": 9153, "creation_time": "2002-05-16T11:39:42Z", "tags": [], "text": "It seems to me that the processing time grows exponentially with the amount of \ncharacters in the Search String. \nEspecially the amount of chars before the special char (e.g. \"&\").\nA String \"&asfbd\" will get through fast, but a String \"asfbd&\" will take much \nmore time."}, {"count": 3, "tags": [], "creator": "vgritsenko@apache.org", "attachment_id": null, "id": 36144, "time": "2003-04-25T18:16:31Z", "bug_id": 9153, "creation_time": "2003-04-25T18:16:31Z", "is_private": false, "text": "*** Bug 5243 has been marked as a duplicate of this bug. ***"}, {"count": 4, "tags": [], "text": "*** Bug 15775 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 9153, "id": 36513, "time": "2003-05-02T02:02:58Z", "creator": "vgritsenko@apache.org", "creation_time": "2003-05-02T02:02:58Z", "attachment_id": null}, {"count": 5, "tags": [], "text": "*** Bug 10940 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 9153, "id": 36515, "time": "2003-05-02T02:04:09Z", "creator": "vgritsenko@apache.org", "creation_time": "2003-05-02T02:04:09Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "*** Bug 23338 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 9153, "id": 44472, "time": "2003-09-23T00:29:50Z", "creator": "vgritsenko@apache.org", "creation_time": "2003-09-23T00:29:50Z", "attachment_id": null}, {"count": 7, "attachment_id": null, "creator": "vgritsenko@apache.org", "is_private": false, "id": 44474, "time": "2003-09-23T00:35:53Z", "bug_id": 9153, "creation_time": "2003-09-23T00:35:53Z", "tags": [], "text": "*** Bug 23303 has been marked as a duplicate of this bug. ***"}, {"count": 8, "tags": [], "text": "Here is an re and input combo that hang forever:\nC.{1,2}C.{5,45}[VMFLWIE].C.{1,4}C.{1,4}[WYFVQHLT]H.{2}C.{5,45}[WFLYI].C.{2}C\n\nMEMKKKINMELKNRAPEEVTELVLDNCLCVNGEIEGLNDTFKELEFLSMANVELSSLARLPSLNKLRKLELSDNIISGGL\nEVLAEKCPNLTYLNLSGNKIKDLSTVEALQNLKNLKSLDLFNCEITNLEDYRESIFELLQQITYLDGFDQEDNEAPDSEE\nEDDDDEDGDEDEEDEDEDEAGPPEGYEEEEDDDEDEAGSEVGEGEEEVGLSYLMKDEIQDEEDDDDYVDEGEEEEEEEEE\nGLRGEKRKRDAEDDGEEDDD\n\nThanks in advance for a patch!", "attachment_id": null, "bug_id": 9153, "id": 51022, "time": "2004-01-23T00:21:58Z", "creator": "sandarmani@nuvelo.com", "creation_time": "2004-01-23T00:21:58Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 9153, "attachment_id": null, "is_private": false, "id": 51060, "time": "2004-01-23T17:09:04Z", "creator": "sandarmani@nuvelo.com", "creation_time": "2004-01-23T17:09:04Z", "text": "Another re that hangs match:\n^.{10,115}[DENF][ST][LIVMF][LIVSTEQ]V.[AGP][STANEQPK]\n\nthis was created as re = newRE(\"the above pattern\") and\neither re.match or re.getParenEnd(0) has been hanging\nfor 15 hours already now.\nenvironment is j2sdk1.4.1_02 on Linux.\nTo be fair, these bog down the C regex somewhat too, but\nnothing like this.\n\nsmaller {n,m} ranges are matching ok."}, {"count": 10, "tags": [], "bug_id": 9153, "attachment_id": null, "id": 54051, "time": "2004-03-16T08:22:29Z", "creator": "o_sukhodolsky@yahoo.com", "creation_time": "2004-03-16T08:22:29Z", "is_private": false, "text": "I think that the cause of the problem is the way we compile <something>{n,m} \nconstuction.  As far as I can see, program for it is equal to\n<something>{n}(<something>|)...(<something>|) (this has exponentional \ncomplexity)\nSo, during matching we have no way to optimize this.\nPossible way to fix the problem would be adding new operation for this \nconstruction, so we process it faster."}, {"count": 11, "tags": [], "creator": "vgritsenko@apache.org", "attachment_id": null, "id": 54158, "time": "2004-03-17T15:47:24Z", "bug_id": 9153, "creation_time": "2004-03-17T15:47:24Z", "is_private": false, "text": "*** Bug 27670 has been marked as a duplicate of this bug. ***"}, {"count": 12, "tags": [], "creator": "vgritsenko@apache.org", "attachment_id": null, "id": 57285, "time": "2004-05-12T14:55:35Z", "bug_id": 9153, "creation_time": "2004-05-12T14:55:35Z", "is_private": false, "text": "*** Bug 28926 has been marked as a duplicate of this bug. ***"}, {"count": 13, "tags": [], "text": "*** Bug 31719 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 9153, "id": 78394, "time": "2005-08-11T05:15:18Z", "creator": "vgritsenko@apache.org", "creation_time": "2005-08-11T05:15:18Z", "attachment_id": null}, {"count": 14, "tags": [], "creator": "alexk@lynx.net", "attachment_id": null, "id": 82623, "time": "2005-11-17T18:38:46Z", "bug_id": 9153, "creation_time": "2005-11-17T18:38:46Z", "is_private": false, "text": "Here is another combination that hangs it for quite some time:\npattern: ^[a-zA-Z0-9 ]{1, 35}$\ninput : This is a sample string (remove it)\n\nI have observed a lot of recursive activity going on in debugger while matching\nthis pattern. Interestingly enough the pattern ^[a-zA-Z0-9 ]*$ works really fast."}, {"count": 15, "tags": [], "creator": "vgritsenko@apache.org", "attachment_id": null, "id": 100331, "time": "2007-03-12T20:01:52Z", "bug_id": 9153, "creation_time": "2007-03-12T20:01:52Z", "is_private": false, "text": "fixed in trunk"}, {"count": 16, "tags": [], "bug_id": 9153, "is_private": false, "text": "Using jakarta-regexp 1.5 and 1.6-dev (rev. 536456) I have the same problem with\nthe following regexp:\n\nPattern: <([^<]*[^<]+)+>\nInput: <a>remove it</a>\n\n\n", "id": 102981, "time": "2007-05-09T01:48:48Z", "creator": "ch.nolte@noltec.org", "creation_time": "2007-05-09T01:48:48Z", "attachment_id": null}, {"count": 17, "tags": [], "bug_id": 9153, "attachment_id": null, "text": "Sorry. The wrong input string. The input which goes into an endless loop is:\n\n<P align=\"center\"><STRONG><FONT >test&nbsp;&nbsp; test</FONT></STRONG></P><P\nstyle=TEXT-ALIGN: left><FONT>", "id": 102982, "time": "2007-05-09T01:56:15Z", "creator": "ch.nolte@noltec.org", "creation_time": "2007-05-09T01:56:15Z", "is_private": false}, {"count": 18, "tags": [], "text": "(In reply to comment #16)\n> Using jakarta-regexp 1.5 and 1.6-dev (rev. 536456) I have the same problem\n\nIt is not the same problem since you do not have {,} in your regexp.\n\n\n> with the following regexp:\n> \n> Pattern: <([^<]*[^<]+)+>\n\nI don't understand what you meant here. Wouldn't it be exactly the same as:\n\n  <([^<]+)+>\n\nAnd I bet this one will be faster too.", "attachment_id": null, "bug_id": 9153, "id": 102991, "time": "2007-05-09T05:09:47Z", "creator": "vgritsenko@apache.org", "creation_time": "2007-05-09T05:09:47Z", "is_private": false}, {"count": 19, "tags": [], "text": "Using jakarta-regexp 1.5\nthe following regexp (yes, it is not what was intended, but anyway):\n^((?:[!_.@?-]+)|(?:\\w)){6,60}$\n\ncauses an infinite loop in RE.match using this input:\n7ftt_.4q?iJoz7I8ky8c5BPwM\u00fcTge9D5-k\u00c4tDAH\u00f6SLidNMNYbch\u00e4cs\u00d6pLPPh\n\nProbably a new Bug?", "is_private": false, "bug_id": 9153, "id": 111806, "time": "2007-12-14T05:59:45Z", "creator": "t.koerbs@intershop.de", "creation_time": "2007-12-14T05:59:45Z", "attachment_id": null}]