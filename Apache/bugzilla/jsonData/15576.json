[{"count": 0, "tags": [], "text": "When calling the response.addCookie(cookie) method\nwe get a java.lang.IllegalArgumentException, if we\nhave the following value inside the cookie:\n\nde:de-de:standard70:de,en:standard70:0\n\nStacktrace info:\n\norg.apache.tomcat.util.http.ServerCookie.maybeQuote(ServerCookie.java:315)\norg.apache.tomcat.util.http.ServerCookie.appendCookieValue\n(ServerCookie.java:248)\n...\n\nWe have no problems with tomcat version 3.xx the problem comes with\ntomcat 4.xx.\nWe can't avoid this value its been set by a separate application.", "attachment_id": null, "bug_id": 15576, "id": 28126, "time": "2002-12-20T16:48:36Z", "creator": "klaus.proell@t-online.de", "creation_time": "2002-12-20T16:48:36Z", "is_private": false}, {"count": 1, "tags": [], "creator": "elphsi@yahoo.co.uk", "attachment_id": null, "id": 31758, "time": "2003-02-21T14:58:50Z", "bug_id": 15576, "creation_time": "2003-02-21T14:58:50Z", "is_private": false, "text": "Exception appears to be due to the comma in the cookie value. Translate the \ncomma to another character and the cookie will be added successfully. The bug \ncan be demonstrated through using the sample 'Cookies' servlet supplied with \nTomcat. "}, {"count": 2, "tags": [], "bug_id": 15576, "attachment_id": null, "text": "I have got the same problem. In my opinion this has to do with the cookie \nversion. If you take a look inside the code at ServerCookie line 315, the\nexception is thrown, if the cookie has the version 0. But the interface\njavax.servlet.http.Cookie recomments to create a cookie of version 0 to ensure \nthe best interoperability.\nIt seems that the coyote connector doesn't support cookies of version 0 any \nmore?\n", "id": 32143, "time": "2003-02-28T09:06:00Z", "creator": "H.Brozio@online.de", "creation_time": "2003-02-28T09:06:00Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 15576, "is_private": false, "text": "I began seeing this bug after upgrading from tomcat 4.0.4 to 4.1.18...the error\ndefinitley occurs when you try to add a cookie that has version 0.  however, 0\nis the default value (at least as far as jdk1.3.1 goes...\nhttp://java.sun.com/j2ee/sdk_1.3/techdocs/api/javax/servlet/http/Cookie.html#getVersion()\n\nthe workaround i've been using is to explicitly set the version of my cookies to\n1.  not exactly sure what ramifications this will have. ", "id": 33348, "time": "2003-03-18T16:19:45Z", "creator": "ttomo@earthlink.net", "creation_time": "2003-03-18T16:19:45Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 15576, "attachment_id": null, "text": "*** Bug 18161 has been marked as a duplicate of this bug. ***", "id": 35552, "time": "2003-04-18T14:58:38Z", "creator": "funkman@joedog.org", "creation_time": "2003-04-18T14:58:38Z", "is_private": false}, {"count": 5, "tags": [], "text": "As of today, running Tomcat 4.0.27, it's still broken.  Using the \"cookie\nservlet\" test application in Tomcat, that it fails when either a comma or a\nsemicolon is put into either the cookie name or cookie value.\n\nAccording to the sun documentation for the servlet class found at\nhttp://java.sun.com/products/servlet/2.1/api/javax.servlet.http.Cookie.html\nthe characters comma, semicolon, and white space are not allowed in the name\nfield.  It also recommends that they not be used in the value field, but does\nnot actually prohibit their use. \n\nTesting also showed that the white space characters are allowed in the name\nfield, but will create problems when the cookie is later retrieved.\n\nPerhaps this should just be closed as \"that's how it works\"\n\nHarold", "attachment_id": null, "bug_id": 15576, "id": 44719, "time": "2003-09-25T20:42:12Z", "creator": "harold@uga.edu", "creation_time": "2003-09-25T20:42:12Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 15576, "is_private": false, "text": "Based on the last comment, I agree. There have been other comments/bugs  (in\nbugzilla) with respect to cookie processing but the opinion of the developers\nare that (the ones marked as INVALID) are not bugs, its just the way it works.", "id": 51947, "time": "2004-02-09T00:23:36Z", "creator": "funkman@joedog.org", "creation_time": "2004-02-09T00:23:36Z", "attachment_id": null}, {"count": 7, "attachment_id": null, "creator": "path@cisco.com", "is_private": false, "id": 58958, "time": "2004-06-09T19:52:05Z", "bug_id": 15576, "creation_time": "2004-06-09T19:52:05Z", "tags": [], "text": "By Experimentation, space are ok in the value (Tomcat 4.1.24). In my case \naccented letters cause the IllegalArgument problem described.\n\nSetting the cookie version to 1 has a behavior that is not documented (well I \nhave not found it in the javadoc) for the Cookie object. Values containing \naccented char (ascii 144 decimal) get extra double-quotes around the value.\n\nValue with space or straight up ascii 7 bit chars don't get those double-quotes.\n\nI guess the url encoding is the way to go with all this. "}, {"count": 8, "tags": [], "bug_id": 15576, "attachment_id": null, "text": "According to:\nhttp://jakarta.apache.org/tomcat/tomcat-4.0-\ndoc/servletapi/javax/servlet/http/Cookie.html\n\n\"The value can be anything the server chooses to send. Its value is probably of \ninterest only to the server. The cookie's value can be changed after creation \nwith the setValue method.\"\n\nand\n\nAccording to RFC 2109 found at, http://www.faqs.org/rfcs/rfc2109.html, section \n4.2.2 Set-Cookie Syntax:\n\"The syntax for the Set-Cookie response header is\n\n   set-cookie      =       \"Set-Cookie:\" cookies\n   cookies         =       1#cookie\n   cookie          =       NAME \"=\" VALUE *(\";\" cookie-av)\n   NAME            =       attr\n   VALUE           =       value\n   cookie-av       =       \"Comment\" \"=\" value\n                   |       \"Domain\" \"=\" value\n                   |       \"Max-Age\" \"=\" value\n                   |       \"Path\" \"=\" value\n                   |       \"Secure\"\n                   |       \"Version\" \"=\" 1*DIGIT\n.\n.\n.\n\nNAME=VALUE\n      Required.  The name of the state information (\"cookie\") is NAME,\n      and its value is VALUE.  NAMEs that begin with $ are reserved for\n      other uses and must not be used by applications.\n\n      The VALUE is opaque to the user agent and may be anything the\n      origin server chooses to send, possibly in a server-selected\n      printable ASCII encoding.  \"Opaque\" implies that the content is of\n      interest and relevance only to the origin server.  The content\n      may, in fact, be readable by anyone that examines the Set-Cookie\n      header.\"\n\nNo where in the description for the contents of the cookie value does it say \nthat commas and semicolons are not allowed ...\n", "id": 58959, "time": "2004-06-09T19:59:57Z", "creator": "opus@aracnet.com", "creation_time": "2004-06-09T19:59:57Z", "is_private": false}, {"count": 9, "attachment_id": null, "creator": "william.barker@wilshire.com", "is_private": false, "id": 58963, "time": "2004-06-09T20:27:59Z", "bug_id": 15576, "creation_time": "2004-06-09T20:27:59Z", "tags": [], "text": "Go back and read the RFC again.  The definition of the type 'value' explicitly \nexcludes (among other things) commas and semicolons."}, {"count": 10, "tags": [], "creator": "opus@aracnet.com", "attachment_id": null, "id": 59052, "time": "2004-06-10T19:26:53Z", "bug_id": 15576, "creation_time": "2004-06-10T19:26:53Z", "is_private": false, "text": "William, I went ahead and re-read the RFC. After doing some investigation, I \nnow agree and disagree with you.\n\nAccording to RFC 2109 found at, http://www.faqs.org/rfcs/rfc2109.html, section \n4.2.2 Set-Cookie Syntax:\n\nThe syntax for the Set-Cookie response header is\n\nset-cookie\t=       \"Set-Cookie:\" cookies\ncookies\t\t=       1#cookie\ncookie\t\t=       NAME \"=\" VALUE *(\";\" cookie-av)\nNAME\t\t=       attr\nVALUE\t\t=       value\ncookie-av\t=       \"Comment\" \"=\" value\n\t\t|       \"Domain\" \"=\" value\n\t\t|       \"Max-Age\" \"=\" value\n\t\t|       \"Path\" \"=\" value\n\t\t|       \"Secure\"\n\t\t|       \"Version\" \"=\" 1*DIGIT\n\nAccording to the general syntax in the same RFC:\n\nThe two state management headers, Set-Cookie and Cookie, have common syntactic \nproperties involving attribute-value pairs.  The following grammar uses the \nnotation, and tokens DIGIT (decimal digits) and token (informally, a sequence \nof non-special, non-white space characters) from the HTTP/1.1 specification \n[RFC 2068] to describe their syntax.\n\nav-pairs\t=       av-pair *(\";\" av-pair)\nav-pair\t\t=       attr [\"=\" value]        ; optional value\nattr\t\t=       token\nvalue\t\t=       word\nword\t\t=       token | quoted-string\n\nAttributes (names) (attr) are case-insensitive.  White space is permitted \nbetween tokens.  Note that while the above syntax description shows value as \noptional, most attrs require them.\n\nSo the value in the cookie can either be a token or a quoted-string. \nAccording to RFC found at http://www.faqs.org/rfcs/rfc2068.html tokens are \ndefined as:\n\n          Token\t\t= 1*<any CHAR except CTLs or tspecials>\n\n          tspecials\t= \"(\" | \")\" | \"<\" | \">\" | \"@\"\n\t\t\t| \",\" | \";\" | \":\" | \"\\\" | <\">\n                        | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n                        | \"{\" | \"}\" | SP | HT \u201d\n\n\nAccording to RFC found at http://www.faqs.org/rfcs/rfc2068.html quoted-strings \nare defined as:\n\nA string of text is parsed as a single word if it is quoted using double-quote \nmarks.\n\nquoted-string\t\t= ( <\"> *(qdtext) <\"> )\n\nqdtext\t\t\t= <any TEXT except <\">>\n\nAccording to RFC found at http://www.faqs.org/rfcs/rfc2068.html TEXT is defined \nas:\n\nThe TEXT rule is only used for descriptive field contents and values that are \nnot intended to be interpreted by the message parser. Words of *TEXT may \ncontain characters from character sets other than ISO 8859-1 [22] only when \nencoded according to the rules of RFC 1522 [14].\n\n\tTEXT\t= <any OCTET except CTLs, but including LWS>\n\nAccording to RFC found at http://www.faqs.org/rfcs/rfc2068.html CTLs, CRLF, CR, \nLF, SP, HT, and LWS are defined as:\n\n\tCTL\t= <any US-ASCII control character\n\t\t  (octets 0 - 31) and DEL (127)>\n\tCR\t= <US-ASCII CR, carriage return (13)>\n\tLF\t= <US-ASCII LF, linefeed (10)>\n\tSP\t= <US-ASCII SP, space (32)>\n\tHT\t= <US-ASCII HT, horizontal-tab (9)>\n\tCRLF\t= CR LF\n\tLWS\t= [CRLF] 1*( SP | HT )\n\n\nSince commas and semicolons are part of the ISO 8859-1 they are allowed in \nquoted-strings, hence they should be allowed to be in cookie values. \n\nPlease provide me your reasoning next time you inform me that I am wrong. \n\n\n"}, {"count": 11, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 59055, "time": "2004-06-10T20:36:11Z", "bug_id": 15576, "creation_time": "2004-06-10T20:36:11Z", "is_private": false, "text": "The fatal flaw of your reasoning is that by allowing (almost) anything in the\nvalue, you can create a cookie value which would create a malformed multiline\nheader. This invalidates the whole thing. An oversight of the specification,\nundoubtedly.\n\nIf you want some arcane and/or obscure issue fixed, please provide:\n1) a clean and well tested patch\n2) your rationale for why there's a bug\nOtherwise, I recommend not wasting your time, and please do not reopen this\nreport (esp since WONTFIX is the appropriate answer).\n"}]