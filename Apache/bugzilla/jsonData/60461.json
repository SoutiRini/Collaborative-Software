[{"count": 0, "tags": [], "creator": "l.penet@senat.fr", "attachment_id": 34512, "text": "Created attachment 34512\nJVM crash log\n\nI recently upgraded my development setup from Tomcat 8.5.6 to 8.5.8 and experiences a lot of SIGSEGV in Tomcat Native since then.\n\nIt always happens when calling SSLSocket.getInfos, but not on every call.\n\nMy HTTPS connector is configured this way :\n\n    <Connector port=\"8443\" SSLEnabled=\"true\"\n                protocol=\"org.apache.coyote.http11.Http11AprProtocol\"\n                maxThreads=\"150\" scheme=\"https\" secure=\"true\"\n                sslProtocol=\"TLS\"\n                sslImplementationName=\"org.apache.tomcat.util.net.openssl.OpenSSLImplementation\"\n\t\tSSLCertificateFile=\"${catalina.home}/conf/certificate.crt\"\n                SSLCertificateKeyFile=\"${catalina.home}/conf/privateKey.key\"\n\t\tserver=\"Apache-Coyote/1.1\"\n                URIEncoding=\"UTF-8\">\n      <UpgradeProtocol className=\"org.apache.coyote.http2.Http2Protocol\" />\n    </Connector>\n\nI use Google Chrome 55 as HTTP client.\n\nDebugging the project with Netbeans and attaching GDB to the java process, I get the following stacktrace when SEGV :\n\n__GI_raise (sig=6, sig@entry=6)\t\n__GI_abort ()\t\nos::abort(bool) ()\t\nVMError::report_and_die() ()\t\nJVM_handle_linux_signal ()\t\nsignalHandler(int, siginfo*, void*) ()\t\n<signal handler called> ()\t\nJava_org_apache_tomcat_jni_SSLSocket_getInfoS (e=0x7fc41861b1f8, o=0x7fc37a6f2b68, sock=140478657220768, what=2)\t\n\nSo, the violation occurs on the last line of :\n\nTCN_IMPLEMENT_CALL(jstring, SSLSocket, getInfoS)(TCN_STDARGS, jlong sock,\n                                                 jint what)\n{\n    tcn_socket_t   *a = J2P(sock, tcn_socket_t *);\n    tcn_ssl_conn_t *s;\n    jstring value = NULL;\n    apr_status_t rv = APR_SUCCESS;\n\n    UNREFERENCED(o);\n    TCN_ASSERT(sock != 0);\n\n    s = (tcn_ssl_conn_t *)(a->opaque);\n\nPlease find attached the JVM crash log.\n\nTo debug, I configure native with :\n\n    ./configure CC=${IDE_CC} CXX=${IDE_CXX} CFLAGS=\"-g3 -gdwarf-2\" CXXFLAGS=\"-g3 -gdwarf-2\" --with-java-home=/usr/lib/jvm/java-8-oracle --with-ssl=/home/lpenet/devoss/openssl-1.0.2j\n\nand configure openssl 1.0.2j with the following command line :\n\n    ./config no-shared -fPIC", "id": 195424, "time": "2016-12-09T13:00:55Z", "bug_id": 60461, "creation_time": "2016-12-09T13:00:55Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 60461, "attachment_id": null, "id": 195426, "time": "2016-12-09T13:12:21Z", "creator": "l.penet@senat.fr", "creation_time": "2016-12-09T13:12:21Z", "is_private": false, "text": "I did not explicitly mentionned it, but I use stock openssl sources and the native version included in tomcat 8.5.8 sources."}, {"count": 2, "tags": [], "bug_id": 60461, "attachment_id": null, "text": "Maybe, but when I see that, I think you should complain to other people as well:\nj  org.apache.catalina.connector.Request.getAttributeNames()Ljava/util/Enumeration;+17\nj  org.apache.myfaces.webapp.ManagedBeanDestroyerListener.requestDestroyed(Ljavax/servlet/ServletRequestEvent;)V+13\n\nIt's only cosmetic, bt why are you specifying sslImplementationName when you're using APR ? Do you expect it to use it JSSE by accident ? server=\"Apache-Coyote/1.1\" is the default already, so no need to", "id": 195427, "time": "2016-12-09T13:17:05Z", "creator": "remm@apache.org", "creation_time": "2016-12-09T13:17:05Z", "is_private": false}, {"count": 3, "tags": [], "creator": "l.penet@senat.fr", "attachment_id": null, "text": "Specifying sslImplementationName is just plain paranoia, and to make it clear for coworkers arriving on the project and not already knowing it is the default with APR.", "id": 195429, "time": "2016-12-09T13:37:00Z", "bug_id": 60461, "creation_time": "2016-12-09T13:37:00Z", "is_private": false}, {"count": 4, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "The MyFaces code doesn't seem to be doing anything unreasonable (like retaining references to previous requests).\n\nI've been unable to reproduce this. A minimal (i.e. the smallest possible) test case that reproduces this (at least some of the time, ideally all of the time) is going to be required to investigate this further.\n\nIt would also be worth testing with 8.5.9.", "id": 195455, "time": "2016-12-12T11:59:30Z", "bug_id": 60461, "creation_time": "2016-12-12T11:59:30Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 60461, "text": "Thank you for your quick reply.\n\nI acknowledge your request and will do my best to prepare this.\n\nHowever, I have to finish urgent work before a long christmas break and I might not do this before the second half of January.\n\nFor the time being, I stick to 8.5.6 as I saw no security patch of interest to me but will test with the latest version (8.5.9 or later) then.", "id": 195456, "time": "2016-12-12T12:14:49Z", "creator": "l.penet@senat.fr", "creation_time": "2016-12-12T12:14:49Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 60461, "attachment_id": null, "id": 195464, "time": "2016-12-12T15:35:27Z", "creator": "chris@christopherschultz.net", "creation_time": "2016-12-12T15:35:27Z", "is_private": false, "text": "I would be interested to know if Tomcat 8.5.8 with the libtcnative from 8.5.6 still exhibits the same problem. Is that something you can test easily?"}, {"count": 7, "tags": [], "creator": "l.penet@senat.fr", "text": "Yes, in fact, I already tried it.\n\nAnd yes, it has the same behaviour.", "id": 195465, "time": "2016-12-12T15:37:34Z", "bug_id": 60461, "creation_time": "2016-12-12T15:37:34Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "l.penet@senat.fr", "attachment_id": null, "is_private": false, "id": 195919, "time": "2017-01-09T17:31:03Z", "bug_id": 60461, "creation_time": "2017-01-09T17:31:03Z", "text": "Hi.\n\nI tested with Tomcat 8.5.10 (built from sources as the release is still in progress), and it works fine.\n\nSo, I think we can close this issue."}, {"count": 9, "tags": [], "bug_id": 60461, "text": "Created attachment 34790\n8.5.11 Windows Crash Log\n\nThis crash still exists in 8.5.11 on Windows. I've uploaded my log.", "id": 197370, "time": "2017-03-01T23:05:22Z", "creator": "mattcoz@cacorp.com", "creation_time": "2017-03-01T23:05:22Z", "is_private": false, "attachment_id": 34790}, {"count": 10, "tags": [], "text": "Reopening, following mattcoz comment.", "is_private": false, "id": 197373, "creator": "l.penet@senat.fr", "time": "2017-03-02T08:23:39Z", "bug_id": 60461, "creation_time": "2017-03-02T08:23:39Z", "attachment_id": null}, {"count": 11, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 197405, "creation_time": "2017-03-02T21:10:53Z", "time": "2017-03-02T21:10:53Z", "bug_id": 60461, "text": "Steps to reproduce please on a clean install of the latest release of any of the supported Tomcat versions (7.0.x, 8.0.x, 8.5.x, 9.0.x) and the latest Tomcat Native release (1.2.x).", "is_private": false}, {"count": 12, "tags": [], "text": "Unfortunately I have no idea what is causing it and I don't know how to reproduce it. I installed a fresh copy of 8.5.11 with tcnative 1.2.10 and then copied in my configuration files. It crashed only once since I installed it on the 27th. It had crashed 6 times in 8.5.6 since late November, but 3 of those were in the last week and I'm not sure what could have changed. I did install a new SSL certificate, but it seems to be working fine most of the time. I really wish I could be of more help.", "is_private": false, "id": 197406, "creator": "mattcoz@cacorp.com", "time": "2017-03-02T21:42:46Z", "bug_id": 60461, "creation_time": "2017-03-02T21:42:46Z", "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 60461, "attachment_id": null, "text": "Well it was going well for a while, then it crashed again last night. I'm at a loss here, what can I do to help figure this out?", "id": 198438, "time": "2017-04-21T03:53:20Z", "creator": "mattcoz@cacorp.com", "creation_time": "2017-04-21T03:53:20Z", "is_private": false}, {"count": 14, "tags": [], "bug_id": 60461, "attachment_id": null, "id": 198456, "time": "2017-04-21T16:22:06Z", "creator": "markt@apache.org", "creation_time": "2017-04-21T16:22:06Z", "is_private": false, "text": "Steps to reproduce still required."}, {"count": 15, "tags": [], "bug_id": 60461, "attachment_id": null, "id": 198458, "time": "2017-04-21T16:32:06Z", "creator": "mattcoz@cacorp.com", "creation_time": "2017-04-21T16:32:06Z", "is_private": false, "text": "I'm sorry, I have no steps, I don't know how to reproduce it. Is there any other information I can give you? Is there anything I should do to try to figure out how to reproduce it?"}, {"count": 16, "tags": [], "creator": "mattcoz@cacorp.com", "attachment_id": null, "text": "Looking at his log and my logs, the commonality is that it starts with a call to getAttributeNames on the request. Not sure if that helps at all, that's a call that works all the time without crashing. I have multiple sites running on the server and the crashes are not limited to just one of them. None of them are doing anything out of the ordinary, and nothing in any of my logs looks suspicious. I would LOVE to give you the info you need, but I just don't know what that could be. I need some guidance more than just NEEDINFO.", "id": 198466, "time": "2017-04-21T21:28:15Z", "bug_id": 60461, "creation_time": "2017-04-21T21:28:15Z", "is_private": false}, {"count": 17, "tags": [], "creator": "mattcoz@cacorp.com", "attachment_id": null, "is_private": false, "id": 198763, "time": "2017-05-11T17:15:17Z", "bug_id": 60461, "creation_time": "2017-05-11T17:15:17Z", "text": "Another crash last night, please let me know what I can do to help."}, {"count": 18, "tags": [], "bug_id": 60461, "attachment_id": null, "id": 198861, "time": "2017-05-23T17:37:28Z", "creator": "mattcoz@cacorp.com", "creation_time": "2017-05-23T17:37:28Z", "is_private": false, "text": "Just crashed again, is there anything I can look for to help? Please?"}, {"count": 19, "tags": [], "bug_id": 60461, "attachment_id": 35004, "text": "Created attachment 35004\nAnother crash log", "id": 198862, "time": "2017-05-23T17:38:45Z", "creator": "mattcoz@cacorp.com", "creation_time": "2017-05-23T17:38:45Z", "is_private": false}, {"count": 20, "tags": [], "bug_id": 60461, "attachment_id": null, "text": "Are you really going to update this BZ every two weeks whenever you experience a JVM crash ? Surely you realize posting the same thing ten times isn't going to help, right ?\n\nI'd recommend trying NIO(1 or 2) with OpenSSL at this point, since this isn't going to be fixed for a while, most likely.", "id": 198864, "time": "2017-05-23T21:15:06Z", "creator": "remm@apache.org", "creation_time": "2017-05-23T21:15:06Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 60461, "text": "(In reply to Remy Maucherat from comment #20)\n> Are you really going to update this BZ every two weeks whenever you\n> experience a JVM crash ? Surely you realize posting the same thing ten times\n> isn't going to help, right ?\n> \n> I'd recommend trying NIO(1 or 2) with OpenSSL at this point, since this\n> isn't going to be fixed for a while, most likely.\n\nI know it's not helping, but nobody is telling me what I can do to help. I was under the impression that NIO used the JSSE implementation, which is one of the reasons I was hesitant to make the switch. It looks like this is no longer the case though, so I'll give it a shot. Thanks, but hopefully somebody can eventually fix this.", "id": 198865, "time": "2017-05-23T22:09:46Z", "creator": "mattcoz@cacorp.com", "creation_time": "2017-05-23T22:09:46Z", "is_private": false, "attachment_id": null}, {"count": 22, "tags": [], "bug_id": 60461, "text": "*** Bug 61149 has been marked as a duplicate of this bug. ***", "id": 199035, "time": "2017-06-02T17:45:59Z", "creator": "remm@apache.org", "creation_time": "2017-06-02T17:45:59Z", "is_private": false, "attachment_id": null}, {"count": 23, "tags": [], "bug_id": 60461, "text": "Some initial investigation based upon the initial bug report + crash dump.\n\n1. The call from Java is AprSSLSupport.getCipherSuite\n2. AprSSLSupport.getCipherSuite calls SSLSocket.getInfoS [native]\n... with arg values [socketRef, a pointer to a tcn_socket_t, Java-long]\n                and [SSL.SSL_INFO_CIPHER, value=0x02 Java-int]\n3. The native call, for SSL_INFO_CIPHER should execute the following code (compiled without DEBUG):\n\nTCN_IMPLEMENT_CALL(jstring, SSLSocket, getInfoS)(JNIEnv *e, jobject o,\n                                                 jlong sock, jint what)\n{\n    tcn_socket_t   *a = J2P(sock, tcn_socket_t *);\n    tcn_ssl_conn_t *s;\n    jstring value = NULL;\n    apr_status_t rv = APR_SUCCESS;\n\n    (o)=(o); // Don't complain that we aren't referencing a function arg\n\n    s = (tcn_ssl_conn_t *)(a->opaque);\n\n    if(what == SSL_INFO_CIPHER) // this is actually a switch case\n        value = tcn_new_string(e, SSL_get_cipher_name(s->ssl));\n\n    if (rv != APR_SUCCESS) // Doesn't happen\n        tcn_ThrowAPRException(e, rv);\n\n    return value;\n}\n\nThere really aren't many opportunities for a crash, here:\n\n1. Without DEBUG enabled, the value of \"sock\" isn't tested to be non-NULL after the (o)=(o) line, so theoretically the local 'a' could be NULL\n2. The value of 's' is never checked against NULL, and could segfault when dereferencing s->ssl\n\nThe dump says the fault is in *this* function, and e.g. not a function called by it.\nSSL_get_cipher_name returns NULL if there isn't any SSL session.[1]\nThe tcn_new_string function returns NULL if the argument is NULL, so it's safe to call without checking the return value of SSL_get_cipher_name.\n\nIn the Windows dump, the referenced address is spelled-out: \"reading address 0x0000000000000130\". That's not \"NULL\".\nIn the Linux dump, the referenced address is not directly shown.\n\nThe Linux dump tells us where in the function we are:\n    Java_org_apache_tomcat_jni_SSLSocket_getInfoS+0x19\n\nThat's 25 bytes into the function, which is \"not very far\". I'm not entirely sure if the instructions for setting-up the stack for local variables are included in that 0x19, but if they are, then it's possible that we are talking about the very beginning of the function, here.\n\nHere's the gdb disassembly of the beginning of the function:\n\n(gdb) disassemble Java_org_apache_tomcat_jni_SSLSocket_getInfoS\nDump of assembler code for function Java_org_apache_tomcat_jni_SSLSocket_getInfoS:\n   0x00000000000200f0 <+0>:\tmov    QWORD PTR [rsp-0x30],rbx\n   0x00000000000200f5 <+5>:\tmov    QWORD PTR [rsp-0x20],r12\n   0x00000000000200fa <+10>:\tmov    ebx,ecx\n   0x00000000000200fc <+12>:\tmov    QWORD PTR [rsp-0x18],r13\n   0x0000000000020101 <+17>:\tmov    QWORD PTR [rsp-0x28],rbp\n   0x0000000000020106 <+22>:\tmov    r12,rdi\n   0x0000000000020109 <+25>:\tmov    QWORD PTR [rsp-0x10],r14    <---- crash here?!\n   0x000000000002010e <+30>:\tmov    QWORD PTR [rsp-0x8],r15\n\nAt this point, no accesses have taken place other than things on the stack. Basically, we haven't actually done anything, yet.\n\nIf these really are two reports of the same bug, then the Windows report tells us we are trying to read from a bad location. Everything up through getInfoS+0x19 reads from registers, which should never cause a SIGSEGV.\n\n:(\n\nI'm trying to make some sense of the stacks in these dumps but ... they aren't making any sense to me... things like stack frames that are thousands of bytes large, missing data (0x2 has to be in there somewhere!) but I'll have to save that for another day.\n\n[1] https://www.openssl.org/docs/man1.1.0/ssl/SSL_get_cipher_name.html", "id": 199040, "time": "2017-06-02T22:38:16Z", "creator": "chris@christopherschultz.net", "creation_time": "2017-06-02T22:38:16Z", "is_private": false, "attachment_id": null}, {"count": 24, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "is_private": false, "id": 199041, "time": "2017-06-02T22:39:30Z", "bug_id": 60461, "creation_time": "2017-06-02T22:39:30Z", "text": "Are any of the reporters of this bug able to compile their own custom tcnative library if I provide a small instrumentation patch?"}, {"count": 25, "tags": [], "bug_id": 60461, "attachment_id": null, "text": "I can try to compile my own version of the tcnative library.", "id": 199042, "time": "2017-06-03T07:32:29Z", "creator": "t.reisinger@sisworld.com", "creation_time": "2017-06-03T07:32:29Z", "is_private": false}, {"count": 26, "tags": [], "text": "I can. For GNU/Linux.", "attachment_id": null, "bug_id": 60461, "id": 199070, "time": "2017-06-06T09:19:58Z", "creator": "l.penet@senat.fr", "creation_time": "2017-06-06T09:19:58Z", "is_private": false}, {"count": 27, "tags": [], "creator": "mattcoz@cacorp.com", "attachment_id": null, "is_private": false, "id": 199083, "time": "2017-06-06T17:34:09Z", "bug_id": 60461, "creation_time": "2017-06-06T17:34:09Z", "text": "(In reply to Remy Maucherat from comment #20)\n> Are you really going to update this BZ every two weeks whenever you\n> experience a JVM crash ? Surely you realize posting the same thing ten times\n> isn't going to help, right ?\n> \n> I'd recommend trying NIO(1 or 2) with OpenSSL at this point, since this\n> isn't going to be fixed for a while, most likely.\n\nOk, so my server is now running NIO with OpenSSL and I got another crash. It seems to be related to this as it has a common origin.\n\nj  org.apache.tomcat.jni.SSL.getCipherForSSL(J)Ljava/lang/String;+0\nj  org.apache.tomcat.util.net.openssl.OpenSSLEngine$OpenSSLSession.getCipherSuite()Ljava/lang/String;+30\nj  org.apache.tomcat.util.net.jsse.JSSESupport.getCipherSuite()Ljava/lang/String;+13\nj  org.apache.coyote.AbstractProcessor.populateSslRequestAttributes()V+11\n\nvs\n\nJ 63194  org.apache.tomcat.jni.SSLSocket.getInfoS(JI)Ljava/lang/String; (0 bytes) @ 0x00000000016e3a04 [0x00000000016e39c0+0x44]\nj  org.apache.tomcat.util.net.AprSSLSupport.getCipherSuite()Ljava/lang/String;+24\nj  org.apache.coyote.AbstractProcessor.populateSslRequestAttributes()V+11\n\nSo it appears that the problem extends beyond tcnative."}, {"count": 28, "tags": [], "text": "This *is* tcnative.\n\nIt extends beyond the scope of the APR connector. Can you reproduce this in a testing environment? I have a small patch for sslinfo.c:\n\nAt line 293, add this:\n\n    s = (tcn_ssl_conn_t *)(a->opaque);    // <--- this is existing line 292\n    assert(NULL != sock);\n    assert(NULL != a);\n    assert(NULL != s);\n    assert(NULL != s->ssl);\n\nRe-build and let me know if it aborts on any of those lines.", "attachment_id": null, "bug_id": 60461, "id": 199084, "time": "2017-06-06T18:18:33Z", "creator": "chris@christopherschultz.net", "creation_time": "2017-06-06T18:18:33Z", "is_private": false}, {"count": 29, "tags": [], "bug_id": 60461, "attachment_id": null, "id": 199085, "time": "2017-06-06T18:28:07Z", "creator": "chris@christopherschultz.net", "creation_time": "2017-06-06T18:28:07Z", "is_private": false, "text": "Ludovic, why are you building OpenSSL in \"no-shared\" mode? If you are building OpenSSL in no-shared mode, how is OpenSSL 1.0.2j being loaded into the JVM process? Are you statically-linking OpenSSL into libtcnative?"}, {"count": 30, "tags": [], "text": "Christopher : yes, I  statically link the openssl lib to avoid depending on the versions installed on the host system, as I update them much quicker.", "attachment_id": null, "bug_id": 60461, "id": 199096, "time": "2017-06-07T09:05:32Z", "creator": "l.penet@senat.fr", "creation_time": "2017-06-07T09:05:32Z", "is_private": false}, {"count": 31, "tags": [], "bug_id": 60461, "attachment_id": null, "text": "Maybe I did something really stupid, but I get : \n\njsvc.exec: symbol lookup error: /usr/share/java/tomcat-base_senateurs-commun/libtcnative-1.so.0.2.12: undefined symbol: assert", "id": 199119, "time": "2017-06-09T11:06:07Z", "creator": "l.penet@senat.fr", "creation_time": "2017-06-09T11:06:07Z", "is_private": false}, {"count": 32, "tags": [], "creator": "remm@apache.org", "attachment_id": 35051, "is_private": false, "id": 199183, "time": "2017-06-13T19:33:26Z", "bug_id": 60461, "creation_time": "2017-06-13T19:33:26Z", "text": "Created attachment 35051\nTest patch for OpenSSL engine\n\nAs the OpenSSL engine is affected, I guess it's inevitable some SSL session accesses are asynchronous. As a result, sync/cache has to be added. As I am not reproducing it, this is only an experiment patch that can be used for further testing.\nThe APR connector would need something similar as well.\n\nThe performance impact should be quite minimal."}, {"count": 33, "tags": [], "creator": "remm@apache.org", "text": "Created attachment 35056\nPatch for OpenSSLEngine", "id": 199194, "time": "2017-06-14T11:54:47Z", "bug_id": 60461, "creation_time": "2017-06-14T11:54:47Z", "is_private": false, "attachment_id": 35056}, {"count": 34, "tags": [], "bug_id": 60461, "attachment_id": null, "id": 199277, "time": "2017-06-19T14:44:51Z", "creator": "remm@apache.org", "creation_time": "2017-06-19T14:44:51Z", "is_private": false, "text": "I improved the patch (hopefully) and committed it, it will be in 9M22 and 8.5.16. I haven't looked at the APR connector issue."}, {"count": 35, "tags": [], "bug_id": 60461, "attachment_id": null, "text": "For the APR connector issue, since I believe it is always possible and legitimate to have a concurrent socket close especially with HTTP/2, the accesses from AprSSLSupport would need to sync on AprEndpoint.AprSocketWrapper.closedLock. At the moment, all methods check that socketWrapper.getSocket().longValue() is not 0, but that won't work if concurrency is possible.", "id": 199284, "time": "2017-06-19T20:48:00Z", "creator": "remm@apache.org", "creation_time": "2017-06-19T20:48:00Z", "is_private": false}, {"count": 36, "tags": [], "creator": "remm@apache.org", "attachment_id": 35069, "is_private": false, "id": 199339, "time": "2017-06-22T19:24:00Z", "bug_id": 60461, "creation_time": "2017-06-22T19:24:00Z", "text": "Created attachment 35069\nAPR SSL support sync\n\nFor APR, here is what the patch would look like. Please test it if you can."}, {"count": 37, "tags": [], "bug_id": 60461, "attachment_id": null, "text": "I think this should be fixed by syncing for now. The changes are now included for APR and OpenSSL in 9M23 and 8.5.17.", "id": 199373, "time": "2017-06-23T21:37:41Z", "creator": "remm@apache.org", "creation_time": "2017-06-23T21:37:41Z", "is_private": false}, {"count": 38, "tags": [], "text": "I'm updated to 8.5.16 using NIO, I'll be sure to let you know if the crashes continue. Thanks.", "is_private": false, "id": 199508, "creator": "mattcoz@cacorp.com", "time": "2017-06-30T14:54:27Z", "bug_id": 60461, "creation_time": "2017-06-30T14:54:27Z", "attachment_id": null}]