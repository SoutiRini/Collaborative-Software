[{"count": 0, "tags": [], "bug_id": 30809, "attachment_id": null, "id": 62348, "time": "2004-08-23T18:00:04Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-08-23T18:00:04Z", "is_private": false, "text": "Attribute [org.apache.slide.webdav.method.principal] is not serializable\njava.lang.IllegalArgumentException: Attribute [org.apache.slide.webdav.method.principal] is not \nserializable\n        at org.apache.catalina.cluster.session.DeltaSession.setAttribute(DeltaSession.java:1262)\n        at org.apache.catalina.cluster.session.DeltaSession.setAttribute(DeltaSession.java:1246)\n        at org.apache.catalina.cluster.session.DeltaSessionFacade.setAttribute(DeltaSessionFacade.java:\n130)\n        at org.apache.slide.webdav.util.WebdavUtils.getSlideToken(WebdavUtils.java:336)\n        at org.apache.slide.webdav.WebdavServlet.isCollection(WebdavServlet.java:189)\n        at org.apache.slide.webdav.WebdavServlet.service(WebdavServlet.java:152)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n\n\n... Could someone test webdav servlet in distributable mode to ensure that the requisite bits are \nserializable?"}, {"count": 1, "text": "Prevents deploy across multiple servers; changing to critical so it gets noticed.", "bug_id": 30809, "is_private": false, "id": 62854, "time": "2004-08-31T15:24:57Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-08-31T15:24:57Z", "tags": [], "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 30809, "is_private": false, "id": 62855, "creation_time": "2004-08-31T15:36:42Z", "time": "2004-08-31T15:36:42Z", "creator": "unico@hippo.nl", "text": "I've made both JAAS realm and SlideRealm principals implement Serializable.\nCould you check whether your distributed scenario now works?", "attachment_id": null}, {"count": 3, "text": "Ok, now I'm really not sure what's going on.\n\nStill getting it... and wanted to see what the class it's complaining about is.  So:\n\ncvs server: Diffing src/webdav/server/org/apache/slide/webdav/util\nIndex: src/webdav/server/org/apache/slide/webdav/util/WebdavUtils.java\n===============================================================\n====\nRCS file: /home/cvspublic/jakarta-slide/src/webdav/server/org/apache/slide/webdav/util/\nWebdavUtils.java,v\nretrieving revision 1.24\ndiff -r1.24 WebdavUtils.java\n336c336,342\n<             session.setAttribute(PRINCIPAL_ATTRIBUTE, principal);\n---\n>             try {\n>                 session.setAttribute(PRINCIPAL_ATTRIBUTE, principal);\n>           } catch (IllegalArgumentException e) {\n>                 IllegalArgumentException ex = new IllegalArgumentException(\"Attribute of class name \n\"+principal.getClass().getName()+\" cannot be serialized.\");\n>               ex.initCause(e);\n>               throw ex;\n>             }\n\n\nto wrap the serialization problem in another IllegalArgumentException, this time with the offending \nclass name.\n\nhttp-8080-Processor4, 31-Aug-2004 21:20:53, 18306, GET, 500 \"Internal Server Error\", 5 ms, /\n31 Aug 2004 21:20:54 - org.apache.slide.webdav.WebdavServlet - ERROR - \njava.lang.IllegalArgumentException: Attribute of class name org\n.apache.catalina.realm.GenericPrincipal cannot be serialized.\njava.lang.IllegalArgumentException: Attribute of class name org.apache.catalina.realm.GenericPrincipal \ncannot be serialized.\n        at org.apache.slide.webdav.util.WebdavUtils.getSlideToken(WebdavUtils.java:339)\n        at org.apache.slide.webdav.WebdavServlet.isCollection(WebdavServlet.java:189)\n        at org.apache.slide.webdav.WebdavServlet.service(WebdavServlet.java:152)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)\n        at org.apache.slide.webdav.filter.LogFilter.doFilter(LogFilter.java:141)\n\n\n... How on earth are we ending up with GenericPrincipal?????  Tomcat thing, I'm guessing - but that \nprincipal isn't storeable as-is back into the session, it needs to be saved in something serializable.\n", "bug_id": 30809, "is_private": false, "id": 62865, "time": "2004-08-31T20:53:57Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-08-31T20:53:57Z", "tags": [], "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 30809, "text": "Testing instructions:\n\nStick this into your <Host> in server.xml, directly after opening the host tag, for the host you wish to \ntest the cluster on.\n\n      <Cluster className=\"org.apache.catalina.cluster.tcp.SimpleTcpCluster\"\n                 managerClassName=\"org.apache.catalina.cluster.session.DeltaManager\"\n                 expireSessionsOnShutdown=\"false\"\n                 useDirtyFlag=\"false\">\n            <Membership\n                className=\"org.apache.catalina.cluster.mcast.McastService\"\n                mcastAddr=\"228.0.0.4\"\n                mcastPort=\"45564\"\n                mcastFrequency=\"500\"\n                mcastDropTime=\"3000\"/>\n            <Receiver\n                className=\"org.apache.catalina.cluster.tcp.ReplicationListener\"\n                tcpListenAddress=\"auto\"\n                tcpListenPort=\"4001\"\n                tcpSelectorTimeout=\"100\"\n                tcpThreadCount=\"6\"/>\n            <Sender\n                className=\"org.apache.catalina.cluster.tcp.ReplicationTransmitter\"\n                replicationMode=\"asynchronous\"/>\n            <Valve className=\"org.apache.catalina.cluster.tcp.ReplicationValve\" filter=\"\"/>\n        </Cluster>\n", "id": 62866, "time": "2004-08-31T20:55:22Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-08-31T20:55:22Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 30809, "is_private": false, "id": 62871, "creation_time": "2004-08-31T22:48:06Z", "time": "2004-08-31T22:48:06Z", "creator": "gblock@ctoforaday.com", "text": "An example fix:\n\nIndex: src/webdav/server/org/apache/slide/webdav/util/WebdavUtils.java\n===============================================================\n====\nRCS file: /home/cvspublic/jakarta-slide/src/webdav/server/org/apache/slide/webdav/util/\nWebdavUtils.java,v\nretrieving revision 1.24\ndiff -r1.24 WebdavUtils.java\n26a27\n> import java.io.Serializable;\n315c316,329\n<     \n---\n>    \n>     private static class SlidePrincipal implements Principal, Serializable {\n>       private String name;\n> \n>       public SlidePrincipal(String name) { this.name = name; }\n>       public String getName() { return this.name; }\n>       public String toString() { return this.name; }\n>       public int hashCode() { return (this.name!=null) ? this.name.hashCode() : 0; } \n>       public boolean equals(Object another) {\n>               if (!(another instanceof SlidePrincipal)) return false;\n>               else return (another.hashCode()==this.hashCode());\n>       }\n>     }\n>  \n336c350,356\n<             session.setAttribute(PRINCIPAL_ATTRIBUTE, principal);\n---\n>             try {\n>                 session.setAttribute(PRINCIPAL_ATTRIBUTE, new SlidePrincipal(principal.getName()));\n>           } catch (IllegalArgumentException e) {\n>                 IllegalArgumentException ex = new IllegalArgumentException(\"Attribute of class name \n\"+principal.getClass().getName()+\" cannot be serialized.\");\n>               ex.initCause(e);\n>               throw ex;\n>             }\n", "attachment_id": null}, {"count": 6, "text": "OK, thanks for tracing this bug. I've taken a slightly different approach than\nyou propose because I wanted to avoid a dependency from webdavservlet ->\ncatalina wrapper. Please check if this works for you and then close or else\nreopen this bug.", "bug_id": 30809, "is_private": false, "id": 62892, "time": "2004-09-01T10:47:32Z", "creator": "unico@hippo.nl", "creation_time": "2004-09-01T10:47:32Z", "tags": [], "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 30809, "text": "Just saw the cvs update; testing now.", "id": 62893, "time": "2004-09-01T10:51:05Z", "creator": "gblock@ctoforaday.com", "creation_time": "2004-09-01T10:51:05Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "gblock@ctoforaday.com", "attachment_id": null, "id": 62894, "time": "2004-09-01T10:52:09Z", "bug_id": 30809, "creation_time": "2004-09-01T10:52:09Z", "is_private": false, "text": "Closing; thanks for the mighty quick change, it's much appreciated.  I'm shipping this for testing today.  \n:)"}]