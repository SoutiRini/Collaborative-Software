[{"count": 0, "tags": [], "text": "Created attachment 32858\nAttached is the generated results\n\nRun below code can generate xlsx with SXSSF and XSSF for comparison.\nThe one generated by XSSF is expected, the one generated by SXSSF won't group rows correctly.\n\n{code}\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\nimport org.apache.poi.ss.usermodel.Sheet;\nimport org.apache.poi.ss.usermodel.Workbook;\nimport org.apache.poi.xssf.streaming.SXSSFWorkbook;\nimport org.apache.poi.xssf.usermodel.XSSFWorkbook;\n\n\npublic class TestSXSSF {\n\n\tpublic static void main(String args[]) throws FileNotFoundException, IOException{\n\t\tFile outputFile = new File(\"E:/testFile-actual.xlsx\");\n\t\tSXSSFWorkbook sworkbook = new SXSSFWorkbook();\n\t\tcreatXLSX(outputFile, sworkbook);\n\t\t\n\t\tFile expectedoutputFile = new File(\"E:/testFile-expected.xlsx\");\n\t\tXSSFWorkbook workbook = new XSSFWorkbook();\n\t\tcreatXLSX(expectedoutputFile, workbook);\n\t}\n\n\tprivate static void creatXLSX(File outputFile, Workbook workbook)\n\t\t\tthrows IOException, FileNotFoundException {\n\t\tSheet sheet = workbook.createSheet();\n\t\tfor(int i = 0; i < 200; i++)\n\t\t\tsheet.createRow(i);\n\t\tfor(int i = 1; i < 200; i++){\n\t\t\tsheet.groupRow(i, i+10);\n\t\t\ti = i+11;\n\t\t}\n\t\tworkbook.write(new FileOutputStream(outputFile));\n\t\tworkbook.close();\n\t}\n}\n\n{code}", "is_private": false, "id": 183760, "creator": "xiaozhulolo@126.com", "time": "2015-06-26T08:53:42Z", "bug_id": 58077, "creation_time": "2015-06-26T08:53:42Z", "attachment_id": 32858}, {"count": 1, "tags": [], "bug_id": 58077, "is_private": false, "text": "As the Javadoc states \"\n\n     *     Please note the rows being grouped <em>must</em> be in the current window,\n     *     if the rows are already flushed then groupRow has no effect.\n\nThe default window size is 100, please try with a larger one when you construct the XSSFWorkbook and report here if it works then.", "id": 183762, "time": "2015-06-26T11:50:47Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-06-26T11:50:47Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 58077, "text": "No response for some time, so I assume it was fixed by my previous comment, please reopen this bug if there is still a problem with grouping.", "id": 183945, "time": "2015-07-07T20:17:26Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2015-07-07T20:17:26Z", "is_private": false, "attachment_id": null}, {"count": 3, "attachment_id": null, "bug_id": 58077, "is_private": false, "id": 197304, "time": "2017-02-27T17:59:33Z", "creator": "albertofanjul@gmail.com", "creation_time": "2017-02-27T17:59:33Z", "tags": [], "text": "If the window size has bigger size than expected write files, where is the benefit in use SXSSFWorkbook?\n\nThe usage of SXSSFWorkbook is that you don't know how many files you will get, and you want to flush its contents to disk.\n\nBut if you need to group rows, if you reach a module of window_size and you didn't create a group row it will be write withtout grouping, and you have no access to that rows again.\n\nSay you want to group rows 25 to 455 with a window size of 200 you will get first 200 files ungrouped\n\nI tried to define a group every window size and almost work, but this add too ramdomly a group on window_size +1 to window_size + 2\n\nI try to define group from begin to window_size module everytime and almost too but some inner groups appear from time to time.\n\nI guess best shot is to left this uninmplemented same as setRowGroupCollased() which through an UnImplementException\n\nHere is some test code I made:\n\n\tpublic static final int ROWS=1000;\n\tpublic static final int WINDOW_SIZE=100;\n\t//public static final int WINDOW_SIZE=1000;\n\n\tpublic static void main(String args[]) throws FileNotFoundException, IOException{\n\t\tFile outputFile = new File(\"testFile-actual.xlsx\");\n\t\tSXSSFWorkbook sworkbook = new SXSSFWorkbook(WINDOW_SIZE);\n\t\tcreatXLSX(outputFile, sworkbook);\n\n\t\tFile expectedoutputFile = new File(\"testFile-expected.xlsx\");\n\t\tXSSFWorkbook workbook = new XSSFWorkbook();\n\t\tcreatXLSX(expectedoutputFile, workbook);\n\t}\n\n\tprivate static void creatXLSX(File outputFile, Workbook workbook)\n\t\tthrows IOException, FileNotFoundException {\n\t\tSheet sheet = workbook.createSheet();\n\t\tint posFirstRow = 1;\n\t\tboolean addgroup = true;\n\t\tfor(int i = 0; i < ROWS; i++) {\n\t\t\tRow row = sheet.createRow(i);\n\t\t\tCell cell = row.createCell(0);\n\t\t\tcell.setCellValue(i);\n\t\t\tif (addgroup && i % WINDOW_SIZE == 0) {\n\t\t\t\tcreateGroup(sheet, posFirstRow, i);\n\t\t\t\t//posFirstRow = i;\n\t\t\t}\n\t\t\tif (i == 556) {\n\t\t\t\tcreateGroup(sheet, posFirstRow, 553);\n\t\t\t\t//posFirstRow = 556;\n\t\t\t\taddgroup = false;\n\t\t\t}\n\t\t}\n\t\tworkbook.write(new FileOutputStream(outputFile));\n\t}\n\n\tprivate static void createGroup(Sheet sheet, int posFirstRow, int i) {\n\t\tsheet.groupRow(posFirstRow, i);\n\t}"}, {"count": 4, "tags": [], "bug_id": 58077, "is_private": false, "text": "Here says it clearly\n\nhttps://poi.apache.org/apidocs/org/apache/poi/xssf/streaming/SXSSFSheet.html#groupRow(int,%20int)", "id": 197305, "time": "2017-02-27T18:03:29Z", "creator": "albertofanjul@gmail.com", "creation_time": "2017-02-27T18:03:29Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 58077, "attachment_id": null, "is_private": false, "id": 197306, "time": "2017-02-27T18:13:31Z", "creator": "albertofanjul@gmail.com", "creation_time": "2017-02-27T18:13:31Z", "text": "\tpublic static final int ROWS=1000;\n\tpublic static final int WINDOW_SIZE=100;\n\t//public static final int WINDOW_SIZE=1000;\n\n\tpublic static void main(String args[]) throws FileNotFoundException, IOException{\n\t\tFile outputFile = new File(\"testFile-actual.xlsx\");\n\t\tSXSSFWorkbook sworkbook = new SXSSFWorkbook(WINDOW_SIZE);\n\t\tcreatXLSX(outputFile, sworkbook);\n\n\t\tFile expectedoutputFile = new File(\"testFile-expected.xlsx\");\n\t\tXSSFWorkbook workbook = new XSSFWorkbook();\n\t\tcreatXLSX(expectedoutputFile, workbook);\n\t}\n\n\tprivate static void creatXLSX(File outputFile, Workbook workbook)\n\t\tthrows IOException, FileNotFoundException {\n\t\tSheet sheet = workbook.createSheet();\n\t\tint posFirstRow = 1;\n\t\tboolean addgroup = true;\n\t\tfor(int i = 0; i < ROWS; i++) {\n\t\t\tRow row = sheet.createRow(i);\n\t\t\tCell cell = row.createCell(0);\n\t\t\tcell.setCellValue(i);\n\t\t\tif (addgroup && i % WINDOW_SIZE == 0) {\n\t\t\t\tsheet.groupRow(posFirstRow, i);\n\t\t\t\tposFirstRow = i+1;\n\t\t\t}\n\t\t\tif (i == 556) {\n\t\t\t\tsheet.groupRow(posFirstRow, 553);\n\t\t\t\tposFirstRow = 556;\n\t\t\t\taddgroup = false;\n\t\t\t}\n\t\t}\n\t\tworkbook.write(new FileOutputStream(outputFile));\n\t}"}, {"count": 6, "attachment_id": null, "bug_id": 58077, "is_private": false, "id": 197307, "time": "2017-02-27T18:15:17Z", "creator": "albertofanjul@gmail.com", "creation_time": "2017-02-27T18:15:17Z", "tags": [], "text": "that code resolves it as\n\ngroupRow(1,n)\n\ngroupRow(n+1, m)\n\njoins two groups and generate same as\n\ngroupRow(1,m)"}]