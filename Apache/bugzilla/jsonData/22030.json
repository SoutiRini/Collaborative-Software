[{"count": 0, "tags": [], "creator": "brandon@tryplec.com", "text": "If a cgi script under mod_cgi outputs more than 4096 bytes of stderr before it \nfinishes writing to and closing its stdout, the write() inthe cgi script \ncontaining the 4097th byte of stderr will hang indefinitely, hanging the \nscript's execution.\n\nThis appears to be cause by the fact that mod_cgi reads all stdout output \nfirst, and then begins reading stderr output.  APR's file_io which is handling \nthe streams will only buffer 4096 characters before further writes by the \nscript to stderr will hang, waiting for mod_cgi to read some of the data from \nthe stream via APR file_io.\n\nThis occured for me where a perl cgi script was producing a large volume of \nharmless warning messages to ssl_error_log before it got to the part of it's \nexecution where it actually wrote the stdout output, and causing the script to \nhang and produce no output to the end user.  Below is a test script to \ndemonstrate:\n\n#!/usr/bin/perl\n# 24x170 = 4080 bytes to stderr\nforeach my $x (1..24) {\n  print STDERR 'X' x 169 . \"\\n\";\n}\n# + 17 more bytes, putting us at 4097\n# Delete one char from the print below to make\n# it work again\nprint STDERR \"0123456789ABCDEF\\n\";\n# Our actual script output, which never comes\nprint \"Content-type: text/plain\\n\\nASDF\\n\";", "id": 41895, "time": "2003-07-31T19:32:59Z", "bug_id": 22030, "creation_time": "2003-07-31T19:32:59Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 22030, "attachment_id": null, "id": 42687, "time": "2003-08-13T16:13:23Z", "creator": "slive@apache.org", "creation_time": "2003-08-13T16:13:23Z", "is_private": false, "text": "*** Bug 22318 has been marked as a duplicate of this bug. ***"}, {"count": 2, "tags": [], "bug_id": 22030, "text": "*** Bug 22900 has been marked as a duplicate of this bug. ***", "id": 43665, "time": "2003-09-03T13:46:38Z", "creator": "trawick@apache.org", "creation_time": "2003-09-03T13:46:38Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "bbb@cpan.org", "attachment_id": null, "id": 43975, "time": "2003-09-10T19:35:24Z", "bug_id": 22030, "creation_time": "2003-09-10T19:35:24Z", "is_private": false, "text": "This DoS vulnerability has been tickin me off for two months now. \nThe CGI is blocked on a write() to stderr trying so hard to shove the packet \ndown Apache's throat and httpd is blocked waiting for something from the CGI's \nstdout, which will never happen until that stderr is consumed, which also \nnever happens. \nMy system gets hundreds of processes with httpd and the CGI script deadlocked \nwith each other because if this issue.  I have to restart apache regularly to \navoid grinding the server to a pulp from wasted processes or \"Out of memory\" \nerrors. But mostly it just reaches MaxClients all the time which prevents new \nhits from being allowed (thus creating a DoS on my machine). \nI'm surprised mod_cgi was already known to be borked in this way and not \nrepaired yet in the cvs source tree. \nAnyone with cvs write access to the httpd repository, I'm begging you to try \nto fix this. \n \nI bricked over modules/generators/mod_cgi.c with Jeff Trawic's version: \n \nhttp://www.apache.org/~trawick/mod_cgi.c \n \nAnd suddenly all the problems vanished on my linux box.  Thank you Jeff! \n \nIs there any reason why this is not incorporated into the httpd trunk source \ntree?  Does it break non *NIX platforms?  If so, would it be appropriate to at \nleast do something like the following: \n \n#ifdef LINUX \n(new version) \n#endif \n#ifndef LINUX \n(old version) \n#endif \n \nRolling back to Apache 1.3.28 also eliminates all these problems, but I cannot \nkeep running 1.3.x because I need to use the new version of mod_php which is \nnot supported as well on the old apache. \n "}, {"count": 4, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "Diff the old mod_cgi and new mod_cgi leads to a number of changes.  It would be\ngreat if we could \nget an idea from the developers any pitfalls they may see with going up with the\nnew mod_cgi.  Is \nit safe to run on production??", "id": 43976, "time": "2003-09-10T19:40:57Z", "creator": "redwoodtree@mac.com", "creation_time": "2003-09-10T19:40:57Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 22030, "text": "Yes, the files seem quite different.  So many changes in fact that I got too \nbored (or lazy) to review everything.  I just used blind faith and replaced \nthe whole file.  I'm not sure if anyone is using it on production, but it \ncertainly works fine on my development system.  I am going to roll it out on \nmy production system now.  It can't be any worse than the old one! ", "id": 43987, "time": "2003-09-10T20:28:42Z", "creator": "bbb@cpan.org", "creation_time": "2003-09-10T20:28:42Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "FYI: I just figured out how to buttwag around this bug until it can be \nrepaired.  Just force everyone to put this line at the top of all the perl \nscripts: \n \nuse IO::Handle; STDERR->blocking(0); \n \nEverything after the first 4096 bytes to stderr will be dropped, but at least \nthe server never falls into deadlock between the httpd and the CGI script.  \n ", "id": 43988, "time": "2003-09-10T20:31:49Z", "creator": "bbb@cpan.org", "creation_time": "2003-09-10T20:31:49Z", "is_private": false}, {"count": 7, "tags": [], "text": "That's a great idea, maybe I can put that in CGI.pm or something.  But I have over 2000 perl \nscripts!! :-)\n\n", "attachment_id": null, "id": 43992, "creator": "redwoodtree@mac.com", "time": "2003-09-10T20:35:43Z", "bug_id": 22030, "creation_time": "2003-09-10T20:35:43Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "problems with ~/trawick/mod_cgi.c:\n\n1) buffers up the response, which is really uncool and breaks with cgis that\nneed to flush or which write huge responses\n\nthe code to parse http headers written by the cgi needs to be changed to get rid\nof the buffering\n\nhandle_script_stdout() needs to know when we've seen all the headers, then\nprocess them, then set ctx->headers_processed\n\n2) doesn't work on the ever-lame win32\n\ngroan\n\n3) needs the last few fixes to mod_cgi integraded\n\n4) doesn't help mod_cgid, which is needed by threaded MPMs\n\n5) isn't tested a whole lot\n\nbut of course you folks are helping with that\n\n--/--\n\nThe main problem to attack is #1...  with that solved, everything else is not so\nhard, other than Win32, which doesn't have to be solved.  I'll try to attack #1\nnow that I see some interest in it.  Alternately, somebody else play with it in\na debugger and see what I mean about needing to recognize when we've read the\nentire response header from the CGI and can get into the simple mode where we\npass all output down the filter chain as soon as we read it.", "id": 44001, "time": "2003-09-10T21:17:06Z", "creator": "trawick@apache.org", "creation_time": "2003-09-10T21:17:06Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 22030, "text": "*** Bug 10515 has been marked as a duplicate of this bug. ***", "id": 44439, "time": "2003-09-22T11:21:57Z", "creator": "trawick@apache.org", "creation_time": "2003-09-22T11:21:57Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "*** Bug 23473 has been marked as a duplicate of this bug. ***", "id": 44841, "time": "2003-09-29T15:05:46Z", "creator": "trawick@apache.org", "creation_time": "2003-09-29T15:05:46Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "This bug was issued as an Apache DOS vulnerability in a Symantec Security release yesterday. They \ncite going with the latest CVS release as a workaround.  \n\nJeff can you provide some guidance on whether  http://www.apache.org/~trawick/mod_cgi.c or \nthe latest CVS rev will be the most stable release.  I notice several diffs between the CVS version \nand the one in your home dir.\n\nThanks!", "id": 44889, "time": "2003-09-30T15:49:26Z", "creator": "redwoodtree@mac.com", "creation_time": "2003-09-30T15:49:26Z", "is_private": false}, {"count": 12, "tags": [], "creator": "trawick@apache.org", "text": "There is no fix in CVS for this problem.  There is no stable mod_cgi[d] that\nhandles 4097+ bytes from stderr mixed in with stdout processing.  I don't\nrecommend using any of the code in http://www.apache.org/~trawick/ in a\nproduction environment.\n\nI just uploaded jcgi.tar to www.apache.org/~trawick/.  Module was renamed to\nmod_jcgi so that hopefully it doesn't get confused with real code from CVS.\nThis has fewer big picture problems than the mod_cgi.c hacks I had before, and\nof course anyone is free to play with it and comment.  See included STATUS file\nfor some notes.\n\nFor production users: if your CGI spews gobs of stuff to stderr, change the CGI\nfor now.  For folks debugging CGIs and want to have them temporarily spew gobs\nof stuff to stderr, play with the hacked up version mentioned here and send me\ntestcases for stuff that doesn't work.\n\nAs always, anybody should feel free to make alternate changes to the real\nmod_cgi[d] and submit patches to dev@httpd.apache.org.\n", "id": 44894, "time": "2003-09-30T16:37:28Z", "bug_id": 22030, "creation_time": "2003-09-30T16:37:28Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "I raised this bug a long while back (Sep 25, 2002, actually:\nhttp://marc.theaimsgroup.com/?l=apache-httpd-dev&m=103291952019514&w=2) and\nsuggested a new \"CGI bucket\" type that kept both stdout and stderr descriptors\nfrom the CGI process. When the bucket read() function is called, it would\nselect() across both descriptors. Content from stdout would spawn a new bucket,\nand content from stderr would be logged.\n\nThen wrowe went off with a crazy super-solution which caused a total loss of\nfocus on the practical problems.\n\nMy suggestion still stands: have mod_cgi(d) inject a new CGI_BUCKET into the\nfilter stack which can drain both streams. No more hangs. Ever. No buffering.\nWorks for both cgi implementations. Works on Windows (presumably, since we're\nusing standard apr functions to poll across the two descriptors).", "id": 45269, "time": "2003-10-09T07:12:43Z", "creator": "gstein@gmail.com", "creation_time": "2003-10-09T07:12:43Z", "is_private": false}, {"count": 14, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "text": "mod_cgid does not have this particular hang problem because the script's\nstderr refers directly to the error log.\n\nNote that mod_cgid has some other issues with error log, but they are of lesser\nsignificance.  The two I can think of are:\n\n+ writing to syslog doesn't work\n+ the main error log is always used, instead of the vhost-specific error log\n\n(there are entries in this bug database already for these issues)\n", "id": 45274, "time": "2003-10-09T10:31:42Z", "bug_id": 22030, "creation_time": "2003-10-09T10:31:42Z", "is_private": false}, {"count": 15, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "Regarding Greg's comments about a special CGI bucket type being produced by mod_cgi:\n\nThere is another issue to solve with mod_cgi[d] that exists in 1.3 as well:\nhangs will occur if all body data isn't read first, before the script starts\nproducing output.  Clearly this isn't something that many scripts have\nencountered, but solving this enables some interesting CGI behavior.\n\nMy own work on this problem has been to handle all three channels (script's\nstdin -- request body, stdout, and stderr) right in mod_cgi.  Sending a special\nCGI bucket down the filter chain to solve the stdout/stderr problem doesn't deal\nwith writing request body to the script as the script can handle it.  With the\nI/O handled directly in mod_cgi, an extra channel doesn't need a different model.\n\nAn unfortunate problem to solve regardless of where stderr is read is that APR\ndoesn't support polling on pipes on Win32.  In the long term hopefully some\nWin32 gurus will provide a workable solution, but in the short term special\nhandling is required.  (See APR_FILES_AS_SOCKETS.)\n", "id": 45275, "time": "2003-10-09T10:52:35Z", "creator": "trawick@apache.org", "creation_time": "2003-10-09T10:52:35Z", "is_private": false}, {"count": 16, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "For what it's worth, this is proving to be a real problem for us attempting to\nmigrate to apache 2.0 from 1.3 on UNIX (linux).  Is anyone actively looking at\nthis or has it fallen off the radar?", "id": 50034, "time": "2004-01-05T02:29:41Z", "creator": "carl@bl.echidna.id.au", "creation_time": "2004-01-05T02:29:41Z", "is_private": false}, {"count": 17, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "text": "Carl, you can try http://www.apache.org/~trawick/jcgi.tar\n", "id": 50108, "time": "2004-01-05T21:42:25Z", "bug_id": 22030, "creation_time": "2004-01-05T21:42:25Z", "is_private": false}, {"count": 18, "tags": [], "creator": "carl@bl.echidna.id.au", "text": "Thanks Jeff, is this likely to make it into 2.0.49?  I'm pretty keen on sticking\nto production releases on our production servers :)", "id": 50113, "time": "2004-01-05T22:15:22Z", "bug_id": 22030, "creation_time": "2004-01-05T22:15:22Z", "is_private": false, "attachment_id": null}, {"count": 19, "tags": [], "bug_id": 22030, "attachment_id": null, "id": 50180, "time": "2004-01-07T12:39:57Z", "creator": "trawick@apache.org", "creation_time": "2004-01-07T12:39:57Z", "is_private": false, "text": "definitely not going to make it to 2.0.49"}, {"count": 20, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "*nod*.  This ticket's been open for some time now (some 4 months), do you know\nif/when it may be fixed in the release?  2.0.50? :)", "id": 50212, "time": "2004-01-07T23:09:58Z", "creator": "carl@bl.echidna.id.au", "creation_time": "2004-01-07T23:09:58Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "Is there any news at all on when this bug might get fixed please? Thanks.", "id": 54567, "time": "2004-03-24T14:04:29Z", "creator": "alec@edworthyuk.co.uk", "creation_time": "2004-03-24T14:04:29Z", "is_private": false}, {"count": 22, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "Scroll up from the bottom of the PR to find an alternate mod_cgi which has a\nredesigned interaction with the script.  Little or no feedback on that so far.\n", "id": 54568, "time": "2004-03-24T14:15:21Z", "creator": "trawick@apache.org", "creation_time": "2004-03-24T14:15:21Z", "is_private": false}, {"count": 23, "tags": [], "creator": "alec@edworthyuk.co.uk", "attachment_id": null, "text": "Thanks Jeff. I gave jcgi a very quick spin a couple of months ago but didn't\nmanage to make it work (although I didn't try that hard at the time). I will try\nagain sometime soon and see if I have any more luck.\n\nHow urgent is fixing this bug viewed as by those who are actively working on\nApache? Obviously to me it seems pretty important because it breaks all my\nscripts (although I'm sure that it could be argued that my scripts are at fault\nfor sending so much to stderr) but I don't really have that much knowledge of\nthe internals of Apache and what other issues are outstanding against it at the\nmoment. Are we likely to see a proper fix for this included in a production\nrelease in the foreseeable future or will work arounds within scripts and fixes\nlike Jeff's be the norm for now?", "id": 54648, "time": "2004-03-25T10:19:32Z", "bug_id": 22030, "creation_time": "2004-03-25T10:19:32Z", "is_private": false}, {"count": 24, "tags": [], "text": "I have to agree with Jeff.   Having the server to hang with no explanation\nwhen your error output reaches some magic threshold is hopeless broken.\nIt is the type of problem that won't show up in testing, but will break after\ndeployment.   This is a \"I can't trust Apache 2.0\" problem.", "attachment_id": null, "id": 54652, "creator": "wscott@bitmover.com", "time": "2004-03-25T13:05:42Z", "bug_id": 22030, "creation_time": "2004-03-25T13:05:42Z", "is_private": false}, {"count": 25, "tags": [], "bug_id": 22030, "attachment_id": null, "text": ">How urgent is fixing this bug viewed as by those who are actively working on\nApache?\n\nEmperical evidence would suggest that it is not very important.\n\n>Are we likely to see a proper fix for this included in a production\n>release in the foreseeable future or will work arounds within scripts\n>and fixes like Jeff's be the norm for now?\n\nI have no idea about the first question.\n\nThe answer to the second question is, in general, no.  This particular situation\nis one which requires a complete redesign of how mod_cgi interacts with scripts.\n I have made a set of code available which for Unix has a design that should\nsolve this problem, it works for my testcases, etc.\n\nAnother unusual example: 2.0.49 provided an overhaul of mod_include with\ncompletely new parsing engine and a number of existing problems resolved.  For\nquite a while, people with 2.0.x  mod_include problems were asked to try this\nalternate implementation.  After a relatively long time it was merged into 2.0.x\nfor the 2.0.49 release.\n\nIf somebody has time/energy to move the ball forward they can offer their own\nsolution or try out what I have and offer feedback.\n\nIf somebody does not have time/energy to help move the ball forward they can\nalways buy commercial support for Apache or an Apache-based server and complain\nto the vendor that it does not meet their requirements.\n\nOr modify scripts to redirect stderr or not output so much stuff to stderr.", "id": 54653, "time": "2004-03-25T13:26:12Z", "creator": "trawick@apache.org", "creation_time": "2004-03-25T13:26:12Z", "is_private": false}, {"count": 26, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "My lame workaround has been to start all my CGIs by re-opening STDERR to a plain\nfile: open(STDERR, \">>/tmp/error.log\").  Yuck.\n\nWithout that hack, this is bug a show-stopper for me too - there's no way I\ncould deploy httpd2 on a system with CGIs I don't 100% trust (e.g. the shared\nwebserver we virtualhost all our customer's webs on).", "id": 55806, "time": "2004-04-15T06:53:25Z", "creator": "apache-bugzilla-20040415@djce.org.uk", "creation_time": "2004-04-15T06:53:25Z", "is_private": false}, {"count": 27, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "How about taking the simpler \"CGI bucket\" approach for a lower risk change to\nincorporate into 2.0 than the fundamental rewrite:\n\n- fix just the regression since 1.3 (not the issue of handling stdin too)\n- simple #if APR_FILES_AS_SOCKETS to avoid breaking Win32\n\nI have a patch to implement this based largely on mod_jcgi and the existing\napr_buckets_pipe.c.", "id": 55811, "time": "2004-04-15T08:40:55Z", "creator": "jorton@redhat.com", "creation_time": "2004-04-15T08:40:55Z", "is_private": false}, {"count": 28, "tags": [], "bug_id": 22030, "attachment_id": null, "id": 55813, "time": "2004-04-15T09:57:46Z", "creator": "jorton@redhat.com", "creation_time": "2004-04-15T09:57:46Z", "is_private": false, "text": "Implementation of CGI bucket:\n\ndiff against HEAD: http://www.apache.org/~jorton/mod_cgi-HEAD.diff\ndrop-in replacement for 2.0 mod_cgi.c: http://www.apache.org/~jorton/mod_cgi.c\n\none known issue: fail gracefully if script closes both stderr and stdout\n\nFurther testing welcome."}, {"count": 29, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "Any reason not to commit to HEAD and get more eyes on it?\n\n(I'll try to do some detailed testing in next 36hr either way.)\n", "id": 55818, "time": "2004-04-15T11:16:06Z", "creator": "trawick@apache.org", "creation_time": "2004-04-15T11:16:06Z", "is_private": false}, {"count": 30, "attachment_id": null, "creator": "jorton@redhat.com", "text": "OK can do, will resolve that last issue first though.", "id": 55823, "time": "2004-04-15T12:54:34Z", "bug_id": 22030, "creation_time": "2004-04-15T12:54:34Z", "tags": [], "is_private": false}, {"count": 31, "tags": [], "creator": "bbb@cpan.org", "text": "Joe, you're a total genious!  I patched my httpd.spec file as follows: \n \n---- snip ---- \n=================================================================== \n--- httpd.spec  18 Nov 2003 00:52:34 -0000      1.16 \n+++ httpd.spec  16 Apr 2004 02:27:23 -0000 \n@@ -33,6 +33,8 @@ \n Source31: migration.css \n Source32: html.xsl \n Source33: README.confd \n+# Add Joe Orton's awesome CGI Bucket feature so large STDERR output won't \nchoke anymore! \n+Patch0: http://www.apache.org/~jorton/mod_cgi-HEAD.diff \n # build/scripts patches \n Patch1: httpd-2.0.40-apctl.patch \n Patch2: httpd-2.0.36-apxs.patch \n@@ -128,6 +130,9 @@ \n fi \n  \n %build \n+ \n+patch modules/generators/mod_cgi.c < $RPM_SOURCE_DIR/mod_cgi-HEAD.diff \n+ \n # update location of migration guide in apachectl \n %{__perl} -pi -e \"s:\\@docdir\\@:%{_docdir}/%{name}-%{version}:g\" \\ \n        support/apachectl.in \n---- snap ---- \n \nAnd then I rebuilt the package and upgraded the rpm.  (I couldn't use the \nstandard rpm \"%patch\" because I think Joe forgot to include the \n\"http-2.0.49/modules/generators/\" prefix in the diff headers in his patch \nfile.)  After restarting, all my problems immediately disappeared.  I'm \nputting this on my PRODUCTION servers right now.  (I never close STDERR in any \nof my CGIs anyway.) \n \nThank you! \n ", "id": 55874, "time": "2004-04-16T03:05:14Z", "bug_id": 22030, "creation_time": "2004-04-16T03:05:14Z", "is_private": false, "attachment_id": null}, {"count": 32, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "For what it's worth the patch seems to work fine for me. My CGI scripts now\ngenerate the error_log text I would expect and the output appears in the browser\nas expected with no delays. Will this fix (or a patch based upon it) get worked\ninto a proper release sometime in the future?\n\nThanks Joe!\n\nAlec", "id": 56082, "time": "2004-04-20T11:02:25Z", "creator": "alec@edworthyuk.co.uk", "creation_time": "2004-04-20T11:02:25Z", "is_private": false}, {"count": 33, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "Thanks for testing it out.  This will go into a future 2.0 release only if\nenough developers have confidence it is suitable for a 2.0 release: the more\nreports of successful testing here the more confidence will be inspired.", "id": 56158, "time": "2004-04-21T09:28:39Z", "creator": "jorton@redhat.com", "creation_time": "2004-04-21T09:28:39Z", "is_private": false}, {"count": 34, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "text": "The fix for this is now committed to HEAD, but needs more testers. \nhttp://www.apache.org/~jorton/ has:\n\n- mod_cgi.c - a drop-in replacement for the 2.0.49 mod_cgi.c\n- mod_cgi-2.0.diff - a diff against the 2.0 mod_cgi.c\n\nPlease post any additional results from testing here.", "id": 56890, "time": "2004-05-05T19:40:26Z", "bug_id": 22030, "creation_time": "2004-05-05T19:40:26Z", "is_private": false}, {"count": 35, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "The trivial testing I have done so far on RHEL ES 3 with Interchange 5 (which is\nCGI intensive) shows that this patch works perfectly.", "id": 56897, "time": "2004-05-05T22:07:39Z", "creator": "nic@uklinux.net", "creation_time": "2004-05-05T22:07:39Z", "is_private": false}, {"count": 36, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "*** Bug 28816 has been marked as a duplicate of this bug. ***", "id": 56948, "time": "2004-05-06T19:20:33Z", "creator": "trawick@apache.org", "creation_time": "2004-05-06T19:20:33Z", "is_private": false}, {"count": 37, "tags": [], "bug_id": 22030, "attachment_id": null, "id": 58179, "time": "2004-05-27T00:57:07Z", "creator": "carl@bl.echidna.id.au", "creation_time": "2004-05-27T00:57:07Z", "is_private": false, "text": "This has been marked as closed, but is there any news on which release of httpd2\nthat the fix will land in?"}, {"count": 38, "tags": [], "text": "It requires one more developer vote for inclusion in a future 2.0 release.  The\nmore people who test it, the better: there are 14 people on the CC list for this\nbug but only 3 have taken the time to test out the patches so far.", "attachment_id": null, "id": 58188, "creator": "jorton@redhat.com", "time": "2004-05-27T09:11:46Z", "bug_id": 22030, "creation_time": "2004-05-27T09:11:46Z", "is_private": false}, {"count": 39, "tags": [], "bug_id": 22030, "text": "*** Bug 28025 has been marked as a duplicate of this bug. ***", "id": 58682, "time": "2004-06-03T22:34:02Z", "creator": "jorton@redhat.com", "creation_time": "2004-06-03T22:34:02Z", "is_private": false, "attachment_id": null}, {"count": 40, "tags": [], "creator": "nd@perlig.de", "attachment_id": null, "text": "*** Bug 29533 has been marked as a duplicate of this bug. ***", "id": 59140, "time": "2004-06-11T22:58:08Z", "bug_id": 22030, "creation_time": "2004-06-11T22:58:08Z", "is_private": false}, {"count": 41, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "id": 59268, "time": "2004-06-16T08:43:29Z", "bug_id": 22030, "creation_time": "2004-06-16T08:43:29Z", "is_private": false, "text": "This is committed for 2.0.50 now.\n\nhttp://cvs.apache.org/viewcvs.cgi/httpd-2.0/modules/generators/mod_cgi.c?r1=1.148.2.7&r2=1.148.2.8"}, {"count": 42, "tags": [], "bug_id": 22030, "attachment_id": null, "id": 59372, "time": "2004-06-16T23:11:31Z", "creator": "bbb@cpan.org", "creation_time": "2004-06-16T23:11:31Z", "is_private": false, "text": "Thank you Joe! \nI've been needing this fix for a long time. \n \n-- Rob "}, {"count": 43, "tags": [], "bug_id": 22030, "text": "*** Bug 28656 has been marked as a duplicate of this bug. ***", "id": 60483, "time": "2004-07-12T15:19:40Z", "creator": "jorton@redhat.com", "creation_time": "2004-07-12T15:19:40Z", "is_private": false, "attachment_id": null}, {"count": 44, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "*** Bug 20866 has been marked as a duplicate of this bug. ***", "id": 60564, "time": "2004-07-13T19:34:56Z", "creator": "jorton@redhat.com", "creation_time": "2004-07-13T19:34:56Z", "is_private": false}, {"count": 45, "tags": [], "bug_id": 22030, "attachment_id": null, "text": "*** Bug 23528 has been marked as a duplicate of this bug. ***", "id": 62435, "time": "2004-08-24T20:41:22Z", "creator": "jorton@redhat.com", "creation_time": "2004-08-24T20:41:22Z", "is_private": false}, {"count": 46, "tags": [], "text": "*** Bug 19315 has been marked as a duplicate of this bug. ***", "attachment_id": null, "id": 64489, "creator": "jorton@redhat.com", "time": "2004-10-01T18:11:56Z", "bug_id": 22030, "creation_time": "2004-10-01T18:11:56Z", "is_private": false}, {"count": 47, "tags": [], "bug_id": 22030, "attachment_id": null, "id": 65107, "time": "2004-10-14T02:19:58Z", "creator": "dwtrusty@hotmail.com", "creation_time": "2004-10-14T02:19:58Z", "is_private": false, "text": "I just tried version 2.0.52 and this problem persists.  I am running \nRedhat 9.\n\n"}, {"count": 48, "tags": [], "bug_id": 22030, "text": "David, please open a new bug describing the problems you have with 2.0.52,\ninclude  a reproduction case if possible.  The bug covered here was fixed in 2.0.50.", "id": 65112, "time": "2004-10-14T06:24:03Z", "creator": "jorton@redhat.com", "creation_time": "2004-10-14T06:24:03Z", "is_private": false, "attachment_id": null}, {"count": 49, "tags": [], "creator": "dougapache@claar.org", "attachment_id": null, "text": "I have entered a new bug, 39342, that I believe is related to this. In that\ncase, mod_cgi is writing a large amount of data to stdout before attempting to\nread from stdin, which contains a large POST.", "id": 88326, "time": "2006-04-20T16:54:59Z", "bug_id": 22030, "creation_time": "2006-04-20T16:54:59Z", "is_private": false}]