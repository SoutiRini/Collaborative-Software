[{"count": 0, "tags": [], "bug_id": 26135, "attachment_id": null, "id": 50555, "time": "2004-01-14T17:27:47Z", "creator": "jporche@cisco.com", "creation_time": "2004-01-14T17:27:47Z", "is_private": false, "text": "Tomcat 5.0.16 leaks a lot of memory when a webapp is reloaded. To duplicate, \nstart Tomcat.\n\nOpen Windows Task manager and view memory information for the java.exe process.\n\nGo to Tomcat Manager.\n\nReload Tomcat Admin webapp.\n\nMemory will increase for each reload request.  Memory also leaks when \nstopping/starting a webapp, but not as much as reload.  I lost about 15 \nmegabytes of memory after about 10 reload requests.  I waited about 10 to 15 \nminutes to see if memory ever went back down, but it never did."}, {"count": 1, "tags": [], "bug_id": 26135, "attachment_id": null, "is_private": false, "id": 50556, "time": "2004-01-14T17:34:10Z", "creator": "remm@apache.org", "creation_time": "2004-01-14T17:34:10Z", "text": "Please post on tomcat-user about this. This is a recurrent non issue.\nIf you want to reopen this bug, please use a profiler and point out leaked\nreferences (under Tomcat's control, obviously)."}, {"count": 2, "tags": [], "bug_id": 26135, "attachment_id": null, "is_private": false, "id": 51357, "time": "2004-01-28T23:54:21Z", "creator": "jqs@qad.com", "creation_time": "2004-01-28T23:54:21Z", "text": "I believe this is a bug within Tomcat...\n\nHere is a way to replicate it:\n\nUse the Struts blank war.\nAvailable here:\nhttp://mirrors.isc.org/pub/apache/jakarta/struts/binaries/jakarta-struts-1.1.zip\n\nLoad that webapp, and open two browser windows, one to the Tomcat Manager and\none to the Tomcat Status page.  View the available memory.  You will see it\ncycle within a meg as garbage collection is run.  Then use Tomcat Manager to\nreload the struts webapp.  The free memory should now be a meg less.  This will\ncontinue until you reach 0, when a major garbage collection will occur, but it\njust looks like memory is released, as the Total Memory usage has now increased.\n You can continue this cycle until the memory reaches the total allocated, and\nTomcat will fall over.\n\nIf this is truly a \"non issue\", then I feel the Tomcat developers need to answer\nthis issue more directly (like the release notes).\n\nWe have customers that run multiple occurrences of our webapp under a single\nTomcat, and need to reload... With the leak... they end up having to restart\nTomcat to free the memory... causing support issues.\n\nI look forward to become more educated on why this is (not) an issue..."}, {"count": 3, "attachment_id": null, "bug_id": 26135, "text": "I looked into that already. While the classloader is not being garbage collected\n(this is the only object not being GCed) due to an unknown reason, no references\nare kept to it (as seen in a profiler), so from the Tomcat programming\nperspective, there's nothing to fix. Many \"simple\" webapps reload without\nleaking memory, but Struts webapps seem to pose a problem. Of course, there are\nalso ways for a shared library to cause GC trouble when reloading, and this\ncannot be fixed, so you cannot assume a webapp reload will never leak memory.\n\nThere's nothing in the release notes, because there's no conclusive information\navailable.", "id": 51382, "time": "2004-01-29T08:35:20Z", "creator": "remm@apache.org", "creation_time": "2004-01-29T08:35:20Z", "tags": [], "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 26135, "text": "*** Bug 32709 has been marked as a duplicate of this bug. ***", "id": 68542, "time": "2004-12-15T00:40:43Z", "creator": "remm@apache.org", "creation_time": "2004-12-15T00:40:43Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 26135, "attachment_id": null, "is_private": false, "id": 68582, "time": "2004-12-15T17:46:44Z", "creator": "james.norman@gmail.com", "creation_time": "2004-12-15T17:46:44Z", "text": "I would have to agree, a memory leak of this magnitude renders the Manager\napplication useless.  If this is something that the Tomcat team will not\naddress, it should be noted in the release notes, or in the Manager App HOW-TO.\n Our organization made number of decisions based on the functionality of the\nManager app that were thrown out once we observed this memory leak.  Although\nthere may be no conclusive evidence showing this is a problem in Tomcat, a\nnumber of people have consistently observed this behavior in the Manager\napplication, and would agree that it is not desired behavior.  To save other\norganizations from going through the problems we did, a simple blurb about this\nknown behavior would be more that appreciated.\n\nThanks,\nJames Norman"}, {"count": 6, "tags": [], "bug_id": 26135, "attachment_id": null, "is_private": false, "id": 70064, "time": "2005-01-25T13:21:02Z", "creator": "tobias@telenorlink.se", "creation_time": "2005-01-25T13:21:02Z", "text": "After seaching the net I found that there indeed exists a problem with Struts \nthat prevents web app class loaders from beeing garbage collected. The problem \nis that java beans information used by Struts is cached by \njava.beans.Introspector and never removed. A call to one of the methods \njava.beans.Introspector.flushCaches(), java.beans.Introspector.flushCaches\n(Class) or org.apache.commons.beanutils.PropertyUtilsBean.clearDescriptors() \nwould solve this.\n\nAfter doing a bit more searching I found that the Spring framework solves this \nproblem by providing a servlet context listener class \n(http://www.springframework.org/docs/api/org/springframework/web/util/Introspec\ntorCleanupListener.html) that calls Introspector.flushCaches() when a context \nis destroyed. \n\nTo test this, I modified the web.xml of the struts-examples web app to include \na listener definition using IntrospectorCleanupListener. After that I ran the \nWebPageConnector test program posted by James Norman on bug 32709. The program \nran over 1500 redeploys before i turned it off, at which time the memory \nconsumed by Tomcat (5.5) was about 30MB. Before the modification the program \ncould only run about 110 redeploys before an OutOfMemoryError occurred.\n"}, {"count": 7, "tags": [], "text": "Very good finding !\nI think I will add that to the stop method of the classloader, like there is a\nmethod to clear the classloader in commons-logging.\n\nThis is a very sneaky issue as the references to the classloader are never\ndisplayed by profilers ... Any other cool features like this in the JDK ?\n\nThe comment in the JDK source is hilarious:\n\n    /**\n     * Flush all of the Introspector's internal caches.  This method is\n     * not normally required.  It is normally only needed by advanced\n     * tools that update existing \"Class\" objects in-place and need\n     * to make the Introspector re-analyze existing Class objects.\n     */\n", "attachment_id": null, "id": 70065, "creator": "remm@apache.org", "time": "2005-01-25T14:13:38Z", "bug_id": 26135, "creation_time": "2005-01-25T14:13:38Z", "is_private": false}, {"count": 8, "tags": [], "creator": "james.norman@gmail.com", "text": "That got it.  Thanks to all who resolved this, we can now run multiple apps\ninside of 1 tomcat.\n\n<snip>\n  Any other cool features like this in the JDK ?\n</snip>\n\nJust that super cool System.getProperties()\n\n", "id": 70124, "time": "2005-01-26T22:31:57Z", "bug_id": 26135, "creation_time": "2005-01-26T22:31:57Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 26135, "attachment_id": null, "is_private": false, "id": 70547, "time": "2005-02-05T19:05:04Z", "creator": "hoju@visi.com", "creation_time": "2005-02-05T19:05:04Z", "text": "This is the same solution as was found previously in the following two bugs...\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=26372\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=27371\n\nThe solution was originally (as far as I know) found here...\nhttp://marc.theaimsgroup.com/?t=109578393000004&r=1&w=2\n\n\nIt would have been nice to have recognized this information back in September\n'04 when Yoav posted references to the solution rather than having to re-figure\nit out independently in January '05 and finaly take action.  In any case, I'm\nglad it is finally fixed!\n\n\nJake"}, {"count": 10, "attachment_id": null, "bug_id": 26135, "is_private": false, "id": 78823, "time": "2005-08-22T17:57:58Z", "creator": "cowwoc@bbs.darktech.org", "creation_time": "2005-08-22T17:57:58Z", "tags": [], "text": "This issue is incorrectly closed as WON'T FIX even though the 5.5.8 changelog\nmarks it as fixed. Please reclose it as fixed."}, {"id": 78826, "tags": [], "creator": "cowwoc@bbs.darktech.org", "attachment_id": null, "count": 11, "text": "Oops, I can do this myself :)", "time": "2005-08-22T18:18:42Z", "bug_id": 26135, "creation_time": "2005-08-22T18:18:42Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 26135, "attachment_id": null, "is_private": false, "id": 81303, "time": "2005-10-18T11:24:59Z", "creator": "robert_longson@standardandpoors.com", "creation_time": "2005-10-18T11:24:59Z", "text": "*** Bug 36548 has been marked as a duplicate of this bug. ***"}]