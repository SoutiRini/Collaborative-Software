[{"count": 0, "tags": [], "bug_id": 42861, "attachment_id": null, "text": "I've found that if I process more than one document with Fop without restarting\nmy application then only the first document is able to use autodetected fonts\n(using the support added in Bug 41831). Fonts that were resolved and used\ncorrectly in the first document are unable to be found for the subsequent\ndocuments. \nThe problem seems to be caused by the static autodetectedFonts variable in\norg/apache/fop/render/PrintRendererConfigurator.java.\nThis occurs whether I reuse the FopFactory or whether I recreate it between\ndocuments.", "id": 105302, "time": "2007-07-11T15:19:54Z", "creator": "devel@thanlwinsoft.org", "creation_time": "2007-07-11T15:19:54Z", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 20496\nreuseFontTripletMap20070711.diff\n\nThe quickest solution is just to remove the autodetectedFonts variable, but\nthat would result in unnecessary parsing of the fonts. Another solution would\nbe to store the Font maps in the FOUserAgent so that new FontInfo objects can\nreuse the maps from the previous lookup. A patch based on this idea is\nattached.", "is_private": false, "bug_id": 42861, "id": 105303, "time": "2007-07-11T15:21:12Z", "creator": "devel@thanlwinsoft.org", "creation_time": "2007-07-11T15:21:12Z", "attachment_id": 20496}, {"count": 2, "tags": [], "creator": "dev@cumiskey.com", "attachment_id": null, "id": 105318, "time": "2007-07-12T05:49:18Z", "bug_id": 42861, "creation_time": "2007-07-12T05:49:18Z", "is_private": false, "text": "Having the fontMap and FontTripletInfo in the FOUserAgent is not the correct\nplace for this, it should remain in the FontCache where it can be serialized."}, {"count": 3, "tags": [], "creator": "dev@cumiskey.com", "attachment_id": 20498, "is_private": false, "id": 105330, "time": "2007-07-12T07:48:46Z", "bug_id": 42861, "creation_time": "2007-07-12T07:48:46Z", "text": "Created attachment 20498\nfont autodetection fix\n\n* Created new FontManager class.\n* Moved static boolean autoDetectedFonts member of PrintRendererConfigurator to\nbe a member of FontManager\n* Moved FontCache from FopFactory to FontManager.\n* Added FontManager get accessor in FopFactory.\n* Moved FontCache related accessors to FontManager.\n* PrintRendererConfigurator static methods modified to normal and signature\nfootprint reduced.\n* PDFDocumentGraphics2DConfigurator now extends PDFRendererConfigurator and\nmakes use of member methods calls rather than making static method calls.\n* Cleaned up javadocs in FontCache and PDFTranscoder\n\nIn the future some of the code could be reorganised a little so all font\ndetection related activities stem/flow from the FontManager rather than\ndirectly from PrintRendererConfigurator.\n\nFontManager could also be the holder of a centralized list of available fonts. \nEach renderer would then request the availability of a font from the\nFontManager rather than each storing its own font list as is the current\nsituation.  I do not have time to make these changes *at the moment* but this\npatch should fix the autodetection problem.\n\nAdrian."}, {"count": 4, "tags": [], "text": "Created attachment 20499\nfo2pdfExampleOfBug.java\n\nThanks for the patch. Unfortunately, it still shows the bug if I don't recreate\nthe FopFactory. To demonstrate this bug you can try this java file, which is a\nmodified version of examples/embedding/java/embedding/ExampleFO2PDF.java.\nObviously, you also need to add an autodetected font to the Hello World\nfo:block in xml/fo/helloworld.fo and add <auto-detect/> in the <fonts/> section\nof the conf/fop.xconf. You should find that the first and third pdf have the\ncorrect font, but the second pdf, which was created by reusing the FopFactory,\nhas the wrong font.", "is_private": false, "bug_id": 42861, "id": 105348, "time": "2007-07-12T14:05:39Z", "creator": "devel@thanlwinsoft.org", "creation_time": "2007-07-12T14:05:39Z", "attachment_id": 20499}, {"count": 5, "tags": [], "text": "Created attachment 20500\ncacheFontTripletMap20070712.diff\n\nI still think you need to cache the font triplet maps in FontInfo some how\nsince the FontInfo object is recreated for each Fop object. The attached patch\ncaches them on FontCache as you suggest.", "is_private": false, "bug_id": 42861, "id": 105351, "time": "2007-07-12T15:30:33Z", "creator": "devel@thanlwinsoft.org", "creation_time": "2007-07-12T15:30:33Z", "attachment_id": 20500}, {"count": 6, "tags": [], "bug_id": 42861, "attachment_id": null, "text": "I cannot reproduce this bug with the given resources. I'm calling FOP multiple times the whole time in my applications and have never had a problem although auto-detection is enabled. Maybe Adrian's refactoring fixed the problem in the end. Please re-open if the problem is still present in the current FOP Trunk.", "id": 137457, "time": "2010-06-08T15:20:59Z", "creator": "jeremias@apache.org", "creation_time": "2010-06-08T15:20:59Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 42861, "attachment_id": null, "text": "batch transition to closed remaining pre-FOP1.0 resolved bugs", "id": 156531, "time": "2012-04-01T13:49:26Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T13:49:26Z", "is_private": false}]