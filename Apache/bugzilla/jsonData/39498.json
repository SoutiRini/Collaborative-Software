[{"count": 0, "tags": [], "creator": "otto.hirr@olabinc.com", "attachment_id": null, "text": "Greeting,\nsrclib/apr/configure assumes that if SO_ACCEPTFILTER is defined in sys/socket.h \nthat the kernel module is loaded. Upon httpd startup, there will be a warning \nmessage about unable to locate file or directory. Searching the web will \nindicate many people have encountered this problem. It would be more user \nfriendly to provide a c routine that is compiled and run to test whether or not \naccept_filter is \"really\" available, not just that it is found in sys/socket.h. \nIf it exists in the include file, but is unavailable, then it should be turned \noff, and emit a warning that if the accept_filter feature is wanted, then it \nneeds to be loaded in the kernel and configure re-run.", "id": 88849, "time": "2006-05-06T03:58:57Z", "bug_id": 39498, "creation_time": "2006-05-06T03:58:57Z", "is_private": false}, {"count": 1, "tags": [], "text": "- The message that is currently displayed is a warning, not an error.\n\n- AFAIK, there isn't an easy way to 'test' for accept filters at runtime,\nwithout actually trying to enable them on  a socket.... So... Im not sure what\nbehavoir change you would like?", "is_private": false, "id": 88869, "creator": "chip@force-elite.com", "time": "2006-05-07T06:46:15Z", "bug_id": 39498, "creation_time": "2006-05-07T06:46:15Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 39498, "is_private": false, "count": 2, "id": 88885, "time": "2006-05-07T23:17:36Z", "creator": "otto.hirr@olabinc.com", "creation_time": "2006-05-07T23:17:36Z", "text": "What I'm driving at is that configure makes a blind assumption that if \nSO_ACCEPTFILTER is defined, that it is available in the system, which is not \nthe case. To be available, it either needs to be (1) manually loaded via \nkldload, or (2) loaded at boot time by having the administrator modify \nloader.conf, or (3) recompile the kernel and have it static within.\n\nAt configure time, prior to compilation of http source, the configure script \ncould first check for SO_ACCEPTFILTER, then if it is defined, emit a small c \nprogram, compile, and observe the result to determine if it is REALLY \navailable. Such a program as found below seems to make this determination. I \nran it on one machine that had accf_http.ko loaded, and it ran with exit of 0, \nthat is it was able to set the accept filter. Running on another machine that \nhad the kernel module, but not loaded, resulted in the failure of setsockopt() \nwith an errno of 2, which is the very thing that is being observed.\n\nIt is my belief that there are many people out there that compile up the code \nand expect it to work without emission of warnings. This kind of check at \nsource compile time would clean this up. It could make a comment to the user \nattempting to compile httpd, that the option would be available, but is being \nturned off unless either the re-configure with the kernel module already loaded \nor forced via configure option.\n\n/* Debugging of\n    Failed to enable the '%s' Accept Filter\n    is defined in server/listen.c\n    the call is to apr_socket_accept_filter()\n    defined in srclib/apr/network_io/unix/sockopt.c\n\n */\n#include <sys/types.h>\n#include <sys/module.h>\n#include <sys/socket.h>\n#include <sys/socketvar.h>\n#include <netinet/in.h>\n#include <errno.h>\n\nmain () {\n\n    int sock;\n    sock = socket( AF_INET, SOCK_STREAM, IPPROTO_TCP );\n    if (sock < 0) {\n        printf( \"socket(): failed: errno: %d\\n\", errno );\n        exit( -1 );\n    }\n\n    struct sockaddr_in saddr;\n    bzero( &saddr, sizeof (saddr));\n    saddr.sin_family      = AF_INET;\n    saddr.sin_addr.s_addr = htonl( INADDR_ANY );\n    saddr.sin_port        = 6543;\n\n    if ( bind( sock, (struct sockaddr *) &saddr, sizeof(saddr)) ) {\n        printf( \"bind(): failed: errno: %d\\n\", errno );\n        exit( -1 );\n    }\n\n    if ( listen( sock, 5 )) {\n        printf( \"listen(): failed: errno: %d\\n\", errno );\n        exit( -1 );\n    }\n\n    struct accept_filter_arg af;\n    bzero( &af, sizeof (af) );\n    strncpy( af.af_name, \"httpready\",  16 );\n\n    if ((setsockopt( sock, SOL_SOCKET, SO_ACCEPTFILTER,\n          &af, sizeof (af) )) < 0) {\n        printf( \"setsocketopt(): failed: errno: %d\\n\", errno );\n        exit( -1 );\n    }\n    exit( 0 );\n}\n"}, {"attachment_id": null, "tags": [], "bug_id": 39498, "is_private": false, "count": 3, "id": 88894, "time": "2006-05-08T01:12:03Z", "creator": "chip@force-elite.com", "creation_time": "2006-05-08T01:12:03Z", "text": "I disagree that we should disable this feature via configure.\n\nMy personal feeling is that many admins do not even _know_ about accf_http.  Is\nthere a reason we shouldn't promote the use of it?"}, {"count": 4, "tags": [], "bug_id": 39498, "attachment_id": null, "id": 88895, "time": "2006-05-08T01:57:02Z", "creator": "rooneg@electricjellyfish.net", "creation_time": "2006-05-08T01:57:02Z", "is_private": false, "text": "Just my two cents, it seems silly to disable this via a configure time check,\nsince it's quite possible for the module to be unloaded during configure but\navailable at runtime."}, {"count": 5, "tags": [], "bug_id": 39498, "attachment_id": null, "id": 88897, "time": "2006-05-08T06:55:30Z", "creator": "otto.hirr@olabinc.com", "creation_time": "2006-05-08T06:55:30Z", "is_private": false, "text": ">I disagree that we should disable this feature via configure.\n>My personal feeling is that many admins do not even _know_ about accf_http.  Is\n>there a reason we shouldn't promote the use of it?\n\nFine. Then lets put it in the doc. It is known also, but not well doc'd that \nthe admin/user must explicitly load it in the kernel. Futhermore the non-\ndescript error message of file not found, is misleading. Gee if it said \nsomething more intellegent, like it probably needs to be loaded, (since that \ncode was included because the token was found in the sys include file) it would \nfuther the cause. I found several people that had posted on the net with this \nproblem, but did not find a solution.\n\n>Just my two cents, it seems silly to disable this via a configure time check,\n>since it's quite possible for the module to be unloaded during configure but\n>available at runtime.\n\nThat's fine too. Give the admin/user some info in the configure log file.\n\nWhat I'm saying is that as it exists, it makes rash assumptions that if it is \nin the sys include file, that it exists and is available, which is not the case \nif it is not loaded, and emits a strange error message that a non-coder would \nnot understand.\n\nFurthermore I did not see an easy way to turn OFF this feature at configure \ntime. Take a look at srclib/apr/configure, lines beginning at 41729 for version \n2.2.2, and there is no obvious flag that is tested that allows the user to turn \nit off. It simply uses the pre-compiler to test for the flag existance.\n\nI'm trying to make this easier. Documentation would be a great help. By default \nit should compile correctly on a 'default' freebsd machine, which by default \ndoes not load the kernel module. Adding appropriate documentation would solve \none problem, adding a flag to turn it off, even though it is found to exist in \nthe sys include file solves the other. I had to hand edit an include file to \nturn it off. This is wrong. A flag in the configure file would be a correct \nmethod."}, {"count": 6, "tags": [], "bug_id": 39498, "text": "Just add the following to your configuration file and things work fine even if\nthe kernel module is not loaded:\n\nAcceptFilter http none\nAcceptFilter https none", "id": 88900, "time": "2006-05-08T10:32:22Z", "creator": "rpluem@apache.org", "creation_time": "2006-05-08T10:32:22Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "otto.hirr@olabinc.com", "is_private": false, "text": ">Just add...\n>AcceptFilter http none\n>AcceptFilter https none\n\nSorry, not true on freebsd 5.3. At startup it emits the following:\n\n[Mon May 08 09:18:09 2006] [warn] (2)No such file or directory: Failed to \nenable the 'httpready' Accept Filter\n\nand that is with the above AcceptFilter's set to none. If it is correctly \nturning on/off, then it must be seeing the above configure values after it is \nstarting up the sockets... (I'm no expert, just reporting what I see.)", "id": 88915, "time": "2006-05-08T16:22:01Z", "bug_id": 39498, "creation_time": "2006-05-08T16:22:01Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "chip@force-elite.com", "is_private": false, "text": "Disabling them works fine for me on FreeBSD 6.1.  Are you using httpd from the\nports?  Are you sure its not being overridden later on?", "id": 88916, "time": "2006-05-08T16:31:08Z", "bug_id": 39498, "creation_time": "2006-05-08T16:31:08Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 39498, "text": ">Disabling them works fine for me on FreeBSD 6.1.\nI'm not there yet. My observation is on 5.3. Next will be 5.4.\nSo you are not getting any output of errors? Note that these errors\nare not going to the error log, but are coming out on std[err|out] at start,\nand one for each prefork process that is started.\n>Are you using httpd from the ports?\nNo, I use what I download directly from the main site.\nSpecifically I am using 'httpd-2.2.2.tar.gz and md5 checksum verifies.\n>Are you sure its not being overridden later on?\nOverridden where? server info correctly identifies as 'none'.", "id": 88924, "time": "2006-05-08T17:51:18Z", "creator": "otto.hirr@olabinc.com", "creation_time": "2006-05-08T17:51:18Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 39498, "attachment_id": null, "id": 124152, "time": "2009-01-18T16:19:11Z", "creator": "pgollucci@apache.org", "creation_time": "2009-01-18T16:19:11Z", "is_private": false, "text": "CC myself on FreeBSD related bugs"}]