[{"count": 0, "tags": [], "bug_id": 38759, "is_private": false, "id": 86111, "attachment_id": null, "creator": "brian.bonner@paraware.com", "creation_time": "2006-02-23T04:30:15Z", "time": "2006-02-23T04:30:15Z", "text": "If Apache is used as a proxy in front of tomcat using ProxyPass and\nProxyPassreverse with a path different than the path specified in the context of\nthe tomcat webapp, tomcat returns the cookie using the path associated with the\ncontext of the webapp instead of the initial request path as seen from the client.\n\ni.e.\n\nProxyPass         /test   http://192.168.1.10/secured\nProxyPassReverse  /test   http://192.168.1.10/secured\n\nIn this case, the request is submitted to Apache web server as\nhttp://somedomain.com/test/index.html,  ProxyPass translates this request to\nhttp://192.168.1.10/secured/index.html.  if a cookie is placed on the request,\nit should be placed at:\n\ndomain:  somedomain.com\npath: /test\n\nHowever instead, tomcat places it at:\n\ndomain: somedomain.com\npath: /secured\n\nWhen trying to login, Apache ends up logging a 408 error.\n\nI have not been able to trace through the code where the cookies are set inside\nTomcat.\n\nIf you set the ProxyPass, ProxyPassReverse to be the same path, this error does\nnot occur, however this severely hinders the flexibility of the proxy."}, {"count": 1, "tags": [], "text": "Normally, I'd just bounce this to Httpd, but you haven't provided enough info \nto be of any use to the developers there.\n\nThis is clearly a bug in mod_proxy's implementation of ProxyPassReverse, or a \nconfiguration error.  There is absolutely nothing that Tomcat can do about it, \nsince to the best of it's knowledge, it's handling a request for /secured.\n\nIf you feel that this really is a bug, I suggest re-filing for Httpd, and (at \nthe very least) include the version numbers of the software you are using.  ", "attachment_id": null, "bug_id": 38759, "id": 86114, "time": "2006-02-23T05:20:02Z", "creator": "william.barker@wilshire.com", "creation_time": "2006-02-23T05:20:02Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 38759, "attachment_id": null, "id": 86116, "time": "2006-02-23T05:21:54Z", "creator": "william.barker@wilshire.com", "creation_time": "2006-02-23T05:21:54Z", "is_private": false, "text": "*** Bug 38760 has been marked as a duplicate of this bug. ***"}, {"count": 3, "tags": [], "bug_id": 38759, "attachment_id": null, "id": 86119, "time": "2006-02-23T06:26:38Z", "creator": "brian.bonner@paraware.com", "creation_time": "2006-02-23T06:26:38Z", "is_private": false, "text": "This occurs with apache httpd 2.0.51-2.9 on linux.  It also occurs on windows, but I don't have the version handy. \n\nThis same proxy does  *not* seem to have the same problem with proxying another httpd app served with PHP or perl (I.e.  Sugarcrm, Bugzilla).\n\nBut you seem pretty confident in your statement.\n\nSo you're suggesting that ProxyPassReverse should be changing the path of the cookie back to /test which would make sense.  I wasn't looking there because the non-tomcat based apps work without any problems.\n\nLet me know what else I can provide.   Re: the config,  ProxyPass and ProxyPassReverse are similar in the non tomcat apps which work.\n\nThanks."}, {"count": 4, "tags": [], "bug_id": 38759, "attachment_id": null, "id": 86132, "time": "2006-02-23T13:50:59Z", "creator": "fhanik@apache.org", "creation_time": "2006-02-23T13:50:59Z", "is_private": false, "text": "I agree with Bill, Apache should change the cookie path for you.\nMy guess is that it works with other servers cause they set the path to \"/\" and\nmake their sessions global to the domain, not the webapp.\n\nTake a look at these directives\nProxyPassReverseCookiePath\nProxyPassReverseCookieDomain\n\nfeatured in the following article\nhttp://www.apacheweek.com/features/reverseproxies\n\nIf that is not an option, I would suggest modifying the class\norg.apache.catalina.connector.Request.java the following method\n\n    protected void configureSessionCookie(Cookie cookie) {\n        cookie.setMaxAge(-1);\n        String contextPath = null;\n        if (!connector.getEmptySessionPath() && (getContext() != null)) {\n            contextPath = getContext().getEncodedPath();\n        }\n        if ((contextPath != null) && (contextPath.length() > 0)) {\n            cookie.setPath(contextPath);\n        } else {\n            cookie.setPath(\"/\");\n        }\n        if (isSecure()) {\n            cookie.setSecure(true);\n        }\n    }\n\nYou can make an enhancement request to tomcat to allow for a configuration to\nalways set \"/\" as the session cookie path."}, {"count": 5, "tags": [], "bug_id": 38759, "is_private": false, "id": 86133, "attachment_id": null, "creator": "funkman@joedog.org", "creation_time": "2006-02-23T14:02:28Z", "time": "2006-02-23T14:02:28Z", "text": "FYI (IIRC) - in tomcat 5.5 - the session cookie path can be configured to be /\nso all webapps share the same jsessionid"}, {"count": 6, "tags": [], "bug_id": 38759, "attachment_id": null, "is_private": false, "id": 86143, "time": "2006-02-23T16:43:00Z", "creator": "brian.bonner@paraware.com", "creation_time": "2006-02-23T16:43:00Z", "text": "Filip, I hadn't seen the apache week article you mentioned, however I will\nreview it.  Thank you.\n\nWhat's perplexing about this problem as an Apache Server running PHP behind a\nreverse proxy doesn't have this problem.  In fact I have an example where the\npath *is* properly set.  Maybe it's just because the Reverse proxy code works\nwhen the server behind the proxy is Apache :).  \n\nHowever, they don't all set the path to \"/\".  As an example.  I have an instance\nof running on Apache behind a proxy and SugarCRM sets ck_login_id_20,\nck_login_theme_20, and ck_login_language_20 with the path set to the value as\nseen by the browser, not the path seen by the proxy.\n\nThanks for the clarification.\n\nBrian\n\n(In reply to comment #4)\n> I agree with Bill, Apache should change the cookie path for you.\n> My guess is that it works with other servers cause they set the path to \"/\" and\n> make their sessions global to the domain, not the webapp.\n> \n> Take a look at these directives\n> ProxyPassReverseCookiePath\n> ProxyPassReverseCookieDomain\n> \n> featured in the following article\n> http://www.apacheweek.com/features/reverseproxies\n> \n> If that is not an option, I would suggest modifying the class\n> org.apache.catalina.connector.Request.java the following method\n> \n>     protected void configureSessionCookie(Cookie cookie) {\n>         cookie.setMaxAge(-1);\n>         String contextPath = null;\n>         if (!connector.getEmptySessionPath() && (getContext() != null)) {\n>             contextPath = getContext().getEncodedPath();\n>         }\n>         if ((contextPath != null) && (contextPath.length() > 0)) {\n>             cookie.setPath(contextPath);\n>         } else {\n>             cookie.setPath(\"/\");\n>         }\n>         if (isSecure()) {\n>             cookie.setSecure(true);\n>         }\n>     }\n> \n> You can make an enhancement request to tomcat to allow for a configuration to\n> always set \"/\" as the session cookie path."}]