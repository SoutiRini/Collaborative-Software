[{"count": 0, "tags": [], "creator": "karel.vervaeke@telenet.be", "text": "Created attachment 24421\nstackdump\n\nexecuting fop from command line:\n\nfop success.xml -pdf success.pdf\nfop fail.xml -pdf fail.pdf\n\nsuccess.xml and fail.xml are similar, but rendering the latter seems to hang\nfop.\n\nI have not debugged it, but see attached stack dump.", "id": 131407, "time": "2009-10-27T05:44:08Z", "bug_id": 48063, "creation_time": "2009-10-27T05:44:08Z", "is_private": false, "attachment_id": 24421}, {"count": 1, "tags": [], "bug_id": 48063, "attachment_id": 24422, "text": "Created attachment 24422\nsuccessful testcase", "id": 131408, "time": "2009-10-27T05:47:07Z", "creator": "karel.vervaeke@telenet.be", "creation_time": "2009-10-27T05:47:07Z", "is_private": false}, {"count": 2, "tags": [], "creator": "karel.vervaeke@telenet.be", "text": "Created attachment 24423\nfailing testcase", "id": 131409, "time": "2009-10-27T05:47:39Z", "bug_id": 48063, "creation_time": "2009-10-27T05:47:39Z", "is_private": false, "attachment_id": 24423}, {"count": 3, "tags": [], "bug_id": 48063, "attachment_id": null, "text": "Jira wouldn't let met attach the testcases using mimetype text/xml or application.xml\n\nMy java version, in case it matters: Java(TM) SE Runtime Environment (build 1.6.0_16-b01)", "id": 131410, "time": "2009-10-27T05:49:18Z", "creator": "karel.vervaeke@telenet.be", "creation_time": "2009-10-27T05:49:18Z", "is_private": false}, {"count": 4, "tags": [], "creator": "karel.vervaeke@telenet.be", "text": "The problem also occurs when requesting postscript output, but it does not occur when requesting png output.", "id": 131411, "time": "2009-10-27T06:00:20Z", "bug_id": 48063, "creation_time": "2009-10-27T06:00:20Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 48063, "is_private": false, "id": 131428, "attachment_id": null, "creator": "vanukuri.venkat@googlemail.com", "creation_time": "2009-10-27T10:15:51Z", "time": "2009-10-27T10:15:51Z", "text": "Yes, the fail.xml testcase is not working as stated.\n\nI tried to find the differences between success.xml and fail.xml, found only few differences....\n\nI have tried merging the differences one by one and came to the conclusion that that the last difference (few blocks missing in fail.xml) is causing the problem (still don't know technically what is causing that problem).\n\nWhen I copied those blocks missing in fail.xml, it is back to working state now... I will try to find out the exact problem...\n\nmeanwhile for your information, with that change, I am attaching the fail.xml testcase, which is working alright for me..."}, {"count": 6, "tags": [], "creator": "vanukuri.venkat@googlemail.com", "attachment_id": 24428, "id": 131429, "time": "2009-10-27T10:19:52Z", "bug_id": 48063, "creation_time": "2009-10-27T10:19:52Z", "is_private": false, "text": "Created attachment 24428\nfailure testcase with a simple change working"}, {"count": 7, "tags": [], "text": "Many small changes seem to fix the problem, such as adding an empty <fo:block/> right before the last </fo:flow>.\n\nRemoving or adding a single word to an existing <fo:block> does not 'fix' the problem, unless the change causes the block to change the number of lines of text.\n\nFor example, the phrase ending with 'configurable of course' takes just under one line of text.  When we add a word to this phrase so it takes two lines, the problem disappears.", "is_private": false, "id": 131449, "creation_time": "2009-10-28T01:17:44Z", "time": "2009-10-28T01:17:44Z", "creator": "karel.vervaeke@telenet.be", "bug_id": 48063, "attachment_id": null}, {"count": 8, "tags": [], "creator": "vhennebert@gmail.com", "attachment_id": null, "id": 131484, "time": "2009-10-29T04:20:04Z", "bug_id": 48063, "creation_time": "2009-10-29T04:20:04Z", "is_private": false, "text": "This is most probably a manifestation of bug #47424. After commenting out all of the footnotes in the document the processing of the file runs to completion."}, {"count": 9, "attachment_id": null, "bug_id": 48063, "text": "This bug does not seem to be related to bug 47424. The test files attached to\nbug 47424 show an infinite loop in\norg.apache.fop.layoutmgr.PageBreakingAlgorithm.getFootnoteSplit(int, int, int,\nint, boolean), whereas the test file attached to this issue encounters an\ninfinite loop in\norg.apache.fop.layoutmgr.PageBreakingAlgorithm.createFootnotePages(KnuthPageNode).\n\nThis bug does however seem to be related to bug 48162.", "id": 132862, "time": "2009-12-16T05:49:51Z", "creator": "heidi.vanparys@gmail.com", "creation_time": "2009-12-16T05:49:51Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "creator": "gadams@apache.org", "text": "resetting P2 open bugs to P3 pending further review", "id": 157503, "time": "2012-04-07T01:44:01Z", "bug_id": 48063, "creation_time": "2012-04-07T01:44:01Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "text": "Created attachment 28911\nMinimal test case", "attachment_id": 28911, "id": 159881, "creation_time": "2012-06-11T18:37:29Z", "time": "2012-06-11T18:37:29Z", "creator": "matthias8283@gmx.at", "bug_id": 48063, "is_private": false}, {"count": 12, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "id": 159884, "time": "2012-06-11T19:52:07Z", "bug_id": 48063, "creation_time": "2012-06-11T19:52:07Z", "is_private": false, "text": "(In reply to comment #11)\n> Created attachment 28911 [details]\n> Minimal test case\n\nThe problem is occurring in PageBreakingAlgorithm#createFootnotePages\n\n// create pages containing the remaining footnote bodies                                                                                                                                                  \nwhile (insertedFootnotesLength < totalFootnotesLength) {\n    final int tmpLength = lengthList.get(footnoteListIndex);\n    // try adding some more content                                                                                                                                                                       \n    if ((tmpLength - insertedFootnotesLength) <= availableBPD) {\n        // add a whole footnote                                                                                                                                                                           \n        availableBPD -= tmpLength - insertedFootnotesLength;\n        insertedFootnotesLength = tmpLength;\n        footnoteElementIndex\n            = getFootnoteList(footnoteListIndex).size() - 1;\n    } else {\n        ...\n    }\n}\n\nif tmpLength == insertedFootnotesLength, then the loop doesn't terminate [even if availableBPD is zero]; clearly this logic is broken, but I don't have enough familiarity with this code to effect a quick fix without further study\n\nis there another FOP dev that knows this code?"}, {"count": 13, "tags": [], "text": "*** Bug 48162 has been marked as a duplicate of this bug. ***", "attachment_id": null, "bug_id": 48063, "id": 159892, "time": "2012-06-11T20:44:51Z", "creator": "matthias8283@gmx.at", "creation_time": "2012-06-11T20:44:51Z", "is_private": false}, {"count": 14, "tags": [], "creator": "matthias8283@gmx.at", "text": "(In reply to comment #12)\n> (In reply to comment #11)\n> > Created attachment 28911 [details]\n> > Minimal test case\n> \n> The problem is occurring in PageBreakingAlgorithm#createFootnotePages\n> \n> // create pages containing the remaining footnote bodies                    \n> \n> while (insertedFootnotesLength < totalFootnotesLength) {\n>     final int tmpLength = lengthList.get(footnoteListIndex);\n>     // try adding some more content                                         \n> \n>     if ((tmpLength - insertedFootnotesLength) <= availableBPD) {\n>         // add a whole footnote                                             \n> \n>         availableBPD -= tmpLength - insertedFootnotesLength;\n>         insertedFootnotesLength = tmpLength;\n>         footnoteElementIndex\n>             = getFootnoteList(footnoteListIndex).size() - 1;\n>     } else {\n>         ...\n>     }\n> }\n> \n> if tmpLength == insertedFootnotesLength, then the loop doesn't terminate\n> [even if availableBPD is zero]; clearly this logic is broken, but I don't\n> have enough familiarity with this code to effect a quick fix without further\n> study\n\ntmpLength == insertedFootnotesLength means that the current footnote has already been added and no additional footnote page has to be created (at least for the current footnote). So increasing the footnoteListIndex (as suggested in #48162) seems correct to me. I'm wondering why it isn't correctly set in the first place, getFootnoteSplit() seems to have something to do with that. Perhaps a proper fix would be necessary there.\nI'm attaching a patch anyway, because it solves the problem without breaking something else (at least according to the junit layout tests).", "id": 159893, "time": "2012-06-11T20:58:20Z", "bug_id": 48063, "creation_time": "2012-06-11T20:58:20Z", "is_private": false, "attachment_id": null}, {"count": 15, "tags": [], "bug_id": 48063, "attachment_id": 28912, "text": "Created attachment 28912\nPatch", "id": 159894, "time": "2012-06-11T21:00:12Z", "creator": "matthias8283@gmx.at", "creation_time": "2012-06-11T21:00:12Z", "is_private": false}, {"count": 16, "tags": [], "text": "Created attachment 29015\na layoutengine test case\n\nI believe the submitted fix is correct. In my view the code for footnotes is very convoluted, but within that context the fix is correct.\n\nThis new attachment is a layoutengine test case that executes the code fix.", "attachment_id": 29015, "bug_id": 48063, "id": 160375, "time": "2012-07-01T00:25:48Z", "creator": "lmpmbernardo@gmail.com", "creation_time": "2012-07-01T00:25:48Z", "is_private": false}, {"count": 17, "tags": [], "creator": "lmpmbernardo@gmail.com", "attachment_id": null, "id": 162856, "time": "2012-10-21T19:31:25Z", "bug_id": 48063, "creation_time": "2012-10-21T19:31:25Z", "is_private": false, "text": "patches 28912 and 29015 applied: http://svn.apache.org/viewvc?view=revision&revision=1400704"}]