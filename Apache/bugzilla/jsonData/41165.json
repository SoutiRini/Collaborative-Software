[{"count": 0, "tags": [], "bug_id": 41165, "attachment_id": null, "id": 96848, "time": "2006-12-12T15:24:02Z", "creator": "archie@dellroad.org", "creation_time": "2006-12-12T15:24:02Z", "is_private": false, "text": "We use a \"updates outside of the Swing thread\" detector. It yeilded this when\nselecting text:\n\n     [java] java.lang.Exception: Swing Component Accessed From Wrong Thread:\n     [java]     at\ncom.awarix.swing.ThreadCheckingRepaintManager.checkThread(ThreadCheckingRepaintManager.java:67)\n     [java]     at\ncom.awarix.swing.ThreadCheckingRepaintManager.addDirtyRegion(ThreadCheckingRepaintManager.java:74)\n     [java]     at javax.swing.JComponent.repaint(JComponent.java:4518)\n     [java]     at javax.swing.JComponent.repaint(JComponent.java:4532)\n     [java]     at\norg.apache.batik.swing.gvt.TextSelectionManager$TextSelectionListener.selectionStarted(Unknown\nSource)\n     [java]     at\norg.apache.batik.swing.gvt.TextSelectionManager$TextSelectionListener.selectionCleared(Unknown\nSource)\n     [java]     at\norg.apache.batik.gvt.text.ConcreteTextSelector.dispatchSelectionEvent(Unknown\nSource)\n     [java]     at\norg.apache.batik.gvt.text.ConcreteTextSelector.clearSelection(Unknown Source)\n     [java]     at\norg.apache.batik.swing.gvt.TextSelectionManager$MouseListener.mousePressed(Unknown\nSource)\n     [java]     at\norg.apache.batik.gvt.event.AWTEventDispatcher.processMouseEvent(Unknown Source)\n     [java]     at\norg.apache.batik.gvt.event.AWTEventDispatcher.dispatchMouseEvent(Unknown Source)\n     [java]     at\norg.apache.batik.gvt.event.AWTEventDispatcher.dispatchEvent(Unknown Source)\n     [java]     at\norg.apache.batik.gvt.event.AWTEventDispatcher.mousePressed(Unknown Source)\n     [java]     at org.apache.batik.swing.svg.JSVGComponent$18.run(Unknown Source)\n     [java]     at org.apache.batik.util.RunnableQueue.run(Unknown Source)\n     [java]     at java.lang.Thread.run(Thread.java:595)\n\nHere's another one:\n\n     [java] java.lang.Exception: Swing Component Accessed From Wrong Thread:\n     [java]     at\ncom.awarix.swing.ThreadCheckingRepaintManager.checkThread(ThreadCheckingRepaintManager.java:67)\n     [java]     at\ncom.awarix.swing.ThreadCheckingRepaintManager.addDirtyRegion(ThreadCheckingRepaintManager.java:74)\n     [java]     at javax.swing.JComponent.repaint(JComponent.java:4518)\n     [java]     at java.awt.Component.repaint(Component.java:2731)\n     [java]     at\norg.apache.batik.util.gui.MemoryMonitor$RepaintThread.run(Unknown Source)"}, {"count": 1, "tags": [], "creator": "info@dvholten.de", "attachment_id": null, "text": "fumbling with swing-components from any other thread than the event-thread may\nlead to trouble - therefore, i think your thread-checker is a quite good idea.\nbut in the case of repaint(), it is safe practice: it just queues an\nupdate-request for later processing.", "id": 97115, "time": "2006-12-20T02:32:42Z", "bug_id": 41165, "creation_time": "2006-12-20T02:32:42Z", "is_private": false}, {"count": 2, "tags": [], "creator": "deweese@apache.org", "attachment_id": null, "text": "Yes, Deiter is correct.  'repaint()' is one of the few methods that is\ndocumented as being thread safe:\n\n  The following is from this URL:\n\nhttp://java.sun.com/products/jfc/tsc/articles/threads/threads1.html#exceptions\n\nThe following JComponent methods are safe to call from any thread: repaint(),\nrevalidate(), and invalidate(). The repaint() and revalidate() methods queue\nrequests for the event-dispatching thread to call paint() and validate(),\nrespectively. The invalidate() method just marks a component and all of its\ndirect ancestors as requiring validation.\n", "id": 97185, "time": "2006-12-22T03:08:38Z", "bug_id": 41165, "creation_time": "2006-12-22T03:08:38Z", "is_private": false}]