[{"count": 0, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": 25123, "text": "Created attachment 25123\nthreads_20100313_0109.txt - thread dump\n\nSteps to reproduce:\n\n1. Install TC 6.0.26\nI am using Sun JRE 6u18\n\n2. Download tomahawk-examples-1.1.8-bin.zip from\nhttp://myfaces.apache.org/tomahawk/download.html\nand copy myfaces-example-simple-1.1.8.war from the archive to the webapps folder of Tomcat\n\n3. Start Tomcat and browse http://localhost:8080/myfaces-example-simple-1.1.8/\n\n4. Try to open several links (Sample 1, .. Filtered Stylesheet) at the same time.\nI am using Snap Links plugin for Firefox, http://snaplinks.mozdev.org/\n\n5. Several Tabs are opened in the browser to load the pages, but pages never load.\n\n6. Using jvisualvm tool I can see that there is a deadlock in Tomcat. The thread dump is attached.\n\nCiting from the dump:\n\nFound one Java-level deadlock:\n=============================\n\"http-8080-6\":\n  waiting to lock monitor 0x1731bafc (object 0x08189dd0, a org.apache.catalina.loader.WebappClassLoader),\n  which is held by \"http-8080-1\"\n\"http-8080-1\":\n  waiting to lock monitor 0x1731b88c (object 0x13bdb118, a java.lang.String),\n  which is held by \"http-8080-5\"\n\"http-8080-5\":\n  waiting to lock monitor 0x1731bafc (object 0x08189dd0, a org.apache.catalina.loader.WebappClassLoader),\n  which is held by \"http-8080-1\"", "id": 135311, "time": "2010-03-12T22:21:19Z", "bug_id": 48903, "creation_time": "2010-03-12T22:21:19Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 48903, "attachment_id": null, "id": 135312, "time": "2010-03-12T22:33:19Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-03-12T22:33:19Z", "is_private": false, "text": "What is strange is that I cannot confirm that org.apache.catalina.loader.WebappClassLoader is held by \"http-8080-1\" -- that is not shown in the stacktrace of thread \"http-8080-1\"."}, {"count": 2, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "Digging further I should say that\n1. There is, indeed, lock on the ClassLoader in the native code.\n\n2. There is \"experimental\" option to turn off that locking. E.g., described here:\nhttp://underlap.blogspot.com/2006/11/experimental-fix-for-sunbug-4670071.html\nand thus Tomcat is not the first one to run into such an issue.\n\n3. Evaluation part of http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4670071\nmentions API change to allow parallel classloading, and API change actually means that it will be no sooner than JDK7. See\n\nhttp://java.sun.com/javase/7/docs/api/java/lang/ClassLoader.html\nmethods registerAsParallelCapable() and getClassLoadingLock(String)\n\n\nWhile I was evaluating this, several comments were added to bug 48694, especially attachment 25124, which is another sample of a deadlock (in that case JRE is 1.6.0_13).", "id": 135318, "time": "2010-03-13T03:07:26Z", "bug_id": 48903, "creation_time": "2010-03-13T03:07:26Z", "is_private": false}, {"count": 3, "tags": [], "text": "Created attachment 25125\nMyClassLoader.java - sample of reflectively calling JDK7 API\n\nI just tested that the JDK7 ClassLoader methods that I mentioned in comment 2 can be reflectively called by a class compiled with JDK 6. I was afraid that registerAsParallelCapable() will not work when called through reflection.\n\nI am attaching a sample ClassLoader implementation that calls those methods.\nOn success it prints something like this:\n\nResult: true\nLock: java.lang.Object@1befab0\n\nwhere the lock is not the classloader, but some other object.\nI tested that it runs successfully with JDK7 early access milestone 5 (jre-7-ea-bin-b76-windows-i586-12_nov_2009).", "attachment_id": 25125, "id": 135324, "creator": "knst.kolinko@gmail.com", "time": "2010-03-14T00:31:00Z", "bug_id": 48903, "creation_time": "2010-03-14T00:31:00Z", "is_private": false}, {"count": 4, "attachment_id": null, "creator": "knst.kolinko@gmail.com", "text": "For reference: synchronized(name.intern()) was introduced by patches to bug 44041 and bug 48694. (r881748 and r915592 - Tomcat 6.0.21 and 6.0.25 respectively).\n\nI tested Tomcat 6.0.24 with myfaces-example-simple-1.1.8.war as described in comment 0 and I do not observe this issue with JRE 6u18, but do observe it with JRE 7 beta milestone 5 (1.7.0-ea-b76).", "id": 135639, "time": "2010-03-25T18:44:47Z", "bug_id": 48903, "creation_time": "2010-03-25T18:44:47Z", "tags": [], "is_private": false}, {"count": 5, "attachment_id": null, "creator": "markt@apache.org", "text": "The simple solution of synchronized(this) has been applied to trunk and proposed for 6.0.x. Alternatives will be explored in 7.0.x and back-ported once proven stable.", "id": 135641, "time": "2010-03-25T19:56:28Z", "bug_id": 48903, "creation_time": "2010-03-25T19:56:28Z", "tags": [], "is_private": false}, {"count": 6, "tags": [], "bug_id": 48903, "attachment_id": 25185, "id": 135642, "time": "2010-03-25T19:57:49Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-03-25T19:57:49Z", "is_private": false, "text": "Created attachment 25185\n2010-03-15_tc6_bug48903_v2.patch\n\nPatch for the current tc6.0.x (as of rev.922264) that fixes this issue *and* introduces a new system property and helper class to make use of the new JRE 7 feature of parallel classloading.\n\n\nKnown issues with this patch, found during review\n(should be fixed before applying it):\n-----------------------------------------------------\n1. \"JasperLoader extends LockAwareURLClassLoader\":\nIt creates a dependency between Jasper and Catalina. Jasper should be independent.\n\nMaybe move the class into o.a.tomcat.util.<something>.*\n\nMay consider to rename the package part of the \"CLASSLOADER_LOCK_POLICY\" system property as well.\n\n\n2. Use the StringManager for i18n.\n\nThough as far as I see all those are debug messages, so i18n may be not necessary there.\n\n3. o.a.catalina.loader.StandardClassLoader should also inherit from LockAwareURLClassLoader and call \"registerAsParallelCapable\", like JasperLoader does.\n\nIt means that LockAwareURLClassLoader class should be included into bootstrap.jar and removed from other Tomcat jars.\n\nThus, some changes to the build.xml file are also necessary.\n\n\n4. I have doubt that support for the \"name\" as value of CLASSLOADER_LOCK_POLICY is needed. Even if it works with recent JRE 6 with some (undocumented) options, I will not recommend it for production. Is anybody there who needs that feature?\n\n5. JRE 7 is not released yet, so something can still be changing there."}, {"count": 7, "tags": [], "bug_id": 48903, "attachment_id": null, "id": 136264, "time": "2010-04-20T11:26:18Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-04-20T11:26:18Z", "is_private": false, "text": "*** Bug 48694 has been marked as a duplicate of this bug. ***"}, {"count": 8, "tags": [], "bug_id": 48903, "attachment_id": null, "id": 136265, "time": "2010-04-20T11:27:55Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-04-20T11:27:55Z", "is_private": false, "text": "The issue was fixed in 5.5.x in r935947 and will be in 5.5.30 onwards."}, {"count": 9, "attachment_id": null, "creator": "aullrich@blackducksoftware.com", "text": "We are running hudson 1.356, java.exe from jdk1.6.0_14 and tomcat 6.0.26 and get deadlocks\nExcerpts below - going to attach full log.\n\nFound one Java-level deadlock:\n=============================\n\"Handling GET /job/Project1Trunk/ : http-8080-40\":\n  waiting to lock monitor 0x000000005b013e50 (object 0x00002aaac2cc9b58, a java.net.URLClassLoader),\n  which is held by \"Handling GET /job/Project2Trunk/disk-usage/graph : http-8080-22\"\n\"Handling GET /job/Project2Trunk/disk-usage/graph : http-8080-22\":\n  waiting to lock monitor 0x000000005b986958 (object 0x00002aaab4465798, a java.lang.String),\n  which is held by \"Handling GET /job/Project2Trunk/emma/graph : http-8080-14\"\n\"Handling GET /job/Project2Trunk/emma/graph : http-8080-14\":\n  waiting to lock monitor 0x000000005b0169a0 (object 0x00002aaac266fc30, a org.apache.catalina.loader.WebappClassLoader),\n  which is held by \"Handling GET /job/Project2Trunk/test/trend : http-8080-15\"\n\"Handling GET /job/Project2Trunk/test/trend : http-8080-15\":\n  waiting to lock monitor 0x000000005b986958 (object 0x00002aaab4465798, a java.lang.String),\n  which is held by \"Handling GET /job/Project2Trunk/emma/graph : http-8080-14\"\n        \nJava stack information for the threads listed above:\n===================================================\n\"Handling GET /job/Project1Trunk/ : http-8080-40\":\n        at sun.misc.Unsafe.defineClass(Native Method)\n        at sun.reflect.ClassDefiner.defineClass(ClassDefiner.java:45)\n        at sun.reflect.MethodAccessorGenerator$1.run(MethodAccessorGenerator.java:381)\n...\n\n\"Handling GET /job/Project2Trunk/disk-usage/graph : http-8080-22\":\n        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1394)\n        - waiting to lock <0x00002aaab4465798> (a java.lang.String)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:300)\n        - locked <0x00002aaac2c3ed48> (a hudson.ClassicPluginStrategy$DependencyClassLoader)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:300)\n        - locked <0x00002aaac2cc9b58> (a java.net.URLClassLoader)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:252)\n        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)\n        - locked <0x00002aaac2cc9b58> (a java.net.URLClassLoader)\n        at hudson.plugins.disk_usage.ProjectDiskUsageAction.doGraph(ProjectDiskUsageAction.java:106)\n...\n\n\"Handling GET /job/Project2Trunk/emma/graph : http-8080-14\":\n        at java.lang.ClassLoader.checkCerts(ClassLoader.java:752)\n        - waiting to lock <0x00002aaac266fc30> (a org.apache.catalina.loader.WebappClassLoader)\n        at java.lang.ClassLoader.preDefineClass(ClassLoader.java:488)\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:615)\n        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:124)\n        at org.apache.catalina.loader.WebappClassLoader.findClassInternal(WebappClassLoader.java:2527)\n        - locked <0x00002aaab4465798> (a java.lang.String)\n        at org.apache.catalina.loader.WebappClassLoader.findClass(WebappClassLoader.java:1010)\n        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1483)\n        - locked <0x00002aaab4465798> (a java.lang.String)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:300)\n        - locked <0x00002aaac2ce9f90> (a hudson.ClassicPluginStrategy$DependencyClassLoader)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:300)\n        - locked <0x00002aaac2ce9f08> (a java.net.URLClassLoader)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:252)\n        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)\n        - locked <0x00002aaac2ce9f08> (a java.net.URLClassLoader)\n        at hudson.plugins.emma.CoverageObject.doGraph(CoverageObject.java:156)\n        at hudson.plugins.emma.EmmaProjectAction.doGraph(EmmaProjectAction.java:52)\n....\n\n\"Handling GET /job/Project2Trunk/test/trend : http-8080-15\":\n        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1394)\n        - waiting to lock <0x00002aaab4465798> (a java.lang.String)\n        at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1361)\n        at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)\n        - locked <0x00002aaac266fc30> (a org.apache.catalina.loader.WebappClassLoader)\n        at hudson.tasks.test.AbstractTestResultAction.buildDataSet(AbstractTestResultAction.java:244)\n        at hudson.tasks.test.AbstractTestResultAction.doGraph(AbstractTestResultAction.java:208)\n        at hudson.tasks.test.TestResultProjectAction.doTrend(TestResultProjectAction.java:97)", "id": 136704, "time": "2010-05-06T14:37:06Z", "bug_id": 48903, "creation_time": "2010-05-06T14:37:06Z", "tags": [], "is_private": false}, {"count": 10, "tags": [], "creator": "aullrich@blackducksoftware.com", "attachment_id": 25409, "text": "Created attachment 25409\nthread dump - hudson", "id": 136705, "time": "2010-05-06T14:39:15Z", "bug_id": 48903, "creation_time": "2010-05-06T14:39:15Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 48903, "attachment_id": null, "id": 136706, "time": "2010-05-06T15:20:20Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2010-05-06T15:20:20Z", "is_private": false, "text": "Fixed in TC 6.0.x by r941868. Will be part of 6.0.27."}, {"count": 12, "tags": [], "bug_id": 48903, "attachment_id": null, "id": 151373, "time": "2011-11-10T18:19:00Z", "creator": "greg.walters@contegix.com", "creation_time": "2011-11-10T18:19:00Z", "is_private": false, "text": "I've been able to confirm that this bug has not been fixed in 6.0.28 and 6.0.33. Possible regression? I'll attach a full log as soon as I get permission to release the logs but in the meantime here's the stack-trace I get:\n\n**\n@400000004ebc0ed6372bb204 \"http-scrubbed%2F172.18.12.12-8083-144\" daemon prio=10 tid=0x00002aaae40c9800 nid=0x4d09 waiting for moni\ntor entry [0x000000004b0dd000]\n@400000004ebc0ed6372bb9d4    java.lang.Thread.State: BLOCKED (on object monitor)\n@400000004ebc0ed6372bbdbc       at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1559)\n@400000004ebc0ed6372c07f4       - waiting to lock <0x00002aaab41214a0> (a org.apache.catalina.loader.WebappClassLoader)\n@400000004ebc0ed6372c0fc4       at org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1526)\n@400000004ebc0ed6372c13ac       at org.apache.cxf.common.classloader.ClassLoaderUtils.loadClass(ClassLoaderUtils.java:217)\n@400000004ebc0ed6372c1b7c       at org.apache.cxf.jaxws.support.JaxWsServiceConfiguration.getRequestWrapper(JaxWsServiceConfiguration.java:629)\n@400000004ebc0ed6372c36d4       at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.getRequestWrapper(ReflectionServiceFactoryBean.java:2053)\n@400000004ebc0ed6372c428c       at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWrapping(JaxWsServiceFactoryBean.java:311)\n@400000004ebc0ed6372c4a5c       at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperation(JaxWsServiceFactoryBean.java:211)\n@400000004ebc0ed6372c7554       at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeWSDLOperations(ReflectionServiceFactoryBean.java:551)\n@400000004ebc0ed6372c7d24       at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.initializeWSDLOperations(JaxWsServiceFactoryBean.java:253)\n@400000004ebc0ed6372c84f4       at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.buildServiceFromWSDL(ReflectionServiceFactoryBean.java:335)\n@400000004ebc0ed6372ca04c       at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:435)\n@400000004ebc0ed6372cac04       at org.apache.cxf.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:192)\n@400000004ebc0ed6372cafec       at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:164)\n@400000004ebc0ed6372cc75c       at org.apache.cxf.jaxws.ServiceImpl.createPort(ServiceImpl.java:408)\n@400000004ebc0ed6372ccb44       at org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:292)\n@400000004ebc0ed6372ccf2c       at org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:287)\n@400000004ebc0ed6372cd6fc       at javax.xml.ws.Service.getPort(Service.java:161)\n@400000004ebc0ed6372cfa24       at org.jivesoftware.webservices.ServiceProvider.getUserService(ServiceProvider.java:108)\n@400000004ebc0ed6372d01f4       at org.apache.jsp.index_jsp._jspService(index_jsp.java:642)\n@400000004ebc0ed6372d05dc       at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)\n@400000004ebc0ed6372d09c4       at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n@400000004ebc0ed6372d0dac       at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:388)\n@400000004ebc0ed6372d2904       at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:313)\n@400000004ebc0ed6372d2cec       at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:260)\n@400000004ebc0ed6372d30d4       at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)\n@400000004ebc0ed6372d38a4       at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)\n@400000004ebc0ed6372d4c2c       at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n@400000004ebc0ed6372d53fc       at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)\n@400000004ebc0ed6372d57e4       at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)\n@400000004ebc0ed6372d5bcc       at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n@400000004ebc0ed6372d8aac       at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n@400000004ebc0ed6372d8e94       at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n@400000004ebc0ed6372d9664       at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n@400000004ebc0ed6372d9a4c       at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n@400000004ebc0ed6372e07ac       at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)\n@400000004ebc0ed6372e0b94       at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n@400000004ebc0ed6372e1364       at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:291)\n@400000004ebc0ed6372e4244       at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:859)\n@400000004ebc0ed6372e4a14       at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:602)\n@400000004ebc0ed6372e4dfc       at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n@400000004ebc0ed6372e55cc       at java.lang.Thread.run(Thread.java:619)\n**\n\nTo reproduce the issue I need only start multiple http requests to tomcat within a short time."}, {"count": 13, "tags": [], "bug_id": 48903, "attachment_id": 27920, "id": 151374, "time": "2011-11-10T18:56:49Z", "creator": "greg.walters@contegix.com", "creation_time": "2011-11-10T18:56:49Z", "is_private": false, "text": "Created attachment 27920\nThread dump of tomcat showing blocked threads"}, {"count": 14, "tags": [], "bug_id": 48903, "attachment_id": null, "id": 151379, "time": "2011-11-10T19:39:49Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2011-11-10T19:39:49Z", "is_private": false, "text": "There's no deadlock in your thread dump. There's just one thread holding a lock and many other threads queing up behind. The thread that holds the lock is\n\n@400000004ebc1d9333afcdcc \"http-j2ee.www.igniterealtime.org%2F172.18.12.12-8083-145\" daemon prio=10 tid=0x00002aaae437f000 nid=0x6162 runnable [0x0000000040e39000]\n@400000004ebc1d9333aff0f4    java.lang.Thread.State: RUNNABLE\n@400000004ebc1d9333b02b8c \tat java.lang.Throwable.fillInStackTrace(Native Method)\n@400000004ebc1d9333b02f74 \t- locked <0x00002aaad7afb280> (a java.security.PrivilegedActionException)\n@400000004ebc1d9333b04acc \tat java.lang.Throwable.<init>(Throwable.java:241)\n@400000004ebc1d9333b0623c \tat java.lang.Exception.<init>(Exception.java:77)\n@400000004ebc1d9333b079ac \tat java.security.PrivilegedActionException.<init>(PrivilegedActionException.java:48)\n@400000004ebc1d9333b0911c \tat java.security.AccessController.doPrivileged(Native Method)\n@400000004ebc1d9333b0ac74 \tat java.net.URLClassLoader.findClass(URLClassLoader.java:190)\n@400000004ebc1d9333b10a34 \tat java.lang.ClassLoader.loadClass(ClassLoader.java:307)\n@400000004ebc1d9333b10e1c \t- locked <0x00002aaab360cb98> (a sun.misc.Launcher$AppClassLoader)\n@400000004ebc1d9333b12d5c \tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)\n@400000004ebc1d9333b13144 \t- locked <0x00002aaab360cb98> (a sun.misc.Launcher$AppClassLoader)\n@400000004ebc1d9333b16024 \tat java.lang.ClassLoader.loadClass(ClassLoader.java:248)\n@400000004ebc1d9333b17794 \tat org.apache.catalina.loader.WebappClassLoader.loadClass(WebappClassLoader.java:1595)\n@400000004ebc1d9333b17b7c \t- locked <0x00002aaab4024170> (a org.apache.catalina.loader.WebappClassLoader)\n\nAs you can see the thread handles an exception. Stack creation for an exception can be quite slow, especially if it happens very often. Bugzilla is not a support forum. Please followup with your problem on the Tomcat users list.\n\nRegards,\n\nRainer"}]