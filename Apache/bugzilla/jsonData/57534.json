[{"count": 0, "tags": [], "bug_id": 57534, "attachment_id": null, "is_private": false, "id": 180752, "time": "2015-02-04T14:07:25Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-02-04T14:07:25Z", "text": "In CorsFilter of trunk\n\nstarting with line 1030:\n[[[\n    /**\n     * {@link Collection} of Simple HTTP request headers. Case in-sensitive.\n     *\n     * @see  <a href=\"http://www.w3.org/TR/cors/#terminology\"\n     *       >http://www.w3.org/TR/cors/#terminology</a>\n     */\n    public static final Collection<String> SIMPLE_HTTP_REQUEST_CONTENT_TYPE_VALUES =\n            new HashSet<>(Arrays.asList(\"application/x-www-form-urlencoded\",\n                    \"multipart/form-data\", \"text/plain\"));\n]]]\n\nstarting with line 641:\n[[[\n                    } else if (\"POST\".equals(method)) {\n                        String contentType = request.getContentType();\n                        if (contentType != null) {\n                            contentType = contentType.toLowerCase().trim();\n                            if (SIMPLE_HTTP_REQUEST_CONTENT_TYPE_VALUES\n                                    .contains(contentType)) {\n                                requestType = CORSRequestType.SIMPLE;\n                            } else {\n                                requestType = CORSRequestType.ACTUAL;\n                            }\n                        }\n                    } else {\n]]]\n\nAccording to w3.org \"Terminology\" link above,\n1) Javadoc for SIMPLE_HTTP_REQUEST_CONTENT_TYPE_VALUES is a bit off (copy-pasted from another field). It is actually a collection of mime-type values for Content-Type header so that this header is treated as a \"simple header\"\n\n2) The check using SIMPLE_HTTP_REQUEST_CONTENT_TYPE_VALUES shall ignore any parameters that may be present in Content-Type header value.\n\nE.g. \"Content-Type: application/x-www-form-urlencoded; charset=UTF-8\"  shall match successfully."}, {"count": 1, "tags": [], "text": "This has the potential to get expensive performance-wise. Parsing mime-types from a content-type header is non-trivial but we do have o.a.tomcat.util.http.parser.MediaType and MediaTypeCache", "attachment_id": null, "id": 180933, "creator": "markt@apache.org", "time": "2015-02-10T23:38:05Z", "bug_id": 57534, "creation_time": "2015-02-10T23:38:05Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 57534, "text": "Parsing is needed when you need the value of a parameter (e.g. charset).\n\nIn this case just trimming at the first ';' is OK.", "id": 180934, "time": "2015-02-10T23:41:59Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2015-02-10T23:41:59Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 57534, "attachment_id": null, "text": "You are right.\n\nWhen I first looked at this I started to look at how the request content-type header was parsed and that has some issues that would need o.a.tomcat.util.http.parser.MediaType to solve but that isn't required for this specific usage.", "id": 180955, "time": "2015-02-11T14:42:00Z", "creator": "markt@apache.org", "creation_time": "2015-02-11T14:42:00Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 57534, "attachment_id": null, "is_private": false, "id": 180968, "time": "2015-02-11T19:24:40Z", "creator": "markt@apache.org", "creation_time": "2015-02-11T19:24:40Z", "text": "Fixed in trunk, 8.0.x (for 8.0.19 onwards( and 7.0.x (for 7.0.60 onwards)"}]