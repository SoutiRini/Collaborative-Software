[{"count": 0, "tags": [], "bug_id": 19150, "attachment_id": null, "is_private": false, "id": 35496, "time": "2003-04-18T13:22:43Z", "creator": "henrik_e_westman@yahoo.se", "creation_time": "2003-04-18T13:22:43Z", "text": "The target below fails because the file can not be found.\n\nThe \".\" in \"cmdline.properties\", is replaced with \"/\" => \"cmdline/properties\",\nmaking the file impossible to find.\n\n\n\t<target name=\"run_mymain\">\n\t\t<java classname=\"org.xpse.MyMain\" fork=\"true\">\n\t\t\t<classpath refid=\"run.path\"/>\n\t\t\t<jvmarg file=\"../../cfg/cmdline.properties\"/>\t\t\n\t\t\t<jvmarg value=\"-Duser.region=US\"/>\n\t\t\t<jvmarg value=\"-Duser.language=en\"/>\n\t\t\t<jvmarg value=\"-Duser.timezone=Europe/Copenhagen\"/>\n\t\t</java>\n\t</target>"}, {"count": 1, "tags": [], "text": "Uhm, no, this is not the problem, I'm afraid.\n\nSee this here (running ant -debug)\n\n>   +Task: java\n>     [java] Executing '/usr/local/java/jdk1.3.1_07/jre/bin/java' with\narguments:     >     [java] '/cfg/cmdline.properties'\n>     [java] '-Duser.region=US'\n>     [java] '-Duser.language=en'\n>     [java] '-Duser.timezone=Europe/Copenhagen'\n>     [java] 'org.xpse.MyMain'\n>     [java] \n>     [java] The ' characters around the executable and arguments are\n>     [java] not part of the command.\n>Execute:Java13CommandLauncher: Executing\n>'/usr/local/java/jdk1.3.1_07/jre/bin/java' with arguments:\n>'/cfg/cmdline.properties'\n>'-Duser.region=US'\n>'-Duser.language=en'\n>'-Duser.timezone=Europe/Copenhagen'\n>'org.xpse.MyMain'\n\n>The ' characters around the executable and arguments are\n>not part of the command.\n\nLooks good, doesn't it, but now ...\n\n>     [java] Exception in thread \"main\" java.lang.NoClassDefFoundError:\n/cfg/cmdline/properties\n>     [java] Java Result: 1\n\nIt is java itself, which doesn't recognize the filename as an option (after all,\nit is no valid option for the java executable) and tries to make a class name\nfrom your filename.\n\nI'm almost sure you wanted to use <arg> insteaf of <jvmarg> to pass the filename\nas an argument to your class.", "is_private": false, "id": 35862, "creator": "bodewig@apache.org", "time": "2003-04-23T09:37:16Z", "bug_id": 19150, "creation_time": "2003-04-23T09:37:16Z", "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 19150, "attachment_id": null, "id": 35881, "time": "2003-04-23T11:27:14Z", "creator": "henrik_e_westman@yahoo.se", "creation_time": "2003-04-23T11:27:14Z", "is_private": false, "text": "Back to the example:\n\n\t<target name=\"run_mymain\">\n\t\t<java classname=\"org.xpse.MyMain\" fork=\"true\">\n\t\t\t<classpath refid=\"run.path\"/>\n\t\t\t<jvmarg file=\"../../cfg/cmdline.properties\"/>\t\t\n\t\t\t<jvmarg value=\"-Duser.region=US\"/>\n\t\t\t<jvmarg value=\"-Duser.language=en\"/>\n\t\t\t<jvmarg value=\"-Duser.timezone=Europe/Copenhagen\"/>\n\t\t</java>\n\t</target>\n\nLet's assume that I want to put the three properties:\n\t\t\t<jvmarg value=\"-Duser.region=US\"/>\n\t\t\t<jvmarg value=\"-Duser.language=en\"/>\n\t\t\t<jvmarg value=\"-Duser.timezone=Europe/Copenhagen\"/>\n\n, in a file called cmdline.properties, instead of one by one, so I try:\n\n\t<target name=\"run_mymain\">\n\t\t<java classname=\"org.xpse.MyMain\" fork=\"true\">\n\t\t\t<classpath refid=\"run.path\"/>\n\t\t\t<jvmarg file=\"../../cfg/cmdline.properties\"/>\t\t\n\t\t</java>\n\t</target>\n\nDo you mean that this is not supposed to be possible ?\nOr is it a bug ?"}, {"count": 3, "tags": [], "text": "I think you are misunderstanding a few things.\n\n(1) jvmarg gets passed to the java VM (i.e. java.exe) and nowhere else.  The VM\ndoesn't know how to read command line arguments from a file.\n\n(2) The file attribute of <jvmarg> means that you want to pass the absolute\npath of the file on the command line - it does not read the file at all.\n", "attachment_id": null, "id": 35884, "creator": "bodewig@apache.org", "time": "2003-04-23T11:54:18Z", "bug_id": 19150, "creation_time": "2003-04-23T11:54:18Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 19150, "attachment_id": null, "id": 35885, "time": "2003-04-23T12:07:08Z", "creator": "henrik_e_westman@yahoo.se", "creation_time": "2003-04-23T12:07:08Z", "is_private": false, "text": "Do you mean that:\n<jvmarg file=\"../../cfg/cmdline.properties\"/>\n\ngets translated into:\n\njava -Dfile=/usr/home/xpse/cfg/cmdline.properties\"/>\n"}, {"count": 5, "tags": [], "bug_id": 19150, "attachment_id": null, "id": 35886, "time": "2003-04-23T12:16:45Z", "creator": "bodewig@apache.org", "creation_time": "2003-04-23T12:16:45Z", "is_private": false, "text": "No, I mean\n\n<jvmarg file=\"../../cfg/cmdline.properties\"/>\n\ngets translated to\n\njava WHATEVER-IS-THE-ABSOLUTE-PATH-OF/cfg/cmdline.properties\n\ni.e, if your build file is in C:\\temp\\cmdltest and you don't fiddle with basedir,\nit gets translated to\n\njava C:\\cfg\\cmdline.properties\n"}, {"count": 6, "tags": [], "bug_id": 19150, "attachment_id": 5985, "id": 35945, "time": "2003-04-24T06:14:48Z", "creator": "henrik_e_westman@yahoo.se", "creation_time": "2003-04-24T06:14:48Z", "is_private": false, "text": "Created attachment 5985\nSimple example of the problem"}, {"count": 7, "tags": [], "bug_id": 19150, "attachment_id": null, "is_private": false, "id": 35946, "time": "2003-04-24T06:20:38Z", "creator": "henrik_e_westman@yahoo.se", "creation_time": "2003-04-24T06:20:38Z", "text": "The attachment is called \"build.zip\" (pls download by right-clicking the link \nand do a Save target as... )\n\nThe directories \"jdk1.3\" and \"jakarta-ant-1.5\", are empty, otherwise the zip \nwould be too large.\n\nPls add suitable distrubtion in the folders."}, {"count": 8, "tags": [], "bug_id": 19150, "attachment_id": null, "id": 35947, "time": "2003-04-24T06:23:12Z", "creator": "henrik_e_westman@yahoo.se", "creation_time": "2003-04-24T06:23:12Z", "is_private": false, "text": "Pls expand the zip directly under c:\\\n\nOtherwise you will have to edit the scripts.\n\nOpena command promt in the \"c:\\build\\prj\\\" folder.\nType \"setenv\"\nType \"ant\"\n\nThis gives the errormessage:\nC:\\build\\prj>ant\nBuildfile: build.xml\n\ninit:\n     [java] java.lang.NoClassDefFoundError: C:\\build\\cfg\\compile/properties\n     [java] Exception in thread \"main\"\n     [java] Java Result: 1\n\nBUILD SUCCESSFUL\nTotal time: 1 second"}, {"count": 9, "tags": [], "text": "Expandig it in C: is hard on a machine that doesn't have drive letters 8-)\nAlso I'm lacking an interpreter for .bar files, but this is not important here,\nmaybe I've been too terse with marking the bug as invalid.\n\nThe file attribute of <jvmarg> does what it is supposed to do - this is also\ndemonstrated by the zip you've attached.  It does not do what you expect it to do,\nbut this is not an Ant bug, it is a misunderstanding from your side.\n\n", "attachment_id": null, "id": 35948, "creator": "bodewig@apache.org", "time": "2003-04-24T06:33:47Z", "bug_id": 19150, "creation_time": "2003-04-24T06:33:47Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 19150, "attachment_id": null, "id": 35954, "time": "2003-04-24T07:58:41Z", "creator": "henrik_e_westman@yahoo.se", "creation_time": "2003-04-24T07:58:41Z", "is_private": false, "text": "My assumption of the file attribute, was that the underlying code reads the \ncmdline args in the file, and puts on the cmdline.\n\n> (2) The file attribute of <jvmarg> means that you want to pass the absolute\n> path of the file on the command line - it does not read the file at all.\n\nI don't understand. Can you please give an example of the usage ?"}, {"count": 11, "tags": [], "bug_id": 19150, "attachment_id": null, "id": 35963, "time": "2003-04-24T09:19:29Z", "creator": "bodewig@apache.org", "creation_time": "2003-04-24T09:19:29Z", "is_private": false, "text": "I think I've understood pretty well what you thought the attribute would do.\n\nI don't have a use case for this attribute in the <jvmarg> context.  <jvmarg>\nsupports this attribute as it is implemented by the same code that also implements\n<arg> - and there are tons of use-cases where you want to pass the absolute\npath of a file as a command line argument to an arbitrary executable."}, {"count": 12, "tags": [], "bug_id": 19150, "attachment_id": null, "id": 35973, "time": "2003-04-24T11:41:01Z", "creator": "henrik_e_westman@yahoo.se", "creation_time": "2003-04-24T11:41:01Z", "is_private": false, "text": "Is it wrong to say then, that if you ever use the file attribute of the \n<jvmarg> task, it will always render the error:\n\n     [java] java.lang.NoClassDefFoundError: C:\\build\\cfg\\compile\n\n, no matter how you use it, making the file attribute useless !?\n\n"}, {"count": 13, "tags": [], "bug_id": 19150, "attachment_id": null, "id": 35974, "time": "2003-04-24T11:56:03Z", "creator": "bodewig@apache.org", "creation_time": "2003-04-24T11:56:03Z", "is_private": false, "text": "It may depend on the Java VM.  It could be that java in some future version\nwill have a command line option that takes an additional file argument.\n\nOK, this has lead me to construct an esoteric use-case:\n\n<java classname=\"...\">\n  <jvmarg value=\"-classpath\"/>\n  <jvmarg file=\"build/my.jar\"/>\n</java>\n\nwill invoke java with the arguments -classpath FULL-PATH-TO/build/my.jar.\n\nIn this case, it will not lead to the error message you've seen.  It is not\na good use-case (and I don't know of any good one, I already said so), but it\nis an expamle where the outcome is not the NoClassDefFoundError.\n\nIf Java 47.11 is going to have an option -paramfile that expects a filename\nas additional parameter, the file attribute of jvmarg has suddenly become\nuseful."}, {"count": 14, "tags": [], "text": "Thanks,\nnow I get it.\n\nThe Ant documentation currently has no examples of how to use the file \nattribute in this context.", "is_private": false, "id": 35980, "creator": "henrik_e_westman@yahoo.se", "time": "2003-04-24T12:59:47Z", "bug_id": 19150, "creation_time": "2003-04-24T12:59:47Z", "attachment_id": null}]