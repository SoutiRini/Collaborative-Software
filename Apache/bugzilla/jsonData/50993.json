[{"count": 0, "tags": [], "bug_id": 50993, "attachment_id": null, "id": 145377, "time": "2011-03-29T13:37:25Z", "creator": "peter.nordquist@pnl.gov", "creation_time": "2011-03-29T13:37:25Z", "is_private": false, "text": "Loading the attached document with org.apache.poi.xwpf.usermodel.XWPFDocument(InputStream is) causes an OutOfMemory Exception with 4GB of heap space but with 8GB it does work.  We use POI in an Application Server and multiple users using the system will cause this problem more frequently.  I realize it is a ~23k page document and it seems to take some time to load into any editor.\n\nExample Stack Trace:\n\nException in thread \"main\" java.lang.OutOfMemoryError: Java heap space\n\tat org.apache.xmlbeans.impl.store.Cur$CurLoadContext.attr(Cur.java:3039)\n\tat org.apache.xmlbeans.impl.store.Cur$CurLoadContext.attr(Cur.java:3060)\n\tat org.apache.xmlbeans.impl.store.Locale$SaxHandler.startElement(Locale.java:3254)\n\tat org.apache.xmlbeans.impl.piccolo.xml.Piccolo.reportStartTag(Piccolo.java:1082)\n\tat org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer.parseAttributesNS(PiccoloLexer.java:1802)\n\tat org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer.parseOpenTagNS(PiccoloLexer.java:1521)\n\tat org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer.parseTagNS(PiccoloLexer.java:1362)\n\tat org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer.parseXMLNS(PiccoloLexer.java:1293)\n\tat org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer.parseXML(PiccoloLexer.java:1261)\n\tat org.apache.xmlbeans.impl.piccolo.xml.PiccoloLexer.yylex(PiccoloLexer.java:4808)\n\tat org.apache.xmlbeans.impl.piccolo.xml.Piccolo.yylex(Piccolo.java:1290)\n\tat org.apache.xmlbeans.impl.piccolo.xml.Piccolo.yyparse(Piccolo.java:1400)\n\tat org.apache.xmlbeans.impl.piccolo.xml.Piccolo.parse(Piccolo.java:714)\n\tat org.apache.xmlbeans.impl.store.Locale$SaxLoader.load(Locale.java:3439)\n\tat org.apache.xmlbeans.impl.store.Locale.parseToXmlObject(Locale.java:1270)\n\tat org.apache.xmlbeans.impl.store.Locale.parseToXmlObject(Locale.java:1257)\n\tat org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase.parse(SchemaTypeLoaderBase.java:345)\n\tat org.openxmlformats.schemas.wordprocessingml.x2006.main.DocumentDocument$Factory.parse(Unknown Source)\n\tat org.apache.poi.xwpf.usermodel.XWPFDocument.onDocumentRead(XWPFDocument.java:135)\n\tat org.apache.poi.POIXMLDocument.load(POIXMLDocument.java:190)\n\tat org.apache.poi.xwpf.usermodel.XWPFDocument.<init>(XWPFDocument.java:114)\n\tat LoadBigDoc.main(LoadBigDoc.java:12)\n\n\nExample Code:\nimport java.io.BufferedInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.InputStream;\n\nimport org.apache.poi.xwpf.usermodel.XWPFDocument;\n\npublic class LoadBigDoc {\n\n  public static void main(final String[] args) throws Exception {\n    final InputStream is = new BufferedInputStream(new FileInputStream(new File(\"ANA3.blast.docx\")));\n    new XWPFDocument(is);\n  }\n}\n\nThis code assumes it is run with the correct classpath and the file is in the current working directory.\n\nPlatforms:\nWindows 7 64-bit\nMac OS X 10.6.7 64-bit\nRHEL 5.5 64-bit\n\nAll running Sun JDK 1.6.0_20 64-bit"}, {"count": 1, "tags": [], "bug_id": 50993, "attachment_id": null, "id": 145379, "time": "2011-03-29T13:51:14Z", "creator": "peter.nordquist@pnl.gov", "creation_time": "2011-03-29T13:51:14Z", "is_private": false, "text": "Since I can't attach the file here it is at https://fx.pnl.gov/Files.aspx?EmailID=8fbf4bdb-5af1-46c0-90dc-2c0980e173e9.  This file will only be available for 10 days but I can send another link if you still need it"}, {"text": "POI has to load the whole document into memory using the usermodel and into Java objects.\n\nAs I write this Microsoft Word is still sequencing the pages in is going for minutes and I am only on page 600. I have a fast mac with 8GB.\n\nYou are going to need to rethink your architecture. Please explain the use case on the user list and you should get some help. There are some less memory intensive techniques.\n\nOne question is why are you producing what looks like fixed character width formatted program output into Word XML.\n\nRegards,\nDave", "tags": [], "bug_id": 50993, "attachment_id": null, "count": 2, "id": 145381, "time": "2011-03-29T14:21:11Z", "creator": "dfisher@jmlafferty.com", "creation_time": "2011-03-29T14:21:11Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 50993, "attachment_id": null, "text": "@Dave\n\nThe following points in your response are meaningless and I will address them one at a time:\n\n1) \"need to rethink your architecture\"\n\nThe chosen architecture is not the reason for this bug report.\n\n2) \"Please explain the use case\"\n\nThird party documents are being analyzed.  Part of the analysis is to extract text and images.  The original documents cannot be altered.\n\n3) \"One question is why are you producing what looks like fixed character width\nformatted program output into Word XML\"\n\nThe document contents and format are not the reason for this bug report.\n\n4) \"There are some less memory intensive techniques.\"\n\nPlease supply the information.", "id": 145382, "time": "2011-03-29T14:41:17Z", "creator": "ryan.lamothe@quantumworx.com", "creation_time": "2011-03-29T14:41:17Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 50993, "attachment_id": null, "text": "@Ryan -\n\nThis is a huge file. The 13 MB of the docx expands into a 33MB word/document.xml\n\nPOI turns this into a Java object for each bit of xml in those 33MB and it all must be in memory in the standard case. This easily is in the 4GB to 8GB range. We are not going to fix the standard method. We would consider patches that might help.\n\nAs far as the architecture is concerned I would not want to ever load anything so large into a web server like Apache Tomcat.\n\nBy asking what the use case is allows an intelligent discussion about what techniques are available and the correct place to do that is on the POI User list and it is not in a bugzilla entry.\n\nThat is how POI works.\n\nWe have no idea for what purpose you are loading this data into your web server. Do you intend to find results? Are you analyzing them? So, let's have a dialog, but on the user list.\n\nIf you want to discuss different algorithms that might solve the problem then please try the POI Developer list.\n\nIf you search bugzilla and the lists about OutOfMemory I think you will find my response consistent. I'm sorry if it was short this time.", "id": 145384, "time": "2011-03-29T16:15:10Z", "creator": "dfisher@jmlafferty.com", "creation_time": "2011-03-29T16:15:10Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 50993, "text": "Sorry for not including this earlier but we are using POI in JBoss Application Server 5.1.0.GA in a Stateless EJB for document extraction in a pipeline.  The final consumer is not a web application but another Java EE service.  It's clear that you want me to post this on the Users list so I will do that.  If you have any time, is there a streaming/event/sax parser for this like the Excel org.apache.poi.xssf.eventusermodel?", "id": 145385, "time": "2011-03-29T16:29:45Z", "creator": "peter.nordquist@pnl.gov", "creation_time": "2011-03-29T16:29:45Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 50993, "is_private": false, "text": "This is common have a look at http://poi.apache.org/text-extraction.html and see if the WordExtractor helps.\n\nYou'll get better help on this on the user list. There is more visibility. We hope for more developers, but we have lots of users.\n\nSorry if I was short, but I am a busy project manager.", "id": 145390, "time": "2011-03-29T18:03:03Z", "creator": "dfisher@jmlafferty.com", "creation_time": "2011-03-29T18:03:03Z", "attachment_id": null}]