[{"count": 0, "tags": [], "bug_id": 44034, "text": "http://httpd.apache.org/docs/2.2/new_features_2_2.html\n\nDoc says:\n Monitor hook added \n Monitor hook enables modules to run regular/scheduled jobs in the parent \n(root) process. \n\n\nbut mpm_winnt doesn't call monitor hook.", "id": 111501, "time": "2007-12-06T06:32:58Z", "creator": "takashi.asfbugzilla@tks.st", "creation_time": "2007-12-06T06:32:58Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 44034, "text": "Win32 doesn't have the same process separation model as unix, so this one\nisn't trivial to solve.\n\nIt would seem trivial to execute this monitor in the 'parent'.  However,\nthe parent actually isn't interrelated to the children in the same way\nas on unix.  On Windows, there is a process loop in the child itself which\ndoes all of the work, and the parent simply pauses until the child dies,\nor until the server is told to shut down (and it signals the child as such).\n\nSo... the answer would appear to be, add the monitor hook to the parent.\nBut we need to be aware that things like the error log, listening sockets\netc, are actually being controlled by the child at that point.\n\nSo more information on your use case would be very interesting, since it's\nreally the users that dictate how we should fix this.", "id": 112311, "time": "2007-12-30T21:11:28Z", "creator": "wrowe@apache.org", "creation_time": "2007-12-30T21:11:28Z", "is_private": false, "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "wrowe@apache.org", "is_private": false, "id": 112315, "time": "2007-12-30T22:04:54Z", "bug_id": 44034, "creation_time": "2007-12-30T22:04:54Z", "tags": [], "text": "Interestingly, neither do BeOS, OS2 or the Event MPM's, because that hook\nis entirely predicated on AP_MPM_WANT_WAIT_OR_TIMEOUT.\n\nIt appears that a minimal parent-process implementation would add\n\n/* number of calls to wait_or_timeout between writable probes,\n * which means nothing other than monitor hook callbacks on win32\n */\n#ifndef INTERVAL_OF_WRITABLE_PROBES\n#define INTERVAL_OF_WRITABLE_PROBES 10\n#endif\n\nand replace\n\n    rv = WaitForMultipleObjects(NUM_WAIT_HANDLES, (HANDLE *) event_handles,\nFALSE, INFINITE);\n\nwith\n\n    do {\n        rv = WaitForMultipleObjects(NUM_WAIT_HANDLES, (HANDLE *) event_handles, \n                                    FALSE, SCOREBOARD_MAINTENANCE_INTERVAL \n                                             / INTERVAL_OF_WRITABLE_PROBES \n                                                 / 1000);\n\n        ap_run_monitor(p);\n    } while (rv == WAIT_TIMEOUT);\n\nwhere mpm_winnt already defines SCOREBOARD_MAINTENANCE_INTERVAL as 1000000.\n"}, {"count": 3, "tags": [], "bug_id": 44034, "text": "As far as I can determine, monitor_hook is not a documented feature and\nisn't implied to be supported except as it's needed by a specific MPM.\nThis is true of many functions defined in mpm_common.h, an internal header.\n\nBut I'll leave this as an enhancement bug; and if that hook is ever defined,\nwe'll know better if it should run under the parent process, child process\nor both.", "id": 112426, "time": "2008-01-01T21:41:57Z", "creator": "wrowe@apache.org", "creation_time": "2008-01-01T21:41:57Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 44034, "text": "Thanks to reply\n\n(In reply to comment #1)\n> So more information on your use case would be very interesting, since it's\n> really the users that dictate how we should fix this.\n\nI make a link list on normal memory (on Windows) or shared memory (on Unix).\nOn each request an element is allocated from it and input/output filter write \na status on the element.\nAfter the request an element is left as \"used\" in, e.g., three minutes.\nI want to run Gabage Collecter on monitor hook.\n\n(In reply to comment #3)\n> This is true of many functions defined in mpm_common.h, an internal header.\n\nmpm_common.h is internal?\nInstalled apache2/include contains mpm_common.h so I thought it was public \nheader.", "id": 112453, "time": "2008-01-03T05:19:30Z", "creator": "takashi.asfbugzilla@tks.st", "creation_time": "2008-01-03T05:19:30Z", "is_private": false, "attachment_id": null}]