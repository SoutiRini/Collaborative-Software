[{"count": 0, "tags": [], "text": "The way tomcat internally handle dispatching of some urls, like jsp and\nressources, by including $CATALINA_HOME/conf/web.xml, interfere with servlet\nnames available to webapps. The following names can not be used for a servlet in\na web.xml of a webapp:\ndefault\njsp\n\neg. creating a web.xml with a servlet named 'default' end up with obscure\nmessage from tomcat claiming this entry is already defined along with 2\nstacktraces while, as i understand, default is a perfect valid servlet name\naccording to servlet specs.\n\nTomcat should clearly separate it's internal config (CATALINA/conf/web.xml) from\nthe webapp config to prevent this name conflicts. Whatever is in\nCATALINA/conf/web.xml, this should not be taken into account when checking\nwebapp/WEB-INF/web.xml validity as webapp doesn't have to be aware of internal\nserver behaviour.", "is_private": false, "id": 86767, "creator": "delbd@oma.be", "time": "2006-03-13T12:26:44Z", "bug_id": 38951, "creation_time": "2006-03-13T12:26:44Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 38951, "is_private": false, "text": "Attempting to 'fix' this is way more trouble than it is worth.  It would be \npossible to change the servlet names to something like tomcat-internal-\ndefault, but that just makes it harder to hit, and doesn't really solve the \nproblem.  In addition, I'd have to assume that there are apps out there \nalready that are doing things like:\n   if(isStatic(request.getPathInfo())) {\n      RequestDispacher rd = getServletContext().getNamedDispatcher(\"default\");\n      rd.forward(request, response);\n      return;\n   }\n", "id": 87299, "time": "2006-03-27T02:31:01Z", "creator": "william.barker@wilshire.com", "creation_time": "2006-03-27T02:31:01Z", "attachment_id": null}]