[{"count": 0, "tags": [], "creator": "Bruno.Harbulot@manchester.ac.uk", "attachment_id": null, "text": "Hello,\n\nI would like to use the MacOSX Keychain store for providing my \ncertificates to Tomcat. Generally speaking, this can be done by loading the\nKeyStore like this:\n\n  KeyStore keyStore = KeyStore.getInstance(\"KeychainStore\",\"Apple\");\n  keyStore.load(null, null);\n  \nIn fact, it seems to work without specifying the \"Apple\" provider too.\nHowever, similarly to PKCS11, this type does not require an input file.\n\nThe problem is that org.apache.tomcat.util.net.jsse.JSSESocketFactory\nalways tries to load a file, except when the type is PKCS11.\n\nNot specifying a keystoreFile or truststoreFile parameter defaults to\ntrying to load ~/.keystore. I would like to suggest the following patch\nwhich allows to specify an empty value, indicating the no file needs to\nbe loaded:\n\n--- JSSESocketFactory.java.old  2007-08-11 22:58:24.000000000 +0200\n+++ JSSESocketFactory.java      2007-08-11 23:24:53.000000000 +0200\n@@ -307,7 +307,7 @@\n         InputStream istream = null;\n         try {\n             ks = KeyStore.getInstance(type);\n-            if(! \"PKCS11\".equalsIgnoreCase(type) ) {\n+            if(! \"\".equalsIgnoreCase(path) ) {\n                 File keyStoreFile = new File(path);\n                 if (!keyStoreFile.isAbsolute()) {\n                     keyStoreFile = new File(System.getProperty(\"catalina.base\"),\n                     \n                     \nThis way, not having to load a file is not limited to PKCS11, but could be \nused by other keystore types.\nUsing this patch, the following configuration works fine with keys and\ncertificates stored in the Apple Keychain (for some reason, the KeychainStore \nrequires a non-empty password; it seems to work whatever the password is, \nsince it may be asked interactively by the Keychain utility, depending on \nhow it is set up)\n\n<Connector SSLEnabled=\"true\" clientAuth=\"want\"\n\tkeystoreFile=\"\" keystorePass=\"-\"\n\tkeystoreType=\"KeychainStore\" maxThreads=\"150\" port=\"8443\"\n\tkeyAlias=\"myhost.mydomain.tld\"\n\tprotocol=\"HTTP/1.1\" scheme=\"https\" secure=\"true\" sslProtocol=\"TLS\"\n\ttruststoreFile=\"\"\n\ttruststorePass=\"-\" truststoreType=\"KeychainStore\" />\n\t\t\t\n\nRegards,\n\nBruno.", "id": 106649, "time": "2007-08-11T14:50:54Z", "bug_id": 43094, "creation_time": "2007-08-11T14:50:54Z", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 20649\nPatch for allowing to specify keystores providers and not to need a keystore file\n\nAnother improvement to this might be to add a parameter for the provider to the\n\n'getStore' method and pass it through 'keystoreProvider' and\ntruststoreProvider' attributes.\nIn my use case, it seems to work without specifying the provider, \"Apple\", but\nI guess there might be cases where it could be useful, for other providers.\n\nThe configuration would look like this (I've tried it and it works -- it also\nfails if I provide the wrong provider, quite logically):\n\n<Connector SSLEnabled=\"true\" clientAuth=\"want\"\n\tkeystoreFile=\"\" keystorePass=\"-\" keystoreProvider=\"Apple\"\n\tkeystoreType=\"KeychainStore\" maxThreads=\"150\" port=\"8443\"\n\tkeyAlias=\"host.domain\"\n\tprotocol=\"HTTP/1.1\" scheme=\"https\" secure=\"true\" sslProtocol=\"TLS\"\n\ttruststoreFile=\"\" truststoreProvider=\"Apple\"\n\ttruststorePass=\"-\" truststoreType=\"KeychainStore\" />", "attachment_id": 20649, "bug_id": 43094, "id": 106650, "time": "2007-08-11T15:01:07Z", "creator": "Bruno.Harbulot@manchester.ac.uk", "creation_time": "2007-08-11T15:01:07Z", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 43094, "is_private": false, "id": 106706, "time": "2007-08-13T10:26:26Z", "creator": "fhanik@apache.org", "creation_time": "2007-08-13T10:26:26Z", "tags": [], "text": "Thanks for the patch, I will review it and possible extend it to the NIO\nconnector as well"}, {"count": 3, "tags": [], "bug_id": 43094, "text": "I have applied a patch to trunk based on your suggestion and proposed it for 6.0.x.", "id": 116212, "time": "2008-05-03T13:22:07Z", "creator": "markt@apache.org", "creation_time": "2008-05-03T13:22:07Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 43094, "attachment_id": null, "id": 116515, "time": "2008-05-12T10:32:02Z", "creator": "Bruno.Harbulot@manchester.ac.uk", "creation_time": "2008-05-12T10:32:02Z", "is_private": false, "text": "(In reply to comment #3)\n> I have applied a patch to trunk based on your suggestion and proposed it for\n> 6.0.x.\n> \n\nThank you.\nI've just had a look at http://svn.apache.org/viewvc/tomcat/trunk/java/org/apache/tomcat/util/net/jsse/JSSESocketFactory.java?revision=653128&view=markup\nIt seems that you've applied a patch along the original report and not the second patch I sent with comment #1. I believe that second patch (being able to set the provider name) could also be useful, even for PKCS#11 applications (one of the ways to configure PKCS#11 is to set up the PKCS#11 options as part of the JVM security provider list, which adds a provider with a new name).\n\nMore generally, since I opened this issue, I've been making similar suggestions for other projects, in particular Jetty [1] and Restlet [2]. This led me to write a few classes (SSLContext factories) to make the configuration of SSL properties a bit easier, including more advanced options such as Certificate Revocation Lists (I must admit I'm not quite sure how CRLs are to be configured in Tomcat). These classes are available at http://code.google.com/p/jsslutils/. I'm not sure whether this would be useful for Tomcat, but this might be of interest (feel free to get in touch...).\n\n[1] http://www.mortbay.org/jetty/\n[2] http://www.restlet.org/\n"}, {"count": 5, "tags": [], "bug_id": 43094, "attachment_id": null, "id": 116677, "time": "2008-05-15T12:48:50Z", "creator": "markt@apache.org", "creation_time": "2008-05-15T12:48:50Z", "is_private": false, "text": "The simple patch has been committed to 6.0.x and will be in 6.0.17 onwards. I am leaving this bug open and I'll come back to it for the provider name bit.\n\nPlease create a new bz item for the CRL stuff. I'd be happy to look at patches / provide you with some pointers but my focus is going to be bug fixing for the short to medium term."}, {"count": 6, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "I have committed a modified version of the provider patch to trunk and proposed it for 6.0.x", "id": 116760, "time": "2008-05-17T12:58:16Z", "bug_id": 43094, "creation_time": "2008-05-17T12:58:16Z", "is_private": false}, {"count": 7, "attachment_id": null, "bug_id": 43094, "is_private": false, "id": 116864, "time": "2008-05-20T15:54:16Z", "creator": "markt@apache.org", "creation_time": "2008-05-20T15:54:16Z", "tags": [], "text": "The provider part of the patch has now been applied and will be included in 6.0.17 onwards."}]