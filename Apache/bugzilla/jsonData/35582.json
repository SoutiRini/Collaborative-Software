[{"count": 0, "tags": [], "bug_id": 35582, "attachment_id": null, "id": 76880, "creation_time": "2005-07-01T15:59:40Z", "time": "2005-07-01T15:59:40Z", "creator": "tomekem@poczta.fm", "text": "Now you are not able to load such set of permissions:\n\n\t/files\t \t/users/donald\t/actions/read   local\t\tnon-negative\n\t/files\t\t/users/donald\t/actions/read\tinherited\tnegative\n\t/files/A\t/users/donald\t/actions/read\tinherited\tnon-negative\n\nAbove example would give access for directory A to user Donald.\nAt the same time he could not enter other subdirectories of \n'files' directory. I think it is the only way to get such\nresult because you need to have read access on parent directory.\n\nCurrent configuration assumes that triple (object, subject, action)\nis primary key for 'permissions' table so you cannot load above\npermission set (non-unique primary key). I extended primary key to\ncontain 'inheritable' and 'negative' attributes. I modyfied \n'revokePermission' method to take this change into account and\nI changed database scripts respectively.\n\nTomek\n\n--- src/share/org/apache/slide/security/Security.java   30 Oct 2004 17:10:47\n-0000      1.29\n+++ src/share/org/apache/slide/security/Security.java   1 Jul 2005 12:36:38 -0000\n@@ -241,13 +241,16 @@\n      * @param object Object on which permission is revoked\n      * @param subject Subject who can perform the action\n      * @param action Action which can be performed\n+     * @param isNegative is permission negative\n+     * @param isInheritable is permission inheritable\n      * @exception ServiceAccessException DataSource access error\n      * @exception ObjectNotFoundException Specified object was not found\n      * in the DataSource\n      * @exception AccessDeniedException Insufficent credentials\n      *\n     void revokePermission(SlideToken token, ObjectNode object,\n-                          SubjectNode subject, ActionNode action)\n+                          SubjectNode subject, ActionNode action,\n+                          boolean isNegative, boolean isInheritable)\n         throws ServiceAccessException, ObjectNotFoundException,\n         AccessDeniedException, VetoException;\n\n\n--- src/share/org/apache/slide/security/SecurityImpl.java       21 Dec 2004\n16:12:44 -0000      1.62\n+++ src/share/org/apache/slide/security/SecurityImpl.java       1 Jul 2005\n12:38:09 -0000\n@@ -328,20 +328,23 @@\n      * @param object Object on which permission is revoked\n      * @param subject Subject who can perform the action\n      * @param action Action which can be performed\n+     * @param isNegative is permission negative\n+     * @param isInheritable is permission inheritable\n      * @exception ServiceAccessException DataSource access error\n      * @exception ObjectNotFoundException Specified object was not found\n      * in the DataSource\n      * @exception AccessDeniedException Insufficent credentials\n      */\n     public void revokePermission(SlideToken token, ObjectNode object,\n-                                 SubjectNode subject, ActionNode action)\n+                                 SubjectNode subject, ActionNode action,\n+                                 boolean isNegative, boolean isInheritable)\n         throws ServiceAccessException, ObjectNotFoundException,\n         AccessDeniedException, VetoException {\n         //Domain.info(\"Revoke permission on \" + object.getUri());\n         checkCredentials(token, object, namespaceConfig\n                              .getRevokePermissionAction());\n         NodePermission permission = new NodePermission(object, subject,\n-                                                       action);\n+                                                       action, isNegative,\nisInheritable);\n         Uri objectUri = namespace.getUri(token, object.getUri());\n         objectUri.getStore()\n             .revokePermission(objectUri, permission);\n\n\n--- src/stores/org/apache/slide/store/impl/rdbms/CommonRDBMSAdapter.java       \n19 May 2005 13:01:32 -0000      1.13\n+++ src/stores/org/apache/slide/store/impl/rdbms/CommonRDBMSAdapter.java       \n1 Jul 2005 12:39:50 -0000\n@@ -227,8 +227,8 @@\n     public void revokePermission(Connection connection, Uri uri, NodePermission\npermission)\n         throws ServiceAccessException {\n         if (permission == null) return;\n-        StringBuffer sql = new StringBuffer(\"delete from PERMISSIONS where\n(OBJECT_ID, SUBJECT_ID, ACTION_ID) IN\" +\n-                \" (SELECT ou.URI_ID, su.URI_ID, au.URI_ID FROM URI ou, URI su,\nURI au WHERE ou.URI_STRING = ? and su.URI_STRING = ? and au.URI_STRING = ?)\");\n+        StringBuffer sql = new StringBuffer(\"delete from PERMISSIONS where\n(OBJECT_ID, SUBJECT_ID, ACTION_ID, IS_INHERITABLE, IS_NEGATIVE) IN\" +\n+                \" (SELECT ou.URI_ID, su.URI_ID, au.URI_ID, ?,  ?  FROM URI ou,\nURI su, URI au WHERE ou.URI_STRING = ? and su.URI_STRING = ? and au.URI_STRING =\n?)\");\n         PreparedStatement statement = null;\n         try {\n             final NodeRevisionNumber revisionNumber;\n@@ -240,11 +240,13 @@\n                sql.append(\" and VERSION_NO IS NULL\");\n             }\n             statement = connection.prepareStatement(sql.toString());\n-            statement.setString(1, uri.toString());\n-            statement.setString(2, permission.getSubjectUri());\n-            statement.setString(3, permission.getActionUri());\n+            statement.setInt(1, (permission.isInheritable() ? 1 : 0));\n+            statement.setInt(2, (permission.isNegative() ? 1 : 0));\n+            statement.setString(3, uri.toString());\n+            statement.setString(4, permission.getSubjectUri());\n+            statement.setString(5, permission.getActionUri());\n             if (revisionNumber != null) {\n-                statement.setString(4, revisionNumber.toString());\n+                statement.setString(6, revisionNumber.toString());\n             }\n             statement.executeUpdate();\n         } catch (SQLException e) {\n\n\n--- src/stores/org/apache/slide/store/impl/rdbms/PostgresRDBMSAdapter.java     \n13 Jun 2005 12:35:07 -0000      1.20\n+++ src/stores/org/apache/slide/store/impl/rdbms/PostgresRDBMSAdapter.java     \n1 Jul 2005 12:41:32 -0000\n@@ -235,8 +235,8 @@\n     public void revokePermission(Connection connection, Uri uri, NodePermission\npermission)\n     throws ServiceAccessException {\n         if (permission == null) return;\n-        final StringBuffer sql = new StringBuffer(\"delete from PERMISSIONS\nwhere (OBJECT_ID, SUBJECT_ID, ACTION_ID) IN\" +\n-                \" (SELECT ou.URI_ID, su.URI_ID, au.URI_ID FROM URI ou, URI su,\nURI au WHERE ou.URI_STRING = ? and su.URI_STRING = ? and au.URI_STRING = ?)\");\n+        final StringBuffer sql = new StringBuffer(\"delete from PERMISSIONS\nwhere (OBJECT_ID, SUBJECT_ID, ACTION_ID, IS_INHERITABLE, IS_NEGATIVE) IN\" +\n+                \" (SELECT ou.URI_ID, su.URI_ID, au.URI_ID, ?,  ? FROM URI ou,\nURI su, URI au WHERE ou.URI_STRING = ? and su.URI_STRING = ? and au.URI_STRING =\n?)\");\n                PreparedStatement statement = null;\n                try {\n             final NodeRevisionNumber revisionNumber =\npermission.getRevisionNumber();\n@@ -247,11 +247,13 @@\n                 sql.append(\" and VERSION_NO IS NULL\");\n             }\n             statement = connection.prepareStatement(sql.toString());\n-            statement.setString(1, uri.toString());\n-            statement.setString(2, permission.getSubjectUri());\n-            statement.setString(3, permission.getActionUri());\n+            statement.setInt(1, (permission.isInheritable() ? 1 : 0));\n+            statement.setInt(2, (permission.isNegative() ? 1 : 0));\n+            statement.setString(3, uri.toString());\n+            statement.setString(4, permission.getSubjectUri());\n+            statement.setString(5, permission.getActionUri());\n             if (revisionNumber != null) {\n-                statement.setString(4, revisionNumber.toString());\n+                statement.setString(6, revisionNumber.toString());\n             }\n             statement.executeUpdate();\n                } catch (SQLException e) {\n\n\n--- src/stores/org/apache/slide/store/impl/rdbms/StandardRDBMSAdapter.java     \n19 May 2005 13:01:32 -0000      1.45\n+++ src/stores/org/apache/slide/store/impl/rdbms/StandardRDBMSAdapter.java     \n1 Jul 2005 12:42:09 -0000\n@@ -598,8 +598,8 @@\n     public void revokePermission(Connection connection, Uri uri, NodePermission\npermission)\n         throws ServiceAccessException {\n         if (permission == null) return;\n-        StringBuffer sql = new StringBuffer(\"delete from PERMISSIONS where\n(OBJECT_ID, SUBJECT_ID, ACTION_ID) IN\" +\n-            \" (SELECT ou.URI_ID, su.URI_ID, au.URI_ID FROM URI ou, URI su, URI\nau WHERE ou.URI_STRING = ? and su.URI_STRING = ? and au.URI_STRING = ?)\");\n+        StringBuffer sql = new StringBuffer(\"delete from PERMISSIONS where\n(OBJECT_ID, SUBJECT_ID, ACTION_ID, IS_INHERITABLE, IS_NEGATIVE) IN\" +\n+            \" (SELECT ou.URI_ID, su.URI_ID, au.URI_ID, ?,  ?  FROM URI ou, URI\nsu, URI au WHERE ou.URI_STRING = ? and su.URI_STRING = ? and au.URI_STRING = ?)\");\n         PreparedStatement statement = null;\n         try {\n             final NodeRevisionNumber revisionNumber;\n@@ -611,11 +611,13 @@\n                 sql.append(\" and VERSION_NO IS NULL\");\n             }\n             statement = connection.prepareStatement(sql.toString());\n-            statement.setString(1, uri.toString());\n-            statement.setString(2, permission.getSubjectUri());\n-            statement.setString(3, permission.getActionUri());\n+            statement.setInt(1, (permission.isInheritable() ? 1 : 0));\n+            statement.setInt(2, (permission.isNegative() ? 1 : 0));\n+            statement.setString(3, uri.toString());\n+            statement.setString(4, permission.getSubjectUri());\n+            statement.setString(5, permission.getActionUri());\n             if (revisionNumber != null) {\n-                statement.setString(4, revisionNumber.toString());\n+                statement.setString(6, revisionNumber.toString());\n             }\n             statement.executeUpdate();\n         } catch (SQLException e) \n\n\n--- src/conf/schema/createPostgresSchema.sql    3 Jun 2004 10:30:22 -0000       1.3\n+++ src/conf/schema/createPostgresSchema.sql    1 Jul 2005 12:45:34 -0000\n@@ -163,7 +163,7 @@\n     IS_NEGATIVE     smallint                   NOT NULL,\n     -- Both order and sequence would be more suitable, but can not be used\n     SUCCESSION      int                   NOT NULL,\n-    UNIQUE (OBJECT_ID, SUBJECT_ID, ACTION_ID),\n+    UNIQUE (OBJECT_ID, SUBJECT_ID, ACTION_ID, IS_INHERITABLE, IS_NEGATIVE),\n     UNIQUE (OBJECT_ID, SUCCESSION)\n );\n\n\n--- src/conf/schema/DB2Server.sql       15 Jul 2004 06:38:24 -0000      1.1\n+++ src/conf/schema/DB2Server.sql       1 Jul 2005 12:46:47 -0000\n@@ -126,7 +126,7 @@\n    IS_INHERITABLE       NUMERIC(1)             not null,\n    IS_NEGATIVE          NUMERIC(1)             not null,\n    SUCCESSION           NUMERIC(10)            not null,\n-   constraint \"A_Key_1\" unique (OBJECT_ID, SUBJECT_ID, ACTION_ID),\n+   constraint \"A_Key_1\" unique (OBJECT_ID, SUBJECT_ID, ACTION_ID,\nIS_INHERITABLE, IS_NEGATIVE),\n    constraint \"A_Key_2\" unique (OBJECT_ID, SUCCESSION)\n );\n\n\n--- src/conf/schema/MySql-4.1-Schema.sql        25 May 2004 12:40:23 -0000      1.2\n+++ src/conf/schema/MySql-4.1-Schema.sql        1 Jul 2005 12:47:28 -0000\n@@ -213,7 +213,7 @@\n   IS_INHERITABLE  tinyint(1)   NOT NULL,\n   IS_NEGATIVE     tinyint(1)   NOT NULL,\n   SUCCESSION      int         NOT NULL,\n-  PRIMARY KEY     (SUBJECT_ID,OBJECT_ID,ACTION_ID),\n+  PRIMARY KEY     (SUBJECT_ID,OBJECT_ID,ACTION_ID,IS_INHERITABLE,IS_NEGATIVE),\n   UNIQUE KEY OBJECT_ID_2 (OBJECT_ID,SUCCESSION),\n   KEY ACTION_ID_IX3 (ACTION_ID)\n ) TYPE=InnoDB CHARACTER SET utf8;\n\n--- src/conf/schema/MySqlSchema.sql     25 May 2004 09:52:34 -0000      1.2\n+++ src/conf/schema/MySqlSchema.sql     1 Jul 2005 12:48:27 -0000\n@@ -213,7 +213,7 @@\n   IS_INHERITABLE  tinyint(1)   NOT NULL,\n   IS_NEGATIVE     tinyint(1)   NOT NULL,\n   SUCCESSION      int         NOT NULL,\n-  PRIMARY KEY     (SUBJECT_ID,OBJECT_ID,ACTION_ID),\n+  PRIMARY KEY     (SUBJECT_ID,OBJECT_ID,ACTION_ID,IS_INHERITABLE,IS_NEGATIVE),\n   UNIQUE KEY OBJECT_ID_2 (OBJECT_ID,SUCCESSION),\n   KEY ACTION_ID_IX3 (ACTION_ID)\n ) TYPE=InnoDB;\n@@ -223,4 +223,4 @@\n\n--- src/conf/schema/OracleSchema.sql    13 Nov 2004 15:02:28 -0000      1.2\n+++ src/conf/schema/OracleSchema.sql    1 Jul 2005 12:48:56 -0000\n@@ -165,7 +165,7 @@\n        FOREIGN KEY(\"OBJECT_ID\") REFERENCES \"URI\"(\"URI_ID\"),\n        FOREIGN KEY(\"SUBJECT_ID\") REFERENCES \"URI\"(\"URI_ID\"),\n        FOREIGN KEY(\"ACTION_ID\") REFERENCES \"URI\"(\"URI_ID\"),\n-       UNIQUE(\"OBJECT_ID\", \"SUBJECT_ID\", \"ACTION_ID\"),\n+       UNIQUE(\"OBJECT_ID\", \"SUBJECT_ID\", \"ACTION_ID\",\n\"IS_INHERITABLE\",\"IS_NEGATIVE\"),\n        UNIQUE(\"OBJECT_ID\", \"SUCCESSION\")\n ) CACHE NOLOGGING;\n\n\n--- src/conf/schema/SQLServerSchema.sql 24 Jun 2004 13:18:53 -0000      1.4\n+++ src/conf/schema/SQLServerSchema.sql 1 Jul 2005 12:49:20 -0000\n@@ -286,7 +286,7 @@\n     IS_NEGATIVE     bit                   NOT NULL,\n     -- Both order and sequence would be more suitable, but can not be used\n     SUCCESSION      int                   NOT NULL,\n-    UNIQUE CLUSTERED (OBJECT_ID, SUBJECT_ID, ACTION_ID),\n+    UNIQUE CLUSTERED (OBJECT_ID, SUBJECT_ID, ACTION_ID,IS_INHERITABLE,IS_NEGATIVE),\n     UNIQUE (OBJECT_ID, SUCCESSION)\n )\n-GO\n\\ No newline at end of file\n+GO\n\n\n--- src/conf/schema/SybaseSchema.sql    11 May 2004 10:02:50 -0000      1.2\n+++ src/conf/schema/SybaseSchema.sql    1 Jul 2005 12:49:52 -0000\n@@ -280,7 +280,7 @@\n     IS_NEGATIVE     bit                   NOT NULL,\n     -- Both order and sequence would be more suitable, but can not be used\n     SUCCESSION      int                   NOT NULL,\n-    UNIQUE CLUSTERED (OBJECT_ID, SUBJECT_ID, ACTION_ID),\n+    UNIQUE CLUSTERED (OBJECT_ID, SUBJECT_ID, ACTION_ID,IS_INHERITABLE,IS_NEGATIVE),\n     UNIQUE (OBJECT_ID, SUCCESSION)\n )\n GO", "is_private": false}, {"count": 1, "tags": [], "bug_id": 35582, "attachment_id": 15585, "id": 76971, "creation_time": "2005-07-04T15:22:34Z", "time": "2005-07-04T15:22:34Z", "creator": "tomekem@poczta.fm", "text": "Created attachment 15585\nPatch against Subversion\n\nPatch pasted before probably contains error (wrong usage of diff) and cannot be\napplied to source automatically.", "is_private": false}, {"attachment_id": 15594, "tags": [], "bug_id": 35582, "text": "Created attachment 15594\nPrevious patch was missing one modification\n\nI changed 'equals' method of NodePermission to take 'isInheritable' property\nfor comparing.", "count": 2, "id": 77005, "time": "2005-07-05T15:37:01Z", "creator": "tomekem@poczta.fm", "creation_time": "2005-07-05T15:37:01Z", "is_private": false}, {"count": 3, "tags": [], "text": "I've briefly discussed this with a colleague and the way we accomplish your use\ncase is to grant inherited permissions on the parent and add deny the required\nchild collections:\n\n/files\t\t/users/donald\t/actions/read\tinherited\tnon-negative\n/files/B\t/users/donald\t/actions/read\tinherited\tnegative\n\nThis will enable donald to propfind /files and see and read /files/B but not\n/files/A\n\nDoesn't this fulfil your requirements?\n", "attachment_id": null, "bug_id": 35582, "id": 77019, "time": "2005-07-05T23:15:44Z", "creator": "unico@apache.org", "creation_time": "2005-07-05T23:15:44Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 35582, "attachment_id": null, "text": "> Doesn't this fulfill your requirements?\n\nYes, it meets my requirements but I am not fully satisfied.\nI am developing my own application and I am using Slide API\nto store data. I don't want new users to have read permission\non new directories. So when new directory is created, I need\nto set negative permission to all users.\n\n/files/newDir       all   /actions/read   local       negative\n\nThen I would like to grant read permission for Donald.\nI can simple give Donald read permission because it will\nbe put after negative permission in sequence (SUCCESSION \ncolumn of permissions table). In result it will not influence \npermission set for new directory. Currently the only way to\nsolve my problem is to remove negative permission, grant read\npermission, grant negative permission again. For me it is not\nelegant so I wrote my patch for MY NEEDS. I understand you\nmay not need this enhancement for further Slide development,\nif you don't like it, just ignore it. ", "id": 77069, "time": "2005-07-07T10:40:01Z", "creator": "tomekem@poczta.fm", "creation_time": "2005-07-07T10:40:01Z", "is_private": false}]