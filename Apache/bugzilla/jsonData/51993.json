[{"count": 0, "attachment_id": 27728, "bug_id": 51993, "is_private": false, "id": 150317, "time": "2011-10-07T15:24:26Z", "creator": "tiagobellotorres@gmail.com", "creation_time": "2011-10-07T15:24:26Z", "tags": [], "text": "Created attachment 27728\nFO file that reproduces the issue.\n\nWhen I place an \"fo:inline\" element which specifies a small font-size inside an \"fo:block\" element, the line-height in the rendered PDF looks bigger than necessary. Here's a code snippet of my FO:\n\n<fo:block>\n<fo:inline font-size=\"7pt\">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</fo:inline>\n</fo:block>\n\nIn contrast, when I just have an \"fo:block\" which specifies the font-size, the line-height in the rendered PDF looks correct. For example:\n\n<fo:block font-size=\"7pt\">\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</fo:block>\n\nI believe this problem is related to the fact that FOP assumes a default font-size (or line-height) for the \"fo:block\", which turns out to be too large in the example I showed.\n\nThis issue has been discussed on the mailing list, but I haven't found bug reports:\n\nhttp://osdir.com/ml/fop-users-xmlgraphics.apache.org/2011-02/msg00114.html\n\nI'm also attaching an FO file which reproduces the behavior I described."}, {"count": 1, "text": "resetting P2 open bugs to P3 pending further review", "creator": "gadams@apache.org", "is_private": false, "id": 157393, "time": "2012-04-07T01:42:22Z", "bug_id": 51993, "creation_time": "2012-04-07T01:42:22Z", "tags": [], "attachment_id": null}, {"count": 2, "attachment_id": null, "bug_id": 51993, "is_private": false, "id": 157672, "time": "2012-04-08T05:25:11Z", "creator": "gadams@apache.org", "creation_time": "2012-04-08T05:25:11Z", "tags": [], "text": "please provide an output PDF file that corresponds with the supplied input FO file, along with all console output"}, {"count": 3, "tags": [], "creator": "tiagobellotorres@gmail.com", "attachment_id": 28565, "text": "Created attachment 28565\nPDF generated by Apache FOP", "id": 157734, "time": "2012-04-09T14:34:59Z", "bug_id": 51993, "creation_time": "2012-04-09T14:34:59Z", "is_private": false}, {"count": 4, "tags": [], "creator": "tiagobellotorres@gmail.com", "text": "Created attachment 28566\nLog written during the PDF generation", "id": 157735, "time": "2012-04-09T14:36:13Z", "bug_id": 51993, "creation_time": "2012-04-09T14:36:13Z", "is_private": false, "attachment_id": 28566}, {"count": 5, "tags": [], "creator": "tiagobellotorres@gmail.com", "text": "Glenn, I've attached the files you requested. I'm also changing the bug status to NEW.", "id": 157736, "time": "2012-04-09T14:37:42Z", "bug_id": 51993, "creation_time": "2012-04-09T14:37:42Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "gadams@apache.org", "text": "(In reply to comment #5)\n> Glenn, I've attached the files you requested. I'm also changing the bug status\n> to NEW.\n\nthanks, this should be sufficient to proceed with work on a fix!", "id": 157737, "time": "2012-04-09T14:53:09Z", "bug_id": 51993, "creation_time": "2012-04-09T14:53:09Z", "is_private": false, "attachment_id": null}, {"count": 7, "tags": [], "creator": "manuel@apache.org", "attachment_id": null, "text": "I am not sure if this is actually a bug. The line building rules in the spec are anything but easy to understand. For example it says for the line-height property: \"If the property is set on a block-level element whose content is composed of inline-level elements, it specifies the minimal height of each generated inline box.\" In the example given the line-height property value on the fo:block would be \"normal\" meaning in the FOP implementation the calculated value for line-height set on the fo:block would be 1.2 * font-size. Therefore following the stated rule this would be the minimum height applied to all generated inline areas. The reasoning behind this is also stated in the spec: \n\n\"Generally, when there is only one value of \"line-height\" for all inline boxes in a paragraph (and no tall images), the above will ensure that baselines of successive lines are exactly \"line-height\" apart. This is important when columns of text in different fonts have to be aligned, for example in a table.\"\n\nI could easily be wrong in my interpretation here but this is my recollection on how this behaviour came about.", "id": 157767, "time": "2012-04-10T09:35:47Z", "bug_id": 51993, "creation_time": "2012-04-10T09:35:47Z", "is_private": false}, {"count": 8, "attachment_id": null, "bug_id": 51993, "is_private": false, "id": 157774, "time": "2012-04-10T14:44:42Z", "creator": "tiagobellotorres@gmail.com", "creation_time": "2012-04-10T14:44:42Z", "tags": [], "text": "I see. But I didn't specify the line-height or the font-size of the block element. FOP assumed a \"normal\" value and this value took precedence over the natural line-height of a 7pt text, which I indeed specified in the inline element. I just think it might be confusing for the end-user to have an implicit value outweighing a value which was explicitly set.\n\nJust for comparison, most browsers will render the following HTML snippet as expected:\n\n<p><span style=\"font-size:7pt\">Lorem ipsum dolor sit amet, consectetur adipisicing\nelit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\nenim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip\nex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\nvelit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\ncupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\nlaborum.</span></p>\n\nIn fact, browsers seem to calculate line-height for each line individually based on the maximum font-size of the line, which sounds reasonable. FOP seems to do the same in most cases. However, assuming a default line-height for the block seems to be causing inconsistent results."}, {"count": 9, "tags": [], "creator": "gadams@apache.org", "text": "(In reply to comment #8)\n> I see. But I didn't specify the line-height or the font-size of the block\n> element. FOP assumed a \"normal\" value and this value took precedence over the\n> natural line-height of a 7pt text, which I indeed specified in the inline\n> element. I just think it might be confusing for the end-user to have an\n> implicit value outweighing a value which was explicitly set.\n> \n> In fact, browsers seem to calculate line-height for each line individually\n> based on the maximum font-size of the line, which sounds reasonable. FOP seems\n> to do the same in most cases. However, assuming a default line-height for the\n> block seems to be causing inconsistent results.\n\nKeep in mind the semantics of the line-stacking-strategy property, which defaults to max-height and not line-height. The CSS semantics default to line-height, not max-height, so this is a difference between XSL-FO and CSS. Further, at this time, FOP does not support the line-height value. That is, FOP at present supports only max-height and font-height strategies. In the former case, the maximum line rectangle applies (i.e., the maximum needed to contain the line's inline areas) in the latter case, the text-altitude/depth properties (or font metrics) apply, where the font/font-size that applies to the parent block is what determines the font metric flavors of altitude/default.\n\nSee XSL-FO Section 4.5 Line Areas [1] for more detail.\n\nAlso, in case of max-height and font-height strategy, the space-{before,after} of the generated line areas is set to the half leading trait value [2].\n\nMy conclusion is that the current behavior is not a bug.\n\n[1] http://www.w3.org/TR/2006/REC-xsl11-20061205/#area-line\n[2] http://www.w3.org/TR/2006/REC-xsl11-20061205/#fo_block", "id": 157783, "time": "2012-04-10T16:34:04Z", "bug_id": 51993, "creation_time": "2012-04-10T16:34:04Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 51993, "attachment_id": null, "text": "(In reply to comment #9)\n> (In reply to comment #8)\n...\n> Further, at this time, FOP does not support the line-height value. That is, FOP\n> at present supports only max-height and font-height strategies.\n\nThere was a discussion many years ago questioning if the above statement is actually correct: http://mail-archives.apache.org/mod_mbox/xmlgraphics-fop-dev/200701.mbox/%3C20070112114529.AFE1.DEV@jeremias-maerki.ch%3E", "id": 157785, "time": "2012-04-10T17:16:05Z", "creator": "manuel@apache.org", "creation_time": "2012-04-10T17:16:05Z", "is_private": false}, {"count": 11, "attachment_id": null, "creator": "gadams@apache.org", "is_private": false, "id": 157788, "time": "2012-04-10T17:35:05Z", "bug_id": 51993, "creation_time": "2012-04-10T17:35:05Z", "tags": [], "text": "(In reply to comment #10)\n> (In reply to comment #9)\n> > (In reply to comment #8)\n> ...\n> > Further, at this time, FOP does not support the line-height value. That is, FOP\n> > at present supports only max-height and font-height strategies.\n> \n> There was a discussion many years ago questioning if the above statement is\n> actually correct:\n> http://mail-archives.apache.org/mod_mbox/xmlgraphics-fop-dev/200701.mbox/%3C20070112114529.AFE1.DEV@jeremias-maerki.ch%3E\n\nthanks for pointing that out; i certainly agree it is a complex area of the spec, and what FOP actually implements may or may not comply; i would have to speculate that the current FOP test cases do not adequately cover the range of different line stacking behaviors"}, {"count": 12, "tags": [], "bug_id": 51993, "text": "Created attachment 28631\nkeep-together option used correctly", "id": 158159, "time": "2012-04-18T07:43:17Z", "creator": "aperri@operamail.com", "creation_time": "2012-04-18T07:43:17Z", "is_private": false, "attachment_id": 28631}, {"count": 13, "tags": [], "creator": "gadams@apache.org", "attachment_id": null, "text": "batch transition resolved+invalid to closed+invalid", "id": 158518, "time": "2012-04-30T00:11:14Z", "bug_id": 51993, "creation_time": "2012-04-30T00:11:14Z", "is_private": false}]