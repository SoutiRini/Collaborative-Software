[{"count": 0, "tags": [], "creator": "hartmut.keil@gmx.ch", "attachment_id": null, "id": 83928, "time": "2005-12-22T21:02:15Z", "bug_id": 38014, "creation_time": "2005-12-22T21:02:15Z", "is_private": false, "text": "In the case of keepalive the request body will be discared in \n'ap_discard_request_body(..)'. \n\nBy that the status line  'HTTP/1.1 100 Continue' will be sent \nafter the final status code if the body has not been consumed \nuntil now:\n\n=>[1] ssl_filter_write(f = 0x254300, data = 0x25f260 \"HTTP/1.1 100\nContinue^M\\n^M\\n\", len = 25U), line 765 in \"ssl_engine_io.c\"\n  [2] ssl_io_filter_output(f = 0x254300, bb = 0x25f280), line 1438 in\n\"ssl_engine_io.c\"\n  [3] ap_pass_brigade(next = 0x254300, bb = 0x25f280), line 526 in \"util_filter.c\"\n  [4] ap_http_filter(f = 0x25edd8, b = 0x25f220, mode = AP_MODE_READBYTES, block\n= APR_BLOCK_READ, readbytes = 8192LL), line 201 in \"http_filters.c\"\n  [5] ap_get_brigade(next = 0x25edd8, bb = 0x25f220, mode = AP_MODE_READBYTES,\nblock = APR_BLOCK_READ, readbytes = 8192LL), line 490 in \"util_filter.c\"\n  [6] ap_discard_request_body(r = 0x25ddc0), line 1092 in \"http_filters.c\"\n  [7] ap_finalize_request_protocol(r = 0x25ddc0), line 1119 in \"protocol.c\"\n  [8] ap_process_request(r = 0x25ddc0), line 268 in \"http_request.c\"\n  \nSo the client is reading 'HTTP/1.1 100 Continue' as response for its next\nrequest that may does not contain the 'Expect: 100-continue' header.\nThat is violating the spec.\n\nAnother point is that it makes no sense to possibly *invite* the client \nfor sending the body just to discard it.\n\nThe fix is quite small, see the following patch:\n\nIndex: server/protocol.c\n===================================================================\nRCS file:\n/opt/projects/CVSROOT/navajo/src/org/apache/httpd-2.2.X/server/protocol.c,v\nretrieving revision 1.1\ndiff -c -r1.1 protocol.c\n*** server/protocol.c   2005/12/08 14:51:37     1.1\n--- server/protocol.c   2005/12/22 19:14:56\n***************\n*** 1116,1122 ****\n   */\n  AP_DECLARE(void) ap_finalize_request_protocol(request_rec *r)\n  {\n!     (void) ap_discard_request_body(r);\n\n      /* tell the filter chain there is no more content coming */\n      if (!r->eos_sent) {\n--- 1116,1129 ----\n   */\n  AP_DECLARE(void) ap_finalize_request_protocol(request_rec *r)\n  {\n!       /* Avoid sending 'HTTP/1.1 100 Continue' after the response.\n!          If the client is waiting for 'HTTP/1.1 100 Continue' before\n!          sending the body, the body has been already sent, or will never be.\n!          (see rfc 2616 section 8.2.3)\n!       */\n!       r->expecting_100 = 0;\n!\n!       (void) ap_discard_request_body(r);\n\n      /* tell the filter chain there is no more content coming */\n      if (!r->eos_sent) {"}, {"count": 1, "tags": [], "creator": "jorton@redhat.com", "text": "Can you give an example configuration and request which triggers this?", "id": 83943, "time": "2005-12-22T23:56:01Z", "bug_id": 38014, "creation_time": "2005-12-22T23:56:01Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 38014, "attachment_id": null, "text": "The described behaviour can be reproduced with the following configuration\n\n<Location /asis>\nSetHandler send-as-is\n</Location>\n\n\nThe request \n\nGET /asis/index.html HTTP/1.1\nHost: some.server.com\nExpect: 100-continue\nContent-Length: 10\n\nwill get the response:\n\nHTTP/1.1 200 OK\nDate: Tue, 03 Jan 2006 14:39:54 GMT\nServer: Apache/2.2.0 (Unix) mod_ssl/2.2.0 OpenSSL/0.9.7g\nSome-Special-Header: never-mind\nContent-Length: 11\nContent-Type: text/plain\n\nSome data\n\nHTTP/1.1 100 Continue\n\n\nAs described the 'HTTP/1.1 100 Continue' will be sent in \nap_finalize_request_protocol(..) (see stack above)\n\n\n\n", "id": 84162, "time": "2006-01-03T16:04:45Z", "creator": "hartmut.keil@gmx.ch", "creation_time": "2006-01-03T16:04:45Z", "is_private": false}, {"count": 3, "tags": [], "creator": "basant.kukreja@sun.com", "text": "<pre>\nBug also reproduces with mod_perl.\n\nFor a simple test script test.pl\n#!/usr/bin/perl\nprint \"Content-type: text/plain\\n\\n\";\nprint \"mod_perl 2.0 rocks!\\n\";\n\nIf the request contains :\nGET /perl/test.pl HTTP/1.1\nHost: myhost.domain\nContent-Length: 3\nExpect: 100-continue\n\nabc\n\nThe output is :\nHTTP/1.1 200 OK\nDate: Fri, 02 Feb 2007 19:17:04 GMT\nServer: Apache/2.2.5-dev (Unix) mod_perl/2.0.4-dev Perl/v5.8.8\nTransfer-Encoding: chunked\nContent-Type: text/plain\n\n14\nmod_perl 2.0 rocks!\n\nHTTP/1.1 100 Continue\n\n0\n\n--------------------------------------\nNote that \"HTTP/1.1 100 Continue\" is printed after the response.\n\nhttpd.conf contains :\nLoadModule perl_module modules/mod_perl.so\nAlias /perl/ /disk/apache/apache2/perl/\n<Location /perl/>\n  SetHandler perl-script\n  PerlResponseHandler ModPerl::Registry\n  PerlOptions +ParseHeaders\n  Options +ExecCGI\n  Order allow,deny\n  Allow from all \n</Location>\n--------------------------------------\n\nHowever if the request is /index.html then the apache behavior is correct.\nGET /index.html HTTP/1.1\nHost: myhost.domain\nContent-Length: 3\nExpect: 100-continue\n\nabc\n\n\n-----\nResponse\n-----\n\nHTTP/1.1 100 Continue\nHTTP/1.1 200 OK\nDate: Fri, 02 Feb 2007 19:23:03 GMT\nServer: Apache/2.2.5-dev (Unix) mod_perl/2.0.4-dev Perl/v5.8.8\nLast-Modified: Fri, 26 Jan 2007 21:40:07 GMT\nETag: \"7008b-2c-5f0e7bc0\"\nAccept-Ranges: bytes\nContent-Length: 44\nContent-Type: text/html\n\n<html><body><h1>It works!</h1></body></html>\n\n</pre>", "id": 98913, "time": "2007-02-02T11:30:12Z", "bug_id": 38014, "creation_time": "2007-02-02T11:30:12Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "basant.kukreja@sun.com", "attachment_id": null, "id": 98982, "time": "2007-02-05T14:07:53Z", "bug_id": 38014, "creation_time": "2007-02-05T14:07:53Z", "is_private": false, "text": "Comments for Suggested fix:\n(a) Setting expecting_100 to 0 is not appropriate because use of expecting_100\nflag in request_rec is to find out if user is expecting 100 response code.\n(b) With the suggested fix, HEAD response is also affected.\nFor a request : \nHEAD /asis/index.asis HTTP/1.1\nHost: lbasantk3.red.iplanet.com\nContent-Length: 3\nExpect: 100-continue\n\nabc\n\n\nThe output without the fix is :\nHTTP/1.1 100 Continue\nHTTP/1.1 200 OK\nDate: Mon, 05 Feb 2007 21:55:55 GMT\nServer: Apache/2.2.5-dev (Unix) mod_perl/2.0.4-dev Perl/v5.8.8\nContent-Type: arbit\n\nAfter the fix, 100 Continue line is omitted :\nHTTP/1.1 200 OK\nDate: Mon, 05 Feb 2007 21:54:46 GMT\nServer: Apache/2.2.5-dev (Unix) mod_perl/2.0.4-dev Perl/v5.8.8\nContent-Type: arbit\n"}, {"count": 5, "tags": [], "bug_id": 38014, "attachment_id": 19532, "text": "Created attachment 19532\n[PATCH 38014]\n\nIf client send \"Expect: 100-Continue\" request then ap_http_filter prepares\n\"HTTP/1.1 100 Continue\" and appends a brigade. The issue is that modules may\nalready have started sending the headers/response. If it is so then 100\nContinue is sent after the response. In this fix \"100 Continue\" line is added\nonly if eos_sent is 0 and send_bytes is 0. Unfortunately there is no field in\nrequest_rec, I found which states that response status is already sent.\n\n\nThe patch have been tested with following situation.\n\n(a) testing with mod_perl\nGET /perl/test.pl HTTP/1.1\nHost: lbasantk3.red.iplanet.com\nContent-Length: 3\nExpect: 100-continue\n\nabc\n\n(b) testing with home url.\n\nGET /index.html HTTP/1.1\nHost: lbasantk3.red.iplanet.com\nContent-Length: 3\nExpect: 100-continue\n\nabc\n\n(c) testing with redirect\nGET /redir HTTP/1.1\nHost: lbasantk3.red.iplanet.com\nContent-Length: 3\nExpect: 100-continue\n\nabc\n\n(d) testing with mod_asis as reported by bug\nHEAD /asis/index.asis HTTP/1.1\nHost: lbasantk3.red.iplanet.com\nContent-Length: 3\nExpect: 100-continue\n\nabc\n\n\n(e) testing with HEAD request\nGET /asis/index.asis HTTP/1.1\nHost: lbasantk3.red.iplanet.com\nContent-Length: 3\nExpect: 100-continue\n\nabc\n\n\n(f) testing with a perl script which doesn't generate any output\nGET /perl/test1.pl HTTP/1.1\nHost: lbasantk3.red.iplanet.com\nContent-Length: 3\nExpect: 100-continue\n\nabc\n\n(g) HEAD request for /index.html\nHEAD /index.html HTTP/1.1\nHost: lbasantk3.red.iplanet.com\nContent-Length: 3\nExpect: 100-continue\n\nabc", "id": 99030, "time": "2007-02-06T12:36:18Z", "creator": "basant.kukreja@sun.com", "creation_time": "2007-02-06T12:36:18Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 38014, "text": "Marking the status line as PatchAvailable", "id": 99142, "attachment_id": null, "creator": "basant.kukreja@sun.com", "creation_time": "2007-02-08T16:42:49Z", "time": "2007-02-08T16:42:49Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 38014, "attachment_id": null, "text": "  !(f->r->eos_sent || f->r->bytes_sent) \n\nappears slightly more efficient, but in, principle +1.", "id": 99869, "time": "2007-02-27T17:49:46Z", "creator": "wrowe@apache.org", "creation_time": "2007-02-27T17:49:46Z", "is_private": false}, {"count": 8, "tags": [], "creator": "basant.kukreja@sun.com", "attachment_id": 19652, "id": 99912, "time": "2007-02-28T13:26:10Z", "bug_id": 38014, "creation_time": "2007-02-28T13:26:10Z", "is_private": false, "text": "Created attachment 19652\nRevised patch\n\nRevised patch after incorporating optimization suggestion by wrowe."}, {"count": 9, "tags": [], "bug_id": 38014, "attachment_id": null, "text": "Patch committed to trunk in r574240.", "id": 107962, "time": "2007-09-10T06:20:46Z", "creator": "nick@webthing.com", "creation_time": "2007-09-10T06:20:46Z", "is_private": false}, {"count": 10, "tags": [], "creator": "nick@webthing.com", "text": "Fixed in trunk in r574950.", "id": 108072, "time": "2007-09-12T06:31:36Z", "bug_id": 38014, "creation_time": "2007-09-12T06:31:36Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "rpluem@apache.org", "attachment_id": null, "id": 108667, "time": "2007-09-26T13:32:10Z", "bug_id": 38014, "creation_time": "2007-09-26T13:32:10Z", "is_private": false, "text": "Backported to 2.2.x in r574950."}]