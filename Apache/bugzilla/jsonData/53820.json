[{"count": 0, "tags": [], "bug_id": 53820, "attachment_id": null, "id": 161922, "time": "2012-09-03T11:53:09Z", "creator": "jan@brogger.no", "creation_time": "2012-09-03T11:53:09Z", "is_private": false, "text": "I'm not sure this is a FOP problem, or if it is the Docbook stylesheets that is the problem. I suspect that FOP would need to do the work anyways.\n\nThe image callout tag in Docbook (any version) is not useful. When writing user manuals for software, a not insignificant part of the work is creating screenshots and marking parts of the screen. If the screens could be \"tagged\" with callouts in a structured manner such as Docbook, then the workload would be significantly reduced. People use all sorts of horrible solutions such as doing it in Word, Powerpoint, or many different programs. \n\nOne authoritative source has a work-intensive workaround. \nhttp://norman.walsh.name/2006/06/10/imageobjectco\n\nThis documents the tag:\nhttp://www.sagehill.net/docbookxsl/Imagemaps.html\n\nCurrent status with FOP:\nCallouts are not rendered on top of images\nCallouts are rendered in a calloutlist, below the figure (using standard stylesheets).\n\nExpected behavior:\nGiven the following input:\n    <figure>\n      <title>The main screen</title>\n      <mediaobject>\n        <imageobjectco>\n          <areaspec units=\"calspair\">\n            <area coords=\"0, 0 1000, 1000\" xml:id=\"firstcallout\"/>\n          </areaspec>\n          <imageobject>\n            <imagedata fileref=\"screenshots/mainscreen.jpg\"/>\n          </imageobject>\n          <calloutlist>\n            <callout arearefs=\"firstcallout\">\n              <para>A first callout</para>\n            </callout>\n          </calloutlist>\n        </imageobjectco>\n      </mediaobject>\n    </figure>\n\nFOP should ideally produce a PDF file with a figure looks like \"mainscreen.jpg\" but is actually \"mainscreen.jpg\" merged with a \"1.svg\" file at the coordinates (callout number 1)."}, {"count": 1, "tags": [], "text": "FOP != DocBook; if you can express your enhancement request in terms of XSL-FO 1.1 [1] features or the future looking XSL-FO 2.0 requirements [2], then feel free to file a new enhancement bug\n\n[1] http://www.w3.org/TR/2006/REC-xsl11-20061205/\n[2] http://www.w3.org/TR/xslfo20-req/", "is_private": false, "id": 161924, "creator": "gadams@apache.org", "time": "2012-09-03T12:27:52Z", "bug_id": 53820, "creation_time": "2012-09-03T12:27:52Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> FOP != DocBook; if you can express your enhancement request in terms of\n> XSL-FO 1.1 [1] features or the future looking XSL-FO 2.0 requirements [2],\n> then feel free to file a new enhancement bug\n> \n> [1] http://www.w3.org/TR/2006/REC-xsl11-20061205/\n> [2] http://www.w3.org/TR/xslfo20-req/\n\nA little less abrupt answer would be preferable. User feedback is precious and we wouldn't want to scare them off by responding bluntly.\n\nJan, please describe your issue on the fop-users mailing list: http://xmlgraphics.apache.org/fop/dev/index.html#mail-fop-dev (Bugzilla is used to report identified bugs.)\nLike Glenn send, your will have to provide us with an XSL-FO file (the result of the transformation of your source DocBook file by the DocBook stylesheets), as this is what we are working with. Ideally you would make it as small as possible.\n\nThat said, you may want to try the docbook-apps mailing list first, as it might just be a matter of customizing the DocBook stylesheets.\nhttp://wiki.docbook.org/DocBookAppsMailingList\n\nThanks,\nVincent", "is_private": false, "id": 161942, "creator": "vhennebert@gmail.com", "time": "2012-09-04T14:49:54Z", "bug_id": 53820, "creation_time": "2012-09-04T14:49:54Z", "attachment_id": null}]