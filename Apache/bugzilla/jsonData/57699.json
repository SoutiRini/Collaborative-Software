[{"count": 0, "tags": [], "text": "Office 2013 has added the option to save as \"strict\" ooxml files, which as reported in http://stackoverflow.com/questions/29023542/how-to-parse-strict-xlsx-file-in-java have a different core type\n\nIn r1666410 some sample strict xlsx files have been added, support is needed to support them (for reading at least)", "is_private": false, "bug_id": 57699, "id": 181725, "time": "2015-03-13T11:43:49Z", "creator": "apache@gagravarr.org", "creation_time": "2015-03-13T11:43:49Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "id": 181740, "time": "2015-03-13T18:01:59Z", "bug_id": 57699, "creation_time": "2015-03-13T18:01:59Z", "is_private": false, "text": "It looks like some namespace munging is going to be required to properly support this. After making changes to ExtractorFactory and POIXMLDocumentPart to handle the differing core relationship type, it now fails at the xmlbeans level:\n\norg.apache.xmlbeans.XmlException: error: The document is not a workbook@http://schemas.openxmlformats.org/spreadsheetml/2006/main: document element namespace mismatch expected \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" got \"http://purl.oclc.org/ooxml/spreadsheetml/main\"\n\tat org.apache.poi.xssf.usermodel.XSSFWorkbook.onDocumentRead(XSSFWorkbook.java:399)\n\nCaused by: org.apache.xmlbeans.XmlException: error: The document is not a workbook@http://schemas.openxmlformats.org/spreadsheetml/2006/main: document element namespace mismatch expected \"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" got \"http://purl.oclc.org/ooxml/spreadsheetml/main\"\n\tat org.apache.xmlbeans.impl.store.Locale.verifyDocumentType(Locale.java:459)\n\tat org.apache.xmlbeans.impl.store.Locale.autoTypeDocument(Locale.java:364)\n\tat org.apache.xmlbeans.impl.store.Locale.parseToXmlObject(Locale.java:1280)\n\tat org.apache.xmlbeans.impl.store.Locale.parseToXmlObject(Locale.java:1264)\n\tat org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase.parse(SchemaTypeLoaderBase.java:345)\n\tat org.openxmlformats.schemas.spreadsheetml.x2006.main.WorkbookDocument$Factory.parse(Unknown Source)\n\nThe purl namespace crops up in most of the xml files at least somewhere, so a general mapping solution is probably required if we want to take this further"}, {"count": 2, "tags": [], "text": "*** Bug 57914 has been marked as a duplicate of this bug. ***", "is_private": false, "bug_id": 57699, "id": 188904, "time": "2016-02-27T10:24:56Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-02-27T10:24:56Z", "attachment_id": null}, {"count": 3, "tags": [], "creator": "fanningpj@yahoo.com", "text": "http://pyxb.sourceforge.net/PyXB-1.2.2/bundles.html has a list of namespace URLs that could be used in a mapping class.", "id": 192446, "time": "2016-07-17T12:58:18Z", "bug_id": 57699, "creation_time": "2016-07-17T12:58:18Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 57699, "is_private": false, "count": 4, "id": 192448, "time": "2016-07-17T13:28:16Z", "creator": "fanningpj@yahoo.com", "creation_time": "2016-07-17T13:28:16Z", "text": "Without spending much time on this, I have been unable to track down the XSDs with the purl namespaces (OOXML Strict). From accounts, they should be very similar to the OOXML Transitional schemas other than the namespaces.\n2 approaches pop to mind.\n1. In poi-ooxml-schemas, we could create XmlBeans for the OOXML Strict namespaces by using modified versions of the OOXML Transitional schemas.\n2. support a transformation of the XML in input docs so that the OOXML Strict namespaces are replaced by OOXML transitional equivalents."}, {"count": 5, "tags": [], "creator": "fanningpj@yahoo.com", "text": "I have added some basic prototype code to convert Strict OOXML files to https://github.com/pjfanning/ooxml-strict-converter - there is still a lot of work to do but I'm just posting it here if anyone wants to review what I'm doing.", "id": 192456, "time": "2016-07-17T15:51:17Z", "bug_id": 57699, "creation_time": "2016-07-17T15:51:17Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 57699, "text": "Looks good so far.\n\nIn the interest of wanting to start committing this early so that we can update our unit tests to handle XSSF Strict:\n* Are we planning on having XSSFWorkbook transparently handle strict workbooks or will be have a different class for that?\nWill this be in the o.a.p.xssf.usermodel package or are we going to package it in o.a.p.xssf.extractor or create o.a.p.xssf.strict?\n\nIn the long term, I would like for POI to be able to read and write strict files without having to downconvert to non-strict. This probably affects how we go about packaging this--making it more than a distant examples or static utility converter class.", "id": 192468, "attachment_id": null, "creator": "onealj@apache.org", "creation_time": "2016-07-18T00:34:47Z", "time": "2016-07-18T00:34:47Z", "is_private": false}, {"text": "FYI, there is also a converter provided by Microsoft: https://www.microsoft.com/en-us/download/details.aspx?id=38828, could come in handy when doing development work on this topic.", "tags": [], "bug_id": 57699, "is_private": false, "count": 7, "id": 192476, "time": "2016-07-18T08:19:07Z", "creator": "dominik.stadler@gmx.at", "creation_time": "2016-07-18T08:19:07Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "fanningpj@yahoo.com", "attachment_id": null, "id": 192507, "time": "2016-07-18T22:46:44Z", "bug_id": 57699, "creation_time": "2016-07-18T22:46:44Z", "is_private": false, "text": "Hi Javen,\nI can understand that we will want to be able to save POI documents using Strict OOXML but my focus for now is just on the down-porting to Transitional OOXML to allow parsing.\nFor now, I'm looking at a standalone utility to down-port but this could be plugged into XSSFWorkbook and XSSF extractor under the hood. They could either do some pre-processing of the input doc to determine if it is Strict OOXML and the down-port to a temp file and then read from the temp file.\nMy prototype code is working now for the SimpleStrict.xlsx in the POI test data folder.\nI'll see about testing with more input files."}]