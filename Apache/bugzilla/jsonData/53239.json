[{"count": 0, "attachment_id": null, "creator": "bjornar.ness@gmail.com", "is_private": false, "id": 159084, "time": "2012-05-16T08:33:09Z", "bug_id": 53239, "creation_time": "2012-05-16T08:33:09Z", "tags": [], "text": "Running httpd in a vm behind a rate-limited (tc, ingress 500kbps, 50kB burst) line, httpd has problems delivering the data in time. If burst is set to more than the actual data needed, everything is fine, but when burst is 50kB for example, and total data is ~150kB, it transfers the first ~50kB quickly, and then goes in for a huge lag (maby 20 secs) before transferring the rest slowly. No memory or cpu restrictions. scp/ftp/lighttpd/nginx tested on the same vm with the same (and much lower) shaping, and works as expected. Response time of httpd is fine, its the transfer that seems to have a bug in it.\n\nUsing event model.\n\n\nServer version: Apache/2.5.0-dev (Unix)\nServer built:   May 16 2012 09:35:37\nServer's Module Magic Number: 20120211:3\nServer loaded:  APR 2.0.0-dev\nCompiled using: APR 2.0.0-dev\nArchitecture:   64-bit\nServer MPM:     event\n  threaded:     yes (fixed thread count)\n    forked:     yes (variable process count)\nServer compiled with....\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses enabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=256\n -D HTTPD_ROOT=\"/opt/apache\"\n -D SUEXEC_BIN=\"/opt/apache/bin/suexec\"\n -D DEFAULT_PIDLOG=\"logs/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n\nCompiled in modules:\n  core.c\n  mod_authn_file.c\n  mod_authn_dbm.c\n  mod_authn_anon.c\n  mod_authn_dbd.c\n  mod_authn_socache.c\n  mod_authn_core.c\n  mod_authz_host.c\n  mod_authz_groupfile.c\n  mod_authz_user.c\n  mod_authz_dbm.c\n  mod_authz_owner.c\n  mod_authz_dbd.c\n  mod_authz_core.c\n  mod_access_compat.c\n  mod_auth_basic.c\n  mod_auth_form.c\n  mod_auth_digest.c\n  mod_allowmethods.c\n  mod_apreq2.c\n  mod_file_cache.c\n  mod_cache.c\n  mod_cache_disk.c\n  mod_socache_shmcb.c\n  mod_socache_dbm.c\n  mod_socache_memcache.c\n  mod_so.c\n  mod_watchdog.c\n  mod_dbd.c\n  mod_dumpio.c\n  mod_firehose.c\n  mod_echo.c\n  mod_buffer.c\n  mod_data.c\n  mod_ratelimit.c\n  mod_reqtimeout.c\n  mod_ext_filter.c\n  mod_request.c\n  mod_include.c\n  mod_filter.c\n  mod_reflector.c\n  mod_substitute.c\n  mod_sed.c\n  mod_charset_lite.c\n  mod_deflate.c\n  mod_xml2enc.c\n  mod_proxy_html.c\n  http_core.c\n  mod_mime.c\n  mod_log_config.c\n  mod_log_debug.c\n  mod_log_forensic.c\n  mod_logio.c\n  mod_env.c\n  mod_mime_magic.c\n  mod_expires.c\n  mod_headers.c\n  mod_usertrack.c\n  mod_unique_id.c\n  mod_setenvif.c\n  mod_version.c\n  mod_remoteip.c\n  mod_proxy.c\n  mod_proxy_connect.c\n  mod_proxy_ftp.c\n  mod_proxy_http.c\n  mod_proxy_fcgi.c\n  mod_proxy_scgi.c\n  mod_proxy_fdpass.c\n  mod_proxy_ajp.c\n  mod_proxy_balancer.c\n  mod_proxy_express.c\n  mod_session.c\n  mod_session_cookie.c\n  mod_session_dbd.c\n  mod_slotmem_shm.c\n  mod_slotmem_plain.c\n  mod_ssl.c\n  mod_dialup.c\n  mod_lbmethod_byrequests.c\n  mod_lbmethod_bytraffic.c\n  mod_lbmethod_bybusyness.c\n  mod_lbmethod_heartbeat.c\n  event.c\n  mod_unixd.c\n  mod_heartbeat.c\n  mod_heartmonitor.c\n  mod_dav.c\n  mod_status.c\n  mod_autoindex.c\n  mod_asis.c\n  mod_info.c\n  mod_cgid.c\n  mod_dav_fs.c\n  mod_dav_lock.c\n  mod_vhost_alias.c\n  mod_negotiation.c\n  mod_dir.c\n  mod_actions.c\n  mod_speling.c\n  mod_userdir.c\n  mod_alias.c\n  mod_rewrite.c\n\n\nAttached strace of downloading a file"}, {"count": 1, "attachment_id": 28785, "creator": "bjornar.ness@gmail.com", "is_private": false, "id": 159085, "time": "2012-05-16T08:34:32Z", "bug_id": 53239, "creation_time": "2012-05-16T08:34:32Z", "tags": [], "text": "Created attachment 28785\nstrace -tt -d httpd -X"}, {"count": 2, "attachment_id": 28786, "creator": "bjornar.ness@gmail.com", "is_private": false, "id": 159086, "time": "2012-05-16T09:23:29Z", "bug_id": 53239, "creation_time": "2012-05-16T09:23:29Z", "tags": [], "text": "Created attachment 28786\nhar-log of site loading in httpd 2.5-trunk\n\nUse:\n\nhttp://pcapperf.appspot.com/\n\nto view har"}, {"count": 3, "attachment_id": 28787, "creator": "bjornar.ness@gmail.com", "is_private": false, "id": 159087, "time": "2012-05-16T09:24:02Z", "bug_id": 53239, "creation_time": "2012-05-16T09:24:02Z", "tags": [], "text": "Created attachment 28787\nhar-log of site loading in lighttpd\n\nUse:\n\nhttp://pcapperf.appspot.com/\n\nto view har"}, {"count": 4, "tags": [], "text": "I don't think this is httpd's fault. The strace shows that at 08:14:49.102908, httpd starts to send data. The socket buffer gets full a few times, httpd uses poll() to wait each time and sends more data. This works as expected until 08:14:49.105963 when httpd has sent about 75k of data. There, the socket buffer is full again but the poll() returns only 25 seconds later, at 08:15:15.686502. This means either there was no data going through the network and the buffer was really not writable for these 25 seconds, or there is a kernel bug.\n\nOf course, it is rather strange that Apache httpd triggers this problem but it seems lighttpd doesn't. Accordingly, I have no idea what we could do to avoid the problem. If the kernel tells us we can't write to the socket, there is nothing we can do about that.\n\nYou could try analyzing the network traffic with wireshark and see if there are lost packets.\n\nNB: There seems to be an unrelated bug somewhere because the mmap() of the read file is done at unaligned offsets, which fails and makes httpd fall back to writev(). I don't see this here on my system. This could be due to you using apr 2.0 which is unreleased and not stable. I would recommend to use the newest released versions of apr and apr-util instead (1.4.x).", "is_private": false, "bug_id": 53239, "id": 159106, "time": "2012-05-16T20:19:13Z", "creator": "sf@sfritsch.de", "creation_time": "2012-05-16T20:19:13Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "bjornar.ness@gmail.com", "attachment_id": 28800, "id": 159129, "time": "2012-05-17T17:43:40Z", "bug_id": 53239, "creation_time": "2012-05-17T17:43:40Z", "is_private": false, "text": "Created attachment 28800\npcap of transfer (not same as above)\n\nIngress limited to 200kbps with 20Kb burst"}, {"count": 6, "tags": [], "text": "Tried with sendfile disabled (ref: https://issues.apache.org/bugzilla/show_bug.cgi?id=53253) \n\nNo change. Pcap is apache running as worker with sendfile off", "attachment_id": null, "id": 159130, "creation_time": "2012-05-17T17:45:03Z", "time": "2012-05-17T17:45:03Z", "creator": "bjornar.ness@gmail.com", "bug_id": 53239, "is_private": false}, {"count": 7, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "is_private": false, "id": 159163, "time": "2012-05-18T14:14:47Z", "bug_id": 53239, "creation_time": "2012-05-18T14:14:47Z", "text": "$ grep 'pid   438.*08:14:49' logfile | sed 's/writev(6, .*) = /writev(6, ....) = /'\n...\n[pid   438] 08:14:49.102908 writev(6, ....) = 14480\n[pid   438] 08:14:49.103150 writev(6, ....) = -1 EAGAIN (Resource temporarily unavailable)\n[pid   438] 08:14:49.103347 writev(6, ....) = 20272\n[pid   438] 08:14:49.103578 writev(6, ....) = -1 EAGAIN (Resource temporarily unavailable)\n[pid   438] 08:14:49.103775 poll([{fd=6, events=POLLOUT}], 1, 60000) = 1 ([{fd=6, revents=POLLOUT}])\n[pid   438] 08:14:49.103837 writev(6, ....) = 14480\n\nThat second writev() call failed with EAGAIN - why did httpd immediately retry it without first doing a poll()?  That looks weird and wrong."}, {"count": 8, "tags": [], "creator": "jorton@redhat.com", "attachment_id": null, "is_private": false, "id": 159192, "time": "2012-05-21T07:31:00Z", "bug_id": 53239, "creation_time": "2012-05-21T07:31:00Z", "text": "Can you reproduce this if using prefork rather than event?"}, {"count": 9, "tags": [], "creator": "bjornar.ness@gmail.com", "attachment_id": null, "is_private": false, "id": 159193, "time": "2012-05-21T08:17:42Z", "bug_id": 53239, "creation_time": "2012-05-21T08:17:42Z", "text": "I reproduced with worker atleast, should I also try with prefork -X ?"}, {"count": 10, "tags": [], "creator": "bjornar.ness@gmail.com", "attachment_id": 28808, "id": 159195, "time": "2012-05-21T11:22:05Z", "bug_id": 53239, "creation_time": "2012-05-21T11:22:05Z", "is_private": false, "text": "Created attachment 28808\nstrace -tt -d /opt/apache/bin/httpd -X > logfile 2>&1\n\nServer version: Apache/2.5.0-dev (Unix)\nServer built:   May 21 2012 12:27:51\nServer's Module Magic Number: 20120211:3\nServer loaded:  APR 2.0.0-dev\nCompiled using: APR 2.0.0-dev\nArchitecture:   64-bit\nServer MPM:     prefork\n  threaded:     no\n    forked:     yes (variable process count)\n\nServer compiled with....\n -D APR_HAS_SENDFILE\n -D APR_HAS_MMAP\n -D APR_HAVE_IPV6 (IPv4-mapped addresses disabled)\n -D APR_USE_SYSVSEM_SERIALIZE\n -D APR_USE_PTHREAD_SERIALIZE\n -D SINGLE_LISTEN_UNSERIALIZED_ACCEPT\n -D APR_HAS_OTHER_CHILD\n -D AP_HAVE_RELIABLE_PIPED_LOGS\n -D DYNAMIC_MODULE_LIMIT=256\n -D HTTPD_ROOT=\"/opt/apache\"\n -D SUEXEC_BIN=\"/opt/apache/bin/suexec\"\n -D DEFAULT_PIDLOG=\"logs/httpd.pid\"\n -D DEFAULT_SCOREBOARD=\"logs/apache_runtime_status\"\n -D DEFAULT_ERRORLOG=\"logs/error_log\"\n -D AP_TYPES_CONFIG_FILE=\"conf/mime.types\"\n -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\nCompiled in modules:\n  core.c\n  mod_authn_file.c\n  mod_authn_dbm.c\n  mod_authn_core.c\n  mod_authz_host.c\n  mod_authz_user.c\n  mod_authz_core.c\n  mod_access_compat.c\n  mod_auth_basic.c\n  mod_apreq2.c\n  mod_request.c\n  http_core.c\n  mod_mime.c\n  mod_log_config.c\n  mod_logio.c\n  mod_env.c\n  mod_headers.c\n  mod_setenvif.c\n  mod_proxy.c\n  mod_proxy_fcgi.c\n  prefork.c\n  mod_unixd.c\n  mod_vhost_alias.c\n  mod_dir.c\n  mod_rewrite.c"}, {"count": 11, "tags": [], "bug_id": 53239, "attachment_id": null, "id": 159196, "creation_time": "2012-05-21T11:24:12Z", "time": "2012-05-21T11:24:12Z", "creator": "bjornar.ness@gmail.com", "text": "First download is firefox, second wget", "is_private": false}, {"count": 12, "tags": [], "creator": "bjornar.ness@gmail.com", "attachment_id": 28812, "id": 159207, "time": "2012-05-22T07:25:46Z", "bug_id": 53239, "creation_time": "2012-05-22T07:25:46Z", "is_private": false, "text": "Created attachment 28812\nstrace -tt -d /opt/lighttpd/sbin/lighttpd\n\nlighttpd running in same vm with same ingress bw limit, but delivering data as should be expected. ingress limit 200kbps/20KB burst"}, {"count": 13, "tags": [], "creator": "bjornar.ness@gmail.com", "attachment_id": null, "id": 162385, "time": "2012-09-25T10:39:43Z", "bug_id": 53239, "creation_time": "2012-09-25T10:39:43Z", "is_private": false, "text": "Has anyone looked into this? Using 2.4.2 now, and still seeing\nthe problem, here is how you can reproduce:\n\n\ntc qdisc add dev eth0 root handle 1:\ntc qdisc add dev eth0 root handle 1: htb default 10\ntc class add dev eth0 parent 1: classid 1:1 htb rate 10mbps burst 15k\ntc class add dev eth0 parent 1:1 classid 1:10 htb rate 100kbps burst 10k\n\n... now this works fine here (100kbps)..\n\n\u00f8ets try 200kbps\n\ntc class replace dev eth0 parent 1:1 classid 1:10 htb rate 200kbps burst 10k\n\n... try downloading some file from apache... completely hangs\nwhat is going on here? Eventually try other speeds.\n\n\nLighttpd handles the exact same settings just fine, so I dont want to believe this is not a httpd bug!"}]