[{"count": 0, "attachment_id": null, "bug_id": 13632, "is_private": false, "id": 24532, "time": "2002-10-15T06:03:20Z", "creator": "bloch@clearwellsystems.com", "creation_time": "2002-10-15T06:03:20Z", "tags": [], "text": "If you have a condition that would set a property... but the property has\nalready been set, the condition doesn't change the value of the\nproperty."}, {"count": 1, "tags": [], "bug_id": 13632, "attachment_id": null, "text": "Properties are immutable once set.  This is by design.", "id": 24537, "time": "2002-10-15T08:13:15Z", "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-10-15T08:13:15Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 13632, "attachment_id": null, "text": "FYI, this actually worked fine in ant 1.4.1.\n\nYou might want to reconsider.... wrt to bwcompat and all.\n\n-Eric", "id": 24538, "time": "2002-10-15T08:31:24Z", "creator": "bloch@clearwellsystems.com", "creation_time": "2002-10-15T08:31:24Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 13632, "attachment_id": null, "text": "It was a \"bug\" that it worked in previous versions and it only worked in certain\ntricky ways.  There are very good reasons why property immutability is a Good Thing.\n\nYou might want to reconsider how you're implementing  your build file.  There\nare ways around this by using <antcall> (which is an isolated new Ant \"stack\"\nthat can have its own properties without affecting the calling Ant).", "id": 24540, "time": "2002-10-15T09:30:47Z", "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-10-15T09:30:47Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 13632, "is_private": false, "id": 24565, "creation_time": "2002-10-15T17:32:18Z", "time": "2002-10-15T17:32:18Z", "creator": "bloch@clearwellsystems.com", "text": "At the very least, you should \"warn\" rather that be silent about it.\nI've changed the summary and reopened.  \n\nIt's quite difficult to diagnose, specially since it use to work in 1.4.\n\nFYI, I change the property \"inside\" a single target.  Can't see why\nnot supporting that is \"bad\".   \n\n", "attachment_id": null}, {"count": 5, "attachment_id": null, "bug_id": 13632, "is_private": false, "id": 24567, "time": "2002-10-15T17:45:41Z", "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-10-15T17:45:41Z", "tags": [], "text": "If we warned every time a property was not set due to immutability, then the\noutput would be horrendous for many folks builds.  Did you try -verbose?  It\ndoes log this in verbose mode, so reverting to WORKSFORME this time.  :)\n\nProperty immutability is the key to controlling Ant from multiple levels.  If\nyou allow a property to change then you have lost the ability to control it from\nthe \"outside\" (wherever that \"outside\" might be, command-line, another Ant\ncontroller build file, etc)."}, {"count": 6, "tags": [], "creator": "bloch@clearwellsystems.com", "attachment_id": null, "id": 24573, "time": "2002-10-15T18:18:54Z", "bug_id": 13632, "creation_time": "2002-10-15T18:18:54Z", "is_private": false, "text": "Changed summary again.  What I'm talking about is actually a syntax error\naccording to you.\n\nI\"m talking about this happening within a single target.  \nSpitting out an error message seems completely reasonable. \nThis could be done via the parser actually.\n\n-Eric\n"}, {"count": 7, "tags": [], "creator": "jakarta@ehatchersolutions.com", "attachment_id": null, "id": 24574, "time": "2002-10-15T18:38:29Z", "bug_id": 13632, "creation_time": "2002-10-15T18:38:29Z", "is_private": false, "text": "Again, this is by design to *not* error.  What if, and this is not a\nhypothetical \"what if\", you wanted to force the setting of a property from the\noutside on occasion but by default it used a condition.  Having it error is not\nthe desired behavior.  Ant's very own build file takes advantage of this type of\nthing even.\n\nI'll leave this open this time with the idea that a change could be made to add\na 'failonexistence' property (or some nicer name) that you could set to true and\nforce a failure in this case, but it would be something you'd have to specify\nfor each <condition> manually."}, {"count": 8, "tags": [], "bug_id": 13632, "attachment_id": null, "id": 24575, "time": "2002-10-15T18:50:25Z", "creator": "bloch@clearwellsystems.com", "creation_time": "2002-10-15T18:50:25Z", "is_private": false, "text": "I htink I haven't been clear.   The following code is *always* an error \nand should *always* be rejected because the condition\nstatement could *never* set the property regardless of the actual logic\ninside the condition if properties are immutable.  \n\n<target name=\"buggy\" >\n  <property name=\"foo\" value=\"bar\"/>\n  <condition property=\"foo\" value=\"bar2\" >\n     some condition logic\n  </condition>\n</target>\n\nSame with\n\n<target name=\"buffy\" >\n   <property name=\"foo\" value=\"bar\"/>\n   <property name=\"foo\" value\"bar2\" />\n</target\n\nThe second property element should be flagged as an error by the parser, too.\n\nI hope this helps explain my earlier comments.\n\nThanks!\n\n\n\n"}, {"count": 9, "tags": [], "bug_id": 13632, "is_private": false, "id": 24577, "creation_time": "2002-10-15T18:58:26Z", "time": "2002-10-15T18:58:26Z", "creator": "jakarta@ehatchersolutions.com", "text": "You're being perfectly clear.  It is not an error.  This is by design.  This is\njust the \"Ant Way\".  Get used to it.  I'm marking as WONTFIX again since the\nenhancement request doesn't seem to be what you want.\n\nThe parser could not catch this particular thing - it would have to be Ant's\ncore at the very least, and again, its by design that it works this way - trust me.", "attachment_id": null}, {"count": 10, "tags": [], "creator": "bloch@clearwellsystems.com", "attachment_id": null, "id": 24580, "time": "2002-10-15T19:18:29Z", "bug_id": 13632, "creation_time": "2002-10-15T19:18:29Z", "is_private": false, "text": "I understand now.\n\nThe \"ant way\" is to break backwards compatibility, make build files very hard\nto debug, and insist that a \"design\" is correct even in the face of obvious\nflaws.  I understand that the value of immutability for hierarchical systems,\nbut you've missed a subtlety.\n\nAlso..by \"parser\"... I meant ant's use of the \"parser\".  \nIt should be just 10 lines of code or so to use JDOM or some other xml parser\nto determine if there are conflicting condition/property tags inside a task.\nReally really easy.  \n\nFYI... the documentation page doesn't appear to mention anything about\nproperties being immutable, either.  So at worst, this is a harmful\ndocumentation error.  I've changed the summary and reopened.  Don't you just\nlove me yet?\n\nhttp://jakarta.apache.org/ant/manual/using.html#properties"}, {"count": 11, "tags": [], "creator": "sbailliez@apache.org", "text": "http://jakarta.apache.org/ant/manual/CoreTasks/property.html", "id": 24581, "time": "2002-10-15T19:22:51Z", "bug_id": 13632, "creation_time": "2002-10-15T19:22:51Z", "is_private": false, "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 13632, "text": "One (hopefully) final comment on this.  It was not a goal to break backwards\ncompatibility, it was to close up a hole in how properties were handled.  Think\nof it as \"fixing a bug\" if you must, because <condition> was a special case and\ndid things slightly differently than <property> and other tasks in this regard\nand broke property immutability.\n\nAgain, you have the -verbose option and -debug option for your debugging\npleasure, which provides the feedback you are insisting on.", "id": 24583, "time": "2002-10-15T19:43:36Z", "creator": "jakarta@ehatchersolutions.com", "creation_time": "2002-10-15T19:43:36Z", "is_private": false, "attachment_id": null}]