[{"count": 0, "tags": [], "bug_id": 29217, "is_private": false, "text": "There are references to calloc() and free() in the non-shared memory cache code.\nThese should use pools instead.", "id": 58104, "time": "2004-05-26T01:50:39Z", "creator": "minfrin@sharp.fm", "creation_time": "2004-05-26T01:50:39Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 29217, "attachment_id": null, "text": "Using pools instead of calloc() and free() wouldn't follow the same memory \nmodel that is currently implemented by util_ald_alloc() and util_ald_free().  \nFor the shared memory cache, these function use apr_rmm_calloc() and \napr_rmm_free().  The most logical mapping for non-shared memory is calloc() and \nfree(). It would also cause a memory leak since there would be no way to \nreclaim the memory until the application closed.", "id": 58973, "time": "2004-06-09T22:39:59Z", "creator": "bnicholes@apache.org", "creation_time": "2004-06-09T22:39:59Z", "is_private": false}, {"count": 2, "tags": [], "creator": "minfrin@apache.org", "attachment_id": null, "id": 58974, "time": "2004-06-09T22:43:22Z", "bug_id": 29217, "creation_time": "2004-06-09T22:43:22Z", "is_private": false, "text": "The idea is to use apr_rmm_calloc() for the shared memory case, and memory from\nthe child config pool in the non shared memory case. When the server is\nrestarted, the pool is cleaned up and the cache started from scratch.\n\nThe purpose of this proposal is the fix the memory leak you mentioned.\n"}, {"count": 3, "tags": [], "bug_id": 29217, "attachment_id": null, "is_private": false, "id": 64530, "time": "2004-10-03T16:29:29Z", "creator": "minfrin@apache.org", "creation_time": "2004-10-03T16:29:29Z", "text": "Seems calloc() and free(0 are the way to go.\n"}]