[{"count": 0, "tags": [], "creator": "pauln@ablazesoftware.co.nz", "is_private": false, "id": 107252, "attachment_id": null, "bug_id": 43214, "creation_time": "2007-08-25T05:50:52Z", "time": "2007-08-25T05:50:52Z", "text": "OVERVIEW\n--------\nEmbedded.setRealm(Realm) does not seem to set the Realm of StandardEngine.  This\ncauses an authenticated JAAS principal (user) to always get a 403 (access to the\nrequested resource has been denied) error displayed on the browser.\n\nSTEPS TO REPRODUCE\n-------------------\nI set up a Realm like this:\n\n\n   // create the engine and default host\n   catalinaEngine = embeddedCatalina.createEngine();\n   catalinaEngine.setName(REALM_PNS); //JAAS Realm name must equal engine name \n\n   // create realm for authentication\n   JAASRealm jaasRealm = new JAASRealm();\n   jaasRealm.setUserClassNames(\"nz.co.picksend.usermanagement.User\");\n   jaasRealm.setRoleClassNames(\"nz.co.picksend.usermanagement.Role\");\n   jaasRealm.setUseContextClassLoader(false);\n   embeddedCatalina.setRealm(jaasRealm);\n\n\nWhen I log in to any web application, I am authenticated but get a 403 (access\nto the requested resource has been denied) error on any page.  The reason is\nthat the instance of StandardEngine has a different instance of JAASRealm than\nwas created with the code above.  The new instance is created in\nStandardEngine.getRealm() if no instance of a realm already exists (line 139):\n\n\n   public Realm getRealm() {\n        Realm configured=super.getRealm();\n        // If no set realm has been called - default to JAAS\n        // This can be overriden at engine, context and host level  \n        if( configured==null ) {\n            configured=new JAASRealm();\n            this.setRealm( configured );  //<-- NEW INSTANCE CREATED HERE\n        }\n        return configured;\n    }\n\nThis realm naturally does not contain the values for userClassNames and\nroleClassNames and thefore cannot find out if a user is in a particular role,\ncausing a 403 error.\n\nStepping through the code, it appears that Embedded.setRealm(Realm) never\nresults in a call to StandardEngine.setRealm(Realm).\n\nWORKAROUND\n----------\nThe workaround is to create the instance of JAASRealm before creating Embedded,\nsuch as:\n\n   embeddedCatalina = new Embedded(jaasRealm);\n\nHowever, you must use the deprecated method JAASRealm.setAppName() to set the\nJAAS name because the containers name cannot be determined at this point and\ntherefore defaults to \"other\"."}, {"count": 1, "tags": [], "bug_id": 43214, "attachment_id": null, "id": 116121, "time": "2008-05-01T15:57:12Z", "creator": "markt@apache.org", "creation_time": "2008-05-01T15:57:12Z", "is_private": false, "text": "This looks to be as designed to me. You have updated the default Realm after you create the engine. You need to do things the other way around.\n\nembeddedCatalina.setRealm() sets the default realm for new components. You don't need to set the appName - it should be set as a result of the call to engine.setRealm() in Embedded.createEngine()\n\nYou could also create your Realm and add it directly to the new Engine.\n\nAs far as I can tell from reading the code, adding a JAASRealm to any container will result in the JAASRealm taking on the name of the container as returned by Container.getName()"}]