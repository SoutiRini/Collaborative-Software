[{"count": 0, "attachment_id": null, "bug_id": 1931, "is_private": false, "id": 2680, "time": "2001-05-29T03:42:19Z", "creator": "faensen@inf.fu-berlin.de", "creation_time": "2001-05-29T03:42:19Z", "tags": [], "text": "In a previous version (1.2) the following code worked well:\n\n\tStringReader sr = new StringReader(xmldoc);\n\tInputSource inputSource = new InputSource(sr);\n\n\tparser.parse(inputSource);\n\nSwitching to version 1.4.0 resulted in a NullPointerException thrown in the \nprocess() method.\n\nDebugging the code revealed that in \norg.apache.xerces.readers.DefaultEntityHandler InputSource.getSystemId() is \ninvoked and the result is assigned to a local variable fSystemId.\n\nIn\naddExternalPEDecl(int name, int publicId, int systemId, boolean isExternal) \nfStringPool.addSymbol(fSystemId) is invoked.\naddSymbol tries to determine the length of the parameter which is null.\n\nAccording to the documentation it is not necessary to explicitely assign a \nsystemId to an InputSource. I don't no wether org.xml.sax.InputSource should \nexplicitely assign a default SystemId or if the DefaultEntityHandler needs to \nhandle a \"null\" SystemId.\n\nWorkaround:\n\nAssign a dummy SystemId to the InputSource:\n\tStringReader sr = new StringReader(xmldoc);\n\tInputSource inputSource = new InputSource(sr);\n\tinputSource.setSystemId(\"some dummy value\");\n\tparser.parse(inputSource);"}, {"attachment_id": null, "tags": [], "creator": "neilg@ca.ibm.com", "text": "I could not reproduce the problem.  Below I've attached the code I used--based \non the little that was included in the original report--to try and reproduce \nthe bug.  I should also note that I also tried with an external DTD referenced \nin the XML String in the StringReader object, and still no NullPointerException \nemerged.  \n\nPerhaps you could try extracting from CVS; if the problem persists please \nsubmit your complete program + whatever data files you're using.  \n\nimport org.xml.sax.*;\nimport java.io.*;\nimport java.lang.*;\nimport java.util.*;\nimport org.apache.xerces.parsers.SAXParser;\n\npublic class InputBug {\n    public static void main(String[] args)  throws Exception {\n\n\t    StringReader sr = new StringReader(\"<?xml version=\\\"1.0\\\"?> <!\nDOCTYPE foo [ <!ELEMENT bar (#PCDATA)> <!ELEMENT foo (bar)> ]> <foo> <bar>Test!\n</bar> </foo> \");\n\t    InputSource inputSource = new InputSource(sr);\n        SAXParser parser = new SAXParser();\n        try {\n            parser.setFeature(\"http://xml.org/sax/features/validation\", true);\n        } catch (SAXNotRecognizedException e) {\n            System.err.println(\"feature name wrong...\");\n        }\n        parser.setErrorHandler(new MyErrorHandler());\n        parser.parse(inputSource);\n    }\n} // end class InputBug\n\n    class MyErrorHandler implements ErrorHandler {\n    /** Warning. */\n    public void warning(SAXParseException ex) {\n\n        System.err.println(\"[Warning] \"+\n                           getLocationString(ex)+\": \"+\n                           ex.getMessage());\n    }\n\n    /** Error. */\n    public void error(SAXParseException ex) {\n\n        System.err.println(\"[Error] \"+\n                           getLocationString(ex)+\": \"+\n                           ex.getMessage());\n    }\n\n    /** Fatal error. */\n    public void fatalError(SAXParseException ex) throws SAXException {\n\n        System.err.println(\"[Fatal Error] \"+\n                           getLocationString(ex)+\": \"+\n                           ex.getMessage());\n//        throw ex;\n    }\n\n    /** Returns a string of the location. */\n    private String getLocationString(SAXParseException ex) {\n        StringBuffer str = new StringBuffer();\n\n        String systemId = ex.getSystemId();\n        if (systemId != null) {\n            int index = systemId.lastIndexOf('/');\n            if (index != -1)\n                systemId = systemId.substring(index + 1);\n            str.append(systemId);\n        }\n        str.append(':');\n        str.append(ex.getLineNumber());\n        str.append(':');\n        str.append(ex.getColumnNumber());\n\n        return str.toString();\n\n    } // getLocationString(SAXParseException):String\n }\n", "count": 1, "id": 3013, "time": "2001-06-15T13:31:52Z", "bug_id": 1931, "creation_time": "2001-06-15T13:31:52Z", "is_private": false}]