[{"count": 0, "tags": [], "creator": "jmeterlist@yahoo.com", "attachment_id": null, "text": "I am having a problem with a while loop controller inside of a \nforeach controller. It seems that jmeter enters the while loop every other \nforeach iteration (i reset the loopflag to true before it get to the \nwhile loop and to false once it gets inside of while)\n\n\n>   -set test variables of pattern \"variablename_\" + index (1-10)\n> -Foreach( variablename_ )\n> {\n>      *set while loopflag to \"true\"\n>      *while loop (loopflag)\n>         {\n>            print test message\n>            set loopflag to \"false\"\n>         }\n> }\n>\n>   The test message is being printed on every other iteration of the \nforeach.\n\n(requires beanshell to run)\n   \n  <jmeterTestPlan version=\"1.1\" properties=\"1.7\">\n  <hashTree>\n    <TestPlan>\n      <elementProp name=\"TestPlan.user_defined_variables\" \nelementType=\"org.apache.jmeter.config.Arguments\">\n        <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.config.gui.ArgumentsPanel</strin\ngProp>\n        <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.config.Arguments</stringProp>\n        <collectionProp name=\"Arguments.arguments\"/>\n        <stringProp name=\"TestElement.name\">User Defined \nVariables</stringProp>\n        <boolProp name=\"TestElement.enabled\">true</boolProp>\n      </elementProp>\n      <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.control.gui.TestPlanGui</stringP\nrop>\n      <stringProp name=\"TestPlan.user_define_classpath\"></stringProp>\n      <boolProp name=\"TestPlan.serialize_threadgroups\">false</boolProp>\n      <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.testelement.TestPlan</stringPro\np>\n      <stringProp name=\"TestElement.name\">Test Plan</stringProp>\n      <boolProp name=\"TestPlan.functional_mode\">false</boolProp>\n      <boolProp name=\"TestElement.enabled\">true</boolProp>\n      <stringProp name=\"TestPlan.comments\"></stringProp>\n    </TestPlan>\n    <hashTree>\n      <ThreadGroup>\n        <longProp \nname=\"ThreadGroup.start_time\">1118867792000</longProp>\n        <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.threads.ThreadGroup</stringProp\n>\n        <stringProp name=\"ThreadGroup.delay\"></stringProp>\n        <stringProp name=\"ThreadGroup.duration\"></stringProp>\n        <boolProp name=\"TestElement.enabled\">true</boolProp>\n        <stringProp name=\"ThreadGroup.num_threads\">1</stringProp>\n        <boolProp name=\"ThreadGroup.scheduler\">false</boolProp>\n        <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.threads.gui.ThreadGroupGui</stri\nngProp>\n        <elementProp name=\"ThreadGroup.main_controller\" \nelementType=\"org.apache.jmeter.control.LoopController\">\n          <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.control.gui.LoopControlPanel</st\nringProp>\n          <stringProp name=\"LoopController.loops\">1</stringProp>\n          <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.control.LoopController</stringP\nrop>\n          <stringProp name=\"TestElement.name\">Loop \nController</stringProp>\n          <boolProp name=\"TestElement.enabled\">true</boolProp>\n          <boolProp \nname=\"LoopController.continue_forever\">false</boolProp>\n        </elementProp>\n        <stringProp name=\"TestElement.name\">Thread Group</stringProp>\n        <longProp name=\"ThreadGroup.end_time\">1118867792000</longProp>\n        <stringProp \nname=\"ThreadGroup.on_sample_error\">stoptest</stringProp>\n        <stringProp name=\"ThreadGroup.ramp_time\">1</stringProp>\n      </ThreadGroup>\n      <hashTree>\n        <BeanShellSampler>\n          <stringProp name=\"BeanShellSampler.filename\"></stringProp>\n          <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.protocol.java.control.gui.BeanSh\nellSamplerGui</stringProp>\n          <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.protocol.java.sampler.BeanShell\nSampler</stringProp>\n          <stringProp name=\"TestElement.name\">set foreach \nvars</stringProp>\n          <stringProp name=\"BeanShellSampler.query\">int varIndex = 1;\n  for (int i = 1; i&lt;=10; i++ )\n{\n     vars.put(&quot;testVar_&quot;+i, &quot;testValue&quot;+i );\n}\n</stringProp>\n          <boolProp name=\"TestElement.enabled\">true</boolProp>\n          <stringProp name=\"BeanShellSampler.parameters\"></stringProp>\n        </BeanShellSampler>\n        <hashTree/>\n        <org.apache.jmeter.control.ForeachController>\n          <stringProp \nname=\"ForeachController.inputVal\">testVar</stringProp>\n          <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.control.gui.ForeachControlPanel<\n/stringProp>\n          <stringProp \nname=\"ForeachController.returnVal\">currentVar</stringProp>\n          <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.control.ForeachController</stri\nngProp>\n          <stringProp name=\"TestElement.name\">ForEach \nController</stringProp>\n          <boolProp name=\"TestElement.enabled\">true</boolProp>\n          <boolProp \nname=\"ForeachController.useSeparator\">true</boolProp>\n        </org.apache.jmeter.control.ForeachController>\n        <hashTree>\n          <BeanShellSampler>\n            <stringProp name=\"BeanShellSampler.filename\"></stringProp>\n            <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.protocol.java.control.gui.BeanSh\nellSamplerGui</stringProp>\n            <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.protocol.java.sampler.BeanShell\nSampler</stringProp>\n            <stringProp name=\"TestElement.name\">print var under \ntest</stringProp>\n            <stringProp \nname=\"BeanShellSampler.query\">System.out.println(  &quot;testing testVar: \n&quot; + vars.get(&quot;currentVar&quot;) );\n  \n</stringProp>\n            <boolProp name=\"TestElement.enabled\">true</boolProp>\n            <stringProp \nname=\"BeanShellSampler.parameters\"></stringProp>\n          </BeanShellSampler>\n          <hashTree/>\n          <BeanShellSampler>\n            <stringProp name=\"BeanShellSampler.filename\"></stringProp>\n            <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.protocol.java.control.gui.BeanSh\nellSamplerGui</stringProp>\n            <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.protocol.java.sampler.BeanShell\nSampler</stringProp>\n            <stringProp name=\"TestElement.name\">set loop \nvariables</stringProp>\n            <stringProp \nname=\"BeanShellSampler.query\">vars.put(&quot;LoopFlag&quot;, \n&quot;&quot;+&quot;true&quot;);\n</stringProp>\n            <boolProp name=\"TestElement.enabled\">true</boolProp>\n            <stringProp \nname=\"BeanShellSampler.parameters\"></stringProp>\n          </BeanShellSampler>\n          <hashTree/>\n          <BeanShellSampler>\n            <stringProp name=\"BeanShellSampler.filename\"></stringProp>\n            <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.protocol.java.control.gui.BeanSh\nellSamplerGui</stringProp>\n            <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.protocol.java.sampler.BeanShell\nSampler</stringProp>\n            <stringProp name=\"TestElement.name\">debug print (loop \ninfo)</stringProp>\n            <stringProp \nname=\"BeanShellSampler.query\">System.out.println(&quot;*****BEFORE ENTERING \nWHILE&quot;);\nSystem.out.println(&quot;LoopFlag = &quot; + \nvars.get(&quot;LoopFlag&quot;));\n  </stringProp>\n            <boolProp name=\"TestElement.enabled\">true</boolProp>\n            <stringProp \nname=\"BeanShellSampler.parameters\"></stringProp>\n          </BeanShellSampler>\n          <hashTree/>\n          <org.apache.jmeter.control.WhileController>\n            <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.control.gui.WhileControllerGui</\nstringProp>\n            <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.control.WhileController</string\nProp>\n            <stringProp name=\"TestElement.name\">test while \nloop</stringProp>\n            <boolProp name=\"TestElement.enabled\">true</boolProp>\n            <stringProp \nname=\"WhileController.condition\">${LoopFlag}</stringProp>\n          </org.apache.jmeter.control.WhileController>\n          <hashTree>\n            <BeanShellSampler>\n              <stringProp \nname=\"BeanShellSampler.filename\"></stringProp>\n              <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.protocol.java.control.gui.BeanSh\nellSamplerGui</stringProp>\n              <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.protocol.java.sampler.BeanShell\nSampler</stringProp>\n              <stringProp name=\"TestElement.name\">Got into a \nwhile</stringProp>\n              <stringProp \nname=\"BeanShellSampler.query\">System.out.println(&quot;+++++++++++++++++INSIDE \nwhile++++++++++++++&quot;);\nvars.put(&quot;LoopFlag&quot;, &quot;false&quot;);\n  </stringProp>\n              <boolProp name=\"TestElement.enabled\">true</boolProp>\n              <stringProp \nname=\"BeanShellSampler.parameters\"></stringProp>\n            </BeanShellSampler>\n            <hashTree/>\n          </hashTree>\n          <BeanShellSampler>\n            <stringProp name=\"BeanShellSampler.filename\"></stringProp>\n            <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.protocol.java.control.gui.BeanSh\nellSamplerGui</stringProp>\n            <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.protocol.java.sampler.BeanShell\nSampler</stringProp>\n            <stringProp name=\"TestElement.name\">debug print (loop \ninfo)</stringProp>\n            <stringProp \nname=\"BeanShellSampler.query\">System.out.println(&quot;******AFTER WHILE \nLOOP&quot;);\nSystem.out.println(&quot;LoopFlag = &quot; + \nvars.get(&quot;LoopFlag&quot;) +&apos;\\n&apos;);\n</stringProp>\n            <boolProp name=\"TestElement.enabled\">true</boolProp>\n            <stringProp \nname=\"BeanShellSampler.parameters\"></stringProp>\n          </BeanShellSampler>\n          <hashTree/>\n        </hashTree>\n        <ResultCollector>\n          <stringProp \nname=\"TestElement.gui_class\">org.apache.jmeter.visualizers.ViewResultsFullVisua\nlizer</stringProp>\n          <stringProp \nname=\"TestElement.test_class\">org.apache.jmeter.reporters.ResultCollector</stri\nngProp>\n          <stringProp name=\"TestElement.name\">View Results \nTree</stringProp>\n          <objProp>\n            <value \nclass=\"org.apache.jmeter.samplers.SampleSaveConfiguration\">\n              <time>true</time>\n              <latency>true</latency>\n              <timestamp>true</timestamp>\n              <success>true</success>\n              <label>true</label>\n              <code>true</code>\n              <message>true</message>\n              <threadName>true</threadName>\n              <dataType>true</dataType>\n              <encoding>false</encoding>\n              <assertions>true</assertions>\n              <subresults>true</subresults>\n              <responseData>false</responseData>\n              <samplerData>false</samplerData>\n              <xml>true</xml>\n              <fieldNames>false</fieldNames>\n              <responseHeaders>false</responseHeaders>\n              <requestHeaders>false</requestHeaders>\n              <responseDataOnError>false</responseDataOnError>\n              \n<saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>\n              <assertionsResultsToSave>0</assertionsResultsToSave>\n              <delimiter>,</delimiter>\n              <printMilliseconds>true</printMilliseconds>\n            </value>\n            <name>saveConfig</name>\n          </objProp>\n          <boolProp name=\"TestElement.enabled\">true</boolProp>\n          <stringProp name=\"filename\"></stringProp>\n          <boolProp \nname=\"ResultCollector.error_logging\">false</boolProp>\n        </ResultCollector>\n        <hashTree/>\n      </hashTree>\n    </hashTree>\n  </hashTree>\n</jmeterTestPlan>", "id": 93471, "time": "2006-09-12T22:13:10Z", "bug_id": 40490, "creation_time": "2006-09-12T22:13:10Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 40490, "attachment_id": null, "id": 93578, "time": "2006-09-14T13:19:59Z", "creator": "sebb@apache.org", "creation_time": "2006-09-14T13:19:59Z", "is_private": false, "text": "I think I may have found the problem and a fix. I hope to update the code in \nthe next week.\n\n[By the way, it's much easier to use JMX files etc if they are provided as \nattachments, rather than inline. Next time, please create the issue, and you \ncan then add attachments.]"}, {"count": 2, "text": "I've put a fix into the code which is in the nightly build: 2-2.20060916 if you\nwant to give it a try.\n\nPlease let us know if it works - or not.", "creator": "sebb@apache.org", "is_private": false, "id": 93668, "time": "2006-09-16T23:42:43Z", "bug_id": 40490, "creation_time": "2006-09-16T23:42:43Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "creator": "sebb@apache.org", "attachment_id": 20427, "text": "Created attachment 20427\nFixed up version of test case without bad line breaks", "id": 104994, "time": "2007-07-02T05:54:52Z", "bug_id": 40490, "creation_time": "2007-07-02T05:54:52Z", "is_private": false}, {"count": 4, "tags": [], "text": "Assuming fixed; please re-open with more details if not", "attachment_id": null, "id": 104995, "creator": "sebb@apache.org", "time": "2007-07-02T05:55:22Z", "bug_id": 40490, "creation_time": "2007-07-02T05:55:22Z", "is_private": false}]