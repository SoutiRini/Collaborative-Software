[{"count": 0, "tags": [], "creator": "patrick@onestep.co.uk", "is_private": false, "id": 123114, "creation_time": "2008-12-05T03:33:20Z", "time": "2008-12-05T03:33:20Z", "bug_id": 46352, "text": "MacOSX 10.4.11 PPC, Tomcat 6.0.18, Tomcat native 1.1.15, stock Apache 1.3.41\n\nWhen testing mod_jk 1.2.27 (AJP 1.3 connector), works fine with HTTP, crashes with HTTPS.  ModSSL is configured with a selfsigned SSL cert.\nDoes not crash with mod_jk 1.2.23.\nWith 1.2.27 and CA-signed cert: not tested.\n\nCrash report excerpt:\nException:  EXC_BAD_ACCESS (0x0001)\nCodes:      KERN_INVALID_ADDRESS (0x0001) at 0x262379f2\n\nThread 0 Crashed:\n0   <<00000000>> \t0xffff8b94 __memcpy + 1012 (cpu_capabilities.h:189)\n1   mod_jk.so \t0x0160e4e0 init_ws_service + 544 (mod_jk.c:659)\n2   mod_jk.so \t0x016107e4 jk_handler + 1096 (mod_jk.c:2200)\n3   httpd     \t0x0000d91c ap_invoke_handler + 232\n4   httpd     \t0x000179d8 process_request_internal + 640\n5   httpd     \t0x00017a58 ap_process_request + 72\n6   httpd     \t0x000065f4 child_main + 1832\n7   httpd     \t0x00006858 make_child + 312\n8   httpd     \t0x00006c18 perform_idle_server_maintenance + 708\n9   httpd     \t0x000071fc standalone_main + 972\n10  httpd     \t0x000078a0 main + 1052\n11  httpd     \t0x00001cc4 _start + 340\n12  httpd     \t0x00001b6c start + 60\n\nThe reference to cpu_capabilities.h suggests that something, most likely httpd, got built against the MacOSX 10.3.9 SDK.  Anything I built (tomcat native, mod_jk, apr) was built universal against the MacOSX 10.4u sdk.", "attachment_id": null}, {"count": 1, "tags": [], "text": "Line 659 is:\n\nreply_timeout = ap_table_get(r->subprocess_env, \"JK_REPLY_TIMEOUT\");\n\nSo it seems we have trouble retrieving data from the httpd environment variables.\nCan you produce a core and use a debugger like gdb to check, what r->subprocess_env is in your case? It should not be null and its type should be table. ap_table_get() is provided by httpd itself.\n\nDid you build mod_jk yourself? Did you use the apxs in configure, that came with your httpd? You can also try adding --enable-EAPI to configure, but I doubt it will help.\n\nThe above line is part of a new feature. If you don't want to set reply_timeouts via Apache httpd environment variables, you can comment the line out. I would expect, that you'll then get crashes in other parts of the code, but we might get a better idea what's wrong.\n", "attachment_id": null, "id": 123115, "creator": "rainer.jung@kippdata.de", "time": "2008-12-05T03:57:26Z", "bug_id": 46352, "creation_time": "2008-12-05T03:57:26Z", "is_private": false}, {"count": 2, "tags": [], "text": "Yes, I built mod_jk.so myself -- Apple doesn't supply this with MacOSX, only with MacOSX Server, and unlike mod_ssl the source used is not available via www.opensource.apple.com/darwinsource/ .\n\nThe configure command used (mea culpa, should have been in the original submission) was (ad lib http://developer.apple.com/technotes/tn2005/tn2137.html ) \n\nenv CFLAGS=\"-O -g -isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch i386 -arch ppc\" \\\n  LDFLAGS=\"-arch i386 -arch ppc\" \\\n  ./configure \\\n  --disable-dependency-tracking \\\n  --enable-EAPI \\\n  --with-apxs=/usr/sbin/apxs\n\n\n\nCreate a coredump on MacOSX for debugging purposes?  Never seen that done.  Attaching with gdb would work if I could tell which httpd server process was going to handle the request.  I tried logging with jk_log, but the process was crashing before the log was flushed.  I added this:\n\n     if (r) {\n        int myHandle = open(\"/tmp/log.txt\", O_WRONLY|O_APPEND|O_CREAT, 0666);\n        char myBuf[1024];\n        sprintf(myBuf, \"%s:%d r: 0x%08x r->subprocess_env: 0x%08x\\n\", __FILE__, __LINE__, (int)r, (r ? (int)( r->subprocess_env) : 0));\n        write(myHandle, myBuf, strlen(myBuf));\n        if (r && r->subprocess_env) {\n            sprintf(myBuf, \"%s:%d r->subprocess_env: %s\\n\", __FILE__, __LINE__, ap_array_pstrcat(r->pool, (array_header*) r->subprocess_env, '='));\n            write(myHandle, myBuf, strlen(myBuf));\n        }\n        close(myHandle);\n    }\n\nwhich wrote this for three requests: two over HTTP, the last over HTTPS.\nmod_jk.c:663 r: 0x01856238 r->subprocess_env: 0x01856548\nmod_jk.c:666 r->subprocess_env: SCRIPT_URL=/services/MyServlet\nmod_jk.c:663 r: 0x01856238 r->subprocess_env: 0x01856548\nmod_jk.c:666 r->subprocess_env: SCRIPT_URL=/services/MyServlet\nmod_jk.c:663 r: 0x01856238 r->subprocess_env: 0x01856548\nmod_jk.c:666 r->subprocess_env: SCRIPT_URL=/services/Style.css\n\nEnabling the generation of core dumps for use with gdb is proving awkward.\n\n", "attachment_id": null, "id": 123123, "creator": "patrick@onestep.co.uk", "time": "2008-12-05T07:55:49Z", "bug_id": 46352, "creation_time": "2008-12-05T07:55:49Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 46352, "attachment_id": null, "id": 123131, "time": "2008-12-05T09:16:19Z", "creator": "patrick@onestep.co.uk", "creation_time": "2008-12-05T09:16:19Z", "is_private": false, "text": "so we have all the magic tested and working as per http://developer.apple.com/technotes/tn2004/tn2123.html for enabling core dumps, and even a CoreDumpDirectory directive in /etc/httpd/httpd.conf , but we get no core dumps.\n\nOne thing I have noticed is that httpd seems to take several seconds to crash; as if steadily iterating until it blows the stack up, which might explain why the the dead address looks like a bit of ASCII string.\n\nI have also noted that my JkMount directives aren't working as expected.  Using older mod_jk versions, they worked with everything in the main httpd.conf ; with newer versions, some weren't working at all with HTTPS, so I moved most of the mod_jk configuration into the virtual host containers; and it's still not right.  Depending on the URL, some requests get 404 errors from the webserver, and some cause crashes.\n\nmod_jk.c:663 r: 0x01807100 r->subprocess_env: 0x01807468\nmod_jk.c:666 r->subprocess_env: REDIRECT_SCRIPT_URL=/services/=REDIRECT_SCRIPT_URI=http://localhost/services/=REDIRECT_STATUS\n\n"}, {"count": 4, "tags": [], "creator": "rainer.jung@kippdata.de", "is_private": false, "id": 123134, "creation_time": "2008-12-05T09:39:35Z", "time": "2008-12-05T09:39:35Z", "bug_id": 46352, "text": "(In reply to comment #3)\n> so we have all the magic tested and working as per\n> http://developer.apple.com/technotes/tn2004/tn2123.html for enabling core\n> dumps, and even a CoreDumpDirectory directive in /etc/httpd/httpd.conf , but we\n> get no core dumps.\n\nI didn't read the document, but what could help: if you start as root (e.g. when using low ports) and switch user via User/Group in httpd.conf, use a high port instead and run directly as a normal user. Most OSes are reluctant to dump core for processes which were switching user. Another thing (maybe in the quoted doc?) is that limit/ulimit can prevent the writing of core dumps.\n\nConcerning gdb: httpd -X starts only one httpd process, so you always know which you should attach to :) Of course that's not for production, because it can only handle one response at a time, but that's fine for testing.\n\n> One thing I have noticed is that httpd seems to take several seconds to crash;\n> as if steadily iterating until it blows the stack up, which might explain why\n> the the dead address looks like a bit of ASCII string.\n\nPossible, see below for the ap_table_get code, which indeed does an iteration.\n\n> I have also noted that my JkMount directives aren't working as expected.  Using\n> older mod_jk versions, they worked with everything in the main httpd.conf ;\n> with newer versions, some weren't working at all with HTTPS, so I moved most of\n> the mod_jk configuration into the virtual host containers; and it's still not\n> right.  Depending on the URL, some requests get 404 errors from the webserver,\n> and some cause crashes.\n\nThat should be an independent thing. In fact in 1.2.26 we cleaned up the vhost handling and as a result there was exactly one incompatible change, namely the relation between JkMount and vhosts. For testing, you can rule out that effect by e.g. putting them all globalyy and adding to the global server \"JkMountCopy All\". If you put them into the VHosts, you might need to add them to several VHosts (e.g. one for http, one for https).\n\n\nConcerning your previous comment:\n\n> which wrote this for three requests: two over HTTP, the last over HTTPS.\n> mod_jk.c:663 r: 0x01856238 r->subprocess_env: 0x01856548\n> mod_jk.c:666 r->subprocess_env: SCRIPT_URL=/services/MyServlet\n> mod_jk.c:663 r: 0x01856238 r->subprocess_env: 0x01856548\n> mod_jk.c:666 r->subprocess_env: SCRIPT_URL=/services/MyServlet\n> mod_jk.c:663 r: 0x01856238 r->subprocess_env: 0x01856548\n> mod_jk.c:666 r->subprocess_env: SCRIPT_URL=/services/Style.css\n\nOK, so it's not NULL, and after the last output it crashes (because it's an\nHTTP request), right?\n\nUnfortunately I can't see any use of memcpy in httpd's ap_table_get:\n\nAPI_EXPORT(const char *) ap_table_get(const table *t, const char *key)\n{\n    table_entry *elts = (table_entry *) t->a.elts;\n    int i;\n\n    if (key == NULL)\n        return NULL;\n\n    for (i = 0; i < t->a.nelts; ++i)\n        if (!strcasecmp(elts[i].key, key))\n            return elts[i].val;\n\n    return NULL;\n}\n\nMaybe the strcasecmp doesn't terminate, because one of the two strings is not correctly 0-terminated?\n\nUnfortunately I don't have access to MacOS X, so that will be hard to debug for\nme. You could:\n\n1) delete line 659 and see, whether it runs stable then\n\n2) replace the call to ap_table_get in line 659 by a call to my_table_get and\ncopy the above ap_table_get under the name my_table_get into mod_jk.c. This\ncode can then be instrumented with more output statements like you already did,\nto get an idea what's wrong and where exactly it crashes.\n\n\n", "attachment_id": null}, {"count": 5, "tags": [], "text": "I tried the additional debugging tips (run a single server using -X, as a user, listening on nonprivileged ports) but still couldn't create a coredump.\n\nI tried the hint about 'JkMountCopy All', and cleaned up my httpd.conf.  There are no longer mod_jk directives in virtual host containers.  httpd no longer crashes.\n\nI'd been using mod_jk directives in virtual host containers because there has been a problem with static URIs /services.html and servlet-mapped URIs /services/ and /services/* where neither would work correctly.  Using mod_jk 1.2.27 with JkMountCopy All in the global server configuration, that problem is gone too.\n\nFor https://localhost/services/index.jsp:\nmod_jk.c:666 r->subprocess_env: SCRIPT_URL=/services/index.jsp=SCRIPT_URI\n\nFor https://localhost/services/:\nmod_jk.c:666 r->subprocess_env: REDIRECT_SCRIPT_URL=/services/=REDIRECT_SCRIPT_URI=https://localhost/services/=REDIRECT_HTTPS=on=REDIRECT_STATUS\n\nAt this point, I think there is a bug in how mod_jk works with virtual hosts, but which does not affect well-configured servers.  Since I'm making no progress debugging this and it's not crashing, do we want to close this bug report?", "attachment_id": null, "id": 123159, "creator": "patrick@onestep.co.uk", "time": "2008-12-08T03:02:35Z", "bug_id": 46352, "creation_time": "2008-12-08T03:02:35Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 46352, "attachment_id": null, "is_private": false, "id": 123160, "time": "2008-12-08T03:20:17Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-12-08T03:20:17Z", "text": "Thanks for your feedback.\n\nDo you have a test system, on which you can reproduce? In other words: are you able and willing to dig into the problem some more?\n\nIf yes, It would be very helpful to kopy the ap_table_get code from comment #4 into your mod_jk.c (under a different name, like my_table_get) and replace the call to ap_table_get in line 659 with my_table_get. Then finally add some output statements in my_table_get to check, whether it loops indefinitely, or whether it is actually the strcasecmp that crashes.\n\nUnfortunately I can't reproduce, and I'm still not convinced, that it i a JK bug. I've seen similar crashes when other modules corupt memory. So I'm still interested in getting a clearer picture about what's wrong.\n"}, {"count": 7, "tags": [], "text": "Created attachment 23004\nsample of debugging code, output, and httpd.conf files\n\nHaving dug in some more ... \n\nI wondered if I ought to try blaming mod_gzip/1.3.26.1a, but removing it made no difference.\n\nI didn't keep my original problematic httpd.conf file.  It took me some time to put some changes back in to show the problem.  When looking at the files I have included in the attachment (the httpd.conf files have been removed of most of the things my Corporate Security Officer would not want disclosed) you might notice a SetHandler jakarta-servlet directive somewhere in the bad one; I was getting random Access Forbidden and Resource Not Available responses for requests that should have been handled by my servlet.\n\n\n\nMy original stacktrace was generated on PPC, a RISC architecture where out-of-order execution is rampant, and showed references to things like memcpy() which didn't make sense for the reported line number of the source code.  Having added some debugging code, the point at which the bug is reported has moved; it is now more consistently this line:\n'            s->extension.fail_on_status = ap_palloc(r->pool, e->fail_on_status_size * sizeof(int));'\n\nand the debugging output I have included that for requests with the 'good' configuration, the rule_extension structure is sensible (the timeout is -1, every other field is 0 or null) but for requests with the 'bad' configuration, that structure contains random rubbish which causes the dysfunctional call to memcpy().\n\nSo ... why are the contents of 'rule_extension_t *e' bad?  Are we getting a pointer to something that's been overwritten, or being given a pointer to something that was never initialized?", "attachment_id": 23004, "id": 123190, "creator": "patrick@onestep.co.uk", "time": "2008-12-09T04:01:05Z", "bug_id": 46352, "creation_time": "2008-12-09T04:01:05Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 46352, "attachment_id": null, "id": 123191, "time": "2008-12-09T04:30:53Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-12-09T04:30:53Z", "is_private": false, "text": "Aha, progress!\nIn jk_translate there are two lines, where we use\n\nap_set_module_config(r->request_config, &jk_module, ...)\n\nThose are the lines were we set the rule_extension_t. So if you could output the value of the last argument (as a pointer, not the structure it points to) there and of e after\n\ne = (rule_extension_t *)ap_get_module_config(r->request_config, &jk_module);\n\nwe can see, whether the request_config changes (e changes), or if not it's actually the contents of e that change.\n\nYou should also output the address of r in the three lines, so we can check whether actually the request changes between seeting the structure and retrieving it. That would be something we don't expect, but maybe there are sub requests or something similar involved.\n\nI'll try to reproduce later today, now that we are closer to the root cause.\n\n\n"}, {"count": 9, "tags": [], "bug_id": 46352, "attachment_id": null, "is_private": false, "id": 123198, "time": "2008-12-09T09:33:20Z", "creator": "patrick@onestep.co.uk", "creation_time": "2008-12-09T09:33:20Z", "text": "What I found was that in jk_translate, in the 'good' configuration, e (or, *ext ... the rule_extension_t) remained null after the first call to ap_set_module_config().  There is a second call to ap_set_module_config().  My logging shows that the rule_extension_t has been set before this, and also before the call to map_uri_to_worker_ext() a few lines earlier.\n\nIn the 'bad' configuration, a crash was occurring before getting as far as three logging calls I added around map_uri_to_worker_ext() and ap_set_module_config().\n\nI noticed that in the 'bad' configuration, there were no JkMount directives at all, so I added some.  This did not prevent crashing.  Later, the 'good' configuration was crashing too.  Right now neither are crashing.  Intermittent problems of /services/ , /services/index.jsp and /services.html producing server 404 pages or Tomcat resource-unavailable pages continues.  Using <Location> to add a 'SetHandler jakarta-servlet' directive continues to move in and out of the configuration.  I am guessing wildly here, but from the symptoms it looks to me like some memory is being allocated for a control structure like a rule_extension_t, and then not initialised by code because it appears to have been initialised already."}, {"count": 10, "tags": [], "bug_id": 46352, "attachment_id": null, "is_private": false, "id": 123385, "time": "2008-12-17T16:33:45Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2008-12-17T16:33:45Z", "text": "Could you please try the patch available at:\n\nhttp://people.apache.org/~rjung/mod_jk-dev/patches/extension_crash.patch\n\nIt came up for a related issue reported today and it could well fix your problem.\n"}, {"count": 11, "tags": [], "bug_id": 46352, "attachment_id": null, "id": 123393, "time": "2008-12-18T02:42:02Z", "creator": "patrick@onestep.co.uk", "creation_time": "2008-12-18T02:42:02Z", "is_private": false, "text": "Patch applied, works for me -- but then, apart from the first day I found this crasher, I have never been able to reproduce it reliably.\n\nFor the benefit of anybody else looking at the summary of this bug in the future, yes it's wrong, it should be something like \"random crashes and failure to handle some URLs\".\n\nWe have a small number of development systems that are still running MacOSX 10.1.5 with Apache 1.3.26.  I've built the patched mod_jk 1.2.27 for those.  It works there with essentially the same httpd.conf -- except I need to use 'SetHandler jakarta-servlet', JkMount and JkMountCopy do not work as expected.  This is a problem I have found intermittently on MacOSX 10.4.11 with Apache 1.3.41 and could be an unrelated bug."}, {"count": 12, "tags": [], "text": "Patch commited as r727693.\nWill be part of 1.2.28.\nThanks for helping debugging it.\n", "attachment_id": null, "id": 123394, "creator": "rainer.jung@kippdata.de", "time": "2008-12-18T02:57:03Z", "bug_id": 46352, "creation_time": "2008-12-18T02:57:03Z", "is_private": false}]