[{"count": 0, "tags": [], "creator": "pab@balancewd.com", "attachment_id": null, "is_private": false, "id": 18890, "time": "2002-07-02T21:34:45Z", "bug_id": 10426, "creation_time": "2002-07-02T21:34:45Z", "text": "On a lightly-loaded system, httpd's load average goes up by 1 permanently\nfor each httpd process that handles any HTTP traffic at all.\n\nWhen you start the daemon, and it forks the minimum # httpd's, the load is near \nzero.\nAfter you fetch any document, such as /index.html, that 1 child httpd process\nbegins raising the load average by 1.00 from then on, even with no other \nconnections in-coming on any of the daemons.  If you do it again and get a \ndifferent child httpd, that one does the same thing, now the load is around \n2.00, and so on.\n\nTop and PS do not show any processes using a lot of CPU.  The available CPU is \nalways 95-100%, which is really weird!  If you let it stay this way for 12 \nhours, with the load high, the amount of accumulated CPU per process is very \nlow (less than 1 minute).  If these processes were really using up CPU they \nshould at least have used an hour or two of CPU time each!\n\nIf you SIGHUP the main httpd, it kills & restarts its children, so the load \ndrops back down to around 0.00.  Same if you completely kill & restart them.\n\nNo errors about this go to syslog or to apache's error_log.\nThe system is completely usable as a web server, and logging in\nand typing in a telnet window feels fine\n(it doesn't feel like a load of 5.00).\nThe web server is fully functional, from what we can see, only the load is high.\n\nOperating System: BSDI 4.1 with all patches up to date\nPlatform: Compaq DL380 (Pentium III)\n\nDoing a Ktrace yields some interesting info, it looks like some\nsort of SysV semaphore issue.  A Ktrace of a \"good\" child httpd\n(before the problem occurs):\n\n 11781 httpd    CALL  sigprocmask(0x3,0)\n 11781 httpd    RET   sigprocmask -65809/0xfffefeef\n 11781 httpd    CALL  gettimeofday(0x8047570,0)\n 11781 httpd    RET   gettimeofday 0\n 11781 httpd    CALL  setitimer(0,0x8047568,0)\n 11781 httpd    RET   setitimer 0\n 11781 httpd    CALL  sigreturn(0)\n 11781 httpd    RET   sigreturn JUSTRETURN\n 11781 httpd    PSIG  SIGalrm caught handler=0x281c5d20 mask=0x0 code=0x0\n 11781 httpd    CALL  sigprocmask(0x3,0)\n 11781 httpd    RET   sigprocmask -65809/0xfffefeef\n 11781 httpd    CALL  gettimeofday(0x8047570,0)\n 11781 httpd    RET   gettimeofday 0\n 11781 httpd    CALL  setitimer(0,0x8047568,0)\n 11781 httpd    RET   setitimer 0\n 11781 httpd    CALL  sigreturn(0)\n 11781 httpd    RET   sigreturn JUSTRETURN\n 11781 httpd    PSIG  SIGalrm caught handler=0x281c5d20 mask=0x0 code=0x0\n\n\nAnd now, after you ask for 1 document and the load goes up,\nhere's the same Ktrace on a httpd child process:\n\n 11766 httpd    CALL  sigprocmask(0x3,0)\n 11766 httpd    RET   sigprocmask -65809/0xfffefeef\n 11766 httpd    CALL  gettimeofday(0x8047910,0)\n 11766 httpd    RET   gettimeofday 0\n 11766 httpd    CALL  setitimer(0,0x8047908,0)\n 11766 httpd    RET   setitimer 0\n 11766 httpd    CALL  sigreturn(0)\n 11766 httpd    RET   sigreturn JUSTRETURN\n 11766 httpd    CALL  semop(0xd0000,0x280faf1c,0x1)\n 11766 httpd    PSIG  SIGalrm caught handler=0x281c5d20 mask=0x0 code=0x0\n 11766 httpd    RET   semop -1 errno 4 Interrupted system call\n 11766 httpd    CALL  sigprocmask(0x3,0)\n 11766 httpd    RET   sigprocmask -65809/0xfffefeef\n 11766 httpd    CALL  gettimeofday(0x8047910,0)\n 11766 httpd    RET   gettimeofday 0\n 11766 httpd    CALL  setitimer(0,0x8047908,0)\n 11766 httpd    RET   setitimer 0\n 11766 httpd    CALL  sigreturn(0)\n 11766 httpd    RET   sigreturn JUSTRETURN\n 11766 httpd    CALL  semop(0xd0000,0x280faf1c,0x1)\n 11766 httpd    PSIG  SIGalrm caught handler=0x281c5d20 mask=0x0 code=0x0\n 11766 httpd    RET   semop -1 errno 4 Interrupted system call\n\n\nSearching groups.google.com for \"apache bsdi load\" shows that some people\nwere having our very same problem back in 1997, with Apache 1.0 and 1.1.\nI couldn't find any messages newer than about 1998 reporting this problem.\nNo real resolution was listed, but someone recommended the Ktrace idea above.\n\nFrom the ktrace, it looks like the itimer is going off (maybe semop() is \nlocking up indefinitely?) which sends SIGALRM to the process, which interrupts \nthe semop().   In the \"good\" output, above, you can see the semop()'s are \nfinishing just fine without having to be interrupted by SIGALRM.\nSo maybe a semaphore (lock) is not being unlocked?\n\n\nWe did not experience this issue with Apache 1.3.9 on this platform,\nwhich we use on 50+ systems today.\n\nWe are going to try Apache 1.3.<latest> next."}, {"count": 1, "tags": [], "bug_id": 10426, "attachment_id": null, "text": "[This is a mass bug update.]\nThis bug reports a problem in an older version of Apache 2.\nCould you please update to the most recent version and see\nif you can reproduce this problem.  If the bug still exists,\nplease update the bug with the latest version number.  If \nthe bug no longer exists, please close the bug report.\n\nSorry for this impersonal response, but we get many more bug\nreports than our volunteers can keep up with.\nThanks for using Apache!", "id": 24735, "time": "2002-10-17T02:35:10Z", "creator": "slive@apache.org", "creation_time": "2002-10-17T02:35:10Z", "is_private": false}, {"count": 2, "text": "[This is a mass bug update.] [Resolve-20021102]\nNo response from submitter; assuming issue is resolved.\nIf the problem still exists in the lastest version,\nplease reopen this report and update appropriately.", "bug_id": 10426, "is_private": false, "id": 25556, "time": "2002-11-02T20:18:44Z", "creator": "slive@apache.org", "creation_time": "2002-11-02T20:18:44Z", "tags": [], "attachment_id": null}]