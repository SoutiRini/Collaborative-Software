[{"count": 0, "tags": [], "text": "Consider a project called anttest that has a subdirectory called subdir\nthe 'toplevel' buildfile build.xml states:\n\n<project name=\"testant\" default=\"dist\" basedir=\".\">\n  <target name=\"dist\">\n\t<ant antfile=\"build.xml\" dir=\"subdir\" target=\"dist\"/> \n  </target>\n</project>\n\nthe buildfile in the subdir states:\n<project name = \"subproject\" default = \"dist\" basedir = \".\">  \n\t<target name = \"dist\">       \n\t\t<!--description=\"Executing test.bat ...\"/-->\n\t\t<exec dir = \".\" executable = \"test.bat\" os = \"Windows NT\">\n\t\t</exec>     \n\t</target>  \n</project>\n\nant test.bat (located in the subdir) contains these lines:\n@echo off\necho Current dir is:\ncd\n\nThan the project will build successfully if ant is executed in the subdirectory,\nhowerver ant will fail when executed in the toplevel.\nBUILD FAILED\n\nD:\\anttest\\subdir\\build.xml:8: Execute failed: java.io.IOException: CreateProces\ns: test.bat error=2\n\nThis behaviour is reproducable on Sun as well. What is wrong here (or am I \nmissing the point). I tried the manuals but all <ant> states is:\n\ndir: the directory to use as a basedir for the new Ant project. Defaults to the \ncurrent directory.\n\nPlease help", "attachment_id": null, "bug_id": 7046, "id": 11690, "time": "2002-03-12T13:52:44Z", "creator": "jbleijen@csc.com", "creation_time": "2002-03-12T13:52:44Z", "is_private": false}, {"count": 1, "tags": [], "creator": "jbleijen@csc.com", "attachment_id": 1338, "id": 11691, "time": "2002-03-12T13:54:22Z", "bug_id": 7046, "creation_time": "2002-03-12T13:54:22Z", "is_private": false, "text": "Created attachment 1338\nthe example provided in .zip format"}, {"count": 2, "tags": [], "bug_id": 7046, "attachment_id": null, "id": 11695, "time": "2002-03-12T15:48:14Z", "creator": "holtdl@yahoo.com", "creation_time": "2002-03-12T15:48:14Z", "is_private": false, "text": "Run the batch file from a command shell (cmd.exe):\n        <target name=\"dist\">\n                <!--description=\"Executing test.bat ...\"/-->\n                <exec dir=\".\" executable=\"cmd.exe\" os=\"Windows NT\">\n                  <arg line=\"/c test.bat\"/>\n                </exec>\n        </target>\n\nDo the same for running a shell script, but change 'executable' to \"sh\" and\nthe \"/c test.bat\" to \"-c test.sh\" (or whatever you call your shell script)."}, {"count": 3, "tags": [], "text": "Under what conditions would exec actually work?\nIt seems you always need to 'exec' a shell to start a program. This seems quite \nbuggy to me.\nEspecially since the exec not only fails for the provided example with a .bat \nfile, which makes some sense: use a shell to start a .bat file, but also holds \ntrue for .exe files (e.g idlj.exe) if you specify a relative path.", "attachment_id": null, "bug_id": 7046, "id": 11721, "time": "2002-03-13T08:34:46Z", "creator": "jbleijen@csc.com", "creation_time": "2002-03-13T08:34:46Z", "is_private": false}, {"count": 4, "tags": [], "creator": "jbleijen@csc.com", "attachment_id": 1343, "id": 11722, "time": "2002-03-13T08:56:09Z", "bug_id": 7046, "creation_time": "2002-03-13T08:56:09Z", "is_private": false, "text": "Created attachment 1343\nNew example for NT/Solaris: example with executable instead of .bat file"}, {"count": 5, "tags": [], "text": "Sorry you're having so much trouble -- hopefully this will clear things up some.\n\nYou don't need to run executables from a (command) shell -- just batch files \nand built-ins (eg., dir, echo, type, etc.) [use \"cmd\"], and for shell-scripts \non Win* running an *nix-type shell (eg., Cygwin) [use \"sh\"], which I probably \nshould've made clearer before (on native *nix, you can run shell-scripts \ndirectly). But for Win*, the executable needs to be in a dir that's in your env \n%Path% (on *nix, you can do your ./ls, although you don't need the \"./\" if \".\" \nis in your $PATH). (I don't have access to a Sun at the moment, but running \nyour <exec> for *nix on FreeBSD worked fine for me.)\n\nFor example, on Win*, try (in your subdir build.xml):\n    <exec dir=\".\" executable=\"find\" os=\"Windows NT\">\n      <arg line='\" foofile\" foo.txt'/>\n    </exec>\n\nWith foo.txt (in your \"subdir\" dir) as:\nThis is a foofile to test\nrunning the find command.\n\n(Note that you don't need the .exe suffix on the command, the way you had it \nfor your ls.exe in your example -- it doesn't hurt, you just don't need it.) \nRunning 'ant' from your \"anttest\" build.xml file, should result in:\n\ndist:\n\ndist:\n     [exec]\n     [exec] ---------- FOO.TXT\n     [exec] This is a foofile to test\n\nHowever, to \"cat\" out the file on Win* (ie., run 'type foo.txt'), since 'type' \nis a built-in, you'd need to run it from 'cmd' (that's an aspect of Win*, not \nof Ant):\n    <exec dir=\".\" executable=\"cmd\" os=\"Windows NT\">\n      <arg value=\"/c\"/>\n      <arg value=\"type foo.txt\"/>\n    </exec>\n\n", "is_private": false, "bug_id": 7046, "id": 11736, "time": "2002-03-13T16:12:17Z", "creator": "holtdl@yahoo.com", "creation_time": "2002-03-13T16:12:17Z", "attachment_id": null}, {"count": 6, "tags": [], "creator": "jbleijen@csc.com", "attachment_id": null, "id": 11740, "time": "2002-03-13T17:17:19Z", "bug_id": 7046, "creation_time": "2002-03-13T17:17:19Z", "is_private": false, "text": "If I understand the explanation correctly, exec will only work properly if\nthe program you are trying to execute is in the path variable?\n\nThis doesn't seem very friendly. I would like to use ant and have my builds be \nindependend of the settings of a specific machine. This makes maintenance a lot \neasier. \n\nI use the exec to invoke the idlj compiler wich is located somewhere else in \nthe tree structure stored in version control system (clearcase). If two project \nwould have different versions of idlj both would have to be included in the \npath on the build machine???\n\n\n"}, {"count": 7, "attachment_id": null, "creator": "holtdl@yahoo.com", "is_private": false, "id": 11743, "time": "2002-03-13T17:36:23Z", "bug_id": 7046, "creation_time": "2002-03-13T17:36:23Z", "tags": [], "text": "It either needs to live in a directory that's in your path, or you need to \nspecify the executable as a full-path. In your example case, you can execute \nyour ls/ls.exe by specifying it as \"${basedir}/ls\" (since \"basedir\" is set to \nthe current [ie., \"subdir\"] directory, which is where your ls/ls.exe are). Note \nthat if you have both a Win* and a *nix executable in the same directory, you \ndon't need the switch on the 'os' attr, since you don't need the .exe suffix to \nrun the Win* executable.\n\nIf your 'idlj' is just randomly any old where, how do you expect to execute it \n(regardless of whether you're running it from Ant)? You're going to have to \npoint your OS to it somehow -- either by it being in a dir that's already in \nthe path, or by specifying it with a fully qualified path.\n\n(Sorry if I've been confusing you about this.)"}, {"count": 8, "tags": [], "creator": "jbleijen@csc.com", "text": "Created attachment 1348\nExec with relative path (NT)", "id": 11746, "time": "2002-03-13T17:56:58Z", "bug_id": 7046, "creation_time": "2002-03-13T17:56:58Z", "is_private": false, "attachment_id": 1348}, {"count": 9, "tags": [], "text": "Apperantly this is not just a bug, but also a lot of confusion :-)\n\nLet me try to explain once more (hopefully I'm am now making sense)\n-I want to invoke an external program during build process (IRL idlj, here \nls.exe to avoid the path problem)\n-I do not want to use just any idlj, from anyone's path but I want to point to \na specific (checked-in) version controlled version. \n-I use a relative path to this file, since it is not in my path\n-This seems to work fine while building the subproject\n-This fails to work if build from the toplevel\n\napperently there is a resolution; to use cmd.exe /c to invoke the \nls.exe/idlj.exe file. \n\nMaybe this is not a real bug but just undocumented behaviour? However it would \nseem that if you use a relative path in a buildfile, this is relative to THAT \nbuildfile and not to the buildfile that was called by the user.", "is_private": false, "bug_id": 7046, "id": 11748, "time": "2002-03-13T18:02:54Z", "creator": "jbleijen@csc.com", "creation_time": "2002-03-13T18:02:54Z", "attachment_id": null}, {"count": 10, "tags": [], "creator": "jakarta@ehatchersolutions.com", "attachment_id": null, "is_private": false, "id": 11749, "time": "2002-03-13T18:26:55Z", "bug_id": 7046, "creation_time": "2002-03-13T18:26:55Z", "text": "You can resolve a relative path to an absolute path using <property name=\"...\" \nlocation=\"...\"/>.  Is the confusion all gone now?"}, {"count": 11, "tags": [], "text": "A relative path is not a fully qualified path -- change your \"../bin/ls.exe\"\nto \"${basedir}/../bin/ls.exe\" (note that once you include the \"..\" relative in \nthe pathname, you will need to include the .exe suffix -- I assume that's some \nfunky Win* thing). Adding ${basedir} doesn't negatively impact portability or \nmaintenance, since it amounts to the exact same thing as trying to use a \nrelative path, except that it *works*.\n\nRelative paths will work on *nix, but not Win* (but, again, I assume that's \nsome funky Win* thing, and nothing to do with Ant) -- so -simplify- your life, \nand just anchor the relative with ${basedir}.\n\nI am closing this bug as Invalid.", "attachment_id": null, "bug_id": 7046, "id": 11750, "time": "2002-03-13T18:28:55Z", "creator": "holtdl@yahoo.com", "creation_time": "2002-03-13T18:28:55Z", "is_private": false}]