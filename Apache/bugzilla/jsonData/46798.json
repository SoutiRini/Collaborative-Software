[{"count": 0, "tags": [], "bug_id": 46798, "attachment_id": 23328, "is_private": false, "id": 125313, "time": "2009-03-04T05:56:21Z", "creator": "poirier@pobox.com", "creation_time": "2009-03-04T05:56:21Z", "text": "Created attachment 23328\nPatch to implement the proposed change\n\nWe need to be able to serve files whose names contain wildcards using\nmod_proxy_ftp.  Right now, mod_proxy_ftp provides a file listing when\nit sees wildcards in the filename requested, which is reasonable for\ninteractive browsing of an FTP site.  In this case, though, we need to\nactually get files with those names, and we don't need the browsing\nfunction (we already know the filenames).  Unfortunately, we don't\ncontrol the filenames, or we'd just use filenames without wildcards\nand avoid all this.\n\nThe solution I'm thinking about is to add a directive to allow\nselectively disabling the behavior of doing file listings when\nwildcards are seen in the requested filename.  E.g.:\n\n  The ProxyFtpListOnWildcard directive controls whether wildcard\n  characters (\"*?[{~\") in requested filenames cause mod_proxy_ftp to\n  return a listing of files instead of downloading a file.  By default\n  (value on), they do.  Set to \"off\" to allow downloading files even\n  if they have wildcard characters in their names.  (directory\n  context)\n\nI'd appreciate comments on this approach, and my proposed\nimplementation (patch against trunk is attached).  \n\nAlso, in testing that change, I found that mod_proxy_ftp escapes\nwildcards in filenames using backslashes when sending them to the FTP\nserver, which none of the FTP servers I was testing with understood.\nAs I recall, I tried vsftpd, proftpd, and Apache FTP server.\nTo continue with my testing, I added another directive to turn that\nbehavior off, but I'd like to better understand why that behavior is\nthere, since it appears to assume a behavior that my FTP servers don't\nhave, and doesn't seem to be mentioned in RFC 959.  \n\nFrom what I know so far, I think this escaping should just be removed.\nI don't think this escaping could ever have been used\nbefore, since any paths with globbing characters in them would have\ntriggered a file listing, which doesn't do the escaping.  So until now,\nApache would never have tried to retrieve any file with globbing\ncharacters in its name. \n\nBut for now, the attached patch has a directive to control this and\nleaves the current behavior as the default."}, {"count": 1, "tags": [], "bug_id": 46798, "attachment_id": 23412, "id": 125772, "time": "2009-03-24T12:32:01Z", "creator": "poirier@pobox.com", "creation_time": "2009-03-24T12:32:01Z", "is_private": false, "text": "Created attachment 23412\nUpdated patch for trunk\n\nHere's an updated patch, that adds support for files with\nwildcards in their names while limiting the changes to\nmod_proxy_ftp.c and mod_proxy_ftp.xml.\n\nApplies to trunk, builds without warnings, passes my tests\nfor the new function."}, {"count": 2, "attachment_id": null, "bug_id": 46798, "text": "committed in 758626 with tiny change to add default=on info to ProxyFtpListOnWildcard", "id": 125813, "time": "2009-03-26T06:32:06Z", "creator": "covener@gmail.com", "creation_time": "2009-03-26T06:32:06Z", "tags": [], "is_private": false}]