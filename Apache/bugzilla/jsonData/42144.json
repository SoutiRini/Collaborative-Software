[{"count": 0, "tags": [], "creator": "fop-dev@cumiskey.com", "text": "See http://wiki.apache.org/xmlgraphics-fop/ExtensionsForPostScript for details\nof the new extensions I have added.\n\nThis patch should also includes :-\n\n* Some performance improvements in page rendition so postscript page setup is\ncached and reused for pages that use the same simple-page-master.\n* Changes to org.apache.fop.area.OffDocumentItem, \norg.apache.fop.area.RenderPagesModel with the addition of some new off document\nitem \"when to process\" states: BEFORE_PAGE, BEFORE_PAGE_SEQ, AFTER_PAGE_SEQ for\norg.apache.fop.area.OffDocumentItem.\n* Changes to org.apache.fop.area.AreaTreeHander so extension attachments\ndeclared as children of simple page master are handled BEFORE_PAGE_SEQ on renderer.\n* Changes to org.apache.fop.area.OffDocumentExtension so whenToProcess can be set.\n* A new protected accessor method called getPSGenerator on\norg.apache.fop.ps.PSRenderer that should make it a little easier to customize\nresolving.\n* Added extension attachments to base org.apache.fop.area.AreaTreeObject class\n\nPlease try the patch out, as always feedback is welcome :-).\n\nAdrian Cumiskey.", "id": 101793, "time": "2007-04-17T05:04:37Z", "bug_id": 42144, "creation_time": "2007-04-17T05:04:37Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "fop-dev@cumiskey.com", "is_private": false, "text": "Created attachment 19978\nlist of files", "id": 101794, "time": "2007-04-17T05:07:47Z", "bug_id": 42144, "creation_time": "2007-04-17T05:07:47Z", "attachment_id": 19978}, {"count": 2, "tags": [], "text": "Created attachment 19979\npatch file", "is_private": false, "bug_id": 42144, "id": 101795, "time": "2007-04-17T05:08:44Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-04-17T05:08:44Z", "attachment_id": 19979}, {"count": 3, "tags": [], "creator": "jeremias@apache.org", "attachment_id": null, "is_private": false, "id": 101871, "time": "2007-04-18T05:50:43Z", "bug_id": 42144, "creation_time": "2007-04-18T05:50:43Z", "text": "Thanks for the patch. It will take a little time until I can look into it in detail.\n\nOne thing caught my eye: Why do you define an extension element to set the\ndocument title? There's a \"title\" value in the FOUserAgent you can use. I'd\nprefer if we reused existing functionality if possible, especially in cases\nwhere different output formats support the same things. Of course, you obviously\nwant to set the title through the FO document. IMO, this should be done through\nXMP metadata. The PDFRenderer already listens to the XMP metadata object and\npopulates its Info object accordingly. The PSRenderer could easily do the same.\nThe FO would look like this:\n  [..]\n  <fo:declarations>\n    <x:xmpmeta xmlns:x=\"adobe:ns:meta/\">\n      <rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\">\n        <rdf:Description rdf:about=\"\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n          <dc:title>My document title</dc:title>\n        </rdf:Description>\n      </rdf:RDF>\n    </x:xmpmeta>\n  </fo:declarations>\n  [..]\n\nGranted, this is a little more complicated than your approach but it's based on\na standard and there would be no special facility just for PostScript.\n\nMore later when I've had time to look into the details."}, {"count": 4, "attachment_id": null, "bug_id": 42144, "text": "I think I may have misunderstood the requirement for the title implementation. \nJeremias, Don't waste too much time looking at this patch right now.  I will try\nand resubmit an amended patch sometime tomorrow.\n\nAdrian.", "id": 101885, "time": "2007-04-18T09:16:54Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-04-18T09:16:54Z", "tags": [], "is_private": false}, {"count": 5, "attachment_id": 20058, "bug_id": 42144, "is_private": false, "id": 102536, "time": "2007-04-27T01:53:18Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-04-27T01:53:18Z", "tags": [], "text": "Created attachment 20058\npatch file\n\nRevised patch, see\nhttp://wiki.apache.org/xmlgraphics-fop/ExtensionsForPostScript"}, {"count": 6, "tags": [], "bug_id": 42144, "text": "Created attachment 20059\nlist of files", "id": 102537, "time": "2007-04-27T01:57:58Z", "creator": "fop-dev@cumiskey.com", "creation_time": "2007-04-27T01:57:58Z", "is_private": false, "attachment_id": 20059}, {"count": 7, "tags": [], "text": "Created attachment 20273\npatch file\n\nCheckstyled, improved javadocs, refactored in parts.", "is_private": false, "bug_id": 42144, "id": 103682, "time": "2007-05-25T09:15:11Z", "creator": "dev@cumiskey.com", "creation_time": "2007-05-25T09:15:11Z", "attachment_id": 20273}, {"text": "Created attachment 20274\nlist of files", "tags": [], "creator": "dev@cumiskey.com", "is_private": false, "count": 8, "id": 103683, "time": "2007-05-25T09:16:06Z", "bug_id": 42144, "creation_time": "2007-05-25T09:16:06Z", "attachment_id": 20274}, {"count": 9, "tags": [], "text": "Adrian, I've looked into this patch today. I've found several issues I'd like\nadressed:\n- getPSGenerator() should probably be renamed to createPSGenerator(). A \"get\" is\na little misleading. After all, the method creates a new PSGenerator instance.\n- In several places you create an anonymous inner class just to fill some values\nin a PSArray, for example. Please note that while the source code might look\nelegant, each of these constructs is creating an additional .class file with at\nleast 1KB in size while a normal variable access would only generate a few byte\ncode instructions.\n- super.init() is missing in PSPageDeviceDictionary. This resulted in a\nNullPointerException in my tests since those makers weren't initialized.\n- The PostScript output caused errors in GhostScript/GhostView when I used the\nsetpagedevice functionality. Haven't investigated further. I'll attach the file\nI tested with. Part of the content is copied from the example in the\ndocumentation you wrote.\n- I'd like the setpagedevice code to be an optional feature not normally\ngenerated, since setpagedevice is usually device-specific. I usually\npost-process PostScript to add media management so I wouldn't want to have to\nremove it. It would be great if it were only activated if any ps-setpage-device\nextension is used.\n- You wrote that the patch contains a performance improvement concerning the\npage setup. Is that a performance improvement in terms of processing speed\ninside a PostScript engine? I'm asking because I don't see how the Renderer code\nwould be any/considerably faster like you propose. In the existing code there\nare no time-consuming operations involved around the page setup that I can see\n(although I didn't do any measurements). At any rate, I found out that the name\nof the simple page master is not correctly generated for each page if you have\ndifferent page masters in your page-sequence-master. See my test file.", "is_private": false, "id": 103832, "creation_time": "2007-05-30T12:49:02Z", "time": "2007-05-30T12:49:02Z", "creator": "jeremias@apache.org", "bug_id": 42144, "attachment_id": null}, {"count": 10, "tags": [], "creator": "jeremias@apache.org", "attachment_id": 20292, "is_private": false, "id": 103833, "time": "2007-05-30T12:52:11Z", "bug_id": 42144, "creation_time": "2007-05-30T12:52:11Z", "text": "Created attachment 20292\nTest FO showing the problems described earlier"}, {"text": "(In reply to comment #9)\n> Adrian, I've looked into this patch today. I've found several issues I'd like\n> adressed:\n> - getPSGenerator() should probably be renamed to createPSGenerator(). A \"get\" is\n> a little misleading. After all, the method creates a new PSGenerator instance.\n\nI have renamed this method as you suggested.\n\n> - In several places you create an anonymous inner class just to fill some values\n> in a PSArray, for example. Please note that while the source code might look\n> elegant, each of these constructs is creating an additional .class file with at\n> least 1KB in size while a normal variable access would only generate a few byte\n> code instructions.\n\nI have refactored/simplified the code so there are a lot less classes to encapsulate\npostscript dictionaries and their related components.\n\n> - super.init() is missing in PSPageDeviceDictionary. This resulted in a\n> NullPointerException in my tests since those makers weren't initialized.\n\nThis is fixed as a result of the simplification work.\n\n> - The PostScript output caused errors in GhostScript/GhostView when I used the\n> setpagedevice functionality. Haven't investigated further. I'll attach the file\n> I tested with. Part of the content is copied from the example in the\n> documentation you wrote.\n\nI'm not sure what happened here, I wasn't able to reproduce this.  This new code\nproduces no such errors in my unix ghost script interpreter.\n\n> - I'd like the setpagedevice code to be an optional feature not normally\n> generated, since setpagedevice is usually device-specific. I usually\n> post-process PostScript to add media management so I wouldn't want to have to\n> remove it. It would be great if it were only activated if any ps-setpage-device\n> extension is used.\n\nIt is only activated when the extension is used.  But it makes sense for the\npostscript renderer to make SPD postscript function calls instead of direct\nsetpagedevice calls.  It is more \"safe\" this way (i.e. an init-graphics call as\na result of a setpagedevice will not be made if the contents of the page device\ndictionary has not changed). See section ps:ps-setpagedevice in\nhttp://wiki.apache.org/xmlgraphics-fop/ExtensionsForPostScript\n\n> - You wrote that the patch contains a performance improvement concerning the\n> page setup. Is that a performance improvement in terms of processing speed\n> inside a PostScript engine? I'm asking because I don't see how the Renderer code\n> would be any/considerably faster like you propose. In the existing code there\n> are no time-consuming operations involved around the page setup that I can see\n> (although I didn't do any measurements). At any rate, I found out that the name\n> of the simple page master is not correctly generated for each page if you have\n> different page masters in your page-sequence-master. See my test file.\n\nThe idea was to improve the performance of the postscript renderer so it would\nreuse the page master layout information for pages using the same page master.\nI'm not sure it was worth the trouble so I have just removed this code.  I have\nnow included the test file you provided as a unit test.\n\nAdrian.\n", "tags": [], "creator": "dev@cumiskey.com", "is_private": false, "count": 11, "id": 104368, "time": "2007-06-13T07:23:21Z", "bug_id": 42144, "creation_time": "2007-06-13T07:23:21Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 42144, "text": "Created attachment 20340\npatch file", "id": 104369, "time": "2007-06-13T07:24:31Z", "creator": "dev@cumiskey.com", "creation_time": "2007-06-13T07:24:31Z", "is_private": false, "attachment_id": 20340}, {"count": 13, "tags": [], "creator": "dev@cumiskey.com", "attachment_id": 20341, "is_private": false, "id": 104370, "time": "2007-06-13T07:25:03Z", "bug_id": 42144, "creation_time": "2007-06-13T07:25:03Z", "text": "Created attachment 20341\nlist of files"}, {"count": 14, "attachment_id": null, "bug_id": 42144, "is_private": false, "id": 104751, "time": "2007-06-27T01:29:02Z", "creator": "jeremias@apache.org", "creation_time": "2007-06-27T01:29:02Z", "tags": [], "text": "Adrian, thanks for the updated patch. Unfortunately, it seems to be incomplete.\nThe class PSDictionary is missing and it doesn't seem to be expected in the\nobjects package like with the previous patch."}, {"count": 15, "tags": [], "creator": "dev@cumiskey.com", "text": "Created attachment 20399\npatch file\n\nUpdated patch with missing files (in my haste I forgot to add them to\nsubversion before creating the diff).", "id": 104754, "time": "2007-06-27T02:08:46Z", "bug_id": 42144, "creation_time": "2007-06-27T02:08:46Z", "is_private": false, "attachment_id": 20399}, {"count": 16, "tags": [], "text": "Created attachment 20400\nlist of files", "is_private": false, "id": 104755, "creation_time": "2007-06-27T02:09:18Z", "time": "2007-06-27T02:09:18Z", "creator": "dev@cumiskey.com", "bug_id": 42144, "attachment_id": 20400}, {"count": 17, "tags": [], "bug_id": 42144, "text": "Greatly reduced the dictionary object, hence the objects package now removed.", "id": 104756, "time": "2007-06-27T02:11:29Z", "creator": "dev@cumiskey.com", "creation_time": "2007-06-27T02:11:29Z", "is_private": false, "attachment_id": null}, {"count": 18, "tags": [], "creator": "dev@cumiskey.com", "attachment_id": 20621, "text": "Created attachment 20621\npatch file\n\nThis patch depends upon the new safe set page device postscript macro being\napplied to XmlGraphicsCommons (see\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=43069).\n\n* Adds new <ps:ps-setpagedevice/> extension to the postscript renderer\n(see http://wiki.apache.org/xmlgraphics-fop/ExtensionsForPostScript for\ndetails).\n* Adds safe-set-page-device and dsc-compliant configurations options.\n\nThe default value for the \"safe-set-page-device\" setting is \"false\". Setting it\n\nto \"true\" will cause the renderer to invoke a postscript macro which guards\nagainst the possibility of invalid/unsupported postscript key/values being\nissued to the implementing postscript page device. \n\nThe default value for the \"dsc-compliant\" setting is \"true\". Setting it\nto \"false\" will break DSC compliance by minimizing the number of setpagedevice\ncalls in the postscript document output.  This feature may be useful when\nunwanted blank pages are experienced in your postscript output.  This problem\nis caused by the particular postscript implementation issuing unwanted\npostscript subsystem initgraphics/erasepage calls on each setpagedevice call.", "id": 106522, "time": "2007-08-09T04:09:12Z", "bug_id": 42144, "creation_time": "2007-08-09T04:09:12Z", "is_private": false}, {"count": 19, "tags": [], "creator": "bowditch_chris@hotmail.com", "attachment_id": null, "is_private": false, "id": 108977, "time": "2007-10-04T06:53:18Z", "bug_id": 42144, "creation_time": "2007-10-04T06:53:18Z", "text": "I've done some testing with your patch Adrian and it appears to work very \nwell. None of the previous problems reported by Jeremias showed up. I was able \nto print Postscript and view in GhostView with all 4 combinations of the new \noptions that you've added. So I have committed the patch. Thanks!"}, {"count": 20, "tags": [], "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "is_private": false, "bug_id": 42144, "id": 156053, "time": "2012-04-01T06:55:49Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:55:49Z", "attachment_id": null}]