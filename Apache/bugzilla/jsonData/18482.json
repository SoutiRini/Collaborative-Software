[{"count": 0, "tags": [], "creator": "mcrocker@markcrocker.com", "attachment_id": null, "text": "While using the JustIce Verifier that is built into BCEL to investigate some\nissues with the Purifier project (a pure Java preverifier.  See\nhttp://www.markcrocker.com/~mcrocker/Computer/Purifier/), I noticed that the\ninternal state of JustIce occasionally disagreed with the StackMaps produced by\nSun's preverifier.\n\nThe problem seems to be that JustIce considers Exception handlers to be possible\nsuccessors for EVERY instruction in a try block that result in merge changes\nwhen the outgoing frame is merged with the incoming frame of the first\ninstruction in the Exception handler.\n\nI believe that this is an overly broad interpretation of the specification. \nOnly instructions that can actually throw the type (or subtype) of Exception\nthat a handler is designed to catch should be considered to have possible a\nsuccessor of the handler.\n\nAn excruciatingly detailed report with source code, bytecode and Data Flow\nAnalysis can be found at:\nhttp://www.markcrocker.com/~mcrocker/Computer/Purifier/justIceExceptionHandlingIssue.shtml\n\nThe solution would be to check if an instruction can throw the type of Exception\nthat the handler can catch BEFORE checking to see if a merge causes a change. \nThis would probably be a fairly involved task.", "id": 34094, "time": "2003-03-28T21:47:19Z", "bug_id": 18482, "creation_time": "2003-03-28T21:47:19Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 18482, "attachment_id": null, "id": 46640, "time": "2003-11-02T19:40:17Z", "creator": "ehaase@inf.fu-berlin.de", "creation_time": "2003-11-02T19:40:17Z", "is_private": false, "text": "Yes, that might be a tough task that is prone to errors, and will probably\nnot really speed up verification. However, if you'd do the coding and submit\na patch, I'll read through it and would be very happy to add it.\n"}]