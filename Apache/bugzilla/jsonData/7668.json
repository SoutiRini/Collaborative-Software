[{"count": 0, "tags": [], "bug_id": 7668, "text": "This issue is with regard to the \"Select\" tag, and the order of its options.  \nMy requirements call for a specific order for the options that is not necessary \nascending (or even descending).  Instead, the order of options needs to be \nmandated by the order that I add the elements to my \"options\" Collection.  To \nthe best of my knowledge, Arrays and Vectors are the only Collection objects \nthat make this guarantee (i.e. no derivations of the Map object guarantee \norder).  \n\nTo achieve this, I leveraged your existing code for the Select class, but in \nplace of the Map object for options I used a Vector of simple \"KeyValuePair\" \nobjects.  This bean-like object contains two attributes (Key and Value), and \nthe appropriate getters and setters.\n\nIs there another (e.g. easier/cleaner) way to accomplish a guaranteed custom \norder of options?\n\nThanks in advance for your help.", "id": 12644, "time": "2002-04-01T19:56:05Z", "creator": "paul_r_turnbull@hotmail.com", "creation_time": "2002-04-01T19:56:05Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 7668, "text": "Hi Paul.\n\nThe order is up to the HashMap.  You can use a HashMap that preserves entry \norder.  One such Map (I believe it's called LinkedHashMap or SequencedHashMap) \nis available from Jakarta Commons.\n\nI'd ideally like to support a syntax like\n\n  <input:select ...>\n    <input:option ... />\n  </input:select>\n\nbut since I'm focused on JSTL these days, I haven't had a chance to review the \nInput Taglib.", "id": 12646, "time": "2002-04-01T20:00:41Z", "creator": "bayern@essentially.net", "creation_time": "2002-04-01T20:00:41Z", "is_private": false, "attachment_id": null}]