[{"count": 0, "tags": [], "text": "Created attachment 30224\nPPT to reproduce the bug\n\nChinese characters get converted into squares when converting a PPT containing Chinese characters into images. The same problem is discussed in [0]\n\n\n[0]http://stackoverflow.com/questions/2687522/problem-with-using-apache-poi-to-convert-ppt-to-image\n\n\nThis can be reproduced by using attached PPT file", "is_private": false, "bug_id": 54880, "id": 166802, "time": "2013-04-24T05:45:19Z", "creator": "abhinav@abhinavmathur.net", "creation_time": "2013-04-24T05:45:19Z", "attachment_id": 30224}, {"count": 1, "tags": [], "bug_id": 54880, "text": "In r1488403 I have added unit tests based on the sample file supplied, which shows that POI can correct fetch all of the chinese characters without issue\n\nCould you please suggest a unit test that highlights the problem?", "id": 167544, "time": "2013-05-31T21:20:05Z", "creator": "apache@gagravarr.org", "creation_time": "2013-05-31T21:20:05Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "text": "Please refer this stackflow quuestion. \n\nThis is my code. But when I convert PPTX to PNG - it does not convert unicode character properly. It convert unicode characters to a rectangle box. I am attaching the pptx file I am using for my below program. \n\npackage foo;\n\nimport java.awt.Color;\nimport java.awt.Dimension;\nimport java.awt.Graphics2D;\nimport java.awt.geom.AffineTransform;\nimport java.awt.geom.Rectangle2D;\nimport java.awt.image.BufferedImage;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\n\nimport org.apache.poi.xslf.usermodel.XMLSlideShow;\nimport org.apache.poi.xslf.usermodel.XSLFSlide;\n\npublic class PptToPng {\n    public static void main(String[] args) throws Exception {\n\n    \tFileInputStream is = new FileInputStream(\"C:/Temp/aspose/word/font_test.pptx\");\n        XMLSlideShow ppt = new XMLSlideShow(is);\n        is.close();\n        double zoom = 2; // magnify it by 2\n        AffineTransform at = new AffineTransform();\n        at.setToScale(zoom, zoom);\n        Dimension pgsize = ppt.getPageSize();\n        System.out.println(\"DONE1\");\n        XSLFSlide[] slide = ppt.getSlides();\n        System.out.println(\"DONE2\");\n        //for (int i = 0; i < slide.length; i++) {\n            BufferedImage img = new BufferedImage((int)Math.ceil(pgsize.width*zoom), (int)Math.ceil(pgsize.height*zoom), BufferedImage.TYPE_INT_RGB);\n            Graphics2D graphics = img.createGraphics();\n            graphics.setTransform(at);\n            System.out.println(\"DONE3\");\n            graphics.setPaint(Color.white);\n            graphics.fill(new Rectangle2D.Float(0, 0, pgsize.width, pgsize.height));\n            slide[0].draw(graphics);\n            System.out.println(\"DONE4\");\n            FileOutputStream out = new FileOutputStream(\"C:/Temp/aspose/word/slide-\" + (10 + 1) + \".png\");        \n            System.out.println(\"DONE5\");   \n            javax.imageio.ImageIO.write(img, \"png\", out);\n            out.close();\n            System.out.println(\"DONE\");\n       // }\n    }\n}", "is_private": false, "bug_id": 54880, "id": 169787, "time": "2013-08-29T02:17:16Z", "creator": "saiyedzahid@gmail.com", "creation_time": "2013-08-29T02:17:16Z", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 54880, "is_private": false, "text": "Characters in my pptx are - /\u02ccin\u0259\u02c8v\u0101SH\u0259n/\u000b\n\nStackflow question is  - http://stackoverflow.com/questions/18498228/unicode-characters-not-converting-from-pptx-to-png", "id": 169788, "time": "2013-08-29T02:18:19Z", "creator": "saiyedzahid@gmail.com", "creation_time": "2013-08-29T02:18:19Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 54880, "is_private": false, "text": "Anyone here ?", "id": 169855, "time": "2013-09-01T04:24:46Z", "creator": "saiyedzahid@gmail.com", "creation_time": "2013-09-01T04:24:46Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "text": "Are you sure that the font being used has the glyphs for those characters? My hunch is that you don't have the right fonts available when running the program, and the font being used instead doesn't handle chinese characters\n\n(Based on the unit test I added in r1488403 we know POI can read the chinese characters in your file just fine, so the problem is something output related)", "id": 169856, "time": "2013-09-01T13:24:44Z", "bug_id": 54880, "creation_time": "2013-09-01T13:24:44Z", "is_private": false}, {"count": 6, "attachment_id": null, "creator": "saiyedzahid@gmail.com", "is_private": false, "id": 169859, "time": "2013-09-02T04:02:51Z", "bug_id": 54880, "creation_time": "2013-09-02T04:02:51Z", "tags": [], "text": "I am registering font file but of no use. There should be a method to specify a directory where all these fonts files stored instead of just specifying one font file at a time. - My PPTX contains a word -  /\u02ccin\u0259\u02c8v\u0101SH\u0259n/ but when it converts that pptx to png, I see some square box in the png inside -  /\u02ccin\u0259\u02c8v\u0101SH\u0259n/\n\npackage foo;\n\nimport java.awt.Dimension; \nimport java.awt.Font;\nimport java.awt.Graphics2D;\nimport java.awt.geom.AffineTransform;\nimport java.awt.geom.Rectangle2D;\nimport java.awt.image.BufferedImage;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.InputStream;\n\nimport org.apache.poi.xslf.usermodel.XMLSlideShow;\nimport org.apache.poi.xslf.usermodel.XSLFSlide;\n\npublic class PPTXToPNG {\n\npublic static void main(String[] args) throws Exception {\n\n    FileInputStream is = new FileInputStream(\"C:/Temp/PPTXToImage/unicode_test.pptx\");      \n\n    XMLSlideShow ppt = new XMLSlideShow(is);\n    is.close();\n    double zoom = 2;\n    AffineTransform at = new AffineTransform();\n    at.setToScale(zoom, zoom);\n    Dimension pgsize = ppt.getPageSize();\n    XSLFSlide[] slide = ppt.getSlides();\n\n    BufferedImage img = new BufferedImage((int)Math.ceil(pgsize.width*zoom),\n            (int)Math.ceil(pgsize.height*zoom), BufferedImage.TYPE_INT_RGB);\n    Graphics2D graphics = img.createGraphics();\n\n    graphics.setTransform(at);\n    graphics.fill(new Rectangle2D.Float(0, 0, pgsize.width, pgsize.height));\n\n    InputStream iss = new FileInputStream(\"C:/Temp/font/GEInspRg.ttf\");\n    Font font = Font.createFont(Font.TRUETYPE_FONT, iss);\n    iss.close();\n    graphics.setFont(font);\n    \n    // Draw first page in the PPTX. First page starts at 0 position\n    slide[0].draw(graphics);\n\n    FileOutputStream out = new FileOutputStream(\"C:/Temp/PPTXToImage/ConvertedSlide.png\");  \n    javax.imageio.ImageIO.write(img, \"png\", out);\n    out.close();\n    System.out.println(\"DONE\");\n\n   }\n}"}, {"count": 7, "tags": [], "bug_id": 54880, "is_private": false, "text": "You see above - my program is very simple. Read PPTX file from disk and get the slide out of that and convert just first slide to PNG. In production requirement i that these program will accept input of PPTX files which could contains letters and numbers from any international language. So I don't expect to specify and set font for each language. I have a directory where I have all the ttf files. Hope you can resolve this fast. I need to get this to production this week only and get manager approval by Monday Sep 2.", "id": 169860, "time": "2013-09-02T04:20:50Z", "creator": "saiyedzahid@gmail.com", "creation_time": "2013-09-02T04:20:50Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "creator": "apache@gagravarr.org", "text": "(In reply to saiyedzahid from comment #6)\n> I am registering font file but of no use. There should be a method to\n> specify a directory where all these fonts files stored instead of just\n> specifying one font file at a time.\n\nFont loading in Java is a JVM issue, it's not anything POI has control over. There are well documented ways to provide a directory or two of fonts to the JVM, I would suggest you read the JVM related documentation on all of that. It's nothing POI specific!", "count": 8, "id": 169862, "time": "2013-09-02T11:43:48Z", "bug_id": 54880, "creation_time": "2013-09-02T11:43:48Z", "is_private": false}, {"count": 9, "tags": [], "bug_id": 54880, "text": "Yes looks like a font issue. Let me check. \n\nThank you.", "id": 169887, "time": "2013-09-03T16:15:59Z", "creator": "saiyedzahid@gmail.com", "creation_time": "2013-09-03T16:15:59Z", "is_private": false, "attachment_id": null}, {"count": 10, "tags": [], "bug_id": 54880, "text": "Can close this bug. Was a font issue.", "id": 169901, "time": "2013-09-04T15:44:18Z", "creator": "saiyedzahid@gmail.com", "creation_time": "2013-09-04T15:44:18Z", "is_private": false, "attachment_id": null}, {"count": 11, "tags": [], "creator": "23589828@qq.com", "attachment_id": null, "text": "Know how to do. \n\nSpending several days on this issue. Lack of the hint on search engine, I spend most of time figuring out this problem on POI side, rather, finally the point is in jvm fonts setting. \n\nTime wasting !!\nBetter to let dev know how to handle this kind of problem.", "id": 179890, "time": "2014-12-20T08:17:52Z", "bug_id": 54880, "creation_time": "2014-12-20T08:17:52Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 54880, "text": "\n\n*** This bug has been marked as a duplicate of bug 55902 ***", "id": 179892, "time": "2014-12-20T11:06:45Z", "creator": "kiwiwings@apache.org", "creation_time": "2014-12-20T11:06:45Z", "is_private": false, "attachment_id": null}]