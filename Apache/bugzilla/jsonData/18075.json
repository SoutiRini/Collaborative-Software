[{"count": 0, "tags": [], "creator": "theodore.chen@perceptive.com", "attachment_id": null, "id": 33307, "time": "2003-03-17T18:45:15Z", "bug_id": 18075, "creation_time": "2003-03-17T18:45:15Z", "is_private": false, "text": "Here's the scenario:\n\nI am deploying a simple webapp via the Tomcat 4.1.X manager.\nAfter deploying the webapp once, I update the timestamp on\n/WEB-INF/web.xml and redeploy (undeploy followed\nby a deploy).  Both by monitoring the default\nlocalhost_log.<date>.txt log and by using a thread profiling\ntool (JProbe \"threadalyzer\"), I noticed that there seems to be\na redundant (and erroneous) webapp stop and restart.  I see a stop\nand a restart that are caused by the actual deploy and then\nwithin a few seconds, I see a second stop and restart.\n\nIn org.apache.catalina.startup.HostConfig, there is a thread\nthat periodically checks if the deployment descriptor\n(/WEB-INF/web.xml) of a webapp has been modified and if it has,\nthe webapp is stopped and restarted (presumably via a catalina\nLifecycleEvent).  If I'm reading the code correctly, there is\na HashMap in HostConfig that contains the last modified times\nfor the various web.xml files.  It seems that deploying through\nthe manager webapp does not update this Map (nor is this Map\nparticularly accessible without some refactoring).\n\nHaving a redundant stop and restart may not be bad (though it\nwould seem to be a bug).  However, I'm trying to track down\na resource leak where I am only able to redeploy 3 or 4 times\nbefore I see an OutOfMemoryError and I am trying to rule out\nthis stop/restart behavior."}, {"count": 1, "tags": [], "bug_id": 18075, "attachment_id": null, "id": 53975, "time": "2004-03-14T21:17:47Z", "creator": "markt@apache.org", "creation_time": "2004-03-14T21:17:47Z", "is_private": false, "text": "In the circumstances you describe, I would expect to see two stops and \nrestarts. The first as a result of updating the timestamp of web.xml and the \nsecond as a result of the redeploy through the manager app.\n\nAs I can't see anything wrong with Tomcat's behaviour in these circumstances \n(it is doing exactly what you ask it to) I am going to resolve this bug."}]