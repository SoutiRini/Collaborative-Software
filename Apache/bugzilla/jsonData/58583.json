[{"count": 0, "tags": [], "bug_id": 58583, "text": "Created attachment 33256\nThe JMeter configuration + wireshark capture of network traffic\n\nHi,\n\nI have an HTTP server I am testing.  The particular test pattern has the following behaviour (where some details are excluded for brevity)\n\n    client>  GET /path/to/file [sent to server.example.org]\n    server> 302 Found [Location: http://other.example.org:port/path/to/file]\n    client>  GET /path/to/file [sent to other.example.org]\n    server> 200 OK [with the entity as the response body]\n\nThat operation is repeated several times (using a Loop Controller), but the Thread Group has a single thread, so the requests are serialised.  In addition, I placed a one second delay in the loop (using a Constant Timer), so there is at least a one second delay between successive GET requests to other.example.org.\n\nI've configured JMeter NOT to reuse connections (the \"Use KeepAlive\" checkbox is cleared).  This means that the client includes the `Connection: close` header in the requests.  Both server.example.org and other.example.org close the connection after sending the response.\n\nThe other point to note is that the port number of other.example.org is always the same.\n\nUsing wireshark, I have observed that JMeter never reacts to other.example.org sending the FIN packet: there is a corresponding ACK from the client (generated by the OS), but no FIN.  This leaves the TCP connection in the half-closed state: CLOSE_WAIT.\n\nThis is in contrast with JMeter's behaviour with server.example.org, where it does react to FIN and sends its own FIN, fully closing the TCP connection.\n\nI have also observed JMeter attempting to reuse these half-closed connections and send a GET request on a CLOSE_WAIT connection.  Since the server has closed both ends of the socket, the server OS replies with a RST.  This forcefully closes the connection.\n\nJMeter appears to have two modes of operation: one where it does not reuse connections and one where it does.\n\nWhen JMeter is not attempting to reuse connections with other.example.org, fresh connections are made to the server for each request.  This is despite the existing connection not being closed on the client.  When operating like this, all GET requests to other.example.org succeed.\n\nWhen attempting to reuse connections, the client sends a GET request on an existing connection (which is in CLOSE_WAIT state).  The server's OS responds with a RST.  This RST results in the next iteration's GET request to other.example.org creating a fresh TCP connection.  The subsequent GET request succeeds; however, it includes the \"Connection: close\" header, with the server closing the connection.  In the next iteration, the GET request to other.example.org will then fail (RST).  Thus, when attempting to reuse connections, the GET requests to other.example.org will alternate between succeeding and failing.\n\nI have observed JMeter when running the Test Plan several times.  In some cases JMeter initially does not attempt to reuse connections and, after several iterations, it starts attempting to reuse connections.  For some Test Plan runs, JMeter always attempts to reuse connections.  However, once JMeter has started attempting to reuse connections, I have not seen it revert to not attempting to reuse connections.  I haven't been able to determine what factors control this behaviour.\n\nApart from being undesirable behaviour, this is clearly a violation of RFC 2616: where section 8.1.2 \"Once a close has been signaled, the client MUST NOT send any more requests on that connection.\"\n\nI'd be grateful if someone could investigate.  I have attached the JMeter configuration and a copy of the network traffic (where both client, server.example.org and other.example.org is 'localhost').\n\nCheers,\n\nPaul.", "id": 186240, "time": "2015-11-04T17:14:00Z", "creator": "paul.millar@desy.de", "creation_time": "2015-11-04T17:14:00Z", "is_private": false, "attachment_id": 33256}, {"count": 1, "tags": [], "bug_id": 58583, "text": "Hello,\nCould you test with nightly build and check what's happening now ?\nSee Bug 57921\n\nThanks", "id": 186253, "time": "2015-11-04T21:26:08Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-11-04T21:26:08Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "paul.millar@desy.de", "attachment_id": null, "text": "Tested with latest nightly build (r1710693) and the problem persists.\n\nFrom its description, bug 57921 is unrelated: that bug refers to a problem when \"Keep Alive\" enabled.  This bug is about a problem with \"Keep Alive\" switched off.", "id": 186269, "time": "2015-11-05T14:56:12Z", "bug_id": 58583, "creation_time": "2015-11-05T14:56:12Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 58583, "attachment_id": null, "id": 186317, "time": "2015-11-08T12:20:31Z", "creator": "rainer.jung@kippdata.de", "creation_time": "2015-11-08T12:20:31Z", "is_private": false, "text": "Supporting the OPs request: RFC 7230 also says:\n\n6.6.  Tear-down\n\n...\n\n   A client that sends a \"close\" connection option MUST NOT send further\n   requests on that connection (after the one containing \"close\") and\n   MUST close the connection after reading the final response message\n   corresponding to this request.\n\n\nIn this case here, the the requests to the first and the second server contains the client side \"Connection: close\", but only the first server responds with \"Connection: close\". The second does not, but both close the connection. Although it is not nice from the second server to not send \"Connection: close\", it is allowed (same RFC section: \"The server SHOULD send a \"close\" connection option in its final response on that connection.\").\n\nLooking at HTTPHC3Impl and HTTPHC4Impl it really seems we only set the \"Connection: close\" header but don't tell the HTTP clent to actually close the connection. I didn't check for the Java impl.\n\nSo there really seems to be a bug here."}, {"count": 4, "tags": [], "bug_id": 58583, "text": "You're quite correct in noting that the second server failed to send the \"Connection: close\" header in the response.  Independent of this problem, that should be fixed.", "id": 186344, "time": "2015-11-10T08:08:25Z", "creator": "paul.millar@desy.de", "creation_time": "2015-11-10T08:08:25Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "text": "Hi,\nIsn't this issue:\nhttps://issues.apache.org/jira/browse/HTTPCLIENT-1655\n\n@Paul Millar, we upgraded today to HC4.5.1. \nCould you try nightly build tomorrow and give us some feedback ?\nThanks", "id": 187070, "time": "2015-12-20T21:21:48Z", "bug_id": 58583, "creation_time": "2015-12-20T21:21:48Z", "is_private": false}, {"count": 6, "attachment_id": null, "creator": "p.mouawad@ubik-ingenierie.com", "text": "(In reply to Philippe Mouawad from comment #5)\n> Hi,\n> Isn't this issue:\n> https://issues.apache.org/jira/browse/HTTPCLIENT-1655\n> \n> @Paul Millar, we upgraded today to HC4.5.1. \n> Could you try nightly build tomorrow and give us some feedback ?\n> Thanks\n\nForget my last comment.\nI misunderstood the problem.\n\nNow let me recap what I understand:\nThe issue is due to server not setting header \"Connection: close\", and JMeter as a side effect not closing the connection while it should .\n\nIs my understanding correct ?\nThanks", "id": 187078, "time": "2015-12-21T17:01:28Z", "bug_id": 58583, "creation_time": "2015-12-21T17:01:28Z", "tags": [], "is_private": false}, {"count": 7, "attachment_id": null, "creator": "rainer.jung@kippdata.de", "text": "Yes, that was my impression when I looked at the ticket. I wrote\n\n\"Looking at HTTPHC3Impl and HTTPHC4Impl it really seems we only set the \"Connection: close\" header but don't tell the HTTP clent to actually close the connection. I didn't check for the Java impl.\"\n\nIf the *server* sends \"Connection: close\", then the client will automatically close the ocnnection, but only sending a \"Connection: close\" from the client side does not lead to automaticaly closing it in the client. IMHO we have to tell the client not only to send \"Connection: close\" but also to close the connection. Most servers do send \"Connection: close\" so often the problem doesn't occur.", "id": 187079, "time": "2015-12-21T19:23:38Z", "bug_id": 58583, "creation_time": "2015-12-21T19:23:38Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "bug_id": 58583, "attachment_id": null, "id": 187255, "time": "2015-12-30T13:59:03Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2015-12-30T13:59:03Z", "is_private": false, "text": "Hi,\nIt appears it was an issue in HTTPCORE:\nhttps://issues.apache.org/jira/browse/HTTPCORE-397\n\nCould you please test nightly build and report wether issue is fixed for you ?\nThanks"}, {"count": 9, "tags": [], "creator": "p.mouawad@ubik-ingenierie.com", "attachment_id": null, "text": "Hi,\nNew update , fix is not in HTTPcore-4.4.4 so no need to test.\n\nRegards\nPhilippe", "id": 187256, "time": "2015-12-30T14:02:27Z", "bug_id": 58583, "creation_time": "2015-12-30T14:02:27Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 58583, "attachment_id": null, "id": 187329, "time": "2016-01-02T23:46:56Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2016-01-02T23:46:56Z", "is_private": false, "text": "Fix should be available in HTTPClient 4.5.2 as per commit:\n\n- https://github.com/ok2c/httpclient/commit/8f38a042494482e18f0129baf4f5118067acedde\n\n\nTo have it in place, we will need to update HTTPHC4Impl to use the DefaultClientConnectionReuseStrategy.INSTANCE:\n((AbstractHttpClient) httpClient).setReuseStrategy(DefaultClientConnectionReuseStrategy.INSTANCE);"}, {"count": 11, "tags": [], "bug_id": 58583, "attachment_id": null, "id": 188869, "time": "2016-02-26T22:48:23Z", "creator": "p.mouawad@ubik-ingenierie.com", "creation_time": "2016-02-26T22:48:23Z", "is_private": false, "text": "Author: pmouawad\nDate: Fri Feb 26 22:35:18 2016\nNew Revision: 1732569\n\nURL: http://svn.apache.org/viewvc?rev=1732569&view=rev\nLog:\nUpgrade to HttpClient/httpmime 4.5.2 which fixes at the same time:\n- Bug 58881 - HTTP Request : HTTPHC4Impl shows exception when server uses \"deflate\" compression\n- Bug 58583 - HTTP client fails to close connection if server misbehaves by not sending \"connection: close\", violating HTTP RFC 2616 / RFC 7230\n- Bug 56358 - Cookie manager supports cross port cookies and RFC6265\n- Bug 57319 - Upgrade to HttpClient 4.5.2\nBugzilla Id: 57319\n\nModified:\n    jmeter/trunk/build.properties\n    jmeter/trunk/eclipse.classpath\n    jmeter/trunk/lib/   (props changed)\n    jmeter/trunk/lib/aareadme.txt\n    jmeter/trunk/licenses/bin/README.txt\n    jmeter/trunk/res/maven/ApacheJMeter_parent.pom\n    jmeter/trunk/test/src/org/apache/jmeter/protocol/http/control/TestCookieManager.java\n    jmeter/trunk/test/src/org/apache/jmeter/protocol/http/sampler/TestHTTPSamplersAgainstHttpMirrorServer.java\n    jmeter/trunk/xdocs/changes.xml"}, {"count": 12, "attachment_id": null, "creator": "p.mouawad@ubik-ingenierie.com", "text": "Author: pmouawad\nDate: Fri Feb 26 22:50:37 2016\nNew Revision: 1732574\n\nURL: http://svn.apache.org/viewvc?rev=1732574&view=rev\nLog:\nBug 58950 - NoHttpResponseException when Pause between samplers exceeds keepalive sent by server\nBugzilla Id: 58950\n\nModified:\n    jmeter/trunk/src/protocol/http/org/apache/jmeter/protocol/http/sampler/HTTPHC4Impl.java\n    jmeter/trunk/xdocs/changes.xml", "id": 188870, "time": "2016-02-26T22:51:58Z", "bug_id": 58583, "creation_time": "2016-02-26T22:51:58Z", "tags": [], "is_private": false}]