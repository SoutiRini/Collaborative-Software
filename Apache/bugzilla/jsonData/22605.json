[{"count": 0, "tags": [], "bug_id": 22605, "text": "apr_dynamic_fn_register needs an initialized apr_hook_global_pool, however \napr_initialize doesn't do that. Result: apr can't be used outside httpd, \nunless apr_hook_global_pool is initialized manually. This contradicts:\n\n/**\n  * Setup any APR internal data structures.  This MUST be the first function\n  * called for any APR library.\n  * @remark See apr_app_initialize if this is an application, rather than\n  * a library consumer of apr.\n  */\nAPR_DECLARE(apr_status_t) apr_initialize(void);\n\nso it's not *any*. Is it an omission or by design? If by design apr_hash_make \nshould probably check whether the pool is valid.\n\nNotice that initializing it, in apr_initialize doesn't prevent overriding \nlater in server/config.c:\n\n  apr_hook_global_pool=process->pconf;\n\nthat's the core that I get when calling an optional function:\n\n#0  apr_palloc (pool=0x0, size=39) at apr_pools.c:621\n#1  0x403a9820 in apr_hash_make (pool=0x0) at apr_hash.c:135\n#2  0x403dc313 in apr_dynamic_fn_register (\n     szName=0x404b3fdb \"apr_perlio_apr_file_to_PerlIO\",\n     pfn=0x404b3c66 <apr_perlio_apr_file_to_PerlIO>) at apr_hooks.c:409\n#3  0x404b3c30 in apr_perlio_init (my_perl=0x804b2c0) at apr_perlio.c:414", "id": 43060, "time": "2003-08-20T22:00:24Z", "creator": "stas@stason.org", "creation_time": "2003-08-20T22:00:24Z", "is_private": false, "attachment_id": null}, {"count": 1, "attachment_id": null, "bug_id": 22605, "is_private": false, "id": 58817, "time": "2004-06-06T14:41:47Z", "creator": "rbb@apache.org", "creation_time": "2004-06-06T14:41:47Z", "tags": [], "text": "apr_hook_global_pool is a part of apr-util, not APR.  They are two different\nlibraries with two different uses.  APR-util relies on APR, but APR doesn't have\nany dependancies on APR-util.  The comment about apr_initialize says that it\ninitializes any APR internal data structure, which is true. \napr_hook_global_pool is an APR-util data structure that the user must setup for\nthemselves.\n\nif we wanted to create an apu_initialize, we could do the init there, but I\ndon't think we really want to do that.  APR-util is really a collection of very\nunrelated functions, so it is very likely that somebody will want to use hooks,\nbut not xml from apr-util.  There is no reason that we should initialize all\nsections of APR-util in one function, the same can't really be said for APR itself.\n\nAnother option is to have an apr_hook_initialize, which sets up this variable\nfor you, and that function would need to be called before trying to do anything\nwith hooks.  For now though, just setting the variable manually isn't asking too\nmuch IMHO."}]