[{"count": 0, "tags": [], "creator": "a.v.goldberg@usa.net", "attachment_id": null, "is_private": false, "id": 25255, "time": "2002-10-28T05:11:09Z", "bug_id": 14004, "creation_time": "2002-10-28T05:11:09Z", "text": "Almost all of lifecycle event tests are based on the following assumption: all \nthe listeners must finish processing events before servlet can continue its own \nexecution. All these tests have the same model: listeners and servlets exchange \ninformation through static arraylist which is filled up by listener and then \nprocessed by servlet. I couldn't find any requirement in Sun servlet spec 2.3 \non the synchronization between listener and the entity which initiated the \nprocess of adding/removing attribute from anywhere. There are requirement \non .valueBound()/.valueUnbound() methods and on startup/shutdown events but \nnothing on attributeAdded/Removed/Replaced() etc.\nThis is my undestanding and this could be wrong so I would really appreciate it \nif you could keep me posted on this."}]