[{"count": 0, "tags": [], "bug_id": 52353, "is_private": false, "text": "Method \"org.apache.catalina.tribes.group.ChannelInterceptorBase.getNext()\" is reachable from method org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor.run(), which implements the run method of a \"Runnable\" class. The following is a sequence of method calls from \"MessageDispatchInterceptor.run()\" to \"ChannelInterceptorBase.getNext()\":\n\n1. org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor.run()\n2. org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor.sendAsyncData(LinkObject)\n3. org.apache.catalina.tribes.group.ChannelInterceptorBase.sendMessage(Member[], ChannelMessage, InterceptorPayload)\n4. org.apache.catalina.tribes.group.ChannelInterceptorBase.getNext()\n\nSimilarly, \"org.apache.catalina.tribes.group.ChannelInterceptorBase.setNext(ChannelInterceptor)\" may be called from \"org.apache.catalina.tribes.demos.CoordinationDemo.cmdStart(...).new Thread() {...}.run()\", which implements the \"run\" method of a \"Thread\". The following is a sequence of method calls that shows the possibility of invoking \"ChannelInterceptorBase.setNext(ChannelInterceptor)\" from a \"Thread\":\n\n1. org.apache.catalina.tribes.demos.CoordinationDemo.cmdStart(...).new Thread() {...}.run()\n2. org.apache.catalina.tribes.demos.CoordinationDemo.Status.start()\n3. org.apache.catalina.tribes.demos.CoordinationDemo.Status.createChannel()\n4. org.apache.catalina.tribes.group.GroupChannel.addInterceptor(ChannelInterceptor)\n5. org.apache.catalina.tribes.group.ChannelInterceptorBase.setNext(ChannelInterceptor)\n\nSince field \"org.apache.catalina.tribes.group.ChannelInterceptorBase.next\" may get accessed concurrently, it should get properly synchronized.", "id": 152265, "time": "2011-12-18T22:51:20Z", "creator": "reprogrammer@gmail.com", "creation_time": "2011-12-18T22:51:20Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 52353, "attachment_id": null, "id": 152377, "time": "2011-12-23T20:57:31Z", "creator": "markt@apache.org", "creation_time": "2011-12-23T20:57:31Z", "is_private": false, "text": "The second call path quoted is test code that isn't shipped in a Tomcat release build.\n\nAlso, interceptors (and the cluster generally) are not intended to be configured on the fly. If they were, there is a heap of concurrency issues that would need to be fixed. Note: on the fly addition and removal of cluster members is handled."}, {"count": 2, "tags": [], "bug_id": 52353, "attachment_id": null, "text": "Thanks for reviewing this issue. Keshmesh <http://keshmesh.cs.illinois.edu/> detected this problem when we marked method \"org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor.run()\" as an entry point and ran Keshmesh on Tomcat.\n\nKeshmesh considers the method \"Runnable.run()\" as an indicator of possible concurrency. Of course, \"Runnable.run()\" may not be ever used in a concurrent context, as seems to be the case here.\n\nIt's good to know that interceptors are not supposed to be configured on the fly. We'd be happy to run Keshmesh on other concurrent parts of Tomcat. Keshmesh analyzes the code that is reachable from the methods that we mark as entry points. Given your deep knowledge of the Tomcat code base, you know better which part of Tomcat is more likely to benefit from Keshmesh. Do you know of other concurrent parts of Tomcat that might benefit from Keshmesh analyses more?\n\nBy the way, if you use Eclipse, you can try out Keshmesh yourself. We'd love to hear your feedback on it.\n\n(In reply to comment #1)\n> Also, interceptors (and the cluster generally) are not intended to be\n> configured on the fly. If they were, there is a heap of concurrency issues that\n> would need to be fixed. Note: on the fly addition and removal of cluster\n> members is handled.", "id": 152391, "time": "2011-12-24T00:21:24Z", "creator": "reprogrammer@gmail.com", "creation_time": "2011-12-24T00:21:24Z", "is_private": false}]