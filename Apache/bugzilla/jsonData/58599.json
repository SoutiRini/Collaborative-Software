[{"count": 0, "tags": [], "bug_id": 58599, "attachment_id": null, "is_private": false, "id": 186322, "time": "2015-11-08T20:08:29Z", "creator": "pabstersac@gmail.com", "creation_time": "2015-11-08T20:08:29Z", "text": "This is a bug in the way that your server strips javascript: in the url, and which is not helped by the way that when a person puts in the url 3.3.3.3 it is still connected to the original server which definitely makes the exploit easier to reproduce. This is an extremely simple DoS attack which can be made by sending a specially crafted javascript: request while the page is loading, which will create a strange infinite loop which will eventually result in DoS. The javascript request I use is javascript:document.write(0); putting that in the url while the website is loading will return a blank page with a 0 and with a url of the website that was loading, that will keep on loading unsuccesfully infinitely, and if done for more than once and enough time can lead to DoS. But any javascript request containing document.right will work to perform the DoS. There is no patch available and it is extremely easy to perform. How I do it is I usually just go to the website being hosted by apache then change the url for 3.3.3.3 and when it is loading change the url again for javascript:document.write(0);\n\nIn the Hackerone Apache Bug Bounty this bug would be in the Important section.\n\nHope it helps :) :P\n\nHackerone=pabstersac"}, {"count": 1, "tags": [], "bug_id": 58599, "attachment_id": null, "id": 186323, "time": "2015-11-08T20:26:27Z", "creator": "covener@gmail.com", "creation_time": "2015-11-08T20:26:27Z", "is_private": false, "text": "Security reports belong in email to security@apache.org. You'll need to describe something more concrete in terms of inputs and outputs."}, {"count": 2, "attachment_id": null, "creator": "pabstersac@gmail.com", "is_private": false, "id": 186324, "time": "2015-11-08T20:38:09Z", "bug_id": 58599, "creation_time": "2015-11-08T20:38:09Z", "tags": [], "text": "Ok(In reply to Eric Covener from comment #1)\n> Security reports belong in email to security@apache.org. You'll need to\n> describe something more concrete in terms of inputs and outputs.\n\nok, the input is basically just changing the url for javascript:document.write(0); while the website is loading. Or you can put 3.3.3.3 when you are in the website in the url and then javascript:document.write(0);. What happens is that then you go to a blank page with 0 there but the url is the same as the website and the website will keep on  loading, since the input expected by the website is to index.html (for example) to be loaded and instead there is only a blank page with 0 it will keep on trying it until it happens, which is never or when i refresh the website, this is just an example of why this might be, this is because you allow the user to put in javascript: but also the way you load the website must have something disfunctioning or that has a vulnerability that allows a remote attacker to create an infinite loop or dos, such as in this case. If this is not enough then tell me what i should put."}, {"count": 3, "tags": [], "bug_id": 58599, "attachment_id": null, "is_private": false, "id": 186325, "time": "2015-11-08T20:41:30Z", "creator": "covener@gmail.com", "creation_time": "2015-11-08T20:41:30Z", "text": "Sorry, but I don't follow where the remote attacker or even HTTP server are involved with what you describe. We can only respond to bug reports about httpd, not speculate about what happens when you type into your browser while a website is loading."}, {"count": 4, "tags": [], "bug_id": 58599, "is_private": false, "text": "(In reply to Eric Covener from comment #3)\n> Sorry, but I don't follow where the remote attacker or even HTTP server are\n> involved with what you describe. We can only respond to bug reports about\n> httpd, not speculate about what happens when you type into your browser\n> while a website is loading.\n\nThis can DoS the server, I believe that is included here or am I getting it wrong?http://httpd.apache.org/security/impact_levels.html in the important dos is included, and this is a DoS to the server because you don't strip javascript or because of something not quite right somewhere, if this is not in scope for here where should i report it?", "id": 186326, "time": "2015-11-08T20:45:45Z", "creator": "pabstersac@gmail.com", "creation_time": "2015-11-08T20:45:45Z", "attachment_id": null}]