[{"count": 0, "tags": [], "creator": "katre-apache@henchmonkey.org", "attachment_id": null, "text": "In org.apache.catalina.connector.HttpConnector, line 1028, the connector calls \nsetTcpNoDelay on the newly created socket.  This method can throw a \nSocketException, which is not caught.  The exception causes the HttpConnector \nthread to finish, removing the Socket object without explicitly closing the \nunderlying network socket.  Tomcat then attempts to recreate the HttpConnector, \nwhich attempts to open a new socket with the same address binding.  This will \nfail, and the application will then cease to respond on the given HTTP port.\n\nThis is happening very intermittently on a production machine we have.  This is \nvery difficult to replicate, but I hope that we have given enough details to \nfix the underlying problem, which is the uncaught SocketException.", "id": 44125, "time": "2003-09-12T19:32:57Z", "bug_id": 23146, "creation_time": "2003-09-12T19:32:57Z", "is_private": false}, {"count": 1, "tags": [], "text": "We are getting this on a Solaris box.  Occasionally occurs.\n\nI have filed a bug with Sun, because I can't see why this should be failing.   \nI searched the web and found two previous cases of this, one Jetty and one\nTomcat, but no solution was found for either.  Both on solaris boxes.", "attachment_id": null, "bug_id": 23146, "id": 44126, "time": "2003-09-12T19:38:33Z", "creator": "yuri@zip.com.au", "creation_time": "2003-09-12T19:38:33Z", "is_private": false}, {"count": 2, "tags": [], "creator": "katre-apache@henchmonkey.org", "attachment_id": null, "text": "I think that's good, but it doesn't really change the fact that the exception \nisn't being checked for at all.", "id": 44127, "time": "2003-09-12T19:40:19Z", "bug_id": 23146, "creation_time": "2003-09-12T19:40:19Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 23146, "attachment_id": null, "id": 44129, "time": "2003-09-12T19:49:07Z", "creator": "yuri@zip.com.au", "creation_time": "2003-09-12T19:49:07Z", "is_private": false, "text": "You should move to using the CoyoteConnector.  Its a lot better in general. \nLuckily, it calls setTcpNoDelay in the WorkerThread, rather than in the\nServerSocket thread.  So your problem doesn't occur.  Although as far as I can\ntell there is less, although likely still some threads serving the request.  \n\njava.net.SocketException: Invalid argument\n        at java.net.PlainSocketImpl.socketSetOption(Native Method)\n        at java.net.PlainSocketImpl.setOption(PlainSocketImpl.java:240)\n        at java.net.Socket.setTcpNoDelay(Socket.java:745)\n        at \norg.apache.tomcat.util.net.PoolTcpEndpoint.setSocketOptions(PoolTcpEndpoint.java:468)\n        at \norg.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:564)\n        at \norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:619)\n        at java.lang.Thread.run(Thread.java:536)\n\nFrom some of the open bugs, I think the Catalina HttpConnector is basically\nunmaintained."}, {"count": 4, "tags": [], "bug_id": 23146, "text": "At Around 100 user load, (sometimes even lower) Tomcat stops responding, when\nviewed in console this exception is thrown.\n----------------------------------------------------\nbash-2.03# Sep 21 03:16:04 raffles sendmail[7390]: [ID 702911 mail.alert] unable\nto qualify my own domain name (raffles) -- using short name\njava.net.SocketException: Invalid argument\n        at java.net.PlainSocketImpl.socketSetOption(Native Method)\n        at java.net.PlainSocketImpl.setOption(PlainSocketImpl.java:240)\n        at java.net.Socket.setSoLinger(Socket.java:814)\n        at\norg.apache.tomcat.util.net.PoolTcpEndpoint.setSocketOptions(PoolTcpEndpoint.java:434)\n        at\norg.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:533)\n        at\norg.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:530)\n        at java.lang.Thread.run(Thread.java:534)\n----------------------------------------------------\n\nNote: We recently ported our product from Jigsaw2.2.1 to Tomcat. As this issue\nhas resulted in our RC build which is now going through Performance testing,\nproduct's release is on a hold till issue is resolved.", "id": 44479, "time": "2003-09-23T03:57:12Z", "creator": "jagsir@quark.co.in", "creation_time": "2003-09-23T03:57:12Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 23146, "attachment_id": null, "id": 44485, "time": "2003-09-23T06:37:02Z", "creator": "remm@apache.org", "creation_time": "2003-09-23T06:37:02Z", "is_private": false, "text": "I known, I know. Mentioning your OS and VM is irrelevant, and takes time.\nAnyway, this error is caught (what you see is the result of a printStackTrace; I\nwill improve the logging of this for Tomcat 5.0 by not catching an exception in\nsetSocketOptions). The problem is that if this error occurs, I think the server\nsocket is dead (and the VM's network stack may be too as well). So try a\ndifferent VM (for ex, IBM if you're running under Linux), or apply all OS kernel\npatches and use the latest VM (Solaris).\nI don't see how this report can be caused by a Tomcat bug, rather than a VM bug.\nIf all of the submitters use Solaris, I think it's time to head to java.sun.com\nand file a bug there (assuming you use an up to date system)."}, {"count": 6, "tags": [], "creator": "yuri@zip.com.au", "attachment_id": null, "text": "Yep, totally agree with you.  It's got to be an OS or at least JVM bug.  I'm\nguessing everyone is on Sun boxes.\n\nI've previously filed a bug with java.sun.com.  But won't find anything out for\na couple of weeks more.  Its in java.sun limbo state at the moment.\n\nWe are also using virtual network endpoints on a single box, its a high end\nproduction box.  I wonder if others are too?\n\nI'm not sure what effect your change has, this error was the only one we were\ngetting, I assumed that socket was thrown away, but it was probably still\nworking (after the exception), since the exception was previously being caught.\n Now that you are letting the exception go higher, will those threads keep\nprocessing requests?   ", "id": 44487, "time": "2003-09-23T06:54:26Z", "bug_id": 23146, "creation_time": "2003-09-23T06:54:26Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 23146, "text": "Previously, the socket was not thrown away right away, but passed along for\nnormal processing. It's sort of unpredictable what happened after that, so I\nthink I will port the change to Tomcat 4.1.x.", "id": 44488, "time": "2003-09-23T07:06:22Z", "creator": "remm@apache.org", "creation_time": "2003-09-23T07:06:22Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "creator": "peter.dreessen@logicacmg.com", "attachment_id": null, "text": "We have encountered this bug on a Tru64 platform, so it is probably not an OS \nrelated problem. We are using Tomcat version 4.1.24.", "id": 45012, "time": "2003-10-02T13:54:22Z", "bug_id": 23146, "creation_time": "2003-10-02T13:54:22Z", "is_private": false}, {"count": 9, "tags": [], "creator": "jagsir@quark.co.in", "attachment_id": null, "text": "The stackTrace given by 'Yuri Schimke' on 09-12-2003 is different from the one \ngiven by 'J S Dhillon' on 09-23-2003. I here at my end have faced both of \nthese, but the symptoms are nearly the same. So It seems that these two \nstackTraces correspond to be two different bugs in Tomcat 4.1.xx. Later today \nI Will file one different bug for the second stackTrace.\n\nThese can be easily produced at our end here. Second one is more prominent \nthan the first one.", "id": 45109, "time": "2003-10-06T04:05:19Z", "bug_id": 23146, "creation_time": "2003-10-06T04:05:19Z", "is_private": false}, {"count": 10, "tags": [], "creator": "yuri@zip.com.au", "attachment_id": null, "text": "Answer from Sun in relation to setTcpNoDelay failing is:\n\n\"This error is caused bya EINVAL return code from the setsockopt() system\ncall.The most likely cause of this (considering that it happensonly sometimes)\nis that the socket has been shutdown or closedin some way, but Java (or Apache)\nthinks it is still open.Which version of Tomcat are you running, and how easy is\nit toreproduce this?\"\n\nAs annoying as this is, this sounds reasonable.  I can't say this isn't\nhappening.  So something could be opening sockets and closing them immediately.  \n\nIn which case the currently coyote connector handling, (especially >= 4.1.29)\nlooks like the correct behaviour.  log the failed connection and ignore it. \n\nCould this be a port scanner or health check?  I can't think of what would be\ndoing that in our system.\n\nBTW I guess the catalina connector is still broken, because it doesn't catch the\nexception.  But at least coyote connector handles it gracefully, and it isn't an\nindicator of bad health of the system.", "id": 48091, "time": "2003-11-25T12:57:56Z", "bug_id": 23146, "creation_time": "2003-11-25T12:57:56Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 23146, "attachment_id": null, "id": 59569, "time": "2004-06-19T12:23:56Z", "creator": "markt@apache.org", "creation_time": "2004-06-19T12:23:56Z", "is_private": false, "text": "This bug report has been transferred to Tomcat 5 because TC4 and TC5 share the \nconnectors and TC5 is now the focus of development effort"}, {"count": 12, "tags": [], "bug_id": 23146, "attachment_id": null, "id": 59582, "time": "2004-06-19T12:27:20Z", "creator": "remm@apache.org", "creation_time": "2004-06-19T12:27:20Z", "is_private": false, "text": "There's really no bug here."}]