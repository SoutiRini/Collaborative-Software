[{"count": 0, "tags": [], "creator": "ram_k_m@yahoo.com", "attachment_id": null, "id": 60024, "time": "2004-06-28T21:03:28Z", "bug_id": 29852, "creation_time": "2004-06-28T21:03:28Z", "is_private": false, "text": "The documentation for mod_proxy says that if CacheGcInterval is not set, no\ngarbage collection will be performed, and the cache will grow indefinitely. But,\nit's behaviour doesn't seem to be as specified. The default CacheGcInterval of 1\nhour is used if no value is specified.\n\nLine #110 mod_proxy.h \n#define DEFAULT_CACHE_GCINTERVAL SEC_ONE_HR\n\nOfcourse, the above can be easily resolved by updating the documentation. Now,\nto the issue I have. How do you stop apache mod_proxy GC (if necessary)? See the\nrelated code below...\n\nmod_proxy.c\n\nstatic const char *\n     set_cache_gcint(cmd_parms *parms, void *dummy, char *arg)\n{\n   ...\n   if (sscanf(arg, \"%lg\", &val) != 1)\n        return \"CacheGcInterval value must be a float\";\n\n    psf->cache.gcinterval = (int)(val * (double)SEC_ONE_HR);\n    ...\n}\n\nproxy_cache.c \n\nstatic int should_proxy_garbage_coll(request_rec *r)\n{\n   ...\n   time_t every = conf->gcinterval;\n\n   if (cachedir == NULL || every == -1)\n        return 0;\n   \n   // do GC\n   ...\n}\n\nIn order to make *every* variable to a value of -1, we need to specify\nCacheGcInterval to a value in the range -0.00055 to -0.00028. Very obscure values. \n\nMy suggestion would be stop all apache mod_proxy GC if the user specifies any\nnegative value for CacheGcInterval. The code change involved would be minor as\nshown below - \n\nproxy_cache.c \n\nstatic int should_proxy_garbage_coll(request_rec *r)\n{\n   if (cachedir == NULL || every < 0)\n        return 0;\n   // do GC\n}"}]