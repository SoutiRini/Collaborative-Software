[{"count": 0, "text": "If a context XML descriptor is placed like this:\n$CATALINA_HOME/conf/[enginename]/[hostname]/abcxyz.xml\n\nthe application is deployed with context-Path /abcxyz\nThe filename of the context XML descriptor defines the URL-context implicit,\nunder which the application is accessible. An optional path=\"/xxx\" Attribute\nin the context XML descriptor is ignored.\n\nThis is not the case, when the context XML Fragment is directly placed in the\nhost-Section of server.xml.\n\nDETAILS:\n--------\nThe method \nHostConfig.deployDescriptor(String contextPath, File contextXml, String file)\nis called when deploying an application with a context XML descriptor. Within\nthis method, the XML is parsed and a StandartContext Object is generated.\n\nThe parameter contextPath is never overridden by an optional given\npath-Attribute in the context XML descriptor, which is accessible after XML\nparsing under context.getName().\n\nThe following code-fragment in the mentioned method\nHostConfig.deployDescriptor() shows a possible solution:\n\nstarting from line 572, HostConfig.java, Revision 1.48\n------------------------------------------------------\n[...]\ncontext.setConfigFile(contextXml.getAbsolutePath());\nif(context.getName()!=null)\n{\n  context.setPath( context.getName() ); // use Context in descriptor, when given\n}\nelse\n{\n  context.setPath(contextPath);\n}\n[...]\n-------------------------------------------------------------------\n\nOliver Henning\naloba ag, Switzerland", "bug_id": 31892, "attachment_id": null, "id": 65711, "time": "2004-10-26T12:02:36Z", "creator": "oliver.henning@aloba.ch", "creation_time": "2004-10-26T12:02:36Z", "tags": [], "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 31892, "text": "More debugging in Tomcat showed up, that the follwing path would be 'better'\ninstead of the one i descriped first. Sorry for that:\n\nstarting from line 572, HostConfig.java, Revision 1.48\n------------------------------------------------------\n[...]                                                // existing code\ncontext.setConfigFile(contextXml.getAbsolutePath()); // existing code\nif(context.getName()!=null)       //NEW\n{                                 //NEW\n  contextPath=context.getName();  //NEW use Context in descriptor, when given\n}                                 //NEW\ncontext.setPath(contextPath);                        // existing code\n[...]                                                // existing code\n-------------------------------------------------------------------\n\n", "count": 1, "id": 65713, "time": "2004-10-26T12:13:50Z", "creator": "oliver.henning@aloba.ch", "creation_time": "2004-10-26T12:13:50Z", "is_private": false}, {"count": 2, "tags": [], "creator": "remm@apache.org", "text": "This is done on purpose, so this will not be addressed.", "id": 65714, "time": "2004-10-26T12:24:52Z", "bug_id": 31892, "creation_time": "2004-10-26T12:24:52Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 31892, "text": "(In reply to comment #2)\n> This is done on purpose, so this will not be addressed.\n\nYes, the documentation correctly declares the new conditions.\nHowever, an important feature (at least it is important for us) has\nbeen lost. For example, I'd like to autodeploy my content on the pathes\ncorp1/edit/\ncorp2/edit/ ...\nThis is almost impossible. I say almost, because folk on the tomcat-user@\nadvised me to use urlencoding. With urlencoding, I can\nautodeploy onto arbitrary paths.\nIn this case, the filename is like: corp1%2Fedit%2F.xml\n\nThe problem with this is not that I don't like it.\nThe problem is that using this method, stopping tomcat results in exception.\n(See below)\n\nZoltan Kanizsai\n\n====\nINFO: Stopping service TomcatService\njava.lang.reflect.InvocationTargetException\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at\nsun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n        at\nsun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n        at java.lang.reflect.Method.invoke(Method.java:585)\n        at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:271)\n        at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:409)\nCaused by: java.lang.NullPointerException\n        at\norg.apache.catalina.core.ContainerBase.removeChild(ContainerBase.java:883)\n        at org.apache.catalina.startup.HostConfig.undeployApps(HostConfig.java:1143)\n        at org.apache.catalina.startup.HostConfig.stop(HostConfig.java:1115)\n        at\norg.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:313)\n        at\norg.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n        at org.apache.catalina.core.ContainerBase.stop(ContainerBase.java:1053)\n        at org.apache.catalina.core.ContainerBase.stop(ContainerBase.java:1065)\n        at org.apache.catalina.core.StandardEngine.stop(StandardEngine.java:447)\n        at org.apache.catalina.core.StandardService.stop(StandardService.java:512)\n        at org.apache.catalina.core.StandardServer.stop(StandardServer.java:717)\n        at org.apache.catalina.startup.Catalina.stop(Catalina.java:586)\n        at org.apache.catalina.startup.Catalina.start(Catalina.java:561)", "count": 3, "id": 76067, "time": "2005-06-06T13:26:10Z", "creator": "zoltan.kanizsai@bonus.hu", "creation_time": "2005-06-06T13:26:10Z", "is_private": false}]