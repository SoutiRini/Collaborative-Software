[{"count": 0, "tags": [], "bug_id": 48050, "attachment_id": null, "id": 131362, "time": "2009-10-25T10:26:17Z", "creator": "qingyang.xu@qunar.com", "creation_time": "2009-10-25T10:26:17Z", "is_private": false, "text": "Below is the original source code of org.apache.naming.NamingContext's createSubcontext(Name name) method:\n\n/**\n     * Creates and binds a new context. Creates a new context with the given \n     * name and binds it in the target context (that named by all but \n     * terminal atomic component of the name). All intermediate contexts and \n     * the target context must already exist.\n     * \n     * @param name the name of the context to create; may not be empty\n     * @return the newly created context\n     * @exception NameAlreadyBoundException if name is already bound\n     * @exception InvalidAttributesException if creation of the subcontext \n     * requires specification of mandatory attributes\n     * @exception NamingException if a naming exception is encountered\n     */\n    public Context createSubcontext(Name name)\n        throws NamingException {\n        checkWritable();\n        \n        Context newContext = new NamingContext(env, this.name);\n        bind(name, newContext);\n        \n        return newContext;\n    }\n\nHowever, the returned NamingContext has the same name with its parent NamingContext. I suggest change the source code to below:\n\n    public Context createSubcontext(Name name)\n        throws NamingException {\n        checkWritable();\n        \n        Context newContext = new NamingContext(env, name.get(name.size() - 1));\n        bind(name, newContext);\n        \n        return newContext;\n    }"}, {"count": 1, "text": "Thanks for the report and suggested fix. It has been applied to 7.0.x and proposed for 6.0.x", "bug_id": 48050, "is_private": false, "id": 134154, "time": "2010-02-02T09:41:01Z", "creator": "markt@apache.org", "creation_time": "2010-02-02T09:41:01Z", "tags": [], "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 48050, "text": "The suggested fix wasn't quite right. The context needs to use the full name rather than the final component.\n\ntrunk has been updated and a new patch proposed for 6.0.x", "count": 2, "id": 134983, "time": "2010-03-01T23:20:34Z", "creator": "markt@apache.org", "creation_time": "2010-03-01T23:20:34Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 48050, "is_private": false, "count": 3, "id": 135039, "time": "2010-03-04T10:13:54Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2010-03-04T10:13:54Z", "text": "Please note, that this o.a.naming.NamingContext.name field is something internal:\nIt is used to implement NamingContext.isWritable(), and it is *not* exposed through any public API.\n\n(though it is accessible to subclasses because of being protected)\n\nNamingContext.isWritable() is implemented as readOnlyContexts.containsKey(name) where readOnlyContexts is some Hashtable.\n\nNote that the exact name is checked for being in readOnlyContexts table, not some prefix of it.\n\nThus,\n        Context newContext = new NamingContext(env, this.name);\n        bind(name, newContext);\nmeans that the new context\n1) is bound to the name 'name'\n2) shares the property of being read-only with the current context, thus this.name\n\nThus, the current code is correct.\n\n\nThe JavaDoc for NamingContext.name property is\n    /**\n     * Name of the associated Catalina Context.\n     */\n    protected String name;\n\nIt does not say that it is name of this context, but explicitly says that the name belongs to another object."}, {"count": 4, "tags": [], "bug_id": 48050, "attachment_id": null, "id": 135044, "time": "2010-03-04T12:01:54Z", "creator": "markt@apache.org", "creation_time": "2010-03-04T12:01:54Z", "is_private": false, "text": "Doh! Of course. It is using the name to track if the overall context is read only or not. I'll revert the changes in trunk."}]