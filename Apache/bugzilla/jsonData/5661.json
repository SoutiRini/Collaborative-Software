[{"attachment_id": null, "tags": [], "bug_id": 5661, "is_private": false, "count": 0, "id": 9279, "time": "2002-01-02T10:35:33Z", "creator": "k.henneuse@comstocksys.com", "creation_time": "2002-01-02T10:35:33Z", "text": "When using the replace task file permissions such as user execute are not\npresserved.  This is probably because the task creates a temp file and\nrenames it once the replaces have been completed(guessing have not read\nthe code).  What needs to happen is that some sort of a stat() should\nbe called before modifying the file and the permissions should be reset\nto what the stat() returned earlier.  Not sure how to do a stat() from\nJava, so I am submitting as a defect."}, {"count": 1, "tags": [], "bug_id": 5661, "attachment_id": null, "id": 9291, "time": "2002-01-02T12:54:45Z", "creator": "steve_l@iseran.com", "creation_time": "2002-01-02T12:54:45Z", "is_private": false, "text": "Sadly, this is really a CANTFIX, rather than a wontfix. \n\nAs you yourself said, \"Not sure how to do a stat() from Java\"\n\nThere is no easy way to do it; one was promised for Java1.4 but it didnt make \nthe cut, we cant use JNI without shipping a library for every platform ant \nruns on, etc. Unless something can be done calling an external app, the way we \nget environment variables on many platforms, we are all going to have to wait \nfor Java1.5. The same problem arises with <copy>, so everyone is aware of it.\n\nsorry. "}, {"count": 2, "tags": [], "bug_id": 5661, "text": "In the short run, copying file and directory permissions could be accomplished \nby creating a <copypermissions> task which extends/emulates the <copy> task but \nwhich would only copy file permissions.  As this seems to be more of an issue \nwith UNIX OS's and Perl tends to be widely available, a Perl script could be \ninvoked for that instance of the task which would receive via its stdin a paired \nlist of source and destination files or directories.  For each line it reads \nin, it would do a stat() on the source file and set the corresponding \npermissions on the destination file.  After the list of files, the task \nwould close its output stream to Perl causing the script to exit.  Since this \nPerl script would be invoked only once for the task instance rather than on a \nper file basis, performance should be very good.", "id": 9299, "time": "2002-01-02T15:08:00Z", "creator": "billb@progress.com", "creation_time": "2002-01-02T15:08:00Z", "is_private": false, "attachment_id": null}]