[{"count": 0, "tags": [], "creator": "apache@friibii.ch", "text": "the sticky-session doesn't really work in my configuration. i guess that apache\nnever check for the 'route' in my environment.\n\n-snip-\nLogLevel debug\nProxyPass / balancer://prod/ stickysession=sessionkey nofailover=On\n <Proxy balancer://prod>\n  BalancerMember http://192.168.1.1:8001 route=A_\n  BalancerMember http://192.168.1.2:8001 route=B_\n </Proxy>\n-snip-\n\nthe sessionkey-coockie is set to something like 12721798.A_\n\nafter a few clicks (depends from 2 to 15) i get connectet to the second Member,\nbut don't see why!\n\ni also tried and set another cookie (name: rout, set to: \"a.aplpha\" and changed\nthe config to \"route=alpha\" and \"route=beta\" (and of course sticksession=rout)..\ndin't work either..\n\ni'm pretty shure the cookie is set correctly, because i added the cookie into\nthe apache-log-file and it looks ok.. (LogFormat \"%{rout}C .... => a.alpha)\n\nwhen i see the logfile, there are following lines:\n\n[debug] mod_proxy_balancer.c(41): proxy: BALANCER: canonicalising URL //produrl/site\n[debug] mod_proxy_balancer.c(803): proxy: Entering byrequests for BALANCER\n(balancer://prod)\n[debug] mod_proxy_balancer.c(396): proxy: BALANCER (balancer://prod) worker\n(http://192.168.1.1:8001) rewritten to http://192.168.1.1:8001/site\n[debug] mod_proxy.c(736): Running scheme balancer handler (attempt 0)\n\ni changed following line into the \"proxy_balancer_pre_request\"-function but i'me\nnot shure if this is correct (i'm not very used to C):\n\nap_log_error(APLOG_MARK, APLOG_DEBUG, 0, r->server, \"proxy: BALANCER (%s) worker\n(%s) rewritten to %s sticky %s route %s\", (*balancer)->name, (*worker)->name,\n*url, (*balancer)->sticky, route);\n\nresult:\n\n[debug] mod_proxy_balancer.c(438): proxy: BALANCER (balancer://prod) worker\n(http://192.168.1.1:8001) rewritten to http://192.168.1.1:8001/site!args sticky\n(null) route (null)\n\n\nas well, when i have a look at the balancer-manager the route of the members is\nshown, but there's no entry for \"StickySession\".", "id": 84902, "time": "2006-01-23T16:44:21Z", "bug_id": 38357, "creation_time": "2006-01-23T16:44:21Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 38357, "attachment_id": null, "text": "I currentlky cannot see any obvious confirguration flaws on your side from what\nI can see in your config snippet. From the further log output and your remark\nabout the balancer manager I conclude that the stickysession parameter gets\nsomehow ignored. Tests in my environment show that it works. So please\n\n- Attach your complete configuration\n- In the mail you sent to me, you said that you applied all relevant patches.\nPlease provide links to all patches you applied to 2.2.0 that touch any of the\nfiles in modules/proxy.", "id": 84911, "time": "2006-01-23T21:50:23Z", "creator": "rpluem@apache.org", "creation_time": "2006-01-23T21:50:23Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 38357, "is_private": false, "id": 85946, "creation_time": "2006-02-20T12:25:31Z", "time": "2006-02-20T12:25:31Z", "creator": "apache@friibii.ch", "text": "sorry, was away for a while..\n\ni reinstalled a 'clean' version (the same version) and added the minor fixes,\nand startet to test agian. i guess i found the problem in my configuration:\n\n1. it seems that one of the changed cood made the problem even more worse!\n2. the stickysession-function works until the Proxy is definied in the\nVirtualHost Section. The Proxy works fine if you include the Proxy-Conf in the\n'general' section, but stickysession doesn't work.. therfore you need to include\nit for each virtualhost again.. [i guess you don't understand, so following\nthree samples..]\n\nworking:\n<VirtualHost ..>\n ProxyPass / balancer://prod/ stickysession=sessionkey nofailover=On\n <Proxy balancer://prod/>\n ...\n </Proxy>\n<VirtualHost ..>\n\nit also works like that:\n<VirtualHost ..>\n ProxyPass / balancer://prod/ stickysession=sessionkey nofailover=On\n Include balancemap.conf\n</VirtualHost>\n[and in balancemap: <Proxy balancer://prod/>...</Proxy>]\n\nbut it doesn't work like that!\nInclude balancemap.conf\n<VirtualHost ..>\n ProxyPass / balancer://prod/ stickysession=sessionkey nofailover=On\n<VirtualHost ..>\n[and in balancemap: <Proxy balancer://prod/>...</Proxy>]", "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 38357, "attachment_id": null, "text": "I ran into about the same problem on my configuration. After applying the patch\nhttp://svn.apache.org/viewcvs.cgi/httpd/httpd/trunk/modules/proxy/mod_proxy_balancer.c?rev=352010&view=diff&r1=352010&r2=352009&p1=httpd/httpd/trunk/modules/proxy/mod_proxy_balancer.c&p2=/httpd/httpd/trunk/modules/proxy/mod_proxy_balancer.c\n, the balancer does not find any route so nothing is sticky.\n\n[Fri Apr 14 11:58:17 2006] [debug] mod_proxy_balancer.c(198): proxy: BALANCER:\nFound value 5C16625C0C45A7EF33487CCC19016A3\n4 for stickysession jsessionid\n[Fri Apr 14 11:58:17 2006] [debug] mod_proxy_balancer.c(803): proxy: Entering\nbyrequests for BALANCER (balancer://badmobil\ne)\n[Fri Apr 14 11:58:17 2006] [debug] mod_proxy_balancer.c(396): proxy: BALANCER\n(balancer://badmobile) worker (ajp://10.0.15\n.196:8538) rewritten to\najp://10.0.15.196:8538/portail/thumbs;jsessionid=5C16625C0C45A7EF33487CCC19016A34?rsi=1906&code=60\n294&&P=25\n[Fri Apr 14 11:58:17 2006] [debug] mod_proxy_balancer.c(198): proxy: BALANCER:\nFound value 5C16625C0C45A7EF33487CCC19016A3\n4 for stickysession jsessionid\n[Fri Apr 14 11:58:17 2006] [debug] mod_proxy_balancer.c(803): proxy: Entering\nbyrequests for BALANCER (balancer://badmobil\ne)\n[Fri Apr 14 11:58:17 2006] [debug] mod_proxy_balancer.c(396): proxy: BALANCER\n(balancer://badmobile) worker (ajp://10.0.15\n.197:8538) rewritten to\najp://10.0.15.197:8538/portail/thumbs;jsessionid=5C16625C0C45A7EF33487CCC19016A34?rsi=1906&code=67\n283&&P=25\n\nAs you can see, the requests are sent to 2 different real workers. There is no\nroute in the session. By the way, I didn't find where in the response you add\nthe route to the session ID. \n\nI would love to be able to use proxy_balancer instead of LVS, but at least\nstickysession should work or an affinity mechanism should be implemented.\n\nOpened to any extensive tests,\n\nFran\u00e7ois.\n\n", "id": 88045, "time": "2006-04-14T10:30:17Z", "creator": "francois.jeanmougin@indexmultimedia.com", "creation_time": "2006-04-14T10:30:17Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 38357, "is_private": false, "id": 88051, "creation_time": "2006-04-14T11:53:46Z", "time": "2006-04-14T11:53:46Z", "creator": "rpluem@apache.org", "text": "This cannot work as your backend server does not set a session route. The\nsession route must be added to the session value and has to be separated by a\n'.'. So the contents of your jsessionid should be something like\n\n5C16625C0C45A7EF33487CCC19016A34.first\n\nfor your first backend server and\n\n5C16625C0C45A7EF33487CCC19016A34.second\n\nfor your second backend server.\nIf you use Tomcat you can get the session route added by setting the jvmRoute\nattribute in your engine container to e.g. 'first' or 'second' (see\nhttp://tomcat.apache.org/tomcat-5.5-doc/config/engine.html)\n\n", "attachment_id": null}, {"count": 5, "tags": [], "text": "It works for me but this information should lies somewhere in the doc, as it is\nnot clear currently that the route part of the id is to bet set by the\napplication server.\n\nMany thanks for you help,\n\nFran\u00e7ois.", "attachment_id": null, "id": 88064, "creator": "francois.jeanmougin@indexmultimedia.com", "time": "2006-04-14T14:09:39Z", "bug_id": 38357, "creation_time": "2006-04-14T14:09:39Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 38357, "is_private": false, "text": "So, the backend server is responsible for adding the .route?  This needs to be\ndocumented better.  Here is what the docs do say route is (no mention of who\nsets this route or that the separator is a dot)...\n\n\"route - Route of the worker when used inside load balancer. The route is a\nvalue appended to seesion id.\"\n\nAlso, I don't think that this works very well.\n\n* Dot seems to be a bad separator\n  - mod_usertrack uses dots and thus incompatible\n  - Many other vendor session ids use dots\n  - Need a way to change that seperator to something else?\n  - Maybe option to store route in it's own var/cookie by proxy server?\n  - Maybe use last dot, not first dot?  After all, you are appending to the\nsession id value, not prepending.\n\n* If backend must add route, then it means that the app server (or app) must be\naware that it is being balanced.\n  - I don't think that is a valid assumption\n  - Some vendor app servers may not allow the addition of route\n  - Changing the proxy config requires changes to the backend servers\n  - Proxy server knows what route that was used and should be able to append the\nvalue, then strip it off before proxying the request (the backend server may not\nlike it there).  Backend server has no way of knowing what arbitrary route you\nused on the proxy side.\n  - Maybe set env var to route value (and/or member value) that was used in the\nproxy server so this info can be used to append the .route if the backend is not\ncapable of it?", "id": 89135, "time": "2006-05-15T15:20:10Z", "creator": "brectanu@gmail.com", "creation_time": "2006-05-15T15:20:10Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 38357, "attachment_id": null, "text": "I have the same result, when i have two or more backend servers in my \nbalancer, stickysession doesn't work. Can we use \"url parameter\" like \nin \"POUNDS\" otherwise cookies. The Doc is not enough explained.\nHere is my configuration :\n\nProxyRequests off\n<VirtualHost IP1:4043>\nSSLEngine ON\nSSLCertificateFile conf/ssl/ca.crt\nSSLCertificateKeyFile conf/ssl/ca.key\nProxyPass /balancer-manager/ ! \nProxyPass / balancer://mycluster/ stickysession=TEST9?ID\n<Proxy balancer://mycluster>\nBalancerMember http://192.168.0.202\n#BalancerMember http://192.168.0.43\n</Proxy> \n</VirtualHost>\n\nID session example :\nhttps://www.mydomain.com/testaera/TEST9?ID=eyhhf45s2sf5ERER785452\n\n", "id": 90484, "time": "2006-06-22T09:55:13Z", "creator": "rider64bis@yahoo.fr", "creation_time": "2006-06-22T09:55:13Z", "is_private": false}, {"count": 8, "tags": [], "creator": "jsled-apachebugs@asynchronous.org", "text": "(In reply to comment #4)\n> This cannot work as your backend server does not set a session route. The\n> session route must be added to the session value and has to be separated by a\n> '.'. So the contents of your jsessionid should be something like\n> \n> 5C16625C0C45A7EF33487CCC19016A34.first\n\nThis is really not obvious, and not described in the doc. :/\n\nIn our (I imagine common) setup, we assume the session ID will be sufficiently\nunique such that we don't need to further discriminate between specific app servers.\n\nAfter thinking about it, I see the value of using '.' ... you can have\ncollisions in the session ids themselves, and use the post-'.' section to\nstrictly control stickyness of the dispatching.  But I'll echo support for the\ncomments about not necessarily being able to control this string in servers, let\nalone principle of least surprise about the behavior without the '.'-parsing.\n\nIf the whole token was always used, both the common\nrandom-sessionid-is-unique-enough case as well as the\nqualified-by-a-particular-server-name case would both work.\n\n(experienced here with apache-2.2.4 and resin-3.x)\n", "id": 101192, "time": "2007-03-29T16:03:23Z", "bug_id": 38357, "creation_time": "2007-03-29T16:03:23Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 38357, "attachment_id": null, "is_private": false, "id": 101257, "time": "2007-03-30T14:47:49Z", "creator": "rpluem@apache.org", "creation_time": "2007-03-30T14:47:49Z", "text": "(In reply to comment #8)\n\n> \n> This is really not obvious, and not described in the doc. :/\n> \n> In our (I imagine common) setup, we assume the session ID will be sufficiently\n> unique such that we don't need to further discriminate between specific app\nservers.\n\nThis is not the point. If you only use the random session ID string you run into\nthe following problems that we avoid with our approach:\n\n1. You need to store every session id in some sort of cache / hash and save to\nwhich worker it belongs. So in fact you need to store this information inside\nmod_proxy_balancer. Adding the name of the worker to the session id stores this\ninformation at the client side.\n\n2. If you have multiple webservers with a loadbalancer in front you either need\nto configure stickyness on the loadbalancer or mod_proxy_balancer needs to use a\nshared session cache among multiple boxes which makes this a lot more complex.\n\n3. If you do not have the shared session cache between the webservers shuting\ndown one webserver will cause the stickyness lost for all the sessions that have\nbeen handled by this webserver.\n\nIf your appserver cannot generate cookies which contain the required information\nyou can use mod_header in conjunction with the environment variables set by\nmod_proxy_balancer\n(http://httpd.apache.org/docs/2.2/en/mod/mod_proxy_balancer.html#environment) to\ndo this within httpd. Something like\n\nHeader add Set-Cookie \"MYCOOKIE=SOMEVALUE.%{BALANCER_WORKER_ROUTE}e; path=/;\"\nenv=BALANCER_ROUTE_CHANGED\n\nand using MYCOOKIE as stickysession identifier.\n\nBut I agree that the documentation regarding this could be improved."}, {"count": 10, "tags": [], "bug_id": 38357, "attachment_id": null, "text": "(In reply to comment #9)\n> This is not the point. If you only use the random session ID string you run into\n> the following problems that we avoid with our approach:\n\nGood points, and thanks for explaining them.\n\n\n> do this within httpd. Something like\n> \n> Header add Set-Cookie \"MYCOOKIE=SOMEVALUE.%{BALANCER_WORKER_ROUTE}e; path=/;\"\n> env=BALANCER_ROUTE_CHANGED\n\nThis is great, thanks again; one thing I note is that the route ID seems to\ninclude the '.', so it seems better to prefix the `routeid` params in the\nBalanceMember configs with '.', and leave it out of the Set-Cookie\nheader-manip.  As such:\n\n  Header add Set-Cookie \"app_lb=%{BALANCER_WORKER_ROUTE}e; path=/;\"\nenv=BALANCER_ROUTE_CHANGED\n\n  <Proxy balancer://our-app>\n\tBalancerMember http://host1:8080 route=.host1\n\tBalancerMember http://host2:8090 route=.host2\n  </Proxy>\n", "id": 101474, "time": "2007-04-05T13:55:55Z", "creator": "jsled-apachebugs@asynchronous.org", "creation_time": "2007-04-05T13:55:55Z", "is_private": false}, {"count": 11, "tags": [], "bug_id": 38357, "attachment_id": null, "text": "(In reply to comment #10)\n\n> This is great, thanks again; one thing I note is that the route ID seems to\n> include the '.', so it seems better to prefix the `routeid` params in the\n\nNo, this is not the case. '.' is only the separator. It is not part of the ID.\n\n> BalanceMember configs with '.', and leave it out of the Set-Cookie\n> header-manip.  As such:\n> \n>   Header add Set-Cookie \"app_lb=%{BALANCER_WORKER_ROUTE}e; path=/;\"\n> env=BALANCER_ROUTE_CHANGED\n> \n>   <Proxy balancer://our-app>\n> \tBalancerMember http://host1:8080 route=.host1\n> \tBalancerMember http://host2:8090 route=.host2\n>   </Proxy>\n\nSorry, but this config does not work (I checked it). You need to have the '.' in\nthe Header directive, but the string before '.' can be empty. So it is ok if the\nvalue of your cookie starts with the separator '.'.", "id": 101476, "time": "2007-04-05T14:38:46Z", "creator": "rpluem@apache.org", "creation_time": "2007-04-05T14:38:46Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 38357, "attachment_id": null, "is_private": false, "id": 101477, "time": "2007-04-05T15:12:44Z", "creator": "jsled-apachebugs@asynchronous.org", "creation_time": "2007-04-05T15:12:44Z", "text": "(In reply to comment #11)\n> (In reply to comment #10)\n> \n> > This is great, thanks again; one thing I note is that the route ID seems to\n> > include the '.', so it seems better to prefix the `routeid` params in the\n> \n> No, this is not the case. '.' is only the separator. It is not part of the ID.\n\nYou're absolutely right; I was running with (mis-)patched sources.  Sorry for\nthe sloppyness and spam. :/\n"}, {"count": 13, "tags": [], "creator": "wrowe@apache.org", "attachment_id": null, "id": 112341, "time": "2007-12-30T23:15:29Z", "bug_id": 38357, "creation_time": "2007-12-30T23:15:29Z", "is_private": false, "text": "Apparently user config; closing."}]