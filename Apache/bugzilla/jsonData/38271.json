[{"count": 0, "tags": [], "creator": "kk@kohsuke.org", "attachment_id": null, "id": 84625, "time": "2006-01-14T02:02:43Z", "bug_id": 38271, "creation_time": "2006-01-14T02:02:43Z", "is_private": false, "text": "Files are conceptually a sequence of bytes, and tokens are strings. So when you\ntalk about \"replacing tokens inside a file\", those tokens have to be first\nturned into sequences of bytes, then those sequences have to be matched against\nfile images.\n\nBut the current implementation is wrong in two ways:\n\n1. it turns file images to sequence of chars, instead of turning tokens into\nsequence of bytes. This corrupts binary files (or a binary portion of otherwise\ntext file, such as control characters.)\n\n2. one needs to be able to specify the encoding of token->byte sequence\nconversion, so that (for example) UTF-8 encoded XML files can be correctly filtered."}, {"count": 1, "tags": [], "creator": "jkf@apache.org", "attachment_id": null, "id": 84627, "time": "2006-01-14T13:15:01Z", "bug_id": 38271, "creation_time": "2006-01-14T13:15:01Z", "is_private": false, "text": "One and the same string may in the same encoding be represented by different\nsequences of bytes. So converting the string to a sequence of bytes will not\nwork for all encodings.\n\nThe current implementation can handle TEXT files, as documented, in all\nencodings supported by your java platform. For this the \"encoding\" attribute is\npresent on the copy task.\n\nAd 1) True, but it is clearly stated in the manual.\n\nAd 2) UTF-8 XML Files are text files with a certain encoding, so one can use the\nencoding attribute of the copy task.\n\nText files with control sequences or non text files would be tricky anyway, what\nif part of the control sequence would match the token start and the rest would\nbe part of the plain text. In non text files probably also items like offsets,\nlengths and checksums would go haywire.\n\nTranslating the token to a byte array and matching the byte array is not\nreliable, decoding and encoding the text file was chosen, with the possibility\nto specify both the encoding used to read the file and to specify the encoding\nused to write the file, the sole drawback is that binary -non text- files cannot\nbe handled.\n"}]