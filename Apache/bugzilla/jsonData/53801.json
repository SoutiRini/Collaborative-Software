[{"count": 0, "tags": [], "bug_id": 53801, "text": "Created attachment 29303\ntest web application that reproduces the issue\n\nI'm experiencing a weird behaviour with certain combinations of security constraints having\nthe following pattern:\n(i) one security constraint applies to (at least) two overlapping URL patterns ending in /*,\nwhere one is more specific than the other (e.g., /a/* and /a/b/*)\n(ii) a second security constraint applies only to the less specific URL pattern (e.g. /a/*),\nand\n(iii) the two security constraints apply to different (possibly overlapping) sets of methods.\n\nOne such example is as follows:\n\n<servlet-mapping>\n  <servlet-name>test</servlet-name>\n  <url-pattern>/*</url-pattern>\n</servlet-mapping>\n<login-config>\n  <auth-method>BASIC</auth-method>\n  <realm-name>test</realm-name>\n</login-config>\n\n<security-constraint>\n  <web-resource-collection>\n    <web-resource-name/>\n      <url-pattern>/a/*</url-pattern>\n      <url-pattern>/a/b/*</url-pattern>\n      <http-method>POST</http-method>\n  </web-resource-collection>\n</security-constraint>\n\n<security-constraint>\n  <web-resource-collection>\n    <web-resource-name/>\n      <url-pattern>/a/*</url-pattern>\n        <http-method>GET</http-method>\n    </web-resource-collection>\n    <auth-constraint/>\n</security-constraint>\n\nThe problem occurs for HTTP requests matching to the most specific URL pattern (in the above\nexample, /a/b, /a/b/c, etc.), but on methods other than the ones mentioned in the first security\nconstraint (in the above example, GET).\n\nFor instance, each time I deploy a web application with the above-mentioned deployment descriptor\nin Tomcat, or each time I redeploy it or restart the server in case it is already deployed,\nI get randomly either of the two following behaviours:\n\n1) \"GET /a/b\" requests are allowed, i.e. no authentication is required\n2) \"GET /a/b\" requests are denied, i.e. the response requires authentication (HTTP 401)\n\nNotice that the behaviour remains then constant until I restart the server or re-deploy the\napplication. Also, adding arbitrary roles in either of the two auth-constraints, does not\nseem to change the result.\n\nAccording to the Java Servlet Specification, 1) is the correct behaviour. In fact, such requests\nshall be allowed to any (possibly unauthenticated) users, because the constraint with the\nmost specific pattern (the first one) matches to the request, but it does not mention the\nmethod of the request (GET).\n\nI tested several different combinations of security constraints, but this issue seems to occur\nonly with those of this kind.\n\n\nPlease find attached a WAR that produces the above behaviour.\n\nHere are some HTTP requests I tested together with the expected and actual results:\n\nHTTP Request      Expected HTTP Response    Observed Behaviour\nGET /test/a       403                       Always correct\nGET /test/b       200                       Always correct\nGET /test/a/b     200                       Sometimes incorrect (401 is given)\nGET /test/a/b/    200                       Sometimes incorrect (401 is given)\nGET /test/a/b/c   200                       Sometimes incorrect (401 is given)", "id": 161831, "time": "2012-08-30T09:14:42Z", "creator": "matteo.maria.casalino@sap.com", "creation_time": "2012-08-30T09:14:42Z", "is_private": false, "attachment_id": 29303}, {"count": 1, "tags": [], "bug_id": 53801, "attachment_id": null, "id": 161858, "time": "2012-08-30T23:04:30Z", "creator": "markt@apache.org", "creation_time": "2012-08-30T23:04:30Z", "is_private": false, "text": "Thanks for the report. The issue has been fixed in trunk and 7.0.x and will be included in 7.0.30 onwards.\n\nThe reason for the intermittent nature was that it depended on the order the security constraints were processed which in turn depended on the order the constraints were returned from a HashSet which varied."}]