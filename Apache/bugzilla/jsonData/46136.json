[{"count": 0, "tags": [], "bug_id": 46136, "text": "To avoid the warning given by Excel 2002 and greater when a number is stored in a Text cell.  When stored as numbers Excel makes change like removing leading zeros.  From the Excel GUI you can ignore the warning on a per cell basis.  I will attach two files one with the warning (green corner in the cell) and one where that one cell has been set to ignore.  Here is the Biff output of the two files after a diff on the output.\n\n$ diff biffNormal.txt biffIgnoreError.txt \n1690a1691,1702\n> recordid = 0x867, size = 19\n> [UNKNOWN RECORD:867]\n>     .id        = 867\n> [/UNKNOWN RECORD]\n> \n> Offset 0x6f3 (1779)\n> recordid = 0x868, size = 39\n> [UNKNOWN RECORD:868]\n>     .id        = 868\n> [/UNKNOWN RECORD]\n> \n> Offset 0x71e (1822)", "id": 122077, "time": "2008-10-31T08:00:40Z", "creator": "joe.knudsen@gmail.com", "creation_time": "2008-10-31T08:00:40Z", "is_private": false, "attachment_id": null}, {"attachment_id": 22814, "tags": [], "bug_id": 46136, "text": "Created attachment 22814\nA number is stored as text and has the warning", "count": 1, "id": 122078, "time": "2008-10-31T08:02:19Z", "creator": "joe.knudsen@gmail.com", "creation_time": "2008-10-31T08:02:19Z", "is_private": false}, {"count": 2, "tags": [], "text": "Created attachment 22815\nCell where a number is stored as text and the waring is ignored", "is_private": false, "id": 122079, "creator": "joe.knudsen@gmail.com", "time": "2008-10-31T08:02:56Z", "bug_id": 46136, "creation_time": "2008-10-31T08:02:56Z", "attachment_id": 22815}, {"count": 3, "tags": [], "bug_id": 46136, "text": "0x867 = 2151 = FeatHdr = Page 278 of the binary documentation\n\n0x868 = 2152 = Feat = Page 277 of the binary documentation\n\nFirst we'll need to implement the records, then we can look at hooking them into the usermodel", "id": 131781, "time": "2009-11-06T16:36:27Z", "creator": "apache@gagravarr.org", "creation_time": "2009-11-06T16:36:27Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 46136, "text": "Most of the record support should now be in SVN\n\nHowever, I'm not sure of the best way to expose it to the usermodel.\n\nAs best as I can tell, each sheet can have a number of FeatHdr+Feat record pairs. Within each FeatRecord is an array of cell ranges that it applies to, then a particular shared feature.\n\nFor example, it seems you can have:\n* range = a1 -> b1, type = formula ignore, set = number as text, empty cell ref\n* range = c1 -> c4 + c7 -> c8, type = formulas ignore, set = number as text\n* range = a1 -> b1, type = protection, title + type + password hash\n\nAny suggestions on where we've got something vaguely similar in the usermodel to copy the structure from greatly appreciated!", "id": 133285, "time": "2010-01-03T13:55:14Z", "creator": "apache@gagravarr.org", "creation_time": "2010-01-03T13:55:14Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 46136, "text": "See also bug #56892", "id": 183487, "time": "2015-06-12T15:40:41Z", "creator": "dtn-asfbugs@corefiling.co.uk", "creation_time": "2015-06-12T15:40:41Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "apache@gagravarr.org", "attachment_id": null, "is_private": false, "id": 188441, "time": "2016-02-15T15:03:14Z", "bug_id": 46136, "creation_time": "2016-02-15T15:03:14Z", "text": "XSSF now has a suitable set of Usermodel methods, and there's a common enum of the error types + support in FeatFormulaErr2\n\nThis now needs someone to implement those same methods (+add them to the interface), by doing the necessary record finding/adding/etc"}]