[{"attachment_id": null, "tags": [], "bug_id": 8116, "is_private": false, "count": 0, "id": 13664, "time": "2002-04-15T18:09:10Z", "creator": "arista@atg.com", "creation_time": "2002-04-15T18:09:10Z", "text": "Change the EL to implement these new rules for handling Strings in\narithmetic operators:\n\nA.3.5.1 Binary operators - A {+,-,*} B\n if A and B are null, - return 0\n if A or B is Float, Double, or a String containing \".\", \"e\", or \"E\"\n   coerce both A and B to Double and apply operator\n otherwise\n   coerce both A and B to Long and apply operator\n if operator results in exception, error\n\nA.3.5.2 Binary operator - A {/} B\n if A and B are null, - return 0\n otherwise coerce both A and B to Double and apply operator\n if operator results in exception (such as divide by 0), error\n\nA.3.5.3 Binary operator - A {%} B\n if A and B are null, return 0\n if A or B is Float, Double, or a String containing \".\", \"e\", or \"E\"\n   coerce both A and B to Double and apply operator\n otherwise\n   coerce both A and B to Long and apply operator\n if operator results in exception (such as divide by 0), error\n\nA.3.5.4 Unary minus operator - -A\n if A is null, return 0\n if A is a String\n   if A contains \".\", \"e\", or \"E\"\n     coerce to a Double and apply operator\n   otherwise\n     coerce to a Long and apply operator\n if operator results in exception, error\n if A is Byte,Short,Integer,Long,Float,Double\n   retain type, apply operator\n if operator results in exception, error\n otherwise, error"}, {"count": 1, "tags": [], "text": "All of these changes have been made", "is_private": false, "id": 13679, "creator": "arista@atg.com", "time": "2002-04-15T19:45:48Z", "bug_id": 8116, "creation_time": "2002-04-15T19:45:48Z", "attachment_id": null}]