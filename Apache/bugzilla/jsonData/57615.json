[{"count": 0, "attachment_id": null, "bug_id": 57615, "text": "Given the scenario:\n\n- Client wants to connect through HTTPS proxy to destination (using the CONNECT method).\n- The proxy HTTPS server has multiple configured HTTPS VirtualHosts on the same port (443). Only one of the hosts allows proxying (using mod_proxy_connect and AllowCONNECT), and that host is selected by the client using SNI when the connection is first established.\n\nPerhaps easier, this is the intended conversation with the proxy server:\n\n- Client: Opens SSL connection to proxy.example.com, with the SNI hostname \"proxy.example.com\"\n- Client: \"CONNECT destination.example.com:80 HTTP/1.1\"\n- Client: \"Host: proxy.example.com:443\"\n- Proxy server: \"HTTP/1.0 200 Connection Established\"\n- Further data sent over this connection is proxied to destination.example.com\n\nHERE'S THE BUG: Apache incorrectly validates the hostname of the CONNECT request, rather than the hostname from the Host request header, against the destination hostname. This results in a conversation such as:\n\n- Client: Opens SSL connection to proxy.example.com, with the SNI hostname \"proxy.example.com\"\n- Client: \"CONNECT destination.example.com:80 HTTP/1.1\"\n- Client: \"Host: proxy.example.com:443\"\n- Proxy server: \"HTTP/1.0 400 Bad Request\"\n\nIn other words, the target hostname in the CONNECT request currently must match the SNI certificate hostname in the initial connection request. --> This prevents CONNECT requests to anywhere but the local machine. It is currently not possible to allow CONNECT proxying through an HTTPS virtualhost if more than one is configured in Apache.\n\nI believe the cause of this bug is in two parts.\n\nFIRST PART: I'm not sure how Apache populates request_rec.hostname, but it appears that value can come from *either* the Host header or the request URI. In the case of CONNECT requests, this seems to come from the request URI (CONNECT destination). Hostname validation fails in modules/ssl/ssl_engine_kernel.c around line 200. I can solve this by not running this check if the request method is CONNECT (see attached for this patch), but that's probably not the best solution here. Instead, request_rec should be populated with the contents of the Host header for CONNECT requests, but I don't know where in the code that occurs.\n\nSECOND PART: With the temporary patch above applied, I still can't CONNECT to anywhere but the same hostname. Instead of a 400 Bad Request, I receive a 405 Method Not Allowed. I have verified that the request is reaching the correct virtual host, but it appears the hostname is still being compared against the VirtualHost's ServerName or something similar. I looked briefly but I am not familiar enough with Apache's code base to find where this happens.\n\nIf CONNECT requests are to work on HTTPS proxies that use SNI to distinguish VirtualHosts, then both of the above parts should be fixed.\n\nThanks.", "id": 181227, "time": "2015-02-21T00:29:44Z", "creator": "smkent@extrahop.com", "creation_time": "2015-02-21T00:29:44Z", "tags": [], "is_private": false}, {"count": 1, "tags": [], "bug_id": 57615, "text": "Created attachment 32503\nSkip SNI hostname validation for CONNECT method requests", "id": 181228, "time": "2015-02-21T00:30:20Z", "creator": "smkent@extrahop.com", "creation_time": "2015-02-21T00:30:20Z", "is_private": false, "attachment_id": 32503}, {"count": 2, "tags": [], "creator": "asfbugz@velox.ch", "text": "(In reply to Stephen Kent from comment #0)\n\nI have quite some doubts that this applies to 2.4.10 - did you really reproduce it with this specific version?\n\nA fix similar to the one you're proposing was originally suggested on httpd-dev in December 2013 [1], and somewhat more generic solution was finally backported to 2.4.8 with r1573362.\n\n> SECOND PART: With the temporary patch above applied, I still can't CONNECT\n> to anywhere but the same hostname. Instead of a 400 Bad Request, I receive a\n> 405 Method Not Allowed.\n\nThis might be caused by mod_proxy_connect not being loaded in your setup.\n\n> If CONNECT requests are to work on HTTPS proxies that use SNI to distinguish\n> VirtualHosts, then both of the above parts should be fixed.\n\nJust for the records: this continues to be non-standard use of the CONNECT method. As discussed in [1], the RFCs don't apply to CONNECT requests being sent in a TLS protected connection - section 4.3.6 in RFC 7231 (from the series of the rewritten HTTP/1.1 RFCs) states:\n\n>                                                                 Tunnels\n>    are commonly used to create an end-to-end virtual connection, through\n>    one or more proxies, which can then be secured using TLS (Transport\n>    Layer Security, [RFC5246]).\n\n(note the \"which can then [...]\")\n\n[1] https://mail-archives.apache.org/mod_mbox/httpd-dev/201312.mbox/%3C52B08B29.9060907%40velox.ch%3E", "id": 181322, "time": "2015-02-25T11:11:04Z", "bug_id": 57615, "creation_time": "2015-02-25T11:11:04Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 57615, "is_private": false, "count": 3, "id": 182630, "time": "2015-04-26T08:29:20Z", "creator": "asfbugz@velox.ch", "creation_time": "2015-04-26T08:29:20Z", "text": "Closing due to lack of feedback from reporter."}]