[{"count": 0, "tags": [], "bug_id": 40504, "attachment_id": null, "is_private": false, "id": 93554, "time": "2006-09-13T22:56:47Z", "creator": "achepati67@yahoo.es", "creation_time": "2006-09-13T22:56:47Z", "text": "Just to suggest to add the sort function like the UNIX sort function which is \nvery powerfull.\n\nThanks in advance,\n\nDavid"}, {"count": 1, "tags": [], "bug_id": 40504, "attachment_id": null, "text": "Hello David,\n\nI would recommend to implement this not as a task but as a filter.\n\nsee http://ant.apache.org/manual/CoreTypes/filterchain.html\n\nIf you have some time you could try to write yourself the filter java\nimplementation and attach it to this bug report.\n\nRegards,\n\nAntoine", "id": 93557, "time": "2006-09-14T01:28:10Z", "creator": "antoine@apache.org", "creation_time": "2006-09-14T01:28:10Z", "is_private": false}, {"count": 2, "tags": [], "creator": "mbenson@apache.org", "text": "of interest, with Ant 1.7 you could use <string> resources in a <sort>\ncollection and sort strings, then push the sorted list to a file with\n<pathconvert> and <echo>.  The only thing missing is an easy way to create\n<string> resources to begin with.  Example:\n\n<project>\n  <pathconvert pathsep=\"${line.separator}\">\n    <sort>\n      <resources>\n        <string value=\"foo\" />\n        <string value=\"bar\" />\n        <string value=\"baz\" />\n        <string value=\"etc\" />\n      </resources>\n    </sort>\n  </pathconvert>\n</project>\n\nYields:\n\nBuildfile: build.xml\n[pathconvert] bar\n[pathconvert] baz\n[pathconvert] etc\n[pathconvert] foo\n\nBUILD SUCCESSFUL\nTotal time: 0 seconds\n\n\n:)", "id": 93588, "time": "2006-09-14T14:02:57Z", "bug_id": 40504, "creation_time": "2006-09-14T14:02:57Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "mbenson@apache.org", "text": "Added a <tokens> resource collection to SVN HEAD.  It's pretty cute IMHO.", "id": 94233, "time": "2006-09-28T14:08:25Z", "bug_id": 40504, "creation_time": "2006-09-28T14:08:25Z", "is_private": false, "attachment_id": null}, {"count": 4, "attachment_id": null, "bug_id": 40504, "is_private": false, "id": 94317, "time": "2006-09-30T10:41:51Z", "creator": "achepati67@yahoo.es", "creation_time": "2006-09-30T10:41:51Z", "tags": [], "text": "Antoine,\n\nThanks for your suggestion, I am going to try implement it, but...if you take \na look into the UNIX sort syntax there are a lot of options:\n\nhttp://www.xmission.com/~comphope/unix/usort.htm\n\nDo you have any suggestion about how to attack the all possible input \noptions?, they are not only simple parameters, for example you can specify the \npriority of each field or column position will be take firt on the comparation \ncriteria, for example:\n\nsort -o $2 -k1.1,1.6 -k1.49,1.57 -k1.714,1.717 -k1.712,1.713 -k1.710,1.711 -\nk1.694,1.694 -k1.718,1.729 $1\n\nwill sort taking first the position starting at column 1 to 6, then the string \nstarting at column 49 to 57. All such fields are specified from the first \ncolumn (k1*), but you can specify them via relative position of a given field \n(a field can be identified by tabs or spaces for example. As you can see such \nsort function is very powerfull.\n\nPlease could you give me any hint about that. I am a Ant user, but I have \nnever implemented any feature on Java.\n\nThanks,\n\nDavid"}, {"count": 5, "tags": [], "creator": "carej@us.ibm.com", "text": "It's unrealistic to expect Ant to provide completely identical function to a\ndedicated command line utility.\n\nIf you need all of the function of sort, I would suggest that you exec it.", "id": 94332, "time": "2006-10-01T08:08:58Z", "bug_id": 40504, "creation_time": "2006-10-01T08:08:58Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 40504, "attachment_id": null, "text": "Additionally you can write all the custom ResourceComparators you like and use \nthem with a <sort> collection of <tokens> in Ant 1.7 .  All it takes is a \nlittle imagination!", "id": 94333, "time": "2006-10-01T08:26:45Z", "creator": "mbenson@apache.org", "creation_time": "2006-10-01T08:26:45Z", "is_private": false}, {"count": 7, "tags": [], "creator": "achepati67@yahoo.es", "text": "Created attachment 18948\nSortFilter class, testing class and testing framework\n\nI have included a patch for adding a new filter SortFilter class. I have\nconsidered the following features on it:\n- Sort lines of the file in ascendant order.\n- Sort lines in descendant order.\n- Sort file using a Comparator class for user configurated sorting criterium.", "id": 94343, "time": "2006-10-01T14:24:12Z", "bug_id": 40504, "creation_time": "2006-10-01T14:24:12Z", "is_private": false, "attachment_id": 18948}, {"count": 8, "attachment_id": null, "bug_id": 40504, "is_private": false, "id": 94344, "time": "2006-10-01T14:47:19Z", "creator": "achepati67@yahoo.es", "creation_time": "2006-10-01T14:47:19Z", "tags": [], "text": "Dear Antoine and others,\n\nFollowing your recomendation I have added a patch with an implementation of \nSortFilter, it implements ChainableReader, because I think it have to, but I \nam not sure.\n\nBecause the UNIX sort function, has a lot of different possibilities, such \namount of possible options from Java point of view can be only considered \nalowing the user just to define a Comparator implementation. That is my \napproach in general for this features, except for common criterias such us: \nReverse order, considered via reverse parameter.\n\nThis approach allow in a future multiple extension points adding new \nparameters.\n\nNote: I didn't implement the test of invoking recursively two or more sorting \ncriteria at the same time (That is why I guess it has to implement \nChainableReader). I guess it is easy to implement this test, invoking ant like \nthis:\n\n<target name=\"testSortFilterTwo\" depends=\"init\">\n    <copy file=\"input/sort.sortDefault.test\"\n      tofile=\"result/sort.sortDefault.test\">\n      <filterchain>\n        <filterreader classname=\"org.apache.tools.ant.filters.SortFilter\">\n          <param name=\"reverse\" value=\"true\"/>\n        </filterreader>\n        <filterreader classname=\"org.apache.tools.ant.filters.SortFilter\">\n        </filterreader>\n      </filterchain>\n    </copy>\n</target>\n\nthe result has to be the same as testSortFilterNoArgs test case.\n\nOn the patch I have respected the same directory structure as in the SVN:\n\nhttp://svn.apache.org/repos/asf/ant/core/trunk/src/\n\nRegards,\n\nDavid\n\nP.S.: I am going to implement now a similar filter for diff command (I need \nboth of them on my project), my idea is:\n\n<filterchain>\n    <diff reference=\"referenceFile.txt\"/>\n</filterchain>\n\nIt can be implemented in a similar way as <concat> Ant Task, nevertheless via \nfilter is also a good solution for that. I am going to add a new patch for \nthat (when I done it)\n"}, {"count": 9, "tags": [], "creator": "achepati67@yahoo.es", "text": "Antoine,\n\nPlease let me know if this patch (SortFilter) will be incorporated in a future \nAnt Release. Thanks. David", "id": 94345, "time": "2006-10-01T14:50:39Z", "bug_id": 40504, "creation_time": "2006-10-01T14:50:39Z", "is_private": false, "attachment_id": null}, {"count": 10, "attachment_id": null, "bug_id": 40504, "is_private": false, "id": 129951, "time": "2009-08-26T06:42:35Z", "creator": "bodewig@apache.org", "creation_time": "2009-08-26T06:42:35Z", "tags": [], "text": "svn revision 808009"}]