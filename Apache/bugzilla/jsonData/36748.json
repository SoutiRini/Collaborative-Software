[{"count": 0, "tags": [], "bug_id": 36748, "text": "The Ant checksum core task does not appear to work correctly across platforms\nfor the totalproperty checksum calculation of a fileset.  \n\nCalculating a total checksum for a fileset will result in different final single\nchecksum values on different platforms such as Windows and Linux.  The reason\nappears to be that the individual file checksums are kept in a map keyed by a\nFile object and the final checksum is calculated by passing over the Keyset of\nthe Map after it goes through an Array.sort().  The File.compareTo(File file)\nbehaviour is different under Windows and Linux, because of case sensitivity or\nsort ordering, so order of files processed can differ.  This would result in a\ndifferent final checksum on the two systems.  The Keyset needs to somehow be\nordered instead by the normalized relativePath value (all '/' as separators) so\nprocessing uses consistent ordering across environments.\n\nTest case:  Files in two directories with different case:\n\nWEB-INF/foo1.txt\nstatic/foo2.txt\n\n<patternset id=\"file.list\">\n\t<include name=\"WEB-INF/**\"/>\n\t<include name=\"ccstatic/**\"/>\n</patternset>\n\n\nThe ordering changes from Windows to Linux resulting in different final checksums.\n\nFrom File.compareTo() documentation for java 1.4.2:\n\nCompares two abstract pathnames lexicographically. The ordering defined by this\nmethod depends upon the underlying system. On UNIX systems, alphabetic case is\nsignificant in comparing pathnames; on Microsoft Windows systems it is not.", "id": 80230, "time": "2005-09-20T22:19:22Z", "creator": "david_orendac@choicehotels.com", "creation_time": "2005-09-20T22:19:22Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 36748, "text": "fixed with svn revision 731889", "id": 123792, "time": "2009-01-06T01:27:58Z", "creator": "bodewig@apache.org", "creation_time": "2009-01-06T01:27:58Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "mwalsh@chartwelltechnology.com", "is_private": false, "id": 136858, "attachment_id": null, "bug_id": 36748, "creation_time": "2010-05-14T10:44:10Z", "time": "2010-05-14T10:44:10Z", "text": "Just tried this out on CentOS5 and Windows XP (SP3) using Ant 1.8.1.\n\nYour fix only works if filenames are unique across all directories.\n\nThe following works for all, using relative paths instead of fileName().\n\nArrays.sort(keyArray, new Comparator() {\n       public int compare(Object o1, Object o2) {\n          File f1 = (File) o1;\n          File f2 = (File) o2;\n\t  return f1 == null ? (f2 == null ? 0 : -1)\n             : (f2 == null ? 1\n                : relativeFilePaths.get(f1).toString().compareTo(relativeFilePaths.get(f2).toString())\n                );\n        }\n    });"}, {"count": 3, "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "text": "I agree the fix was incomplete", "id": 136909, "time": "2010-05-17T04:22:22Z", "bug_id": 36748, "creation_time": "2010-05-17T04:22:22Z", "is_private": false}, {"count": 4, "tags": [], "text": "fixed (now completely, I hope) in svn revision 945023", "attachment_id": null, "id": 136910, "creator": "bodewig@apache.org", "time": "2010-05-17T04:46:56Z", "bug_id": 36748, "creation_time": "2010-05-17T04:46:56Z", "is_private": false}]