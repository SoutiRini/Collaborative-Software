[{"count": 0, "tags": [], "bug_id": 34502, "attachment_id": null, "id": 73772, "time": "2005-04-18T16:05:45Z", "creator": "kevin.greiner@compsol.cc", "creation_time": "2005-04-18T16:05:45Z", "is_private": false, "text": "When I execute the following sequence:\n  build clean\n  build bootstrap\n  build run-tests\nthe tests fail in suite org.apache.tools.ant.taskdefs.JavaTest."}, {"count": 1, "tags": [], "bug_id": 34502, "attachment_id": 14751, "is_private": false, "id": 73773, "time": "2005-04-18T16:06:39Z", "creator": "kevin.greiner@compsol.cc", "creation_time": "2005-04-18T16:06:39Z", "text": "Created attachment 14751\noutput of running 'build run-tests'"}, {"count": 2, "text": "Need all environment info.  Tests pass for me w/ Win2k, Java 1.4.2_08, current\nAnt 1.6 branch & CVS HEAD, with and without cygwin.  Some of these are slightly\ntime-sensitive; you could try playing with the value of sleeptime in\nsrc/etc/testcases/taskdefs/java.xml, target \"redirect1\".  If changing that to\nsome higher-but-still-reasonable number fixes the problem we can commit that.  \n\n-Matt", "creator": "mbenson@apache.org", "is_private": false, "id": 73778, "time": "2005-04-18T18:10:22Z", "bug_id": 34502, "creation_time": "2005-04-18T18:10:22Z", "tags": [], "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 34502, "attachment_id": null, "id": 73870, "time": "2005-04-20T20:16:18Z", "creator": "jkf@apache.org", "creation_time": "2005-04-20T20:16:18Z", "is_private": false, "text": "It also happens to me about half the time on win XP both on 1.6.x head and on\n1.7. Getting rid of the problem entirely leads to prohibitive time settings. I\neven got this problem at a setting of 8 seconds, while at most time i don't get\nthis problem at all with the 2 second setting. (currently I am \"lucky\" and can\nreproduce it every single time I try)\nThe problem hasn't occured for me with jdk 1.2.2 / jdk 1.3.1  but does occur\nwith 1.4.2_07 and 1.5.0."}, {"count": 4, "tags": [], "bug_id": 34502, "attachment_id": null, "id": 73935, "time": "2005-04-22T07:44:15Z", "creator": "kevin.greiner@compsol.cc", "creation_time": "2005-04-22T07:44:15Z", "is_private": false, "text": "I've noticed in several threads comments concerning the granularity of file\nsystem timestamps.  Is this somehow related?  Can anyone point me at a reference\nfor coming up to speed on this issue?\n\nPutting a waitfor task in the tests seems like a major hack.  If the java test\ndoesn't work in a intuitive fashion for Ant's test cases, how can it be\nconsidered to work for arbitary end-user build scripts?  Even if the problem is\ndue to O/S dependencies, shouldn't the fix be built into the java task?\n\nKevin"}, {"count": 5, "tags": [], "bug_id": 34502, "attachment_id": null, "is_private": false, "id": 73986, "time": "2005-04-22T16:10:42Z", "creator": "mbenson@apache.org", "creation_time": "2005-04-22T16:10:42Z", "text": "on the waitfor issue:  yes, it's a hack.  But, so is Windows, the platform to\nwhich this hack applies.  ;)  Windows JVMs are utter hell on threading.  I can\nput together some fairly complicated threading stuff that works fine on a Sun\nJVM and locks up 75% of the time on Windows.  The I/O redirection code is at the\nmercy of the thread scheduler.  I would be thrilled if a threading expert were\nto improve upon the redirection code, and I am as dismayed as anyone that the\ntests are no more reliable than they are.  The thread interaction here works\nAFAIK, if sometimes more slowly than we might like.  Anything any more complex\nthan what we have here I have been unable to make work at all on Windows after\nspending two months trying (I'm still mad about this)."}, {"count": 6, "tags": [], "creator": "jkf@apache.org", "attachment_id": null, "id": 74006, "time": "2005-04-22T20:32:30Z", "bug_id": 34502, "creation_time": "2005-04-22T20:32:30Z", "is_private": false, "text": "The filesystem granularity has nothing to do with this problem.\n\nFurthermore the problem will not occur if the test is run directly by ant from\nits xml file, even when the granularity is set to 1, it will fully reproducibly\nfail from the buid script / junit however"}, {"count": 7, "text": "I think that we have also independently discovered slowdown issues when tests \nare run thru Ant's <junit> task. We have some performance JUnit tests which \ncheck conformance in memory usage, frame rates, etc... against a baseline \nrecorded at a known point. When run on their own, with only JUnit, these run \nfine. When run in the context of Ant/<junit>, they often fail the frame rate \nchecks, because they are noticably slower.\n\nMy guess is that it's related to the stream pumping done by JUnit itself (and \npossibly also the JUnitTestListeners with usefile=\"true\").\n\nCould it be that redirector is similarly affected by <junit>'s stream pumping?\n\n--DD", "bug_id": 34502, "is_private": false, "id": 74008, "time": "2005-04-22T20:48:44Z", "creator": "ddevienne@lgc.com", "creation_time": "2005-04-22T20:48:44Z", "tags": [], "attachment_id": null}, {"count": 8, "tags": [], "creator": "mbenson@apache.org", "is_private": false, "text": "I never thought of that, but if JUnit uses similar threading mechanisms for\npumping output... and I suppose it would have to... then certainly any threaded\nbehavior could be affected.  In this case it seems Ant's and JUnit's\nstream-handling threads would be somewhat interdependent, no?\n\nI wonder if antunit will help these issues.", "id": 74009, "time": "2005-04-22T20:58:23Z", "bug_id": 34502, "creation_time": "2005-04-22T20:58:23Z", "attachment_id": null}, {"count": 9, "tags": [], "text": "Actually, JUnit itself does not do any stream pumping or threads (in the \ndefault usual case). It's Ant's <junit> which does. This is why our tests are \nfine with plain JUnit, but not with Ant's <junit>. --DD", "attachment_id": null, "bug_id": 34502, "id": 74010, "time": "2005-04-22T21:00:39Z", "creator": "ddevienne@lgc.com", "creation_time": "2005-04-22T21:00:39Z", "is_private": false}, {"count": 10, "tags": [], "bug_id": 34502, "attachment_id": null, "is_private": false, "id": 74011, "time": "2005-04-22T21:02:21Z", "creator": "mbenson@apache.org", "creation_time": "2005-04-22T21:02:21Z", "text": "I see.  Also, the <java> tasks in question are forked.  So I would think it\nstill wouldn't be thread contention at the JVM level.  I suppose we can't rule\nout the OS itself, though."}, {"count": 11, "tags": [], "bug_id": 34502, "attachment_id": null, "is_private": false, "id": 74014, "time": "2005-04-22T22:03:51Z", "creator": "jkf@apache.org", "creation_time": "2005-04-22T22:03:51Z", "text": "Probably the other process cannot see the content right away for some filesystem\n/ os reasons. The checks have been adapted from a dumb sleep to a slightly more\nintelligent check for size. The same strategy can also be applied for \"real\" builds."}]