[{"count": 0, "tags": [], "creator": "smkelly@flightaware.com", "text": "We recently upgraded our development server from Rivet 2.0.5 to 2.1.4 and are seeing a crash on child exit as a result of a ChildExit script.\n\nWe have a ChildExitScript configured in httpd.conf that calls a proc. This proc does \"set row(host) [env HTTP_HOST]\" and this causes a core dump in 2.1.4.\n\nLooking at the core file, the code above causes a TclWeb_GetEnvVar(req, \"HTTP_HOST\") call in mod_rivet. This subsequently calls TclWeb_InitEnvVars(req).\n\nWithin TclWeb_InitEnvVars():\n   364\t    apr_table_t *table = req->req->subprocess_env;\n\nThe issue is that all of req's struct values are 0x0 during a child exit:\n(gdb) print *req\n$1 = {interp = 0x0, req = 0x0, apachereq = 0x0, upload = 0x0,\n  headers_printed = 0, headers_set = 0, content_sent = 0, environment_set = 0,\n  charset = 0x0}\n\nSo, we have a NULL pointer dereference because req->req == 0x0.\n\nThis seems to be a regression, as this didn't happen wit Rivet 2.0.5. Also, it seems like at the very least there should be an assert() on req->req == NULL.", "id": 173956, "attachment_id": null, "bug_id": 56290, "creation_time": "2014-03-19T21:53:56Z", "time": "2014-03-19T21:53:56Z", "is_private": false}, {"count": 1, "tags": [], "creator": "smkelly@flightaware.com", "text": "Removed version number from case; 2.1.4 not a valid choice and I picked 2.0.4 before.", "id": 173957, "attachment_id": null, "bug_id": 56290, "creation_time": "2014-03-19T21:56:00Z", "time": "2014-03-19T21:56:00Z", "is_private": false}, {"count": 2, "tags": [], "creator": "mxmanghi@apache.org", "text": "version 2.1.4 added and assigned to this bug", "id": 173960, "attachment_id": null, "bug_id": 56290, "creation_time": "2014-03-19T22:49:16Z", "time": "2014-03-19T22:49:16Z", "is_private": false}, {"count": 3, "tags": [], "creator": "mxmanghi@apache.org", "text": "I think this problem has surfaced because starting with rivet 2.1.4 the pointer to a request_rec (passed to TclWeb_GetEnvVar) is reset when the a request processing is about to finish. My understanding is that the pointer to a request_rec structure is meaningful only when a request is being processed. A child exit procedure runs outside a request processing context thus this pointer is not set, hence the segfault.\n\nIf my assumption is correct then command env shouldn't return any meaningful data outside the context for which it was created. Before 2.1.4 the pointer to request_rec in the module's global data structure was probably still storing some pointer to the request_rec of the last request processed by the time the Child exit procedure is run. \n\nThe poor analysis that didn't bring up this issue is my fault. I think that we should decide what env has to return outside of a request and handle the case of an invalid request_rec argument", "id": 173962, "attachment_id": null, "bug_id": 56290, "creation_time": "2014-03-20T00:33:21Z", "time": "2014-03-20T00:33:21Z", "is_private": false}, {"count": 4, "tags": [], "creator": "mxmanghi@apache.org", "text": " We have been living dangerously for quite a long time not handling correctly the execution of a command that makes generally sense only within a request process. (I should check out other commands for the same problem)\n\nWhen ::rivet::env is called from within a initialization or exit handler should probably return a Tcl error. If your application needs to know the host name of the running application it should probably obtained by other means. After all the HTTP_HOST could take different values in the same application (by just having another CNAME pointing to the same server instance)\n\nMy proposal is to have ::rivet::inspect handle this case \n\n ::rivet::inspect server host_name\n\nreturning the sr->server_hostname string defined in the server_rec object", "id": 173997, "attachment_id": null, "bug_id": 56290, "creation_time": "2014-03-21T15:29:41Z", "time": "2014-03-21T15:29:41Z", "is_private": false}, {"count": 5, "tags": [], "text": "I would close this bug, but I would appreciate your opinion about my proposal of relying on ::rivet::inspect to return this information (and in case a proposal for other data inspect could read from the server_rec object instance)", "attachment_id": null, "bug_id": 56290, "id": 174096, "time": "2014-03-26T09:16:34Z", "creator": "mxmanghi@apache.org", "creation_time": "2014-03-26T09:16:34Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 56290, "attachment_id": null, "is_private": false, "id": 174185, "time": "2014-03-31T07:03:13Z", "creator": "mxmanghi@apache.org", "creation_time": "2014-03-31T07:03:13Z", "text": "I think the latest commit in trunk might address this issue. Please check it out and let me know."}]