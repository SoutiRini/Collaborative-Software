[{"count": 0, "tags": [], "creator": "hmak@vaultus.com", "attachment_id": null, "text": "Request to improve DailyRollingFileAppender handling of errors during log rotation.  If an error occur,\n\n\tP1.\tOld logs [to archive] can be lost.  Can occur if scheduled-file=name [to archive to] cannot be deleted during rotation\n\n\tP2.\tIt can end up infinite looping if ErrorHandler itself uses DailyRollingFileAppender\n\nTo address above issues, I'm currently use customized version of DailyRollingFileAppender with the following changes:\n\n\tC1.\tIf cannot delete scheduled-file-name, then continue appending to existing file (i.e., don't rotate)\n\n\tC2.\tDefer invocating ErrorHandler until very end of rollOver() method.\n\ni.e.,  Change Log4j v1.2.15 from\n\n\tvoid rollOver() throws IOException {\n\t\t...\n\n\t\tif (target.exists()) {\n\t\t\ttarget.delete();\n\t\t}\n\n\t\tFile file = new File(fileName);\n\t\tboolean result = file.renameTo(target);\n\t\tif(result) {\n\t\t\tLogLog.debug(fileName +\" -> \"+ scheduledFilename);\n\t\t} else {\n\t\t\tLogLog.error(\"Failed to rename [\"+fileName+\"] to [\"+scheduledFilename+\"].\");\n\t\t}\n\n\t\ttry {\n\t\t\t// This will also close the file. This is OK since multiple\n\t\t\t// close operations are safe.\n\t\t\tthis.setFile(fileName, false, this.bufferedIO, this.bufferSize);\n\t\t}\n\t\tcatch(IOException e) {\n\t\t\terrorHandler.error(\"setFile(\"+fileName+\", false) call failed.\");\n\t\t}\n\n\t\t...\n\t}\n\nto\n\n\tvoid rollOver() throws IOException {\n\t\t...\n\n\t\tList<String> errMsgs = new LinkedList<String>();\n\t\tboolean result = true;\n\n\t\tif (target.exists()) {\n\t\t\tresult = target.delete();\n\t\t}\n\n\t\tif (! result) {\n\t\t\terrMsgs.add(\"Failed to delete [\" + scheduledFilename + \"].  Log file will not be rolled over!\");\n\t\t} else {\n\t\t\tFile file = new File(fileName);\n\t\t\tresult = file.renameTo(target);\n\t\t\tif(result) {\n\t\t\t\tLogLog.debug(fileName +\" -> \"+ scheduledFilename);\n\t\t\t} else {\n\t\t\t\terrMsgs.add(\"Failed to rename [\"+fileName+\"] to [\"+scheduledFilename+\"].  Log file will not be rolled over!\");\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tthis.setFile(\n\t\t\t\t\tfileName,\n\t\t\t\t\t// Append if rollover [to schedule file] failed, else overwrite\n\t\t\t\t\t! result,\n\t\t\t\t\tthis.bufferedIO,\n\t\t\t\t\tthis.bufferSize);\n\n\t\t\t// Finally write out error messages now that Log4j is closer to being stable\n\t\t\tfor (String msg : errMsgs) {\n\t\t\t\terrorHandler.error(msg);\n\t\t\t}\n\t\t}\n\t\tcatch(IOException e) {\n\t\t\terrorHandler.error(\"setFile(\"+fileName+\", false) call failed.\");\n\t\t}\n\n\t\t...\n\t}", "id": 116239, "time": "2008-05-05T07:23:27Z", "bug_id": 44932, "creation_time": "2008-05-05T07:23:27Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 44932, "attachment_id": null, "id": 117234, "time": "2008-06-02T01:25:33Z", "creator": "johan.guiheneuf@sgcib.com", "creation_time": "2008-06-02T01:25:33Z", "is_private": false, "text": "Case P1 viewed on a computer with 4 procesors.\nThe same software is ran on the 4 processors. If one of the processors is running the software \u00e0 12PM, then all the log of the day is lost."}, {"count": 2, "text": "Can we apply the same logic to RollingFileAppender as well?\n\nCheers,\nAndy", "creator": "andy@shenie.info", "attachment_id": null, "id": 118220, "time": "2008-07-02T18:52:25Z", "bug_id": 44932, "creation_time": "2008-07-02T18:52:25Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 44932, "attachment_id": null, "id": 128449, "time": "2009-07-01T01:38:52Z", "creator": "apache@kastl-nbg.de", "creation_time": "2009-07-01T01:38:52Z", "is_private": false, "text": "I lost a log file for a whole day due to issue P1, so I would say this is a critical Bug not only an enhancement."}, {"count": 4, "tags": [], "creator": "bouliz@hotmail.com", "attachment_id": null, "text": "Does log4g 1.2.16 solve this issue ?", "id": 141683, "time": "2010-11-12T15:57:21Z", "bug_id": 44932, "creation_time": "2010-11-12T15:57:21Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 44932, "text": "Is this issue resolved in any of the log4j version? Please let me know.", "id": 175848, "time": "2014-06-17T07:47:09Z", "creator": "gyadav@apple.com", "creation_time": "2014-06-17T07:47:09Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "gyadav@apple.com", "attachment_id": null, "text": "And if there exists any workaround to resolve this issue, then also please let me know.\n\nThanks", "id": 175849, "time": "2014-06-17T07:49:56Z", "bug_id": 44932, "creation_time": "2014-06-17T07:49:56Z", "is_private": false}]