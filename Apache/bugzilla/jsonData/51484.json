[{"count": 0, "tags": [], "creator": "rj.1970@googlemail.com", "attachment_id": 27266, "text": "Created attachment 27266\nThe fo file I use to generate the rtf\n\nAt the end of the generated rtf file a \"\\sect\" is created.\nI believe this is wrong, it might however be a matter of definition and up to the reader how it should interpret it.\n\nThe effect it currently has is that in libreoffice/openoffice a blank page is created at the end of the document.\nIn Mirosoft Viewer there is no blank page.\n\nI have attached the fo file and the generated rtf file.\n\nEven if this is not considered a bug,\nI would be grateful for any hints how I can modify the source, to prevent this empty section to be generated.", "id": 147798, "time": "2011-07-06T16:03:55Z", "bug_id": 51484, "creation_time": "2011-07-06T16:03:55Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 51484, "text": "Created attachment 27267\nthe generated rtf", "id": 147799, "time": "2011-07-06T16:04:14Z", "creator": "rj.1970@googlemail.com", "creation_time": "2011-07-06T16:04:14Z", "is_private": false, "attachment_id": 27267}, {"count": 2, "attachment_id": 27708, "bug_id": 51484, "text": "Created attachment 27708\nHack for RtfSection.java\n\nThe RTF spec seems to say that FOP is right here and OpenOffice is\nwrong, see <http://www.biblioscape.com/rtf15_spec.htm#Heading27>.\nIt's also worth linking here to the corresponding bug report for\nLibreOffice, <https://bugs.freedesktop.org/show_bug.cgi?id=39001>.\n\nOTOH the attached patch seems to fix the problem for me, I have not\ntested it thoroughly yet, though.", "id": 150250, "time": "2011-10-06T10:11:24Z", "creator": "riefenstahl@mecom.de", "creation_time": "2011-10-06T10:11:24Z", "tags": [], "is_private": false}, {"count": 3, "text": "resetting P2 open bugs to P3 pending further review", "bug_id": 51484, "attachment_id": null, "id": 157323, "time": "2012-04-07T01:41:29Z", "creator": "gadams@apache.org", "creation_time": "2012-04-07T01:41:29Z", "tags": [], "is_private": false}, {"count": 4, "attachment_id": null, "bug_id": 51484, "text": "(In reply to comment #2)\n> Created attachment 27708 [details]\n> Hack for RtfSection.java\n> \n> The RTF spec seems to say that FOP is right here and OpenOffice is\n> wrong, see <http://www.biblioscape.com/rtf15_spec.htm#Heading27>.\n> It's also worth linking here to the corresponding bug report for\n> LibreOffice, <https://bugs.freedesktop.org/show_bug.cgi?id=39001>.\n> \n> OTOH the attached patch seems to fix the problem for me, I have not\n> tested it thoroughly yet, though.\n\ncould you provide additional input showing that the proposed fix is adequate to address this problem, doesn't introduce regressions, etc.?", "id": 157671, "time": "2012-04-08T05:20:49Z", "creator": "gadams@apache.org", "creation_time": "2012-04-08T05:20:49Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 51484, "text": "(In reply to comment #4)\n> (In reply to comment #2)\n> > Created attachment 27708 [details]\n> > Hack for RtfSection.java\n> > \n> > The RTF spec seems to say that FOP is right here and OpenOffice is\n> > wrong, see <http://www.biblioscape.com/rtf15_spec.htm#Heading27>.\n> > It's also worth linking here to the corresponding bug report for\n> > LibreOffice, <https://bugs.freedesktop.org/show_bug.cgi?id=39001>.\n> > \n> > OTOH the attached patch seems to fix the problem for me, I have not\n> > tested it thoroughly yet, though.\n> \n> could you provide additional input showing that the proposed fix is adequate to\n> address this problem, doesn't introduce regressions, etc.?\n\nRoger/Benjamin, I am still awaiting your input as requested above. if I see no further input by April 30, I will close this bug due to lack of requested information. Regards, Glenn", "id": 158348, "time": "2012-04-24T05:44:51Z", "creator": "gadams@apache.org", "creation_time": "2012-04-24T05:44:51Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "riefenstahl@mecom.de", "text": "> Roger/Benjamin, I am still awaiting your input as requested\n> above.\n\nSorry for not answering this earlier.\n\n>> could you provide additional input showing that the proposed fix is\n>> adequate to address this problem, doesn't introduce regressions,\n>> etc.?\n\nThe short answer is, I can't.\n\nAt the time I looked at the source, found a spot that seemed\nreasonable to fix the bug and gave you the patch.  I am really not\nvery knowledgeable in the library, in the RTF spec or in the usage of\nRTF in the wild.  So no, I can't judge if this is a correct fix in\ngeneral.", "id": 158405, "time": "2012-04-25T08:16:59Z", "bug_id": 51484, "creation_time": "2012-04-25T08:16:59Z", "is_private": false, "attachment_id": null}, {"count": 7, "attachment_id": null, "bug_id": 51484, "text": "applied patch (with rewrite) at http://svn.apache.org/viewvc?rev=1330296&view=rev\n\nroger/benjamin, perhaps you can check if this resolves your problem (i don't use openoffice)", "id": 158422, "time": "2012-04-25T14:01:08Z", "creator": "gadams@apache.org", "creation_time": "2012-04-25T14:01:08Z", "tags": [], "is_private": false}, {"count": 8, "tags": [], "creator": "riefenstahl@mecom.de", "text": "Thank you for looking into it.\n\nThe code does not yet work.  Currently it is testing that the current\nelement is in the siblings, but what you want to check is, if it has a\nnext after that, something like:\n\n        List siblings = parent.getChildren();\n        // write suffix /sect only if this section is not last section (see bug #51484)\n        Iterator iterator = siblings.listIterator ( siblings.indexOf ( this ) );\n        iterator.next(); // Skip ourselfs\n        if ( iterator.hasNext() ) {\n            writeControlWord(\"sect\");\n        }", "id": 158446, "time": "2012-04-26T09:10:25Z", "bug_id": 51484, "creation_time": "2012-04-26T09:10:25Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "text": "(In reply to comment #8)\n> Thank you for looking into it.\n> \n> The code does not yet work.  Currently it is testing that the current\n> element is in the siblings, but what you want to check is, if it has a\n> next after that, something like:\n> \n>         List siblings = parent.getChildren();\n>         // write suffix /sect only if this section is not last section (see bug\n> #51484)\n>         Iterator iterator = siblings.listIterator ( siblings.indexOf ( this )\n> );\n>         iterator.next(); // Skip ourselfs\n>         if ( iterator.hasNext() ) {\n>             writeControlWord(\"sect\");\n>         }\n\nah, right; forgot to skip this section; here is an improved version that doesn't rely on iteration; please test, and if it resolves it, move this bug to closed... thanks!\n\nhttp://svn.apache.org/viewvc?rev=1330838&view=rev", "attachment_id": null, "id": 158449, "creation_time": "2012-04-26T13:21:57Z", "time": "2012-04-26T13:21:57Z", "creator": "gadams@apache.org", "bug_id": 51484, "is_private": false}, {"count": 10, "tags": [], "creator": "riefenstahl@mecom.de", "text": "Works for my test-case.  Thank you very much.", "id": 158785, "time": "2012-05-03T13:59:31Z", "bug_id": 51484, "creation_time": "2012-05-03T13:59:31Z", "is_private": false, "attachment_id": null}]