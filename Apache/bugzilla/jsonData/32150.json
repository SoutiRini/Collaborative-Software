[{"count": 0, "tags": [], "bug_id": 32150, "attachment_id": null, "text": "The HSSFCell class couldn't find out if the cell data type is a date.There is \nno variable such as HSSFCell.CELL_TYPE_DATE. When there is a date in a cell, it \nreturns numeric value. Also the method HSSFDateUtil.isCellDateFormatted() \nalways return false if there is a date present in a cell.The method \nHSSFCell.getDateCellValue() works fine , but for any numeric value present in \nthe cell, it gives me a java.util.date object (If the value of the cell is 1, \nthen Mon Jan 01 00:00:00 IST 1900 is returned).What is the fix for this.", "id": 66664, "time": "2004-11-10T09:57:51Z", "creator": "murugank@planetasia.com", "creation_time": "2004-11-10T09:57:51Z", "is_private": false}, {"count": 1, "tags": [], "creator": "avik@apache.org", "attachment_id": null, "is_private": false, "id": 67130, "time": "2004-11-18T14:49:07Z", "bug_id": 32150, "creation_time": "2004-11-18T14:49:07Z", "text": "This is NOT a bug, but a consequence of the fact that Excel stores dates as\nnumeric values. See the FAQ for various ways to work around this. In general\nquestions should be asked on the mailing list, rather than bugzilla for quicker\nresponse. Thanks. "}, {"count": 2, "tags": [], "bug_id": 32150, "attachment_id": null, "id": 86882, "time": "2006-03-16T01:35:22Z", "creator": "pari.gandhi@essential.com.au", "creation_time": "2006-03-16T01:35:22Z", "is_private": false, "text": "I use the approach suggested in the Jakarta POI FAQ, \n(See code snippet below) and the issue still occurs!.\n\n   case HSSFCell.CELL_TYPE_NUMERIC:\n                    double d = cell.getNumericCellValue();\n                    if (HSSFDateUtil.isCellDateFormatted(cell)) {\n                        cal.setTime(HSSFDateUtil.getJavaDate(d));\n                        value =\n(String.valueOf(cal.get(Calendar.YEAR))).substring(2);\n                        value = cal.get(Calendar.MONTH) + 1 + \"/\" +\ncal.get(Calendar.DAY_OF_MONTH) + \"/\" + value;\n                    } else {\n                        value = \"\" + cell.getNumericCellValue();\n                    }\n                    break;"}, {"count": 3, "tags": [], "bug_id": 32150, "text": "Source Code\n----------------------\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.FileWriter;\nimport java.util.Calendar;\n\nimport org.apache.poi.hssf.usermodel.HSSFCell;\nimport org.apache.poi.hssf.usermodel.HSSFDateUtil;\nimport org.apache.poi.hssf.usermodel.HSSFSheet;\nimport org.apache.poi.hssf.usermodel.HSSFWorkbook;\nimport org.apache.poi.poifs.filesystem.POIFSFileSystem;\n\npublic class ExcelExporter {\n\n    private String spreadsheet;\n\n    private final String NEW_LINE = \"\\r\\n\";\n\n    private final String DELIMITER = \",\";\n\n    private final String EXTENSION = \".csv\";\n\n    public static void main(String... args) throws Exception {\n        new ExcelExporter(\"x.xls\").execute();\n        System.out.println(\"All done!\");\n    }\n\n    public ExcelExporter(String spreadsheet) {\n        this.spreadsheet = spreadsheet;\n    }\n\n    private void execute() throws Exception {\n        POIFSFileSystem fs = new POIFSFileSystem(new FileInputStream(spreadsheet));\n        HSSFWorkbook wb = new HSSFWorkbook(fs);\n        HSSFSheet sheet = wb.getSheetAt(0);\n        String tsv = \"\";\n        Calendar cal = Calendar.getInstance();\n        for (int r = 0; r < sheet.getPhysicalNumberOfRows(); r++) {\n            for (short c = 0; c < sheet.getRow(r).getPhysicalNumberOfCells(); c++) {\n                HSSFCell cell = sheet.getRow(r).getCell(c);\n                String value = null;\n                if (cell == null)\n                    continue;\n                switch (cell.getCellType()) {\n                case HSSFCell.CELL_TYPE_NUMERIC:\n                    // Excel stores dates as numbers therefore the only way to\n                    // determine if a cell is actually stored as a date is to\n                    // look at the formatting.\n                    double d = cell.getNumericCellValue();\n                    // test if a date!\n                    if (HSSFDateUtil.isCellDateFormatted(cell)) {\n                        // format in form of M/D/YY\n                        cal.setTime(HSSFDateUtil.getJavaDate(d));\n                        value =\n(String.valueOf(cal.get(Calendar.YEAR))).substring(2);\n                        value = cal.get(Calendar.MONTH) + 1 + \"/\" +\ncal.get(Calendar.DAY_OF_MONTH) + \"/\" + value;\n                    } else {\n                        value = \"\" + cell.getNumericCellValue();\n                    }\n                    break;\n\n                case HSSFCell.CELL_TYPE_STRING:\n                    value = cell.getStringCellValue();\n                    break;\n\n                default:\n                }\n                tsv += value + DELIMITER;\n\n            }\n            tsv += r == (sheet.getPhysicalNumberOfRows() - 1) ? \"\" : NEW_LINE; \n        }\n        File f = new File(\"x\" + EXTENSION);\n        f.createNewFile();\n        FileWriter fr = new FileWriter(\"x\" + EXTENSION);\n        fr.write(tsv);\n        fr.flush();\n        fr.close();\n\n    }\n\n}", "id": 86883, "time": "2006-03-16T01:37:20Z", "creator": "pari.gandhi@essential.com.au", "creation_time": "2006-03-16T01:37:20Z", "is_private": false, "attachment_id": null}]