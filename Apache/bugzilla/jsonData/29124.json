[{"count": 0, "tags": [], "creator": "lfurini@cs.unibo.it", "attachment_id": null, "text": "Ok, so here is the patch I was talking about in the fop-dev mailing list.\nI'm going to attach:\n- the patch concerning existing files\n- 5 new .java files (diff did not consider them)\n- a few test fo files showing some properties (text-indent, text-align-last, \nword-spacing & letter-spacing)\n- an fo file with some long paragraphs, which can be used to make space width \ncomparison; for example, HEAD and xep have very large spaces in some lines of \nthe first paragraph.\n\nI try to summarize briefly the algorithm, but I'm not so sure I can be both \nclear and exhaustive :-) \n\nThe first step in the algorithm is converting the paragraph into a sequence of \nelements; there are 3 kind of elements:\n- \"box\" elements, representing words or whatever else; a box has a width\n- \"glue\" elements, representing adjustable spaces between boxes; a glue has an \noptimal width, a potential stretch and a potential shrink, i.e. its length is \nin the range [width - shrink, width + stretch]\n- \"penalty\" items represents positions in which a line could be broken; a \npenalty has a width (i.e. the \"-\" width when hyphenating), a penalty value and \na boolean; the penalty value is a kind of \"aesthetic cost\", and it could be a \nfinite number, +infinite (where there can't be a break) or -infinite (a forced \nbreak); penalties with value = 0 can be omitted\n\nFor example, the text \"life is beautiful\" will generate the sequence:\n\n box - glue - box - glue - box - penalty - box - penalty - box\n  ^            ^            ^       ^       ^       ^       ^\n  |            |            |       |       |       |       |\n life         is           beau     -       ti      -      ful\n\nThen, the algorithm finds the breaking points:\nFor each element in the paragraph, it verifies if this element is a \"feasible \nbreak\", i.e. there is a previous \"active\" feasible break such that the \nelements between the two break can fill a line, using the available stretch \nand shrink.\nIf the element is a feasible break, the algorithm computes a \"score\" depending \non the needed adjustment and the penalty (the lower is the score, the better \nis the break), and create a structure representing this element as an active \nfeasible break.\nNote that the number of active feasible break at each moment is quite small, \nas feasible breaks are deactivated if they are too close to the new one.\n\nSome implementation notes:\n1)\nIn order to minimize changes in other files, the LLM interacts with the TLM \ncalling brand new methods that I added to the LayoutManager interface, \nproviding null implementation in the AbstractLayoutManager. I also added a \nKnuthPossPosIter, which is almost a clone of BreakPossPosIter.\nI think a much more elegant solution would be having the LLM call \ngetNextBreakPoss, and casting the returned object to KnuthElement. Maybe \nBreakPoss and KnuthElement could be subclasses of a same class, abstract, \ncontaining only a Position object and the method to access it:\n\n        BreakPoss (same name, but a different class)\n            |\n     ---------------\n     |             |\n KnuthElement    TheClassPreviouslyKnownAsBreakPoss\n\nAll LM call getNextBreakPoss, but the LLM casts to KnuthElement and the other \nLM cast to \"TheClassPreviouslyKnownAsBreakPoss\"\n\n2)\nThe letter space is at the moment set to .min = .opt and .max = .opt as there \nare a few problems with adjustable letter space (Knuth's original algorithm \ndoes not handle letter space); I also have some problems in counting the \nletter spaces in a hyphenated word.\n\n3)\nThe LLM tries the first time to find breaking point without word hyphenation; \nonly if it doesn't find a set of break points, it calls again the algorithm \nafter having hyphenated all words, so this patch includes the ones concerning \nhyphenation (bug 27773) and hyphenation of word with punctuation marks (bug \n28431).\nI tried to use the old information (about the whole words) as much as \npossible, but I don't know whether this saves some time or it is just an \nunneeded complication.\n\n4)\nConcerning word and letter spacing, one problem is that at the moment I see no \nway to decide whether the fo property letter-spacing (or word-spacing) was set \nto 0 (and fop should respect this value), or it wasn't set and 0 is its \ndefault value (and fop could modify it in order to justify).\n\nComments, suggestions, etc. are most welcome!\n\nRegards\n    Luca", "id": 57707, "time": "2004-05-20T15:30:12Z", "bug_id": 29124, "creation_time": "2004-05-20T15:30:12Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 29124, "attachment_id": 11602, "id": 57708, "time": "2004-05-20T15:31:18Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-05-20T15:31:18Z", "is_private": false, "text": "Created attachment 11602\npatch to existing files"}, {"count": 2, "tags": [], "creator": "lfurini@cs.unibo.it", "attachment_id": 11603, "id": 57709, "time": "2004-05-20T15:31:47Z", "bug_id": 29124, "creation_time": "2004-05-20T15:31:47Z", "is_private": false, "text": "Created attachment 11603\nKnuthElement.java"}, {"count": 3, "tags": [], "bug_id": 29124, "attachment_id": 11604, "id": 57710, "time": "2004-05-20T15:32:15Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-05-20T15:32:15Z", "is_private": false, "text": "Created attachment 11604\nKnuthBox.java"}, {"count": 4, "tags": [], "creator": "lfurini@cs.unibo.it", "attachment_id": 11605, "text": "Created attachment 11605\nKnuthGlue.java", "id": 57711, "time": "2004-05-20T15:32:38Z", "bug_id": 29124, "creation_time": "2004-05-20T15:32:38Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 29124, "text": "Created attachment 11606\nKnuthPenalty.java", "id": 57712, "time": "2004-05-20T15:32:58Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-05-20T15:32:58Z", "is_private": false, "attachment_id": 11606}, {"count": 6, "tags": [], "text": "Created attachment 11607\nKnuthPossPosIter.java", "attachment_id": 11607, "bug_id": 29124, "id": 57713, "time": "2004-05-20T15:33:41Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-05-20T15:33:41Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 29124, "attachment_id": 11608, "id": 57714, "time": "2004-05-20T15:34:31Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-05-20T15:34:31Z", "is_private": false, "text": "Created attachment 11608\nfo test file (text-indent)"}, {"count": 8, "attachment_id": 11609, "bug_id": 29124, "is_private": false, "id": 57715, "time": "2004-05-20T15:34:55Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-05-20T15:34:55Z", "tags": [], "text": "Created attachment 11609\nfo test file (text-align-last)"}, {"count": 9, "tags": [], "creator": "lfurini@cs.unibo.it", "text": "Created attachment 11610\nfo test file (word-spacing and letter-spacing)", "id": 57716, "time": "2004-05-20T15:35:30Z", "bug_id": 29124, "creation_time": "2004-05-20T15:35:30Z", "is_private": false, "attachment_id": 11610}, {"count": 10, "attachment_id": 11611, "bug_id": 29124, "text": "Created attachment 11611\nfo test file (long paragraphs of text)", "id": 57717, "time": "2004-05-20T15:36:01Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-05-20T15:36:01Z", "tags": [], "is_private": false}, {"count": 11, "tags": [], "bug_id": 29124, "attachment_id": 11625, "text": "Created attachment 11625\nLineLayoutManager.java", "id": 57844, "time": "2004-05-21T17:21:41Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-05-21T17:21:41Z", "is_private": false}, {"count": 12, "tags": [], "bug_id": 29124, "attachment_id": 11626, "id": 57845, "time": "2004-05-21T17:22:17Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-05-21T17:22:17Z", "is_private": false, "text": "Created attachment 11626\nTextLayoutManager.java"}, {"count": 13, "tags": [], "creator": "lfurini@cs.unibo.it", "text": "\nHi all\n\nAt long last, I have finished the patch implementing Knuth's line breaking \nalgorithm; it took me more than I expected, mainly because of a long sequence \nof hw and sw troubles ... Murphy's laws are not something to laugh at! :-)\n\nI have worked on [Line, Text, InlineStacking, LeafNode]LM, so the algorithm \nshould work well with any fo file containing text, leaders, characters, \ninlines and the other formatting objects handled by a LeafNodeLM (external \ngraphics, pagenumbers and citations).\n\nThe general idea of Knuth algorithm is:\n\n  try to find breaking points without hyphenating words\n  if this fails\n    hyphenate all words\n    try again\n\nThe \"hyphenate all words\" phase could be time-expansive, so this step is \nperformed trying to use as much as possible the information already known, and \nto minimize the changes to the existing sequence of elements.\nThe old sequence is used to collect word fragments, and elements are replaced \nonly if the LM which created them has something to change.\nSo, \"hyphenate all words\" means:\n\n  scan the old sequence once:\n    collect word fragments\n    hyphenate word\n  scan the old sequence once more:\n    if the LM which returned this element has changed something\n      replace all elements returned by this LM\n \nThese are the new methods added; at the moment, I added them to the \nLayoutManager interface, but maybe it could be better to create a new \ninterface implementd only by LM returning inline areas.\n\n+ getNextKnuthElement()\nThis is used instead of getNextBreakPoss().\nThe next step (I have already started working on it) would be to use the same \nmethod all LM use.\n\n+ addALetterSpaceTo()\nThe low-level LMs (TLMs, LNLMs) have only a partial view of the text, and \ntherefore cannot know the exact number of letter spaces, while the LineLM has \na full view.\nIf a TLM's text is \"Tex\", it can only suppose it has 2 letter spaces; if the \nfollowing formatting object is a character \"t\", the LineLM tells the TLM to \nadd a letter space, as the \"x\" is not the last letter of the word.\n\n+ getWordChars()\nThis is not a new method, it just has different parameters; text is collected \nfrom fo:characters too.\n\n+ hyphenate()\nThe TLM does not apply the changes to vecAreaInfo immediately, otherwise the \nexisting Position objects stored in the old sequence couldn't be used any \nmore. The LeafNodeLM returns a single area, so it can apply changes immediatly.\n\n+ applyChanges()\nThis method tells the TLM to apply the changes to vecAreaInfo; all LM returns \ntrue if something is changed or false otherwise, so the LLM knows whether it \nhas to replace the old elements or not.\n\n+ getChangedKnuthElement()\nThis is used by the LLM to obtain the new elements.\n\n+ getWordSpaceIPD()\nThis is used by the LLM to ask for the word space dimension; the LLM needs it \nto center text.\n\nA few details to fix:\n\n- word spacing and letter spacing are now fully implemented, they can both \nhave MinOptMax values; but I am still thinking about how to differentiate a \nuser-defined zero value from a default zero value ...\n\n- Leaders with leader-pattern = \"rule\" or \"space\" work well; with \"dots\" the \nspace left is right, but the dots don't fill it properly. Leaders with leader-\npattern=\"use-content\" don't work, as the ContentLayoutManager has at the \nmoment only a null implementation of the method getNextKnuthElement.\nThere is also a minor bug concerning (IMO) white space handling: if there \nwhite space both before and after the leader, the latter one is removed, so \ninstead of\n  word ______ word\nthe output shows\n  word ______word\n\n- with the other fo elements (fo:externalgraphic, fo:page-number and fo:page-\nnumber-citation) the LeafNodeLM behave exactly the same way as with the old \ncode, i.e. a fo:page-number-citation generates a \"?  \".\n\n- text-align-last is partially implemented; text-align-last = \"justify\" works \nonly if text-align = \"justify\" too; this is because Knuth's algorithm doesn't \nprovide for a different alignment for the last line.\n\nI'm going to attach:\n- the patch to existing files and new files\n- a test fo file\n", "id": 61489, "time": "2004-08-03T12:41:51Z", "bug_id": 29124, "creation_time": "2004-08-03T12:41:51Z", "is_private": false, "attachment_id": null}, {"count": 14, "attachment_id": 12308, "bug_id": 29124, "is_private": false, "id": 61490, "time": "2004-08-03T12:45:04Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-08-03T12:45:04Z", "tags": [], "text": "Created attachment 12308\npatch (second edition)"}, {"count": 15, "tags": [], "creator": "lfurini@cs.unibo.it", "attachment_id": 12309, "id": 61491, "time": "2004-08-03T12:45:31Z", "bug_id": 29124, "creation_time": "2004-08-03T12:45:31Z", "is_private": false, "text": "Created attachment 12309\ntest fo file"}, {"count": 16, "tags": [], "bug_id": 29124, "attachment_id": null, "text": "I just realized that in the patch there is a line commented out, while it \nshouldn't be. \n\nIt's in the LineLayoutManager, in the method getNextBreakPoss();\nthe code at the moment is:\n\n  ...\n  if (true) {\n  //if ((iBPcount = findBreakingPoints(currPar, context.getStackLimit().opt, \nmaxAdjustment)) == 0) {\n  ...\n\nThe commented line should be uncommented, and the \"if (true) {\" removed.\nAnyway, the program works all the same.\n\nSorry for the oversight!\n    Luca", "id": 61493, "time": "2004-08-03T13:15:58Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-08-03T13:15:58Z", "is_private": false}, {"count": 17, "tags": [], "creator": "glenmazza@yahoo.com", "attachment_id": null, "text": "Thanks, you will need to add the comments in this patch to the *code*, people \nwill not always have the benefit of this Bugzilla entry when looking at it.  \nThis is extremely important, as layout is very complex.\n\nAlso, is this Knuth algorithm copyrighted?  Where did you get it from?  It is \nrare that we have classes named after authors.\n\nGlen", "id": 61494, "time": "2004-08-03T13:32:14Z", "bug_id": 29124, "creation_time": "2004-08-03T13:32:14Z", "is_private": false}, {"count": 18, "tags": [], "creator": "glenmazza@yahoo.com", "attachment_id": null, "id": 61496, "time": "2004-08-03T14:42:55Z", "bug_id": 29124, "creation_time": "2004-08-03T14:42:55Z", "is_private": false, "text": "Thanks again for you work--we have very few who can work on layout.\n\nApparently, Dr. Knuth wouldn't seem to mind using his algorithms:\nhttp://lpf.ai.mit.edu/Patents/knuth-to-pto.txt\n\n"}, {"count": 19, "tags": [], "creator": "the.webmaestro@gmail.com", "attachment_id": null, "id": 61497, "time": "2004-08-03T15:00:20Z", "bug_id": 29124, "creation_time": "2004-08-03T15:00:20Z", "is_private": false, "text": "Luca, I also thank you for your time and commitment. Grazie mille^H^H^H^H^H un miliardo! I'm sure it \nis very much appreciated by the other COMMITTERs, as well as the throngs who will benefit from your \ntime and energy in the future. This is a very exciting addition to FOP, and I'm hoping it will help to \nsimplify the code in other ways as well. It's really nice to have a multitude of people who 'capish' (grok) \nthe inner workings of FOP.\n\nWeb Maestro Clay"}, {"count": 20, "tags": [], "text": "I'm going to attach the corrected patch, sorry again!\n\nKnuth's algorithm is described in the essay\n  D. E. Knuth and M. F. Plass, \"Breaking paragraphs into lines\"\nand I found it in the book\n  D. E. Knuth, \"Digital typography\", published by CSLI Publications\nUnfortunately, I couldn't find any link to an on-line version of this essay.\n\nAs regards the names of the classes, they were mainly devised to detect \nquickly the new files among the others! So, it's not a problem for me to \nchange them :-)\n\n    Luca", "attachment_id": null, "id": 61593, "creator": "lfurini@cs.unibo.it", "time": "2004-08-05T16:09:37Z", "bug_id": 29124, "creation_time": "2004-08-05T16:09:37Z", "is_private": false}, {"count": 21, "tags": [], "bug_id": 29124, "attachment_id": 12345, "text": "Created attachment 12345\npatch file (third edition, minor oversight fixed)", "id": 61594, "time": "2004-08-05T16:11:08Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-08-05T16:11:08Z", "is_private": false}, {"count": 22, "tags": [], "creator": "spepping@apache.org", "attachment_id": null, "id": 61774, "time": "2004-08-10T19:28:14Z", "bug_id": 29124, "creation_time": "2004-08-10T19:28:14Z", "is_private": false, "text": "Luca,\n\nYour patch applied cleanly to a checkout from CVS dated 1 August 2004,\nbut I get build errors. Could it be that differences to HyphContext\nare not included in the patch?\n\n    [javac] src/java/org/apache/fop/layoutmgr/LineLayoutManager.java:1081:\ncannot resolve symbol\n    [javac] symbol  : constructor HyphContext (int[],int)\n    [javac] location: class org.apache.fop.layoutmgr.HyphContext\n    [javac]             return new HyphContext(hyph.getHyphenationPoints(),\nsbChars.length());\n    [javac]                    ^\n    [javac] src/java/org/apache/fop/layoutmgr/TextLayoutManager.java:425: cannot\nresolve symbol\n    [javac] symbol  : method isWordEnd ()\n    [javac] location: class org.apache.fop.layoutmgr.HyphContext\n    [javac]             newIPD.add(MinOptMax.multiply(letterSpaceIPD,\n(hc.isWordEnd()?\n    [javac]                                                              ^\n    [javac] src/java/org/apache/fop/layoutmgr/TextLayoutManager.java:437: cannot\nresolve symbol\n    [javac] symbol  : method isWordEnd ()\n    [javac] location: class org.apache.fop.layoutmgr.HyphContext\n    [javac]                                                              \n(short)0, (short)(hc.isWordEnd()? (iStopIndex - iStartIndex - 1): (iStopIndex -\niStartIndex)),\n    [javac]                                                                    \n              ^\n    [javac] 3 errors\n\nSimon"}, {"count": 23, "tags": [], "bug_id": 29124, "attachment_id": null, "text": "I'm going to attach an updated patch, including HyphContext (which I forgot to \ninclude in the previous versions, sorry) and a few changes to fix a couple of \nbugs.\n\nI used linux's diff between the modified files and the original ones (updated \nyesterday, 11 August); for some reasons (maybe I use some wrong options) \nwincvs's diff did not include new files and did not use the latest version of \nthe original files, so finding lots of difference due to recent cvs commits.\n\nI hope I did not forget anything this time! :-)\n\n    Luca", "id": 61867, "time": "2004-08-12T08:23:13Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-08-12T08:23:13Z", "is_private": false}, {"count": 24, "tags": [], "bug_id": 29124, "attachment_id": 12400, "id": 61868, "time": "2004-08-12T08:25:01Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-08-12T08:25:01Z", "is_private": false, "text": "Created attachment 12400\npatch file (fourth edition, including HyphContext and bug fixes)"}, {"count": 25, "tags": [], "creator": "spepping@apache.org", "attachment_id": null, "id": 62051, "time": "2004-08-16T19:13:37Z", "bug_id": 29124, "creation_time": "2004-08-16T19:13:37Z", "is_private": false, "text": "Hi Luca,\n\nI have problems with the results for text-align=\"start\", \"end\" and\n\"center\" in your test FO file. The lines are too long, and the first\nline ends with a space. For start and end a paragraph is\ndropped. Herewith the area tree output for start/end and center:\n\n                  <block width=\"288000\" ipd=\"288000\" height=\"30800\"\nprops=\"border-start:(87,#ffff00,1000);break-after:8;border-end:(87,#ffff00,1000);border-after:(87,#ffff00,1000);border-before:(87,#ffff00,1000);break-before:8;\">\n                    <lineArea height=\"14400\">\n                      <text twsadjust=\"0\" tlsadjust=\"0\"\nprops=\"font-size:12000;font-family:F1;color:#000000;\">Poche corte parole molto\ncorte, in modo che tutto vada bene e non ci siano guai. Qualche </text>\n                    </lineArea>\n                    <lineArea height=\"14400\">\n                      <text twsadjust=\"0\" tlsadjust=\"0\"\nprops=\"font-size:12000;font-family:F1;color:#000000;\">tra parola per fare tre\nrighe.</text>\n                    </lineArea>\n                  </block>\n\n                  <block width=\"288000\" ipd=\"288000\" height=\"30800\"\nprops=\"border-start:(87,#0000ff,1000);break-after:8;border-end:(87,#0000ff,1000);border-after:(87,#0000ff,1000);border-before:(87,#0000ff,1000);break-before:8;\">\n                    <lineArea height=\"14400\">\n                      <text twsadjust=\"0\" tlsadjust=\"0\"\nprops=\"font-size:12000;font-family:F1;color:#000000;\">Poche corte parole molto\ncorte, in modo che tutto vada bene e non </text>\n                    </lineArea>\n                    <lineArea height=\"14400\">\n                      <text twsadjust=\"0\" tlsadjust=\"0\"\nprops=\"font-size:12000;font-family:F1;color:#000000;\">ci siano guai. Qualche\naltra paro</text>\n                      <text twsadjust=\"0\" tlsadjust=\"0\"\nprops=\"font-size:12000;font-family:F1;color:#000000;\">la per fare tre righe.</text>\n                    </lineArea>\n                  </block>\n\nRegards, Simon\n"}, {"count": 26, "tags": [], "bug_id": 29124, "attachment_id": null, "id": 62076, "time": "2004-08-17T13:51:09Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-08-17T13:51:09Z", "is_private": false, "text": "Oops, sorry again, Simon!\n\nIn the code I used when creating the last patch there was an error affecting \nthe TextLayoutManager.getChangedKnuthElements() method: two missing \"break\" \ninside a switch.\nDue to this error, the sequence of elements generated for each space (when \ntext-align is center, start or end) is wrong, and some text \"disappears\" (I \neven got IndexOutOfBounds exceptions).\nInserting these breaks is enough to make everything work:\n\n    ...\n    // ai refers to a space\n    switch (alignment) {\n        case CENTER : ...\n                      iReturnedIndex ++;\n                      break;             /* this was missing */\n        case START  : // fall through\n        case END    : ...\n                      iReturnedIndex ++;\n                      break;             /* this was missing */\n        case JUSTIFY: ...\n    }\n    ...\n\nAs you can see, in the last patch I changed the getNextKnuthElements() and \ngetChangedKnuthElements() return type, so they now return a sequence of \nelements instead of a single one.\nThis maybe reduces similarities between getNextKnuthElements() and \ngetNextBreakPoss(), but I think it makes the code simpler and easier to \nunderstand. Maybe it would be even better to make them return the whole \nsequence, so that these methods are called once per LM.\n\nNow I'm working on the newly-created LMs, so next patch (which I think will be \nready tomorrow) will apply to the latest code version and will include Finn \nBock's changes.\n\nRegards,\n    Luca"}, {"count": 27, "attachment_id": null, "bug_id": 29124, "text": "Hi again\n\nI have updated the patch, so it now includes the latest changes and the new \nLayoutManagers (CharacterLM and LeaderLM).\n\nI also fixed the text-align-last property, so it now works well even if  text-\nalign is not \"justify\".\n\nRegards,\n    Luca", "id": 62183, "time": "2004-08-19T16:33:56Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-08-19T16:33:56Z", "tags": [], "is_private": false}, {"count": 28, "tags": [], "bug_id": 29124, "attachment_id": 12488, "text": "Created attachment 12488\npatch - existing files (fifth edition)", "id": 62185, "time": "2004-08-19T16:36:01Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-08-19T16:36:01Z", "is_private": false}, {"count": 29, "tags": [], "bug_id": 29124, "attachment_id": 12489, "text": "Created attachment 12489\npatch - new files (fifth edition)", "id": 62186, "time": "2004-08-19T16:36:46Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-08-19T16:36:46Z", "is_private": false}, {"count": 30, "tags": [], "creator": "spepping@apache.org", "text": "The last patches do not apply without errors:\n- Last lines of patch files do not end with an newline.\n- Diff of area/inline/TextArea.java is incomplete.\n- Compile error in render/xml/XMLRenderer.java.\nI did manage to fix all problems.\n", "id": 62203, "time": "2004-08-19T19:28:38Z", "bug_id": 29124, "creation_time": "2004-08-19T19:28:38Z", "is_private": false, "attachment_id": null}, {"count": 31, "tags": [], "creator": "spepping@apache.org", "attachment_id": null, "id": 62204, "time": "2004-08-19T19:30:51Z", "bug_id": 29124, "creation_time": "2004-08-19T19:30:51Z", "is_private": false, "text": "Luca,\n\nThis is a good piece of work again. Nevertheless, I did succeed in\nbreaking the code. See the following test fo files.\n\nNested inline and other LMs: The output contains errors, see the\ncomments in the text. The errors occur when hyphenation is set to\ntrue.\n\nJustification: This is a test fo you submitted earlier. According to\nthe text in the file the second block should be hyphenated; it is\nnot. Should it still be hyphenated, or can this not be enforced with\nthe Knuth algorithm and text-align=\"start\"?\n\nNo breakpoints: An exception is thrown, at\nLineLayoutManager.getNextBreakPoss(LineLayoutManager.java:495). It\noccurs because breakpoints has size 0; the third call to\nfindBreakingPoints also returned 0. This should not be possible; the\nalgorithm should always return a breakpoint.\n\nA few small remarks:\n\nCan you move the following log messages to trace log level:\n[DEBUG] AbstractLayoutManager - - Word to hyphenate: We\n\nIn TextLM, returning null for a forced LF is not an idea that I like,\nbecause it overloads the null return value. Cannot you return an\nspecial Knuth element for LF? Alternatively, you could return null and\nprocess the paragraph. The second paragraph would then be produced and\nprocessed later.\n\nInlineStackingLM.getNextKnuthElements: 'if (lc.startsNewArea())' no\nlonger used?\n\nRegards, Simon\n"}, {"count": 32, "tags": [], "text": "Created attachment 12492\ntest fo: Nested inline and other LMs", "attachment_id": 12492, "bug_id": 29124, "id": 62205, "time": "2004-08-19T19:32:11Z", "creator": "spepping@apache.org", "creation_time": "2004-08-19T19:32:11Z", "is_private": false}, {"count": 33, "text": "Created attachment 12493\ntest fo: Justification", "bug_id": 29124, "is_private": false, "id": 62206, "time": "2004-08-19T19:32:58Z", "creator": "spepping@apache.org", "creation_time": "2004-08-19T19:32:58Z", "tags": [], "attachment_id": 12493}, {"count": 34, "tags": [], "creator": "spepping@apache.org", "text": "Created attachment 12494\ntest fo: No breakpoints", "id": 62207, "time": "2004-08-19T19:33:45Z", "bug_id": 29124, "creation_time": "2004-08-19T19:33:45Z", "is_private": false, "attachment_id": 12494}, {"count": 35, "text": "I'm going to attach still another version of the patch :-), corrected \naccording to Simon's comments.\n\nThe new files (Knuth*.java) are unchanged, so I don't attach them.\n\nRegards, \n    Luca", "bug_id": 29124, "attachment_id": null, "id": 62408, "time": "2004-08-24T15:24:26Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-08-24T15:24:26Z", "tags": [], "is_private": false}, {"count": 36, "tags": [], "creator": "lfurini@cs.unibo.it", "text": "Created attachment 12518\npatch to existing files (sixth edition)", "id": 62410, "time": "2004-08-24T15:25:53Z", "bug_id": 29124, "creation_time": "2004-08-24T15:25:53Z", "is_private": false, "attachment_id": 12518}, {"count": 37, "text": "Luca,\n\nThe build failed. That is probably due to this line in the patch:\n\ncvs server: I know nothing about layoutmgr/LeafNodeLaoyutManager.java\n\nSimon", "bug_id": 29124, "is_private": false, "id": 62607, "time": "2004-08-27T19:29:36Z", "creator": "spepping@apache.org", "creation_time": "2004-08-27T19:29:36Z", "tags": [], "attachment_id": null}, {"count": 38, "tags": [], "creator": "lfurini@cs.unibo.it", "attachment_id": null, "id": 62625, "time": "2004-08-28T10:06:48Z", "bug_id": 29124, "creation_time": "2004-08-28T10:06:48Z", "is_private": false, "text": "Sorry again, I didn't notice that cvs error.\n\nI'm going to attach the right (?) patch :-)\n(for some strange reasons wincvs' diff shows Simon's latest changes too, I \nhope this is not a problem ...)\n\n    Luca"}, {"count": 39, "text": "Created attachment 12560\npatch to existing files (version 7.1)", "bug_id": 29124, "attachment_id": 12560, "id": 62626, "time": "2004-08-28T10:09:09Z", "creator": "lfurini@cs.unibo.it", "creation_time": "2004-08-28T10:09:09Z", "tags": [], "is_private": false}, {"count": 40, "tags": [], "creator": "lfurini@cs.unibo.it", "attachment_id": null, "id": 62750, "time": "2004-08-30T10:27:22Z", "bug_id": 29124, "creation_time": "2004-08-30T10:27:22Z", "is_private": false, "text": "I applied the latest cvs commit and re-created the patch using linux's diff.\nThen I succeeded in applying the patch, compiling and running a few fo tests, \nso I'm (almost) sure this time it will work! :-)\n\nSorry again for the long delay\n    Luca"}, {"count": 41, "tags": [], "creator": "lfurini@cs.unibo.it", "attachment_id": 12566, "id": 62754, "time": "2004-08-30T10:29:02Z", "bug_id": 29124, "creation_time": "2004-08-30T10:29:02Z", "is_private": false, "text": "Created attachment 12566\npatch to existing files (tested)"}, {"count": 42, "tags": [], "bug_id": 29124, "attachment_id": null, "text": "Luca,\n\nThanks for the new patch. I could apply it without problems, and\ntesting it goes well.\n\nYou mention that you have not implemented the Knuth algorithm for\nContentLM. Would it be difficult to do that?\n\nFOP team,\n\nIf I would apply this patch, we would get the following regressions:\n\n- ContentLM does not show its content. A leader with\n  leader-pattern=\"use-content\" results in a blank area of the right\n  size.\n\n- When for an exceptionally difficult paragraph no set of breaking\n  points can be found, the whole paragraph is printed on a single\n  line. This occurs, for example, when in a narrow typesetting width\n  only a single word or a part of it fits in a line.\n\nI am working towards applying this patch despite these\nregressions, for these reasons:\n\n- This patch is a good piece of work, and a step forward for FOP's\n  layout.\n\n- It becomes increasingly hard to maintain this patch outside of CVS.\n\nPlease, speak up if you are against this.\n\nSimon\n\n", "id": 62860, "time": "2004-08-31T18:44:14Z", "creator": "spepping@apache.org", "creation_time": "2004-08-31T18:44:14Z", "is_private": false}, {"count": 43, "attachment_id": null, "bug_id": 29124, "is_private": false, "id": 62947, "time": "2004-09-02T04:23:52Z", "creator": "glenmazza@yahoo.com", "creation_time": "2004-09-02T04:23:52Z", "tags": [], "text": "<Q>\nI am working towards applying this patch despite these\nregressions, for these reasons:\n\n- This patch is a good piece of work, and a step forward for FOP's\n  layout.\n\n- It becomes increasingly hard to maintain this patch outside of CVS.\n\nPlease, speak up if you are against this.\n</Q>\n\nSimon, I have not had the time to be following this issue much so will be\ndeferring to your judgment.\n\nThanks,\nGlen"}, {"count": 44, "tags": [], "bug_id": 29124, "attachment_id": null, "text": "Luca,\n\nPatch applied. Thanks for this innovative and extensive contribution.\n\nStill to be done:\n\n- Resolve the regressions mentioned above.\n- I support the idea to create an InlineLayoutManager interface, which\n  extends LayoutManager.\n- This patch has made a lot of existing code redundant. Much of that\n  code is still present. To keep the code clean and intelligible, the\n  redundant pieces should be removed at some time by somebody.\n\nI have added a space after casts. See the style guidelines in the file\ndev/conventions.html of the FOP web site.\n\nI have a few remarks about the code. I leave it to you to follow these\nup or not, but I would like to see point 1 addressed:\n\n1. In TextLM:\n// linefeed; this can happen when linefeed-treatment=\"preserve\"\n// the linefeed character is the first one in textArray,\n// so we can just return a list with a penalty item\n\nIn LineLM:\nif (returnedList.size() > 1\n    || !(thisElement.isPenalty() && ((KnuthPenalty)thisElement).getP() ==\n-KnuthElement.INFINITE)) {\n} else {\n    // a list with a single penalty item whose value is -inf\n    // represents a preserved linefeed, wich forces a line break\n\nCan we be sure that U+A is always alone or the first item in a\ntextArray; does this not depend on the Parser, how it calls the SAX\ncharacters method?\n\n2. In InlineStackingLM.applyChanges: Falling over the end of\noldListIterator can be done better: treat only currLM != prevLM in the\nloop, treat !oldListIterator.hasNext() after the loop. Same for\ngetChangedKnuthElements? :\n\nwhile(oldListIterator.hasNext()) {\n    oldElement = (KnuthElement)oldListIterator.next();\n    currLM = oldElement.getLayoutManager();\n    // initialize prevLM\n    if (prevLM == null) {\n        prevLM = currLM;\n    }\n\n    if (currLM != prevLM) {\n        bSomethingChanged = prevLM.applyChanges(oldList.subList(fromIndex,\noldListIterator.previousIndex()))\n                            || bSomethingChanged;\n        prevLM = currLM;\n        fromIndex = oldListIterator.previousIndex();\n    }\n}\nbSomethingChanged = currLM.applyChanges(oldList.subList(fromIndex, oldList.size()))\n                    || bSomethingChanged;\n\nPossible cases, after the loop:\nxxyy or yy, xx done\nprevLM = currLM = y\nfromIndex = last done (2 and 0)\n\n3. In InlineStackingLM: Unnecessary differences between treatment of\nreturnedList and returnList in getNextKnuthElements and\ngetChangedKnuthElements. In getChangedKnuthElements it is not\nnecessary to have a separate returnedList and returnList.\n\n4. Break up long methods in LineLM: findHyphenationPoints,\ngetNextBreakPoss, considerLegalBreak (?), findBreakingPoints (?).\n\nRegards, Simon\n", "id": 63096, "time": "2004-09-05T18:21:07Z", "creator": "spepping@apache.org", "creation_time": "2004-09-05T18:21:07Z", "is_private": false}, {"count": 45, "tags": [], "bug_id": 29124, "attachment_id": null, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "id": 155543, "time": "2012-04-01T06:27:15Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:27:15Z", "is_private": false}]