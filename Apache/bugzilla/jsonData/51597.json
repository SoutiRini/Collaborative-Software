[{"count": 0, "attachment_id": 27339, "bug_id": 51597, "is_private": false, "id": 148320, "time": "2011-08-01T18:02:19Z", "creator": "anurag08agarwal@gmail.com", "creation_time": "2011-08-01T18:02:19Z", "tags": [], "text": "Created attachment 27339\nLog4j-JDBC-Appender-Issue.doc\n\nIn JDBCAppender.java there is method execute(String sql). This method is used to insert the SQL into DB, but in case if anything wrong happen while inserting, then it throws one SQLException and closing only SQL statement but connection is not closed, and so Appender thread is still alive.\n\nNow as the execute method is called via flushBuffer() method, this method is calling execute and then event is added to removes list, but if execute method had thrown the SQLException then the event is not added to removes list and removes list is growing continuously. And that is in the buffer tile next call of System.gc(), so this will make the next threads to go into hung state.\n\nCode Snippet having issue is attached.\nA solution to this is to have following implementation:\n\nprotected void execute(String sql) throws SQLException {\nConnection con = null;\nStatement stmt = null;\ntry {\n\tcon = getConnection();\n          stmt = con.createStatement();\n             stmt.executeUpdate(sql);\n     } catch (SQLException e) {\n\t\tthrow e; \n         \n      }finally{\n\ttry{\n\tif(null != stmt)  \n\t\tstmt.close();\n         closeConnection(con);\n\n\t} catch (SQLException e){\n\t\n     \t}\n\t\t\n     }\n}\n\npublic void flushBuffer() {\n//Do the actual logging\nremoves.ensureCapacity(buffer.size());\nfor (Iterator i = buffer.iterator(); i.hasNext();) {\ntry {\n  LoggingEvent logEvent = (LoggingEvent)i.next();\n  String sql = getLogStatement(logEvent);\n  removes.add(logEvent);\n  execute(sql);\n  }catch (SQLException e) {\n  \terrorHandler.error(\"Failed to excute sql\", e,\n\t\tErrorCode.FLUSH_FAILURE);\n  }\n }\n// remove from the buffer any events that were reported\nbuffer.removeAll(removes);\n// clear the buffer of reported events\nremoves.clear();\n}"}, {"count": 1, "tags": [], "text": "fixed with rv1231387\n\nThanks for the report!", "is_private": false, "bug_id": 51597, "id": 152766, "time": "2012-01-13T23:17:15Z", "creator": "grobmeier@gmail.com", "creation_time": "2012-01-13T23:17:15Z", "attachment_id": null}]