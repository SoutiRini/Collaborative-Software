[{"count": 0, "tags": [], "text": "I have a webapp where I've created a \"SecurityManager\" class of my own, which\nhas nothing to do with the Catalina SecurityManager. Trying to use this class\nresults in a JasperException \"SecurityManager cannot be resolved\". Using the\nexact same code, but with a different class name does not produce an error. \n\nSteps to Reproduce:\n\nCreate class called SecurityManager.java as something\ne.g.\npackage test;\npublic class SecurityManager {\n  public static int getInt() {\n    return 1;\n  }\n}\n\nCreate an identical copy as SecurityManagerX.java\n\nCompile and call from a simple jsp: \n<%@ page import=\"test.*\" %>\n<html><head><title>Testpage</title></head>\n<body>\n<%=SecurityManager.getInt()%>\n</body>\n</html>\n\nNotice how error does not appear if the SecurityManagerX class is called instead. \n\nImportant: Also notice that after the error has appeared, it is possible to\nsuccessfully call the SecurityManager.getInt() method for about 4-5 seconds (by\nreloading the page) before the error appears again (!). \n\nActual Results:\norg.apache.jasper.JasperException: Unable to compile class for JSP\n\nAn error occurred at line: 4 in the jsp file: /test.jsp\nGenerated servlet error:\nSecurityManager cannot be resolved\n\norg.apache.jasper.compiler.DefaultErrorHandler.javacError(DefaultErrorHandler.java:84)\n\torg.apache.jasper.compiler.ErrorDispatcher.javacError(ErrorDispatcher.java:328)\n\torg.apache.jasper.compiler.JDTCompiler.generateClass(JDTCompiler.java:397)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:288)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:267)\n\torg.apache.jasper.compiler.Compiler.compile(Compiler.java:255)\n\torg.apache.jasper.JspCompilationContext.compile(JspCompilationContext.java:556)\n\torg.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:296)\n\torg.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:295)\n\torg.apache.jasper.servlet.JspServlet.service(JspServlet.java:245)\n\tjavax.servlet.http.HttpServlet.service(HttpServlet.java:802)\n\n\nBuild Date & Platform:\nTomcat 5.5.7 on Win2K3. \nDefault Catalins security policy. \n\nPerhaps this isn't a bug, but some security measure wrt the Catalina\nSecurityManager class. In that case it is strange that you may execute a user\ncreated SecurityManager class for a short period of times between subsequent\nerrors.", "is_private": false, "id": 71323, "creator": "apachebugz.20.jba@spamgourmet.com", "time": "2005-02-21T21:40:29Z", "bug_id": 33680, "creation_time": "2005-02-21T21:40:29Z", "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 33680, "text": "I'm a bit confused by this report.  First, I'm not sure what you mean by \"the\nCatalina SecurityManager\" since we use the standard one, not a custom one, and\nthen only if directed by the user, not by default.\n\nSecond, if you look at the jasper code, it's pretty easy to see it doesn't look\nfor anything special in the security manager.  There's no hard-coded class name,\nno casting to anything, just the basic java.lang.SecurityManager usage.\n\nPlease post a WAR we can use to reproduce your findings.", "count": 1, "id": 72825, "time": "2005-03-25T04:08:52Z", "creator": "yoavs@computer.org", "creation_time": "2005-03-25T04:08:52Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 33680, "attachment_id": null, "is_private": false, "id": 72997, "time": "2005-03-29T17:24:20Z", "creator": "remm@apache.org", "creation_time": "2005-03-29T17:24:20Z", "text": "You'll have to use the fully qualified name for your class. Generally, it's not\na very good idea to use classnames which are used in java.lang.*."}]