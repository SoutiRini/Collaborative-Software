[{"count": 0, "tags": [], "creator": "msrbugzilla@gmail.com", "attachment_id": null, "is_private": false, "id": 154143, "time": "2012-02-25T15:04:31Z", "bug_id": 52770, "creation_time": "2012-02-25T15:04:31Z", "text": "This is Ken Cheung, a Computer Science M.Phil. student. I observed some\ncode clones in Tomcat and found inconsistent code:\n\n/tomcat/trunk/java/org/apache/tomcat/util/net/NioBlockingSelector.java\n\n103\t                try {\n104\t                    if ( att.getWriteLatch()==null || att.getWriteLatch().getCount()==0) att.startWriteLatch(1);\n105\t                    poller.add(att,SelectionKey.OP_WRITE,reference);\n106\t                    att.awaitWriteLatch(writeTimeout,TimeUnit.MILLISECONDS);\n107\t                }catch (InterruptedException ignore) {\n108\t                    Thread.interrupted();\n109\t                }\n110\t                if ( att.getWriteLatch()!=null && att.getWriteLatch().getCount()> 0) {\n111\t                    //we got interrupted, but we haven't received notification from the poller.\n112\t                    keycount = 0;\n113\t                }else {\n114\t                    //latch countdown has happened\n115\t                    keycount = 1;\n116\t                    att.resetWriteLatch();\n117\t                }\n118\t\n119\t                if (writeTimeout > 0 && (keycount == 0))\n120\t                    timedout = (System.currentTimeMillis() - time) >= writeTimeout;\n\n/tomcat/trunk/java/org/apache/tomcat/util/net/NioBlockingSelector.java\n\n164\t                try {\n165\t                    if ( att.getReadLatch()==null || att.getReadLatch().getCount()==0) att.startReadLatch(1);\n166\t                    poller.add(att,SelectionKey.OP_READ, reference);\n167\t                    if (readTimeout < 0) {\n168\t                        att.awaitReadLatch(Long.MAX_VALUE, TimeUnit.MILLISECONDS);\n169\t                    } else {\n170\t                        att.awaitReadLatch(readTimeout, TimeUnit.MILLISECONDS);\n171\t                    }\n172\t                }catch (InterruptedException ignore) {\n173\t                    Thread.interrupted();\n174\t                }\n175\t                if ( att.getReadLatch()!=null && att.getReadLatch().getCount()> 0) {\n176\t                    //we got interrupted, but we haven't received notification from the poller.\n177\t                    keycount = 0;\n178\t                }else {\n179\t                    //latch countdown has happened\n180\t                    keycount = 1;\n181\t                    att.resetReadLatch();\n182\t                }\n183\t                if (readTimeout >= 0 && (keycount == 0))\n184\t                    timedout = (System.currentTimeMillis() - time) >= readTimeout;\n\nQuick description of the inconsistency\nTwo code snippets are very similar code, but as you see, the first code does not check \"if (readTimeout < 0)\" while the second code has the checker.\n\nWe thought it could be a potential bug or inconsistency. Hope this helps."}, {"count": 1, "tags": [], "text": "Looks like infinite timeouts (pretty much never used) won't work for writes. It is a bug but one that very few folks - if anyone - are ever going to trip over.", "attachment_id": null, "bug_id": 52770, "id": 154157, "time": "2012-02-25T23:57:21Z", "creator": "markt@apache.org", "creation_time": "2012-02-25T23:57:21Z", "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 52770, "text": "Fixed in trunk and 7.0.x and will be included in 7.0.27 onwards.", "id": 154639, "time": "2012-03-07T14:54:11Z", "creator": "markt@apache.org", "creation_time": "2012-03-07T14:54:11Z", "tags": [], "is_private": false}]