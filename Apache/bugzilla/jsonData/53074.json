[{"count": 0, "tags": [], "bug_id": 53074, "text": "The default connectTimeout value is set to 20000 and cause issue with WebSocket connection\n\njava.net.SocketTimeoutException: Read timed out\n    at java.net.SocketInputStream.socketRead0(Native Method)\n    at java.net.SocketInputStream.read(SocketInputStream.java:129)\n    at org.apache.coyote.http11.upgrade.UpgradeBioProcessor.read(UpgradeBioProcessor.java:75)\n    at org.apache.catalina.websocket.WsFrame.nextFrame(WsFrame.java:213)\n    at org.apache.catalina.websocket.WsInputStream.nextFrame(WsInputStream.java:68)\n    at org.apache.catalina.websocket.StreamInbound.onData(StreamInbound.java:143)\n    at org.apache.coyote.http11.upgrade.UpgradeProcessor.upgradeDispatch(UpgradeProcessor.java:83)\n    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:563)\n    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:307)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n    at java.lang.Thread.run(Thread.java:680)\n\nIncreasing the value delay the issue (but the timeout should not occurs)", "id": 158028, "time": "2012-04-13T13:45:11Z", "creator": "jfarcand@apache.org", "creation_time": "2012-04-13T13:45:11Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 53074, "text": "Must we set the timeout to unlimited, or you thing it is better that client can overwrite it?", "id": 158074, "time": "2012-04-14T12:31:18Z", "creator": "pr@objektpark.de", "creation_time": "2012-04-14T12:31:18Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 53074, "attachment_id": null, "id": 158075, "time": "2012-04-14T13:16:16Z", "creator": "jfarcand@apache.org", "creation_time": "2012-04-14T13:16:16Z", "is_private": false, "text": "Salut,\n\nI think it should be unlimited, but an idle timeout setting would be useful (I do support idle timeout with Atmosphere, but I think Tomcat could support the same as well).\n\nIf you want to test using Atmosphere, download atmosphere-spring-websocket.war from search.maven.org (remove the -0.9 in the name) and deploy. After 20 seconds the app will stop working and Chrome will display a protocol exception. Ping me directly if that can help.\n\nThanks!\n\n-- Jeanfrancois"}, {"count": 3, "tags": [], "bug_id": 53074, "attachment_id": null, "id": 159059, "time": "2012-05-15T08:18:59Z", "creator": "markt@apache.org", "creation_time": "2012-05-15T08:18:59Z", "is_private": false, "text": "I've been thinking about this and I think the following is the way to go.\n\n1. Make the connection timeout infinite.\n2. Add an idle timeout to the WebSocket implementation (defaults to infinite) that times out if there is no input or output after a predefined amount of time. This should be configurable per connection.\n3. Add a \"ping every n milliseconds\" feature (disabled by default) to save applications re-inventing the wheel.\n\nThoughts?\n\nAs an aside, 1) will be tricky with the APR/native connector. That needs some separate work. I'll start a thread on that on the dev list."}, {"count": 4, "tags": [], "creator": "jfarcand@apache.org", "attachment_id": null, "text": "Hi Mark,\n\n+1 for making the connection timeout infinite. +1 also to add support for websocket timeout property/attribute (will be really useful). \n\nNot sure for the ping ... some applications don't need ping or that extra traffic on the wire. At least this should be configurable.\n\nThanks for the work.\n\n-- Jeanfrancois", "id": 159066, "time": "2012-05-15T14:12:59Z", "bug_id": 53074, "creation_time": "2012-05-15T14:12:59Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 53074, "text": "Hi,\n\n+1 here for the option of configuring the timeout. My application requires an infinite connection which will be closed when required. I was negatively suprised to see tomcat has such a short timeout option.\n\nplease add an option to configure this at the very least.\n\n\nmeanwhile is there a workaround other than constant client reconnection?\n\nthanks", "id": 159182, "time": "2012-05-20T13:43:05Z", "creator": "jdboudreault@gmail.com", "creation_time": "2012-05-20T13:43:05Z", "is_private": false, "attachment_id": null}, {"count": 6, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Just a short progress update.\n\nI have committed a set of changes to the APR/native connector to permit per socket timeouts. It works with my simple tests but needs more testing and review by some proper C coders (which I am not).\n\nI also have a first draft of the changes to trunk to enable infinite timeouts for WebSocket connections. That also needs some testing. I should have something to commit in the next couple of days.", "id": 159265, "time": "2012-05-23T21:15:58Z", "bug_id": 53074, "creation_time": "2012-05-23T21:15:58Z", "is_private": false}, {"attachment_id": null, "tags": [], "creator": "markt@apache.org", "text": "Fixed in trunk. Will be back-ported to 7.0.x once there has been a new release of the APR/native connector.", "count": 7, "id": 159325, "time": "2012-05-25T16:40:22Z", "bug_id": 53074, "creation_time": "2012-05-25T16:40:22Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 53074, "text": "Ok thanks! I will go ahead and test using trunk. Will report if I see any issues.", "id": 159326, "time": "2012-05-25T16:45:25Z", "creator": "jfarcand@apache.org", "creation_time": "2012-05-25T16:45:25Z", "is_private": false, "attachment_id": null}, {"count": 9, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "text": "Fixed in trunk and 7.0.x and will be included in 7.0.28 onwards.", "id": 159966, "time": "2012-06-13T16:07:40Z", "bug_id": 53074, "creation_time": "2012-06-13T16:07:40Z", "is_private": false}]