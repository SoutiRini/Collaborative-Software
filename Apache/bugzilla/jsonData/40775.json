[{"count": 0, "tags": [], "text": "After enabling the single sign-on valve, I noticed unexpected logout behavior.  \nHere are steps to reproduce: \n\n1. Using form auth, log into webapp1 (by attempting to access a protected \nresource that does not exist)\n2. Attempt to access a protected resource in webapp2 is granted (meaning you \nare logged into 2 by logging into 1 as we expect).\n3. Invalidating the session from webapp2 does not log you out.\n\n\nIt appears that you are able to sign-on and be authorized by other webapps \nwithout accessing an existing protected resource but you will not be able to \nlogout from those webapps.  I can provide simple sample webapps to demonstrate \nthis behavior.  This was discovered in an embedded Tomcat in JBoss and they \nexplained the issue as following:\n\n\"What you're seeing is due to a subtlety in your test combining with a subtlety \nin how Tomcat SSO invalidation works.\n\nThe reason you can invalidate an SSO and not just a single session by calling \nsession.invalidate() is because Tomcat provides a reference to the session to \nthe SSO valve.  The valve registers as a listener on the session and thus gets \na callback when you call session.invalidate().  It then uses that callback to \ninvalidate the SSO.\n\nThe problem is the way Tomcat provides the reference to the session to the SSO \nvalve.  This only happens if you access a protected resource.  If you look at \nthe steps in your test, you'll notice you never access a protected resource in \ntestapp2.  Thus the SSO valve doesn't know about your testapp2 session.  When \nyou invalidate the session, the SSO doesn't get invalidated. \"\n\nI expect that if you are considered logged into a webapp you should also be \nable to log out from that same web app.  Please let me know your thoughts.\n\nThanks\n\nMark", "is_private": false, "id": 94892, "creator": "mark.oliveira@gmail.com", "time": "2006-10-17T08:52:53Z", "bug_id": 40775, "creation_time": "2006-10-17T08:52:53Z", "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 40775, "attachment_id": null, "id": 95748, "time": "2006-11-12T15:57:43Z", "creator": "markt@apache.org", "creation_time": "2006-11-12T15:57:43Z", "is_private": false, "text": "I have tested the following sequence of events using the latest source from SVN.\n- set up 2 webapps, A & B, both using FORM authentication\n- enabled SSO\n- request non-existant, protected resource from A -> login.jsp\n- enter user/pwd & submit -> 404\n- request existing, protected resource from B -> resource shown, no login prompt\n- logout of B\n- request existing, protected resource from A -> login.jsp\n\nAs I understand it, in the last step you saw the protected resource.\n\nI am going to resolve this as works for me. If you still see this issue please\nrun you test cases with the latest stable version (5.5.20 at the the time of\nwriting this comment). If you still see the same problem, please re-open this\nissue, attach you test case and I will investigate further."}, {"count": 2, "tags": [], "bug_id": 40775, "attachment_id": 19575, "text": "Created attachment 19575\nContains test wars and a copy of server.xml containing the SSO valve declaration.", "id": 99275, "time": "2007-02-12T07:09:55Z", "creator": "mark.oliveira@gmail.com", "creation_time": "2007-02-12T07:09:55Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 40775, "text": "Hi,\n\nWe have recently upgraded to Tomcat 5.5.20 so I have revisited this bug and\nnoticed an error in my test case.  The following steps should be used to\nreproduce this behavior:\n\n1. Using form auth, log into webapp1 (by attempting to access a protected \nresource that does not exist)\n2. Access a NONprotected resource in webapp2 (in my test I use a call to\nrequest.getRemoteUser() in this resource to verify that I am logged in).\n3. Invalidating the session from webapp2 does not log you out.\n\nAs you can see, webapp2 knows about the remoteUser and if you were to attempt to\naccess a protected resource access would be granted. Considering this behavior\nit appears that you are in fact logged in to webapp2 by logging into webapp1 (as\nexpected).  The problem here is that if you are logged in then you should also\nbe able to log out, but this is not possible until you actually access a\nprotected resource.  I have verified that this behavior is present in 5.5.20 and\nhave provided test wars.  Please have a look.\n\n\nThanks,\n\nMark", "id": 99276, "time": "2007-02-12T07:11:17Z", "creator": "mark.oliveira@gmail.com", "creation_time": "2007-02-12T07:11:17Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "pr@objektpark.de", "attachment_id": null, "text": "I think, that a app session only must register to SSO cache as user really login! \nThe problem is: Why you got a RemoteUser and UserPrincipal at your testapp2, without login?\nCurrently SingleSignOn valve set  this information  without a auth check. That looks strange for me!", "id": 112570, "time": "2008-01-07T00:57:37Z", "bug_id": 40775, "creation_time": "2008-01-07T00:57:37Z", "is_private": false}, {"count": 5, "tags": [], "text": "Somebody resolve this problem ?\n\nI use jboss 4.0.5 configured with tomcat 55.\n\nE have two war's, one war is used for login (unprotected) and the other war is my application that is protected.\n\nWhen my session timeout expires in application war, sometimes it's no go to\nform login in login war.\n\nI guess that it is can be related for the discussion opened here.\n\nSomebody resolved this problem ? \n\nThank you.\n\n\n\n\n", "is_private": false, "id": 115289, "creation_time": "2008-04-03T06:27:21Z", "time": "2008-04-03T06:27:21Z", "creator": "masilva@cpqd.com.br", "bug_id": 40775, "attachment_id": null}, {"count": 6, "tags": [], "bug_id": 40775, "attachment_id": null, "text": "Sorry it has taken so long to get back to this.\n\nFor the original issue, setting requireReauthentication=\"true\" on the valve should give consistent behaviour. You won't be logged in to app 2 (and getRemoteUser() etc will return null) until you access a protected resource. At that point a logout in app2 will logout app 1.\n\nThis also addresses Peter's concerns in comment #4.\n\nFor the issue described in comment #5, the SSO valve is working as designed. One session timing out only invalidates that session. Associated SSO sessions are not affected.", "id": 128929, "time": "2009-07-16T16:23:33Z", "creator": "markt@apache.org", "creation_time": "2009-07-16T16:23:33Z", "is_private": false}]