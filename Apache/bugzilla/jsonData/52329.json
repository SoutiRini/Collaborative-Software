[{"count": 0, "tags": [], "bug_id": 52329, "text": "I have Tomcat 7 embedded in a application in which the jndi protocol is already registered.\n(see URL.setURLStreamHandlerFactory(URLStreamHandlerFactory fac) )\n\nSo, Tomcat fails to register his own and turns to protocol file:/ to lookup resources.\n\nThe issue comes when there is a multiple level context (example: /test/myapp). Tomcat expands the war under the directory webapps such as: <tomcat_dir>/webapps/test#myapp/\n\nWhen Tomcat looks up for resources, the url is malformed:\n<tomat_dir>/webapps/test#myapp/WEB-INF/...\nthe part #myapp/WEB-INF/... is considered as a fragment\n\nStackTrace:\njava.lang.IllegalArgumentException: URI has a fragment component\n\tat java.io.File.<init>(Unknown Source)\n\tat org.apache.catalina.startup.ContextConfig.processAnnotationsUrl(ContextConfig.java:1813)\n\tat org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1203)\n\tat org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:828)\n\tat org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:302)\n\tat org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)\n\tat org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:90)\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5148)\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n\n\n\nMy solution was to replace the FWD_SLASH_REPLACEMENT (#) by '~' in the org.apache.catalina.util.ContextName class in catalina.jar", "id": 152158, "attachment_id": null, "creator": "ferdinand_dosser@yahoo.co.uk", "creation_time": "2011-12-14T11:16:53Z", "time": "2011-12-14T11:16:53Z", "is_private": false}, {"count": 1, "text": "The choice of '#' was a deliberate one as it can't legitimately appear in a context path. '~' can so the work-around proposed can't be used.\n\nTomcat uses the jndi protocol internally. There is no easy way to avoid that.\n\nThere was some discussion of ripping out the DirContext abstraction for resources (which would remove the need for Tomcat to use the jndi protocol) but it has not been investigated.\n\nSince you have a workaround that works for use, the bets option is for you to carry on using it. It you wnated to look at removing the DirContext abstraction that would be great but it is likely to be a lot of work (and may not even be possible).", "creator": "markt@apache.org", "is_private": false, "id": 152173, "time": "2011-12-14T22:04:10Z", "bug_id": 52329, "creation_time": "2011-12-14T22:04:10Z", "tags": [], "attachment_id": null}]