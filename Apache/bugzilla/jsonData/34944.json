[{"count": 0, "tags": [], "creator": "eladner@goldinc.com", "attachment_id": null, "id": 74975, "time": "2005-05-17T23:02:50Z", "bug_id": 34944, "creation_time": "2005-05-17T23:02:50Z", "is_private": false, "text": "Adds a test case to TestFormulaParser to parse 3D refs in formulas."}, {"count": 1, "tags": [], "creator": "eladner@goldinc.com", "text": "Created attachment 15062\nTest case to test parsing 3D refs in formulas.", "id": 74976, "time": "2005-05-17T23:03:35Z", "bug_id": 34944, "creation_time": "2005-05-17T23:03:35Z", "is_private": false, "attachment_id": 15062}, {"count": 2, "tags": [], "bug_id": 34944, "attachment_id": null, "text": "*** Bug 26483 has been marked as a duplicate of this bug. ***", "id": 75066, "time": "2005-05-19T15:33:45Z", "creator": "avik@apache.org", "creation_time": "2005-05-19T15:33:45Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 34944, "text": "OK, from the bug, it looks to me that ...\n\nthis works\ncell.setCellFormula(\"A!A1+A!B1\"); //cell is in sheet B\n\nbut this doesnt\nFormulaParser fp = new FormulaParser(\"A!A1+A!B1\", null);\nfp.parse();\n\nbut should it matter? HSSFCell should do the right thing internally. Why would\nyou want to direcly access fp from outside?\n\nBut Eric, maybe I dont understand your use case. In particular, is the above all\nyou are trying to achieve in bug 21923?  I havent answered your question there\nsince I dont think I have understood this yet. \n\n", "id": 75067, "time": "2005-05-19T15:41:06Z", "creator": "avik@apache.org", "creation_time": "2005-05-19T15:41:06Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "creator": "eladner@goldinc.com", "attachment_id": null, "id": 75099, "time": "2005-05-20T06:03:39Z", "bug_id": 34944, "creation_time": "2005-05-20T06:03:39Z", "is_private": false, "text": "(In reply to comment #3)\n> \n> Why would you want to direcly access fp from outside?\n\nI've got a spread sheet that over time has gotten so complex that nobody really\nunderstands how it works any more.  It's six sheets and each sheet has hundreds\nof columns of data, and each sheet combines data from the previous sheet in\nlinear ways to form aggregated and scaled data.  \n\nThe end result with the formula parser was to take the a formula on page one and\nunwind the calculations (parse the formula, go grab the cells it references, if\nthey are formulas, parse them, grab the cells they reference, etc.) until I get\na list of the source data (and the COMPLETE calculation as one forumla) that's\ninvolved in each calculation on the first page.\n\nThat was the problem I was trying to solve.\n\nSeemed logical enough at the time."}, {"count": 5, "tags": [], "text": "Ok, I get your usecase, and POI as it stands does not support this. And I am not\nsure if I like any of the suggested solutions. \n\nI'd thought of something like this a long time ago, and my preferred option was\nto actually build a high level api for the formulas, so a method in HSSFCell\nthat would return the parsed formula, as an array of, for eg, CellReference\nobjects and HSSFFormulaOp(sic) objects. You could then traverse the tree. \n\nActually, with Amol's work, what I call the HSSFFormulaOp, could very well be\nhis Eval objects. It could all be tied up nicely. ", "attachment_id": null, "bug_id": 34944, "id": 75127, "time": "2005-05-20T13:33:28Z", "creator": "avik@apache.org", "creation_time": "2005-05-20T13:33:28Z", "is_private": false}, {"count": 6, "attachment_id": null, "bug_id": 34944, "text": "Works for me.  The only thing I really need is access to the Ptg array that the\nformula parser returns, manipulate it, and send it to\nFormulaParser.toFormulaString().  Doing that through the cell (along with stuff\nlike getCellFormula()) makes sense to me.  Not sure how you'd implement the ptg\n-> string part though but cell -> pgts seems easy.", "id": 75130, "time": "2005-05-20T13:42:03Z", "creator": "eladner@goldinc.com", "creation_time": "2005-05-20T13:42:03Z", "tags": [], "is_private": false}, {"count": 7, "tags": [], "creator": "apache@gagravarr.org", "text": "I believe FormulaParser now correctly handles 3d refs, so this patch isn't needed. Please re-open the bug if this is incorrect", "id": 118520, "time": "2008-07-10T16:04:16Z", "bug_id": 34944, "creation_time": "2008-07-10T16:04:16Z", "is_private": false, "attachment_id": null}]