[{"count": 0, "tags": [], "text": "A usual extension to the syslog protocol allows for messages being sent to a Facility (i.e Local0-7, Auth, ftp, ...) to also contain an Identity. \n\nThe Identity enables for the messages to be differentiated at a later stage and written to different files or persisted in different databases, even if they originate from the same facility.\n\nThe Identity is declared in the appenders configuration, alongside the facility.\n\nThis change would require for the configuration to contain a parameter i.e. Identity and for that parameter to be added in the appropriate place in the udp packet that is sent.", "attachment_id": null, "id": 120954, "creator": "jamiguet@gmail.com", "time": "2008-09-25T01:53:43Z", "bug_id": 45886, "creation_time": "2008-09-25T01:53:43Z", "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 45886, "is_private": false, "id": 120958, "time": "2008-09-25T02:30:34Z", "creator": "carnold@apache.org", "creation_time": "2008-09-25T02:30:34Z", "tags": [], "text": "A reference would be great for this.  I don't think it is in the IETF RFC's and a web search for \"syslog identity\" didn't come up with any obvious matches.\n\nIs the identity transmitted in the message packet?  If so, could the desired objective be accomplished by adding the identity into a pattern layout?"}, {"count": 2, "attachment_id": null, "bug_id": 45886, "is_private": false, "id": 120959, "time": "2008-09-25T03:07:00Z", "creator": "jamiguet@gmail.com", "creation_time": "2008-09-25T03:07:00Z", "tags": [], "text": "The idea is to have it behave like its php counterpart. \nhttp://nl2.php.net/manual/en/function.openlog.php\nAnd then calling \nhttp://nl2.php.net/manual/en/function.syslog.php\n\n\nThe Identity indeed is transmitted as part of the packet so I will try to configure the pattern to see if the expected result occurs down the line on rsyslog. Also the facility printing will need to be taken out.\n\nI will update the bug with the info.\n\n"}, {"count": 3, "tags": [], "text": "Enhancement not needed, same result can be obtained by configuration.\n\nThe solution proposed to append the identity to the pattern and then switch off the facility logging works.\n\nA sample configuration then is.\n\n\n\n# Syslog is set to be a SyslogAppender.\nlog4j.appender.Syslog=org.apache.log4j.net.SyslogAppender\n\n# Syslog uses PatternLayout.\nlog4j.appender.Syslog.layout=org.apache.log4j.PatternLayout\nlog4j.appender.Syslog.layout.ConversionPattern=<Identity>: %-5p %c{2} [%t,%M:%L] %m%n\n# Set Syslog properties.\nlog4j.appender.Syslog.SyslogHost=localhost\nlog4j.appender.Syslog.Facility=LOCAL3\n#Facility printing must be set to off to avoid the Identity from ending up in the message body.\nlog4j.appender.Syslog.FacilityPrinting=false\n\n\n\n", "attachment_id": null, "id": 120960, "creator": "jamiguet@gmail.com", "time": "2008-09-25T03:22:01Z", "bug_id": 45886, "creation_time": "2008-09-25T03:22:01Z", "is_private": false}, {"count": 4, "tags": [], "creator": "mathieu.rozieres@gmail.com", "attachment_id": null, "text": "Using Pattern conversion to add 'tag:' at the start of syslog message don't really works. In fact, this works for message not too long. The syslog appender slice the message sent to the server and thus, while using the Pattern conversion, the 'tag' or 'identity' is only present on the 1st message and the following ones have an empty 'tag/identifty'! Here is a example scenario :\n\n\nLog a large message ( for example 1024 x 10 'A' chars ) with PatternConversion set to something really simple: \"tag: %m%n\" for example. The result on the syslog server will be :\n\n1st Message  :        Jan 29 00:00:00 127.0.0.1 tag: AAAAAAAAAAA[...]AAA...\n2nd Message  :        Jan 29 00:00:00 127.0.0.1 ...AAAAAAAAAAA[...]AAA...\n[...]                 Jan 29 00:00:00 127.0.0.1 ...AAAAAAAAAAA[...]AAA...\n10th Message :        Jan 29 00:00:00 127.0.0.1 ...AAAAAAAAAAA[...]AAA\n\nIn fact, you cannont totally rely on the PatternConversion to tag your syslog message if you can't assert that the log message length < syslog message slice length.\n\nIn conclusion, i think that this enhancement is needed for \"very long message\" logging scenario.\n\n+1 for this evol\n\n", "id": 124459, "time": "2009-01-29T02:43:34Z", "bug_id": 45886, "creation_time": "2009-01-29T02:43:34Z", "is_private": false}, {"count": 5, "tags": [], "text": "I've read carefully the SyslogAppender source and found that the TAG is partilly implemented in Syslog Appender. The FacilityName and the FailictyPrinting mecanism is in fact a implementation of the TAG mecanism that is limited to what can be call \"Facilities tag\". In fact, in the Syslog protocol the tag can be either one of \"mail,auth,user,local6[....]\" or a user choosen string. I think that the evolution requested can be implemented by diverting the current FacilityPrinting switch to something called TagPrinting and letting the end-user define a TagLabel parameter.\n\nRegards,\n\nMathieu", "is_private": false, "id": 124469, "creator": "mathieu.rozieres@gmail.com", "time": "2009-01-29T06:08:49Z", "bug_id": 45886, "creation_time": "2009-01-29T06:08:49Z", "attachment_id": null}]