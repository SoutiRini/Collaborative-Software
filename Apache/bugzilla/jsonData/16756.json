[{"count": 0, "tags": [], "creator": "APreston@PrestonSoftware.co.uk", "is_private": false, "id": 30631, "attachment_id": null, "bug_id": 16756, "creation_time": "2003-02-04T12:07:33Z", "time": "2003-02-04T12:07:33Z", "text": "Calling the HSSFDataFormat.getFormat(String) method more than once with the \nsame argument blows the formatting of the document so that, when opened in \nExcel, incorrect styles/fonts/formats are applied to the cells in the \ndocument. Fails with 1.8.0-dev-20020919 and 1.9.0-dev-20030131.\n\nSample code:\n\n        HSSFWorkbook book = new HSSFWorkbook();\n        HSSFSheet sheet = book.createSheet(\"Test\");\n        HSSFRow row = sheet.createRow(0);\n        HSSFCell c1 = row.createCell((short)0);\n        HSSFCell c2 = row.createCell((short)1);\n        HSSFCell c3 = row.createCell((short)2);\n        HSSFDataFormat f1 = book.createDataFormat();\n        short i1 = f1.getFormat(\"dd/mm/yyyy\");\n        HSSFDataFormat f2 = book.createDataFormat();\n        short i2 = f2.getFormat(\"dd/mm/yyyy\");\n        HSSFDataFormat f3 = book.createDataFormat();\n        short i3 = f3.getFormat(\"dd/mm/yyyy\");\n        HSSFCellStyle s1 = book.createCellStyle();\n        s1.setDataFormat(i1);\n        HSSFCellStyle s2 = book.createCellStyle();\n        s2.setDataFormat(i2);\n        HSSFCellStyle s3 = book.createCellStyle();\n        s3.setDataFormat(i3);\n        c1.setCellStyle(s1);\n        c2.setCellStyle(s2);\n        c3.setCellStyle(s3);\n        c1.setCellValue(new Date(System.currentTimeMillis() + (1L * 24L * 60L \n* 60L * 1000L)));\n        c2.setCellValue(new Date(System.currentTimeMillis() + (2L * 24L * 60L \n* 60L * 1000L)));\n        c3.setCellValue(new Date(System.currentTimeMillis() + (4L * 24L * 60L \n* 60L * 1000L)));\n        System.out.println(\"Cell 1: \" + i1 + \" - \" + c1.getCellStyle\n().getDataFormat());\n        System.out.println(\"Cell 2: \" + i2 + \" - \" + c2.getCellStyle\n().getDataFormat());\n        System.out.println(\"Cell 3: \" + i3 + \" - \" + c3.getCellStyle\n().getDataFormat());\n        try\n        {\n            book.write(new FileOutputStream(\"TestFormat.xls\"));\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n        }\n\n\nSample output:\n\nCell 1: 164 - 164\nCell 2: 214 - 214\nCell 3: 214 - 214\n\nIn the created xls file, only the first date is formatted as a date. In more \nelaborate instances, this causes styles/fonts to be applied to the wrong cells."}, {"count": 1, "tags": [], "text": "Created attachment 4718\nOutput XLS generated by sample code.", "is_private": false, "id": 30632, "creator": "APreston@PrestonSoftware.co.uk", "time": "2003-02-04T12:09:34Z", "bug_id": 16756, "creation_time": "2003-02-04T12:09:34Z", "attachment_id": 4718}, {"attachment_id": null, "tags": [], "creator": "poi-support@buni.org", "text": "if this is still true...thats bad", "count": 2, "id": 41335, "time": "2003-07-24T15:36:30Z", "bug_id": 16756, "creation_time": "2003-07-24T15:36:30Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 16756, "attachment_id": null, "text": "oddly this file works in Excel v.X", "id": 41336, "time": "2003-07-24T15:37:09Z", "creator": "poi-support@buni.org", "creation_time": "2003-07-24T15:37:09Z", "is_private": false}, {"count": 4, "tags": [], "text": "Look at Bug 19638.\nThis will solve this problem", "attachment_id": null, "id": 41438, "creator": "Grigorios.Merenidis@Dresdner-Bank.com", "time": "2003-07-24T17:36:04Z", "bug_id": 16756, "creation_time": "2003-07-24T17:36:04Z", "is_private": false}, {"count": 5, "tags": [], "creator": "slaubach@apache.org", "is_private": false, "id": 41450, "attachment_id": null, "bug_id": 16756, "creation_time": "2003-07-24T18:29:52Z", "time": "2003-07-24T18:29:52Z", "text": "But not properly.  It is using the user model in the low level model.  Plus, if \nyou look, HSSFDataFormat already keeps a hash.  Finally, most users go in \nthrough the HSSFWorkbook and would not have access to the Workbook object to \ncall the validate on."}, {"count": 6, "tags": [], "bug_id": 16756, "attachment_id": null, "text": "Commited fix that ensured the same HSSFDataFormat object is returned for each \ncreateDataFormat.  This ensures that the hash table is kept up to date without \nthe need for sharing.", "id": 41454, "time": "2003-07-24T19:26:36Z", "creator": "slaubach@apache.org", "creation_time": "2003-07-24T19:26:36Z", "is_private": false}]