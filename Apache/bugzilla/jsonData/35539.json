[{"count": 0, "tags": [], "creator": "tomekem@poczta.fm", "attachment_id": null, "text": "For now Slide doesn't perform version-aware Lucene searching. It indexes text\nfor all file revisions, searches all revisions but only one revision is returned\nin query result. It is due to use of Set and ComparableResourceImpl classes.\nComparableResourceImpl uses only URL to compare objects but Set objects must be\nunique and query result is constrained.\n\nI added revision support to ComparableResource class. With my patch it stores\nrevision number for resources and revision number is significiant for comparing\nissues. Query result contains set of ComparableResourceImpl objects with\nrevision information.\n\nTomek Majchrzak\n\n--- src/share/org/apache/slide/search/RequestedResource.java        2005-06-24\n12:33:58.000000000 +0200\n+++ src/share/org/apache/slide/search/RequestedResource.java?rev=1.10    \n2005-06-29 10:00:18.465256424 +0200\n@@ -28,7 +28,6 @@\n import org.apache.slide.common.PropertyName;\n\n import org.apache.slide.content.NodeProperty;\n-import org.apache.slide.content.NodeRevisionNumber;\n\n import java.util.Iterator;\n\n@@ -48,14 +47,7 @@\n      * @throws     SlideException\n      */\n     public String getUri() throws SlideException;\n-\n-     /**\n-     * Returns the revision number of the resource.\n-     *\n-     * @return     the revision number of resource\n-     */\n-        public NodeRevisionNumber getRevisionNumber();\n-\n+\n     /**\n      * Returns the property with the given <code>name</code> and\n      * <code>namespace</code>.\n\nshare/org/apache/slide/search/basic/ComparableResourceImpl.java\n\n---\nsrc/share/org/apache/slide/search/basic/ComparableResourceImpl.java?rev=1.17\n2005-06-24 13:02:32.000000000 +0200\n+++ src/share/org/apache/slide/search/basic/ComparableResourceImpl.java\n2005-06-29 11:31:28.000000000 +0200\n@@ -39,6 +39,7 @@\n import org.apache.slide.content.NodeRevisionContent;\n import org.apache.slide.content.NodeRevisionDescriptor;\n import org.apache.slide.content.NodeRevisionDescriptors;\n+import org.apache.slide.content.NodeRevisionNumber;\n import org.apache.slide.search.CompareHint;\n import org.apache.slide.search.PropertyProvider;\n import org.apache.slide.search.QueryScope;\n@@ -114,13 +115,31 @@\n     public ComparableResourceImpl (ObjectNode objectNode, SearchToken\nsearchToken, QueryScope scope, PropertyProvider propertyProvider)\n         throws SlideException\n     {\n-        this (objectNode, searchToken.getSlideToken(),\nsearchToken.getContentHelper(), scope, propertyProvider);\n-        this.searchToken = searchToken;\n+        this (objectNode, searchToken, scope, propertyProvider, null);\n     }\n     \n+\t/**\n+\t* Constructs a RequestedResource.\n+\t*\n+\t* @param objectNode        the ObjectNode for this resource\n+\t* @param searchToken       the SearchToken for this request\n+\t* @param scope             the scope of the query.\n+\t* @param propertyProvider  the  PropertyProvider to use (may be\n+\t*                          <code>null</code>).\n+\t* @param revisionNumber\t\tthe revision number of this resource\n+\t*\n+\t* @throws BadQueryException\n+\t*/\n+\tpublic ComparableResourceImpl (ObjectNode objectNode, SearchToken searchToken,\nQueryScope scope, PropertyProvider propertyProvider, NodeRevisionNumber\nrevisionNumber) \n+\t\tthrows SlideException\n+\t{\n+\t\tthis (objectNode, searchToken.getSlideToken(),\nsearchToken.getContentHelper(), scope, propertyProvider, revisionNumber);\n+\t\tthis.searchToken = searchToken;\n+\t}\n+\n     \n     // private boolean isCollection;\n-    \n+\n     /**\n      * Constructs a RequestedResource.\n      *\n@@ -130,10 +149,11 @@\n      * @param scope             the scope of the query.\n      * @param propertyProvider  the  PropertyProvider to use (may be\n      *                          <code>null</code>).\n+\t  * @param revisionNumber\t\tthe revision number of this resource\n      *\n      * @throws BadQueryException\n      */\n-    public ComparableResourceImpl (ObjectNode objectNode, SlideToken\nslideToken, Content contentHelper, QueryScope scope, PropertyProvider\npropertyProvider) throws SlideException {\n+    public ComparableResourceImpl (ObjectNode objectNode, SlideToken\nslideToken, Content contentHelper, QueryScope scope, PropertyProvider\npropertyProvider, NodeRevisionNumber revisionNumber) throws SlideException {\n         \n         this.objectNode = objectNode;\n         this.contentHelper = contentHelper;\n@@ -146,9 +166,12 @@\n                 contentHelper.retrieve (slideToken, objectNode.getUri());\n             \n             try {\n-                revisionDescriptor =\n-                    contentHelper.retrieve (slideToken, revisionDescriptors);\n-                \n+\t\t\t\t\tif (revisionNumber == null)\n+               \t revisionDescriptor =\n+                  \t  contentHelper.retrieve (slideToken, revisionDescriptors);\n+\t\t\t\t\telse\n+\t\t\t\t\t\trevisionDescriptor =\n+\t\t\t\t\t\t\t\tcontentHelper.retrieve (slideToken, revisionDescriptors, revisionNumber);\n             }\n             catch (org.apache.slide.content.RevisionDescriptorNotFoundException\ne) {\n                 // The object doesn't have any revision, we create a dummy\n@@ -310,6 +333,15 @@\n     public String getUri() {\n         return getInternalHref();\n     }\n+\n+  /**\n+     * Returns the revision number of the resource.\n+     *\n+     * @return     the revision number of the resource.\n+     */\n+\tpublic NodeRevisionNumber getRevisionNumber() {\n+\t\treturn revisionDescriptor.getRevisionNumber();\n+\t}\n     \n     /**\n      * Returns the property with the given <code>propertyName</code>.\n@@ -452,8 +484,9 @@\n         Comparable otherValue = (Comparable) otherResource.getThisValue\n(hint.getPropName(), hint.getPropNamespace());\n         Comparable thisValue = (Comparable) getThisValue (hint.getPropName(),\nhint.getPropNamespace());\n         \n-        if (getInternalHref().equals (otherResource.getInternalHref()))\n-            result = 0;\n+\t\t\tif (getInternalHref().equals (otherResource.getInternalHref()) &&\n+\t\t\t\n(getRevisionNumber().equals(((ComparableResource)otherResource).getRevisionNumber())))\n+            \tresult = 0;\n             \n         else if (thisValue != null && otherValue != null) {\n             result = thisValue.compareTo(otherValue);\n@@ -653,7 +686,7 @@\n         } catch (SlideException e) {}\n \n         if (getUri().equals (otherUri))\n-            return true;\n+\t\t\t\treturn\ngetRevisionNumber().equals(((ComparableResource)otherObject).getRevisionNumber());\n         else\n             return false;\n     }\n\n--- src/share/org/apache/slide/search/basic/OrderBy.java?rev=1.11      \n2005-06-28 08:45:46.000000000 +0200\n+++ src/share/org/apache/slide/search/basic/OrderBy.java    2005-06-23\n13:45:08.000000000 +0200\n@@ -203,7 +203,8 @@\n             ComparableResource r2 = (ComparableResource)o2;\n\n             int result = 0;\n-            if (r1.getInternalHref().equals (r2.getInternalHref())) {\n+            if (r1.getInternalHref().equals (r2.getInternalHref()) &&\n+                                      \nr1.getRevisionNumber().equals(r2.getRevisionNumber())) {\n                 result = 0;\n             }\n             else {\n\n--- src/stores/org/apache/slide/index/lucene/Index.java?rev=1.12 2005-06-28\n08:49:28.000000000 +0200\n+++ src/stores/org/apache/slide/index/lucene/Index.java     2005-06-23\n12:45:34.000000000 +0200\n@@ -65,6 +65,7 @@\n {\n     public static final String KEY_FIELD_NAME = \"SLIDE_KEY\";\n     public static final String URI_FIELD_NAME = \"SLIDE_URI\";\n+    public static final String REVISION_FIELD_NAME = \"SLIDE_REVISION\";\n     public static final String SCOPE_FIELD_NAME = \"SLIDE_SCOPE\";\n     public static final String DEPTH_FIELD_NAME = \"SLIDE_DEPTH\";\n     public static final String VERSION_FIELD_NAME = \"SLIDE_VERSION\";\n@@ -221,6 +222,7 @@\n         doc.add(unstoredString(Index.KEY_FIELD_NAME,\n                 configuration.generateKey(uri, descriptor.getRevisionNumber())));\n         doc.add(storedString(Index.URI_FIELD_NAME, uri));\n+        doc.add(storedString(Index.REVISION_FIELD_NAME,\ndescriptor.getRevisionNumber().toString()));\n\n         // scopes\n         StringTokenizer tokenizer = new StringTokenizer(uri, \"/\");\n@@ -305,6 +307,7 @@\n         doc.add(unstoredString(Index.KEY_FIELD_NAME,\n                 configuration.generateKey(uri, descriptor.getRevisionNumber())));\n         doc.add(storedString(Index.URI_FIELD_NAME, uri));\n+        doc.add(storedString(Index.REVISION_FIELD_NAME,\ndescriptor.getRevisionNumber().toString()));\n\n         // scopes\n         StringTokenizer tokenizer = new StringTokenizer(uri, \"/\");\n\n---\nsrc/stores/org/apache/slide/index/lucene/expressions/AbstractLuceneExpression.java?rev=1.2\n      2005-06-28 08:51:24.000000000 +0200\n+++\nsrc/stores/org/apache/slide/index/lucene/expressions/AbstractLuceneExpression.java\n     2005-06-23 12:46:30.000000000 +0200\n@@ -53,6 +53,7 @@\n import org.apache.slide.structure.ObjectNode;\n import org.apache.slide.structure.SubjectNode;\n import org.apache.slide.util.logger.Logger;\n+import org.apache.slide.content.NodeRevisionNumber;\n import org.jdom.Element;\n\n\n@@ -156,7 +157,9 @@\n             for (int i = 0, l = hits.length(); i < l; i++) {\n                 Document doc = hits.doc(i);\n                 String uri = doc.get(Index.URI_FIELD_NAME);\n-                RequestedResource resource = createResource(uri);\n+                                        String number =\ndoc.get(Index.REVISION_FIELD_NAME);\n+                                        NodeRevisionNumber nodeNumber = new\nNodeRevisionNumber(number);\n+                RequestedResource resource = createResource(uri, nodeNumber);\n                 result.add(resource);\n             }\n\n@@ -199,7 +202,7 @@\n         return new TermQuery(new Term(Index.SCOPE_FIELD_NAME, \"/\"));\n     }\n\n-    protected RequestedResource createResource(String uri) throws SearchException\n+    protected RequestedResource createResource(String uri, NodeRevisionNumber\nnodeNumber) throws SearchException\n     {\n         ObjectNode node = new SubjectNode(uri); // this will return the root\n                                                 // folder\n@@ -208,7 +211,7 @@\n\n         try {\n             resource = new ComparableResourceImpl(node, query.getSearchToken(),\n-                    query.getScope(), factory.getPropertyProvider());\n+                    query.getScope(), factory.getPropertyProvider(), nodeNumber);\n         } catch (SlideException e) {\n             throw new SearchException(e);\n         }\n\n---\nsrc/webdav/server/org/apache/slide/webdav/util/ResourceWithProvidedProperties.java?rev=1.8\n2005-06-29 12:29:31.706156920 +0200\n+++\nsrc/webdav/server/org/apache/slide/webdav/util/ResourceWithProvidedProperties.java\n     2005-06-24 12:42:49.000000000 +0200\n@@ -33,6 +33,7 @@\n import org.apache.slide.content.NodeProperty;\n import org.apache.slide.content.NodeRevisionDescriptor;\n import org.apache.slide.content.NodeRevisionDescriptors;\n+import org.apache.slide.content.NodeRevisionNumber;\n import org.apache.slide.search.PropertyProvider;\n import org.apache.slide.search.RequestedResource;\n\n@@ -89,7 +90,16 @@\n     public String getUri() {\n         return revisionDescriptors.getOriginalUri();\n     }\n-\n+\n+     /**\n+     * Returns the revision number of the resource.\n+     *\n+     * @return     the revision number of the resource.\n+     */\n+       public NodeRevisionNumber getRevisionNumber() {\n+               return revisionDescriptor.getRevisionNumber();\n+       }\n+\n     /**\n      * Returns the property with the given <code>propertyName</code>.\n      *", "id": 76796, "time": "2005-06-29T13:13:00Z", "bug_id": 35539, "creation_time": "2005-06-29T13:13:00Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 35539, "attachment_id": null, "is_private": false, "id": 76967, "time": "2005-07-04T12:19:03Z", "creator": "unico@apache.org", "creation_time": "2005-07-04T12:19:03Z", "text": "I tried to apply you patch but it seems to somehow be invalid. I think it is due\nto additional line breaks introduced when you pasted it as a comment. I tried to\nfix it manually without any luck. Could you submit the patch as an attachment\ninstead? Sorry for the inconvenience."}, {"count": 2, "tags": [], "bug_id": 35539, "attachment_id": 15584, "is_private": false, "id": 76970, "time": "2005-07-04T15:02:56Z", "creator": "tomekem@poczta.fm", "creation_time": "2005-07-04T15:02:56Z", "text": "Created attachment 15584\nPatch against Subversion"}, {"count": 3, "tags": [], "bug_id": 35539, "attachment_id": null, "id": 76972, "time": "2005-07-04T15:52:07Z", "creator": "unico@apache.org", "creation_time": "2005-07-04T15:52:07Z", "is_private": false, "text": "Patch committed. Please cross-check and close. Thanks!"}]