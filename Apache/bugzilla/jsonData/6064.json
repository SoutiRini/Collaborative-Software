[{"count": 0, "tags": [], "bug_id": 6064, "attachment_id": null, "text": "when I try to load from a static or dynamic source, I get an entity error.\n\njavax.servlet.ServletException: org.xml.sax.SAXParseException: XML declaration \nmay only begin entities.\n        at org.apache.jasper.runtime.PageContextImpl.handlePageException(Unknown \nSource)\n        at org.apache.jsp.xtag$jsp._jspService(xtag$jsp.java:290)\n        at org.apache.jasper.runtime.HttpJspBase.service(Unknown Source)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at \norg.apache.jasper.servlet.JspServlet$JspServletWrapper.service(Unknown Source)\n        at org.apache.jasper.servlet.JspServlet.serviceJspFile(Unknown Source)\n        at org.apache.jasper.servlet.JspServlet.service(Unknown Source)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:853)\n        at \norg.apache.catalina.core.ApplicationFilterChain.internalDoFilter(Unknown Source)\n        at org.apache.catalina.core.ApplicationFilterChain.doFilter(Unknown \nSource)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invoke(Unknown Source)\n        at org.apache.catalina.core.ContainerBase.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardContextValve.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invoke(Unknown Source)\n        at org.apache.catalina.core.ContainerBase.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardContext.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardHostValve.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(Unknown Source)\n        at org.apache.catalina.valves.AccessLogValve.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invoke(Unknown Source)\n        at org.apache.catalina.core.ContainerBase.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardEngineValve.invoke(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invokeNext(Unknown Source)\n        at org.apache.catalina.core.StandardPipeline.invoke(Unknown Source)\n        at org.apache.catalina.core.ContainerBase.invoke(Unknown Source)\n        at org.apache.catalina.connector.http.HttpProcessor.process(Unknown \nSource)\n        at org.apache.catalina.connector.http.HttpProcessor.run(Unknown Source)\n        at java.lang.Thread.run(Thread.java:484)\n\n\n<%@ taglib prefix=\"jc\" uri=\"http://java.sun.com/jstl/ea/core\" %>\n<%@ taglib prefix=\"jx\" uri=\"http://java.sun.com/jstl/ea/xml\" %>\n<html>\n<head>\n  <title>my Listings</title>\n</head>\n<body bgcolor=\"#FFFFFF\">\n\n<a href=\"xtag.txt\">Source</a><p>\n<jc:set var=\"xmlurl\">\nhttp://localhost:8080/mylisting/sample.xml?\n</jc:set>\n\n<jx:parse var=\"dom\">\n<jc:import url=\"$xmlurl\"/>\n</jx:parse>\n\n<h3>Listings</h3>\n\n<table border=1 width=\"100%\">\n<jx:forEach var=\"cat\" select=\"$dom//cat\">\n<tr>\n   <td>\n   \t<a href=\"<jx:expr select=\"$cat/url\"/>\"><jx:expr select=\"$cat/name\"/></a>\n   </td>\n   <td>\n   \t<jx:expr select=\"$cat/lNum\"/>\n   </td>\n</tr>\n</jx:forEach>\n</table>\n\n</body>\n</html>\n\n\nExample XML:\n\n<?xml version=\"1.0\"?>\n<spPage>\n<catPage totalCats=\"11\" query_stype=\"S\" query_category=\"\" query_name=\"pet\" \nquery_street=\"\" query_city=\"worcester\" query_state=\"MA\" query_zip=\"\" \nquery_miles=\"\" pageStartsAt=\"1\" pageSize=\"11\" totalListings=\"26\">\n<cat cid=\"0752AE12400\" level=\"0\" rank=\"428\">\n      <name>Dog &#38; Cat Grooming &#38; Boarding</name>\n      <url \nname=\"listings_page\">xtag.jsp?CID=0752AE12400&#38;T=worcester&#38;N=pet&#38;PG=L\n&#38;STYPE=S&#38;R=N&#38;S=MA&#38;MC=1&#38;PI=1</url>\n      <lNum>1</lNum>\n    </cat>\n<cat cid=\"0752AF12426\" level=\"0\" rank=\"683\">\n      <name>Dog &#38; Cat Kennels</name>\n      <url \nname=\"listings_page\">xtag.jsp?CID=0752AF12426&#38;T=worcester&#38;N=pet&#38;PG=L\n&#38;STYPE=S&#38;R=N&#38;S=MA&#38;MC=1&#38;PI=1</url>\n      <lNum>1</lNum>\n    </cat>\n<cat cid=\"0752BC1243A\" level=\"0\" rank=\"1205\">\n      <name>Dog &#38; Cat Pet Sitting Services</name>\n      <url \nname=\"listings_page\">xtag.jsp?CID=0752BC1243A&#38;T=worcester&#38;N=pet&#38;PG=L\n&#38;STYPE=S&#38;R=N&#38;S=MA&#38;MC=1&#38;PI=1</url>\n      <lNum>1</lNum>\n    </cat>\n<cat cid=\"0752BA29702\" level=\"0\" rank=\"856\">\n      <name>Pet Care Services</name>\n      <url \nname=\"listings_page\">xtag.jsp?CID=0752BA29702&#38;T=worcester&#38;N=pet&#38;PG=L\n&#38;STYPE=S&#38;R=N&#38;S=MA&#38;MC=1&#38;PI=1</url>\n      <lNum>4</lNum>\n    </cat>\n<cat cid=\"5999CJ29748\" level=\"0\" rank=\"1516\">\n      <name>Pet Clothing &#38; Accessories</name>\n      <url \nname=\"listings_page\">xtag.jsp?CID=5999CJ29748&#38;T=worcester&#38;N=pet&#38;PG=L\n&#38;STYPE=S&#38;R=N&#38;S=MA&#38;MC=1&#38;PI=1</url>\n      <lNum>2</lNum>\n    </cat>\n<cat cid=\"5999CJ297DE\" level=\"0\" rank=\"380\">\n      <name>Pet Foods Equipment &#38; Supplies</name>\n      <url \nname=\"listings_page\">xtag.jsp?CID=5999CJ297DE&#38;T=worcester&#38;N=pet&#38;PG=L\n&#38;STYPE=S&#38;R=N&#38;S=MA&#38;MC=1&#38;PI=1</url>\n      <lNum>2</lNum>\n    </cat>\n<otherLinks></otherLinks>\n</catPage>\n</spPage>", "id": 9976, "time": "2002-01-28T12:50:42Z", "creator": "woolfel@yahoo.com", "creation_time": "2002-01-28T12:50:42Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 6064, "text": "I have more information on this bug. It appears to be caused by  \norg.apache.taglibs.standard.tag.el.xml.ParseSupport and not \norg.apache.taglibs.xtags.xtags.xpath.ParseTag. The Xtags version loads static \nfiles with \"<?xml version=\"1.0\"?>\" without any problems, but ParseSupport \ndefinitely has a problem.", "count": 1, "id": 10019, "time": "2002-01-29T16:03:01Z", "creator": "woolfel@yahoo.com", "creation_time": "2002-01-29T16:03:01Z", "is_private": false}, {"count": 2, "tags": [], "creator": "woolfel@yahoo.com", "text": "I did some additional testing with javax.xml.parser.DocumentBuilder and it looks \nlike it is specific to parse(string) and parse(inputstream). when I use \nparse(file), it works fine. One possible fix could be to check the first line of \nthe source and parse it out.", "id": 10496, "time": "2002-02-08T17:29:01Z", "bug_id": 6064, "creation_time": "2002-02-08T17:29:01Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "creator": "woolfel@yahoo.com", "text": "spoke too soon, user error on my part. fixed my xml file and documentbuilder \nworks fine for all three parse() methods.", "id": 10498, "time": "2002-02-08T17:52:54Z", "bug_id": 6064, "creation_time": "2002-02-08T17:52:54Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "woolfel@yahoo.com", "text": "I found the bug in line 146 of \norg.apache.taglibs.standard.tag.common.xml.ParseSupport.\n\nFor some reason, bodyContent.getString pads the beginning of the document with \nan extra line. I verified the ImportTag gets the content correctly, so it \nhappens when in between the time import gets the content and parse tag gets it \nfrom the body content. The fix was simple. I add .trim() to the line and it \nworks correctly.\n\n\n\t// if we haven't gotten a source, use the body (which may be empty)\n\tObject source = this.source;\n\tif (source == null)\n\t    source = bodyContent.getString().trim();\n\n\n", "id": 10554, "time": "2002-02-11T19:05:53Z", "bug_id": 6064, "creation_time": "2002-02-11T19:05:53Z", "is_private": false, "attachment_id": null}]