[{"count": 0, "tags": [], "text": "Created attachment 24718\nFix the cache_generate_key_default's wrong behavior\n\nSuppose the querystring is:     PRE_key1=dodou&key2=wang\nand the httpd.conf contains:    CacheIgnoreURLSessionIdentifiers key1\n\nThen the cache_generate_key_default function generates the wrong cachekey, it delete the \"key1=dodou&\", then the cackekey turns to be : \"http://xxx.com/main.php?PRE_key2=wang\", which is wrong behavior.\n\nThe attachment is a patch to fix it.\n\n\nThand you\nDodou Wang", "is_private": false, "id": 132883, "creator": "wangdong.08@gmail.com", "time": "2009-12-16T21:23:57Z", "bug_id": 48401, "creation_time": "2009-12-16T21:23:57Z", "attachment_id": 24718}, {"count": 1, "tags": [], "bug_id": 48401, "attachment_id": null, "id": 132888, "time": "2009-12-17T00:35:10Z", "creator": "rpluem@apache.org", "creation_time": "2009-12-17T00:35:10Z", "is_private": false, "text": "Thanks for the patch, but I guess it misses an additional edge case. Lets use your configuration with a slightly different querystring:\n\nSuppose the querystring is:     PRE_key1=dodou&key2=wang&key1=ignore_me\nand the httpd.conf contains:    CacheIgnoreURLSessionIdentifiers key1\n\nWith the old code we would end up with\n\nPRE_key2=wang&key1=ignore_me\n\nWith your patch we would end up with\n\nPRE_key1=dodou&key2=wang&key1=ignore_me\n\nbut the correct result should be\n\nPRE_key1=dodou&key2=wang\n\nCan you please crosscheck if the patch I attach in minute also fixes your problem?"}, {"count": 2, "tags": [], "text": "Created attachment 24720\nAlternate approach to fix edge case", "attachment_id": 24720, "id": 132889, "creator": "rpluem@apache.org", "time": "2009-12-17T00:37:35Z", "bug_id": 48401, "creation_time": "2009-12-17T00:37:35Z", "is_private": false}, {"count": 3, "tags": [], "creator": "wangdong.08@gmail.com", "attachment_id": 24722, "text": "Created attachment 24722\nFor Removing The '&'\n\n(In reply to comment #1)\n> Thanks for the patch, but I guess it misses an additional edge case. Lets use\n> your configuration with a slightly different querystring:\n> \n> Suppose the querystring is:     PRE_key1=dodou&key2=wang&key1=ignore_me\n> and the httpd.conf contains:    CacheIgnoreURLSessionIdentifiers key1\n> \n> With the old code we would end up with\n> \n> PRE_key2=wang&key1=ignore_me\n> \n> With your patch we would end up with\n> \n> PRE_key1=dodou&key2=wang&key1=ignore_me\n> \n> but the correct result should be\n> \n> PRE_key1=dodou&key2=wang\n> \n> Can you please crosscheck if the patch I attach in minute also fixes your\n> problem?\n\nThank you for the review. \nYour patch did resolve the case above, but I found another problem:\n\nSuppose the querystring is:     PRE_key1=dodou&key2=wang&key1=ignore_me\nand the httpd.conf contains:    CacheIgnoreURLSessionIdentifiers key1\n\nwith your patch , the result is:   PRE_key1=dodou&key2=wang&\nThere is a \"&\" in the end, it is not wanted. \nconsider the two querystring: \nfirst:  PRE_key1=dodou&key2=wang&key1=ignore_me\nsecond: PRE_key1=dodou&key2=wang\n\nboth your patch and the old code will treat them as different keys, just because of the '&'.\n\nso i changed a little of your patch to fix it, can you please check whether it works all right?\n\nThank you very much:)\nDodou Wang", "id": 132896, "time": "2009-12-17T03:20:54Z", "bug_id": 48401, "creation_time": "2009-12-17T03:20:54Z", "is_private": false}, {"count": 4, "tags": [], "creator": "rpluem@apache.org", "is_private": false, "text": "Thanks for the pointer. I solved it a little different. Care to test?", "id": 132898, "time": "2009-12-17T05:36:50Z", "bug_id": 48401, "creation_time": "2009-12-17T05:36:50Z", "attachment_id": null}, {"count": 5, "tags": [], "creator": "rpluem@apache.org", "is_private": false, "text": "Created attachment 24723\nRemove trailing &", "id": 132899, "time": "2009-12-17T05:37:31Z", "bug_id": 48401, "creation_time": "2009-12-17T05:37:31Z", "attachment_id": 24723}, {"count": 6, "tags": [], "bug_id": 48401, "attachment_id": 24727, "id": 132906, "time": "2009-12-17T07:55:03Z", "creator": "wangdong.08@gmail.com", "creation_time": "2009-12-17T07:55:03Z", "is_private": false, "text": "Created attachment 24727\nRemove trailing &, fixed\n\n(In reply to comment #4)\n> Thanks for the pointer. I solved it a little different. Care to test?\n\nI am afraid that your patch has some risk. \n\nif the querystring starts with the identifier, and the idenitfier is the only one param of the querystring, then the follow codes in your patch will be executed.\n1.  querystring = \"\"\n2.  qs_len_idx = strlen(querystring) - 1\n3.  if (querystring[qs_len_idx] == '&') ...\n\nit will compare querystring[-1] with '&', the querystring is allocate from the pool, so the querystring[-1] maybe any strange value, including the '&'. The memory may be corrupted at that time.\n\nMy previous patch 24722 did not have this risk. \nOr, if we want to fix it in your style, I think this attachment works.\n\n\nThanks\nDodou Wang"}, {"count": 7, "tags": [], "creator": "rpluem@apache.org", "attachment_id": 24729, "text": "Created attachment 24729\nRevised version\n\nThanks for pointing out, but I guess your patch dosen't handle the following case:\n\nPRE_key1=a&key2=b&key1=c&key3=blah\n\nSo I made a new one that should also handle this case :-)", "id": 132912, "time": "2009-12-17T10:03:55Z", "bug_id": 48401, "creation_time": "2009-12-17T10:03:55Z", "is_private": false}, {"count": 8, "attachment_id": null, "creator": "wangdong.08@gmail.com", "is_private": false, "id": 132919, "time": "2009-12-17T14:24:01Z", "bug_id": 48401, "creation_time": "2009-12-17T14:24:01Z", "tags": [], "text": "(In reply to comment #7)\n> Created an attachment (id=24729) [details]\n> Revised version\n> \n> Thanks for pointing out, but I guess your patch dosen't handle the following\n> case:\n> \n> PRE_key1=a&key2=b&key1=c&key3=blah\n> \n> So I made a new one that should also handle this case :-)\n\ner... have you tried the case above? I tried the case, and didn't find anything wrong in my previous patch, can you explain your guess?\n\nMaybe you means that in some cases, the querystring won't be ended by '&'?\nBut if the querystring isn't \"\", then it must be generated by cutting off the identifier, the follow codes guarantees that the end of it must be '&'.\n\nelse {\n    char *complete;\n\n    /*\n     * In order to avoid subkey matching (PR 48401) prepend\n     * identifier with a '&' and append a '='\n     */\n    complete = apr_pstrcat(p, \"&\", *identifier, \"=\", NULL);\n    param = strstr(querystring, complete);\n    /* If we found something we are sitting on the '&' */    \n    if (param) {\n        param++;                                             \n    }\n}                                                            \nif (param) {\n    char *amp;\n\n    if (querystring != param) {                              \n        querystring = apr_pstrndup(p, querystring,\n                               param - querystring);        \n\n\nSo in my opinion, we can be confident to change the last character to '\\0', as in my patch 24727. the comparaion between '&' in your patch maybe not needed any more, isn't it?\n\nThanks:)\nDodou Wang"}, {"count": 9, "tags": [], "bug_id": 48401, "attachment_id": null, "id": 132936, "time": "2009-12-18T08:05:26Z", "creator": "rpluem@apache.org", "creation_time": "2009-12-18T08:05:26Z", "is_private": false, "text": "You are correct. I somehow made a mistake when going through your patch. Committed it as r892289 with a slight modification of the comment to make it a little bit clearer why the last char in this case must be an '&'."}, {"count": 10, "tags": [], "bug_id": 48401, "attachment_id": null, "is_private": false, "id": 147622, "time": "2011-06-29T21:18:45Z", "creator": "christophe.jaillet@wanadoo.fr", "creation_time": "2011-06-29T21:18:45Z", "text": "If the patch as been committed, this bug report should be closed, no ?"}, {"count": 11, "tags": [], "bug_id": 48401, "attachment_id": null, "id": 154226, "time": "2012-02-26T17:01:40Z", "creator": "sf@sfritsch.de", "creation_time": "2012-02-26T17:01:40Z", "is_private": false, "text": "fixed in 2.4.1"}]