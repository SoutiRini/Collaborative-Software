[{"count": 0, "tags": [], "creator": "jpstotz@gmx.de", "attachment_id": null, "id": 81205, "time": "2005-10-16T20:12:16Z", "bug_id": 37105, "creation_time": "2005-10-16T20:12:16Z", "is_private": false, "text": "For Deploying some JARs over Java Web Start I need to sign all used Jars with \none signature-key. Some of the JARs are already signed or better the MANIFEST.MF \ncontains some digest information. After resigning the MANIFEST.MF contains two \nentries with the SHA Digest, one called \"SHA-1-Digest:\" and the second \"SHA1-\nDigest:\" for every class inside the jar.\n\nAn Example. Before signing the first entry in the MANIFEST.MF is:\n\nName: com/ibm/util/ByteArrayComparator.class\nDigest-Algorithms: SHA-1 MD5 \nSHA-1-Digest: S7wUZ9ZutxM4aw++z04cos09RNQ=\nMD5-Digest: sFk/FpWAavouBPkcBHk+Kw==\n\nafter resigning it was changed to \n\nName: com/ibm/util/ByteArrayComparator.class\nSHA-1-Digest: S7wUZ9ZutxM4aw++z04cos09RNQ=\nDigest-Algorithms: SHA-1 MD5 \nMD5-Digest: sFk/FpWAavouBPkcBHk+Kw==\nSHA1-Digest: S7wUZ9ZutxM4aw++z04cos09RNQ=\n\nJan"}, {"count": 1, "tags": [], "creator": "datasmid@xs4all.nl", "text": "My solution to single key- signed jars for webstart is a 're-sign' that unjars the jar, deletes the whole \nMETA-INF, then jars the rest and signs the jar again with my own key, like the other jars in my JNLP file.\nThis risks losing some properties in the MANIFEST, but so far this is theoretical in our systems. \n\nSome jars like javahelp are signed by Sun, and can be re-signed easily like this.", "id": 85198, "time": "2006-01-30T15:56:50Z", "bug_id": 37105, "creation_time": "2006-01-30T15:56:50Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "creator": "stevel@apache.org", "attachment_id": null, "id": 85210, "time": "2006-01-30T19:06:33Z", "bug_id": 37105, "creation_time": "2006-01-30T19:06:33Z", "is_private": false, "text": "Ant hands off signing to the jarsigner task of the JDK; you can see the command\nline if you add the -v switch. Dependency logic is limited to checking the dest\nfile being older than the source, not looking for signatures inside.\n\nIf the jarsigner exe feels that your app needs a second signature, then either\nit knows what it is doing, or there is something wrong with it. Either way, it\nis out of our hands. I'd note that SHA-1-Digest and SHA1-Digest are two\ndifferent strings, and maybe both are required. \n\nAs it is, I dont see what it is doing is actually invalid. All it is doing is\nsigning it with a different cryptography engine. Marking as wontfix as it is out\nof our hands."}]