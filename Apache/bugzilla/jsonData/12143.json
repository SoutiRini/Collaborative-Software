[{"count": 0, "tags": [], "bug_id": 12143, "attachment_id": null, "id": 21927, "time": "2002-08-28T21:58:41Z", "creator": "ddevienne@lgc.com", "creation_time": "2002-08-28T21:58:41Z", "is_private": false, "text": "This suppresses the empty lines in between Testsuite: messages of <junit> for \nexample, and in other cases as well. The purpose of NoBannerLogger is to not \ndisplay the target name of targets not having any output, not to assume empty \nor spaces-only messages to be equivalent to no messages. Patch against \nANT_15_BRANCH forth coming."}, {"count": 1, "tags": [], "bug_id": 12143, "attachment_id": 2863, "text": "Created attachment 2863\nSuppress removal of messages that when trim()ed end up empty.", "id": 21928, "time": "2002-08-28T21:59:51Z", "creator": "ddevienne@lgc.com", "creation_time": "2002-08-28T21:59:51Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 12143, "attachment_id": null, "id": 23459, "time": "2002-09-26T16:29:52Z", "creator": "bodewig@apache.org", "creation_time": "2002-09-26T16:29:52Z", "is_private": false, "text": "I'm not sure, but maybe it is so by design (it's not a bug, it's a feature).\nAsk Peter 8-)"}, {"count": 3, "tags": [], "bug_id": 12143, "is_private": false, "id": 23475, "attachment_id": null, "creator": "ddevienne@lgc.com", "creation_time": "2002-09-26T20:53:01Z", "time": "2002-09-26T20:53:01Z", "text": "I disagree. Not displaying the banner of a task with no output is great. \nSuppressing output of empty lines of a target that has already started to \noutput something is wrong IMO, and simply messes up the build writer's intended \nformatting. I'd like you to reconsider. --DD"}, {"count": 4, "tags": [], "text": "So, where are we up to with this? I probably agree with both of you :-)\n", "is_private": false, "id": 30016, "creator": "conor@apache.org", "time": "2003-01-24T15:03:46Z", "bug_id": 12143, "creation_time": "2003-01-24T15:03:46Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 12143, "text": "Since I needed to write my own NoBannerLogger to better support the use of \n<subant> (and <ant>) to indicate the Project Path to the target, I implemented \nmy own fix there. I got tired of seeing build: over and over for all the builds \n(nested at several levels) that I'm recursing into. --DD\n\nP:\\acme>build -f acme.xml\nBuildfile: acme.xml\n\nbuild:        [acme/utils]\nStarting dependency analysis for 4 files.\n4 files are up to date.\n0 files to be recompiled from dependency analysis.\n1 total files to be compiled.\nStarting link\n\nbuild:        [acme/math]\nStarting dependency analysis for 4 files.\n4 files are up to date.\n0 files to be recompiled from dependency analysis.\n1 total files to be compiled.\nStarting link\n\nbuild:        [Plugin/ascii]\nStarting dependency analysis for 3 files.\n3 files are up to date.\n0 files to be recompiled from dependency analysis.\n1 total files to be compiled.\nStarting link\n\nBUILD SUCCESSFUL\nTotal time: 9 seconds", "id": 35264, "attachment_id": null, "creator": "ddevienne@lgc.com", "creation_time": "2003-04-15T21:05:42Z", "time": "2003-04-15T21:05:42Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 12143, "text": "Created attachment 5845\nNoBannerSubBuildLogger.java", "id": 35265, "attachment_id": 5845, "creator": "ddevienne@lgc.com", "creation_time": "2003-04-15T21:06:35Z", "time": "2003-04-15T21:06:35Z", "is_private": false}]