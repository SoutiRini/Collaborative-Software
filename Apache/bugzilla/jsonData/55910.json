[{"count": 0, "tags": [], "text": "Created attachment 31133\ncontinuation-lines.patch\n\nHandling of line wrapping is broken if \"\\\" is the last character before buffer resizing. Right know that's the 206. character.\n\nTestcase:\n<VirtualHost *:80>\nDocumentRoot /var/www/test\nServerName foo.bar\nServerAlias 3456789 123456789 123456789 123456789 \\\n123456789 123456789 123456789 123456789 123456789 \\\n123456789 123456789 123456789 123456789 123456789 \\\n123456789 123456789 123456789 123456789 123456789 1234 \\\n123456789 \n</VirtualHost>\n\nI've also attached a quick fix.", "attachment_id": 31133, "bug_id": 55910, "id": 171828, "time": "2013-12-19T12:15:58Z", "creator": "manuel-asf@mausz.at", "creation_time": "2013-12-19T12:15:58Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 55910, "attachment_id": null, "id": 171829, "creation_time": "2013-12-19T12:22:59Z", "time": "2013-12-19T12:22:59Z", "creator": "manuel-asf@mausz.at", "text": "A better testcase to make this more clear:\n\n<VirtualHost *:80>\nDocumentRoot /var/www/test\nServerName foo.bar\nServerAlias 3456789 123456789 123456789 123456789 \\\n123456789 123456789 123456789 123456789 123456789 \\\n123456789 123456789 123456789 123456789 123456789 \\\n123456789 123456789 123456789 123456789 123456789 1234 \\\nthats_still_an_alias\n</VirtualHost>\n\nResults in:\n# apachectl configtest\nAH00526: Syntax error on line 198 of /etc/apache2/httpd.conf:\nInvalid command 'thats_still_an_alias', perhaps misspelled or defined by a module not included in the server configuration", "is_private": false}, {"count": 2, "tags": [], "bug_id": 55910, "is_private": false, "id": 176630, "creation_time": "2014-07-23T15:27:25Z", "time": "2014-07-23T15:27:25Z", "creator": "manuel-asf@mausz.at", "text": "bump", "attachment_id": null}, {"count": 3, "tags": [], "text": "Created attachment 31923\ncontinuation-lines-v2.patch\n\nSince there doesn't seem to be much interest in fixing this edge case of the parser, I decided to rewrite the patch to be more sane. The outcome is attached.\n\nInstead of adding a grown-flag to indicate we can look behind the first byte, the function now expects the whole buffer, it's actual size and the current offset to write to.\n\nAdditional I've fixed a bug in the \"getch\"-branch that also happens during buffer resize. The APR_ENOSPC check is *before* storing the current character. So this one gets lost.\n\nI've checked both branches against all our webservers and there were no parsing errors.", "attachment_id": 31923, "id": 177211, "creation_time": "2014-08-17T17:18:49Z", "time": "2014-08-17T17:18:49Z", "creator": "manuel-asf@mausz.at", "bug_id": 55910, "is_private": false}, {"count": 4, "tags": [], "text": "This issue is also affecting ModSecurity. Specially when it is used with the development version of the OWASP CRS which uses a lot of \"continuation lines\" (aka \"\\\") to organize the rules in a format that is easy to read. \n\n(reference: https://github.com/SpiderLabs/owasp-modsecurity-crs/blob/v3.0.0-dev/rules/REQUEST-13-SCANNER-DETECTION.conf)\n\nUsing the OWASP CRS -dev it is possible to face this problem multiple times. The work around is to add random spaces in the rule that is exhibiting the problem.\n\nI have tested (on the branch http-2.4.x@b2f4b2) the patch attached and it fixed the problem. So far no other issue.", "attachment_id": null, "bug_id": 55910, "id": 179704, "time": "2014-12-10T20:05:43Z", "creator": "felipe@zimmerle.org", "creation_time": "2014-12-10T20:05:43Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 55910, "attachment_id": null, "id": 180004, "creation_time": "2014-12-23T21:23:13Z", "time": "2014-12-23T21:23:13Z", "creator": "rikus.goodell@cpanel.net", "text": "We've run into this same problem in multiple configuration files containing ModSecurity rules. At first I thought it might be a bug in ModSecurity, but once I confirmed that httpd itself was extracting a corrupted version of the directive's argument, I discovered this known bug. (Note: 2.2 does not appear to be affected, only 2.4)\n\nIt would help us a lot if this could be fixed in 2.4, because we're automating the distribution and installation of ModSecurity rule sets and would prefer not to have to apply a custom patch to accommodate these long continuation lines.", "is_private": false}, {"count": 6, "tags": [], "text": "Thanks Manuel, committed to trunk in 1648394 and will propose for backport shortly.", "is_private": false, "bug_id": 55910, "id": 180059, "time": "2014-12-29T17:28:22Z", "creator": "covener@gmail.com", "creation_time": "2014-12-29T17:28:22Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 55910, "attachment_id": null, "text": "Backported to 2.4.11 in r1651653.", "id": 180509, "time": "2015-01-23T09:06:31Z", "creator": "ylavic.dev@gmail.com", "creation_time": "2015-01-23T09:06:31Z", "is_private": false}]