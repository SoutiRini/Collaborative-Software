[{"count": 0, "tags": [], "bug_id": 2529, "attachment_id": null, "text": "Hi,\nI have found the following problem:\n\nA relative URI in a import namespace statement like \n<xsd:import namespace=\"http://www.w3.org/1999/xlink\" \nschemaLocation=\"xlink.xsd\"/> is resolved to the URI of\nthe XML Source to be parsed and not to the containing\nXML Schema.\n\nRegards\n\nThomas", "id": 3529, "time": "2001-07-09T23:11:19Z", "creator": "thomas2.maesing@bgs-ag.de", "creation_time": "2001-07-09T23:11:19Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 2529, "text": "This is not a bug, this is a default behavior. To overwrite this behavior, \nimplement your own EntityResolver and register it with a parser.\n\nLook also at: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2510", "id": 3544, "time": "2001-07-10T06:20:11Z", "creator": "elena@apache.org", "creation_time": "2001-07-10T06:20:11Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 2529, "text": "I have reopened the bug  because I have a further question:\n\nThe resolveEntity(String publicId, String systemId) method is called with the \nrelative systemId.\n\nHow should this method obtain the absolute URI of the XML Schema which contains\nthis relative URI?\n\nFor implementing your suggestion the method should be called with a\nresolved absolute URI.\n\nRegards\n\nThomas", "id": 3707, "time": "2001-07-13T05:43:48Z", "creator": "thomas2.maesing@bgs-ag.de", "creation_time": "2001-07-13T05:43:48Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 2529, "attachment_id": null, "text": "The resolveEntity method will always be called with an absolute URI when you \ngave the parser a chance to have some absolute base URI for creating absolute \nURI's from relative ones.\n\nIf you use parse(String systemId) you should supply an absolute URI.\n\nIf you use parse(InputSource input) you can use setSystemId at the InputSource \nto set the absolute URI.\n\nWhat you will most likely do in such EntityResolver is either keeping some \nhashtables of public and system identifiers to 'real' locations and than return \nan InputSource created from that 'real' location. For doing this xerces \ncontains an nice base class org.apache.readers.XMLCatalogHandler and the \nXCatalog that can load such mappings from a file using an xml based format.\n\nYou can also use the EntityResolver to handle your own \nvnd.mycompany.myscheme:/.. URI scheme(s) or do both, eg. if you created the \nInputStream using some application specific procedure that doesn\u00b4t map to the \nURI schemes known to xerces like file:// http://.\n\nFor resolving relative to absolute URI\u00b4s have a look at the java.net.URI class \nin JDK1.4 and http://www.ietf.org/rfc/rfc2396.txt \n", "id": 3725, "time": "2001-07-13T16:20:06Z", "creator": "bernd.eilers@sun.com", "creation_time": "2001-07-13T16:20:06Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 2529, "text": "Okay, with your comment it seems to be a problem with the JAXP Implementation.\nI use the method\npublic void parse(java.io.InputStream is,\n                  DefaultHandler dh,\n                  java.lang.String systemId)\n\nof javax.xml.parsers.SAXParser.\n\nThe method is called with this systemId:\nfile:/D:/htdocs/xmledi/xml/ssregw_paper_template.xml\n\nAnd the resolveEntity(String publicId, String systemId) Method than is called \nwith the relative URI \"ssregw_paper.xsd\" which is contained in the InputStream.\n\nI have attched the Java sources. \n", "id": 3731, "time": "2001-07-16T02:40:17Z", "creator": "thomas2.maesing@bgs-ag.de", "creation_time": "2001-07-16T02:40:17Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 2529, "text": "Created attachment 319\nclass used for validation", "id": 3732, "attachment_id": 319, "creator": "thomas2.maesing@bgs-ag.de", "creation_time": "2001-07-16T02:41:51Z", "time": "2001-07-16T02:41:51Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 2529, "text": "Created attachment 320\nclass used as DefaultHandler", "id": 3733, "attachment_id": 320, "creator": "thomas2.maesing@bgs-ag.de", "creation_time": "2001-07-16T02:42:58Z", "time": "2001-07-16T02:42:58Z", "is_private": false}]