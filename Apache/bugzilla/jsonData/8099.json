[{"count": 0, "tags": [], "bug_id": 8099, "attachment_id": null, "is_private": false, "id": 13616, "time": "2002-04-15T12:30:08Z", "creator": "mossgraber@iitb.fhg.de", "creation_time": "2002-04-15T12:30:08Z", "text": "(Applies also to Tomcat 3.2 / 3.3)\n\nIf Tomcat us running standalone the DefaultServlet serves also the\nwelcome pages. To do this it does a redirect to the welcome page,\ne.g.:\n\n  http://localhost/\n\nis redirected to:\n\n  http://localhost/index.html\n\nThe problem is if a query string is present only the information of\nthe query string which is of the type \"param1=attr1&...&paramN=attrN\"\nis redirected.\nIf am doing something like:\n\n  http://localhost/?20\n\nthe result is:\n\n  http://localhost/index.html\n\nand not:\n\n  http://localhost/index.html?20\n\nNeither the URL specification (RFC1738) nor the HTTP specification states\nthat the query string must be of the form \"param1=attr1&...&paramN=attrN\".\n\nI did a simple patch to the DefaultServlet which simply adds the query string\nto the redirect, which is also simpler and faster:\n\n\n    protected String appendParameters(HttpServletRequest request,\n                                      String redirectPath) {\n\n        StringBuffer result = new StringBuffer(rewriteUrl(redirectPath));\n// PATCHED\n\t\t\t\tString query = request.getQueryString ();\n\t\t\t\tif (query != null)\n\t\t\t\t\tresult.append (\"?\").append (query);\n\n/*        Enumeration enum = request.getParameterNames();\n        if (enum.hasMoreElements())\n            result.append(\"?\");\n\n        while (enum.hasMoreElements()) {\n            String name = (String) enum.nextElement();\n            String[] values = request.getParameterValues(name);\n            for (int i = 0; i < values.length; i++) {\n                result.append(rewriteUrl(name));\n                result.append(\"=\");\n                result.append(rewriteUrl(values[i]));\n                if (i < (values.length - 1))\n                    result.append(\"&\");\n            }\n            if (enum.hasMoreElements())\n                result.append(\"&\");\n        }*/\n\n        return result.toString();\n\n    }\n\n\nBy the way I did also a patch which serves the welcome page directly instead\nof doing a redirect (This is also the behaviour of the Apache Web Server).\nTo do this replace line 1087ff of DefaultServlet.java:\n\n  redirectPath = appendParameters(request, redirectPath);\n  response.sendRedirect(redirectPath);\n  return;\n\nwith\n\n  resourceInfo.set (redirectPath, resources);"}, {"count": 1, "tags": [], "bug_id": 8099, "attachment_id": null, "text": "No, and this will not be fixed.\nThe query string you're appending is not URL encoded, which generates invalid \nURIs. If you URL-encode it, this will break the parameters parsing ('=' would \nget encoded). That's why the query string is reconstructed instead of directly \nreused.", "id": 13638, "time": "2002-04-15T15:34:59Z", "creator": "remm@apache.org", "creation_time": "2002-04-15T15:34:59Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 8099, "attachment_id": null, "text": "First thanks for your quick reply.\nWhy is my query string not URL encoded ? RFC 1738 states:\n\n\"Thus, only alphanumerics, the special characters \"$-_.+!*'(),\", and\n reserved characters used for their reserved purposes may be used\n unencoded within a URL.\"\n\nThe query string \"?20\" only contains alphanumerics and a reserved character\nso it is already URL encoded. \n\nThe HTTP/1.1 specification simply states a query string as:\n  query = *( uchar | reserved )\n\nI could nowhere find a reference where it is stated that the query string must\nbe of type: param1=attr1&...&paramN=attrN\n\nLet me explain why this is a serious problem for us. We are devloping a web\ncontent mangement system which is running a quite a few sites by now. In\nour system you can access a web page directly py typing http://servername/?id\nwhere id is the id of the web page (called an entry in our system). Our users\nare used to this and there are also a lot of URLs public which use this. So\nthere is no way to change this for us at the moment. Apache Web Server with the\nold JServ handles this fine and also customers running eg. ServletExec have no\nproblems.\nSo the only workarounds for us at the moment is to run Tomcat with Apache which \ndoes also the job but we would like to go with simply Tomcat because of an \neasier configuration. The second solution is to patch Tomcat which works fine,\nbut we don't want to do this with every Tomcat update.\n\nIf you can convince me that there is a spec somewhere which states that the\nquery string is wrong I will shut up ;-) But this is really a blocker for us.\n\nThanks for your help.", "id": 13730, "time": "2002-04-16T07:14:17Z", "creator": "mossgraber@iitb.fhg.de", "creation_time": "2002-04-16T07:14:17Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 8099, "attachment_id": null, "text": "Ok, ok, I've checked in the code, and the queryString doesn't have any URL \ndecoding done (at least in Coyote). So I don't see a reason why the patch \nwouldn't work.", "id": 13743, "time": "2002-04-16T09:25:04Z", "creator": "remm@apache.org", "creation_time": "2002-04-16T09:25:04Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 8099, "attachment_id": null, "text": "I applied the patch, after testing that the issue I mentioned did not exist.\nThe nightly build for 04/17 will include the fix.", "id": 13755, "time": "2002-04-16T10:36:12Z", "creator": "remm@apache.org", "creation_time": "2002-04-16T10:36:12Z", "is_private": false}, {"count": 5, "tags": [], "creator": "mossgraber@iitb.fhg.de", "attachment_id": null, "is_private": false, "id": 13757, "time": "2002-04-16T11:22:09Z", "bug_id": 8099, "creation_time": "2002-04-16T11:22:09Z", "text": "Thank you VERY much !"}, {"count": 6, "tags": [], "bug_id": 8099, "attachment_id": null, "text": "The fix is not included in the final release of Tomcat 4.0.4.", "id": 18035, "time": "2002-06-19T08:18:42Z", "creator": "mossgraber@iitb.fhg.de", "creation_time": "2002-06-19T08:18:42Z", "is_private": false}, {"count": 7, "text": "The patch is only present in the 4.1.x releases. Depending on how much more life\nthe 4.0.x branch has, it will or will not be ported.", "bug_id": 8099, "is_private": false, "id": 18036, "time": "2002-06-19T08:54:38Z", "creator": "remm@apache.org", "creation_time": "2002-06-19T08:54:38Z", "tags": [], "attachment_id": null}, {"count": 8, "tags": [], "creator": "remm@apache.org", "attachment_id": null, "id": 35772, "time": "2003-04-22T11:57:07Z", "bug_id": 8099, "creation_time": "2003-04-22T11:57:07Z", "is_private": false, "text": "This has been fixed in 4.1.x."}]