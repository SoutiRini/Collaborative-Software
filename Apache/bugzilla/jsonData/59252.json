[{"count": 0, "tags": [], "creator": "tiparega@gmail.com", "text": "As speciffied in OPCPackage API: https://poi.apache.org/apidocs/org/apache/poi/openxml4j/opc/OPCPackage.html#close%28%29\nclose should save an Excel file if writable, but it doesn't.\nInstead, you need to save to a second file, and then it saves also the original one.\nIt happens the same (at least) if created with WorkbookFactory.create or OPCPackage.open with Write permissions.\n\nI wrote a basic test:\n\n//Create excel file\nFile file= new File(\"C:\\\\file2.xlsx\");\nWorkbook wbx= new XSSFWorkbook();\nwbx.createSheet();\nSheet s= wbx.getSheetAt(0);\nRow r= s.createRow(0);\nCell c= r.createCell(0);\nc.setCellType(Cell.CELL_TYPE_STRING);\nc.setCellValue(\"Wrong\");\nOutputStream os= new FileOutputStream(file);\nwbx.write(os);\nwbx.close();\n\n//Update Excel file\nwbx= WorkbookFactory.create(file, null, false);\n/*OR \nOPCPackage pkg = OPCPackage.open(file,PackageAccess.READ_WRITE);\nwbx= new XSSFWorkbook(pkg);\n*/\n\ns= wbx.getSheetAt(0);\nr= s.getRow(0);\nc= r.getCell(0);\nc.setCellValue(\"Right\");\n\n//Without this, now it doesn't save\n/*\nFile trash= File.createTempFile(\"basura\", \".tmp\");\nFileOutputStream trahsOs= new FileOutputStream(trash);\nwbx.write(trahsOs);\ntrahsOs.close();\ntrash.delete();\n*/\n\n//This should save the file\nwbx.close();\n\n\n//Reopen and check\nwbx= WorkbookFactory.create(file, null, false);\ns= wbx.getSheetAt(0);\nr= s.getRow(0);\nc= r.getCell(0);\nString value= c.getStringCellValue();\nwbx.close();\n\nassert(\"Right\".equals(value));", "id": 189838, "time": "2016-03-30T17:12:57Z", "bug_id": 59252, "creation_time": "2016-03-30T17:12:57Z", "is_private": false, "attachment_id": null}, {"attachment_id": null, "tags": [], "bug_id": 59252, "text": "Since you're using File and not FileInputStream, it should write back to disk.\n\nSee bug 58779. If you open the file through a FileInputStream vs File with WorkbookFactory.create(File|FileInputStream) or XSSFWorkbook(File|FileInputStream), or OPCPackage(File|FileInputStream) you get different behavior. Saving to an input stream does nothing to the file system.\n\nI'm thinking about changing the behavior of close to not save changes to disk, but have not decided yet.", "count": 1, "id": 189839, "time": "2016-03-30T17:29:59Z", "creator": "onealj@apache.org", "creation_time": "2016-03-30T17:29:59Z", "is_private": false}, {"count": 2, "tags": [], "creator": "apache@gagravarr.org", "text": "OPCPackage has always supported in-place write for Files. OPOIFS never did, while NPOIFS now does. Because OPOIFS never did, and that's all we had for agest, the usermodel APIs never did either\n\nNow that the default POIFS is NPOIFS which does, there has been talk of adding in-place write at the usermodel level (eg XSSFWorkbook.write() / HSSFWorkbook.write() in addition to the write(OutputStream) method), but no-one has so far volunteered to do the work to implement", "id": 189840, "time": "2016-03-30T17:43:04Z", "bug_id": 59252, "creation_time": "2016-03-30T17:43:04Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 59252, "attachment_id": null, "text": "Ok,I think I understand your point, close() shouldn't save to file (and I actually agree with that) but what I'm saing its that it actually doesn't save on close() with 3.14 release unless you call write(FileOutputStream).\nYou said it should be saving to file as from now but it's not.\nMay be I didn't understood your answers.\nI'll try to take a look to source conde (I hope I can follow it), but I would like to clarify if that test I wrote should be working at 3.14 release or not.", "id": 189843, "time": "2016-03-30T18:45:24Z", "creator": "tiparega@gmail.com", "creation_time": "2016-03-30T18:45:24Z", "is_private": false}, {"count": 4, "tags": [], "creator": "tiparega@gmail.com", "text": "Ok, I took a look over source code and found the problem.\n\nThis is method write(OutputStream) in POIXMLDocument:\npublic final void write(OutputStream stream) throws IOException {\n\t//force all children to commit their changes into the underlying OOXML Package\n\tSet<PackagePart> context = new HashSet<PackagePart>();\n\tonSave(context);\n\tcontext.clear();\n\n\t//save extended and custom properties\n\tgetProperties().commit();\n\n\tgetPackage().save(stream);\n}\n\nKey is the properties commit, that it's not done on close() method, so package doesn't notice any change.\nTo test this, I updated my code so instead doing this:\nFile trash= File.createTempFile(\"basura\", \".tmp\");\nFileOutputStream trahsOs= new FileOutputStream(trash);\nwbx.write(trahsOs);\ntrahsOs.close();\ntrash.delete();\n\nIt's enough to call with null and catch the Exception:\ntry {\n\twbx.write(null);\n} catch (Exception e) {}\n\nDo you think it could be right to change close() from:\npublic void close() throws IOException {\n\tif (pkg != null) {\n\t\tif (pkg.getPackageAccess() == PackageAccess.READ) {\n\t\t\tpkg.revert();\n\t\t} else {\n\t\t\tpkg.close();\n\t\t}\n\t\tpkg= null;\n\t}\n}\n\nto:\npublic void close() throws IOException {\n\tif (pkg != null) {\n\t\tif (pkg.getPackageAccess() == PackageAccess.READ) {\n\t\t\tpkg.revert();\n\t\t} else {\n\t\t\t// force all children to commit their changes into the underlying OOXML Package\n\t\t\tSet<PackagePart> context= new HashSet<PackagePart>();\n\t\t\tonSave(context);\n\t\t\tcontext.clear();\n\n\t\t\t// save extended and custom properties\n\t\t\tgetProperties().commit();\n\t\t\tpkg.close();\n\t\t}\n\t\tpkg= null;\n\t}\n}\n\nThat leaving the close() discussion for other moment.", "id": 189849, "time": "2016-03-30T20:45:05Z", "bug_id": 59252, "creation_time": "2016-03-30T20:45:05Z", "is_private": false, "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 59252, "attachment_id": null, "text": "Testing the change to POIXMLDocument.close from comment 4, I got an error on TestXSSFBugs.bug45431 (which relates to a macro-enabled workbook):\n\"Rule M2.4 exception : this error should NEVER happen!\"\nFull stack trace: https://paste.apache.org/MU6J\n\nContentTypeManager.getContentType throws the exception\nCode: http://svn.apache.org/viewvc/poi/trunk/src/ooxml/java/org/apache/poi/openxml4j/opc/internal/ContentTypeManager.java?revision=1722433&view=markup#l323\n\nAccording to the javadocs for getContentType:\n@exception OpenXML4JRuntimeException\nThrows if the content type manager is not able to find the content from an existing part.", "id": 189854, "time": "2016-03-31T06:34:25Z", "creator": "onealj@apache.org", "creation_time": "2016-03-31T06:34:25Z", "is_private": false}]