[{"count": 0, "tags": [], "bug_id": 54395, "text": "The parameter value for a JdbcInterceptor config is parsed incorrectly if there is any white-space following the closing parentheses (it includes the closing paren in the parameter value).\n\nI will be attaching two items momentarily:\n  * a patch to resolve the issue\n  * a unit test that fails in TRUNK but passes post-patch.\n\nThe parser can behave unpredictably in several other boundary cases (extra white-space, spurious semicolons, empty parm lists, etc.) so I have attempted to document the current behavior in the unit test for clarity.  It may be worth considering a more uniform response to incorrect config(s), but I skipped that here to keep it simple.  I may submit an enhancement request later (with some suggestions as a patch).", "id": 164530, "time": "2013-01-09T20:51:23Z", "creator": "inetdevboy+apache@gmail.com", "creation_time": "2013-01-09T20:51:23Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 54395, "text": "Created attachment 29833\nPatch for PoolProperties.java", "id": 164532, "time": "2013-01-09T20:53:10Z", "creator": "inetdevboy+apache@gmail.com", "creation_time": "2013-01-09T20:53:10Z", "is_private": false, "attachment_id": 29833}, {"attachment_id": 29835, "tags": [], "bug_id": 54395, "text": "Created attachment 29835\nNew unit test for parser", "count": 2, "id": 164535, "time": "2013-01-09T20:54:37Z", "creator": "inetdevboy+apache@gmail.com", "creation_time": "2013-01-09T20:54:37Z", "is_private": false}, {"attachment_id": null, "tags": [], "bug_id": 54395, "text": "FWIW, test cases using the following idiom:\n\n\t\t\tcaught = null;\n\t\t\ttry {\n\t\t\t\tprops.getJdbcInterceptorsAsArray();\n\t\t\t} catch (Exception e) {\n\t\t\t\tcaught = e;\n\t\t\t}\n\t\t\tassertNull(caught);\n\ncan be written somewhat more simply like this:\n\n\t\t\ttry {\n\t\t\t\tprops.getJdbcInterceptorsAsArray();\n\t\t\t} catch (Exception e) {\n                            assertFail(\"Didn't expect exception\");\n\t\t\t}\n\nLikewise:\n\t\t\tcaught = null;\n\t\t\ttry {\n\t\t\t\tprops.getJdbcInterceptorsAsArray();\n\t\t\t} catch (Exception e) {\n\t\t\t\tcaught = e;\n\t\t\t}\n\t\t\tassertNotNull(caught);\n\ncan be written like this:\n\n\t\t\ttry {\n\t\t\t\tprops.getJdbcInterceptorsAsArray();\n                                assertFail(\"Expected Exception\");\n\t\t\t} catch (Exception e) {\n                                // Expected\n\t\t\t}", "count": 3, "id": 164536, "time": "2013-01-09T21:22:34Z", "creator": "chris@christopherschultz.net", "creation_time": "2013-01-09T21:22:34Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 54395, "text": "Created attachment 29836\nUpdated unit test per comments\n\nWell, the JUnit 3.8.1 pulled in by Maven doesn't have an \"assertFail(String)\" method, but I think the \"fail(String)\" alternative is there in spirit.  Point(s) taken, unit test attachment updated.\n\nI had been doing more with the Exception in case 1, and didn't refactor far enough when that changed, and case 2 was copy/paste laziness (blah,blah).  Thanks for the good suggestions.", "id": 164538, "attachment_id": 29836, "creator": "inetdevboy+apache@gmail.com", "creation_time": "2013-01-09T21:37:14Z", "time": "2013-01-09T21:37:14Z", "is_private": false}, {"count": 5, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "id": 164540, "time": "2013-01-09T23:34:12Z", "bug_id": 54395, "creation_time": "2013-01-09T23:34:12Z", "is_private": false, "text": "(In reply to comment #3)\n> FWIW, test cases using the following idiom:\n> (..)\n> can be written somewhat more simply like this:\n> \n> \t\t\ttry {\n> \t\t\t\tprops.getJdbcInterceptorsAsArray();\n> \t\t\t} catch (Exception e) {\n>                             assertFail(\"Didn't expect exception\");\n> \t\t\t}\n\n1. Just add \"throws Exception\" to the test method. JUnit notices the thrown exception and the test does not pass.\n\n2. It is the first time I am seeing \"assertFail\". A typo? The method that I know about is called   fail(message) (Assert.fail(..))."}, {"count": 6, "tags": [], "creator": "chris@christopherschultz.net", "attachment_id": null, "text": "Sorry, yes, I meant \"fail()\".\n\nAs for \"throws Exception\" doesn't that change a failure into an \"error\" when JUnit runs?", "id": 164547, "time": "2013-01-10T03:42:31Z", "bug_id": 54395, "creation_time": "2013-01-10T03:42:31Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 54395, "text": "Love nothing more than receiving tests\n\nThe assertions are backwards (parameters swapped), other than that looks great.\norg.junit.ComparisonFailure: \nExpected :value2 )\nActual   :value2\n\nThanks for the report\nFixed in r1616599", "id": 176997, "time": "2014-08-07T21:32:42Z", "creator": "fhanik@apache.org", "creation_time": "2014-08-07T21:32:42Z", "is_private": false, "attachment_id": null}]