[{"count": 0, "tags": [], "creator": "marc.stern@approach.be", "attachment_id": null, "id": 126321, "time": "2009-04-17T02:23:50Z", "bug_id": 47043, "creation_time": "2009-04-17T02:23:50Z", "is_private": false, "text": "In ssl_engine_kernel.c, line 1475 in ssl_callback_SSLVerify_CRL(), we reinitialise a new CRL by calling object SSL_X509_STORE_lookup().\nThis was already performed at the beginning of the function (line 1391).\nI don't see any modification of the structure - except the free on line 1467.\nIt seems safe to reuse the first one instead of cleaning it and reusing it.\n\nWe could delete lines 1467 to 1479: cleanup, initialisation, test of result"}, {"count": 1, "tags": [], "text": "Please compare the lines and the comments more closely:\n\nThis one is about the CRL for the subject.\n\n    /*\n     * Try to retrieve a CRL corresponding to the _subject_ of\n     * the current certificate in order to verify it's integrity.\n     */\n    memset((char *)&obj, 0, sizeof(obj));\n    rc = SSL_X509_STORE_lookup(mctx->crl,\n                               X509_LU_CRL, subject, &obj);\n    crl = obj.data.crl;\n\n\nThe next one is about the CRL for the issuer.\n\n    /*\n     * Try to retrieve a CRL corresponding to the _issuer_ of\n     * the current certificate in order to check for revocation.\n     */\n    memset((char *)&obj, 0, sizeof(obj));\n    rc = SSL_X509_STORE_lookup(mctx->crl,\n                               X509_LU_CRL, issuer, &obj);\n\n    crl = obj.data.crl;", "attachment_id": null, "id": 126323, "creation_time": "2009-04-17T03:43:43Z", "time": "2009-04-17T03:43:43Z", "creator": "rpluem@apache.org", "bug_id": 47043, "is_private": false}]