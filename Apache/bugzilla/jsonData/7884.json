[{"count": 0, "tags": [], "bug_id": 7884, "text": "If an XML input source contains an EOF in a CDATA section behind the \nclosing ']]', but without the closing '>`, crimson goes into an infinite loop.\n\n To reproduce this bug, one could try to parse something like\n\n   \"<foo><![CDATA[foobar]]\"\n\nSure this is not wellformed, but an endless loop is not the best possible\nthing to react to such input one could imagine. I will attach a small sample \nprogram which triggers the bug.\n\n A short analysis of the problem shows that the program loops within\nthe org.apache.crimson.parser.InputEntity in the method \"unparsedContent\".\n\n The reason for the endless loop semms to be:\n   - while scanning the visible part of the input in the CDATA section,\n     the parser runs into a ']', and wants to check, if a `]>` is following.\n     however, there are less than 2 characters following, thus\n     if breaks out the inner for loop over the chars in the buffer, leaving\n     the \"last\" cursor on the first ']'\n   - the outer for loop sets \"start=last\"; thus the start cursor points to \n     the first ']' now.\n   - afterwards it tries to read more characters into the buffer\n     by calling \"fillbuf\", which most probably does nothing, because the second\n     ']' is alrady read in, and there in nothing else to read.\n   - then the outer loop checks for EOF; however it does so by testing\n     \"start >= finish\", which is not true, because start points to the\n      first ']' and finish points to the second ']', thus start == finish-1\n   - guessing that EOF is not reached, the inner loop is entered again;\n     reading the first ']'  bailes out of this loop, etc, ad infinitum\n\n I have a very small fix for that by testing not only \"isEOF()\" in the outer \nloop, but also testing, if the last \"fillbuf\" actually has read something, \nby inspecting the \"isClosed\" instance variable.\n  This fixes the bug; however I an not sure if this may break something else.", "id": 13118, "time": "2002-04-09T18:17:49Z", "creator": "clerob@infonie.de", "creation_time": "2002-04-09T18:17:49Z", "is_private": false, "attachment_id": null}, {"attachment_id": 1509, "tags": [], "bug_id": 7884, "text": "Created attachment 1509\ntest program which should trigger this bug", "count": 1, "id": 13119, "time": "2002-04-09T18:20:04Z", "creator": "clerob@infonie.de", "creation_time": "2002-04-09T18:20:04Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 7884, "attachment_id": 1510, "id": 13120, "time": "2002-04-09T18:20:58Z", "creator": "clerob@infonie.de", "creation_time": "2002-04-09T18:20:58Z", "is_private": false, "text": "Created attachment 1510\nproposed patch"}, {"attachment_id": 1521, "tags": [], "bug_id": 7884, "text": "Created attachment 1521\nalternative patch (should make a smaller fix)", "count": 3, "id": 13244, "time": "2002-04-11T14:16:13Z", "creator": "clerob@infonie.de", "creation_time": "2002-04-11T14:16:13Z", "is_private": false}]