[{"count": 0, "tags": [], "text": "String command = \"start\";\nif (args.length > 0) {\n    command = args[args.length - 1];\n}\n\nif (command.equals(\"startd\")) {\n    args[0] = \"start\";\n    daemon.load(args);\n    daemon.start();\n} else if (command.equals(\"stopd\")) {\n    args[0] = \"stop\";\n    daemon.stop();\n} \n... ...\n\n\nshould be: \n\nString command = \"start\";\nif (args.length > 0) {\n    command = args[args.length - 1];\n}\nif (command.equals(\"startd\")) {\n    args[args.length - 1] = \"start\";\n    daemon.load(args);\n    daemon.start();\n} else if (command.equals(\"stopd\")) {\n    args[args.length - 1] = \"stop\";\n    daemon.stop();\n} \n... ...\n\nPlease refer to the following usage method of  org.apache.catalina.startup.Catalina:\nprotected void usage() {\n\n        System.out.println\n            (\"usage: java org.apache.catalina.startup.Catalina\"\n             + \" [ -config {pathname} ]\"\n             + \" [ -nonaming ] { start | stop }\");\n\n    }", "attachment_id": null, "id": 130547, "creation_time": "2009-09-20T19:14:04Z", "time": "2009-09-20T19:14:04Z", "creator": "qingyang.xu@qunar.com", "bug_id": 47881, "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 47881, "text": "Actually, I do not see startd and stopd commands to be documented anywhere. Maybe we can just safely remove them?\n\nWith startd, Tomcat will exit immediately upon startup. Though it may be useful for testing config files.\n\nWith stopd ... you cannot stop server that is not running.\n\nAnd if you have an instance of Bootstrap, you can call load/start/stop directly, not relying on how Bootstrap#main() parses the arguments.\n\nRegarding the patch: args are not used in \"stopd\", that line can be omitted completely, or we can do as OP proposes. Regarding \"startd\": yes, the fix is correct.", "id": 130978, "time": "2009-10-08T05:31:24Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2009-10-08T05:31:24Z", "tags": [], "is_private": false}, {"count": 2, "attachment_id": null, "bug_id": 47881, "text": "(In reply to comment #1)\n> Actually, I do not see startd and stopd commands to be documented anywhere.\n> Maybe we can just safely remove them?\n> \n> With startd, Tomcat will exit immediately upon startup. Though it may be useful\n> for testing config files.\n> \n> With stopd ... you cannot stop server that is not running.\n> \n> And if you have an instance of Bootstrap, you can call load/start/stop\n> directly, not relying on how Bootstrap#main() parses the arguments.\n> \n> Regarding the patch: args are not used in \"stopd\", that line can be omitted\n> completely, or we can do as OP proposes. Regarding \"startd\": yes, the fix is\n> correct.\n\n(In reply to comment #1)\n> Actually, I do not see startd and stopd commands to be documented anywhere.\n> Maybe we can just safely remove them?\n> \n> With startd, Tomcat will exit immediately upon startup. Though it may be useful\n> for testing config files.\n> \n> With stopd ... you cannot stop server that is not running.\n> \n> And if you have an instance of Bootstrap, you can call load/start/stop\n> directly, not relying on how Bootstrap#main() parses the arguments.\n> \n> Regarding the patch: args are not used in \"stopd\", that line can be omitted\n> completely, or we can do as OP proposes. Regarding \"startd\": yes, the fix is\n> correct.\n\nThe only difference between 'startd' and 'start' is that 'startd' doesn't invoke Catalina's await() method after the server has been started, or 'startd' doesn't need to allocate a 'SHUTDOWN' port to listening to be sent a 'SHUTDOWN' message. 'stopd' is the counterpart of 'stop'. If tomcat is started by 'startd', you must invoke 'stopd' to shutdown it, otherwise the server can't  be stopped, because 'stop' invoke Catalina's stopServer() method, which relies on the allocated 'SHUTDOWN' port exclusively. On the contrary, 'stopd' invokes Catalina's stop() method instead, which invoke server's stop() method directly. Below is the two different methods invoked by 'stop' and 'stopd':\n\n\n//invoked by 'stop'\npublic void stopServer() {\n        stopServer(null);\n    }\n\n    public void stopServer(String[] arguments) {\n\n        if (arguments != null) {\n            arguments(arguments);\n        }\n\n        if( server == null ) {\n            // Create and execute our Digester\n            Digester digester = createStopDigester();\n            digester.setClassLoader(Thread.currentThread().getContextClassLoader());\n            File file = configFile();\n            try {\n                InputSource is =\n                    new InputSource(\"file://\" + file.getAbsolutePath());\n                FileInputStream fis = new FileInputStream(file);\n                is.setByteStream(fis);\n                digester.push(this);\n                digester.parse(is);\n                fis.close();\n            } catch (Exception e) {\n                log.error(\"Catalina.stop: \", e);\n                System.exit(1);\n            }\n        }\n\n        // Stop the existing server\n        try {\n            if (server.getPort()>0) {\n            \tString hostAddress = InetAddress.getByName(\"localhost\").getHostAddress();\n            \tSocket socket = new Socket(hostAddress, server.getPort());\n            \tOutputStream stream = socket.getOutputStream();\n            \tString shutdown = server.getShutdown();\n            \tfor (int i = 0; i < shutdown.length(); i++)\n            \t\tstream.write(shutdown.charAt(i));\n            \tstream.flush();\n            \tstream.close();\n            \tsocket.close();\n            } else {\n                log.error(sm.getString(\"catalina.stopServer\"));\n                System.exit(1);\n            }\n        } catch (IOException e) {\n            log.error(\"Catalina.stop: \", e);\n            System.exit(1);\n        }\n\n    }\n\n\n    // invoked by 'stopd'\n    public void stop() {\n\n        try {\n            // Remove the ShutdownHook first so that server.stop() \n            // doesn't get invoked twice\n            if (useShutdownHook) {\n                Runtime.getRuntime().removeShutdownHook(shutdownHook);\n            }\n        } catch (Throwable t) {\n            // This will fail on JDK 1.2. Ignoring, as Tomcat can run\n            // fine without the shutdown hook.\n        }\n\n        // Shut down the server\n        if (server instanceof Lifecycle) {\n            try {\n                ((Lifecycle) server).stop();\n            } catch (LifecycleException e) {\n                log.error(\"Catalina.stop\", e);\n            }\n        }\n\n    }\n\n\nMy suggestion: We don't need to remove 'startd' and 'stopd', they are useful in some situations. The only place we need to correct is the Bootstrap's main() method, as in the patches I have submitted. Thanks!", "id": 131004, "time": "2009-10-08T16:20:38Z", "creator": "qingyang.xu@qunar.com", "creation_time": "2009-10-08T16:20:38Z", "tags": [], "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 47881, "text": "With \"startd\", as there is no \"await\", the method completes immediately (and the application quits).\n\nThat it is only useful if exiting that \"main\" method does not complete the application. Thus if it is not the actual entry point of the application. If so, does anyone need to use it that way?", "id": 131023, "time": "2009-10-09T01:42:03Z", "creator": "knst.kolinko@gmail.com", "creation_time": "2009-10-09T01:42:03Z", "tags": [], "is_private": false}, {"count": 4, "tags": [], "bug_id": 47881, "attachment_id": null, "id": 131024, "time": "2009-10-09T02:00:01Z", "creator": "qingyang.xu@qunar.com", "creation_time": "2009-10-09T02:00:01Z", "is_private": false, "text": "(In reply to comment #3)\n> With \"startd\", as there is no \"await\", the method completes immediately (and\n> the application quits).\n> \n> That it is only useful if exiting that \"main\" method does not complete the\n> application. Thus if it is not the actual entry point of the application. If\n> so, does anyone need to use it that way?\n\nYes, you are totally right. After the main method ends, all the daemon threads (such as 'http-8080-Acceptor-0', 'TP-Processor', etc.) will end too. I never thought of this consequence. So, what's the point of 'startd' and 'stopd', anyway?"}, {"count": 5, "tags": [], "text": "(In reply to comment #4)\n> (In reply to comment #3)\n> > With \"startd\", as there is no \"await\", the method completes immediately (and\n> > the application quits).\n> > \n> > That it is only useful if exiting that \"main\" method does not complete the\n> > application. Thus if it is not the actual entry point of the application. If\n> > so, does anyone need to use it that way?\n> \n> Yes, you are totally right. After the main method ends, all the daemon threads\n> (such as 'http-8080-Acceptor-0', 'TP-Processor', etc.) will end too. I never\n> thought of this consequence. So, what's the point of 'startd' and 'stopd',\n> anyway?\n\npublic static void main(String[] args) can be called from another Java class, its not exclusive to the JVM\n\nIt would be a different way of embedding Tomcat, at which point one wants the thread to return", "attachment_id": null, "id": 131029, "creator": "fhanik@apache.org", "time": "2009-10-09T06:48:53Z", "bug_id": 47881, "creation_time": "2009-10-09T06:48:53Z", "is_private": false}, {"count": 6, "tags": [], "creator": "qingyang.xu@qunar.com", "attachment_id": null, "text": "> public static void main(String[] args) can be called from another Java class,\n> its not exclusive to the JVM\n> \n> It would be a different way of embedding Tomcat, at which point one wants the\n> thread to return\n\nUnderstood. So my patch is still relevant, right?", "id": 131045, "time": "2009-10-09T18:39:20Z", "bug_id": 47881, "creation_time": "2009-10-09T18:39:20Z", "is_private": false}, {"count": 7, "tags": [], "creator": "qingyang.xu@qunar.com", "attachment_id": null, "text": "\n\n*** This bug has been marked as a duplicate of bug 48059 ***", "id": 131398, "time": "2009-10-26T17:38:23Z", "bug_id": 47881, "creation_time": "2009-10-26T17:38:23Z", "is_private": false}, {"count": 8, "tags": [], "text": "Reduced severity. There is nothing in this issue that makes it \"critical\".", "attachment_id": null, "id": 131555, "creator": "knst.kolinko@gmail.com", "time": "2009-11-02T02:45:38Z", "bug_id": 47881, "creation_time": "2009-11-02T02:45:38Z", "is_private": false}, {"count": 9, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "*** Bug 48059 has been marked as a duplicate of this bug. ***", "id": 131557, "time": "2009-11-02T02:46:05Z", "bug_id": 47881, "creation_time": "2009-11-02T02:46:05Z", "is_private": false}, {"count": 10, "tags": [], "creator": "knst.kolinko@gmail.com", "attachment_id": null, "text": "Fixed in trunk, proposed for TC 6.0", "id": 131559, "time": "2009-11-02T03:04:19Z", "bug_id": 47881, "creation_time": "2009-11-02T03:04:19Z", "is_private": false}, {"count": 11, "attachment_id": null, "bug_id": 47881, "text": "This has been applied to 6.0.x and will be included in 6.0.21 onwards.", "id": 131605, "time": "2009-11-02T16:47:52Z", "creator": "markt@apache.org", "creation_time": "2009-11-02T16:47:52Z", "tags": [], "is_private": false}]