[{"count": 0, "tags": [], "creator": "ian@iosphere.net", "text": "\"basedir\" appears to be derived by countin slashes from current directory\ninstead of counting up for each slash, down for \"..\" and no change for each \".\"\n\nIn particular, for file ~/j/src/ca/gorman/io/build.xml,\n\n  \"ant clean\" works from ~/j/src/ca/gorman/io\n  \"ant -f io/build.xml clean\" works from ~/j/src/ca/gorman\n\n  \"ant -f ../io/build.xml clean\" fails from ~/j/src/ca/gorman/xml\n\nA console log follows.  The echo line reports ${basedir} and the\nexec line is executing a \"pwd\".\n\nIan E. gorman   ian@iosphere.net\n\nian@ian:~/j/src/ca/gorman/io\n>ant -version\nApache Ant version 1.6.1beta1 compiled on January 29 2004\nian@ian:~/j/src/ca/gorman/io\n>ant clean\nBuildfile: build.xml\n\ninit:\n     [echo] /home/ian/j/src\n     [exec] /home/ian/j/src\n\n\n\nsetup:\n\nclean:\n\nclean:\n\nBUILD SUCCESSFUL\nTotal time: 3 seconds\nian@ian:~/j/src/ca/gorman/io\n>cd ..\nian@ian:~/j/src/ca/gorman\n>ant -f io/build.xml clean\nBuildfile: io/build.xml\n\ninit:\n     [echo] /home/ian/j/src\n     [exec] /home/ian/j/src\n\n\n\nsetup:\n\nclean:\n\nclean:\n\nBUILD SUCCESSFUL\nTotal time: 3 seconds\nian@ian:~/j/src/ca/gorman\n>cd xml\nian@ian:~/j/src/ca/gorman/xml\n>ant -f ../io/build.xml clean\nBuildfile: ../io/build.xml\n\ninit:\n     [echo] /home/ian/j/src/ca/gorman\n     [exec] /home/ian/j/src/ca/gorman\n\n\n\nsetup:\n\nclean:\n\nBUILD FAILED\n/home/ian/j/src/ca/gorman/io/build.xml:80: Basedir\n/home/ian/j/src/ca/gorman/ca/gorman/io/demo/doc-files does not exist\n\nTotal time: 1 second\nian@ian:~/j/src/ca/gorman/xml\n>", "id": 51896, "time": "2004-02-07T23:37:05Z", "bug_id": 26765, "creation_time": "2004-02-07T23:37:05Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 26765, "text": "Could you please attach your build file?  Things seem to work for me.", "id": 52050, "time": "2004-02-10T12:35:03Z", "creator": "bodewig@apache.org", "creation_time": "2004-02-10T12:35:03Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 26765, "text": "Build files have been modified since last report.  I have appended a copy \nof the file that produced the following result: \n \nian@ian:~/j/src/ca/gorman/xml \n>ls ../build.xml \n../build.xml \nian@ian:~/j/src/ca/gorman/xml \n>ant ../build.xml clean \nBuildfile: build.xml does not exist! \nBuild failed \nian@ian:~/j/src/ca/gorman/xml \n> \n \n======= build file ===================================== \n<!-- \n    $Id: build.xml,v 1.1 2004/02/10 20:32:55 ian Exp $ \n \n    \"ant\" build file for  GXPARSE \n \n    This file is part of GXPARSE, a general XML parser API. \n    Copyright (C) 2003, 2004  Ian E. Gorman \n \n    This program is free software; you can redistribute it and/or modify \n    it under the terms of the GNU General Public License as published by \n    the Free Software Foundation; either version 2 of the License, or \n    (at your option) any later version. \n \n    This program is distributed in the hope that it will be useful, \n    but WITHOUT ANY WARRANTY; without even the implied warranty of \n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the \n    GNU General Public License for more details. \n     \n    You should have received a copy of the GNU General Public License \n    along with this program; if not, write to the Free Software \n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA \n    or go to http://www.gnu.org/ \n--> \n \n<!-- \n    Build package ca.gorman.xml.parse and subpackages \n    This file should be in the same directory as the Java source files, \n    but can be run from any directory. \n \n    Targets that can be used from command line \n \n        clean       remove all generated files and directories \n        compile     compile to classes to test directories \n        javadoc     generate javadoc for end user \n        javadoc_all generate javadoc for developer \n        ship        pack for shipping to end user \n        setup       create all destination directories \n \n    Targets that should not be used from command line \n \n        init \n \n    Ian E. Gorman \n   \n--> \n \n<project name=\"build_all\" \n         default=\"default\" \n         basedir=\"./../..\"> \n \n  <property name=\"xml.parse.build.file\" \n            value=\"${basedir}/ca/gorman/xml/parse/build.xml\" \n            description=\"xml parse build file\"/> \n  <property name=\"io.build.file\" \n            value=\"${basedir}/ca/gorman/io/build.xml\" \n            description=\"io build file\"/> \n \n  <target name=\"init\"> \n      <tstamp/> \n  </target> \n \n  <target name=\"default\" \n          description=\"Command line help\"> \n    <echo>Build package ${package.name}</echo> \n    <echo>Use \"-projecthelp\" option to get a list of targets</echo> \n    <echo>Additional info in file comments</echo> \n  </target> \n \n  <!-- define destination directories --> \n  <property name=\"source.dir\" \n            value=\"${basedir}\" \n            description=\"java source base directory\"/> \n  <property name=\"lib.dir\" \n            value=\"${basedir}/../lib\" \n            description=\"library base directory\" /> \n  <property name=\"class.dir\" \n            value=\"${basedir}/../cls\" \n            description=\"class base directory\" /> \n  <property name=\"doc.dir\" \n            value=\"${basedir}/../doc\" \n            description=\"javadoc base directory\"/> \n  <property name=\"ship.dir\" \n            value=\"${basedir}/../ship\" \n            description=\"staging and shipping directory\"/> \n  <property name=\"doc.ship.dir\" \n            value=\"${ship.dir}/doc\" \n            description=\"staging and shipping directory\"/> \n  <property name=\"lib.ship.dir\" \n            value=\"${ship.dir}/lib\" \n            description=\"staging and shipping directory\"/> \n  <property name=\"src.ship.dir\" \n            value=\"${ship.dir}/src\" \n            description=\"staging and shipping directory\"/> \n \n  <!-- create destination directories --> \n  <target name=\"setup\" \n          depends=\"init\" \n          description=\"Create target directories\"> \n    <mkdir dir=\"${class.dir}\"/> \n    <mkdir dir=\"${doc.dir}\"/> \n    <mkdir dir=\"${lib.dir}\"/> \n    <mkdir dir=\"${ship.dir}\"/> \n  </target> \n \n  <!-- remove destination directories and generated files --> \n  <target name=\"clean\" \n          description=\"Remove targets\"> \n    <ant antfile=\"${io.build.file}\" \n         target=\"clean\" \n         inheritall=\"true\" \n         description=\"package ca.gorman.io\"/> \n    <ant antfile=\"${xml.parse.build.file}\" \n         target=\"clean\" \n         inheritall=\"false\" \n         description=\"package ca.gorman.xml.parse\"/> \n  </target> \n \n  <!-- compile --> \n  <target name=\"compile\" \n          depends=\"setup\" \n          description=\"Compile source files to classes\"> \n    <ant antfile=\"${io.build.file}\" \n         target=\"compile\" \n         inheritall=\"false\" \n         description=\"package ca.gorman.io\"/> \n    <ant antfile=\"${xml.parse.build.file}\" \n         target=\"compile\" \n         inheritall=\"false\" \n         description=\"package ca.gorman.xml.parse\"/> \n  </target> \n \n  <!-- build --> \n  <target name=\"build\" \n          depends=\"clean, compile\" \n          description=\"clean, then compile source files to classes\"/> \n \n  <!-- document --> \n  <target name=\"javadoc\" \n          depends=\"build\" \n          description=\"Build, then create javadoc for end user\"> \n    <javadoc classpath=\"${class.dir}\" \n             author=\"false\" \n             private=\"false\" \n             additionalparam=\"-source 1.4 -quiet\" \n             destdir=\"${doc.dir}\"> \n      <link href=\"http://java.sun.com/j2se/1.4.2/docs/api/\"/> \n      <package name=\"ca.gorman.io.*\"/> \n      <package name=\"ca.gorman.xml.parse.*\"/> \n      <sourcepath location=\"${source.dir}\"/> \n      <classpath location=\"${class.dir}\"/> \n    </javadoc> \n  </target> \n \n  <!-- document --> \n  <target name=\"javadoc_all\" \n          depends=\"build\" \n          description=\"Build, then create javadoc with all information\"> \n    <javadoc classpath=\"${class.dir}\" \n             author=\"true\" \n             private=\"true\" \n             additionalparam=\"-source 1.4 -quiet\" \n             destdir=\"${doc.dir}\"> \n      <link href=\"http://java.sun.com/j2se/1.4.2/docs/api/\"/> \n      <package name=\"ca.gorman.io.*\"/> \n      <package name=\"ca.gorman.xml.parse.*\"/> \n      <sourcepath location=\"${source.dir}\"/> \n      <classpath location=\"${class.dir}\"/> \n    </javadoc> \n    <copy description=\"Supplementary files for ca.gorman\" \n          todir=\"${doc.dir}/ca/gorman/doc-files\"> \n      <fileset dir=\"${source.dir}/ca/gorman/doc-files\"/> \n    </copy> \n  </target> \n \n  <target name=\"shipdoc\" \n          depends=\"javadoc\"> \n          <!-- description=\"Prepare to ship docs\"--> \n    <delete dir=\"${doc.ship.dir}\" \n            failonerror=\"false\"/> \n    <mkdir dir=\"${doc.ship.dir}\"/> \n    <copy todir=\"${doc.ship.dir}\" \n          preservelastmodified=\"true\"> \n      <fileset dir=\"${doc.dir}\"/> \n    </copy> \n  </target> \n \n  <target name=\"ship\" \n          depends=\"shipdoc\" \n          description=\"Pack for shipment to end user\"> \n  </target> \n \n</project> \n==================================================================== ", "id": 52217, "time": "2004-02-13T01:00:39Z", "creator": "ian@iosphere.net", "creation_time": "2004-02-13T01:00:39Z", "is_private": false, "attachment_id": null}, {"count": 3, "text": "I got this problem to happen:\na build file containing:\n<project basedir=\"../..\">\n  <echo>basedir is \"${basedir}\"</echo>\n</project>\n\n~/learning/a/dotdot/j/src/ca/gorman/io > ant -f build.xml\nbasedir is \"/home/preilly/learning/a/dotdot/j/src/ca\"\n~/learning/a/dotdot/j/src/ca/gorman/io > ant -f ../io/build.xml\nbasedir is \"/home/preilly/learning/a/dotdot/j/src/ca/gorman/io\"\n\nThe problem is that ProjectHelper2 uses File#getAbsolutePath().\ngetAbsolutePath() does not resolve .. and . in the filename, so\nlater when FileUtils.resolveFile is used, it generates an incorrect\npath.\n\nThe solution was to call FileUtils#normalize() on the filename.", "creator": "peter.reilly@corvil.com", "is_private": false, "id": 53793, "time": "2004-03-10T10:00:52Z", "bug_id": 26765, "creation_time": "2004-03-10T10:00:52Z", "tags": [], "attachment_id": null}]