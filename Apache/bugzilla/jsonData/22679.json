[{"count": 0, "tags": [], "bug_id": 22679, "attachment_id": null, "is_private": false, "id": 43209, "time": "2003-08-24T06:50:46Z", "creator": "hauser@acm.org", "creation_time": "2003-08-24T06:50:46Z", "text": "hi, I am using the tomcat SSL engine.\nIn order to avoid session fixation attacks (see more on that in\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=22649), I would like to put\nthe SSL session ID into my jsessionid.\n\nRFE: enhance the \"SSL ho wto\" description at the above URL with a section on how\nto do this.\n\nP.S.: I am aware that this possibly reduces the availability of my application\nas per http://groups.yahoo.com/group/jetty-support/message/2085"}, {"count": 1, "tags": [], "bug_id": 22679, "attachment_id": null, "id": 53491, "time": "2004-03-05T07:31:50Z", "creator": "hauser@acm.org", "creation_time": "2004-03-05T07:31:50Z", "is_private": false, "text": "one example where hijacking is particularly likely when you integrate with\nthird-party applications that after doing their job should send the user back to\nyour own application and you don't want the user to be forced to log into your\nown application again!\nWhile it should be possible to offer such a process to the user of my\napplication, I would like to maintain some level of mutual distrust with that\nthird-party provider.\nOne example of such third-party provider might be paypal with their IPN - see\nrelated post in http://www.paypaldev.org/topic.asp?TOPIC_ID=5255"}, {"count": 2, "text": "This enhancement request has been transferred to Tomcat 5 because:\n- TC4 and TC5 share the connectors\n- TC4 is no longer being developed, only supported", "bug_id": 22679, "attachment_id": null, "id": 59561, "time": "2004-06-19T11:46:12Z", "creator": "markt@apache.org", "creation_time": "2004-06-19T11:46:12Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "bug_id": 22679, "attachment_id": null, "is_private": false, "id": 60923, "time": "2004-07-21T18:29:07Z", "creator": "yoavs@computer.org", "creation_time": "2004-07-21T18:29:07Z", "text": "Please suggest text in patch diff format for \"RFE: enhance the \"SSL ho wto\" \ndescription at the above URL with a section on how\nto do this.\" and we'll consider adding it."}, {"count": 4, "tags": [], "text": "I guess you don't care enough to suggest such text, so I'm closing the item.", "is_private": false, "id": 66131, "creator": "yoavs@computer.org", "time": "2004-10-29T18:43:23Z", "bug_id": 22679, "creation_time": "2004-10-29T18:43:23Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 22679, "attachment_id": null, "id": 66160, "time": "2004-10-30T08:01:14Z", "creator": "hauser@acm.org", "creation_time": "2004-10-30T08:01:14Z", "is_private": false, "text": "I do care, but I don't know the technical solution how to do it. If you tell me\nhow to access the SSL session ID out of my web application, I am happy to\nprovide the text patch you have asked for."}, {"text": "Try \n  String sslID = (String)request.getAttribute\n(\"javax.servlet.request.ssl_session\");\n\n", "tags": [], "creator": "william.barker@wilshire.com", "is_private": false, "count": 6, "id": 66183, "time": "2004-10-30T21:12:44Z", "bug_id": 22679, "creation_time": "2004-10-30T21:12:44Z", "attachment_id": null}, {"count": 7, "tags": [], "bug_id": 22679, "attachment_id": null, "id": 66195, "time": "2004-10-31T08:27:41Z", "creator": "hauser@acm.org", "creation_time": "2004-10-31T08:27:41Z", "is_private": false, "text": "Thanks for the hint, but unfortunately, after tomcat 3.2.\nSSLSupport.SESSION_ID_KEY appears to be no longer present in coyote.\nFor those web-applications that do not use session cookies because quite some\nusers do not want cookies - how are they supposed to protect against session\nhijacking?\nStill, if for example the web application lets paypal's IPN know how to return\ninto an ongoing (url-rewritten) session, one has to trust them not to spoof the\nremoteAddress?"}, {"count": 8, "tags": [], "creator": "william.barker@wilshire.com", "is_private": false, "text": "It seems that Tomcat 3.3.x & 4.1.x work fine.  With Tomcat 5 you need to \naccess a standard attribute to trigger, and then it works fine:\n  request.getAttribute(\"javax.servlet.request.key_size\");\n  String sslID = (String)request.getAttribute\n(\"javax.servlet.request.ssl_session\");\n\nIt's true that TC 3.3 has a setting to deny access to the servlet session if \nthe SSL session doesn't match.  In TC >= 4, it is easy enough to do this type \nof check in a Filter.", "id": 66215, "time": "2004-10-31T21:55:22Z", "bug_id": 22679, "creation_time": "2004-10-31T21:55:22Z", "attachment_id": null}, {"count": 9, "tags": [], "bug_id": 22679, "attachment_id": null, "is_private": false, "id": 66229, "time": "2004-11-01T07:07:40Z", "creator": "hauser@acm.org", "creation_time": "2004-11-01T07:07:40Z", "text": "thx, seems to work!\nHad troubles finding the doc pages in CVS to provide the promised diff patch"}, {"count": 10, "tags": [], "bug_id": 22679, "attachment_id": null, "id": 67139, "time": "2004-11-18T16:01:24Z", "creator": "yoavs@computer.org", "creation_time": "2004-11-18T16:01:24Z", "is_private": false, "text": "Docs enhanced accordingly for Tomcat 5.0.30 and 5.5.5."}, {"count": 11, "tags": [], "text": "thx a lot (also in the name of future security-concerned application\nprogrammers) for honoring this documentation RFE after 15 months (and\nunfortunately having to go through the apparently unavoidable WONTFIX/INVALID\nepisodes  :(  ).\n\nFurthermore, I contend that these functions also will become key to true\nphishing protection as per https://bugzilla.mozilla.org/show_bug.cgi?id=268835!", "attachment_id": null, "id": 67195, "creator": "hauser@acm.org", "time": "2004-11-19T07:11:00Z", "bug_id": 22679, "creation_time": "2004-11-19T07:11:00Z", "is_private": false}, {"count": 12, "attachment_id": null, "creator": "hauser@acm.org", "is_private": false, "id": 69853, "time": "2005-01-20T01:23:25Z", "bug_id": 22679, "creation_time": "2005-01-20T01:23:25Z", "tags": [], "text": "good practice for such a anti-session-hijacking/anti-cross-site scripting is to\nimplement a 2 out of 3 approach: i.e. SSL-session ID, remote IP and user-agent\nare compared between each http request and only if 2 out of 3 remain the same,\nthe login-status is maintained. Not 3 out of 3 because quite some DSL-dynamic IP\nassignments change relatively frequently and users are annoyed if the have to\nre-authenticate often during a session. Similarly, some browsers do not keep an\nSSL session alive for the same duration as a application-user session may last."}, {"count": 13, "tags": [], "bug_id": 22679, "attachment_id": null, "is_private": false, "id": 102268, "time": "2007-04-24T15:49:52Z", "creator": "remm@apache.org", "creation_time": "2007-04-24T15:49:52Z", "text": "It is not possible to change the session id of a session, it has to be asssumed.\nIf you want to submit a valve which would enforce \"better\" security (= a lame\nhack which would pretend to be secure), then I would be ok to commit it and let\nthis bug report live. Despite the dynamic IP thing, I think 3 out of 3 is a\nminimum requirement, despite possible problems (IPs do not change every 5s, so I\ndon't see the point, and if they do, let the user log back in). Otherwise ->\nINVALID."}, {"count": 14, "tags": [], "bug_id": 22679, "attachment_id": null, "id": 109757, "time": "2007-10-25T18:43:08Z", "creator": "lgalfaso@gmail.com", "creation_time": "2007-10-25T18:43:08Z", "is_private": false, "text": "A browser is free to open multiple SSL connections to a single Tomcat, even when\ndoing this might be a performance hit. With this in mind, any way to tie the\nJSESSIONID to the SSL id is not the proper way to prevent session hijacking."}, {"count": 15, "tags": [], "text": "Lucas, you are right that there can be multiple legitimate SSL Session IDs with\none JSESSIONID. So while I stick to the statement that observing the SSL Session\nID is still one good measure against Session Hijacking, if applied alone, it may\nalso lock out legitimate additional SSL sessions. At least for sequentially\nchanging SSL-IDs, we account for with the described \"n-1 our of n\" approach\n(comment 12). So if the other n-1 parameters to considered stay the same, the\nmechanism probably even works with simultanous sessions with IDs A, B, C since\nthe tomcat application for each request will just assume that it is a change\nfrom A->B, then from B->C, C->A and so on - not noticing there are actually\nmultiple simultaneous SSL sessions going on in parallel. Anyway, we have the\napproach in operation since months with hundreds of users and no problems.", "is_private": false, "id": 109762, "creator": "hauser@acm.org", "time": "2007-10-25T20:06:56Z", "bug_id": 22679, "creation_time": "2007-10-25T20:06:56Z", "attachment_id": null}, {"count": 16, "text": "(In reply to comment #15)\n\nRalf,\n  I understand that Tomcat should provide ways to prevent session hijacking, but\nbuilding something into Tomcat to associate a jsessionid with the ssl id is not\nthe solution. This may be an interesting issue for the Tomcat dev list, but this\nis not a bug.\n  You can have the same behavior that you are asking to be build in into Tomcat\nusing a filter that is specific to your application, and I am somehow inclined\ninto not building into Tomcat something that prevents browsers work within the\nspecs.\n", "creator": "lgalfaso@gmail.com", "is_private": false, "id": 109801, "time": "2007-10-26T07:39:46Z", "bug_id": 22679, "creation_time": "2007-10-26T07:39:46Z", "tags": [], "attachment_id": null}, {"count": 17, "tags": [], "text": "In TC 3.3 this is a setting, and in TC >= 4.x, it is easy enough to implement \nthis as a Filter.  I don't see that it is useful to implement this \"feature\" \nin the core Tomcat code, especially since it may break perfectly valid SSL \nconnections.", "attachment_id": null, "id": 112273, "creator": "william.barker@wilshire.com", "time": "2007-12-28T21:01:40Z", "bug_id": 22679, "creation_time": "2007-12-28T21:01:40Z", "is_private": false}]