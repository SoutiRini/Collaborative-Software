[{"count": 0, "tags": [], "creator": "dgreer@fedex.com", "text": "I have a project in which a top level build.xml calls subdirectories\neach containing their own build.xml.  When one of these build.xml attemts\nto use the <exec> target to execute a script in one of its subdirectories, a\njava.io.IOException is thrown because it can't find the script.  I've tried\nprinting out the ${basedir} property which looks fine before the point of\nexecution.  I've also executed the UNIX \"pwd\" command which indicates I'm in the\nright subdirectory.  I can't really pinpoint what the problem is.  Here is an\nexample of what I'm doing:\n\n[directory bugexample]\n----- begin build.xml snippet --------\n<target name=\"build\" description=\"default target\">\n    <antcall target=\"submodules\">\n        <param name=\"target\" value=\"build\"/>\n    </antcall>\n</target>\n\n<target name=\"submodules\">\n    <echo>[Module test - target: ${target}]</echo>\n    <ant dir=\"test\" target=\"${target}\"/>\n</target>\n----- end build.xml snippet --------\n\n[directory bugexample/test]\n----- begin build.xml snippet --------\n<target name=\"build\" description=\"build this package\">\n    <exec executable=\"testdir/test.sh\"/>\n</target>\n----- end build.xml snippet --------\n\n[directory bugexample/test/testdir]\n[filename: test.sh]\n------ begin test.sh source ----\n#!/bin/sh\n\necho \"hello world!\"\n-------end test.sh source ------", "id": 26134, "time": "2002-11-12T15:44:25Z", "bug_id": 14475, "creation_time": "2002-11-12T15:44:25Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 14475, "attachment_id": null, "is_private": false, "id": 26137, "time": "2002-11-12T16:45:35Z", "creator": "dgreer@fedex.com", "creation_time": "2002-11-12T16:45:35Z", "text": "Through further testing, I've found that adding \"${basedir}/\" in front of the\nexecute attribute's relative path works.  For example:\n\n<target name=\"build\" description=\"build this package\">\n    <exec executable=\"${basedir}/testdir/test.sh\"/>\n</target>\n\nHowever, I don't think I should have to do this to get it to work."}, {"attachment_id": null, "tags": [], "bug_id": 14475, "is_private": false, "count": 2, "id": 26142, "time": "2002-11-12T17:26:31Z", "creator": "stevel@apache.org", "creation_time": "2002-11-12T17:26:31Z", "text": "Its is not that exec doesnt know what is going on, it is that there is no way to\nchange the current directory of the JVM, so the native OS launcher is still in\nan old directory.\n\nIf you set vmlauncher=false then it should work. \n\nWe should explain this better in the docs. "}, {"count": 3, "tags": [], "bug_id": 14475, "is_private": false, "text": "When you use <exec>, you're forking a new process, and you can change the \nworking directory of a new process. It may not be JDK 1.1 compatible, but seems \nto me the Java API call would do what's needed... --DD\n\nhttp://java.sun.com/j2se/1.3/docs/api/java/lang/Runtime.html#exec\n(java.lang.String[], java.lang.String[], java.io.File)", "id": 26143, "time": "2002-11-12T17:33:14Z", "creator": "ddevienne@lgc.com", "creation_time": "2002-11-12T17:33:14Z", "attachment_id": null}, {"count": 4, "tags": [], "bug_id": 14475, "attachment_id": null, "text": "The ability to change directories in Runtime.exec wasn't added until the 1.3\nJVM.  Ideally, if a \"dir\" attribute is specified to <exec> and the JVM is 1.1 or\n1.2, vmlauncher should be forced to \"false\" to allow changing directories.", "id": 26145, "time": "2002-11-12T18:03:22Z", "creator": "billb@progress.com", "creation_time": "2002-11-12T18:03:22Z", "is_private": false}, {"count": 5, "tags": [], "creator": "dgreer@fedex.com", "attachment_id": null, "id": 26149, "time": "2002-11-12T19:22:12Z", "bug_id": 14475, "creation_time": "2002-11-12T19:22:12Z", "is_private": false, "text": "Steve Loughran,\n\nWhere do I set \"vmlauncher=false\" and where can I read more about vmlauncher as\nI don't quite understand what it is suppose to do.  The comments from Bill\nBurton seem to indicate that if I'm using 1.3 I should be able to change\ndirectories.\n\nAlso, you stated that the native OS launcher is still in an old directory.  I'm\nassuming you mean it is in the directory I made the ant call from.  I tried\nchanging the directory to be relative to the top level build.xml file (i.e.\nexecutable=\"test/testdir/test.sh\"), but that returned a -1.\n\nConcerning the closing of this bug, do you really find this to be acceptable\nbehavior?  I would consider this a \"wrinkle\" in ant which make does not have."}, {"count": 6, "tags": [], "bug_id": 14475, "attachment_id": null, "text": "vmlauncher is an attribute of <exec>\nvmlauncher=true means 'use whatever version of exec() the runtime gives you';\nvmlauncher=false means 'use antrun.bat or antrun.sh to CD then exec'. \n\nThere is some discourse in it in\nhttp://www.manning.com/hatcher/antbook-update.pdf, the errata for java dev with\nant (we realised we hadnt covered vmlauncher, and felt we should)\n\nDo I find it acceptable behaviour. no. but there is no 'CANTFIX' in bugzilla,\nand every so often we hit up the wall of Java's portability and version\ndifferences. We cant change to always use the script/batch launchers as there\narent launcher scripts for all platforms ant runs on; we cant change defaults as\nthat breaks existing build scripts. ", "id": 26151, "time": "2002-11-12T19:31:22Z", "creator": "stevel@apache.org", "creation_time": "2002-11-12T19:31:22Z", "is_private": false}, {"count": 7, "tags": [], "bug_id": 14475, "attachment_id": null, "is_private": false, "id": 26180, "time": "2002-11-13T15:03:50Z", "creator": "dgreer@fedex.com", "creation_time": "2002-11-13T15:03:50Z", "text": "Ok, I now understand what vmlauncher does, however I'm still wondering about\nyour statemtment \"Java 1.3 and above do have a library call to set the directory\nwhen you run a program, so Ant will, by default, defer to the OS on this\nplatform. It should work on all Java1.3 platforms, and because it depends upon\nno external batch files, is less brittle.\"  Since I'm using Java 1.3, shouldn't\nmy build.xml work with vmlauncher=true?\n\nAlso, even if my VM wasn't capiable of changing directories why didn't my <exec>\nwork when placing a path relative to the first ant executed?  If it thinks it's\nstill in the top most directory, the realtive path from that directory should\nwork.  Of course if my VM was having problems changing directories, why did the\n<exec> with \"pwd\" show the proper directory?\n\nSorry for all the questions.  Just trying to learn."}]