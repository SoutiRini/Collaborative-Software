[{"count": 0, "tags": [], "bug_id": 40621, "attachment_id": null, "text": "Currently the ant core code calls back\nto the configured object in the order\naddX\nsetY\naddConfiguredZ\nexecute()\nThis means that for objects that depend on the order of elements\nin the build file, for example filters, mappers, one cannot\nmix addX and addConfiguredZ. Looking at the code base, however\nit seems that addConfiguredZ methods are been added in to existing\nobjects that currently have addX methods - causing potential bugs.\nA bug of this nature has already occured:\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=40228\n(Order of mappers in chainedmapper depends on how they are defined)\n\nThis was solved by adding addConfiguedX methods corresponding to\nthe addX methods and changing IH to make addConfiguredX methods have\na higer priority that addX methods - but this is a hack and\nis not a general solution.\n\nI propose to change the order so that it is:\n\nsetY\naddX, addConfiguredZ (in order of the build file)\nexecute()", "id": 94181, "time": "2006-09-27T21:24:39Z", "creator": "peterreilly@apache.org", "creation_time": "2006-09-27T21:24:39Z", "is_private": false}, {"count": 1, "tags": [], "bug_id": 40621, "attachment_id": null, "text": "any idea what will happen?", "id": 94182, "time": "2006-09-27T21:35:16Z", "creator": "mbenson@apache.org", "creation_time": "2006-09-27T21:35:16Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 40621, "attachment_id": null, "text": "It is just that the order is messed up, for example:\n\npublic class MyFilters {\n   private List list = new ArrayList();\n   public void addTrim(Trimer t) { list.add(t); }\n   public void addConfiguredUpperCaser(Upper u) { list.add(u);}\n   public void addAppend(FileElement z) { list.add(readAll(z));}\n   public void setInput(String p) { input = p; }\n   public void execute() {for (Object o: list) { input = filter(input, o);} }\n}\n\n<myfilters input = \"${input}\">\n   <append file=\"a.txt\"/>\n   <uppercaser/>\n   <trim/>\n</myfilters>\n\nwill be in the order with the current code:\n  addAppend()\n  addTrim()\n  setInput()\n  addConfiguredUpperCaser()\nwhich will cause the list to be set in an incorrect order.\nI propose that the order should be:\n  setInput()\n  addAppend()\n  addConfiguredUpperCaser()\n  addTrim()\n\nThe mapper example was:\n\n<chainedmapper>\n  <mapper type=\"glob\" from=\"*.bar\" to=\"*.baz\"/>\n  <globmapper from=\"*.foo\" to=\"*.bar\"/>\n</chainedmapper>\n\nThe addGlobmapper() was called first and then the addConfiguredMapper()\nwas called.\n", "id": 94183, "time": "2006-09-27T21:53:50Z", "creator": "peterreilly@apache.org", "creation_time": "2006-09-27T21:53:50Z", "is_private": false}, {"count": 3, "tags": [], "bug_id": 40621, "attachment_id": null, "text": "Sounds reasonable to me.  Just didn't know if you had some reason to think stuff\nthat works now might break.", "id": 94184, "time": "2006-09-27T22:08:35Z", "creator": "mbenson@apache.org", "creation_time": "2006-09-27T22:08:35Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 40621, "attachment_id": null, "text": "committed a fix for this.", "id": 94187, "time": "2006-09-27T22:24:56Z", "creator": "peterreilly@apache.org", "creation_time": "2006-09-27T22:24:56Z", "is_private": false}]