[{"count": 0, "tags": [], "text": "Created attachment 31308\nProof of concept project for demonstration of the issue\n\nScenario\n========\n\n* Solaris 64bit OS with both a 32bit JVM and a 64bit JVM installed (Oracle) \n* Setting the JAVACMD environment variable as per the documentation[0] to specify the 64bit binary to be used\n* Running a build which calls the java task with attribute fork=\"true\"\n\nExpected\n========\n\nAnt continues to use the java executable as specified in the environment variable.\n\nActual\n======\n\nAnt spawns a JVM taken from the OS/environment defaults, thus mixing the build process with 64bit and 32bit processes. This may result in build errors, esp. when using native libraries which require a certain architecture.\n\nHow to reproduce\n================\n\nPlease find attached a simple proof-of-concept. The Java main class simply prints the architecture. In our case we can reproduce the behaviour like this:\n\n--------------------------------------\n-bash-3.2$ export JAVACMD=/opt/database/www/apps/java/bin/amd64/java\n\n-bash-3.2$ $JAVACMD -version\njava version \"1.7.0_51\"\nJava(TM) SE Runtime Environment (build 1.7.0_51-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 24.51-b03, mixed mode)\n\n-bash-3.2$ grep classname build.xml\n    <java fork=\"true\" classname=\"Main\">\n\n-bash-3.2$ ant\nBuildfile: /tmp/sup11111/build.xml\n\ncompile:\n\nrun:\n     [java] JVM Arch: 32bit\n\nBUILD SUCCESSFUL\nTotal time: 1 second\n-bash-3.2$\n--------------------------------------\n\nWhen removing the fork=\"true\" park from build.xml, the correct JVM is takes, as specified in the environment variable:\n\n--------------------------------------\n-bash-3.2$ grep classname build.xml\n    <java classname=\"Main\">\n\n-bash-3.2$ ant\nBuildfile: /tmp/sup11111/build.xml\n\ncompile:\n\nrun:\n     [java] JVM Arch: 64bit\n\nBUILD SUCCESSFUL\nTotal time: 0 seconds\n--------------------------------------\n\nI know that the java task allows the JVM to be specified explicitly using the \"jvm\" attribute and other settings via the \"jvmargs\" etc. However, this would not work when trying to reproducibly run the build on different environments with different paths.\n\n[0] http://ant.apache.org/manual/running.html#envvars", "is_private": false, "bug_id": 56134, "id": 173021, "time": "2014-02-13T10:38:30Z", "creator": "axel.knauf@gmail.com", "creation_time": "2014-02-13T10:38:30Z", "attachment_id": 31308}, {"count": 1, "attachment_id": null, "creator": "axel.knauf@gmail.com", "text": "I did some additional digging and found out that the Java task definition instantiates a CommandlineJava object (at the very top of the class), which in its constructor determines the java executable using the following piece of code:\n\n\n    /**\n     * Constructor uses the VM we are running on now.\n     */\n    public CommandlineJava() {\n        setVm(JavaEnvUtils.getJreExecutable(\"java\"));\n        setVmversion(JavaEnvUtils.getJavaVersion());\n    }\n\n(CommandlineJava.java @ 225ff)\n\nThe referred-to JavaEnvUtils.getJreExecutable(\"java\") finds the first matching Java executable within a given JAVA_HOME directory. Unfortunately for Solaris, the directory structure of the JDK/JRE is like this:\n\n$JAVA_HOME/bin/              # 32bit executables: java, javac, ..\n$JAVA_HOME/bin/amd64/        # 64bit executables: java, javac, ..\n\nThis means, regardless of environment specifications, the first matching Java executable will always be the 32bit one on this environment.\n\nIn addition, the environment variable $JAVACMD which I mentioned in my initial description is only used inside the (shell, batch) wrapper scripts, so this setting will also not be honored from inside JavaEnvUtils.\n\nDoes it make sense to extend the logic inside JavaEnvUtils to also take into account this variable when trying to determine which Java executable to use? \n\nWithout having any further knwoledge of the code base, it seems to be as if this may be a simple extension of the getJreExecutable(..) method. However, I cannot oversee what other parts depend on it and may be affected by a change.", "id": 173025, "time": "2014-02-13T14:36:00Z", "bug_id": 56134, "creation_time": "2014-02-13T14:36:00Z", "tags": [], "is_private": false}]