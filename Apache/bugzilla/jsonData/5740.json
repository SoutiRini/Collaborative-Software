[{"count": 0, "tags": [], "bug_id": 5740, "attachment_id": null, "id": 9455, "time": "2002-01-08T08:04:05Z", "creator": "mgemmell@transres.com", "creation_time": "2002-01-08T08:04:05Z", "is_private": false, "text": "The following code for the doPost method of an HTTPServlet.  When you post to \nthe servlet it generate a response that has a status of 500 with the xml \ndocument as the body of the response but instead of having text/xml as the \ncontent-type it will have text/html.\n\nIf I flush the Writer/OutputStream or flushBuffer the reponse the problem goes \naway.  The problem also goes away if the size of the response exceeds the \nresponse buffer size.\n\npublic void doPost(HttpServletRequest request, HttpServletResponse response)\nthrows ServletException, IOException\n{\n    response.setContentType(\"text/xml; charset=utf-8\");\n    response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n\n    String responseText = \"<Document>Something bad has happened.</Document>\";\n    byte[] responseBytes = responseText.toBytes(\"utf-8\");\n    response.setContentLength(responseBytes.length);\n    OutputStream os = response.getOutputStream();\n    os.write(responseBytes);\n}\n\nWhat I would expect is that if a response body is written then it should be \nsent unaltered."}, {"count": 1, "tags": [], "bug_id": 5740, "attachment_id": null, "text": "The problem actually comes from the component which generates error reports,\nwhich will try to generate the report (and reset the response in the process)\nunless the response has been committed. This behavior is the right one in many\nsituations, but isn't as adequate for you.\nYou can disable the error report valve, though.", "id": 9458, "time": "2002-01-08T08:13:06Z", "creator": "remm@apache.org", "creation_time": "2002-01-08T08:13:06Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 5740, "attachment_id": null, "id": 9688, "time": "2002-01-16T11:28:20Z", "creator": "mgemmell@transres.com", "creation_time": "2002-01-16T11:28:20Z", "is_private": false, "text": "I downloaded the source and took a closer look.  From what I read the \nErrorReportValve only resets the response if an exception is being reported.  \nWhen the ErrorReportValve tries to write to the response it uses getReporter \nwhich in my case will return null (I have written content, even though it is \nnot committed) and the response is not in an error state (not generating error \nreport from an exception).  Thus the HTML page cannot be written to the \nresponse, however by this point ErrorReportValve has modified the content-type \nto text/html.\n\nI guess I would expect that the ErrorReportValve wouldn't bother trying to \ngenerate a report if the response already has content."}, {"attachment_id": null, "tags": [], "bug_id": 5740, "is_private": false, "count": 3, "id": 9868, "time": "2002-01-24T16:48:16Z", "creator": "remm@apache.org", "creation_time": "2002-01-24T16:48:16Z", "text": "Fixed in the HEAD branch. Tomcat now will only set the content-type when the\nreporter is not null."}]