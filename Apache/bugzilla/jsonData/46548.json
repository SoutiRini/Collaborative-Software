[{"count": 0, "tags": [], "creator": "dq@mail.com", "text": "The following code throws NPE on certain XLS files\n\nHSSFWorkbook wb = new HSSFWorkbook(new FileInputStream(xlsFile));\nHSSFSheet sheet = wb.getSheetAt(0);\nHSSFPrintSetup ps = sheet.getPrintSetup();\nps.getCopies();", "id": 124122, "time": "2009-01-16T06:24:23Z", "bug_id": 46548, "creation_time": "2009-01-16T06:24:23Z", "is_private": false, "attachment_id": null}, {"text": "Please attach an example of a file that fails. The smallest that demonstrates the trouble would be helpful. Without an example it is much, more difficult to solve the trouble.\n\nThanks,\nDave", "tags": [], "creator": "dfisher@jmlafferty.com", "is_private": false, "count": 1, "id": 124123, "time": "2009-01-16T07:28:42Z", "bug_id": 46548, "creation_time": "2009-01-16T07:28:42Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "Created attachment 23132\nUnit test and proposed fix\n\nWhen PLS record in Print Settings Block is long some xls files\ncontain additional Continue record going right after PLS.\n\nThe while loop in the constructor PageSettingsBlock() breaks \nright after the PLS record since it does no expect the Continue Record.\n\nThere is impression that there might be more than one \nPageSettingsBlock and the logic in org.apache.poi.hssf.model.Sheet\neven creates and gets that second aggregated piece of records following PLS and Continue records, but finally just drops it. As a result \nPageSettingsBlock gets created without a very important PageSetupRecord\ncausing NPE when some of the getter methods (the ones which internaly supposed to deal with that missing PageSetupRecord) in  HSSFPrintSetup are called.\n\nSomeone put these comments at in Sheet.java\n\n           // more than one 'Page Settings Block' at nesting level 1 ?\n           // apparently this happens in about 15 test sample files", "is_private": false, "bug_id": 46548, "id": 124124, "time": "2009-01-16T08:01:52Z", "creator": "dq@mail.com", "creation_time": "2009-01-16T08:01:52Z", "attachment_id": 23132}, {"count": 3, "tags": [], "creator": "dq@mail.com", "text": "Created attachment 23133\nXLS Example for the bug \n\nPlease put this file to \nsrc/testcases/org/apache/poi/hssf/data/46548.xls", "id": 124125, "time": "2009-01-16T08:06:28Z", "bug_id": 46548, "creation_time": "2009-01-16T08:06:28Z", "is_private": false, "attachment_id": 23133}, {"count": 4, "tags": [], "bug_id": 46548, "attachment_id": null, "is_private": false, "id": 124137, "time": "2009-01-16T19:18:16Z", "creator": "josh@apache.org", "creation_time": "2009-01-16T19:18:16Z", "text": "Fixed in svn r735179\n\nPart of this change-list was the supplied patch (support for continued PLS records).  The rest was additional fixes for other ways of getting multiple PageSettingsBlocks.\n\nI added the comments to Sheet.java in svn r683871 because I did not understand why sheets sometimes appeared to have more than one PageSettingsBlock.  Further investigation (of the test sample files) now, suggests that there are two situations where this occurs: with nested chart sub-streams and nested 'Custom View Settings' sub-streams each of which can contain its own PageSettingsBlock.  Prior to this fix POI handled PSBs in nested charts OK, but not within the 'Custom View Settings'.\n\nThere were also two circumstances in which POI would incorrectly create two PageSettingsBlocks where one was needed.  The first was in the case of a continued PLS record (fixed by the patch provided).  The other situation occurred when a WSBOOL record appears among the PSB records.  According to the OOO docs WSBOOL is not part of the PSB; it should occur before the PSB.  All but two of the junit test files agree with this.\n\nThe 'Custom View Settings' fix and the misplaced WSBOOL fix resulted in changes to the code near the comments you pointed out."}]