[{"count": 0, "tags": [], "text": "Created attachment 30513\ntest cases 1, 2 and 3\n\nRegular Expressions in SSI fail to parse.\n\nThis uses SSI in 7.0.39 using SSIFilter.  The file is parsed, in principle, but whenever an IF expression with a certain regular expression is encountered, Tomcat seems to either show an exception (test case 2) stop processing the file and will not return any contents after that (for test case 3).\n\nCertain very simple regular expressions such as /a/ do not show an error (test case 1).\n\n\nExample:\n\nMy request is:\n\nhttp://...:8080/tomcat7_ssi_bug/foo.html?year=234234\n\nThe relevant portion of the file is (test case 3):\n\n<!--#if expr=\"${QUERY_STRING} = /year=(.*)/\" -->\n   \nI have tried a number of variants, including $QUERY_STRING instead of ${...}.\nI find no error about this in the logs.\n\nI tried simpler regular expressions.  The following\n\n<!--#if expr=\"${QUERY_STRING} = /year=/\" -->\n\nLeads to the error below:\n\njava.lang.ClassCastException: org.apache.catalina.ssi.ExpressionParseTree$EqualNode cannot be cast to org.apache.catalina.ssi.ExpressionParseTree$StringNode\n\torg.apache.catalina.ssi.ExpressionParseTree$CompareNode.compareBranches(ExpressionParseTree.java:353)\n\torg.apache.catalina.ssi.ExpressionParseTree$EqualNode.evaluate(ExpressionParseTree.java:381)\n\torg.apache.catalina.ssi.ExpressionParseTree.evaluateTree(ExpressionParseTree.java:67)\n\torg.apache.catalina.ssi.SSIConditional.evaluateArguments(SSIConditional.java:124)\n\torg.apache.catalina.ssi.SSIConditional.process(SSIConditional.java:50)\n\torg.apache.catalina.ssi.SSIProcessor.process(SSIProcessor.java:160)\n\torg.apache.catalina.ssi.SSIFilter.doFilter(SSIFilter.java:144)\n\n\nThis occurs whenever the regular expression does not contain any parenthesis.  \n\nAttached war file contains foo.html, showing test cases 1 and 2, and bar.html, showing test case 1 and 3.\n\nBy the way, these regular expressions work as intended in Apache (httpd) 2.\n\nSee also feature request #53387.  (The back reference in this example is not what causes the exception.)", "is_private": false, "id": 168194, "creator": "david.reitter@gmail.com", "time": "2013-07-01T17:08:30Z", "bug_id": 55176, "creation_time": "2013-07-01T17:08:30Z", "attachment_id": 30513}, {"count": 1, "attachment_id": null, "creator": "markt@apache.org", "is_private": false, "id": 168197, "time": "2013-07-01T20:08:30Z", "bug_id": 55176, "creation_time": "2013-07-01T20:08:30Z", "tags": [], "text": "Couple of issues here.\n\n1. '=~' is perl RE syntax. That isn't what httpd uses in this case and Tomcat is aiming to emulate httpd. The expected syntax is '='\n\n2. You'll need the enhancement from bug 53387 to be implemented before your test will work.\n\nI'm therefore going to resolve this as a duplicate of 53387.\n\n*** This bug has been marked as a duplicate of bug 53387 ***"}, {"count": 2, "attachment_id": 30515, "creator": "david.reitter@gmail.com", "is_private": false, "id": 168199, "time": "2013-07-01T20:19:56Z", "bug_id": 55176, "creation_time": "2013-07-01T20:19:56Z", "tags": [], "text": "Created attachment 30515\nAnother variant without =~ and without $1"}, {"count": 3, "tags": [], "creator": "david.reitter@gmail.com", "attachment_id": null, "id": 168200, "time": "2013-07-01T20:23:21Z", "bug_id": 55176, "creation_time": "2013-07-01T20:23:21Z", "is_private": false, "text": "Point 1: =~ is used in only one place in the test cases, and it is not what is causing this.  See text of my bug report. Attaching foo2.html to demonstrate.\n\nPoint 2: $1 is not what is causing this.  See text of my bug report.  Attaching foo2.html to demonstrate.\n\nfoo2.html brings up the same two errors without use of =~ or $1.\n\nSorry if my earlier test case contained these extra features."}, {"count": 4, "tags": [], "bug_id": 55176, "attachment_id": null, "is_private": false, "id": 168203, "time": "2013-07-01T20:27:51Z", "creator": "markt@apache.org", "creation_time": "2013-07-01T20:27:51Z", "text": "Re-opening to look at the new test cases."}, {"count": 5, "tags": [], "bug_id": 55176, "is_private": false, "text": "Found the root cause. '=' inside a regular expression was not handled correctly. There are also a bunch of other characters that would have triggered similar failures.\n\nThis has been fixed in trunk and 7.0.x and will be included in 7.0.42 onwards.\n\nThanks for the test cases. I used a simplified version to create a couple of unit tests.", "id": 168206, "time": "2013-07-01T21:22:41Z", "creator": "markt@apache.org", "creation_time": "2013-07-01T21:22:41Z", "attachment_id": null}, {"count": 6, "tags": [], "text": "Nice, thank you.  That was certainly quick.", "attachment_id": null, "id": 168208, "creator": "david.reitter@gmail.com", "time": "2013-07-01T21:48:02Z", "bug_id": 55176, "creation_time": "2013-07-01T21:48:02Z", "is_private": false}]