[{"count": 0, "tags": [], "creator": "och@m.one-crazy-human.net", "attachment_id": null, "text": "The processes have the same working directory and fname is a file name, not a full path, however, the bug is also present with a common full path.\n\nOn a call to apr_proc_mutex_create with the same fname, a sample process will create the file then acquire the lock, if another process calls with the same fname, it will fail to create the APR_LOCK_FLOCK mutex, and during cleanup unlink the file with filename fname, making future calls from this one process or any other process successful (releasing the lock) and corrupting it for its owner.\n\nI think you should verify if the lockfile is busy before deleting it\n\nSee comment within snippet\n\n\n//file: locks/unix/proc_mutex.c line: 1143 \nstatic apr_status_t proc_mutex_flock_cleanup(void *mutex_)\n{\n    apr_status_t status = APR_SUCCESS;\n    apr_proc_mutex_t *mutex=mutex_;\n\n    if (mutex->curr_locked == 1) {\n        status = proc_mutex_flock_release(mutex);\n        if (status != APR_SUCCESS)\n            return status;\n    }\n    if (mutex->interproc) { /* if it was opened properly */\n        status = apr_file_close(mutex->interproc);\n    }\n    if (!mutex->interproc_closing\n            && mutex->os.crossproc != -1\n            && close(mutex->os.crossproc) == -1\n            && status == APR_SUCCESS) {\n        status = errno;\n    }\n\n// call flock with exclusive flag on mutex->fname,\n// if successful, unlink the file (recovering from corrupted lock or deleting an unrelated existing file), and then maybe we could try again on creating the mutex?\n// else don't unlink the file, and throw error signaling the lockfile is busy to the caller\n    if (mutex->fname) {\n        unlink(mutex->fname);\n    }\n    return status;\n}", "id": 203007, "time": "2018-01-02T08:22:43Z", "bug_id": 61953, "creation_time": "2018-01-02T08:22:43Z", "is_private": false}, {"count": 1, "tags": [], "creator": "och@m.one-crazy-human.net", "attachment_id": 35635, "text": "Created attachment 35635\npatchfile for proc_mutex.c in release 1.6.3", "id": 203008, "time": "2018-01-02T09:13:08Z", "bug_id": 61953, "creation_time": "2018-01-02T09:13:08Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 61953, "is_private": false, "text": "After further research, the problem comes from using APR_FOPEN_EXCL flag when opening the lock file, stripping the flag makes things work correctly!\n\nAttached patchfile.", "id": 203009, "time": "2018-01-02T09:13:28Z", "creator": "och@m.one-crazy-human.net", "creation_time": "2018-01-02T09:13:28Z", "attachment_id": null}]