[{"count": 0, "tags": [], "bug_id": 39621, "text": "We have Tomcat in many hosts. Only in one of our hosts when we use APR the\nresult of getRemoteAddr() and Access Log look very strange:\n\n1042:0:e0fb:2f48::\nSat May 20 12:09:34 BRT 2006\n\nSometimes accessing from the same host the getRemoteAddr() result changes:\n642:0:e00b:2147::\nSat May 20 12:22:45 BRT 2006\n\nSource ip.jsp:\n<html>\n<%= request.getRemoteAddr() %><br>\n<%= new java.util.Date() %>\n</html>\n\nAccess Log Example:\n1042:0:e0fb:2f48:: - - [20/May/2006:12:21:37 -0300] \"GET /client/ip.jsp\nHTTP/1.1\" 200 67 \"-\" \"Mozilla/5.0 (X11; U; Linux i686; pt-BR; rv:1.7.13)\nGecko/20060418 Firefox/1.0.8 (Ubuntu package 1.0.8)\"\n1042:0:e0fb:2f48:: - - [20/May/2006:12:21:37 -0300] \"GET /favicon.ico HTTP/1.1\"\n404 988 \"-\" \"Mozilla/5.0 (X11; U; Linux i686; pt-BR; rv:1.7.13) Gecko/20060418\nFirefox/1.0.8 (Ubuntu package 1.0.8)\"\n\nSO info (uname -a):\nLinux servimg 2.4.18-14smp #1 SMP Wed Sep 4 12:34:47 EDT 2002 i686 i686 i386\nGNU/Linux\n\nWhen APR is not used, everything is OK.", "id": 89313, "time": "2006-05-20T15:27:15Z", "creator": "regis@credishop.com.br", "creation_time": "2006-05-20T15:27:15Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 39621, "attachment_id": null, "id": 89314, "creation_time": "2006-05-20T16:11:01Z", "time": "2006-05-20T16:11:01Z", "creator": "bugzilla@schoenhaber.de", "text": "If you access Tomcat via IPv6, what should request.getRemoteAddr() return if not\nthe IPv6 address of the client?\n", "is_private": false}, {"count": 2, "tags": [], "bug_id": 39621, "attachment_id": null, "id": 89340, "creation_time": "2006-05-22T12:00:52Z", "time": "2006-05-22T12:00:52Z", "creator": "regis@credishop.com.br", "text": "(In reply to comment #1)\n> If you access Tomcat via IPv6, what should request.getRemoteAddr() return if not\n> the IPv6 address of the client?\n> \nSome questions:\n\n1 - Why does getRemoteAddr() change even accessing from the same host?\nThe client IPv6 address is fe80::20d:87ff:fe86:5566/64 but getRemoteAddr()\nreturns   e55f:0:e00b:f547:: or f35f:0:e00b:fd47:: or d42:0:e00b:ed47:: or\n642:0:e00b:2147:: or ... Why does it change?\n\n2 - Why are IPv6 addresses shown even to client hosts without IPv6 support?\n\n3 - Why don't our other tomcat servers with APR enabled show IPv6 addresses? \nThey all show IPv4 addresses from the same client hosts that are showed as IPv6\naddresses in that specific tomcat host.\n\n\n", "is_private": false}, {"count": 3, "tags": [], "bug_id": 39621, "attachment_id": null, "text": "You have done some research on the network level, i. e. - for example - captured\nthe traffic with tcpdump, ethereal or something like that, which proves that the\nresult of getRemoteAddr actually differs from the remote endpoint of the TCP\nconnection?\nIf so, you should provide some details and also details about your OS-/network\nconfiguration, so one can try to reproduce this. I definitely can't.", "id": 89341, "time": "2006-05-22T12:21:08Z", "creator": "bugzilla@schoenhaber.de", "creation_time": "2006-05-22T12:21:08Z", "is_private": false}, {"count": 4, "tags": [], "creator": "regis@credishop.com.br", "attachment_id": null, "id": 89348, "time": "2006-05-22T15:19:01Z", "bug_id": 39621, "creation_time": "2006-05-22T15:19:01Z", "is_private": false, "text": "(In reply to comment #3)\n> You have done some research on the network level, i. e. - for example - captured\n> the traffic with tcpdump, ethereal or something like that, which proves that the\n> result of getRemoteAddr actually differs from the remote endpoint of the TCP\n> connection?\n> If so, you should provide some details and also details about your OS-/network\n> configuration, so one can try to reproduce this. I definitely can't.\n\nEthereal summary result:\nNo.     Time        Source                Destination           Protocol Info\n     27 12.106083   172.16.1.201          172.16.1.12           HTTP     GET\n/client/ip.jsp HTTP/1.1[Short Frame]\n\n172.16.1.201 -> client host\n172.16.1.12  -> tomcat server\n\nclient os: any (linux, windows 98, windows xp, ...)\nserver os: Red Hat Linux release 8.0 (Psyche) (2.4.18-14smp #1 SMP Wed Sep 4\n12:34:47 EDT 2002 i686 i686 i386 GNU/Linux)\n\nserver ifconfig result:\neth0       Encapsulamento do Link: Ethernet  Endere\u00e7o de HW 00:B0:D0:F5:A2:A1\n          inet end.: 172.16.1.12  Bcast:172.16.1.255  Masc:255.255.255.0\n          UP BROADCASTRUNNING MULTICAST  MTU:1500  M\u00e9trica:1\n          RX packets:389951 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:346114 errors:0 dropped:0 overruns:0 carrier:0\n          colis\u00f5es:0 txqueuelen:100\n          RX bytes:114319280 (109.0 Mb)  TX bytes:403124218 (384.4 Mb)\n          IRQ:22 Mem\u00f3ria:fcf00000-fcf10000\n\neth1       Encapsulamento do Link: Ethernet  Endere\u00e7o de HW 00:B0:D0:F5:A2:A0\n          inet end.: 172.16.3.242  Bcast:172.16.3.255  Masc:255.255.255.0\n          UP BROADCASTMULTICAST  MTU:1500  M\u00e9trica:1\n          RX packets:0 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:0 errors:15 dropped:0 overruns:0 carrier:15\n          colis\u00f5es:0 txqueuelen:100\n          RX bytes:0 (0.0 b)  TX bytes:1022 (1022.0 b)\n          IRQ:19 Endere\u00e7o de E/S:0xecc0 Mem\u00f3ria:fe203000-fe203038\n\nlo         Encapsulamento do Link: Loopback Local\n          inet end.: 127.0.0.1  Masc:255.0.0.0\n          UP LOOPBACKRUNNING  MTU:16436  M\u00e9trica:1\n          RX packets:70327 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:70327 errors:0 dropped:0 overruns:0 carrier:0\n          colis\u00f5es:0 txqueuelen:0\n          RX bytes:6266724 (5.9 Mb)  TX bytes:6266724 (5.9 Mb)\n"}, {"count": 5, "tags": [], "creator": "regis@credishop.com.br", "attachment_id": null, "id": 89459, "time": "2006-05-24T22:04:51Z", "bug_id": 39621, "creation_time": "2006-05-24T22:04:51Z", "is_private": false, "text": "I reproduced the same problem in another server with Red Hat 8 installed:\n\nRed Hat Linux release 8.0 (Psyche)\n2.4.18-14 #1 Wed Sep 4 12:13:11 EDT 2002 i686 athlon i386 GNU/Linux\n\nThe problem DOES NOT happen in a Debian 3.0 server with the same kernel (2.4.18):\nDebian GNU 3.0\n2.4.18-bf2.4 #1 Son Apr 14 09:53:28 CEST 2002 i686 unknown\n\nCan someone else reproduce this in Red Hat 8.0?\n"}, {"count": 6, "tags": [], "bug_id": 39621, "attachment_id": null, "id": 97258, "creation_time": "2006-12-24T19:46:30Z", "time": "2006-12-24T19:46:30Z", "creator": "yoavs@computer.org", "text": "At this point it doesn't look like a Tomcat issue to me, but instead lower in\nthe stack: APR IPv6 handling maybe, operating system just as likely.  If you can\nprove this is a Tomcat issue, feel free to reopen this item.", "is_private": false}, {"count": 7, "tags": [], "bug_id": 39621, "attachment_id": 25801, "text": "Created attachment 25801\napr-1.3.9-patch\n\nWe faced this problem with RedHat 9 only when IPv6 is disabled.\nLinux 2.6.12.3 #1 SMP Tue Jun 10 17:56:55 IST 2008 i686 i686 i386 GNU/Linux (this is not the stock kernel in RH 9).\n\nAPR version 1.3.9.\n\nAbsence of AI_ADDRCONFIG flag for getaddrinfo in glibc is the root cause. \nFrom man getaddrinfo -\n\n    If hints.ai_flags includes the AI_ADDRCONFIG flag, then IPv4 addresses are returned in the list pointed to by result only if the  local system has at lea\nst one IPv4 address configured, and IPv6 addresses are only returned if the local system has at least one IPv6 address configured.\n\nWhen tomcat searches for local address to bind, it finally calls call_resolver function of sockaddr.c in APR with hostname=null. As AI_ADDRCONFIG flag is not present, getaddrinfo returns \"::\" and 0.0.0.0 in the list of available addresses.  The tcnative method (Address.info, see address.c) prefers the IPv6 (::) address among these and returns this to Tomcat, and Tomcat specifies this address to bind to the socket (surprisingly, the kernel does not complain when binding an IPv6 address to an AF_INET socket). Therefore, APR code falsely ends up setting AF_INET6 to local_addr->family and (later when accept returns) to remote_addr->family as well. Thus when an IPv4 host connects, though accept returns proper IPv4 address to APR, APR still believes it to be IPv6 address and messes up while translating to presentation format.\n\nFix:\nIf AI_ADDRCONFIF flag is not present, we need to determine if IPv6 is *actually* available or not. This can be achieved by trying to open an IPv6 socket. If this fails then set hints.ai_family to AF_INET so that getaddrinfo returns IPv4 addresses only. Of course do this only when family has been specified as AF_UNSPEC. We do not want to return IPv4 addresses when asked specifically for IPv6 addresses.\nPlease see attached patch (for APR 1.3.9).", "id": 138674, "time": "2010-07-26T01:48:36Z", "creator": "lalit.mishra@airtightnetworks.com", "creation_time": "2010-07-26T01:48:36Z", "is_private": false}, {"count": 8, "tags": [], "bug_id": 39621, "text": "Issue is being discussed at \nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=49678", "id": 138826, "attachment_id": null, "creator": "lalit.mishra@airtightnetworks.com", "creation_time": "2010-08-03T03:09:47Z", "time": "2010-08-03T03:09:47Z", "is_private": false}]