[{"count": 0, "tags": [], "bug_id": 60158, "is_private": false, "text": "Created attachment 34282\ntriggering file\n\nWhile working TIKA-2069, I got an AIOOBE on a test file that I generated by taking the docm that Jeff Swindle submitted and saving as .doc.\n\nI confirmed this AIOOBE in pure POI:\n\nException in thread \"main\" java.lang.ArrayIndexOutOfBoundsException: -1\n\tat java.io.ByteArrayInputStream.read(ByteArrayInputStream.java:144)\n\tat org.apache.poi.util.RLEDecompressingInputStream.<init>(RLEDecompressingInputStream.java:77)\n\tat org.apache.poi.poifs.macros.VBAMacroReader.readModule(VBAMacroReader.java:204)\n\tat org.apache.poi.poifs.macros.VBAMacroReader.readMacros(VBAMacroReader.java:308)\n\tat org.apache.poi.poifs.macros.VBAMacroReader.findMacros(VBAMacroReader.java:155)\n\tat org.apache.poi.poifs.macros.VBAMacroReader.findMacros(VBAMacroReader.java:160)\n\tat org.apache.poi.poifs.macros.VBAMacroReader.findMacros(VBAMacroReader.java:160)\n\tat org.apache.poi.poifs.macros.VBAMacroReader.readMacros(VBAMacroReader.java:116)\n\tat org.apache.poi.poifs.macros.VBAMacroExtractor.extract(VBAMacroExtractor.java:83)\n\tat org.apache.poi.poifs.macros.VBAMacroExtractor.extract(VBAMacroExtractor.java:123)\n\tat org.apache.poi.poifs.macros.VBAMacroExtractor.main(VBAMacroExtractor.java:54)", "id": 193857, "time": "2016-09-20T19:56:54Z", "creator": "tallison@mitre.org", "creation_time": "2016-09-20T19:56:54Z", "attachment_id": 34282}, {"count": 1, "tags": [], "bug_id": 60158, "is_private": false, "text": "Same exception with the original .docm file that Jeff submitted on TIKA-2069", "id": 193858, "time": "2016-09-20T19:58:27Z", "creator": "tallison@mitre.org", "creation_time": "2016-09-20T19:58:27Z", "attachment_id": null}, {"count": 2, "attachment_id": null, "creator": "onealj@apache.org", "text": "I added a failing unit test to POI in r1761652 using test-macro-doc.docm from TIKA-2069 [1] submitted by Jeff Swindle\n\n[1] https://issues.apache.org/jira/browse/TIKA-2069", "id": 193865, "time": "2016-09-21T01:19:20Z", "bug_id": 60158, "creation_time": "2016-09-21T01:19:20Z", "tags": [], "is_private": false}, {"count": 3, "tags": [], "creator": "tallison@mitre.org", "attachment_id": null, "text": "Slightly less than 50% of the macro exceptions are caused by this. See xlsx reports on https://issues.apache.org/jira/browse/TIKA-2104.", "id": 194479, "time": "2016-10-17T19:49:19Z", "bug_id": 60158, "creation_time": "2016-10-17T19:49:19Z", "is_private": false}, {"count": 4, "tags": [], "bug_id": 60158, "is_private": false, "text": "I think this is a problem in RLEDecompressingInputStream.\n\nIn readChunk(), under \n\nif ((tokenFlags & POWER2[n]) == 0) {\n\nif the int that is read is 'ff', when that gets cast to a byte, its value becomes -1.\n\nWhen we try to readInt() to get the module offset, the first byte returns '-1' and we think we've hit the end of the stream and return -1.", "id": 194491, "time": "2016-10-18T12:26:17Z", "creator": "tallison@mitre.org", "creation_time": "2016-10-18T12:26:17Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 60158, "is_private": false, "text": "r1765433\n\nI modified RLEDecompressingInputStream's read() from\n\n        return buf[pos++];\n\nto\n        return buf[pos++] & 0xFF;\n\nLet me know if we need to modify anything else in RLEDecompressingInputStream...or if there's a better place to fix this.", "id": 194493, "time": "2016-10-18T12:58:27Z", "creator": "tallison@mitre.org", "creation_time": "2016-10-18T12:58:27Z", "attachment_id": null}]