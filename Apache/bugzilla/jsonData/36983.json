[{"count": 0, "tags": [], "text": "I encountered a problem with sessions and cross context calls. Here is a scenario:\n\nWe have to webapps (webapp1 and webapp2). \nwebapp1 is configured with cross contex set to true so it is able to dispatch to\nwebapp2. \nNow user access webapp1 and webapp2. Two sessions are created for both webapps. \n\nrequest.getSession in webapp1 returns session1 \nrequest.getSession in webapp2 returns session2\n\nProblem is during dispatching request from webapp1 to webapp2, because \nrequest.getSession in webapp2 does not return session2, but only for request\nwhich is dispatched from webapp1. all the following request which are not cross\ncontext again return session2, so session is not lost. \n\nTomcat 5.0.x works fine when dispatching cross context requests (two separate\nsessions are maintained for each webapp).", "attachment_id": null, "bug_id": 36983, "id": 80940, "time": "2005-10-10T11:03:30Z", "creator": "M.Hankus@ce3.pl", "creation_time": "2005-10-10T11:03:30Z", "is_private": false}, {"count": 1, "tags": [], "creator": "markt@apache.org", "text": "5.5.x maintains two separate session objects although they do have the same ID.\nI have also confirmed that session attributes are not visible across contexts.\n\nI do not see anything in the current behaviour that goes against the\nrequirements of section SRV.7.3 of the servlet specification. I am therefore\nclosing this as INVALID.", "id": 94636, "time": "2006-10-08T14:00:35Z", "bug_id": 36983, "creation_time": "2006-10-08T14:00:35Z", "is_private": false, "attachment_id": null}]