[{"count": 0, "tags": [], "bug_id": 35727, "text": "When converting a large TTF file (Arial Unicode MS) for example, the ttf2svg\nwill fail.\nIn the source code I found that some fields in the TTF are considered as signed\nshort integers instead of unsigned short integers as specified in the TTF\nspecifications.\n\nTo fix the problem :\n\nIn GlyfCompositeComp.java:\n         'private short glyphIndex;' \n     could be replaced by \n         'private int glyphIndex;'\n\nin 2 places in GlyfTable.java in the init() method:\n         'int len = loca.getOffset((short)(i + 1)) - loca.getOffset(i);'\n     could be replaced by\n         'int len = loca.getOffset((i + 1)) - loca.getOffset(i);'\n\nin HheaTable.java :\n          'private short numberOfHMetrics;'\n    could be replaced by\n          'private int numberOfHMetrics;'\n\nin the HheaTable constructor:\n           'numberOfHMetrics = raf.readShort();'\n    could be replaced by        \n           'numberOfHMetrics = raf.readShort() & 0x0000FFFF;'\n\nthe method signature \n           'public short getNumberOfHMetrics()'\n    could be replaced by        \n\t   'public int getNumberOfHMetrics()'", "id": 77281, "time": "2005-07-14T09:41:48Z", "creator": "gabriel.daty@bitflash.com", "creation_time": "2005-07-14T09:41:48Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "deweese@apache.org", "text": "I believe these have all been recently fixed (as well as some\nother issues that come up with larger fonts using composite \nglyphs - that might cause incorrect output).", "id": 80449, "time": "2005-09-25T20:00:57Z", "bug_id": 35727, "creation_time": "2005-09-25T20:00:57Z", "is_private": false, "attachment_id": null}]