[{"count": 0, "text": "When specifically enabling +SymLinksIfOwnerMatch globally and then disallowing it from being overridden with AllowOverride, setting +SymLinksIfOwnerMatch in a .htaccess file causes an internal server error.\n\nThis isn't intuitive - setting an option which is already enabled, even if it's not permitted to be overriden, should not cause an error.\n\nTo reproduce, set this globally:\n\n<Directory \"/some/directory/path\">\n        Options +All +IncludesNOEXEC -Indexes +SymLinksIfOwnerMatch\n        AllowOverride All Options=ExecCGI,Includes,IncludesNOEXEC,Indexes,MultiViews,FollowSymLinks\n</Directory>\n\nThen create a .htaccess file in /some/directory/path that contains:\n\n+SymLinksIfOwnerMatch\n\nNo override is occurring as the option being set is already set, yet we get an error. This behaviour causes all default installs of Drupal to give ISE's when the global configuration is in place.\n\nThe purpose of the global configuration, in case it isn't clear, is to enforce +SymLinksIfOwnerMatch and to cause an ISE if -SymLinksIfOwnerMatch is set in a .htaccess file.\n\nThanks,\nVince Stratful.", "bug_id": 50693, "is_private": false, "id": 143826, "time": "2011-01-31T08:42:14Z", "creator": "vstratful@site5.com", "creation_time": "2011-01-31T08:42:14Z", "tags": [], "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 50693, "attachment_id": null, "id": 148483, "time": "2011-08-08T11:11:34Z", "creator": "vstratful@site5.com", "creation_time": "2011-08-08T11:11:34Z", "is_private": false, "text": "Why was this switched to enhancement? It's clearly a bug, not a feature request.\n\nThanks,\nVince Stratful."}, {"count": 2, "tags": [], "text": "(In reply to comment #1)\n> Why was this switched to enhancement? It's clearly a bug, not a feature\n> request.\n\nIMO it is an enhancement to make it any smarter, taking into consideration the doc vs. the behavior\n\nAllowOverride options= doesn't control the effective values, it controls which literal options can appear in the Options directive.  \n\nFor this same reason, you also can't enforce SymlinksIfOwnerMatch by not allowing an override of \"SymlinksIfOwnerMatch\", because once you delegate any other single option the user can just omit SymlinksIfOwnerMatch and use the non-relative syntax.\n\nSymlinksIfOwnerMatch tends to pop up as a problematic case because it's one of the few options you \"turn on\" to limit something, but this configuration option does not let you enforce what \"stays on\".", "is_private": false, "id": 148484, "creator": "covener@gmail.com", "time": "2011-08-08T12:14:12Z", "bug_id": 50693, "creation_time": "2011-08-08T12:14:12Z", "attachment_id": null}]