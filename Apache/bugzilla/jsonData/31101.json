[{"count": 0, "text": "i've got an issue with some navigators, when using non-ascii characters in\nfilenames. the standards does not define if an url-encoded filename should be\nencoded using utf-8 or another encoding. i've written an alternative method of\nURLUtil.URLDecode() that first tries to determine if the string can be an utf-8\nstring, and then use this encoding instead of the default encoding . that does\nnot work for 100% of all strings, since sometimes a string can look like an\nutf-8, but this is occurs extremely rarely, as you need to have a very specific\nsequence of special characters.\nthe problem occurs especially with characters in unicode range 00A0 - 00FF,\nwhich are alternatively encoded in utf-8 or iso-8859-15.", "bug_id": 31101, "is_private": false, "id": 63164, "time": "2004-09-07T17:43:49Z", "creator": "thomas.draier@codeva.net", "creation_time": "2004-09-07T17:43:49Z", "tags": [], "attachment_id": null}, {"count": 1, "tags": [], "creator": "thomas.draier@codeva.net", "attachment_id": 12662, "id": 63165, "time": "2004-09-07T17:50:01Z", "bug_id": 31101, "creation_time": "2004-09-07T17:50:01Z", "is_private": false, "text": "Created attachment 12662\npatch for WebdavUtils with new URLDecode"}, {"count": 2, "tags": [], "bug_id": 31101, "attachment_id": null, "text": "Patch applied", "id": 63186, "time": "2004-09-08T04:16:42Z", "creator": "ozeigermann@apache.org", "creation_time": "2004-09-08T04:16:42Z", "is_private": false}]