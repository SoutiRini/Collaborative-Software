[{"count": 0, "tags": [], "text": "We use Ant programmatically to build many projects in parallel. The more load \nwe have on this build system, the more often we encounter spurious \nexceptions such as the following. Retrying the build will most often heal the \nsituation:\n\nThe <property> type doesn't support the \"location\" attribute.\n        at org.apache.tools.ant.IntrospectionHelper.setAttribute\n(IntrospectionHelper.java:389)\n        at org.apache.tools.ant.RuntimeConfigurable.maybeConfigure\n(RuntimeConfigurable.java:370)\n        at org.apache.tools.ant.RuntimeConfigurable.maybeConfigure\n(RuntimeConfigurable.java:324)\n        at org.apache.tools.ant.Task.maybeConfigure(Task.java:254)\n        at org.apache.tools.ant.UnknownElement.configure\n(UnknownElement.java:189)\n        at org.apache.tools.ant.UnknownElement.maybeConfigure\n(UnknownElement.java:158)\n        at org.apache.tools.ant.Task.perform(Task.java:363)\n        at org.apache.tools.ant.Target.execute(Target.java:341)\n        at org.apache.tools.ant.Target.performTasks(Target.java:369)\n        at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1216)\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1185)\n\nWe tracked this down to \norg.apache.tools.ant.IntrospectionHelper#buildFinished, which 1. clears \nseveral member hash maps and 2. clears the static helper cache without \nsynchronization:\n\n    public void buildFinished(BuildEvent event) {\n        attributeTypes.clear();\n        attributeSetters.clear();\n        nestedTypes.clear();\n        nestedCreators.clear();\n        addText = null;\n        helpers.clear();\n    }\n\nWith respect to point 1, I do not believe clearing those maps is necessary. It \nis also a potential cause of concurrency issues. If thread 1 retrieved this \nhelper instance from getHelper(Class) while thread 2 executes #buildFinished, \nexceptions like the one above will be thrown. In that case we do not really \nwant to clear the maps anyway, because the information is still in use. If, on \nthe other hand, no other thread holds a reference to this IntrospectionHelper, \nthe GC will free all associated memory as soon as the \"helpers\" cache is \ncleared. So clearing the maps does not gain anything.\n\nWith respect to point 2, please consider clearing the \"helpers\" cache in a \nsynchronized fashion, if at all. The helpers cache will contain at most (!) \none mapping per loaded class and will therefore not grow indefinitely. \nClearing the cache is not necessary from my point of view.\n\nIn a separate discussion it was mentioned that Ant is not designed to be \nthread-safe. One difficulty is that there are too many task implementations \nout there to guarantee thread-safety in general. However, the core should be \nmade thread-safe and it should be documented that some tasks might not work \nwell in multi-threaded environments. The goal is not to build the same project \ninstance concurrently, but at least to be able to build different project \ninstances concurrently (which is not possible right now due to the map \nsynchronization bug described above).\n\nThat said, my suggestion is either to do nothing in #buildFinished, or to \nreplace it with \n\n    private static synchronized void clearHelperCache() {\n        helpers.clear();\n    }\n    public void buildFinished(BuildEvent event) {\n        clearHelperCache();\n    }", "attachment_id": null, "id": 82491, "creator": "dennis.homann@coremedia.com", "time": "2005-11-14T20:20:21Z", "bug_id": 37501, "creation_time": "2005-11-14T20:20:21Z", "is_private": false}, {"count": 1, "tags": [], "text": "*** Bug 37489 has been marked as a duplicate of this bug. ***", "is_private": false, "id": 82493, "creator": "dennis.homann@coremedia.com", "time": "2005-11-14T20:22:39Z", "bug_id": 37501, "creation_time": "2005-11-14T20:22:39Z", "attachment_id": null}, {"count": 2, "tags": [], "text": "When several threads are running multiple projects, I guess that a project is always executed on the same thread.\n\nSo if I'm not wrong on this first assumption, what about storing the IntrospectionHelper cache attributes in ThreadLocal variables?\n\nEach tread will have its own cache and you will still be able to clear the cache when the build is finished without impacting other thread/projects.", "attachment_id": null, "id": 168780, "creator": "aarnaudy@murex.com", "time": "2013-07-25T08:50:18Z", "bug_id": 37501, "creation_time": "2013-07-25T08:50:18Z", "is_private": false}, {"text": "I tend to agree with the OP that clearing the maps does not seem beneficial.", "tags": [], "creator": "mbenson@apache.org", "attachment_id": null, "count": 3, "id": 168786, "time": "2013-07-25T14:59:37Z", "bug_id": 37501, "creation_time": "2013-07-25T14:59:37Z", "is_private": false}, {"text": "(In reply to Matt Benson from comment #3)\n> I tend to agree with the OP that clearing the maps does not seem beneficial.\n\nand doesn't happen since svn revision 466290 or seven years ago - so this part has been fixed since Ant 1.7.0 :-)\n\nsvn revision 1554405 adds the synchronization for part 2", "tags": [], "creator": "bodewig@apache.org", "attachment_id": null, "count": 4, "id": 171977, "time": "2013-12-31T11:51:13Z", "bug_id": 37501, "creation_time": "2013-12-31T11:51:13Z", "is_private": false}]