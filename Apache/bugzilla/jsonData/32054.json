[{"count": 0, "tags": [], "text": "Creation of area objects was moved from LMs to classes implementing\norg.apache.fop.area.AreaFactory interface. This interface provides a set of\ncreate methods for different types of area objects.\nDefault implementation of this interface is in class called DefaultAreaFactory.\n\nAdditional changes:\n+ FOUserAgent - getter & setter for AreaFactory\n+ AbstractLayoutManager - getAreaFactory() --> convenience method for accesing\ncurrent area factory in layout manager\n+ Default constructor was added to several area classes", "attachment_id": null, "bug_id": 32054, "id": 66447, "time": "2004-11-04T11:31:06Z", "creator": "tivy@centrum.sk", "creation_time": "2004-11-04T11:31:06Z", "is_private": false}, {"count": 1, "tags": [], "text": "Created attachment 13325\nAreaFactory patch", "is_private": false, "bug_id": 32054, "id": 66448, "time": "2004-11-04T11:32:02Z", "creator": "tivy@centrum.sk", "creation_time": "2004-11-04T11:32:02Z", "attachment_id": 13325}, {"count": 2, "tags": [], "text": "A more complete 'brief' description of this is in this POST to fop-dev:\n\nhttp://marc.theaimsgroup.com/?l=fop-dev&m=109956963917611&w=2", "attachment_id": null, "id": 66464, "creator": "the.webmaestro@gmail.com", "time": "2004-11-04T16:47:49Z", "bug_id": 32054, "creation_time": "2004-11-04T16:47:49Z", "is_private": false}, {"count": 3, "attachment_id": null, "bug_id": 32054, "is_private": false, "id": 66475, "time": "2004-11-04T20:34:54Z", "creator": "glenmazza@yahoo.com", "creation_time": "2004-11-04T20:34:54Z", "tags": [], "text": "In AbstractLayoutManager:\n\n+    protected AreaFactory getAreaFactory() {\n+        return (userAgent != null) ? userAgent.getAreaFactory() : null;\n+    }\n\nBTW, we can make AreaFactory a ThreadLocal in AbstractLayoutManager, correct?  \nThat way we can avoid .getAreaFactory() in FOUserAgent, also save the function \ncall.\n\nI understand we couldn't do ThreadLocal for FOEventHandler (potentially \nrecursive FO documents within the same process would need a different instances \nof FOEventHandler) but this may be a good use-case for ThreadLocal here."}]