[{"count": 0, "tags": [], "bug_id": 17873, "attachment_id": null, "id": 32946, "time": "2003-03-11T13:01:49Z", "creator": "ovheimar@online.no", "creation_time": "2003-03-11T13:01:49Z", "is_private": false, "text": "This leads to an out of file descriptor error on our setup, we  have 10 webapps \ndeployed and ca 40 jar files in each web app. I know that I can raise the file \ndescriptor limit on Linux, but I still don't see why these file handles should \nbe kept open if the files don't exist.. In our setup with 10 webapps on one \ntomcat server it holds 274 open file descriptors to jar_cache files, when the \ndefault limit on Linux then is ca 1000 open files pr process this is a \nsignificant %.\n\nexample listing from proc/pid/fd\n\nls -l | grep .tmp /proc/1040/fd\n\nlr-x------    1 tomcat   users          64 Mar 11 13:53 990 -\n> /home/tomcat/tomcat/temp/jar_cache49400.tmp (deleted)\nlr-x------    1 tomcat   users          64 Mar 11 13:53 991 -\n> /home/tomcat/tomcat/temp/jar_cache49402.tmp (deleted)\nlr-x------    1 tomcat   users          64 Mar 11 13:53 992 -\n> /home/tomcat/tomcat/temp/jar_cache49405.tmp (deleted)\nlr-x------    1 tomcat   users          64 Mar 11 13:53 993 -\n> /home/tomcat/tomcat/temp/jar_cache49403.tmp (deleted)\nlr-x------    1 tomcat   users          64 Mar 11 13:53 994 -\n> /home/tomcat/tomcat/temp/jar_cache49404.tmp (deleted)\nlr-x------    1 tomcat   users          64 Mar 11 13:53 995 -\n> /home/tomcat/tomcat/temp/jar_cache49410.tmp (deleted)\nlr-x------    1 tomcat   users          64 Mar 11 13:53 996 -\n> /home/tomcat/tomcat/temp/jar_cache49406.tmp (deleted)\nlr-x------    1 tomcat   users          64 Mar 11 13:53 997 -\n> /home/tomcat/tomcat/temp/jar_cache49407.tmp (deleted)\nlr-x------    1 tomcat   users          64 Mar 11 13:53 998 -\n> /home/tomcat/tomcat/temp/jar_cache49408.tmp (deleted)\nlr-x------    1 tomcat   users          64 Mar 11 13:53 999 -\n> /home/tomcat/tomcat/temp/jar_cache49409.tmp (deleted)"}, {"count": 1, "attachment_id": null, "bug_id": 17873, "text": "Tomcat does not use the jar_cache* files. They are created and managed by the \nJVM. This looks like a possible JVM bug.", "id": 53970, "time": "2004-03-14T19:09:39Z", "creator": "markt@apache.org", "creation_time": "2004-03-14T19:09:39Z", "tags": [], "is_private": false}]