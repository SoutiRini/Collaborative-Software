[{"count": 0, "tags": [], "creator": "rstoyanchev@yahoo.com", "text": "In an async scenario (request.startAsync), when the client goes away, trying to write to the response raises an IOException. If I then call asyncContext.complete() in order to finalize and clean up the request, soon after the following exception occurs:\n\njava.lang.IllegalStateException: Calling [asyncError()] is not valid for a request with Async state [COMPLETING]\n        at org.apache.coyote.AsyncStateMachine.asyncError(AsyncStateMachine.java:304)\n        at org.apache.coyote.http11.AbstractHttp11Processor.action(AbstractHttp11Processor.java:793)\n        at org.apache.coyote.Request.action(Request.java:373)\n        at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:441)\n        at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:312)\n        at org.apache.coyote.http11.AbstractHttp11Processor.asyncDispatch(AbstractHttp11Processor.java:1509)\n        at org.apache.coyote.http11.Http11NioProcessor.asyncDispatch(Http11NioProcessor.java:221)\n        at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:619)\n        at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1581)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1540)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)\n        at java.lang.Thread.run(Thread.java:722)\n\nIt looks like an attempt to maybe to send an error event to AsyncListener's but asyncContext.complete has already been called.\n\nIs calling asyncContext.complete() a reasonable way to handle an IOException from the response in order to finalize the request and release any resorces associated with it?", "id": 167033, "time": "2013-05-04T12:41:30Z", "bug_id": 54928, "creation_time": "2013-05-04T12:41:30Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 167034, "time": "2013-05-04T17:43:11Z", "bug_id": 54928, "creation_time": "2013-05-04T17:43:11Z", "is_private": false, "text": "This is a question for the users list if you want to discuss this further (and possibly the Servlet EG as I don't see a clear definition of how an app is expected to handle this in the spec).\n\nI'm assuming that the I/O operation that triggers the error does not occur on a container thread. If it occurs in a container thread let Tomcat handle it.\n\nLooking at the Tomcat source code, a dispatch to a simple error page should trigger an error when it tries to write to the response which in turn should trigger the onError method of any registered AsyncListener allowing you to do the clean-up."}, {"count": 2, "tags": [], "creator": "rstoyanchev@yahoo.com", "attachment_id": null, "id": 167035, "time": "2013-05-04T19:18:55Z", "bug_id": 54928, "creation_time": "2013-05-04T19:18:55Z", "is_private": false, "text": "Okay, I see. It looks like one has to dispatch before calling asyncContext.complete(). I opened this ticket because of the exception but I didn't realize it was illegal ot call complete() from a non-container thread. Maybe that can be detected and rejected with a message to that extent."}, {"count": 3, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 167036, "time": "2013-05-04T19:39:19Z", "bug_id": 54928, "creation_time": "2013-05-04T19:39:19Z", "is_private": false, "text": "(In reply to comment #2)\n> Okay, I see. It looks like one has to dispatch before calling\n> asyncContext.complete().\n\nIn this case you need the dispatch to get the request back onto a container thread where the error handling can deal with the error. It is this bit I am not 100% is what is intended by the spec but I can't find any clear definitions.\n\n> I opened this ticket because of the exception but I\n> didn't realize it was illegal ot call complete() from a non-container\n> thread. Maybe that can be detected and rejected with a message to that\n> extent.\n\nIt is perfectly valid to call complete() from a non-container thread.\n\nAgain, the users list is the place to discuss this."}, {"count": 4, "tags": [], "bug_id": 54928, "attachment_id": null, "text": "I've been pondering this and having thought about the question you asked on the Servlet spec users list, I have reached the conclusion that allowing complete() makes the most sense here.\n\nI'm re-opening this to make this change for 7.0.41\n\nThe EG may ultimately come to a different conclusion. We'll deal with that if it happens.", "id": 167255, "time": "2013-05-17T10:05:49Z", "creator": "markt@apache.org", "creation_time": "2013-05-17T10:05:49Z", "is_private": false}, {"count": 5, "tags": [], "creator": "rstoyanchev@yahoo.com", "attachment_id": null, "id": 167260, "time": "2013-05-17T13:41:25Z", "bug_id": 54928, "creation_time": "2013-05-17T13:41:25Z", "is_private": false, "text": "OK, thanks. For what it's worth, from brief experimentation calling complete() in this scenario on Jetty and Glassfish doesn't cause any exceptions. Not sure that means it works but if it doesn't it could be considered a bug since it completes silently."}, {"count": 6, "tags": [], "creator": "markt@apache.org", "attachment_id": null, "id": 167390, "time": "2013-05-23T20:38:40Z", "bug_id": 54928, "creation_time": "2013-05-23T20:38:40Z", "is_private": false, "text": "I think some other changes might have fixed this. Please can you re-test with the latest trunk."}, {"count": 7, "tags": [], "creator": "rstoyanchev@yahoo.com", "attachment_id": null, "id": 167391, "time": "2013-05-23T23:30:10Z", "bug_id": 54928, "creation_time": "2013-05-23T23:30:10Z", "is_private": false, "text": "I can confirm the exception no longer appears in the logs. Thanks for fixing this!"}, {"count": 8, "tags": [], "creator": "knst.kolinko@gmail.com", "text": "(In reply to comment #4)\n> I'm re-opening this to make this change for 7.0.41\n\nI backported the test case to Tomcat 7 in r1634259. The test case passes successfully.", "id": 178751, "time": "2014-10-25T23:25:36Z", "bug_id": 54928, "creation_time": "2014-10-25T23:25:36Z", "is_private": false, "attachment_id": null}]