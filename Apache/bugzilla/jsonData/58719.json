[{"count": 0, "tags": [], "bug_id": 58719, "is_private": false, "text": "Assigning styles which apply horizontal alignment appears correctly in Excel, but not in Safari for IOS.  Test code below produces output which has a left and right alignment applied to different cells, but they render as left alignment in both cases when viewed in Safari for IOS:\n\n...\npublic void test(){\n\t\tXSSFWorkbook wb = new XSSFWorkbook();\n\t\tXSSFSheet sheetA = wb.createSheet(\"sheet_a\");\n\t\tRow row0 = sheetA.createRow(0);\n\t\t\n\t\tXSSFCellStyle styleA = wb.createCellStyle();\n\t\tstyleA.setAlignment(HorizontalAlignment.LEFT);\n\t\tXSSFCellStyle styleB = wb.createCellStyle();\n\t\tstyleB.setAlignment(HorizontalAlignment.RIGHT);\n\t\t\n\t\tCell cellA0 = row0.createCell(0);\n\t\tcellA0.setCellStyle(styleA);\n\t\tcellA0.setCellValue(\"asdf\");\n\t\tCell cellB0 = row0.createCell(1);\n\t\tcellB0.setCellStyle(styleB);\n\t\tcellB0.setCellValue(\"qwerty\");\n\t\t\n\t\ttry{\n\t\t    FileOutputStream fileOut = new FileOutputStream(\"exampleFile.xlsx\");\n\t\t    wb.write(fileOut);\n\t\t    fileOut.close();\n\t\t} catch (IOException ioe){\n\t\t\tioe.printStackTrace();\n\t\t}\n\t}\n...", "id": 186886, "time": "2015-12-11T04:44:26Z", "creator": "jwhang@tibco.com", "creation_time": "2015-12-11T04:44:26Z", "attachment_id": null}, {"count": 1, "tags": [], "creator": "onealj@apache.org", "attachment_id": null, "is_private": false, "id": 186887, "time": "2015-12-11T06:27:08Z", "bug_id": 58719, "creation_time": "2015-12-11T06:27:08Z", "text": "How does the XML compare between what's generated by POI and what's generated by Excel, LibreOffice, or OpenOffice?\n\nHow does a file that is created in Excel, with horizontally aligned cells look in Safari for iOS?\n\nI don't have an iOS device, so I can't test this to determine if this is a bug in Safari or POI. Can Safari natively display OpenXML files? That's cool. Firefox and Chrome can't."}, {"count": 2, "tags": [], "creator": "jwhang@tibco.com", "attachment_id": 33338, "id": 186897, "time": "2015-12-11T19:02:53Z", "bug_id": 58719, "creation_time": "2015-12-11T19:02:53Z", "is_private": false, "text": "Created attachment 33338\nOriginal test file which displays improperly in Safari"}, {"count": 3, "tags": [], "text": "Created attachment 33339\nOriginal example file opened in Excel, then saved with a different name", "is_private": false, "bug_id": 58719, "id": 186898, "time": "2015-12-11T19:03:37Z", "creator": "jwhang@tibco.com", "creation_time": "2015-12-11T19:03:37Z", "attachment_id": 33339}, {"count": 4, "tags": [], "creator": "jwhang@tibco.com", "attachment_id": null, "is_private": false, "id": 186901, "time": "2015-12-11T19:15:17Z", "bug_id": 58719, "creation_time": "2015-12-11T19:15:17Z", "text": "I ran a recursive diff between the contents of the two files; I notice that the MS version has theme assets but the overall structure looks similar otherwise.  When viewing the file level diffs, they have numerous deltas but I'm not sure which ones are meaningful.  Please let me know if you want me to zip up the delta reports and attach it to this bug.\n\n\nI attached the original test file as well as a version of that file saved by MS Excel.  The differences in behavior are:\n\n--Original test file created via test program in initial description (exampleFile.xlsx):\n- displays correctly in MS Excel (one cell left aligned, other cell right aligned)\n- displays correctly in Google Drive viewer\n- on download request, renders *incorrectly* in Safari with both cells left aligned.\n\n--Test file created from MS Excel by saving original test XSLX file(exampleFile_Excel_saved.xlsx):\n- displays correctly in MS Excel (one cell left aligned, other cell right aligned)\n- displays correctly in Google Drive viewer\n- on download request, renders in Safari *correctly* with one cell left aligned, other cell right aligned.\n\n\nIt appears Safari can display this content; with the exception of this issue, more complex content appears to be rendering correctly.  I'm checking the functionality by uploading the XLSX file to a google drive location.  Selecting the file displays the content in Google's browser renderer, but choosing to download the file is when Safari appears to take over to render the file."}]