[{"count": 0, "attachment_id": null, "creator": "adelmelle@apache.org", "is_private": false, "id": 66945, "time": "2004-11-15T20:28:06Z", "bug_id": 32253, "creation_time": "2004-11-15T20:28:06Z", "tags": [], "text": "Issues to follow up:\n\n- Absent markers lead to ClassCastException in \n    LineLM.getNextBreakPoss() line 409 preceded by message (in RetrieveMarkerLM)\n    \"found no marker with name: ...\"\n\n- Markers with only a CDATA child node leads to ClassCastException in\n    Marker.rebind() line 72\n\n- Markers with fo:block child node leads to ClassCastException in \n    LineLM.getNextBreakPoss() line 409 preceded by message (in RetrieveMarkerLM)\n    \"retrieved: org.apache.fop.layoutmgr.InlineStackingLM...\""}, {"count": 1, "tags": [], "bug_id": 32253, "attachment_id": 13470, "text": "Created attachment 13470\nFO to demonstrate described problems", "id": 66946, "time": "2004-11-15T20:30:08Z", "creator": "adelmelle@apache.org", "creation_time": "2004-11-15T20:30:08Z", "is_private": false}, {"count": 2, "tags": [], "creator": "spepping@apache.org", "text": "I implemented InlineLevelLM in RetrieveMarkerLM. That cures some of the\nClassCast Exceptions. The exceptions in Marker.rebind are due to the recent\nchange of FOText from FObj to FONode. That change has not yet been made in this\nmethod.", "id": 66965, "time": "2004-11-15T22:06:12Z", "bug_id": 32253, "creation_time": "2004-11-15T22:06:12Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 32253, "text": "Thanks for the assist, Simon.\n\nI noticed the problem in Marker.rebind() as well... and was wondering\n\nSince:\n1. all FObjs are also FONodes\n2. FOText has its own bind() method\n\nmaybe we could cast i.next() to FONode first, to check the base class:\nFONode childNode = (FONode) i.next();\n\nThen test:\nif( childNode.getClass().equals(\"class org.apache.fop.fo.FOText\") )\n\nAnd based upon the result of that test, cast to either FObj or FOText...\n\nSound like a good idea, or would this be classified as 'sloppy'?\n(Alternative could be to try-and-catch the ClassCastException, but IIRC this is \nconsidered bad practice...)\n\nBTW: stumbled upon the Joerg's favourite dreadful nested 'block-inline-block' \nproblem --which throws ClassCastExceptions in InlineLayoutManager", "id": 66971, "time": "2004-11-15T22:38:55Z", "creator": "adelmelle@apache.org", "creation_time": "2004-11-15T22:38:55Z", "is_private": false, "attachment_id": null}, {"count": 4, "text": "On second thought... simply using:\n\nif( childNode.getName() == null )\n\nseems even better to test whether it's an FObj.", "bug_id": 32253, "attachment_id": null, "id": 66973, "time": "2004-11-15T22:44:59Z", "creator": "adelmelle@apache.org", "creation_time": "2004-11-15T22:44:59Z", "tags": [], "is_private": false}, {"count": 5, "tags": [], "bug_id": 32253, "attachment_id": null, "id": 66977, "time": "2004-11-15T22:53:26Z", "creator": "adelmelle@apache.org", "creation_time": "2004-11-15T22:53:26Z", "is_private": false, "text": "...but this leads to yet another CCE, this time in \n  RetrieveMarkerLM.getNextKnuthElements() line 82\n"}, {"count": 6, "tags": [], "creator": "adelmelle@apache.org", "attachment_id": null, "id": 66979, "time": "2004-11-15T22:59:29Z", "bug_id": 32253, "creation_time": "2004-11-15T22:59:29Z", "is_private": false, "text": "...due to the retrieved LM being an InlineStackingLM?? Where does that come \nfrom? Shouldn't that be a TextLM?"}, {"count": 7, "tags": [], "bug_id": 32253, "text": "[Andreas]\n\n>Then test:\n>if( childNode.getClass().equals(\"class org.apache.fop.fo.FOText\") )\n\nJust using instanceof (i.e., childNode instanceof FOText) should be\nsufficient--I implemented a similar change in fo.flow.Block when I switched text\nnodes from FObj to FONode.\n\nThanks, (and sorry for the oversight--let me know if I can be of help here)\nGlen", "id": 66982, "time": "2004-11-16T00:45:34Z", "creator": "glenmazza@yahoo.com", "creation_time": "2004-11-16T00:45:34Z", "is_private": false, "attachment_id": null}, {"count": 8, "tags": [], "bug_id": 32253, "attachment_id": null, "id": 66983, "time": "2004-11-16T00:56:16Z", "creator": "adelmelle@apache.org", "creation_time": "2004-11-16T00:56:16Z", "is_private": false, "text": "Yes! I just *knew* there was a much more obvious way of testing that.\n\nThanks Glen (--still enjoying himself in Vegas, I presume?)\n"}, {"count": 9, "tags": [], "text": "Committed a fix in Marker, which cures the ClassCastException in\nMarker.rebind(). Now all markers lead to a ClassCastException in\nRetrieveMarkerLM.getNextKnuthElements(), line 81. This should be cured by\nremoving the LMs for fo:marker and for fo:retrieve-marker:\n\nat the moment, RetrieveMarkerLM tries to achieve this (in the LM tree):\n\n         ...\n          |\n       parentLM\n          |\n  RetrieveMarkerLM\n          |\n  InlineStackingLM\n       ---+---\n       |     |\n  chldLM1   chldLM2\n\nbut, as a marker can only have children which could replace its\nretrieve-marker, wouldn't it be better to have just:\n\n         ...\n          |\n       parentLM\n       ---+---\n       |     |\n  chldLM1   chldLM2\n\n(Luca Furini at fop-dev)\n", "is_private": false, "id": 67652, "creator": "spepping@apache.org", "time": "2004-11-30T21:23:28Z", "bug_id": 32253, "creation_time": "2004-11-30T21:23:28Z", "attachment_id": null}, {"count": 10, "tags": [], "text": "Removed RetrieveMarkerLM. The LMs of the marker children are attached in the LM\ntree as the direct children of the LM of the parent of the RetrieveMarker.", "is_private": false, "id": 68073, "creator": "spepping@apache.org", "time": "2004-12-07T21:12:25Z", "bug_id": 32253, "creation_time": "2004-12-07T21:12:25Z", "attachment_id": null}, {"count": 11, "tags": [], "bug_id": 32253, "text": "batch transition pre-FOP1.0 resolved+fixed bugs to closed+fixed", "id": 155920, "time": "2012-04-01T06:48:44Z", "creator": "gadams@apache.org", "creation_time": "2012-04-01T06:48:44Z", "is_private": false, "attachment_id": null}]