[{"count": 0, "tags": [], "bug_id": 56353, "is_private": false, "text": "I found a regression but in the behaviour certificates get loaded in apache 2.4.9. The same issue does not appear in 2.4.7 and is therefore a regression.\n\nWhen one defines a certificate in the global scope (outside any VirtualHost), all hosts deliver that certificate.\n\nExample config:\n\nSSLCertificateFile /etc/apache2/certs/test1.crt\nSSLCertificateKeyFile /etc/apache2/certs/test1.key\n<VirtualHost *:443>\n        ServerName test1.local\n        DocumentRoot /var/www/test1/\n        SSLEngine On\n</VirtualHost>\n<VirtualHost *:443>\n        ServerName test2.local\n        DocumentRoot /var/www/test2/\n        SSLEngine On\n        SSLCertificateFile /etc/apache2/certs/test2.crt\n        SSLCertificateKeyFile /etc/apache2/certs/test2.key\n</VirtualHost>\n\nWhat should happen: The first vhost (test1.local) should deliver test1.crt and the second host (test2.local) should deliver test2.crt.\nHowever, what happens is that both hosts deliver test1.crt.\n\nIt gets even weirder when one adds certificate chains. They still get delivered by vhosts. So if I e.g. add a certificate chain to test2.local in this example, I'll get test1.crt with the chain defined in test2.local.", "id": 174311, "time": "2014-04-06T11:44:06Z", "creator": "hanno@hboeck.de", "creation_time": "2014-04-06T11:44:06Z", "attachment_id": null}, {"count": 1, "tags": [], "text": "Created attachment 31485\nReverse apr_array_append order with cfgMergeArray\n\n(In reply to hanno from comment #0)\n> When one defines a certificate in the global scope (outside any\n> VirtualHost), all hosts deliver that certificate.\n\nTrue, I can confirm (I realized this when looking into bug 56306).\n\nCan you try the attached patch with 2.4.9 and let us know if it addresses your issue?\n\n> It gets even weirder when one adds certificate chains. They still get\n> delivered by vhosts. So if I e.g. add a certificate chain to test2.local in\n> this example, I'll get test1.crt with the chain defined in test2.local.\n\nWhat version of OpenSSL are you using, and how exactly do you \"add a certificate chain\" - with SSLCertificateChainFile, or by including it in the file pointed to by SSLCertificateFile?\n\n(Note that for an SNI setup, it doesn't make much sense to have global-level SSLCertificate[Key]File settings - the default cert should simply go into the first VirtualHost block.)", "attachment_id": 31485, "id": 174315, "creator": "asfbugz@velox.ch", "time": "2014-04-07T04:38:20Z", "bug_id": 56353, "creation_time": "2014-04-07T04:38:20Z", "is_private": false}, {"count": 2, "tags": [], "bug_id": 56353, "attachment_id": null, "id": 174316, "time": "2014-04-07T04:46:29Z", "creator": "hanno@hboeck.de", "creation_time": "2014-04-07T04:46:29Z", "is_private": false, "text": "(In reply to Kaspar Brand from comment #1)\n> Created attachment 31485 [details]\n> Reverse apr_array_append order with cfgMergeArray\n[...]\n> Can you try the attached patch with 2.4.9 and let us know if it addresses\n> your issue?\n\nYeah, patch fixes it, everything seems back to normal. Will re-test with my real server setup, but local tests seem fine.\n\n> > It gets even weirder when one adds certificate chains. They still get\n> > delivered by vhosts. So if I e.g. add a certificate chain to test2.local in\n> > this example, I'll get test1.crt with the chain defined in test2.local.\n> \n> What version of OpenSSL are you using, and how exactly do you \"add a\n> certificate chain\" - with SSLCertificateChainFile, or by including it in the\n> file pointed to by SSLCertificateFile?\n\nWith SSLCertificateChainFile and openssl 1.0.1f.\n(I'm aware that 2.4.9 warns it is considered deprecated. I'm not happy with that, but this is outside the scope of this bug report, I may comment on that on the dev ml)\n\n> (Note that for an SNI setup, it doesn't make much sense to have global-level\n> SSLCertificate[Key]File settings - the default cert should simply go into\n> the first VirtualHost block.)\n\nNo, that doesn't work. If I set no global cert and have vhosts without their own cert apache simply won't start. (log says \"SSL Library Error: error:140A80B1:SSL routines:SSL_CTX_check_private_key:no certificate assigned\")"}, {"count": 3, "tags": [], "bug_id": 56353, "attachment_id": null, "is_private": false, "id": 174398, "time": "2014-04-09T10:00:12Z", "creator": "asfbugz@velox.ch", "creation_time": "2014-04-09T10:00:12Z", "text": "(In reply to hanno from comment #2)\n> Yeah, patch fixes it, everything seems back to normal. Will re-test with my\n> real server setup, but local tests seem fine.\n\nThanks for testing/confirming. I have committed this to trunk with r1585918 and proposed for backport to 2.4.x in r1585922.\n\n> > (Note that for an SNI setup, it doesn't make much sense to have global-level\n> > SSLCertificate[Key]File settings - the default cert should simply go into\n> > the first VirtualHost block.)\n> \n> No, that doesn't work. If I set no global cert and have vhosts without their\n> own cert apache simply won't start. (log says \"SSL Library Error:\n> error:140A80B1:SSL routines:SSL_CTX_check_private_key:no certificate\n> assigned\")\n\nIt's not yet clear to me what the use for this is - SNI is mostly about configuring an individual cert for each VirtualHost (not multiple vhosts sharing the same cert), so I wonder why you need globally configured \"fallback\" SSLCertificate[Key]File directives. Can you perhaps give more details on the rationale for such a setup?"}, {"count": 4, "tags": [], "text": "> Can you perhaps give more details on the rationale for such a setup?\n\nI thought it's pretty obvious, but I can give you some details:\n\nWe have a server running with a default wildcard-certificate for *.schokokeks.org. So basically first we have a number of vhosts that share this certificate (config.schokokeks.org, webmail.schokokeks.org etc) and don't need any SNI at all.\n\nThen we have a large number of customer vhosts on other domains. Some of those have their own certificate, so it gets added to the vhost via SNI. But obviously, not everyone gets his own certificate, so there are also a number of domains that don't have a valid certificate at all. However, we still make these hosts available through https, so the customers can add exceptions to their browser if they want to privately access the page via https.\n\nI could obviously add the default certificate to every vhost that doesn't have its own. But this would blow up the configuration a lot for no gain and adds unneccesarry complexity.", "is_private": false, "id": 174486, "creator": "hanno@hboeck.de", "time": "2014-04-11T15:31:22Z", "bug_id": 56353, "creation_time": "2014-04-11T15:31:22Z", "attachment_id": null}, {"count": 5, "tags": [], "bug_id": 56353, "attachment_id": null, "text": "Hanno, I have attached a more thorough fix for merging global and per-vhost settings to bug 56306 (attachment 31531). Would appreciate if you could give it a try and let me know if it's working for your setup as well.", "id": 174612, "time": "2014-04-16T08:09:15Z", "creator": "asfbugz@velox.ch", "creation_time": "2014-04-16T08:09:15Z", "is_private": false}, {"count": 6, "tags": [], "bug_id": 56353, "attachment_id": null, "id": 174692, "time": "2014-04-18T08:40:32Z", "creator": "asfbugz@velox.ch", "creation_time": "2014-04-18T08:40:32Z", "is_private": false, "text": "(In reply to Kaspar Brand from comment #3)\n> and proposed for backport to 2.4.x in r1585922.\n\nCommitted to 2.4.x with r1588245. To appear in 2.4.10."}, {"count": 7, "tags": [], "creator": "christophe.jaillet@wanadoo.fr", "attachment_id": null, "id": 177228, "time": "2014-08-18T07:50:02Z", "bug_id": 56353, "creation_time": "2014-08-18T07:50:02Z", "is_private": false, "text": "Fixed and released in 2.4.10"}]