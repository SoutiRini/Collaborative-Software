[{"count": 0, "attachment_id": 25675, "creator": "jayvdb@gmail.com", "text": "Created attachment 25675\nmsys/mingw support for httpd 2.3.6\n\nA few changes are needed in order to build httpd under msys/mingw.\n\nI am using (uname -a):\nMINGW32_NT-5.1 DHZZBH1S 1.0.11(0.46/3/2) 2009-07-11 17:46 i686 Msys\n\nserver/mpm/winnt/config3.m4:\n\nThe msys library 'mswsock' is required for me.  I am not sure whether this is available/required in earlier versions of msys.\n\nOne way to ensure this always works is to use AX_CHECK_DLL_FUNC, which is included in APR.\n\nhttp://marc.info/?l=apr-dev&m=114506483818517&w=2\n\nMaybe there is a better way?\n\nserver/Makefile.in\nsupport/Makefile.in\n\nPrograms checkgid & fcgistarter are don't compile on Windows.\nSource file mpm_unix.c isnt needed on Windows.\n\n\nmod_file_cache:\n  not supported with APR on Windows\n  see #error at mod_file_cache.c:74\n\nmod_cgid:\n  httpd code doesn't support Windows\n  see #error at mod_cgid.c:1375\n\nmod_authz_dbd\nmod_cache\nmod_watchdog\nmod_dbd\nmod_dav\nmod_ratelimit\nmod_status\nmod_lua\nmod_proxy\nmod_session:\n\nCurrently the header files are using definitions (like AUTHZ_DBD_DECLARE_EXPORT) that are only provided by the dsp files.\nEither the dsp files need to use define's that are common to the unix headers, or the msys build needs to define the same defines as in the dsp files.\n\nmpm_common.h:\n  several symbols need to be removed with ifdef so that they don't end up in exports.c\n\nos/win32/os.h\n\nhttp://marc.info/?l=apr-dev&m=114506486425193&w=2\n\nserver/mpm/winnt/mpm_winnt.c:\n\nSTACK_SIZE_PARAM_IS_A_RESERVATION is missing in my w32api", "id": 138047, "time": "2010-07-01T02:21:14Z", "bug_id": 49535, "creation_time": "2010-07-01T02:21:14Z", "tags": [], "is_private": false}, {"count": 1, "attachment_id": null, "bug_id": 49535, "text": "picking a random Windows variation so I can find this in a query", "id": 145621, "time": "2011-04-07T11:31:14Z", "creator": "trawick@apache.org", "creation_time": "2011-04-07T11:31:14Z", "tags": [], "is_private": false}, {"count": 2, "tags": [], "creator": "trawick@apache.org", "text": "Some trunk commits either from your patch or alternative implementations:\n\nr1089954: your fix for os/win32/os.h for gcc compatibility\nr1089950: my fix to disable fcgistarter and checkgid; I don't think the Makefile trick you used is portable\nr1089951: my fix to choose mod_cgi instead of mod_cgid as the default\n\nThis leaves a fair amount of your patch remaining; I anticipate that I'll continue working through it.", "id": 145625, "time": "2011-04-07T15:46:29Z", "bug_id": 49535, "creation_time": "2011-04-07T15:46:29Z", "is_private": false, "attachment_id": null}, {"count": 3, "tags": [], "bug_id": 49535, "text": "Handling the linkage (dllimport vs. dllexport vs. static):\n\nAs I understand it, for a sane build we have to use distinct foo_DECLARE_EXPORT symbols for each separate unit which exports APIs.\n\n* core (anything in libhttpd.dll) needs to have AP_DECLARE_EXPORT defined.\n* mod_proxy needs to have PROXY_DECLARE_EXPORT defined but not AP_DECLARE_EXPORT. (same for other modules which export APIs)\n* building a module with apxs can't have any of the foo_DECLARE_EXPORT symbols defined\n\nCurrently for MinGW, AP_DECLARE_EXPORT is set globally for core+modules and leaked to apxs builds.\n\nYour patch builds on that global setting of AP_DECLARE_EXPORT by essentially enabling all foo_DECLARE_EXPORT logic if AP_DECLARE_EXPORT is defined.\n\nAre you enabling all modules statically?  If you built modules as DSOs and they work, I probably don't understand how it is supposed to work ;)\n\nThanks!", "id": 145660, "time": "2011-04-08T17:38:29Z", "creator": "trawick@apache.org", "creation_time": "2011-04-08T17:38:29Z", "is_private": false, "attachment_id": null}, {"count": 4, "tags": [], "creator": "trawick@apache.org", "attachment_id": null, "text": "Final commit for this PR: r1090614\n\nAgain, I bypassed the Makefile.in tweak with another solution as I don't think that is portable to BSD make.\n\nHere are the aspects of your patch which haven't yet been addressed and should be handled by individual PRs:\n\n-lmswsock:\nnot needed in my experience, perhaps because of fixes in APR trunk???\n\nconfig-time check for usability of mod_file_cache:\nhandle this with a separate PR\nas for MinGW in the short term, --disable-file-cache works\n\nall the dll import/export stuff:\nneed better fix\nas for MinGW in the short term, --disable problematic modules, of which there are admittedly too many :(", "id": 145670, "time": "2011-04-09T12:11:38Z", "bug_id": 49535, "creation_time": "2011-04-09T12:11:38Z", "is_private": false}, {"count": 5, "tags": [], "text": "now in 2.2.18-dev", "is_private": false, "bug_id": 49535, "id": 145790, "time": "2011-04-14T15:31:32Z", "creator": "trawick@apache.org", "creation_time": "2011-04-14T15:31:32Z", "attachment_id": null}]