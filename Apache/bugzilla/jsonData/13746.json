[{"count": 0, "tags": [], "creator": "Terry.Rosenbaum@gmail.com", "text": "This was originally posted to xindice-dev by Mike Gratton:\n\nI'm trying to work out the intent behind DocumentImpl.importNamespaces() \nbecause that method is causing some broken query output to be generated \nat the moment. For an example:\n\n<?xml version=\"1.0\" encoding=\"ANSI_X3.4-1968\"?>\n<xapi:resourceSet\n   xapi:collectionURI=\"xmldb:xindice:///db/focus/data\"\n   xmlns:xapi=\"http://www.xmldb.org/xapi/ResourceSet\">\n\n   <xapi:resource xapi:documentID=\"metalprices-01_08_2000.xml\">\n\n     <metalprices\n       xmlns:src=\"http://xml.apache.org/xindice/Query\"\n       src:col=\"/db/focus/data\" src:key=\"metalprices-01_08_2000.xml\">\n\n       <exchange name=\"USD exchange rate\" \nxmlns:src=\"http://xml.apache.org/xindice/Query\">\n\t<high xmlns:src=\"http://xml.apache.org/xindice/Query\">\n\t  <current \nxmlns:src=\"http://xml.apache.org/xindice/Query\">0.5813</current>\n\n[snip]\n\nand so on. Note the redeclaration of the 'src' namespace prefix on all \ndescendants of the 'metalprices' element.\n\nThe culprit is obviously the recursive nature of the importNamespaces(); \nany NS declarations between the current element and the doument will be \nduplicated on the current element, as is aparent in the fragment above. \nThe problem is, I can't work out why it's there at all, when all it is \ndoing is copying any NS declarations to the current element, which is \nuseless, as far as I can tell.\n\nWhat it should be doing is checking the imported element to ensure that \nif it or any of it's attributes have prefixes, then those prefixes \nshould map to a valid namespace. If they do not, then it should declare \nthe namespace if it knows what that namespace should be, and probably \nerror out if it does not.\n\nAnyway, after commenting out the call to importNamespace() in \nDocumentImpl.importNode(), the output from the query that produced the \nabove output is okay - it doesn't have the src prefix redeclared on \nevery element.\n\nDoes anyone have any suggestions as to why importNamespaces() should \nstay as it is, before I attempt to fix it?\n\nMike.", "id": 24801, "time": "2002-10-17T16:15:29Z", "bug_id": 13746, "creation_time": "2002-10-17T16:15:29Z", "is_private": false, "attachment_id": null}, {"count": 1, "tags": [], "bug_id": 13746, "text": "Please submit a patch in diff -u format.  I'll review and commit it.  Thanks", "id": 38097, "time": "2003-05-31T00:02:09Z", "creator": "Kevin.Ross@iVerticalLeap.com", "creation_time": "2003-05-31T00:02:09Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 13746, "attachment_id": null, "id": 38409, "time": "2003-06-05T06:59:03Z", "creator": "Terry.Rosenbaum@gmail.com", "creation_time": "2003-06-05T06:59:03Z", "is_private": false, "text": "I subsequently learned from Mike Gratton\nthat he was never able to determine the\nintent of this code. Since neither he\nnor I was using namespaces, we both took\nthe simple way out - commented out the\ncall to importNamespaces in both places\nit appears in the\norg.apache.xindice.xml.dom.DocumentImpl\nclass.\n\nTo actually fix the problem,\npossibly a namespace should be imported\nonly if it is not already present in\nscope (namespace with same name and URI\npresent in node or ancestors) and is actually\nin use. Note that it is important to check the\nURI - the name could be reused and override a\ndefinition higher in the tree.\n\nMaybe eaiser and/or cheaper to just import instead\nof check - maybe that's why it was done this way.\nOf course this leads to bloated documents...\n\nNeither myself nor anyone I'm aware of has\nimplemented a \"correct\" patch for this issue.\n\nThose that don't use namespaces and want to\nget rid of the \"junk\" have just commented\nout the importNamespaces calls.\n"}, {"count": 3, "tags": [], "text": "I've added testSrcAddedToRootOnly to the XPathQueryTest\n(http://cvs.apache.org/viewcvs.cgi/xml-xindice/java/tests/src/org/apache/xindice/integration/client/services/XPathQueryTest.java?rev=1.5&content-type=text/vnd.viewcvs-markup)\n\nThis passes with the current codebase, so either the changes I've made recently\nhave fixed the problem OR the test is wrong. I'm setting this issue to fixed. If\nthe test is wrong please reopen this bug.\n\nAn issue still remains with regard to the src prefix conflicting with an\nexisting src prefix. This has been created as Bug#: 22122.", "attachment_id": null, "id": 42113, "creator": "kevin@rocketred.com.au", "time": "2003-08-04T23:56:48Z", "bug_id": 13746, "creation_time": "2003-08-04T23:56:48Z", "is_private": false}]