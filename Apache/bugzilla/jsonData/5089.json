[{"count": 0, "tags": [], "creator": "peter@infopop.com", "attachment_id": null, "text": "I'm getting the following stack dump...  There appears to be some set of XML \nthat causes this error (sorry I am not able to figure out the XML that causes \nit...)\n\njava.lang.InternalError: fillbuf\njava.lang.InternalError: fillbuf\n\tat org.apache.crimson.parser.InputEntity.parsedContent(InputEntity.java\n(Compiled Code))\n\tat org.apache.crimson.parser.Parser2.content(Parser2.java(Compiled \nCode))\n\tat org.apache.crimson.parser.Parser2.maybeElement(Parser2.java(Compiled \nCode))\n\tat org.apache.crimson.parser.Parser2.content(Parser2.java(Compiled \nCode))\n\tat org.apache.crimson.parser.Parser2.maybeElement(Parser2.java(Compiled \nCode))\n\tat org.apache.crimson.parser.Parser2.content(Parser2.java(Compiled \nCode))\n\tat org.apache.crimson.parser.Parser2.maybeElement(Parser2.java(Compiled \nCode))\n\tat org.apache.crimson.parser.Parser2.content(Parser2.java(Compiled \nCode))\n\tat org.apache.crimson.parser.Parser2.maybeElement(Parser2.java(Compiled \nCode))\n\tat org.apache.crimson.parser.Parser2.content(Parser2.java(Compiled \nCode))\n\tat org.apache.crimson.parser.Parser2.maybeElement(Parser2.java(Compiled \nCode))\n\tat org.apache.crimson.parser.Parser2.parseInternal(Parser2.java\n(Compiled Code))\n\tat org.apache.crimson.parser.Parser2.parse(Parser2.java(Compiled Code))\n\tat org.apache.crimson.parser.XMLReaderImpl.parse(XMLReaderImpl.java\n(Compiled Code))", "id": 8264, "time": "2001-11-26T06:53:08Z", "bug_id": 5089, "creation_time": "2001-11-26T06:53:08Z", "is_private": false}, {"count": 1, "tags": [], "text": "Edwin - you can decide if you want to track Crimson-related problems here or \nnot, since Crimson doesn't have it's own bugzilla category yet, does it?", "attachment_id": null, "id": 8265, "creator": "curcuru@apache.org", "time": "2001-11-26T07:08:04Z", "bug_id": 5089, "creation_time": "2001-11-26T07:08:04Z", "is_private": false}, {"count": 2, "tags": [], "creator": "edwingo@apache.org", "text": "To fix this, I need some way of reproducing the bug.  Please provide a\nsimple reproducible test case.  Also, this could be fixed already.\nHave you tried the latest version of Crimson 1.1.3?\n", "id": 8267, "attachment_id": null, "bug_id": 5089, "creation_time": "2001-11-26T09:12:33Z", "time": "2001-11-26T09:12:33Z", "is_private": false}, {"count": 3, "tags": [], "creator": "peter@infopop.com", "text": "The following patch fixes the problems, I've tested it as well as I can.  This \nis the second problem (other was CDATA problem) which is caused by \"end of \nbuffer\" conditions.  I have emailled Edwin a test harness for detecting these \nproblems.\n\nIndex: InputEntity.java\n===================================================================\nRCS file: /home/cvspublic/xml-\ncrimson/src/org/apache/crimson/parser/InputEntity.java,v\nretrieving revision 1.3\ndiff -u -p -w -r1.3 InputEntity.java\n--- InputEntity.java    2001/09/29 00:44:34     1.3\n+++ InputEntity.java    2001/11/27 23:56:06\n@@ -530,6 +530,7 @@ final class InputEntity implements Locat\n \n            // ']]>' is a WF error -- must fail if we see it\n            if (c == ']') {\n+                int cdataCheckPosAfterFillBuff = 0;\n                switch (finish - last) {\n                  // for suspicious end-of-buffer cases, get more data\n                  // into the buffer to rule out this sequence.\n@@ -541,18 +542,44 @@ final class InputEntity implements Locat\n                  case 1:\n                    if (reader == null || isClosed)\n                        continue;\n-                   if (last == first)\n-                       throw new InternalError (\"fillbuf\");\n-                   last--;\n-                   if (last > first) {\n+                    // ok, we'll need to do a fillbuf in order to read ahead \nhere\n+                    // this is number of chars we'll need to check after the \nfillbuf\n+                    int cdataCheckCount = finish - last == 2 ? 1 : 2;\n+\n+                    // consume the available buf chars\n+                    {\n                        validator.text ();\n-                       contentHandler.characters (buf, first, last - first);\n+                        contentHandler.characters (buf, first, finish-first);\n                        sawContent = true;\n-                       start = last;\n                    }\n-                   fillbuf ();\n+                    // refill the buffer and deal with eof\n+                    {\n+                        first = last = start = finish;\n+                        // fillbuf called\n+                        if(isEOF()) {\n+                            // = start because of a pushback char at the \nstart, not 0!\n                    first = last = start;\n                    continue;\n+                        }\n+                        first = last = start;\n+                    }\n+                    // check if the refilled buffer has the bad chars\n+                    {\n+                        // not enough chars\n+                        if(finish<cdataCheckCount)\n+                            continue;\n+                        if(cdataCheckCount==1) {\n+                            if(buf[0]=='>')\n+                                fatal (\"P-072\", null);\n+                        } else {\n+                            if(buf[0]==']' && buf[1]=='>')\n+                                fatal (\"P-072\", null);\n+                        }\n+                        // nb: we haven't consumed these chars yet, that will \nhappen later\n+                    }\n+                    // last is where we want it right now, the for loop will \ndo a ++ next\n+                    last--;\n+                    continue;\n \n                  // otherwise any \"]]>\" would be buffered, and we can\n                  // see right away if that's what we have", "id": 8363, "attachment_id": null, "bug_id": 5089, "creation_time": "2001-11-27T16:16:34Z", "time": "2001-11-27T16:16:34Z", "is_private": false}, {"count": 4, "tags": [], "creator": "peter@infopop.com", "text": "*** Bug 4947 has been marked as a duplicate of this bug. ***", "id": 8518, "attachment_id": null, "bug_id": 5089, "creation_time": "2001-12-02T16:31:18Z", "time": "2001-12-02T16:31:18Z", "is_private": false}, {"count": 5, "tags": [], "bug_id": 5089, "attachment_id": null, "id": 62528, "time": "2004-08-26T10:41:52Z", "creator": "kent@kentsjohnson.com", "creation_time": "2004-08-26T10:41:52Z", "is_private": false, "text": "Please fix this and get the fix to Sun for inclusion with a Java release! I have\na customer who uses ]] frequently in text data. They have tripped over this bug\ntwice."}, {"count": 6, "tags": [], "bug_id": 5089, "attachment_id": null, "id": 88845, "time": "2006-05-05T19:07:26Z", "creator": "james@carmanconsulting.com", "creation_time": "2006-05-05T19:07:26Z", "is_private": false, "text": "Has this bug been fixed?"}, {"count": 7, "tags": [], "creator": "mrglavas@ca.ibm.com", "text": "Ancient bug report against Crimson. Not an XML Commons issue.\n\nNote that Crimson which has had no activity in years will likely soon be retired to the Apache Attic. It's unlikely that any problems reported against it will ever be fixed.", "id": 135144, "attachment_id": null, "bug_id": 5089, "creation_time": "2010-03-07T15:29:53Z", "time": "2010-03-07T15:29:53Z", "is_private": false}]