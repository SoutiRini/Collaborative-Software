[{"count": 0, "tags": [], "bug_id": 57566, "attachment_id": null, "text": "Apache-2.4.7 added the feature: the DH standardized parameters are applied based on the certificate's RSA/DSA key size.\n\nThe DH parameters for something like TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 applied based on the certificate's RSA/DSA key size is 2048-bit if I use only a 2048-bit RSA certificate.\n\nBut the DH parameters applied based on the certificate's RSA/DSA key size is 1024-bit if I use both a 2048-bit RSA certificate and a 256-bit ECC certificate AND Use \"SSLCertificateFile ecc.crt\" AFTER \"SSLCertificateFile rsa.crt\" in config file.\n\nI think it should ignore the ECC certificate's key size and generates the DH parameter which length is same as the RSA certificate.", "id": 180943, "time": "2015-02-11T09:18:35Z", "creator": "ztlizitian@gmail.com", "creation_time": "2015-02-11T09:18:35Z", "is_private": false}, {"count": 1, "tags": [], "creator": "asfbugz@velox.ch", "text": "This is a limitation of OpenSSL up to 1.0.1. It is fixed in 2.4.10 when compiled mod_ssl against OpenSSL 1.0.2 (r1588851 is the backport to 2.4.x).\n\nSee also this thread on the dev list:\n\nhttps://mail-archives.apache.org/mod_mbox/httpd-dev/201404.mbox/%3C53521571.6020804@velox.ch%3E", "id": 180964, "time": "2015-02-11T17:15:30Z", "bug_id": 57566, "creation_time": "2015-02-11T17:15:30Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 57566, "attachment_id": null, "is_private": false, "id": 180989, "time": "2015-02-12T02:52:54Z", "creator": "ztlizitian@gmail.com", "creation_time": "2015-02-12T02:52:54Z", "text": "Now I have recompiled 2.4.12 with openssl 1.0.2.\nDH param is 2048-bit now but ECDH param becomes 571-bit."}, {"count": 3, "tags": [], "creator": "asfbugz@velox.ch", "text": "(In reply to Zitian Li from comment #2)\n> but ECDH param becomes 571-bit.\n\nOf course. ECDHE_ECDSA is definitely not the same as DHE_RSA (and neither is ECDHE_RSA). I suggest you study RFCs 4492 and 5246, e.g.\n\nASF Bugzilla is for reporting httpd bugs, not for user support.", "id": 181039, "attachment_id": null, "bug_id": 57566, "creation_time": "2015-02-13T06:05:31Z", "time": "2015-02-13T06:05:31Z", "is_private": false}, {"count": 4, "tags": [], "creator": "ztlizitian@gmail.com", "is_private": false, "id": 181043, "attachment_id": null, "bug_id": 57566, "creation_time": "2015-02-13T08:45:53Z", "time": "2015-02-13T08:45:53Z", "text": "(In reply to Kaspar Brand from comment #3)\n> Of course. ECDHE_ECDSA is definitely not the same as DHE_RSA (and neither is\n> ECDHE_RSA). I suggest you study RFCs 4492 and 5246, e.g.\n\nWhat I mean is, if I use a single 256-bit ECC certificate, the EC param is 256-bit. But if I use both 2048-bit RSA and 256-bit ECC certificate, AND Use \"SSLCertificateFile ecc.crt\" AFTER \"SSLCertificateFile rsa.crt\" in config file, the EC param of ECDHE_ECDSA and ECDHE_RSA is 571-bit."}]