[{"count": 0, "tags": [], "creator": "king.rizzo@hotmail.com", "attachment_id": null, "id": 169148, "time": "2013-08-05T19:06:54Z", "bug_id": 55362, "creation_time": "2013-08-05T19:06:54Z", "is_private": false, "text": "An Apple AirPrint Internet Printing Protocol (IPP) client (from either iOS or Mac OS) can send requests over IPv6 with an IPvFuture format (RFC 3986) IPv6 address in the Hostname HTTP Host Header value.  The Hostname is of the form [v1:<ipv6 addr>+en0].   Where en0 is the interface of the requesting Mac.\n\nThe Apache HTTP server is rejecting the request (with \"400 Bad Request\") due to this Hostname value in the header before a registered IPP Apache module even sees it.\n\nThe following is what is seen in the Apache log file:\n\n[Fri Aug 02 11:36:06 2013] [error] [client fe80::12dd:b1ff:fed6:d654] Client sent malformed Host header\n[Fri Aug 02 11:36:06 2013] [error] [client 2620:0:290:e012:12dd:b1ff:fed6:d654] Client sent malformed Host header\n\nand the Apache code that is logging this error appears to be fix_hostname() in ./server/vhost.c"}, {"count": 1, "tags": [], "creator": "sf@sfritsch.de", "text": "AFAICS, RFC 3986 does not define v1 of the IPvFuture format. Instead it says \n\n   If a URI\n   containing an IP-literal that starts with \"v\" (case-insensitive),\n   indicating that the version flag is present, is dereferenced by an\n   application that does not know the meaning of that version flag, then\n   the application should return an appropriate error for \"address\n   mechanism not supported\".\"\n\nReturning a 400 seems to fullfill this requirement. Unless we can make sure that all code that comes in contact with such addresses can handle the different format, I don't think we should change this behavior.\n\nAlso, v1 seems to be only specified by draft-fenner-literal-zone-02 which has not become an RFC.", "id": 169287, "time": "2013-08-07T22:00:35Z", "bug_id": 55362, "creation_time": "2013-08-07T22:00:35Z", "is_private": false, "attachment_id": null}, {"count": 2, "tags": [], "bug_id": 55362, "attachment_id": null, "text": "Is there a way thru either filters or hooks, that a 3rd party can put in an add-on module to modify this rejection behavior?  It appears that Apache rejects the request before any 3rd party code can see it.  I've posted requests for information on the support mailing lists, but did not get any information on this. I was only told to write a bug.", "id": 169371, "time": "2013-08-12T16:05:02Z", "creator": "king.rizzo@hotmail.com", "creation_time": "2013-08-12T16:05:02Z", "is_private": false}, {"count": 3, "tags": [], "creator": "king.rizzo@hotmail.com", "text": "Also note - it is our understanding that Apple (Michael Sweet) is working with IETF to have the IPvFuture format become standard, possibly as an addendum to RFC 3986, but we are unable to locate the status of this effort.", "id": 169372, "attachment_id": null, "bug_id": 55362, "creation_time": "2013-08-12T16:12:40Z", "time": "2013-08-12T16:12:40Z", "is_private": false}, {"count": 4, "tags": [], "creator": "king.rizzo@hotmail.com", "text": "The following standards document:\n\nhttp://tools.ietf.org/html/draft-sweet-uri-zoneid-00\n\nUpdates URI generic syntax defined in RFC 3986 and is intended to replace RFC 6874.\n\nThe state of this draft can be tracked here:\n\nhttp://datatracker.ietf.org/doc/draft-sweet-uri-zoneid/\n\nOf course, this is not yet an accepted standard, at what point can Apache determine that this should be accepted and thus support added?\n\nThanks.", "id": 169996, "time": "2013-09-09T21:19:55Z", "bug_id": 55362, "creation_time": "2013-09-09T21:19:55Z", "is_private": false, "attachment_id": null}]